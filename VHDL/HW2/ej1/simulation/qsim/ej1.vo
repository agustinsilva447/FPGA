// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "04/19/2021 16:49:20"

// 
// Device: Altera EP4CE22F17C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ej1 (
	d,
	q);
input 	[2:0] d;
output 	[1:0] q;

// Design Ports Information
// q[0]	=>  Location: PIN_L3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// q[1]	=>  Location: PIN_L2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// d[0]	=>  Location: PIN_L1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// d[1]	=>  Location: PIN_K5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// d[2]	=>  Location: PIN_N2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("ej1_v.sdo");
// synopsys translate_on

wire \q[0]~output_o ;
wire \q[1]~output_o ;
wire \d[2]~input_o ;
wire \d[1]~input_o ;
wire \d[0]~input_o ;
wire \num_bits~0_combout ;
wire \num_bits~1_combout ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y10_N23
cycloneive_io_obuf \q[0]~output (
	.i(\num_bits~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[0]~output .bus_hold = "false";
defparam \q[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y11_N2
cycloneive_io_obuf \q[1]~output (
	.i(\num_bits~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[1]~output .bus_hold = "false";
defparam \q[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y8_N22
cycloneive_io_ibuf \d[2]~input (
	.i(d[2]),
	.ibar(gnd),
	.o(\d[2]~input_o ));
// synopsys translate_off
defparam \d[2]~input .bus_hold = "false";
defparam \d[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y7_N8
cycloneive_io_ibuf \d[1]~input (
	.i(d[1]),
	.ibar(gnd),
	.o(\d[1]~input_o ));
// synopsys translate_off
defparam \d[1]~input .bus_hold = "false";
defparam \d[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \d[0]~input (
	.i(d[0]),
	.ibar(gnd),
	.o(\d[0]~input_o ));
// synopsys translate_off
defparam \d[0]~input .bus_hold = "false";
defparam \d[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N16
cycloneive_lcell_comb \num_bits~0 (
// Equation(s):
// \num_bits~0_combout  = \d[2]~input_o  $ (\d[1]~input_o  $ (\d[0]~input_o ))

	.dataa(\d[2]~input_o ),
	.datab(gnd),
	.datac(\d[1]~input_o ),
	.datad(\d[0]~input_o ),
	.cin(gnd),
	.combout(\num_bits~0_combout ),
	.cout());
// synopsys translate_off
defparam \num_bits~0 .lut_mask = 16'hA55A;
defparam \num_bits~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N10
cycloneive_lcell_comb \num_bits~1 (
// Equation(s):
// \num_bits~1_combout  = (\d[2]~input_o  & ((\d[1]~input_o ) # (\d[0]~input_o ))) # (!\d[2]~input_o  & (\d[1]~input_o  & \d[0]~input_o ))

	.dataa(\d[2]~input_o ),
	.datab(gnd),
	.datac(\d[1]~input_o ),
	.datad(\d[0]~input_o ),
	.cin(gnd),
	.combout(\num_bits~1_combout ),
	.cout());
// synopsys translate_off
defparam \num_bits~1 .lut_mask = 16'hFAA0;
defparam \num_bits~1 .sum_lutc_input = "datac";
// synopsys translate_on

assign q[0] = \q[0]~output_o ;

assign q[1] = \q[1]~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_C1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_D2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_H1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_H2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_F16,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
