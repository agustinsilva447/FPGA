// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "04/20/2021 10:23:11"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          ej3
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module ej3_vlg_vec_tst();
// constants                                           
// general purpose registers
reg a;
reg b;
reg c;
reg clearn;
reg clock;
reg d0;
reg d1;
reg d2;
reg d3;
reg d4;
reg d5;
reg d6;
reg d7;
reg data;
reg gn;
reg presetn;
// wires                                               
wire q_out;
wire wn;
wire y;

// assign statements (if any)                          
ej3 i1 (
// port map - connection between master ports and signals/registers   
	.a(a),
	.b(b),
	.c(c),
	.clearn(clearn),
	.clock(clock),
	.d0(d0),
	.d1(d1),
	.d2(d2),
	.d3(d3),
	.d4(d4),
	.d5(d5),
	.d6(d6),
	.d7(d7),
	.data(data),
	.gn(gn),
	.presetn(presetn),
	.q_out(q_out),
	.wn(wn),
	.y(y)
);
initial 
begin 
#1000000 $finish;
end 

// a
initial
begin
	a = 1'b0;
end 

// b
initial
begin
	b = 1'b0;
end 

// c
initial
begin
	c = 1'b0;
end 

// clearn
initial
begin
	clearn = 1'b0;
end 

// clock
always
begin
	clock = 1'b0;
	clock = #25000 1'b1;
	#25000;
end 

// d0
initial
begin
	d0 = 1'b0;
end 

// d1
initial
begin
	d1 = 1'b0;
end 

// d2
initial
begin
	d2 = 1'b0;
end 

// d3
initial
begin
	d3 = 1'b0;
end 

// d4
initial
begin
	d4 = 1'b0;
end 

// d5
initial
begin
	d5 = 1'b0;
end 

// d6
initial
begin
	d6 = 1'b0;
end 

// d7
initial
begin
	d7 = 1'b0;
end 

// data
initial
begin
	data = 1'b0;
end 

// gn
initial
begin
	gn = 1'b0;
end 

// presetn
initial
begin
	presetn = 1'b0;
end 
endmodule

