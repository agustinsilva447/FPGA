// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "nqueens.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic nqueens::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic nqueens::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> nqueens::ap_ST_fsm_state1 = "1";
const sc_lv<11> nqueens::ap_ST_fsm_state2 = "10";
const sc_lv<11> nqueens::ap_ST_fsm_state3 = "100";
const sc_lv<11> nqueens::ap_ST_fsm_state4 = "1000";
const sc_lv<11> nqueens::ap_ST_fsm_state5 = "10000";
const sc_lv<11> nqueens::ap_ST_fsm_state6 = "100000";
const sc_lv<11> nqueens::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> nqueens::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> nqueens::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> nqueens::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> nqueens::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> nqueens::ap_const_lv32_0 = "00000000000000000000000000000000";
const int nqueens::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> nqueens::ap_const_lv32_1 = "1";
const sc_lv<32> nqueens::ap_const_lv32_2 = "10";
const sc_lv<32> nqueens::ap_const_lv32_3 = "11";
const sc_lv<32> nqueens::ap_const_lv32_4 = "100";
const sc_lv<32> nqueens::ap_const_lv32_5 = "101";
const sc_lv<1> nqueens::ap_const_lv1_1 = "1";
const sc_lv<1> nqueens::ap_const_lv1_0 = "0";
const sc_lv<32> nqueens::ap_const_lv32_6 = "110";
const sc_lv<32> nqueens::ap_const_lv32_8 = "1000";
const sc_lv<32> nqueens::ap_const_lv32_9 = "1001";
const sc_lv<4> nqueens::ap_const_lv4_0 = "0000";
const sc_lv<32> nqueens::ap_const_lv32_A = "1010";
const sc_lv<7> nqueens::ap_const_lv7_0 = "0000000";
const sc_lv<31> nqueens::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> nqueens::ap_const_lv32_7 = "111";
const sc_lv<4> nqueens::ap_const_lv4_8 = "1000";
const sc_lv<4> nqueens::ap_const_lv4_1 = "1";
const sc_lv<7> nqueens::ap_const_lv7_64 = "1100100";
const sc_lv<7> nqueens::ap_const_lv7_1 = "1";
const sc_lv<31> nqueens::ap_const_lv31_1 = "1";
const sc_lv<32> nqueens::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> nqueens::ap_const_lv32_FFFFFFFE = "11111111111111111111111111111110";
const bool nqueens::ap_const_boolean_1 = true;

nqueens::nqueens(sc_module_name name) : sc_module(name), mVcdFile(0) {
    nqueens_AXILiteS_s_axi_U = new nqueens_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("nqueens_AXILiteS_s_axi_U");
    nqueens_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    nqueens_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    nqueens_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    nqueens_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    nqueens_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    nqueens_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    nqueens_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    nqueens_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    nqueens_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    nqueens_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    nqueens_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    nqueens_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    nqueens_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    nqueens_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    nqueens_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    nqueens_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    nqueens_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    nqueens_AXILiteS_s_axi_U->ACLK(ap_clk);
    nqueens_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    nqueens_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    nqueens_AXILiteS_s_axi_U->ap_start(ap_start);
    nqueens_AXILiteS_s_axi_U->interrupt(interrupt);
    nqueens_AXILiteS_s_axi_U->ap_ready(ap_ready);
    nqueens_AXILiteS_s_axi_U->ap_done(ap_done);
    nqueens_AXILiteS_s_axi_U->ap_idle(ap_idle);
    nqueens_AXILiteS_s_axi_U->ap_return(ap_phi_mux_sol_list_2_phi_fu_313_p4);
    a_U = new nqueens_a("a_U");
    a_U->clk(ap_clk);
    a_U->reset(ap_rst_n_inv);
    a_U->address0(a_address0);
    a_U->ce0(a_ce0);
    a_U->we0(a_we0);
    a_U->d0(a_d0);
    a_U->q0(a_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( a_addr_1_reg_568 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln17_reg_573 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln19_fu_372_p2 );
    sensitive << ( icmp_ln24_fu_389_p2 );
    sensitive << ( icmp_ln31_fu_466_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln34_fu_478_p2 );
    sensitive << ( zext_ln11_fu_335_p1 );
    sensitive << ( sext_ln16_fu_357_p1 );
    sensitive << ( zext_ln20_fu_384_p1 );
    sensitive << ( sext_ln38_fu_484_p1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln17_reg_573 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln19_fu_372_p2 );
    sensitive << ( icmp_ln24_fu_389_p2 );
    sensitive << ( icmp_ln31_fu_466_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln34_fu_478_p2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_a_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln17_reg_573 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln19_fu_372_p2 );
    sensitive << ( icmp_ln24_fu_389_p2 );
    sensitive << ( icmp_ln31_fu_466_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln34_fu_478_p2 );
    sensitive << ( u_0_4_reg_189 );

    SC_METHOD(thread_a_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln17_reg_573 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln19_fu_372_p2 );
    sensitive << ( icmp_ln24_fu_389_p2 );
    sensitive << ( icmp_ln31_fu_466_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln34_fu_478_p2 );
    sensitive << ( icmp_ln10_fu_323_p2 );

    SC_METHOD(thread_abs_fu_425_p3);
    sensitive << ( sub_ln20_fu_407_p2 );
    sensitive << ( abscond_fu_419_p2 );
    sensitive << ( neg_fu_413_p2 );

    SC_METHOD(thread_abscond_fu_419_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sub_ln20_fu_407_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( icmp_ln14_reg_559 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_phi_mux_phi_ln50_phi_fu_262_p4 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_k_2_phi_fu_237_p4);
    sensitive << ( icmp_ln31_reg_608 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( k_4_fu_496_p2 );
    sensitive << ( k_2_reg_234 );

    SC_METHOD(thread_ap_phi_mux_k_aux_2_phi_fu_227_p4);
    sensitive << ( icmp_ln31_reg_608 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( k_aux_fu_503_p2 );
    sensitive << ( k_aux_2_reg_224 );

    SC_METHOD(thread_ap_phi_mux_phi_ln50_phi_fu_262_p4);
    sensitive << ( phi_ln50_reg_257 );

    SC_METHOD(thread_ap_phi_mux_sol_list_2_phi_fu_313_p4);
    sensitive << ( icmp_ln14_reg_559 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_phi_mux_phi_ln50_phi_fu_262_p4 );
    sensitive << ( sol_list_2_reg_310 );
    sensitive << ( sol_list_1_fu_60 );

    SC_METHOD(thread_ap_phi_mux_u_0_2_phi_fu_249_p4);
    sensitive << ( icmp_ln31_reg_608 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( u_0_fu_489_p2 );
    sensitive << ( u_0_2_reg_244 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln14_reg_559 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_phi_mux_phi_ln50_phi_fu_262_p4 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_count_fu_444_p2);
    sensitive << ( count_0_reg_201 );

    SC_METHOD(thread_icmp_ln10_fu_323_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( x_0_reg_98 );

    SC_METHOD(thread_icmp_ln14_fu_345_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( iteration_0_reg_109 );

    SC_METHOD(thread_icmp_ln17_fu_362_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( u_0_4_reg_189 );

    SC_METHOD(thread_icmp_ln19_fu_372_p2);
    sensitive << ( icmp_ln17_reg_573 );
    sensitive << ( zext_ln19_fu_368_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( k_1_reg_167 );

    SC_METHOD(thread_icmp_ln20_1_fu_438_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( abs_fu_425_p3 );
    sensitive << ( sub_ln20_1_fu_433_p2 );

    SC_METHOD(thread_icmp_ln20_fu_401_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( a_q0 );
    sensitive << ( u_0_4_reg_189 );

    SC_METHOD(thread_icmp_ln24_fu_389_p2);
    sensitive << ( icmp_ln17_reg_573 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln19_fu_372_p2 );
    sensitive << ( k_1_reg_167 );
    sensitive << ( count_0_reg_201 );

    SC_METHOD(thread_icmp_ln31_fu_466_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( a_q0 );

    SC_METHOD(thread_icmp_ln34_fu_478_p2);
    sensitive << ( icmp_ln31_fu_466_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( k_aux_1_reg_156 );

    SC_METHOD(thread_icmp_ln45_fu_522_p2);
    sensitive << ( k_5_fu_510_p2 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_iteration_fu_351_p2);
    sensitive << ( iteration_0_reg_109 );

    SC_METHOD(thread_j_fu_378_p2);
    sensitive << ( j_0_reg_213 );

    SC_METHOD(thread_k_4_fu_496_p2);
    sensitive << ( k_1_reg_167 );

    SC_METHOD(thread_k_5_fu_510_p2);
    sensitive << ( ap_phi_mux_k_2_phi_fu_237_p4 );

    SC_METHOD(thread_k_aux_4_fu_516_p2);
    sensitive << ( ap_phi_mux_k_aux_2_phi_fu_227_p4 );

    SC_METHOD(thread_k_aux_fu_503_p2);
    sensitive << ( k_aux_1_reg_156 );

    SC_METHOD(thread_k_fu_472_p2);
    sensitive << ( k_1_reg_167 );

    SC_METHOD(thread_neg_fu_413_p2);
    sensitive << ( sub_ln20_fu_407_p2 );

    SC_METHOD(thread_select_ln20_1_fu_458_p3);
    sensitive << ( count_0_reg_201 );
    sensitive << ( icmp_ln20_fu_401_p2 );
    sensitive << ( select_ln20_fu_450_p3 );

    SC_METHOD(thread_select_ln20_fu_450_p3);
    sensitive << ( count_0_reg_201 );
    sensitive << ( icmp_ln20_1_fu_438_p2 );
    sensitive << ( count_fu_444_p2 );

    SC_METHOD(thread_sext_ln16_fu_357_p1);
    sensitive << ( k_1_reg_167 );

    SC_METHOD(thread_sext_ln38_fu_484_p1);
    sensitive << ( k_fu_472_p2 );

    SC_METHOD(thread_sol_list_fu_528_p2);
    sensitive << ( sol_list_1_load_reg_553 );

    SC_METHOD(thread_sub_ln20_1_fu_433_p2);
    sensitive << ( zext_ln19_reg_577 );
    sensitive << ( k_1_reg_167 );

    SC_METHOD(thread_sub_ln20_fu_407_p2);
    sensitive << ( a_q0 );
    sensitive << ( u_0_4_reg_189 );

    SC_METHOD(thread_u_0_fu_489_p2);
    sensitive << ( a_q0 );

    SC_METHOD(thread_u_1_fu_395_p2);
    sensitive << ( u_0_4_reg_189 );

    SC_METHOD(thread_x_fu_329_p2);
    sensitive << ( x_0_reg_98 );

    SC_METHOD(thread_zext_ln11_fu_335_p1);
    sensitive << ( x_0_reg_98 );

    SC_METHOD(thread_zext_ln19_fu_368_p1);
    sensitive << ( j_0_reg_213 );

    SC_METHOD(thread_zext_ln20_fu_384_p1);
    sensitive << ( j_0_reg_213 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln14_fu_345_p2 );
    sensitive << ( icmp_ln14_reg_559 );
    sensitive << ( icmp_ln17_reg_573 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln19_fu_372_p2 );
    sensitive << ( icmp_ln24_fu_389_p2 );
    sensitive << ( icmp_ln31_fu_466_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln34_fu_478_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln10_fu_323_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_phi_mux_phi_ln50_phi_fu_262_p4 );
    sensitive << ( icmp_ln45_fu_522_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "nqueens_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, x_fu_329_p2, "x_fu_329_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sol_list_1_load_reg_553, "sol_list_1_load_reg_553");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln14_fu_345_p2, "icmp_ln14_fu_345_p2");
    sc_trace(mVcdFile, icmp_ln14_reg_559, "icmp_ln14_reg_559");
    sc_trace(mVcdFile, iteration_fu_351_p2, "iteration_fu_351_p2");
    sc_trace(mVcdFile, iteration_reg_563, "iteration_reg_563");
    sc_trace(mVcdFile, a_addr_1_reg_568, "a_addr_1_reg_568");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln17_fu_362_p2, "icmp_ln17_fu_362_p2");
    sc_trace(mVcdFile, icmp_ln17_reg_573, "icmp_ln17_reg_573");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln19_fu_368_p1, "zext_ln19_fu_368_p1");
    sc_trace(mVcdFile, zext_ln19_reg_577, "zext_ln19_reg_577");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, j_fu_378_p2, "j_fu_378_p2");
    sc_trace(mVcdFile, j_reg_585, "j_reg_585");
    sc_trace(mVcdFile, icmp_ln19_fu_372_p2, "icmp_ln19_fu_372_p2");
    sc_trace(mVcdFile, u_1_fu_395_p2, "u_1_fu_395_p2");
    sc_trace(mVcdFile, icmp_ln24_fu_389_p2, "icmp_ln24_fu_389_p2");
    sc_trace(mVcdFile, select_ln20_1_fu_458_p3, "select_ln20_1_fu_458_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, icmp_ln31_fu_466_p2, "icmp_ln31_fu_466_p2");
    sc_trace(mVcdFile, icmp_ln31_reg_608, "icmp_ln31_reg_608");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, k_fu_472_p2, "k_fu_472_p2");
    sc_trace(mVcdFile, icmp_ln34_fu_478_p2, "icmp_ln34_fu_478_p2");
    sc_trace(mVcdFile, k_5_fu_510_p2, "k_5_fu_510_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, k_aux_4_fu_516_p2, "k_aux_4_fu_516_p2");
    sc_trace(mVcdFile, a_address0, "a_address0");
    sc_trace(mVcdFile, a_ce0, "a_ce0");
    sc_trace(mVcdFile, a_we0, "a_we0");
    sc_trace(mVcdFile, a_d0, "a_d0");
    sc_trace(mVcdFile, a_q0, "a_q0");
    sc_trace(mVcdFile, x_0_reg_98, "x_0_reg_98");
    sc_trace(mVcdFile, icmp_ln10_fu_323_p2, "icmp_ln10_fu_323_p2");
    sc_trace(mVcdFile, iteration_0_reg_109, "iteration_0_reg_109");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln50_phi_fu_262_p4, "ap_phi_mux_phi_ln50_phi_fu_262_p4");
    sc_trace(mVcdFile, k_aux_0_reg_120, "k_aux_0_reg_120");
    sc_trace(mVcdFile, k_0_reg_132, "k_0_reg_132");
    sc_trace(mVcdFile, u_0_0_reg_144, "u_0_0_reg_144");
    sc_trace(mVcdFile, k_aux_1_reg_156, "k_aux_1_reg_156");
    sc_trace(mVcdFile, icmp_ln45_fu_522_p2, "icmp_ln45_fu_522_p2");
    sc_trace(mVcdFile, k_1_reg_167, "k_1_reg_167");
    sc_trace(mVcdFile, ap_phi_mux_u_0_2_phi_fu_249_p4, "ap_phi_mux_u_0_2_phi_fu_249_p4");
    sc_trace(mVcdFile, u_reg_178, "u_reg_178");
    sc_trace(mVcdFile, u_0_4_reg_189, "u_0_4_reg_189");
    sc_trace(mVcdFile, count_0_reg_201, "count_0_reg_201");
    sc_trace(mVcdFile, j_0_reg_213, "j_0_reg_213");
    sc_trace(mVcdFile, k_aux_fu_503_p2, "k_aux_fu_503_p2");
    sc_trace(mVcdFile, ap_phi_mux_k_aux_2_phi_fu_227_p4, "ap_phi_mux_k_aux_2_phi_fu_227_p4");
    sc_trace(mVcdFile, k_aux_2_reg_224, "k_aux_2_reg_224");
    sc_trace(mVcdFile, k_4_fu_496_p2, "k_4_fu_496_p2");
    sc_trace(mVcdFile, ap_phi_mux_k_2_phi_fu_237_p4, "ap_phi_mux_k_2_phi_fu_237_p4");
    sc_trace(mVcdFile, k_2_reg_234, "k_2_reg_234");
    sc_trace(mVcdFile, u_0_fu_489_p2, "u_0_fu_489_p2");
    sc_trace(mVcdFile, u_0_2_reg_244, "u_0_2_reg_244");
    sc_trace(mVcdFile, phi_ln50_reg_257, "phi_ln50_reg_257");
    sc_trace(mVcdFile, k_aux_3_reg_270, "k_aux_3_reg_270");
    sc_trace(mVcdFile, k_3_reg_283, "k_3_reg_283");
    sc_trace(mVcdFile, u_0_3_reg_296, "u_0_3_reg_296");
    sc_trace(mVcdFile, ap_phi_mux_sol_list_2_phi_fu_313_p4, "ap_phi_mux_sol_list_2_phi_fu_313_p4");
    sc_trace(mVcdFile, sol_list_2_reg_310, "sol_list_2_reg_310");
    sc_trace(mVcdFile, zext_ln11_fu_335_p1, "zext_ln11_fu_335_p1");
    sc_trace(mVcdFile, sext_ln16_fu_357_p1, "sext_ln16_fu_357_p1");
    sc_trace(mVcdFile, zext_ln20_fu_384_p1, "zext_ln20_fu_384_p1");
    sc_trace(mVcdFile, sext_ln38_fu_484_p1, "sext_ln38_fu_484_p1");
    sc_trace(mVcdFile, sol_list_1_fu_60, "sol_list_1_fu_60");
    sc_trace(mVcdFile, sol_list_fu_528_p2, "sol_list_fu_528_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, sub_ln20_fu_407_p2, "sub_ln20_fu_407_p2");
    sc_trace(mVcdFile, abscond_fu_419_p2, "abscond_fu_419_p2");
    sc_trace(mVcdFile, neg_fu_413_p2, "neg_fu_413_p2");
    sc_trace(mVcdFile, abs_fu_425_p3, "abs_fu_425_p3");
    sc_trace(mVcdFile, sub_ln20_1_fu_433_p2, "sub_ln20_1_fu_433_p2");
    sc_trace(mVcdFile, icmp_ln20_1_fu_438_p2, "icmp_ln20_1_fu_438_p2");
    sc_trace(mVcdFile, count_fu_444_p2, "count_fu_444_p2");
    sc_trace(mVcdFile, icmp_ln20_fu_401_p2, "icmp_ln20_fu_401_p2");
    sc_trace(mVcdFile, select_ln20_fu_450_p3, "select_ln20_fu_450_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_return, "ap_return");
#endif

    }
    mHdltvinHandle.open("nqueens.hdltvin.dat");
    mHdltvoutHandle.open("nqueens.hdltvout.dat");
}

nqueens::~nqueens() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete nqueens_AXILiteS_s_axi_U;
    delete a_U;
}

void nqueens::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void nqueens::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_362_p2.read(), ap_const_lv1_1))) {
        count_0_reg_201 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        count_0_reg_201 = select_ln20_1_fu_458_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln10_fu_323_p2.read()))) {
        iteration_0_reg_109 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(icmp_ln14_reg_559.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_phi_ln50_phi_fu_262_p4.read()))) {
        iteration_0_reg_109 = iteration_reg_563.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_362_p2.read(), ap_const_lv1_1))) {
        j_0_reg_213 = ap_const_lv31_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j_0_reg_213 = j_reg_585.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln10_fu_323_p2.read()))) {
        k_0_reg_132 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(icmp_ln14_reg_559.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_phi_ln50_phi_fu_262_p4.read()))) {
        k_0_reg_132 = k_3_reg_283.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln14_fu_345_p2.read(), ap_const_lv1_1))) {
        k_1_reg_167 = k_0_reg_132.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_522_p2.read()))) {
        k_1_reg_167 = k_5_fu_510_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_466_p2.read()))) {
        k_2_reg_234 = k_1_reg_167.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_reg_608.read()))) {
        k_2_reg_234 = k_4_fu_496_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_466_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln34_fu_478_p2.read()))) {
        k_3_reg_283 = k_fu_472_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln45_fu_522_p2.read()))) {
        k_3_reg_283 = ap_const_lv32_8;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln10_fu_323_p2.read()))) {
        k_aux_0_reg_120 = ap_const_lv32_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(icmp_ln14_reg_559.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_phi_ln50_phi_fu_262_p4.read()))) {
        k_aux_0_reg_120 = k_aux_3_reg_270.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln14_fu_345_p2.read(), ap_const_lv1_1))) {
        k_aux_1_reg_156 = k_aux_0_reg_120.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_522_p2.read()))) {
        k_aux_1_reg_156 = k_aux_4_fu_516_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_466_p2.read()))) {
        k_aux_2_reg_224 = k_aux_1_reg_156.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_reg_608.read()))) {
        k_aux_2_reg_224 = k_aux_fu_503_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_466_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln34_fu_478_p2.read()))) {
        k_aux_3_reg_270 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln45_fu_522_p2.read()))) {
        k_aux_3_reg_270 = k_aux_4_fu_516_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_466_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln34_fu_478_p2.read()))) {
        phi_ln50_reg_257 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln45_fu_522_p2.read()))) {
        phi_ln50_reg_257 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln45_fu_522_p2.read()))) {
        sol_list_1_fu_60 = sol_list_fu_528_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln10_fu_323_p2.read()))) {
        sol_list_1_fu_60 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln10_fu_323_p2.read()))) {
        u_0_0_reg_144 = ap_const_lv32_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(icmp_ln14_reg_559.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_phi_ln50_phi_fu_262_p4.read()))) {
        u_0_0_reg_144 = u_0_3_reg_296.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_466_p2.read()))) {
        u_0_2_reg_244 = ap_const_lv32_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_reg_608.read()))) {
        u_0_2_reg_244 = u_0_fu_489_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_466_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln34_fu_478_p2.read()))) {
        u_0_3_reg_296 = ap_const_lv32_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln45_fu_522_p2.read()))) {
        u_0_3_reg_296 = ap_phi_mux_u_0_2_phi_fu_249_p4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_reg_573.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_372_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_389_p2.read()))) {
        u_0_4_reg_189 = u_1_fu_395_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        u_0_4_reg_189 = u_reg_178.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln14_fu_345_p2.read(), ap_const_lv1_1))) {
        u_reg_178 = u_0_0_reg_144.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_522_p2.read()))) {
        u_reg_178 = ap_phi_mux_u_0_2_phi_fu_249_p4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln10_fu_323_p2.read()))) {
        x_0_reg_98 = x_fu_329_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_0_reg_98 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_addr_1_reg_568 =  (sc_lv<3>) (sext_ln16_fu_357_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        icmp_ln14_reg_559 = icmp_ln14_fu_345_p2.read();
        iteration_reg_563 = iteration_fu_351_p2.read();
        sol_list_1_load_reg_553 = sol_list_1_fu_60.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        icmp_ln17_reg_573 = icmp_ln17_fu_362_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        icmp_ln31_reg_608 = icmp_ln31_fu_466_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln17_reg_573.read(), ap_const_lv1_1))) {
        j_reg_585 = j_fu_378_p2.read();
        zext_ln19_reg_577 = zext_ln19_fu_368_p1.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
  esl_seteq<1,1,1>(icmp_ln14_fu_345_p2.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
  esl_seteq<1,1,1>(icmp_ln14_reg_559.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_phi_ln50_phi_fu_262_p4.read())))) {
        sol_list_2_reg_310 = sol_list_1_fu_60.read();
    }
}

void nqueens::thread_a_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_466_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_fu_478_p2.read()))) {
        a_address0 =  (sc_lv<3>) (sext_ln38_fu_484_p1.read());
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(icmp_ln17_reg_573.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(icmp_ln19_fu_372_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_389_p2.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        a_address0 = a_addr_1_reg_568.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(icmp_ln17_reg_573.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln19_fu_372_p2.read()))) {
        a_address0 =  (sc_lv<3>) (zext_ln20_fu_384_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_address0 =  (sc_lv<3>) (sext_ln16_fu_357_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        a_address0 =  (sc_lv<3>) (zext_ln11_fu_335_p1.read());
    } else {
        a_address0 = "XXX";
    }
}

void nqueens::thread_a_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(icmp_ln17_reg_573.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln19_fu_372_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_466_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_fu_478_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(icmp_ln17_reg_573.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(icmp_ln19_fu_372_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_389_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void nqueens::thread_a_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_reg_573.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_372_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_389_p2.read()))) {
        a_d0 = u_0_4_reg_189.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_466_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_fu_478_p2.read())))) {
        a_d0 = ap_const_lv32_0;
    } else {
        a_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void nqueens::thread_a_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_466_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_fu_478_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln10_fu_323_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(icmp_ln17_reg_573.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(icmp_ln19_fu_372_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_389_p2.read())))) {
        a_we0 = ap_const_logic_1;
    } else {
        a_we0 = ap_const_logic_0;
    }
}

void nqueens::thread_abs_fu_425_p3() {
    abs_fu_425_p3 = (!abscond_fu_419_p2.read()[0].is_01())? sc_lv<32>(): ((abscond_fu_419_p2.read()[0].to_bool())? sub_ln20_fu_407_p2.read(): neg_fu_413_p2.read());
}

void nqueens::thread_abscond_fu_419_p2() {
    abscond_fu_419_p2 = (!sub_ln20_fu_407_p2.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(sub_ln20_fu_407_p2.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void nqueens::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void nqueens::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void nqueens::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void nqueens::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void nqueens::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void nqueens::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void nqueens::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void nqueens::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void nqueens::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void nqueens::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void nqueens::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void nqueens::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_phi_ln50_phi_fu_262_p4.read()) || 
          esl_seteq<1,1,1>(icmp_ln14_reg_559.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void nqueens::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void nqueens::thread_ap_phi_mux_k_2_phi_fu_237_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_reg_608.read()))) {
        ap_phi_mux_k_2_phi_fu_237_p4 = k_4_fu_496_p2.read();
    } else {
        ap_phi_mux_k_2_phi_fu_237_p4 = k_2_reg_234.read();
    }
}

void nqueens::thread_ap_phi_mux_k_aux_2_phi_fu_227_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_reg_608.read()))) {
        ap_phi_mux_k_aux_2_phi_fu_227_p4 = k_aux_fu_503_p2.read();
    } else {
        ap_phi_mux_k_aux_2_phi_fu_227_p4 = k_aux_2_reg_224.read();
    }
}

void nqueens::thread_ap_phi_mux_phi_ln50_phi_fu_262_p4() {
    ap_phi_mux_phi_ln50_phi_fu_262_p4 = phi_ln50_reg_257.read();
}

void nqueens::thread_ap_phi_mux_sol_list_2_phi_fu_313_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(icmp_ln14_reg_559.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_phi_ln50_phi_fu_262_p4.read()))) {
        ap_phi_mux_sol_list_2_phi_fu_313_p4 = sol_list_1_fu_60.read();
    } else {
        ap_phi_mux_sol_list_2_phi_fu_313_p4 = sol_list_2_reg_310.read();
    }
}

void nqueens::thread_ap_phi_mux_u_0_2_phi_fu_249_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_reg_608.read()))) {
        ap_phi_mux_u_0_2_phi_fu_249_p4 = u_0_fu_489_p2.read();
    } else {
        ap_phi_mux_u_0_2_phi_fu_249_p4 = u_0_2_reg_244.read();
    }
}

void nqueens::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_phi_ln50_phi_fu_262_p4.read()) || 
          esl_seteq<1,1,1>(icmp_ln14_reg_559.read(), ap_const_lv1_0)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void nqueens::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void nqueens::thread_count_fu_444_p2() {
    count_fu_444_p2 = (!count_0_reg_201.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(count_0_reg_201.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void nqueens::thread_icmp_ln10_fu_323_p2() {
    icmp_ln10_fu_323_p2 = (!x_0_reg_98.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(x_0_reg_98.read() == ap_const_lv4_8);
}

void nqueens::thread_icmp_ln14_fu_345_p2() {
    icmp_ln14_fu_345_p2 = (!iteration_0_reg_109.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): (sc_biguint<7>(iteration_0_reg_109.read()) < sc_biguint<7>(ap_const_lv7_64));
}

void nqueens::thread_icmp_ln17_fu_362_p2() {
    icmp_ln17_fu_362_p2 = (!u_0_4_reg_189.read().is_01() || !ap_const_lv32_9.is_01())? sc_lv<1>(): (sc_bigint<32>(u_0_4_reg_189.read()) < sc_bigint<32>(ap_const_lv32_9));
}

void nqueens::thread_icmp_ln19_fu_372_p2() {
    icmp_ln19_fu_372_p2 = (!zext_ln19_fu_368_p1.read().is_01() || !k_1_reg_167.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln19_fu_368_p1.read()) < sc_bigint<32>(k_1_reg_167.read()));
}

void nqueens::thread_icmp_ln20_1_fu_438_p2() {
    icmp_ln20_1_fu_438_p2 = (!abs_fu_425_p3.read().is_01() || !sub_ln20_1_fu_433_p2.read().is_01())? sc_lv<1>(): sc_lv<1>(abs_fu_425_p3.read() == sub_ln20_1_fu_433_p2.read());
}

void nqueens::thread_icmp_ln20_fu_401_p2() {
    icmp_ln20_fu_401_p2 = (!u_0_4_reg_189.read().is_01() || !a_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(u_0_4_reg_189.read() == a_q0.read());
}

void nqueens::thread_icmp_ln24_fu_389_p2() {
    icmp_ln24_fu_389_p2 = (!count_0_reg_201.read().is_01() || !k_1_reg_167.read().is_01())? sc_lv<1>(): sc_lv<1>(count_0_reg_201.read() == k_1_reg_167.read());
}

void nqueens::thread_icmp_ln31_fu_466_p2() {
    icmp_ln31_fu_466_p2 = (!a_q0.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(a_q0.read() == ap_const_lv32_0);
}

void nqueens::thread_icmp_ln34_fu_478_p2() {
    icmp_ln34_fu_478_p2 = (!k_aux_1_reg_156.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(k_aux_1_reg_156.read() == ap_const_lv32_1);
}

void nqueens::thread_icmp_ln45_fu_522_p2() {
    icmp_ln45_fu_522_p2 = (!k_5_fu_510_p2.read().is_01() || !ap_const_lv32_8.is_01())? sc_lv<1>(): sc_lv<1>(k_5_fu_510_p2.read() == ap_const_lv32_8);
}

void nqueens::thread_iteration_fu_351_p2() {
    iteration_fu_351_p2 = (!iteration_0_reg_109.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(iteration_0_reg_109.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void nqueens::thread_j_fu_378_p2() {
    j_fu_378_p2 = (!j_0_reg_213.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(j_0_reg_213.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void nqueens::thread_k_4_fu_496_p2() {
    k_4_fu_496_p2 = (!k_1_reg_167.read().is_01() || !ap_const_lv32_FFFFFFFE.is_01())? sc_lv<32>(): (sc_bigint<32>(k_1_reg_167.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFE));
}

void nqueens::thread_k_5_fu_510_p2() {
    k_5_fu_510_p2 = (!ap_phi_mux_k_2_phi_fu_237_p4.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_k_2_phi_fu_237_p4.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void nqueens::thread_k_aux_4_fu_516_p2() {
    k_aux_4_fu_516_p2 = (!ap_phi_mux_k_aux_2_phi_fu_227_p4.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_k_aux_2_phi_fu_227_p4.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void nqueens::thread_k_aux_fu_503_p2() {
    k_aux_fu_503_p2 = (!k_aux_1_reg_156.read().is_01() || !ap_const_lv32_FFFFFFFE.is_01())? sc_lv<32>(): (sc_biguint<32>(k_aux_1_reg_156.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFE));
}

void nqueens::thread_k_fu_472_p2() {
    k_fu_472_p2 = (!k_1_reg_167.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_bigint<32>(k_1_reg_167.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFF));
}

void nqueens::thread_neg_fu_413_p2() {
    neg_fu_413_p2 = (!ap_const_lv32_0.is_01() || !sub_ln20_fu_407_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(sub_ln20_fu_407_p2.read()));
}

void nqueens::thread_select_ln20_1_fu_458_p3() {
    select_ln20_1_fu_458_p3 = (!icmp_ln20_fu_401_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln20_fu_401_p2.read()[0].to_bool())? count_0_reg_201.read(): select_ln20_fu_450_p3.read());
}

void nqueens::thread_select_ln20_fu_450_p3() {
    select_ln20_fu_450_p3 = (!icmp_ln20_1_fu_438_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln20_1_fu_438_p2.read()[0].to_bool())? count_0_reg_201.read(): count_fu_444_p2.read());
}

void nqueens::thread_sext_ln16_fu_357_p1() {
    sext_ln16_fu_357_p1 = esl_sext<64,32>(k_1_reg_167.read());
}

void nqueens::thread_sext_ln38_fu_484_p1() {
    sext_ln38_fu_484_p1 = esl_sext<64,32>(k_fu_472_p2.read());
}

void nqueens::thread_sol_list_fu_528_p2() {
    sol_list_fu_528_p2 = (!sol_list_1_load_reg_553.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(sol_list_1_load_reg_553.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void nqueens::thread_sub_ln20_1_fu_433_p2() {
    sub_ln20_1_fu_433_p2 = (!k_1_reg_167.read().is_01() || !zext_ln19_reg_577.read().is_01())? sc_lv<32>(): (sc_bigint<32>(k_1_reg_167.read()) - sc_biguint<32>(zext_ln19_reg_577.read()));
}

void nqueens::thread_sub_ln20_fu_407_p2() {
    sub_ln20_fu_407_p2 = (!u_0_4_reg_189.read().is_01() || !a_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(u_0_4_reg_189.read()) - sc_biguint<32>(a_q0.read()));
}

void nqueens::thread_u_0_fu_489_p2() {
    u_0_fu_489_p2 = (!a_q0.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(a_q0.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void nqueens::thread_u_1_fu_395_p2() {
    u_1_fu_395_p2 = (!u_0_4_reg_189.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(u_0_4_reg_189.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void nqueens::thread_x_fu_329_p2() {
    x_fu_329_p2 = (!x_0_reg_98.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(x_0_reg_98.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void nqueens::thread_zext_ln11_fu_335_p1() {
    zext_ln11_fu_335_p1 = esl_zext<64,4>(x_0_reg_98.read());
}

void nqueens::thread_zext_ln19_fu_368_p1() {
    zext_ln19_fu_368_p1 = esl_zext<32,31>(j_0_reg_213.read());
}

void nqueens::thread_zext_ln20_fu_384_p1() {
    zext_ln20_fu_384_p1 = esl_zext<64,31>(j_0_reg_213.read());
}

void nqueens::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln10_fu_323_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln14_fu_345_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && ((esl_seteq<1,1,1>(icmp_ln19_fu_372_p2.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_389_p2.read())) || 
  esl_seteq<1,1,1>(icmp_ln17_reg_573.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln17_reg_573.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(icmp_ln19_fu_372_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_389_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_466_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln34_fu_478_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln45_fu_522_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && (esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_phi_ln50_phi_fu_262_p4.read()) || 
  esl_seteq<1,1,1>(icmp_ln14_reg_559.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void nqueens::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

