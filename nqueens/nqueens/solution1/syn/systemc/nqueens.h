// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _nqueens_HH_
#define _nqueens_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "nqueens_a.h"
#include "nqueens_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct nqueens : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    nqueens(sc_module_name name);
    SC_HAS_PROCESS(nqueens);

    ~nqueens();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    nqueens_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* nqueens_AXILiteS_s_axi_U;
    nqueens_a* a_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<4> > x_fu_329_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > sol_list_1_load_reg_553;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln14_fu_345_p2;
    sc_signal< sc_lv<1> > icmp_ln14_reg_559;
    sc_signal< sc_lv<7> > iteration_fu_351_p2;
    sc_signal< sc_lv<7> > iteration_reg_563;
    sc_signal< sc_lv<3> > a_addr_1_reg_568;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln17_fu_362_p2;
    sc_signal< sc_lv<1> > icmp_ln17_reg_573;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > zext_ln19_fu_368_p1;
    sc_signal< sc_lv<32> > zext_ln19_reg_577;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<31> > j_fu_378_p2;
    sc_signal< sc_lv<31> > j_reg_585;
    sc_signal< sc_lv<1> > icmp_ln19_fu_372_p2;
    sc_signal< sc_lv<32> > u_1_fu_395_p2;
    sc_signal< sc_lv<1> > icmp_ln24_fu_389_p2;
    sc_signal< sc_lv<32> > select_ln20_1_fu_458_p3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > icmp_ln31_fu_466_p2;
    sc_signal< sc_lv<1> > icmp_ln31_reg_608;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > k_fu_472_p2;
    sc_signal< sc_lv<1> > icmp_ln34_fu_478_p2;
    sc_signal< sc_lv<32> > k_5_fu_510_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > k_aux_4_fu_516_p2;
    sc_signal< sc_lv<3> > a_address0;
    sc_signal< sc_logic > a_ce0;
    sc_signal< sc_logic > a_we0;
    sc_signal< sc_lv<32> > a_d0;
    sc_signal< sc_lv<32> > a_q0;
    sc_signal< sc_lv<4> > x_0_reg_98;
    sc_signal< sc_lv<1> > icmp_ln10_fu_323_p2;
    sc_signal< sc_lv<7> > iteration_0_reg_109;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > ap_phi_mux_phi_ln50_phi_fu_262_p4;
    sc_signal< sc_lv<32> > k_aux_0_reg_120;
    sc_signal< sc_lv<32> > k_0_reg_132;
    sc_signal< sc_lv<32> > u_0_0_reg_144;
    sc_signal< sc_lv<32> > k_aux_1_reg_156;
    sc_signal< sc_lv<1> > icmp_ln45_fu_522_p2;
    sc_signal< sc_lv<32> > k_1_reg_167;
    sc_signal< sc_lv<32> > ap_phi_mux_u_0_2_phi_fu_249_p4;
    sc_signal< sc_lv<32> > u_reg_178;
    sc_signal< sc_lv<32> > u_0_4_reg_189;
    sc_signal< sc_lv<32> > count_0_reg_201;
    sc_signal< sc_lv<31> > j_0_reg_213;
    sc_signal< sc_lv<32> > k_aux_fu_503_p2;
    sc_signal< sc_lv<32> > ap_phi_mux_k_aux_2_phi_fu_227_p4;
    sc_signal< sc_lv<32> > k_aux_2_reg_224;
    sc_signal< sc_lv<32> > k_4_fu_496_p2;
    sc_signal< sc_lv<32> > ap_phi_mux_k_2_phi_fu_237_p4;
    sc_signal< sc_lv<32> > k_2_reg_234;
    sc_signal< sc_lv<32> > u_0_fu_489_p2;
    sc_signal< sc_lv<32> > u_0_2_reg_244;
    sc_signal< sc_lv<1> > phi_ln50_reg_257;
    sc_signal< sc_lv<32> > k_aux_3_reg_270;
    sc_signal< sc_lv<32> > k_3_reg_283;
    sc_signal< sc_lv<32> > u_0_3_reg_296;
    sc_signal< sc_lv<32> > ap_phi_mux_sol_list_2_phi_fu_313_p4;
    sc_signal< sc_lv<32> > sol_list_2_reg_310;
    sc_signal< sc_lv<64> > zext_ln11_fu_335_p1;
    sc_signal< sc_lv<64> > sext_ln16_fu_357_p1;
    sc_signal< sc_lv<64> > zext_ln20_fu_384_p1;
    sc_signal< sc_lv<64> > sext_ln38_fu_484_p1;
    sc_signal< sc_lv<32> > sol_list_1_fu_60;
    sc_signal< sc_lv<32> > sol_list_fu_528_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > sub_ln20_fu_407_p2;
    sc_signal< sc_lv<1> > abscond_fu_419_p2;
    sc_signal< sc_lv<32> > neg_fu_413_p2;
    sc_signal< sc_lv<32> > abs_fu_425_p3;
    sc_signal< sc_lv<32> > sub_ln20_1_fu_433_p2;
    sc_signal< sc_lv<1> > icmp_ln20_1_fu_438_p2;
    sc_signal< sc_lv<32> > count_fu_444_p2;
    sc_signal< sc_lv<1> > icmp_ln20_fu_401_p2;
    sc_signal< sc_lv<32> > select_ln20_fu_450_p3;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    sc_signal< sc_lv<32> > ap_return;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_FFFFFFFE;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_ce0();
    void thread_a_d0();
    void thread_a_we0();
    void thread_abs_fu_425_p3();
    void thread_abscond_fu_419_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_k_2_phi_fu_237_p4();
    void thread_ap_phi_mux_k_aux_2_phi_fu_227_p4();
    void thread_ap_phi_mux_phi_ln50_phi_fu_262_p4();
    void thread_ap_phi_mux_sol_list_2_phi_fu_313_p4();
    void thread_ap_phi_mux_u_0_2_phi_fu_249_p4();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_count_fu_444_p2();
    void thread_icmp_ln10_fu_323_p2();
    void thread_icmp_ln14_fu_345_p2();
    void thread_icmp_ln17_fu_362_p2();
    void thread_icmp_ln19_fu_372_p2();
    void thread_icmp_ln20_1_fu_438_p2();
    void thread_icmp_ln20_fu_401_p2();
    void thread_icmp_ln24_fu_389_p2();
    void thread_icmp_ln31_fu_466_p2();
    void thread_icmp_ln34_fu_478_p2();
    void thread_icmp_ln45_fu_522_p2();
    void thread_iteration_fu_351_p2();
    void thread_j_fu_378_p2();
    void thread_k_4_fu_496_p2();
    void thread_k_5_fu_510_p2();
    void thread_k_aux_4_fu_516_p2();
    void thread_k_aux_fu_503_p2();
    void thread_k_fu_472_p2();
    void thread_neg_fu_413_p2();
    void thread_select_ln20_1_fu_458_p3();
    void thread_select_ln20_fu_450_p3();
    void thread_sext_ln16_fu_357_p1();
    void thread_sext_ln38_fu_484_p1();
    void thread_sol_list_fu_528_p2();
    void thread_sub_ln20_1_fu_433_p2();
    void thread_sub_ln20_fu_407_p2();
    void thread_u_0_fu_489_p2();
    void thread_u_1_fu_395_p2();
    void thread_x_fu_329_p2();
    void thread_zext_ln11_fu_335_p1();
    void thread_zext_ln19_fu_368_p1();
    void thread_zext_ln20_fu_384_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
