// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "counter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic counter::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic counter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> counter::ap_ST_fsm_state1 = "1";
const sc_lv<7> counter::ap_ST_fsm_state2 = "10";
const sc_lv<7> counter::ap_ST_fsm_state3 = "100";
const sc_lv<7> counter::ap_ST_fsm_state4 = "1000";
const sc_lv<7> counter::ap_ST_fsm_state5 = "10000";
const sc_lv<7> counter::ap_ST_fsm_pp1_stage0 = "100000";
const sc_lv<7> counter::ap_ST_fsm_state8 = "1000000";
const bool counter::ap_const_boolean_1 = true;
const sc_lv<32> counter::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> counter::ap_const_lv32_1 = "1";
const sc_lv<1> counter::ap_const_lv1_0 = "0";
const sc_lv<32> counter::ap_const_lv32_4 = "100";
const sc_lv<32> counter::ap_const_lv32_5 = "101";
const bool counter::ap_const_boolean_0 = false;
const sc_lv<32> counter::ap_const_lv32_6 = "110";
const sc_lv<1> counter::ap_const_lv1_1 = "1";
const sc_lv<4> counter::ap_const_lv4_0 = "0000";
const sc_lv<32> counter::ap_const_lv32_2 = "10";
const sc_lv<4> counter::ap_const_lv4_8 = "1000";
const sc_lv<32> counter::ap_const_lv32_3 = "11";
const sc_lv<4> counter::ap_const_lv4_1 = "1";
const sc_lv<32> counter::ap_const_lv32_9 = "1001";

counter::counter(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln8_fu_166_p1 );
    sensitive << ( zext_ln23_fu_195_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_abs_fu_228_p3);
    sensitive << ( sub_ln23_fu_210_p2 );
    sensitive << ( abscond_fu_222_p2 );
    sensitive << ( neg_fu_216_p2 );

    SC_METHOD(thread_abscond_fu_222_p2);
    sensitive << ( icmp_ln21_reg_312 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( sub_ln23_fu_210_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_state6_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state7_pp1_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state6);
    sensitive << ( icmp_ln21_fu_183_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln19_reg_308 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln27_fu_269_p2 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_phi_mux_j_0_phi_fu_134_p4);
    sensitive << ( j_0_reg_130 );
    sensitive << ( icmp_ln21_reg_312 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( j_reg_316 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_p_0_phi_fu_146_p4);
    sensitive << ( icmp_ln19_reg_308 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln27_fu_269_p2 );
    sensitive << ( u_0_7_reg_108 );
    sensitive << ( p_0_reg_142 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln19_reg_308 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln27_fu_269_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( icmp_ln19_reg_308 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln27_fu_269_p2 );
    sensitive << ( ap_phi_mux_p_0_phi_fu_146_p4 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_count_fu_247_p2);
    sensitive << ( count_0_reg_118 );

    SC_METHOD(thread_i_fu_160_p2);
    sensitive << ( i_0_i_reg_83 );

    SC_METHOD(thread_icmp_ln19_fu_177_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( u_0_7_reg_108 );

    SC_METHOD(thread_icmp_ln21_fu_183_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( f_reg_95 );
    sensitive << ( ap_phi_mux_j_0_phi_fu_134_p4 );

    SC_METHOD(thread_icmp_ln23_1_fu_241_p2);
    sensitive << ( icmp_ln21_reg_312 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( abs_fu_228_p3 );
    sensitive << ( sub_ln23_1_fu_236_p2 );

    SC_METHOD(thread_icmp_ln23_fu_204_p2);
    sensitive << ( a_q0 );
    sensitive << ( icmp_ln21_reg_312 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( u_0_7_reg_108 );

    SC_METHOD(thread_icmp_ln27_fu_269_p2);
    sensitive << ( k );
    sensitive << ( count_0_reg_118 );
    sensitive << ( icmp_ln19_reg_308 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_icmp_ln6_fu_154_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_i_reg_83 );

    SC_METHOD(thread_icmp_ln8_fu_171_p2);
    sensitive << ( a_q0 );
    sensitive << ( icmp_ln6_reg_291 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_j_fu_189_p2);
    sensitive << ( ap_phi_mux_j_0_phi_fu_134_p4 );

    SC_METHOD(thread_neg_fu_216_p2);
    sensitive << ( sub_ln23_fu_210_p2 );

    SC_METHOD(thread_select_ln23_1_fu_261_p3);
    sensitive << ( count_0_reg_118 );
    sensitive << ( icmp_ln23_fu_204_p2 );
    sensitive << ( select_ln23_fu_253_p3 );

    SC_METHOD(thread_select_ln23_fu_253_p3);
    sensitive << ( count_0_reg_118 );
    sensitive << ( icmp_ln23_1_fu_241_p2 );
    sensitive << ( count_fu_247_p2 );

    SC_METHOD(thread_sub_ln23_1_fu_236_p2);
    sensitive << ( k );
    sensitive << ( zext_ln21_fu_200_p1 );

    SC_METHOD(thread_sub_ln23_fu_210_p2);
    sensitive << ( a_q0 );
    sensitive << ( u_0_7_reg_108 );

    SC_METHOD(thread_u_fu_274_p2);
    sensitive << ( u_0_7_reg_108 );

    SC_METHOD(thread_zext_ln21_fu_200_p1);
    sensitive << ( j_0_reg_130 );

    SC_METHOD(thread_zext_ln23_fu_195_p1);
    sensitive << ( ap_phi_mux_j_0_phi_fu_134_p4 );

    SC_METHOD(thread_zext_ln8_fu_166_p1);
    sensitive << ( i_0_i_reg_83 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln6_reg_291 );
    sensitive << ( icmp_ln19_fu_177_p2 );
    sensitive << ( icmp_ln19_reg_308 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln21_fu_183_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln27_fu_269_p2 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln8_fu_171_p2 );

    ap_CS_fsm = "0000001";
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_return_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "counter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_address0, "(port)a_address0");
    sc_trace(mVcdFile, a_ce0, "(port)a_ce0");
    sc_trace(mVcdFile, a_q0, "(port)a_q0");
    sc_trace(mVcdFile, k, "(port)k");
    sc_trace(mVcdFile, u_0, "(port)u_0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, count_0_reg_118, "count_0_reg_118");
    sc_trace(mVcdFile, j_0_reg_130, "j_0_reg_130");
    sc_trace(mVcdFile, icmp_ln6_fu_154_p2, "icmp_ln6_fu_154_p2");
    sc_trace(mVcdFile, icmp_ln6_reg_291, "icmp_ln6_reg_291");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_160_p2, "i_fu_160_p2");
    sc_trace(mVcdFile, i_reg_295, "i_reg_295");
    sc_trace(mVcdFile, icmp_ln19_fu_177_p2, "icmp_ln19_fu_177_p2");
    sc_trace(mVcdFile, icmp_ln19_reg_308, "icmp_ln19_reg_308");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln21_fu_183_p2, "icmp_ln21_fu_183_p2");
    sc_trace(mVcdFile, icmp_ln21_reg_312, "icmp_ln21_reg_312");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state6_pp1_stage0_iter0, "ap_block_state6_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp1_stage0_iter1, "ap_block_state7_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, j_fu_189_p2, "j_fu_189_p2");
    sc_trace(mVcdFile, j_reg_316, "j_reg_316");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, select_ln23_1_fu_261_p3, "select_ln23_1_fu_261_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, u_fu_274_p2, "u_fu_274_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln27_fu_269_p2, "icmp_ln27_fu_269_p2");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state6, "ap_condition_pp1_exit_iter0_state6");
    sc_trace(mVcdFile, i_0_i_reg_83, "i_0_i_reg_83");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln8_fu_171_p2, "icmp_ln8_fu_171_p2");
    sc_trace(mVcdFile, f_reg_95, "f_reg_95");
    sc_trace(mVcdFile, u_0_7_reg_108, "u_0_7_reg_108");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, ap_phi_mux_j_0_phi_fu_134_p4, "ap_phi_mux_j_0_phi_fu_134_p4");
    sc_trace(mVcdFile, ap_phi_mux_p_0_phi_fu_146_p4, "ap_phi_mux_p_0_phi_fu_146_p4");
    sc_trace(mVcdFile, p_0_reg_142, "p_0_reg_142");
    sc_trace(mVcdFile, zext_ln8_fu_166_p1, "zext_ln8_fu_166_p1");
    sc_trace(mVcdFile, zext_ln23_fu_195_p1, "zext_ln23_fu_195_p1");
    sc_trace(mVcdFile, sub_ln23_fu_210_p2, "sub_ln23_fu_210_p2");
    sc_trace(mVcdFile, abscond_fu_222_p2, "abscond_fu_222_p2");
    sc_trace(mVcdFile, neg_fu_216_p2, "neg_fu_216_p2");
    sc_trace(mVcdFile, zext_ln21_fu_200_p1, "zext_ln21_fu_200_p1");
    sc_trace(mVcdFile, abs_fu_228_p3, "abs_fu_228_p3");
    sc_trace(mVcdFile, sub_ln23_1_fu_236_p2, "sub_ln23_1_fu_236_p2");
    sc_trace(mVcdFile, icmp_ln23_1_fu_241_p2, "icmp_ln23_1_fu_241_p2");
    sc_trace(mVcdFile, count_fu_247_p2, "count_fu_247_p2");
    sc_trace(mVcdFile, icmp_ln23_fu_204_p2, "icmp_ln23_fu_204_p2");
    sc_trace(mVcdFile, select_ln23_fu_253_p3, "select_ln23_fu_253_p3");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
}

counter::~counter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void counter::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state6.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                    esl_seteq<1,1,1>(icmp_ln19_fu_177_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state6.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state6.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                    esl_seteq<1,1,1>(icmp_ln19_fu_177_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
             (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_269_p2.read()) || 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_308.read())))) {
            ap_return_preg = ap_phi_mux_p_0_phi_fu_146_p4.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_177_p2.read(), ap_const_lv1_1))) {
        count_0_reg_118 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_reg_312.read()))) {
        count_0_reg_118 = select_ln23_1_fu_261_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_291.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln8_fu_171_p2.read()))) {
        f_reg_95 = i_0_i_reg_83.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln6_fu_154_p2.read(), ap_const_lv1_1))) {
        f_reg_95 = ap_const_lv4_8;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_291.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_fu_171_p2.read()))) {
        i_0_i_reg_83 = i_reg_295.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_i_reg_83 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_177_p2.read(), ap_const_lv1_1))) {
        j_0_reg_130 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_reg_312.read()))) {
        j_0_reg_130 = j_reg_316.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_reg_308.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_269_p2.read()))) {
        p_0_reg_142 = u_0_7_reg_108.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_177_p2.read()))) {
        p_0_reg_142 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_reg_308.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_fu_269_p2.read()))) {
        u_0_7_reg_108 = u_fu_274_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        u_0_7_reg_108 = u_0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_295 = i_fu_160_p2.read();
        icmp_ln6_reg_291 = icmp_ln6_fu_154_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        icmp_ln19_reg_308 = icmp_ln19_fu_177_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln21_reg_312 = icmp_ln21_fu_183_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        j_reg_316 = j_fu_189_p2.read();
    }
}

void counter::thread_a_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        a_address0 =  (sc_lv<3>) (zext_ln23_fu_195_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        a_address0 =  (sc_lv<3>) (zext_ln8_fu_166_p1.read());
    } else {
        a_address0 = "XXX";
    }
}

void counter::thread_a_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())))) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void counter::thread_abs_fu_228_p3() {
    abs_fu_228_p3 = (!abscond_fu_222_p2.read()[0].is_01())? sc_lv<32>(): ((abscond_fu_222_p2.read()[0].to_bool())? sub_ln23_fu_210_p2.read(): neg_fu_216_p2.read());
}

void counter::thread_abscond_fu_222_p2() {
    abscond_fu_222_p2 = (!sub_ln23_fu_210_p2.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(sub_ln23_fu_210_p2.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void counter::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[5];
}

void counter::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void counter::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void counter::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void counter::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void counter::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void counter::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[6];
}

void counter::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void counter::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void counter::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void counter::thread_ap_block_state6_pp1_stage0_iter0() {
    ap_block_state6_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void counter::thread_ap_block_state7_pp1_stage0_iter1() {
    ap_block_state7_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void counter::thread_ap_condition_pp1_exit_iter0_state6() {
    if (esl_seteq<1,1,1>(icmp_ln21_fu_183_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state6 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state6 = ap_const_logic_0;
    }
}

void counter::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_269_p2.read()) || 
           esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_308.read()))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void counter::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void counter::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void counter::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void counter::thread_ap_phi_mux_j_0_phi_fu_134_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_reg_312.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_j_0_phi_fu_134_p4 = j_reg_316.read();
    } else {
        ap_phi_mux_j_0_phi_fu_134_p4 = j_0_reg_130.read();
    }
}

void counter::thread_ap_phi_mux_p_0_phi_fu_146_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_reg_308.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_269_p2.read()))) {
        ap_phi_mux_p_0_phi_fu_146_p4 = u_0_7_reg_108.read();
    } else {
        ap_phi_mux_p_0_phi_fu_146_p4 = p_0_reg_142.read();
    }
}

void counter::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_269_p2.read()) || 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_308.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void counter::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_269_p2.read()) || 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_308.read())))) {
        ap_return = ap_phi_mux_p_0_phi_fu_146_p4.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void counter::thread_count_fu_247_p2() {
    count_fu_247_p2 = (!count_0_reg_118.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(count_0_reg_118.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void counter::thread_i_fu_160_p2() {
    i_fu_160_p2 = (!i_0_i_reg_83.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_i_reg_83.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void counter::thread_icmp_ln19_fu_177_p2() {
    icmp_ln19_fu_177_p2 = (!u_0_7_reg_108.read().is_01() || !ap_const_lv32_9.is_01())? sc_lv<1>(): (sc_bigint<32>(u_0_7_reg_108.read()) < sc_bigint<32>(ap_const_lv32_9));
}

void counter::thread_icmp_ln21_fu_183_p2() {
    icmp_ln21_fu_183_p2 = (!ap_phi_mux_j_0_phi_fu_134_p4.read().is_01() || !f_reg_95.read().is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_j_0_phi_fu_134_p4.read() == f_reg_95.read());
}

void counter::thread_icmp_ln23_1_fu_241_p2() {
    icmp_ln23_1_fu_241_p2 = (!abs_fu_228_p3.read().is_01() || !sub_ln23_1_fu_236_p2.read().is_01())? sc_lv<1>(): sc_lv<1>(abs_fu_228_p3.read() == sub_ln23_1_fu_236_p2.read());
}

void counter::thread_icmp_ln23_fu_204_p2() {
    icmp_ln23_fu_204_p2 = (!u_0_7_reg_108.read().is_01() || !a_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(u_0_7_reg_108.read() == a_q0.read());
}

void counter::thread_icmp_ln27_fu_269_p2() {
    icmp_ln27_fu_269_p2 = (!count_0_reg_118.read().is_01() || !k.read().is_01())? sc_lv<1>(): sc_lv<1>(count_0_reg_118.read() == k.read());
}

void counter::thread_icmp_ln6_fu_154_p2() {
    icmp_ln6_fu_154_p2 = (!i_0_i_reg_83.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_83.read() == ap_const_lv4_8);
}

void counter::thread_icmp_ln8_fu_171_p2() {
    icmp_ln8_fu_171_p2 = (!a_q0.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(a_q0.read() == ap_const_lv32_0);
}

void counter::thread_j_fu_189_p2() {
    j_fu_189_p2 = (!ap_phi_mux_j_0_phi_fu_134_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_j_0_phi_fu_134_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void counter::thread_neg_fu_216_p2() {
    neg_fu_216_p2 = (!ap_const_lv32_0.is_01() || !sub_ln23_fu_210_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(sub_ln23_fu_210_p2.read()));
}

void counter::thread_select_ln23_1_fu_261_p3() {
    select_ln23_1_fu_261_p3 = (!icmp_ln23_fu_204_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln23_fu_204_p2.read()[0].to_bool())? count_0_reg_118.read(): select_ln23_fu_253_p3.read());
}

void counter::thread_select_ln23_fu_253_p3() {
    select_ln23_fu_253_p3 = (!icmp_ln23_1_fu_241_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln23_1_fu_241_p2.read()[0].to_bool())? count_0_reg_118.read(): count_fu_247_p2.read());
}

void counter::thread_sub_ln23_1_fu_236_p2() {
    sub_ln23_1_fu_236_p2 = (!k.read().is_01() || !zext_ln21_fu_200_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(k.read()) - sc_biguint<32>(zext_ln21_fu_200_p1.read()));
}

void counter::thread_sub_ln23_fu_210_p2() {
    sub_ln23_fu_210_p2 = (!u_0_7_reg_108.read().is_01() || !a_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(u_0_7_reg_108.read()) - sc_biguint<32>(a_q0.read()));
}

void counter::thread_u_fu_274_p2() {
    u_fu_274_p2 = (!u_0_7_reg_108.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(u_0_7_reg_108.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void counter::thread_zext_ln21_fu_200_p1() {
    zext_ln21_fu_200_p1 = esl_zext<32,4>(j_0_reg_130.read());
}

void counter::thread_zext_ln23_fu_195_p1() {
    zext_ln23_fu_195_p1 = esl_zext<64,4>(ap_phi_mux_j_0_phi_fu_134_p4.read());
}

void counter::thread_zext_ln8_fu_166_p1() {
    zext_ln8_fu_166_p1 = esl_zext<64,4>(i_0_i_reg_83.read());
}

void counter::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln6_reg_291.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_fu_171_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln19_fu_177_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 32 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln21_fu_183_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln21_fu_183_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_269_p2.read()) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_308.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

