// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2019.2 (win64) Build 2708876 Wed Nov  6 21:40:23 MST 2019
// Date        : Tue Oct  5 12:09:25 2021
// Host        : hp6g4-mlab-2 running 64-bit major release  (build 9200)
// Command     : write_verilog -mode timesim -nolib -sdf_anno true -force -file
//               C:/Users/mlabadm/Desktop/Github/FPGA/nqueens/nqueens_fpga/nqueens_fpga.sim/sim_1/impl/timing/xsim/top_nqueens_tb_time_impl.v
// Design      : design_1_wrapper
// Purpose     : This verilog netlist is a timing simulation representation of the design and should not be modified or
//               synthesized. Please ensure that this netlist is used with the corresponding SDF file.
// Device      : xc7z020clg484-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps
`define XIL_TIMING

(* hw_handoff = "design_1.hwdef" *) 
module design_1
   (DDR_addr,
    DDR_ba,
    DDR_cas_n,
    DDR_ck_n,
    DDR_ck_p,
    DDR_cke,
    DDR_cs_n,
    DDR_dm,
    DDR_dq,
    DDR_dqs_n,
    DDR_dqs_p,
    DDR_odt,
    DDR_ras_n,
    DDR_reset_n,
    DDR_we_n,
    FIXED_IO_ddr_vrn,
    FIXED_IO_ddr_vrp,
    FIXED_IO_mio,
    FIXED_IO_ps_clk,
    FIXED_IO_ps_porb,
    FIXED_IO_ps_srstb);
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR ADDR" *) (* x_interface_parameter = "XIL_INTERFACENAME DDR, AXI_ARBITRATION_SCHEME TDM, BURST_LENGTH 8, CAN_DEBUG false, CAS_LATENCY 11, CAS_WRITE_LATENCY 11, CS_ENABLED true, DATA_MASK_ENABLED true, DATA_WIDTH 8, MEMORY_TYPE COMPONENTS, MEM_ADDR_MAP ROW_COLUMN_BANK, SLOT Single, TIMEPERIOD_PS 1250" *) inout [14:0]DDR_addr;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR BA" *) inout [2:0]DDR_ba;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR CAS_N" *) inout DDR_cas_n;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR CK_N" *) inout DDR_ck_n;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR CK_P" *) inout DDR_ck_p;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR CKE" *) inout DDR_cke;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR CS_N" *) inout DDR_cs_n;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR DM" *) inout [3:0]DDR_dm;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR DQ" *) inout [31:0]DDR_dq;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR DQS_N" *) inout [3:0]DDR_dqs_n;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR DQS_P" *) inout [3:0]DDR_dqs_p;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR ODT" *) inout DDR_odt;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR RAS_N" *) inout DDR_ras_n;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR RESET_N" *) inout DDR_reset_n;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR WE_N" *) inout DDR_we_n;
  (* x_interface_info = "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO DDR_VRN" *) (* x_interface_parameter = "XIL_INTERFACENAME FIXED_IO, CAN_DEBUG false" *) inout FIXED_IO_ddr_vrn;
  (* x_interface_info = "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO DDR_VRP" *) inout FIXED_IO_ddr_vrp;
  (* x_interface_info = "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO MIO" *) inout [53:0]FIXED_IO_mio;
  (* x_interface_info = "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO PS_CLK" *) inout FIXED_IO_ps_clk;
  (* x_interface_info = "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO PS_PORB" *) inout FIXED_IO_ps_porb;
  (* x_interface_info = "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO PS_SRSTB" *) inout FIXED_IO_ps_srstb;

  wire [14:0]DDR_addr;
  wire [2:0]DDR_ba;
  wire DDR_cas_n;
  wire DDR_ck_n;
  wire DDR_ck_p;
  wire DDR_cke;
  wire DDR_cs_n;
  wire [3:0]DDR_dm;
  wire [31:0]DDR_dq;
  wire [3:0]DDR_dqs_n;
  wire [3:0]DDR_dqs_p;
  wire DDR_odt;
  wire DDR_ras_n;
  wire DDR_reset_n;
  wire DDR_we_n;
  wire FIXED_IO_ddr_vrn;
  wire FIXED_IO_ddr_vrp;
  wire [53:0]FIXED_IO_mio;
  wire FIXED_IO_ps_clk;
  wire FIXED_IO_ps_porb;
  wire FIXED_IO_ps_srstb;
  wire [7:0]axi_smc_M01_AXI_ARADDR;
  wire axi_smc_M01_AXI_ARREADY;
  wire axi_smc_M01_AXI_ARVALID;
  wire [7:0]axi_smc_M01_AXI_AWADDR;
  wire axi_smc_M01_AXI_AWREADY;
  wire axi_smc_M01_AXI_AWVALID;
  wire axi_smc_M01_AXI_BREADY;
  wire axi_smc_M01_AXI_BVALID;
  wire [31:0]axi_smc_M01_AXI_RDATA;
  wire axi_smc_M01_AXI_RREADY;
  wire axi_smc_M01_AXI_RVALID;
  wire [31:0]axi_smc_M01_AXI_WDATA;
  wire axi_smc_M01_AXI_WREADY;
  wire axi_smc_M01_AXI_WVALID;
  wire comblock_0_reg0_o;
  wire processing_system7_0_FCLK_CLK0;
  wire processing_system7_0_FCLK_RESET0_N;
  wire [31:0]processing_system7_0_M_AXI_GP0_ARADDR;
  wire [1:0]processing_system7_0_M_AXI_GP0_ARBURST;
  wire [11:0]processing_system7_0_M_AXI_GP0_ARID;
  wire [3:0]processing_system7_0_M_AXI_GP0_ARLEN;
  wire processing_system7_0_M_AXI_GP0_ARREADY;
  wire [2:0]processing_system7_0_M_AXI_GP0_ARSIZE;
  wire processing_system7_0_M_AXI_GP0_ARVALID;
  wire [31:0]processing_system7_0_M_AXI_GP0_AWADDR;
  wire [1:0]processing_system7_0_M_AXI_GP0_AWBURST;
  wire [11:0]processing_system7_0_M_AXI_GP0_AWID;
  wire [3:0]processing_system7_0_M_AXI_GP0_AWLEN;
  wire processing_system7_0_M_AXI_GP0_AWREADY;
  wire [2:0]processing_system7_0_M_AXI_GP0_AWSIZE;
  wire processing_system7_0_M_AXI_GP0_AWVALID;
  wire [11:0]processing_system7_0_M_AXI_GP0_BID;
  wire processing_system7_0_M_AXI_GP0_BREADY;
  wire [1:0]processing_system7_0_M_AXI_GP0_BRESP;
  wire processing_system7_0_M_AXI_GP0_BVALID;
  wire [31:0]processing_system7_0_M_AXI_GP0_RDATA;
  wire [11:0]processing_system7_0_M_AXI_GP0_RID;
  wire processing_system7_0_M_AXI_GP0_RLAST;
  wire processing_system7_0_M_AXI_GP0_RREADY;
  wire [1:0]processing_system7_0_M_AXI_GP0_RRESP;
  wire processing_system7_0_M_AXI_GP0_RVALID;
  wire [31:0]processing_system7_0_M_AXI_GP0_WDATA;
  wire processing_system7_0_M_AXI_GP0_WLAST;
  wire processing_system7_0_M_AXI_GP0_WREADY;
  wire [3:0]processing_system7_0_M_AXI_GP0_WSTRB;
  wire processing_system7_0_M_AXI_GP0_WVALID;
  wire rst_ps7_0_100M_peripheral_aresetn;
  wire [10:0]top_nqueens_0_counter;
  wire top_nqueens_0_done;
  wire NLW_axi_smc_M00_AXI_araddr_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_arid_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_arlen_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_arlock_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_aruser_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_awaddr_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_awid_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_awlen_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_awlock_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_awuser_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_bid_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_buser_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_rdata_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_rid_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_ruser_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_wdata_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_wid_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_wstrb_UNCONNECTED;
  wire NLW_axi_smc_M00_AXI_wuser_UNCONNECTED;
  wire [1:0]NLW_axi_smc_M00_AXI_arburst_UNCONNECTED;
  wire [3:0]NLW_axi_smc_M00_AXI_arcache_UNCONNECTED;
  wire [2:0]NLW_axi_smc_M00_AXI_arprot_UNCONNECTED;
  wire [3:0]NLW_axi_smc_M00_AXI_arqos_UNCONNECTED;
  wire [0:0]NLW_axi_smc_M00_AXI_arready_UNCONNECTED;
  wire [3:0]NLW_axi_smc_M00_AXI_arregion_UNCONNECTED;
  wire [2:0]NLW_axi_smc_M00_AXI_arsize_UNCONNECTED;
  wire [0:0]NLW_axi_smc_M00_AXI_arvalid_UNCONNECTED;
  wire [1:0]NLW_axi_smc_M00_AXI_awburst_UNCONNECTED;
  wire [3:0]NLW_axi_smc_M00_AXI_awcache_UNCONNECTED;
  wire [2:0]NLW_axi_smc_M00_AXI_awprot_UNCONNECTED;
  wire [3:0]NLW_axi_smc_M00_AXI_awqos_UNCONNECTED;
  wire [0:0]NLW_axi_smc_M00_AXI_awready_UNCONNECTED;
  wire [3:0]NLW_axi_smc_M00_AXI_awregion_UNCONNECTED;
  wire [2:0]NLW_axi_smc_M00_AXI_awsize_UNCONNECTED;
  wire [0:0]NLW_axi_smc_M00_AXI_awvalid_UNCONNECTED;
  wire [0:0]NLW_axi_smc_M00_AXI_bready_UNCONNECTED;
  wire [1:0]NLW_axi_smc_M00_AXI_bresp_UNCONNECTED;
  wire [0:0]NLW_axi_smc_M00_AXI_bvalid_UNCONNECTED;
  wire [0:0]NLW_axi_smc_M00_AXI_rlast_UNCONNECTED;
  wire [0:0]NLW_axi_smc_M00_AXI_rready_UNCONNECTED;
  wire [1:0]NLW_axi_smc_M00_AXI_rresp_UNCONNECTED;
  wire [0:0]NLW_axi_smc_M00_AXI_rvalid_UNCONNECTED;
  wire [0:0]NLW_axi_smc_M00_AXI_wlast_UNCONNECTED;
  wire [0:0]NLW_axi_smc_M00_AXI_wready_UNCONNECTED;
  wire [0:0]NLW_axi_smc_M00_AXI_wvalid_UNCONNECTED;
  wire [1:0]NLW_axi_smc_M01_AXI_araddr_UNCONNECTED;
  wire [2:0]NLW_axi_smc_M01_AXI_arprot_UNCONNECTED;
  wire [1:0]NLW_axi_smc_M01_AXI_awaddr_UNCONNECTED;
  wire [2:0]NLW_axi_smc_M01_AXI_awprot_UNCONNECTED;
  wire [1:0]NLW_axi_smc_M01_AXI_bresp_UNCONNECTED;
  wire [31:11]NLW_axi_smc_M01_AXI_rdata_UNCONNECTED;
  wire [1:0]NLW_axi_smc_M01_AXI_rresp_UNCONNECTED;
  wire [31:1]NLW_axi_smc_M01_AXI_wdata_UNCONNECTED;
  wire [3:0]NLW_axi_smc_M01_AXI_wstrb_UNCONNECTED;
  wire [15:8]NLW_axi_smc_S00_AXI_araddr_UNCONNECTED;
  wire [1:1]NLW_axi_smc_S00_AXI_arburst_UNCONNECTED;
  wire [3:0]NLW_axi_smc_S00_AXI_arcache_UNCONNECTED;
  wire [1:0]NLW_axi_smc_S00_AXI_arlock_UNCONNECTED;
  wire [2:0]NLW_axi_smc_S00_AXI_arprot_UNCONNECTED;
  wire [3:0]NLW_axi_smc_S00_AXI_arqos_UNCONNECTED;
  wire [2:2]NLW_axi_smc_S00_AXI_arsize_UNCONNECTED;
  wire [15:8]NLW_axi_smc_S00_AXI_awaddr_UNCONNECTED;
  wire [1:1]NLW_axi_smc_S00_AXI_awburst_UNCONNECTED;
  wire [3:0]NLW_axi_smc_S00_AXI_awcache_UNCONNECTED;
  wire [1:0]NLW_axi_smc_S00_AXI_awlock_UNCONNECTED;
  wire [2:0]NLW_axi_smc_S00_AXI_awprot_UNCONNECTED;
  wire [3:0]NLW_axi_smc_S00_AXI_awqos_UNCONNECTED;
  wire [2:2]NLW_axi_smc_S00_AXI_awsize_UNCONNECTED;
  wire [31:1]NLW_axi_smc_S00_AXI_wdata_UNCONNECTED;
  wire [11:0]NLW_axi_smc_S00_AXI_wid_UNCONNECTED;
  wire [1:0]NLW_comblock_0_axil_araddr_UNCONNECTED;
  wire [2:0]NLW_comblock_0_axil_arprot_UNCONNECTED;
  wire [1:0]NLW_comblock_0_axil_awaddr_UNCONNECTED;
  wire [2:0]NLW_comblock_0_axil_awprot_UNCONNECTED;
  wire [1:0]NLW_comblock_0_axil_bresp_UNCONNECTED;
  wire [31:11]NLW_comblock_0_axil_rdata_UNCONNECTED;
  wire [1:0]NLW_comblock_0_axil_rresp_UNCONNECTED;
  wire [31:1]NLW_comblock_0_axil_wdata_UNCONNECTED;
  wire [3:0]NLW_comblock_0_axil_wstrb_UNCONNECTED;
  wire [0:0]NLW_comblock_0_reg1_i_UNCONNECTED;
  wire NLW_processing_system7_0_TTC0_WAVE0_OUT_UNCONNECTED;
  wire NLW_processing_system7_0_TTC0_WAVE1_OUT_UNCONNECTED;
  wire NLW_processing_system7_0_TTC0_WAVE2_OUT_UNCONNECTED;
  wire NLW_processing_system7_0_USB0_VBUS_PWRSELECT_UNCONNECTED;
  wire [15:8]NLW_processing_system7_0_M_AXI_GP0_ARADDR_UNCONNECTED;
  wire [1:1]NLW_processing_system7_0_M_AXI_GP0_ARBURST_UNCONNECTED;
  wire [3:0]NLW_processing_system7_0_M_AXI_GP0_ARCACHE_UNCONNECTED;
  wire [1:0]NLW_processing_system7_0_M_AXI_GP0_ARLOCK_UNCONNECTED;
  wire [2:0]NLW_processing_system7_0_M_AXI_GP0_ARPROT_UNCONNECTED;
  wire [3:0]NLW_processing_system7_0_M_AXI_GP0_ARQOS_UNCONNECTED;
  wire [2:2]NLW_processing_system7_0_M_AXI_GP0_ARSIZE_UNCONNECTED;
  wire [15:8]NLW_processing_system7_0_M_AXI_GP0_AWADDR_UNCONNECTED;
  wire [1:1]NLW_processing_system7_0_M_AXI_GP0_AWBURST_UNCONNECTED;
  wire [3:0]NLW_processing_system7_0_M_AXI_GP0_AWCACHE_UNCONNECTED;
  wire [1:0]NLW_processing_system7_0_M_AXI_GP0_AWLOCK_UNCONNECTED;
  wire [2:0]NLW_processing_system7_0_M_AXI_GP0_AWPROT_UNCONNECTED;
  wire [3:0]NLW_processing_system7_0_M_AXI_GP0_AWQOS_UNCONNECTED;
  wire [2:2]NLW_processing_system7_0_M_AXI_GP0_AWSIZE_UNCONNECTED;
  wire [31:1]NLW_processing_system7_0_M_AXI_GP0_WDATA_UNCONNECTED;
  wire [11:0]NLW_processing_system7_0_M_AXI_GP0_WID_UNCONNECTED;
  wire [1:0]NLW_processing_system7_0_USB0_PORT_INDCTL_UNCONNECTED;
  wire NLW_rst_ps7_0_100M_aux_reset_in_UNCONNECTED;
  wire NLW_rst_ps7_0_100M_dcm_locked_UNCONNECTED;
  wire NLW_rst_ps7_0_100M_mb_debug_sys_rst_UNCONNECTED;
  wire NLW_rst_ps7_0_100M_mb_reset_UNCONNECTED;
  wire [0:0]NLW_rst_ps7_0_100M_bus_struct_reset_UNCONNECTED;
  wire [0:0]NLW_rst_ps7_0_100M_interconnect_aresetn_UNCONNECTED;
  wire [0:0]NLW_rst_ps7_0_100M_peripheral_reset_UNCONNECTED;
  wire NLW_top_nqueens_0_flag_UNCONNECTED;
  wire [0:0]NLW_top_nqueens_0_counter_UNCONNECTED;

  (* IMPORTED_FROM = "c:/Users/mlabadm/Desktop/Github/FPGA/nqueens/nqueens_fpga/nqueens_fpga.srcs/sources_1/bd/design_1/ip/design_1_axi_smc_0/design_1_axi_smc_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "bd_afc3,Vivado 2019.2" *) 
  design_1_axi_smc_0 axi_smc
       (.M00_AXI_araddr(NLW_axi_smc_M00_AXI_araddr_UNCONNECTED),
        .M00_AXI_arburst(NLW_axi_smc_M00_AXI_arburst_UNCONNECTED[1:0]),
        .M00_AXI_arcache(NLW_axi_smc_M00_AXI_arcache_UNCONNECTED[3:0]),
        .M00_AXI_arid(NLW_axi_smc_M00_AXI_arid_UNCONNECTED),
        .M00_AXI_arlen(NLW_axi_smc_M00_AXI_arlen_UNCONNECTED),
        .M00_AXI_arlock(NLW_axi_smc_M00_AXI_arlock_UNCONNECTED),
        .M00_AXI_arprot(NLW_axi_smc_M00_AXI_arprot_UNCONNECTED[2:0]),
        .M00_AXI_arqos(NLW_axi_smc_M00_AXI_arqos_UNCONNECTED[3:0]),
        .M00_AXI_arready(NLW_axi_smc_M00_AXI_arready_UNCONNECTED[0]),
        .M00_AXI_arregion(NLW_axi_smc_M00_AXI_arregion_UNCONNECTED[3:0]),
        .M00_AXI_arsize(NLW_axi_smc_M00_AXI_arsize_UNCONNECTED[2:0]),
        .M00_AXI_aruser(NLW_axi_smc_M00_AXI_aruser_UNCONNECTED),
        .M00_AXI_arvalid(NLW_axi_smc_M00_AXI_arvalid_UNCONNECTED[0]),
        .M00_AXI_awaddr(NLW_axi_smc_M00_AXI_awaddr_UNCONNECTED),
        .M00_AXI_awburst(NLW_axi_smc_M00_AXI_awburst_UNCONNECTED[1:0]),
        .M00_AXI_awcache(NLW_axi_smc_M00_AXI_awcache_UNCONNECTED[3:0]),
        .M00_AXI_awid(NLW_axi_smc_M00_AXI_awid_UNCONNECTED),
        .M00_AXI_awlen(NLW_axi_smc_M00_AXI_awlen_UNCONNECTED),
        .M00_AXI_awlock(NLW_axi_smc_M00_AXI_awlock_UNCONNECTED),
        .M00_AXI_awprot(NLW_axi_smc_M00_AXI_awprot_UNCONNECTED[2:0]),
        .M00_AXI_awqos(NLW_axi_smc_M00_AXI_awqos_UNCONNECTED[3:0]),
        .M00_AXI_awready(NLW_axi_smc_M00_AXI_awready_UNCONNECTED[0]),
        .M00_AXI_awregion(NLW_axi_smc_M00_AXI_awregion_UNCONNECTED[3:0]),
        .M00_AXI_awsize(NLW_axi_smc_M00_AXI_awsize_UNCONNECTED[2:0]),
        .M00_AXI_awuser(NLW_axi_smc_M00_AXI_awuser_UNCONNECTED),
        .M00_AXI_awvalid(NLW_axi_smc_M00_AXI_awvalid_UNCONNECTED[0]),
        .M00_AXI_bid(NLW_axi_smc_M00_AXI_bid_UNCONNECTED),
        .M00_AXI_bready(NLW_axi_smc_M00_AXI_bready_UNCONNECTED[0]),
        .M00_AXI_bresp(NLW_axi_smc_M00_AXI_bresp_UNCONNECTED[1:0]),
        .M00_AXI_buser(NLW_axi_smc_M00_AXI_buser_UNCONNECTED),
        .M00_AXI_bvalid(NLW_axi_smc_M00_AXI_bvalid_UNCONNECTED[0]),
        .M00_AXI_rdata(NLW_axi_smc_M00_AXI_rdata_UNCONNECTED),
        .M00_AXI_rid(NLW_axi_smc_M00_AXI_rid_UNCONNECTED),
        .M00_AXI_rlast(NLW_axi_smc_M00_AXI_rlast_UNCONNECTED[0]),
        .M00_AXI_rready(NLW_axi_smc_M00_AXI_rready_UNCONNECTED[0]),
        .M00_AXI_rresp(NLW_axi_smc_M00_AXI_rresp_UNCONNECTED[1:0]),
        .M00_AXI_ruser(NLW_axi_smc_M00_AXI_ruser_UNCONNECTED),
        .M00_AXI_rvalid(NLW_axi_smc_M00_AXI_rvalid_UNCONNECTED[0]),
        .M00_AXI_wdata(NLW_axi_smc_M00_AXI_wdata_UNCONNECTED),
        .M00_AXI_wid(NLW_axi_smc_M00_AXI_wid_UNCONNECTED),
        .M00_AXI_wlast(NLW_axi_smc_M00_AXI_wlast_UNCONNECTED[0]),
        .M00_AXI_wready(NLW_axi_smc_M00_AXI_wready_UNCONNECTED[0]),
        .M00_AXI_wstrb(NLW_axi_smc_M00_AXI_wstrb_UNCONNECTED),
        .M00_AXI_wuser(NLW_axi_smc_M00_AXI_wuser_UNCONNECTED),
        .M00_AXI_wvalid(NLW_axi_smc_M00_AXI_wvalid_UNCONNECTED[0]),
        .M01_AXI_araddr({axi_smc_M01_AXI_ARADDR[7:2],NLW_axi_smc_M01_AXI_araddr_UNCONNECTED[1:0]}),
        .M01_AXI_arprot(NLW_axi_smc_M01_AXI_arprot_UNCONNECTED[2:0]),
        .M01_AXI_arready(axi_smc_M01_AXI_ARREADY),
        .M01_AXI_arvalid(axi_smc_M01_AXI_ARVALID),
        .M01_AXI_awaddr({axi_smc_M01_AXI_AWADDR[7:2],NLW_axi_smc_M01_AXI_awaddr_UNCONNECTED[1:0]}),
        .M01_AXI_awprot(NLW_axi_smc_M01_AXI_awprot_UNCONNECTED[2:0]),
        .M01_AXI_awready(axi_smc_M01_AXI_AWREADY),
        .M01_AXI_awvalid(axi_smc_M01_AXI_AWVALID),
        .M01_AXI_bready(axi_smc_M01_AXI_BREADY),
        .M01_AXI_bresp(NLW_axi_smc_M01_AXI_bresp_UNCONNECTED[1:0]),
        .M01_AXI_bvalid(axi_smc_M01_AXI_BVALID),
        .M01_AXI_rdata({NLW_axi_smc_M01_AXI_rdata_UNCONNECTED[31:11],axi_smc_M01_AXI_RDATA[10:0]}),
        .M01_AXI_rready(axi_smc_M01_AXI_RREADY),
        .M01_AXI_rresp(NLW_axi_smc_M01_AXI_rresp_UNCONNECTED[1:0]),
        .M01_AXI_rvalid(axi_smc_M01_AXI_RVALID),
        .M01_AXI_wdata({NLW_axi_smc_M01_AXI_wdata_UNCONNECTED[31:1],axi_smc_M01_AXI_WDATA[0]}),
        .M01_AXI_wready(axi_smc_M01_AXI_WREADY),
        .M01_AXI_wstrb(NLW_axi_smc_M01_AXI_wstrb_UNCONNECTED[3:0]),
        .M01_AXI_wvalid(axi_smc_M01_AXI_WVALID),
        .S00_AXI_araddr({processing_system7_0_M_AXI_GP0_ARADDR[31:16],NLW_axi_smc_S00_AXI_araddr_UNCONNECTED[15:8],processing_system7_0_M_AXI_GP0_ARADDR[7:0]}),
        .S00_AXI_arburst({NLW_axi_smc_S00_AXI_arburst_UNCONNECTED[1],processing_system7_0_M_AXI_GP0_ARBURST[0]}),
        .S00_AXI_arcache(NLW_axi_smc_S00_AXI_arcache_UNCONNECTED[3:0]),
        .S00_AXI_arid(processing_system7_0_M_AXI_GP0_ARID),
        .S00_AXI_arlen(processing_system7_0_M_AXI_GP0_ARLEN),
        .S00_AXI_arlock(NLW_axi_smc_S00_AXI_arlock_UNCONNECTED[1:0]),
        .S00_AXI_arprot(NLW_axi_smc_S00_AXI_arprot_UNCONNECTED[2:0]),
        .S00_AXI_arqos(NLW_axi_smc_S00_AXI_arqos_UNCONNECTED[3:0]),
        .S00_AXI_arready(processing_system7_0_M_AXI_GP0_ARREADY),
        .S00_AXI_arsize({NLW_axi_smc_S00_AXI_arsize_UNCONNECTED[2],processing_system7_0_M_AXI_GP0_ARSIZE[1:0]}),
        .S00_AXI_arvalid(processing_system7_0_M_AXI_GP0_ARVALID),
        .S00_AXI_awaddr({processing_system7_0_M_AXI_GP0_AWADDR[31:16],NLW_axi_smc_S00_AXI_awaddr_UNCONNECTED[15:8],processing_system7_0_M_AXI_GP0_AWADDR[7:0]}),
        .S00_AXI_awburst({NLW_axi_smc_S00_AXI_awburst_UNCONNECTED[1],processing_system7_0_M_AXI_GP0_AWBURST[0]}),
        .S00_AXI_awcache(NLW_axi_smc_S00_AXI_awcache_UNCONNECTED[3:0]),
        .S00_AXI_awid(processing_system7_0_M_AXI_GP0_AWID),
        .S00_AXI_awlen(processing_system7_0_M_AXI_GP0_AWLEN),
        .S00_AXI_awlock(NLW_axi_smc_S00_AXI_awlock_UNCONNECTED[1:0]),
        .S00_AXI_awprot(NLW_axi_smc_S00_AXI_awprot_UNCONNECTED[2:0]),
        .S00_AXI_awqos(NLW_axi_smc_S00_AXI_awqos_UNCONNECTED[3:0]),
        .S00_AXI_awready(processing_system7_0_M_AXI_GP0_AWREADY),
        .S00_AXI_awsize({NLW_axi_smc_S00_AXI_awsize_UNCONNECTED[2],processing_system7_0_M_AXI_GP0_AWSIZE[1:0]}),
        .S00_AXI_awvalid(processing_system7_0_M_AXI_GP0_AWVALID),
        .S00_AXI_bid(processing_system7_0_M_AXI_GP0_BID),
        .S00_AXI_bready(processing_system7_0_M_AXI_GP0_BREADY),
        .S00_AXI_bresp(processing_system7_0_M_AXI_GP0_BRESP),
        .S00_AXI_bvalid(processing_system7_0_M_AXI_GP0_BVALID),
        .S00_AXI_rdata(processing_system7_0_M_AXI_GP0_RDATA),
        .S00_AXI_rid(processing_system7_0_M_AXI_GP0_RID),
        .S00_AXI_rlast(processing_system7_0_M_AXI_GP0_RLAST),
        .S00_AXI_rready(processing_system7_0_M_AXI_GP0_RREADY),
        .S00_AXI_rresp(processing_system7_0_M_AXI_GP0_RRESP),
        .S00_AXI_rvalid(processing_system7_0_M_AXI_GP0_RVALID),
        .S00_AXI_wdata({NLW_axi_smc_S00_AXI_wdata_UNCONNECTED[31:1],processing_system7_0_M_AXI_GP0_WDATA[0]}),
        .S00_AXI_wid(NLW_axi_smc_S00_AXI_wid_UNCONNECTED[11:0]),
        .S00_AXI_wlast(processing_system7_0_M_AXI_GP0_WLAST),
        .S00_AXI_wready(processing_system7_0_M_AXI_GP0_WREADY),
        .S00_AXI_wstrb(processing_system7_0_M_AXI_GP0_WSTRB),
        .S00_AXI_wvalid(processing_system7_0_M_AXI_GP0_WVALID),
        .aclk(processing_system7_0_FCLK_CLK0),
        .aresetn(rst_ps7_0_100M_peripheral_aresetn));
  (* IMPORTED_FROM = "c:/Users/mlabadm/Desktop/Github/FPGA/nqueens/nqueens_fpga/nqueens_fpga.srcs/sources_1/bd/design_1/ip/design_1_comblock_0_0/design_1_comblock_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "axi_comblock,Vivado 2019.2" *) 
  design_1_comblock_0_0 comblock_0
       (.axil_aclk(processing_system7_0_FCLK_CLK0),
        .axil_araddr({axi_smc_M01_AXI_ARADDR[7:2],NLW_comblock_0_axil_araddr_UNCONNECTED[1:0]}),
        .axil_aresetn(rst_ps7_0_100M_peripheral_aresetn),
        .axil_arprot(NLW_comblock_0_axil_arprot_UNCONNECTED[2:0]),
        .axil_arready(axi_smc_M01_AXI_ARREADY),
        .axil_arvalid(axi_smc_M01_AXI_ARVALID),
        .axil_awaddr({axi_smc_M01_AXI_AWADDR[7:2],NLW_comblock_0_axil_awaddr_UNCONNECTED[1:0]}),
        .axil_awprot(NLW_comblock_0_axil_awprot_UNCONNECTED[2:0]),
        .axil_awready(axi_smc_M01_AXI_AWREADY),
        .axil_awvalid(axi_smc_M01_AXI_AWVALID),
        .axil_bready(axi_smc_M01_AXI_BREADY),
        .axil_bresp(NLW_comblock_0_axil_bresp_UNCONNECTED[1:0]),
        .axil_bvalid(axi_smc_M01_AXI_BVALID),
        .axil_rdata({NLW_comblock_0_axil_rdata_UNCONNECTED[31:11],axi_smc_M01_AXI_RDATA[10:0]}),
        .axil_rready(axi_smc_M01_AXI_RREADY),
        .axil_rresp(NLW_comblock_0_axil_rresp_UNCONNECTED[1:0]),
        .axil_rvalid(axi_smc_M01_AXI_RVALID),
        .axil_wdata({NLW_comblock_0_axil_wdata_UNCONNECTED[31:1],axi_smc_M01_AXI_WDATA[0]}),
        .axil_wready(axi_smc_M01_AXI_WREADY),
        .axil_wstrb(NLW_comblock_0_axil_wstrb_UNCONNECTED[3:0]),
        .axil_wvalid(axi_smc_M01_AXI_WVALID),
        .reg0_i({top_nqueens_0_done,top_nqueens_0_done,top_nqueens_0_done,top_nqueens_0_done,top_nqueens_0_done,top_nqueens_0_done,top_nqueens_0_done,top_nqueens_0_done,top_nqueens_0_done,top_nqueens_0_done,top_nqueens_0_done}),
        .reg0_o(comblock_0_reg0_o),
        .reg1_i({top_nqueens_0_counter[10:1],NLW_comblock_0_reg1_i_UNCONNECTED[0]}));
  (* IMPORTED_FROM = "c:/Users/mlabadm/Desktop/Github/FPGA/nqueens/nqueens_fpga/nqueens_fpga.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "processing_system7_v5_5_processing_system7,Vivado 2019.2" *) 
  design_1_processing_system7_0_0 processing_system7_0
       (.DDR_Addr(DDR_addr),
        .DDR_BankAddr(DDR_ba),
        .DDR_CAS_n(DDR_cas_n),
        .DDR_CKE(DDR_cke),
        .DDR_CS_n(DDR_cs_n),
        .DDR_Clk(DDR_ck_p),
        .DDR_Clk_n(DDR_ck_n),
        .DDR_DM(DDR_dm),
        .DDR_DQ(DDR_dq),
        .DDR_DQS(DDR_dqs_p),
        .DDR_DQS_n(DDR_dqs_n),
        .DDR_DRSTB(DDR_reset_n),
        .DDR_ODT(DDR_odt),
        .DDR_RAS_n(DDR_ras_n),
        .DDR_VRN(FIXED_IO_ddr_vrn),
        .DDR_VRP(FIXED_IO_ddr_vrp),
        .DDR_WEB(DDR_we_n),
        .FCLK_CLK0(processing_system7_0_FCLK_CLK0),
        .FCLK_RESET0_N(processing_system7_0_FCLK_RESET0_N),
        .MIO(FIXED_IO_mio),
        .M_AXI_GP0_ACLK(processing_system7_0_FCLK_CLK0),
        .M_AXI_GP0_ARADDR({processing_system7_0_M_AXI_GP0_ARADDR[31:16],NLW_processing_system7_0_M_AXI_GP0_ARADDR_UNCONNECTED[15:8],processing_system7_0_M_AXI_GP0_ARADDR[7:0]}),
        .M_AXI_GP0_ARBURST({NLW_processing_system7_0_M_AXI_GP0_ARBURST_UNCONNECTED[1],processing_system7_0_M_AXI_GP0_ARBURST[0]}),
        .M_AXI_GP0_ARCACHE(NLW_processing_system7_0_M_AXI_GP0_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_GP0_ARID(processing_system7_0_M_AXI_GP0_ARID),
        .M_AXI_GP0_ARLEN(processing_system7_0_M_AXI_GP0_ARLEN),
        .M_AXI_GP0_ARLOCK(NLW_processing_system7_0_M_AXI_GP0_ARLOCK_UNCONNECTED[1:0]),
        .M_AXI_GP0_ARPROT(NLW_processing_system7_0_M_AXI_GP0_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_GP0_ARQOS(NLW_processing_system7_0_M_AXI_GP0_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_GP0_ARREADY(processing_system7_0_M_AXI_GP0_ARREADY),
        .M_AXI_GP0_ARSIZE({NLW_processing_system7_0_M_AXI_GP0_ARSIZE_UNCONNECTED[2],processing_system7_0_M_AXI_GP0_ARSIZE[1:0]}),
        .M_AXI_GP0_ARVALID(processing_system7_0_M_AXI_GP0_ARVALID),
        .M_AXI_GP0_AWADDR({processing_system7_0_M_AXI_GP0_AWADDR[31:16],NLW_processing_system7_0_M_AXI_GP0_AWADDR_UNCONNECTED[15:8],processing_system7_0_M_AXI_GP0_AWADDR[7:0]}),
        .M_AXI_GP0_AWBURST({NLW_processing_system7_0_M_AXI_GP0_AWBURST_UNCONNECTED[1],processing_system7_0_M_AXI_GP0_AWBURST[0]}),
        .M_AXI_GP0_AWCACHE(NLW_processing_system7_0_M_AXI_GP0_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_GP0_AWID(processing_system7_0_M_AXI_GP0_AWID),
        .M_AXI_GP0_AWLEN(processing_system7_0_M_AXI_GP0_AWLEN),
        .M_AXI_GP0_AWLOCK(NLW_processing_system7_0_M_AXI_GP0_AWLOCK_UNCONNECTED[1:0]),
        .M_AXI_GP0_AWPROT(NLW_processing_system7_0_M_AXI_GP0_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_GP0_AWQOS(NLW_processing_system7_0_M_AXI_GP0_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_GP0_AWREADY(processing_system7_0_M_AXI_GP0_AWREADY),
        .M_AXI_GP0_AWSIZE({NLW_processing_system7_0_M_AXI_GP0_AWSIZE_UNCONNECTED[2],processing_system7_0_M_AXI_GP0_AWSIZE[1:0]}),
        .M_AXI_GP0_AWVALID(processing_system7_0_M_AXI_GP0_AWVALID),
        .M_AXI_GP0_BID(processing_system7_0_M_AXI_GP0_BID),
        .M_AXI_GP0_BREADY(processing_system7_0_M_AXI_GP0_BREADY),
        .M_AXI_GP0_BRESP(processing_system7_0_M_AXI_GP0_BRESP),
        .M_AXI_GP0_BVALID(processing_system7_0_M_AXI_GP0_BVALID),
        .M_AXI_GP0_RDATA(processing_system7_0_M_AXI_GP0_RDATA),
        .M_AXI_GP0_RID(processing_system7_0_M_AXI_GP0_RID),
        .M_AXI_GP0_RLAST(processing_system7_0_M_AXI_GP0_RLAST),
        .M_AXI_GP0_RREADY(processing_system7_0_M_AXI_GP0_RREADY),
        .M_AXI_GP0_RRESP(processing_system7_0_M_AXI_GP0_RRESP),
        .M_AXI_GP0_RVALID(processing_system7_0_M_AXI_GP0_RVALID),
        .M_AXI_GP0_WDATA({NLW_processing_system7_0_M_AXI_GP0_WDATA_UNCONNECTED[31:1],processing_system7_0_M_AXI_GP0_WDATA[0]}),
        .M_AXI_GP0_WID(NLW_processing_system7_0_M_AXI_GP0_WID_UNCONNECTED[11:0]),
        .M_AXI_GP0_WLAST(processing_system7_0_M_AXI_GP0_WLAST),
        .M_AXI_GP0_WREADY(processing_system7_0_M_AXI_GP0_WREADY),
        .M_AXI_GP0_WSTRB(processing_system7_0_M_AXI_GP0_WSTRB),
        .M_AXI_GP0_WVALID(processing_system7_0_M_AXI_GP0_WVALID),
        .PS_CLK(FIXED_IO_ps_clk),
        .PS_PORB(FIXED_IO_ps_porb),
        .PS_SRSTB(FIXED_IO_ps_srstb),
        .TTC0_WAVE0_OUT(NLW_processing_system7_0_TTC0_WAVE0_OUT_UNCONNECTED),
        .TTC0_WAVE1_OUT(NLW_processing_system7_0_TTC0_WAVE1_OUT_UNCONNECTED),
        .TTC0_WAVE2_OUT(NLW_processing_system7_0_TTC0_WAVE2_OUT_UNCONNECTED),
        .USB0_PORT_INDCTL(NLW_processing_system7_0_USB0_PORT_INDCTL_UNCONNECTED[1:0]),
        .USB0_VBUS_PWRFAULT(1'b0),
        .USB0_VBUS_PWRSELECT(NLW_processing_system7_0_USB0_VBUS_PWRSELECT_UNCONNECTED));
  (* IMPORTED_FROM = "c:/Users/mlabadm/Desktop/Github/FPGA/nqueens/nqueens_fpga/nqueens_fpga.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "proc_sys_reset,Vivado 2019.2" *) 
  design_1_rst_ps7_0_100M_0 rst_ps7_0_100M
       (.aux_reset_in(NLW_rst_ps7_0_100M_aux_reset_in_UNCONNECTED),
        .bus_struct_reset(NLW_rst_ps7_0_100M_bus_struct_reset_UNCONNECTED[0]),
        .dcm_locked(NLW_rst_ps7_0_100M_dcm_locked_UNCONNECTED),
        .ext_reset_in(processing_system7_0_FCLK_RESET0_N),
        .interconnect_aresetn(NLW_rst_ps7_0_100M_interconnect_aresetn_UNCONNECTED[0]),
        .mb_debug_sys_rst(NLW_rst_ps7_0_100M_mb_debug_sys_rst_UNCONNECTED),
        .mb_reset(NLW_rst_ps7_0_100M_mb_reset_UNCONNECTED),
        .peripheral_aresetn(rst_ps7_0_100M_peripheral_aresetn),
        .peripheral_reset(NLW_rst_ps7_0_100M_peripheral_reset_UNCONNECTED[0]),
        .slowest_sync_clk(processing_system7_0_FCLK_CLK0));
  (* IMPORTED_FROM = "c:/Users/mlabadm/Desktop/Github/FPGA/nqueens/nqueens_fpga/nqueens_fpga.srcs/sources_1/bd/design_1/ip/design_1_top_nqueens_0_0/design_1_top_nqueens_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "top_nqueens,Vivado 2019.2" *) 
  design_1_top_nqueens_0_0 top_nqueens_0
       (.clk(processing_system7_0_FCLK_CLK0),
        .counter({top_nqueens_0_counter[10:1],NLW_top_nqueens_0_counter_UNCONNECTED[0]}),
        .done(top_nqueens_0_done),
        .flag(NLW_top_nqueens_0_flag_UNCONNECTED),
        .nRst(comblock_0_reg0_o));
endmodule

(* CHECK_LICENSE_TYPE = "design_1_axi_smc_0,bd_afc3,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "bd_afc3,Vivado 2019.2" *) 
module design_1_axi_smc_0
   (aclk,
    aresetn,
    S00_AXI_awid,
    S00_AXI_awaddr,
    S00_AXI_awlen,
    S00_AXI_awsize,
    S00_AXI_awburst,
    S00_AXI_awlock,
    S00_AXI_awcache,
    S00_AXI_awprot,
    S00_AXI_awqos,
    S00_AXI_awvalid,
    S00_AXI_awready,
    S00_AXI_wid,
    S00_AXI_wdata,
    S00_AXI_wstrb,
    S00_AXI_wlast,
    S00_AXI_wvalid,
    S00_AXI_wready,
    S00_AXI_bid,
    S00_AXI_bresp,
    S00_AXI_bvalid,
    S00_AXI_bready,
    S00_AXI_arid,
    S00_AXI_araddr,
    S00_AXI_arlen,
    S00_AXI_arsize,
    S00_AXI_arburst,
    S00_AXI_arlock,
    S00_AXI_arcache,
    S00_AXI_arprot,
    S00_AXI_arqos,
    S00_AXI_arvalid,
    S00_AXI_arready,
    S00_AXI_rid,
    S00_AXI_rdata,
    S00_AXI_rresp,
    S00_AXI_rlast,
    S00_AXI_rvalid,
    S00_AXI_rready,
    M00_AXI_awid,
    M00_AXI_awaddr,
    M00_AXI_awlen,
    M00_AXI_awsize,
    M00_AXI_awburst,
    M00_AXI_awlock,
    M00_AXI_awcache,
    M00_AXI_awprot,
    M00_AXI_awregion,
    M00_AXI_awqos,
    M00_AXI_awuser,
    M00_AXI_awvalid,
    M00_AXI_awready,
    M00_AXI_wid,
    M00_AXI_wdata,
    M00_AXI_wstrb,
    M00_AXI_wlast,
    M00_AXI_wuser,
    M00_AXI_wvalid,
    M00_AXI_wready,
    M00_AXI_bid,
    M00_AXI_bresp,
    M00_AXI_buser,
    M00_AXI_bvalid,
    M00_AXI_bready,
    M00_AXI_arid,
    M00_AXI_araddr,
    M00_AXI_arlen,
    M00_AXI_arsize,
    M00_AXI_arburst,
    M00_AXI_arlock,
    M00_AXI_arcache,
    M00_AXI_arprot,
    M00_AXI_arregion,
    M00_AXI_arqos,
    M00_AXI_aruser,
    M00_AXI_arvalid,
    M00_AXI_arready,
    M00_AXI_rid,
    M00_AXI_rdata,
    M00_AXI_rresp,
    M00_AXI_rlast,
    M00_AXI_ruser,
    M00_AXI_rvalid,
    M00_AXI_rready,
    M01_AXI_awaddr,
    M01_AXI_awprot,
    M01_AXI_awvalid,
    M01_AXI_awready,
    M01_AXI_wdata,
    M01_AXI_wstrb,
    M01_AXI_wvalid,
    M01_AXI_wready,
    M01_AXI_bresp,
    M01_AXI_bvalid,
    M01_AXI_bready,
    M01_AXI_araddr,
    M01_AXI_arprot,
    M01_AXI_arvalid,
    M01_AXI_arready,
    M01_AXI_rdata,
    M01_AXI_rresp,
    M01_AXI_rvalid,
    M01_AXI_rready);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 CLK.aclk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME CLK.aclk, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, ASSOCIATED_BUSIF M00_AXI:M01_AXI:S00_AXI, INSERT_VIP 0, ASSOCIATED_CLKEN s_sc_aclken" *) input aclk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 RST.aresetn RST" *) (* x_interface_parameter = "XIL_INTERFACENAME RST.aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input aresetn;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWID" *) input [11:0]S00_AXI_awid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWADDR" *) input [31:0]S00_AXI_awaddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWLEN" *) input [3:0]S00_AXI_awlen;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWSIZE" *) input [2:0]S00_AXI_awsize;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWBURST" *) input [1:0]S00_AXI_awburst;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWLOCK" *) input [1:0]S00_AXI_awlock;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWCACHE" *) input [3:0]S00_AXI_awcache;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWPROT" *) input [2:0]S00_AXI_awprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWQOS" *) input [3:0]S00_AXI_awqos;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWVALID" *) input S00_AXI_awvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWREADY" *) output S00_AXI_awready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WID" *) input [11:0]S00_AXI_wid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WDATA" *) input [31:0]S00_AXI_wdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WSTRB" *) input [3:0]S00_AXI_wstrb;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WLAST" *) input S00_AXI_wlast;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WVALID" *) input S00_AXI_wvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WREADY" *) output S00_AXI_wready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BID" *) output [11:0]S00_AXI_bid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BRESP" *) output [1:0]S00_AXI_bresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BVALID" *) output S00_AXI_bvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BREADY" *) input S00_AXI_bready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARID" *) input [11:0]S00_AXI_arid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARADDR" *) input [31:0]S00_AXI_araddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARLEN" *) input [3:0]S00_AXI_arlen;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARSIZE" *) input [2:0]S00_AXI_arsize;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARBURST" *) input [1:0]S00_AXI_arburst;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARLOCK" *) input [1:0]S00_AXI_arlock;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARCACHE" *) input [3:0]S00_AXI_arcache;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARPROT" *) input [2:0]S00_AXI_arprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARQOS" *) input [3:0]S00_AXI_arqos;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARVALID" *) input S00_AXI_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARREADY" *) output S00_AXI_arready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RID" *) output [11:0]S00_AXI_rid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RDATA" *) output [31:0]S00_AXI_rdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RRESP" *) output [1:0]S00_AXI_rresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RLAST" *) output S00_AXI_rlast;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RVALID" *) output S00_AXI_rvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RREADY" *) (* x_interface_parameter = "XIL_INTERFACENAME S00_AXI, DATA_WIDTH 32, PROTOCOL AXI3, FREQ_HZ 100000000, ID_WIDTH 12, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 8, NUM_WRITE_OUTSTANDING 8, MAX_BURST_LENGTH 16, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 4, NUM_WRITE_THREADS 4, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input S00_AXI_rready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWID" *) output M00_AXI_awid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWADDR" *) output M00_AXI_awaddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWLEN" *) output M00_AXI_awlen;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWSIZE" *) output [2:0]M00_AXI_awsize;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWBURST" *) output [1:0]M00_AXI_awburst;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWLOCK" *) output M00_AXI_awlock;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWCACHE" *) output [3:0]M00_AXI_awcache;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWPROT" *) output [2:0]M00_AXI_awprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWREGION" *) output [3:0]M00_AXI_awregion;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWQOS" *) output [3:0]M00_AXI_awqos;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWUSER" *) output M00_AXI_awuser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWVALID" *) output [0:0]M00_AXI_awvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWREADY" *) input [0:0]M00_AXI_awready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WID" *) output M00_AXI_wid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WDATA" *) output M00_AXI_wdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WSTRB" *) output M00_AXI_wstrb;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WLAST" *) output [0:0]M00_AXI_wlast;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WUSER" *) output M00_AXI_wuser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WVALID" *) output [0:0]M00_AXI_wvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WREADY" *) input [0:0]M00_AXI_wready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BID" *) input M00_AXI_bid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BRESP" *) input [1:0]M00_AXI_bresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BUSER" *) input M00_AXI_buser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BVALID" *) input [0:0]M00_AXI_bvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BREADY" *) output [0:0]M00_AXI_bready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARID" *) output M00_AXI_arid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARADDR" *) output M00_AXI_araddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARLEN" *) output M00_AXI_arlen;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARSIZE" *) output [2:0]M00_AXI_arsize;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARBURST" *) output [1:0]M00_AXI_arburst;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARLOCK" *) output M00_AXI_arlock;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARCACHE" *) output [3:0]M00_AXI_arcache;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARPROT" *) output [2:0]M00_AXI_arprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARREGION" *) output [3:0]M00_AXI_arregion;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARQOS" *) output [3:0]M00_AXI_arqos;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARUSER" *) output M00_AXI_aruser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARVALID" *) output [0:0]M00_AXI_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARREADY" *) input [0:0]M00_AXI_arready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RID" *) input M00_AXI_rid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RDATA" *) input M00_AXI_rdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RRESP" *) input [1:0]M00_AXI_rresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RLAST" *) input [0:0]M00_AXI_rlast;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RUSER" *) input M00_AXI_ruser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RVALID" *) input [0:0]M00_AXI_rvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RREADY" *) (* x_interface_parameter = "XIL_INTERFACENAME M00_AXI, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 1, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 256, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) output [0:0]M00_AXI_rready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI AWADDR" *) output [7:0]M01_AXI_awaddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI AWPROT" *) output [2:0]M01_AXI_awprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI AWVALID" *) output M01_AXI_awvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI AWREADY" *) input M01_AXI_awready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI WDATA" *) output [31:0]M01_AXI_wdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI WSTRB" *) output [3:0]M01_AXI_wstrb;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI WVALID" *) output M01_AXI_wvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI WREADY" *) input M01_AXI_wready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI BRESP" *) input [1:0]M01_AXI_bresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI BVALID" *) input M01_AXI_bvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI BREADY" *) output M01_AXI_bready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI ARADDR" *) output [7:0]M01_AXI_araddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI ARPROT" *) output [2:0]M01_AXI_arprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI ARVALID" *) output M01_AXI_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI ARREADY" *) input M01_AXI_arready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI RDATA" *) input [31:0]M01_AXI_rdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI RRESP" *) input [1:0]M01_AXI_rresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI RVALID" *) input M01_AXI_rvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI RREADY" *) (* x_interface_parameter = "XIL_INTERFACENAME M01_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 8, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 8, NUM_WRITE_OUTSTANDING 8, MAX_BURST_LENGTH 1, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) output M01_AXI_rready;

  wire [7:0]M01_AXI_araddr;
  wire M01_AXI_arready;
  wire M01_AXI_arvalid;
  wire [7:0]M01_AXI_awaddr;
  wire M01_AXI_awready;
  wire M01_AXI_awvalid;
  wire M01_AXI_bready;
  wire M01_AXI_bvalid;
  wire [31:0]M01_AXI_rdata;
  wire M01_AXI_rready;
  wire M01_AXI_rvalid;
  wire [31:0]M01_AXI_wdata;
  wire M01_AXI_wready;
  wire M01_AXI_wvalid;
  wire [31:0]S00_AXI_araddr;
  wire [1:0]S00_AXI_arburst;
  wire [11:0]S00_AXI_arid;
  wire [3:0]S00_AXI_arlen;
  wire S00_AXI_arready;
  wire [2:0]S00_AXI_arsize;
  wire S00_AXI_arvalid;
  wire [31:0]S00_AXI_awaddr;
  wire [1:0]S00_AXI_awburst;
  wire [11:0]S00_AXI_awid;
  wire [3:0]S00_AXI_awlen;
  wire S00_AXI_awready;
  wire [2:0]S00_AXI_awsize;
  wire S00_AXI_awvalid;
  wire [11:0]S00_AXI_bid;
  wire S00_AXI_bready;
  wire [1:0]S00_AXI_bresp;
  wire S00_AXI_bvalid;
  wire [31:0]S00_AXI_rdata;
  wire [11:0]S00_AXI_rid;
  wire S00_AXI_rlast;
  wire S00_AXI_rready;
  wire [1:0]S00_AXI_rresp;
  wire S00_AXI_rvalid;
  wire [31:0]S00_AXI_wdata;
  wire S00_AXI_wlast;
  wire S00_AXI_wready;
  wire [3:0]S00_AXI_wstrb;
  wire S00_AXI_wvalid;
  wire aclk;
  wire aresetn;
  wire NLW_inst_M00_AXI_araddr_UNCONNECTED;
  wire NLW_inst_M00_AXI_arid_UNCONNECTED;
  wire NLW_inst_M00_AXI_arlen_UNCONNECTED;
  wire NLW_inst_M00_AXI_arlock_UNCONNECTED;
  wire NLW_inst_M00_AXI_aruser_UNCONNECTED;
  wire NLW_inst_M00_AXI_awaddr_UNCONNECTED;
  wire NLW_inst_M00_AXI_awid_UNCONNECTED;
  wire NLW_inst_M00_AXI_awlen_UNCONNECTED;
  wire NLW_inst_M00_AXI_awlock_UNCONNECTED;
  wire NLW_inst_M00_AXI_awuser_UNCONNECTED;
  wire NLW_inst_M00_AXI_bid_UNCONNECTED;
  wire NLW_inst_M00_AXI_buser_UNCONNECTED;
  wire NLW_inst_M00_AXI_rdata_UNCONNECTED;
  wire NLW_inst_M00_AXI_rid_UNCONNECTED;
  wire NLW_inst_M00_AXI_ruser_UNCONNECTED;
  wire NLW_inst_M00_AXI_wdata_UNCONNECTED;
  wire NLW_inst_M00_AXI_wid_UNCONNECTED;
  wire NLW_inst_M00_AXI_wstrb_UNCONNECTED;
  wire NLW_inst_M00_AXI_wuser_UNCONNECTED;
  wire [1:0]NLW_inst_M00_AXI_arburst_UNCONNECTED;
  wire [3:0]NLW_inst_M00_AXI_arcache_UNCONNECTED;
  wire [2:0]NLW_inst_M00_AXI_arprot_UNCONNECTED;
  wire [3:0]NLW_inst_M00_AXI_arqos_UNCONNECTED;
  wire [0:0]NLW_inst_M00_AXI_arready_UNCONNECTED;
  wire [3:0]NLW_inst_M00_AXI_arregion_UNCONNECTED;
  wire [2:0]NLW_inst_M00_AXI_arsize_UNCONNECTED;
  wire [0:0]NLW_inst_M00_AXI_arvalid_UNCONNECTED;
  wire [1:0]NLW_inst_M00_AXI_awburst_UNCONNECTED;
  wire [3:0]NLW_inst_M00_AXI_awcache_UNCONNECTED;
  wire [2:0]NLW_inst_M00_AXI_awprot_UNCONNECTED;
  wire [3:0]NLW_inst_M00_AXI_awqos_UNCONNECTED;
  wire [0:0]NLW_inst_M00_AXI_awready_UNCONNECTED;
  wire [3:0]NLW_inst_M00_AXI_awregion_UNCONNECTED;
  wire [2:0]NLW_inst_M00_AXI_awsize_UNCONNECTED;
  wire [0:0]NLW_inst_M00_AXI_awvalid_UNCONNECTED;
  wire [0:0]NLW_inst_M00_AXI_bready_UNCONNECTED;
  wire [1:0]NLW_inst_M00_AXI_bresp_UNCONNECTED;
  wire [0:0]NLW_inst_M00_AXI_bvalid_UNCONNECTED;
  wire [0:0]NLW_inst_M00_AXI_rlast_UNCONNECTED;
  wire [0:0]NLW_inst_M00_AXI_rready_UNCONNECTED;
  wire [1:0]NLW_inst_M00_AXI_rresp_UNCONNECTED;
  wire [0:0]NLW_inst_M00_AXI_rvalid_UNCONNECTED;
  wire [0:0]NLW_inst_M00_AXI_wlast_UNCONNECTED;
  wire [0:0]NLW_inst_M00_AXI_wready_UNCONNECTED;
  wire [0:0]NLW_inst_M00_AXI_wvalid_UNCONNECTED;
  wire [1:0]NLW_inst_M01_AXI_araddr_UNCONNECTED;
  wire [2:0]NLW_inst_M01_AXI_arprot_UNCONNECTED;
  wire [1:0]NLW_inst_M01_AXI_awaddr_UNCONNECTED;
  wire [2:0]NLW_inst_M01_AXI_awprot_UNCONNECTED;
  wire [1:0]NLW_inst_M01_AXI_bresp_UNCONNECTED;
  wire [31:11]NLW_inst_M01_AXI_rdata_UNCONNECTED;
  wire [1:0]NLW_inst_M01_AXI_rresp_UNCONNECTED;
  wire [31:1]NLW_inst_M01_AXI_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_M01_AXI_wstrb_UNCONNECTED;
  wire [15:8]NLW_inst_S00_AXI_araddr_UNCONNECTED;
  wire [1:1]NLW_inst_S00_AXI_arburst_UNCONNECTED;
  wire [3:0]NLW_inst_S00_AXI_arcache_UNCONNECTED;
  wire [1:0]NLW_inst_S00_AXI_arlock_UNCONNECTED;
  wire [2:0]NLW_inst_S00_AXI_arprot_UNCONNECTED;
  wire [3:0]NLW_inst_S00_AXI_arqos_UNCONNECTED;
  wire [2:2]NLW_inst_S00_AXI_arsize_UNCONNECTED;
  wire [15:8]NLW_inst_S00_AXI_awaddr_UNCONNECTED;
  wire [1:1]NLW_inst_S00_AXI_awburst_UNCONNECTED;
  wire [3:0]NLW_inst_S00_AXI_awcache_UNCONNECTED;
  wire [1:0]NLW_inst_S00_AXI_awlock_UNCONNECTED;
  wire [2:0]NLW_inst_S00_AXI_awprot_UNCONNECTED;
  wire [3:0]NLW_inst_S00_AXI_awqos_UNCONNECTED;
  wire [2:2]NLW_inst_S00_AXI_awsize_UNCONNECTED;
  wire [31:1]NLW_inst_S00_AXI_wdata_UNCONNECTED;
  wire [11:0]NLW_inst_S00_AXI_wid_UNCONNECTED;

  (* hw_handoff = "design_1_axi_smc_0.hwdef" *) 
  design_1_axi_smc_0_bd_afc3 inst
       (.M00_AXI_araddr(NLW_inst_M00_AXI_araddr_UNCONNECTED),
        .M00_AXI_arburst(NLW_inst_M00_AXI_arburst_UNCONNECTED[1:0]),
        .M00_AXI_arcache(NLW_inst_M00_AXI_arcache_UNCONNECTED[3:0]),
        .M00_AXI_arid(NLW_inst_M00_AXI_arid_UNCONNECTED),
        .M00_AXI_arlen(NLW_inst_M00_AXI_arlen_UNCONNECTED),
        .M00_AXI_arlock(NLW_inst_M00_AXI_arlock_UNCONNECTED),
        .M00_AXI_arprot(NLW_inst_M00_AXI_arprot_UNCONNECTED[2:0]),
        .M00_AXI_arqos(NLW_inst_M00_AXI_arqos_UNCONNECTED[3:0]),
        .M00_AXI_arready(NLW_inst_M00_AXI_arready_UNCONNECTED[0]),
        .M00_AXI_arregion(NLW_inst_M00_AXI_arregion_UNCONNECTED[3:0]),
        .M00_AXI_arsize(NLW_inst_M00_AXI_arsize_UNCONNECTED[2:0]),
        .M00_AXI_aruser(NLW_inst_M00_AXI_aruser_UNCONNECTED),
        .M00_AXI_arvalid(NLW_inst_M00_AXI_arvalid_UNCONNECTED[0]),
        .M00_AXI_awaddr(NLW_inst_M00_AXI_awaddr_UNCONNECTED),
        .M00_AXI_awburst(NLW_inst_M00_AXI_awburst_UNCONNECTED[1:0]),
        .M00_AXI_awcache(NLW_inst_M00_AXI_awcache_UNCONNECTED[3:0]),
        .M00_AXI_awid(NLW_inst_M00_AXI_awid_UNCONNECTED),
        .M00_AXI_awlen(NLW_inst_M00_AXI_awlen_UNCONNECTED),
        .M00_AXI_awlock(NLW_inst_M00_AXI_awlock_UNCONNECTED),
        .M00_AXI_awprot(NLW_inst_M00_AXI_awprot_UNCONNECTED[2:0]),
        .M00_AXI_awqos(NLW_inst_M00_AXI_awqos_UNCONNECTED[3:0]),
        .M00_AXI_awready(NLW_inst_M00_AXI_awready_UNCONNECTED[0]),
        .M00_AXI_awregion(NLW_inst_M00_AXI_awregion_UNCONNECTED[3:0]),
        .M00_AXI_awsize(NLW_inst_M00_AXI_awsize_UNCONNECTED[2:0]),
        .M00_AXI_awuser(NLW_inst_M00_AXI_awuser_UNCONNECTED),
        .M00_AXI_awvalid(NLW_inst_M00_AXI_awvalid_UNCONNECTED[0]),
        .M00_AXI_bid(NLW_inst_M00_AXI_bid_UNCONNECTED),
        .M00_AXI_bready(NLW_inst_M00_AXI_bready_UNCONNECTED[0]),
        .M00_AXI_bresp(NLW_inst_M00_AXI_bresp_UNCONNECTED[1:0]),
        .M00_AXI_buser(NLW_inst_M00_AXI_buser_UNCONNECTED),
        .M00_AXI_bvalid(NLW_inst_M00_AXI_bvalid_UNCONNECTED[0]),
        .M00_AXI_rdata(NLW_inst_M00_AXI_rdata_UNCONNECTED),
        .M00_AXI_rid(NLW_inst_M00_AXI_rid_UNCONNECTED),
        .M00_AXI_rlast(NLW_inst_M00_AXI_rlast_UNCONNECTED[0]),
        .M00_AXI_rready(NLW_inst_M00_AXI_rready_UNCONNECTED[0]),
        .M00_AXI_rresp(NLW_inst_M00_AXI_rresp_UNCONNECTED[1:0]),
        .M00_AXI_ruser(NLW_inst_M00_AXI_ruser_UNCONNECTED),
        .M00_AXI_rvalid(NLW_inst_M00_AXI_rvalid_UNCONNECTED[0]),
        .M00_AXI_wdata(NLW_inst_M00_AXI_wdata_UNCONNECTED),
        .M00_AXI_wid(NLW_inst_M00_AXI_wid_UNCONNECTED),
        .M00_AXI_wlast(NLW_inst_M00_AXI_wlast_UNCONNECTED[0]),
        .M00_AXI_wready(NLW_inst_M00_AXI_wready_UNCONNECTED[0]),
        .M00_AXI_wstrb(NLW_inst_M00_AXI_wstrb_UNCONNECTED),
        .M00_AXI_wuser(NLW_inst_M00_AXI_wuser_UNCONNECTED),
        .M00_AXI_wvalid(NLW_inst_M00_AXI_wvalid_UNCONNECTED[0]),
        .M01_AXI_araddr({M01_AXI_araddr[7:2],NLW_inst_M01_AXI_araddr_UNCONNECTED[1:0]}),
        .M01_AXI_arprot(NLW_inst_M01_AXI_arprot_UNCONNECTED[2:0]),
        .M01_AXI_arready(M01_AXI_arready),
        .M01_AXI_arvalid(M01_AXI_arvalid),
        .M01_AXI_awaddr({M01_AXI_awaddr[7:2],NLW_inst_M01_AXI_awaddr_UNCONNECTED[1:0]}),
        .M01_AXI_awprot(NLW_inst_M01_AXI_awprot_UNCONNECTED[2:0]),
        .M01_AXI_awready(M01_AXI_awready),
        .M01_AXI_awvalid(M01_AXI_awvalid),
        .M01_AXI_bready(M01_AXI_bready),
        .M01_AXI_bresp(NLW_inst_M01_AXI_bresp_UNCONNECTED[1:0]),
        .M01_AXI_bvalid(M01_AXI_bvalid),
        .M01_AXI_rdata({NLW_inst_M01_AXI_rdata_UNCONNECTED[31:11],M01_AXI_rdata[10:0]}),
        .M01_AXI_rready(M01_AXI_rready),
        .M01_AXI_rresp(NLW_inst_M01_AXI_rresp_UNCONNECTED[1:0]),
        .M01_AXI_rvalid(M01_AXI_rvalid),
        .M01_AXI_wdata({NLW_inst_M01_AXI_wdata_UNCONNECTED[31:1],M01_AXI_wdata[0]}),
        .M01_AXI_wready(M01_AXI_wready),
        .M01_AXI_wstrb(NLW_inst_M01_AXI_wstrb_UNCONNECTED[3:0]),
        .M01_AXI_wvalid(M01_AXI_wvalid),
        .S00_AXI_araddr({S00_AXI_araddr[31:16],NLW_inst_S00_AXI_araddr_UNCONNECTED[15:8],S00_AXI_araddr[7:0]}),
        .S00_AXI_arburst({NLW_inst_S00_AXI_arburst_UNCONNECTED[1],S00_AXI_arburst[0]}),
        .S00_AXI_arcache(NLW_inst_S00_AXI_arcache_UNCONNECTED[3:0]),
        .S00_AXI_arid(S00_AXI_arid),
        .S00_AXI_arlen(S00_AXI_arlen),
        .S00_AXI_arlock(NLW_inst_S00_AXI_arlock_UNCONNECTED[1:0]),
        .S00_AXI_arprot(NLW_inst_S00_AXI_arprot_UNCONNECTED[2:0]),
        .S00_AXI_arqos(NLW_inst_S00_AXI_arqos_UNCONNECTED[3:0]),
        .S00_AXI_arready(S00_AXI_arready),
        .S00_AXI_arsize({NLW_inst_S00_AXI_arsize_UNCONNECTED[2],S00_AXI_arsize[1:0]}),
        .S00_AXI_arvalid(S00_AXI_arvalid),
        .S00_AXI_awaddr({S00_AXI_awaddr[31:16],NLW_inst_S00_AXI_awaddr_UNCONNECTED[15:8],S00_AXI_awaddr[7:0]}),
        .S00_AXI_awburst({NLW_inst_S00_AXI_awburst_UNCONNECTED[1],S00_AXI_awburst[0]}),
        .S00_AXI_awcache(NLW_inst_S00_AXI_awcache_UNCONNECTED[3:0]),
        .S00_AXI_awid(S00_AXI_awid),
        .S00_AXI_awlen(S00_AXI_awlen),
        .S00_AXI_awlock(NLW_inst_S00_AXI_awlock_UNCONNECTED[1:0]),
        .S00_AXI_awprot(NLW_inst_S00_AXI_awprot_UNCONNECTED[2:0]),
        .S00_AXI_awqos(NLW_inst_S00_AXI_awqos_UNCONNECTED[3:0]),
        .S00_AXI_awready(S00_AXI_awready),
        .S00_AXI_awsize({NLW_inst_S00_AXI_awsize_UNCONNECTED[2],S00_AXI_awsize[1:0]}),
        .S00_AXI_awvalid(S00_AXI_awvalid),
        .S00_AXI_bid(S00_AXI_bid),
        .S00_AXI_bready(S00_AXI_bready),
        .S00_AXI_bresp(S00_AXI_bresp),
        .S00_AXI_bvalid(S00_AXI_bvalid),
        .S00_AXI_rdata(S00_AXI_rdata),
        .S00_AXI_rid(S00_AXI_rid),
        .S00_AXI_rlast(S00_AXI_rlast),
        .S00_AXI_rready(S00_AXI_rready),
        .S00_AXI_rresp(S00_AXI_rresp),
        .S00_AXI_rvalid(S00_AXI_rvalid),
        .S00_AXI_wdata({NLW_inst_S00_AXI_wdata_UNCONNECTED[31:1],S00_AXI_wdata[0]}),
        .S00_AXI_wid(NLW_inst_S00_AXI_wid_UNCONNECTED[11:0]),
        .S00_AXI_wlast(S00_AXI_wlast),
        .S00_AXI_wready(S00_AXI_wready),
        .S00_AXI_wstrb(S00_AXI_wstrb),
        .S00_AXI_wvalid(S00_AXI_wvalid),
        .aclk(aclk),
        .aresetn(aresetn));
endmodule

(* ORIG_REF_NAME = "bd_afc3" *) (* hw_handoff = "design_1_axi_smc_0.hwdef" *) 
module design_1_axi_smc_0_bd_afc3
   (M00_AXI_araddr,
    M00_AXI_arburst,
    M00_AXI_arcache,
    M00_AXI_arid,
    M00_AXI_arlen,
    M00_AXI_arlock,
    M00_AXI_arprot,
    M00_AXI_arqos,
    M00_AXI_arready,
    M00_AXI_arregion,
    M00_AXI_arsize,
    M00_AXI_aruser,
    M00_AXI_arvalid,
    M00_AXI_awaddr,
    M00_AXI_awburst,
    M00_AXI_awcache,
    M00_AXI_awid,
    M00_AXI_awlen,
    M00_AXI_awlock,
    M00_AXI_awprot,
    M00_AXI_awqos,
    M00_AXI_awready,
    M00_AXI_awregion,
    M00_AXI_awsize,
    M00_AXI_awuser,
    M00_AXI_awvalid,
    M00_AXI_bid,
    M00_AXI_bready,
    M00_AXI_bresp,
    M00_AXI_buser,
    M00_AXI_bvalid,
    M00_AXI_rdata,
    M00_AXI_rid,
    M00_AXI_rlast,
    M00_AXI_rready,
    M00_AXI_rresp,
    M00_AXI_ruser,
    M00_AXI_rvalid,
    M00_AXI_wdata,
    M00_AXI_wid,
    M00_AXI_wlast,
    M00_AXI_wready,
    M00_AXI_wstrb,
    M00_AXI_wuser,
    M00_AXI_wvalid,
    M01_AXI_araddr,
    M01_AXI_arprot,
    M01_AXI_arready,
    M01_AXI_arvalid,
    M01_AXI_awaddr,
    M01_AXI_awprot,
    M01_AXI_awready,
    M01_AXI_awvalid,
    M01_AXI_bready,
    M01_AXI_bresp,
    M01_AXI_bvalid,
    M01_AXI_rdata,
    M01_AXI_rready,
    M01_AXI_rresp,
    M01_AXI_rvalid,
    M01_AXI_wdata,
    M01_AXI_wready,
    M01_AXI_wstrb,
    M01_AXI_wvalid,
    S00_AXI_araddr,
    S00_AXI_arburst,
    S00_AXI_arcache,
    S00_AXI_arid,
    S00_AXI_arlen,
    S00_AXI_arlock,
    S00_AXI_arprot,
    S00_AXI_arqos,
    S00_AXI_arready,
    S00_AXI_arsize,
    S00_AXI_arvalid,
    S00_AXI_awaddr,
    S00_AXI_awburst,
    S00_AXI_awcache,
    S00_AXI_awid,
    S00_AXI_awlen,
    S00_AXI_awlock,
    S00_AXI_awprot,
    S00_AXI_awqos,
    S00_AXI_awready,
    S00_AXI_awsize,
    S00_AXI_awvalid,
    S00_AXI_bid,
    S00_AXI_bready,
    S00_AXI_bresp,
    S00_AXI_bvalid,
    S00_AXI_rdata,
    S00_AXI_rid,
    S00_AXI_rlast,
    S00_AXI_rready,
    S00_AXI_rresp,
    S00_AXI_rvalid,
    S00_AXI_wdata,
    S00_AXI_wid,
    S00_AXI_wlast,
    S00_AXI_wready,
    S00_AXI_wstrb,
    S00_AXI_wvalid,
    aclk,
    aresetn);
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARADDR" *) (* x_interface_parameter = "XIL_INTERFACENAME M00_AXI, ADDR_WIDTH 32, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, DATA_WIDTH 32, FREQ_HZ 100000000, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 1, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 1, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 1, NUM_WRITE_THREADS 1, PHASE 0.000, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output M00_AXI_araddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARBURST" *) output [1:0]M00_AXI_arburst;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARCACHE" *) output [3:0]M00_AXI_arcache;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARID" *) output M00_AXI_arid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARLEN" *) output M00_AXI_arlen;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARLOCK" *) output M00_AXI_arlock;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARPROT" *) output [2:0]M00_AXI_arprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARQOS" *) output [3:0]M00_AXI_arqos;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARREADY" *) input [0:0]M00_AXI_arready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARREGION" *) output [3:0]M00_AXI_arregion;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARSIZE" *) output [2:0]M00_AXI_arsize;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARUSER" *) output M00_AXI_aruser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARVALID" *) output [0:0]M00_AXI_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWADDR" *) output M00_AXI_awaddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWBURST" *) output [1:0]M00_AXI_awburst;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWCACHE" *) output [3:0]M00_AXI_awcache;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWID" *) output M00_AXI_awid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWLEN" *) output M00_AXI_awlen;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWLOCK" *) output M00_AXI_awlock;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWPROT" *) output [2:0]M00_AXI_awprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWQOS" *) output [3:0]M00_AXI_awqos;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWREADY" *) input [0:0]M00_AXI_awready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWREGION" *) output [3:0]M00_AXI_awregion;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWSIZE" *) output [2:0]M00_AXI_awsize;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWUSER" *) output M00_AXI_awuser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWVALID" *) output [0:0]M00_AXI_awvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BID" *) input M00_AXI_bid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BREADY" *) output [0:0]M00_AXI_bready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BRESP" *) input [1:0]M00_AXI_bresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BUSER" *) input M00_AXI_buser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BVALID" *) input [0:0]M00_AXI_bvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RDATA" *) input M00_AXI_rdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RID" *) input M00_AXI_rid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RLAST" *) input [0:0]M00_AXI_rlast;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RREADY" *) output [0:0]M00_AXI_rready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RRESP" *) input [1:0]M00_AXI_rresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RUSER" *) input M00_AXI_ruser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RVALID" *) input [0:0]M00_AXI_rvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WDATA" *) output M00_AXI_wdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WID" *) output M00_AXI_wid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WLAST" *) output [0:0]M00_AXI_wlast;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WREADY" *) input [0:0]M00_AXI_wready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WSTRB" *) output M00_AXI_wstrb;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WUSER" *) output M00_AXI_wuser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WVALID" *) output [0:0]M00_AXI_wvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI ARADDR" *) (* x_interface_parameter = "XIL_INTERFACENAME M01_AXI, ADDR_WIDTH 8, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, DATA_WIDTH 32, FREQ_HZ 100000000, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.000, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [7:0]M01_AXI_araddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI ARPROT" *) output [2:0]M01_AXI_arprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI ARREADY" *) input M01_AXI_arready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI ARVALID" *) output M01_AXI_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI AWADDR" *) output [7:0]M01_AXI_awaddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI AWPROT" *) output [2:0]M01_AXI_awprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI AWREADY" *) input M01_AXI_awready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI AWVALID" *) output M01_AXI_awvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI BREADY" *) output M01_AXI_bready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI BRESP" *) input [1:0]M01_AXI_bresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI BVALID" *) input M01_AXI_bvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI RDATA" *) input [31:0]M01_AXI_rdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI RREADY" *) output M01_AXI_rready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI RRESP" *) input [1:0]M01_AXI_rresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI RVALID" *) input M01_AXI_rvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI WDATA" *) output [31:0]M01_AXI_wdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI WREADY" *) input M01_AXI_wready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI WSTRB" *) output [3:0]M01_AXI_wstrb;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M01_AXI WVALID" *) output M01_AXI_wvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARADDR" *) (* x_interface_parameter = "XIL_INTERFACENAME S00_AXI, ADDR_WIDTH 32, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, DATA_WIDTH 32, FREQ_HZ 100000000, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 12, INSERT_VIP 0, MAX_BURST_LENGTH 16, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 4, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 4, PHASE 0.000, PROTOCOL AXI3, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) input [31:0]S00_AXI_araddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARBURST" *) input [1:0]S00_AXI_arburst;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARCACHE" *) input [3:0]S00_AXI_arcache;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARID" *) input [11:0]S00_AXI_arid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARLEN" *) input [3:0]S00_AXI_arlen;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARLOCK" *) input [1:0]S00_AXI_arlock;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARPROT" *) input [2:0]S00_AXI_arprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARQOS" *) input [3:0]S00_AXI_arqos;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARREADY" *) output S00_AXI_arready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARSIZE" *) input [2:0]S00_AXI_arsize;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARVALID" *) input S00_AXI_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWADDR" *) input [31:0]S00_AXI_awaddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWBURST" *) input [1:0]S00_AXI_awburst;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWCACHE" *) input [3:0]S00_AXI_awcache;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWID" *) input [11:0]S00_AXI_awid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWLEN" *) input [3:0]S00_AXI_awlen;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWLOCK" *) input [1:0]S00_AXI_awlock;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWPROT" *) input [2:0]S00_AXI_awprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWQOS" *) input [3:0]S00_AXI_awqos;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWREADY" *) output S00_AXI_awready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWSIZE" *) input [2:0]S00_AXI_awsize;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWVALID" *) input S00_AXI_awvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BID" *) output [11:0]S00_AXI_bid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BREADY" *) input S00_AXI_bready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BRESP" *) output [1:0]S00_AXI_bresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BVALID" *) output S00_AXI_bvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RDATA" *) output [31:0]S00_AXI_rdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RID" *) output [11:0]S00_AXI_rid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RLAST" *) output S00_AXI_rlast;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RREADY" *) (* x_interface_parameter = "XIL_INTERFACENAME S_AXI, DATA_WIDTH 32, PROTOCOL AXI3, FREQ_HZ 100000000, ID_WIDTH 12, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 8, NUM_WRITE_OUTSTANDING 8, MAX_BURST_LENGTH 16, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 4, NUM_WRITE_THREADS 4, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input S00_AXI_rready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RRESP" *) output [1:0]S00_AXI_rresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RVALID" *) output S00_AXI_rvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WDATA" *) input [31:0]S00_AXI_wdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WID" *) input [11:0]S00_AXI_wid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WLAST" *) input S00_AXI_wlast;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WREADY" *) output S00_AXI_wready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WSTRB" *) input [3:0]S00_AXI_wstrb;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WVALID" *) input S00_AXI_wvalid;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 clock CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME clock, ASSOCIATED_RESET mb_reset:bus_struct_reset:interconnect_aresetn:peripheral_aresetn:peripheral_reset, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, INSERT_VIP 0" *) input aclk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 aux_reset RST" *) (* x_interface_parameter = "XIL_INTERFACENAME aux_reset, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input aresetn;

  wire [7:0]M01_AXI_araddr;
  wire M01_AXI_arready;
  wire M01_AXI_arvalid;
  wire [7:0]M01_AXI_awaddr;
  wire M01_AXI_awready;
  wire M01_AXI_awvalid;
  wire M01_AXI_bready;
  wire M01_AXI_bvalid;
  wire [31:0]M01_AXI_rdata;
  wire M01_AXI_rready;
  wire M01_AXI_rvalid;
  wire [31:0]M01_AXI_wdata;
  wire M01_AXI_wready;
  wire M01_AXI_wvalid;
  wire [31:0]S00_AXI_araddr;
  wire [1:0]S00_AXI_arburst;
  wire [11:0]S00_AXI_arid;
  wire [3:0]S00_AXI_arlen;
  wire S00_AXI_arready;
  wire [2:0]S00_AXI_arsize;
  wire S00_AXI_arvalid;
  wire [31:0]S00_AXI_awaddr;
  wire [1:0]S00_AXI_awburst;
  wire [11:0]S00_AXI_awid;
  wire [3:0]S00_AXI_awlen;
  wire S00_AXI_awready;
  wire [2:0]S00_AXI_awsize;
  wire S00_AXI_awvalid;
  wire [11:0]S00_AXI_bid;
  wire S00_AXI_bready;
  wire [1:0]S00_AXI_bresp;
  wire S00_AXI_bvalid;
  wire [31:0]S00_AXI_rdata;
  wire [11:0]S00_AXI_rid;
  wire S00_AXI_rlast;
  wire S00_AXI_rready;
  wire [1:0]S00_AXI_rresp;
  wire S00_AXI_rvalid;
  wire [31:0]S00_AXI_wdata;
  wire S00_AXI_wlast;
  wire S00_AXI_wready;
  wire [3:0]S00_AXI_wstrb;
  wire S00_AXI_wvalid;
  wire aclk;
  wire ar_la_in_swbd_M00_SC_RECV;
  wire aresetn;
  wire aw_la_in_swbd_M00_SC_RECV;
  wire clk_map_S00_ARESETN;
  wire [1:1]i_nodes_M_SC_AR_SEND;
  wire [1:1]i_nodes_M_SC_AW_SEND;
  wire [6:5]i_nodes_M_SC_B_PAYLD;
  wire i_nodes_M_SC_B_SEND;
  wire [52:18]i_nodes_M_SC_R_PAYLD;
  wire i_nodes_M_SC_R_SEND;
  wire [1:1]i_nodes_M_SC_W_SEND;
  wire m01_nodes_M_SC_AR_SEND;
  wire m01_nodes_M_SC_AW_SEND;
  wire m01_nodes_M_SC_B_REQ;
  wire m01_nodes_M_SC_B_SEND;
  wire m01_nodes_M_SC_R_REQ;
  wire m01_nodes_M_SC_R_SEND;
  wire m01_nodes_M_SC_W_SEND;
  wire m01_sc2axi_M_AXI_ARREADY;
  wire m01_sc2axi_M_AXI_AWREADY;
  wire m01_sc2axi_M_AXI_WREADY;
  wire [7:0]s00_entry_pipeline_m_axi_ARADDR;
  wire [2:2]s00_entry_pipeline_m_axi_ARUSER;
  wire s00_entry_pipeline_m_axi_ARVALID;
  wire [7:0]s00_entry_pipeline_m_axi_AWADDR;
  wire s00_entry_pipeline_m_axi_AWVALID;
  wire s00_entry_pipeline_m_axi_BREADY;
  wire s00_entry_pipeline_m_axi_RREADY;
  wire [31:0]s00_entry_pipeline_m_axi_WDATA;
  wire s00_entry_pipeline_m_axi_WVALID;
  wire [2:2]s00_mmu_M_AXI_WUSER;
  wire s00_nodes_M_SC_AR_SEND;
  wire s00_nodes_M_SC_AW_SEND;
  wire s00_nodes_M_SC_B_SEND;
  wire s00_nodes_M_SC_R_SEND;
  wire s00_nodes_M_SC_W_SEND;
  wire w_la_in_swbd_M00_SC_RECV;
  wire [33:0]NLW_s00_entry_pipeline_M_SC_R_payld_UNCONNECTED;
  wire [2:0]NLW_s00_entry_pipeline_S00_AXI_arprot_UNCONNECTED;
  wire [2:2]NLW_s00_entry_pipeline_S00_AXI_arsize_UNCONNECTED;
  wire [2:0]NLW_s00_entry_pipeline_S00_AXI_awprot_UNCONNECTED;
  wire [2:2]NLW_s00_entry_pipeline_S00_AXI_awsize_UNCONNECTED;
  wire [31:1]NLW_s00_entry_pipeline_S00_AXI_wdata_UNCONNECTED;
  wire [11:1]NLW_s00_entry_pipeline_S_SC_AR_payld_UNCONNECTED;
  wire [10:0]NLW_s00_entry_pipeline_S_SC_AW_payld_UNCONNECTED;
  wire [36:1]NLW_s00_entry_pipeline_S_SC_W_payld_UNCONNECTED;
  wire [1:0]NLW_switchboards_M01_AXI_bresp_UNCONNECTED;
  wire [10:0]NLW_switchboards_M_SC_AR_payld_UNCONNECTED;
  wire [10:0]NLW_switchboards_M_SC_AW_payld_UNCONNECTED;
  wire [33:0]NLW_switchboards_M_SC_R_payld_UNCONNECTED;
  wire [35:0]NLW_switchboards_M_SC_W_payld_UNCONNECTED;
  wire [33:0]NLW_switchboards_S01_SC_R_payld_UNCONNECTED;
  wire [11:1]NLW_switchboards_S_SC_AR_payld_UNCONNECTED;
  wire [10:0]NLW_switchboards_S_SC_AW_payld_UNCONNECTED;
  wire [36:1]NLW_switchboards_S_SC_W_payld_UNCONNECTED;

  design_1_axi_smc_0_clk_map_imp_5Y9LOC clk_map
       (.aclk(aclk),
        .aresetn(aresetn),
        .interconnect_aresetn(clk_map_S00_ARESETN));
  design_1_axi_smc_0_m01_exit_pipeline_imp_1XMPFJB m01_exit_pipeline
       (.M01_AXI_arready(M01_AXI_arready),
        .M01_AXI_arvalid(M01_AXI_arvalid),
        .M01_AXI_awready(M01_AXI_awready),
        .M01_AXI_awvalid(M01_AXI_awvalid),
        .M01_AXI_bready(M01_AXI_bready),
        .M01_AXI_bvalid(M01_AXI_bvalid),
        .M01_AXI_rready(M01_AXI_rready),
        .M01_AXI_rvalid(M01_AXI_rvalid),
        .M01_AXI_wready(M01_AXI_wready),
        .M01_AXI_wvalid(M01_AXI_wvalid),
        .M_SC_AR_recv(m01_sc2axi_M_AXI_ARREADY),
        .M_SC_AR_send(m01_nodes_M_SC_AR_SEND),
        .M_SC_AW_recv(m01_sc2axi_M_AXI_AWREADY),
        .M_SC_AW_send(m01_nodes_M_SC_AW_SEND),
        .M_SC_W_recv(m01_sc2axi_M_AXI_WREADY),
        .M_SC_W_send(m01_nodes_M_SC_W_SEND),
        .aclk(aclk),
        .interconnect_aresetn(clk_map_S00_ARESETN));
  design_1_axi_smc_0_m01_nodes_imp_94N5OD m01_nodes
       (.M01_AXI_arvalid(i_nodes_M_SC_AR_SEND),
        .M01_AXI_awvalid(i_nodes_M_SC_AW_SEND),
        .M01_AXI_bready(M01_AXI_bready),
        .M01_AXI_bvalid(M01_AXI_bvalid),
        .M01_AXI_rready(M01_AXI_rready),
        .M01_AXI_rvalid(M01_AXI_rvalid),
        .M01_AXI_wvalid(i_nodes_M_SC_W_SEND),
        .M_SC_AR_send(m01_nodes_M_SC_AR_SEND),
        .M_SC_AW_send(m01_nodes_M_SC_AW_SEND),
        .M_SC_B_req(m01_nodes_M_SC_B_REQ),
        .M_SC_B_send(m01_nodes_M_SC_B_SEND),
        .M_SC_R_req(m01_nodes_M_SC_R_REQ),
        .M_SC_R_send(m01_nodes_M_SC_R_SEND),
        .M_SC_W_send(m01_nodes_M_SC_W_SEND),
        .aclk(aclk),
        .interconnect_aresetn(clk_map_S00_ARESETN));
  design_1_axi_smc_0_s00_entry_pipeline_imp_USCCV8 s00_entry_pipeline
       (.M_SC_B_payld(i_nodes_M_SC_B_PAYLD),
        .M_SC_B_send(s00_nodes_M_SC_B_SEND),
        .M_SC_R_payld({NLW_s00_entry_pipeline_M_SC_R_payld_UNCONNECTED[33:13],i_nodes_M_SC_R_PAYLD[31:20],NLW_s00_entry_pipeline_M_SC_R_payld_UNCONNECTED[0]}),
        .M_SC_R_send(s00_nodes_M_SC_R_SEND),
        .S00_AXI_araddr({S00_AXI_araddr[31:16],S00_AXI_araddr[7:0]}),
        .S00_AXI_arburst(S00_AXI_arburst[0]),
        .S00_AXI_arid(S00_AXI_arid),
        .S00_AXI_arlen(S00_AXI_arlen),
        .S00_AXI_arprot(NLW_s00_entry_pipeline_S00_AXI_arprot_UNCONNECTED[2:0]),
        .S00_AXI_arready(S00_AXI_arready),
        .S00_AXI_arsize({NLW_s00_entry_pipeline_S00_AXI_arsize_UNCONNECTED[2],S00_AXI_arsize[1:0]}),
        .S00_AXI_arvalid(S00_AXI_arvalid),
        .S00_AXI_awaddr({S00_AXI_awaddr[31:16],S00_AXI_awaddr[7:0]}),
        .S00_AXI_awburst(S00_AXI_awburst[0]),
        .S00_AXI_awid(S00_AXI_awid),
        .S00_AXI_awlen(S00_AXI_awlen),
        .S00_AXI_awprot(NLW_s00_entry_pipeline_S00_AXI_awprot_UNCONNECTED[2:0]),
        .S00_AXI_awready(S00_AXI_awready),
        .S00_AXI_awsize({NLW_s00_entry_pipeline_S00_AXI_awsize_UNCONNECTED[2],S00_AXI_awsize[1:0]}),
        .S00_AXI_awvalid(S00_AXI_awvalid),
        .S00_AXI_bid(S00_AXI_bid),
        .S00_AXI_bready(S00_AXI_bready),
        .S00_AXI_bresp(S00_AXI_bresp),
        .S00_AXI_bvalid(S00_AXI_bvalid),
        .S00_AXI_rdata(S00_AXI_rdata),
        .S00_AXI_rid(S00_AXI_rid),
        .S00_AXI_rlast(S00_AXI_rlast),
        .S00_AXI_rready(S00_AXI_rready),
        .S00_AXI_rresp(S00_AXI_rresp),
        .S00_AXI_rvalid(S00_AXI_rvalid),
        .S00_AXI_wdata({NLW_s00_entry_pipeline_S00_AXI_wdata_UNCONNECTED[31:1],S00_AXI_wdata[0]}),
        .S00_AXI_wlast(S00_AXI_wlast),
        .S00_AXI_wready(S00_AXI_wready),
        .S00_AXI_wstrb(S00_AXI_wstrb),
        .S00_AXI_wvalid(S00_AXI_wvalid),
        .S_SC_AR_payld({NLW_s00_entry_pipeline_S_SC_AR_payld_UNCONNECTED[11:9],s00_entry_pipeline_m_axi_ARADDR[7:2],NLW_s00_entry_pipeline_S_SC_AR_payld_UNCONNECTED[2:1],s00_entry_pipeline_m_axi_ARUSER}),
        .S_SC_AR_recv(ar_la_in_swbd_M00_SC_RECV),
        .S_SC_AW_payld({NLW_s00_entry_pipeline_S_SC_AW_payld_UNCONNECTED[10:8],s00_entry_pipeline_m_axi_AWADDR[7:2],NLW_s00_entry_pipeline_S_SC_AW_payld_UNCONNECTED[1:0]}),
        .S_SC_AW_recv(aw_la_in_swbd_M00_SC_RECV),
        .S_SC_W_payld({NLW_s00_entry_pipeline_S_SC_W_payld_UNCONNECTED[36:3],s00_entry_pipeline_m_axi_WDATA[0],NLW_s00_entry_pipeline_S_SC_W_payld_UNCONNECTED[1],s00_mmu_M_AXI_WUSER}),
        .S_SC_W_recv(w_la_in_swbd_M00_SC_RECV),
        .aclk(aclk),
        .interconnect_aresetn(clk_map_S00_ARESETN),
        .m_axi_arvalid(s00_entry_pipeline_m_axi_ARVALID),
        .m_axi_awvalid(s00_entry_pipeline_m_axi_AWVALID),
        .m_axi_bready(s00_entry_pipeline_m_axi_BREADY),
        .m_axi_rready(s00_entry_pipeline_m_axi_RREADY),
        .m_axi_wvalid(s00_entry_pipeline_m_axi_WVALID));
  design_1_axi_smc_0_s00_nodes_imp_Y7M43I s00_nodes
       (.\FSM_sequential_r_state_reg[0] (i_nodes_M_SC_R_SEND),
        .M_SC_AR_send(s00_nodes_M_SC_AR_SEND),
        .M_SC_AW_send(s00_nodes_M_SC_AW_SEND),
        .M_SC_B_send(s00_nodes_M_SC_B_SEND),
        .M_SC_R_send(s00_nodes_M_SC_R_SEND),
        .M_SC_W_send(s00_nodes_M_SC_W_SEND),
        .S_SC_AR_send(s00_entry_pipeline_m_axi_ARVALID),
        .S_SC_AW_send(s00_entry_pipeline_m_axi_AWVALID),
        .S_SC_W_send(s00_entry_pipeline_m_axi_WVALID),
        .aclk(aclk),
        .interconnect_aresetn(clk_map_S00_ARESETN),
        .\s_axi_bresp_i_reg[1] (i_nodes_M_SC_B_SEND));
  design_1_axi_smc_0_switchboards_imp_4N4PBE switchboards
       (.M01_AXI_bready(M01_AXI_bready),
        .M01_AXI_bresp(NLW_switchboards_M01_AXI_bresp_UNCONNECTED[1:0]),
        .M01_AXI_rready(M01_AXI_rready),
        .M_SC_AR_payld({NLW_switchboards_M_SC_AR_payld_UNCONNECTED[10:8],M01_AXI_araddr[7:2],NLW_switchboards_M_SC_AR_payld_UNCONNECTED[1:0]}),
        .M_SC_AR_recv(m01_sc2axi_M_AXI_ARREADY),
        .M_SC_AR_send(i_nodes_M_SC_AR_SEND),
        .M_SC_AW_payld({NLW_switchboards_M_SC_AW_payld_UNCONNECTED[10:8],M01_AXI_awaddr[7:2],NLW_switchboards_M_SC_AW_payld_UNCONNECTED[1:0]}),
        .M_SC_AW_recv(m01_sc2axi_M_AXI_AWREADY),
        .M_SC_AW_send(i_nodes_M_SC_AW_SEND),
        .M_SC_B_payld(i_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(s00_entry_pipeline_m_axi_BREADY),
        .M_SC_B_send(i_nodes_M_SC_B_SEND),
        .M_SC_R_payld({NLW_switchboards_M_SC_R_payld_UNCONNECTED[33:13],i_nodes_M_SC_R_PAYLD[31:20],NLW_switchboards_M_SC_R_payld_UNCONNECTED[0]}),
        .M_SC_R_recv(s00_entry_pipeline_m_axi_RREADY),
        .M_SC_R_send(i_nodes_M_SC_R_SEND),
        .M_SC_W_payld({NLW_switchboards_M_SC_W_payld_UNCONNECTED[35:2],M01_AXI_wdata[0],NLW_switchboards_M_SC_W_payld_UNCONNECTED[0]}),
        .M_SC_W_recv(m01_sc2axi_M_AXI_WREADY),
        .M_SC_W_send(i_nodes_M_SC_W_SEND),
        .S01_SC_R_payld({NLW_switchboards_S01_SC_R_payld_UNCONNECTED[33:13],M01_AXI_rdata[10:0],NLW_switchboards_S01_SC_R_payld_UNCONNECTED[1:0]}),
        .S_SC_AR_payld({NLW_switchboards_S_SC_AR_payld_UNCONNECTED[11:9],s00_entry_pipeline_m_axi_ARADDR[7:2],NLW_switchboards_S_SC_AR_payld_UNCONNECTED[2:1],s00_entry_pipeline_m_axi_ARUSER}),
        .S_SC_AR_recv(ar_la_in_swbd_M00_SC_RECV),
        .S_SC_AR_send(s00_nodes_M_SC_AR_SEND),
        .S_SC_AW_payld({NLW_switchboards_S_SC_AW_payld_UNCONNECTED[10:8],s00_entry_pipeline_m_axi_AWADDR[7:2],NLW_switchboards_S_SC_AW_payld_UNCONNECTED[1:0]}),
        .S_SC_AW_recv(aw_la_in_swbd_M00_SC_RECV),
        .S_SC_AW_send(s00_nodes_M_SC_AW_SEND),
        .S_SC_B_req(m01_nodes_M_SC_B_REQ),
        .S_SC_B_send(m01_nodes_M_SC_B_SEND),
        .S_SC_R_req(m01_nodes_M_SC_R_REQ),
        .S_SC_R_send(m01_nodes_M_SC_R_SEND),
        .S_SC_W_payld({NLW_switchboards_S_SC_W_payld_UNCONNECTED[36:3],s00_entry_pipeline_m_axi_WDATA[0],NLW_switchboards_S_SC_W_payld_UNCONNECTED[1],s00_mmu_M_AXI_WUSER}),
        .S_SC_W_recv(w_la_in_swbd_M00_SC_RECV),
        .S_SC_W_send(s00_nodes_M_SC_W_SEND),
        .aclk(aclk),
        .interconnect_aresetn(clk_map_S00_ARESETN));
endmodule

(* ORIG_REF_NAME = "bd_afc3_arni_0" *) 
module design_1_axi_smc_0_bd_afc3_arni_0
   (S_SC_AR_recv,
    M_SC_AR_send,
    M_SC_AR_payld,
    aclk,
    interconnect_aresetn,
    S_SC_AR_send,
    S_SC_AR_payld,
    M_SC_AR_recv);
  output [0:0]S_SC_AR_recv;
  output [0:0]M_SC_AR_send;
  output [10:0]M_SC_AR_payld;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]S_SC_AR_send;
  input [11:0]S_SC_AR_payld;
  input [0:0]M_SC_AR_recv;

  wire [10:0]M_SC_AR_payld;
  wire [0:0]M_SC_AR_recv;
  wire [0:0]M_SC_AR_send;
  wire [11:0]S_SC_AR_payld;
  wire [0:0]S_SC_AR_recv;
  wire [0:0]S_SC_AR_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire NLW_inst_m_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_m_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_m_sc_aclk_UNCONNECTED;
  wire NLW_inst_m_sc_aclken_UNCONNECTED;
  wire NLW_inst_m_sc_aresetn_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_s_sc_aclken_UNCONNECTED;
  wire [15:0]NLW_inst_m_axis_arb_tdata_UNCONNECTED;
  wire [1:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [140:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_recv_UNCONNECTED;
  wire [1:0]NLW_inst_m_sc_req_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_send_UNCONNECTED;
  wire [15:0]NLW_inst_s_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [140:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_req_UNCONNECTED;

  (* C_ACLKEN_CONVERSION = "0" *) 
  (* C_ACLK_RELATIONSHIP = "1" *) 
  (* C_ADDR_WIDTH = "32" *) 
  (* C_ARBITER_MODE = "1" *) 
  (* C_CHANNEL = "2" *) 
  (* C_DISABLE_IP = "0" *) 
  (* C_ENABLE_PIPELINING = "8'b00000001" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_IP = "0" *) 
  (* C_FIFO_OUTPUT_REG = "1" *) 
  (* C_FIFO_SIZE = "0" *) 
  (* C_FIFO_TYPE = "0" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_MAX_PAYLD_BYTES = "4" *) 
  (* C_M_NUM_BYTES_ARRAY = "64'b0000000000000000000000000000010000000000000000000000000000000100" *) 
  (* C_M_PIPELINE = "0" *) 
  (* C_M_SEND_PIPELINE = "0" *) 
  (* C_NUM_MI = "2" *) 
  (* C_NUM_OUTSTANDING = "8" *) 
  (* C_NUM_SI = "1" *) 
  (* C_PAYLD_WIDTH = "141" *) 
  (* C_SC_ROUTE_WIDTH = "4" *) 
  (* C_SYNCHRONIZATION_STAGES = "3" *) 
  (* C_S_LATENCY = "0" *) 
  (* C_S_NUM_BYTES_ARRAY = "4" *) 
  (* C_S_PIPELINE = "0" *) 
  (* C_USER_BITS_PER_BYTE = "0" *) 
  (* C_USER_WIDTH = "0" *) 
  (* LP_ACLK_RELATIONSHIP = "1" *) 
  (* LP_ARBITER_MODE = "1" *) 
  (* LP_DT_REG = "true" *) 
  (* LP_FIFO_OUTPUT_REG = "1" *) 
  (* LP_FIFO_TYPE = "0" *) 
  (* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_LOG_NUM_MI = "1" *) 
  (* LP_LOG_NUM_SI = "1" *) 
  (* LP_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_MAX_NUM_BYTES = "4" *) 
  (* LP_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_M_MAX_NUM_BYTES = "4" *) 
  (* LP_M_MIN_NUM_BYTES = "4" *) 
  (* LP_M_STATIC_DWIDTH = "1" *) 
  (* LP_NODE_ADDR_WIDTH = "32" *) 
  (* LP_NODE_ID_WIDTH = "1" *) 
  (* LP_NODE_ROUTE_WIDTH = "4" *) 
  (* LP_NODE_USER_WIDTH = "0" *) 
  (* LP_SYNCHRONIZATION_STAGES = "2" *) 
  (* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) 
  (* LP_S_MAX_NUM_BYTES = "4" *) 
  (* LP_S_MIN_NUM_BYTES = "4" *) 
  (* LP_S_PIPELINE = "0" *) 
  (* LP_S_STATIC_DWIDTH = "1" *) 
  (* LP_ZERO_ROUTE_WIDTH = "0" *) 
  (* P_NUM_OUTSTANDING = "16" *) 
  design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9 inst
       (.m_axis_arb_tdata(NLW_inst_m_axis_arb_tdata_UNCONNECTED[15:0]),
        .m_axis_arb_tready(NLW_inst_m_axis_arb_tready_UNCONNECTED),
        .m_axis_arb_tvalid(NLW_inst_m_axis_arb_tvalid_UNCONNECTED),
        .m_sc_aclk(NLW_inst_m_sc_aclk_UNCONNECTED),
        .m_sc_aclken(NLW_inst_m_sc_aclken_UNCONNECTED),
        .m_sc_aresetn(NLW_inst_m_sc_aresetn_UNCONNECTED),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[1:0]),
        .m_sc_payld({NLW_inst_m_sc_payld_UNCONNECTED[140:105],M_SC_AR_payld[7:2],NLW_inst_m_sc_payld_UNCONNECTED[98:0]}),
        .m_sc_recv({M_SC_AR_recv,NLW_inst_m_sc_recv_UNCONNECTED[0]}),
        .m_sc_req(NLW_inst_m_sc_req_UNCONNECTED[1:0]),
        .m_sc_send({M_SC_AR_send,NLW_inst_m_sc_send_UNCONNECTED[0]}),
        .s_axis_arb_tdata(NLW_inst_s_axis_arb_tdata_UNCONNECTED[15:0]),
        .s_axis_arb_tready(NLW_inst_s_axis_arb_tready_UNCONNECTED),
        .s_axis_arb_tvalid(NLW_inst_s_axis_arb_tvalid_UNCONNECTED),
        .s_sc_aclk(aclk),
        .s_sc_aclken(NLW_inst_s_sc_aclken_UNCONNECTED),
        .s_sc_aresetn(interconnect_aresetn),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[0]),
        .s_sc_payld({NLW_inst_s_sc_payld_UNCONNECTED[140:105],S_SC_AR_payld[8:3],NLW_inst_s_sc_payld_UNCONNECTED[98:2],S_SC_AR_payld[0],NLW_inst_s_sc_payld_UNCONNECTED[0]}),
        .s_sc_recv(S_SC_AR_recv),
        .s_sc_req(NLW_inst_s_sc_req_UNCONNECTED[0]),
        .s_sc_send(S_SC_AR_send));
endmodule

(* ORIG_REF_NAME = "bd_afc3_awni_0" *) 
module design_1_axi_smc_0_bd_afc3_awni_0
   (S_SC_AW_recv,
    M_SC_AW_send,
    M_SC_AW_payld,
    aclk,
    interconnect_aresetn,
    S_SC_AW_send,
    S_SC_AW_payld,
    M_SC_AW_recv);
  output [0:0]S_SC_AW_recv;
  output [0:0]M_SC_AW_send;
  output [10:0]M_SC_AW_payld;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]S_SC_AW_send;
  input [10:0]S_SC_AW_payld;
  input [0:0]M_SC_AW_recv;

  wire [10:0]M_SC_AW_payld;
  wire [0:0]M_SC_AW_recv;
  wire [0:0]M_SC_AW_send;
  wire [10:0]S_SC_AW_payld;
  wire [0:0]S_SC_AW_recv;
  wire [0:0]S_SC_AW_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire NLW_inst_m_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_m_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_m_sc_aclk_UNCONNECTED;
  wire NLW_inst_m_sc_aclken_UNCONNECTED;
  wire NLW_inst_m_sc_aresetn_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_s_sc_aclken_UNCONNECTED;
  wire [15:0]NLW_inst_m_axis_arb_tdata_UNCONNECTED;
  wire [1:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [140:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_recv_UNCONNECTED;
  wire [1:0]NLW_inst_m_sc_req_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_send_UNCONNECTED;
  wire [15:0]NLW_inst_s_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [140:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_req_UNCONNECTED;

  (* C_ACLKEN_CONVERSION = "0" *) 
  (* C_ACLK_RELATIONSHIP = "1" *) 
  (* C_ADDR_WIDTH = "32" *) 
  (* C_ARBITER_MODE = "1" *) 
  (* C_CHANNEL = "3" *) 
  (* C_DISABLE_IP = "0" *) 
  (* C_ENABLE_PIPELINING = "8'b00000001" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_IP = "0" *) 
  (* C_FIFO_OUTPUT_REG = "1" *) 
  (* C_FIFO_SIZE = "0" *) 
  (* C_FIFO_TYPE = "0" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_MAX_PAYLD_BYTES = "4" *) 
  (* C_M_NUM_BYTES_ARRAY = "64'b0000000000000000000000000000010000000000000000000000000000000100" *) 
  (* C_M_PIPELINE = "0" *) 
  (* C_M_SEND_PIPELINE = "0" *) 
  (* C_NUM_MI = "2" *) 
  (* C_NUM_OUTSTANDING = "8" *) 
  (* C_NUM_SI = "1" *) 
  (* C_PAYLD_WIDTH = "141" *) 
  (* C_SC_ROUTE_WIDTH = "4" *) 
  (* C_SYNCHRONIZATION_STAGES = "3" *) 
  (* C_S_LATENCY = "0" *) 
  (* C_S_NUM_BYTES_ARRAY = "4" *) 
  (* C_S_PIPELINE = "0" *) 
  (* C_USER_BITS_PER_BYTE = "0" *) 
  (* C_USER_WIDTH = "0" *) 
  (* LP_ACLK_RELATIONSHIP = "1" *) 
  (* LP_ARBITER_MODE = "1" *) 
  (* LP_DT_REG = "true" *) 
  (* LP_FIFO_OUTPUT_REG = "1" *) 
  (* LP_FIFO_TYPE = "0" *) 
  (* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_LOG_NUM_MI = "1" *) 
  (* LP_LOG_NUM_SI = "1" *) 
  (* LP_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_MAX_NUM_BYTES = "4" *) 
  (* LP_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_M_MAX_NUM_BYTES = "4" *) 
  (* LP_M_MIN_NUM_BYTES = "4" *) 
  (* LP_M_STATIC_DWIDTH = "1" *) 
  (* LP_NODE_ADDR_WIDTH = "32" *) 
  (* LP_NODE_ID_WIDTH = "1" *) 
  (* LP_NODE_ROUTE_WIDTH = "4" *) 
  (* LP_NODE_USER_WIDTH = "0" *) 
  (* LP_SYNCHRONIZATION_STAGES = "2" *) 
  (* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) 
  (* LP_S_MAX_NUM_BYTES = "4" *) 
  (* LP_S_MIN_NUM_BYTES = "4" *) 
  (* LP_S_PIPELINE = "0" *) 
  (* LP_S_STATIC_DWIDTH = "1" *) 
  (* LP_ZERO_ROUTE_WIDTH = "0" *) 
  (* P_NUM_OUTSTANDING = "16" *) 
  design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10 inst
       (.m_axis_arb_tdata(NLW_inst_m_axis_arb_tdata_UNCONNECTED[15:0]),
        .m_axis_arb_tready(NLW_inst_m_axis_arb_tready_UNCONNECTED),
        .m_axis_arb_tvalid(NLW_inst_m_axis_arb_tvalid_UNCONNECTED),
        .m_sc_aclk(NLW_inst_m_sc_aclk_UNCONNECTED),
        .m_sc_aclken(NLW_inst_m_sc_aclken_UNCONNECTED),
        .m_sc_aresetn(NLW_inst_m_sc_aresetn_UNCONNECTED),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[1:0]),
        .m_sc_payld({NLW_inst_m_sc_payld_UNCONNECTED[140:105],M_SC_AW_payld[7:2],NLW_inst_m_sc_payld_UNCONNECTED[98:0]}),
        .m_sc_recv({M_SC_AW_recv,NLW_inst_m_sc_recv_UNCONNECTED[0]}),
        .m_sc_req(NLW_inst_m_sc_req_UNCONNECTED[1:0]),
        .m_sc_send({M_SC_AW_send,NLW_inst_m_sc_send_UNCONNECTED[0]}),
        .s_axis_arb_tdata(NLW_inst_s_axis_arb_tdata_UNCONNECTED[15:0]),
        .s_axis_arb_tready(NLW_inst_s_axis_arb_tready_UNCONNECTED),
        .s_axis_arb_tvalid(NLW_inst_s_axis_arb_tvalid_UNCONNECTED),
        .s_sc_aclk(aclk),
        .s_sc_aclken(NLW_inst_s_sc_aclken_UNCONNECTED),
        .s_sc_aresetn(interconnect_aresetn),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[0]),
        .s_sc_payld({NLW_inst_s_sc_payld_UNCONNECTED[140:105],S_SC_AW_payld[7:2],NLW_inst_s_sc_payld_UNCONNECTED[98:0]}),
        .s_sc_recv(S_SC_AW_recv),
        .s_sc_req(NLW_inst_s_sc_req_UNCONNECTED[0]),
        .s_sc_send(S_SC_AW_send));
endmodule

(* ORIG_REF_NAME = "bd_afc3_bni_0" *) 
module design_1_axi_smc_0_bd_afc3_bni_0
   (M01_AXI_bready,
    M_SC_B_send,
    M_SC_B_payld,
    aclk,
    interconnect_aresetn,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_B_payld,
    M_SC_B_recv);
  output M01_AXI_bready;
  output [0:0]M_SC_B_send;
  output [1:0]M_SC_B_payld;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [1:0]S_SC_B_payld;
  input [0:0]M_SC_B_recv;

  wire M01_AXI_bready;
  wire [1:0]M_SC_B_payld;
  wire [0:0]M_SC_B_recv;
  wire [0:0]M_SC_B_send;
  wire [0:0]S_SC_B_req;
  wire [0:0]S_SC_B_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire NLW_inst_m_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_m_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_m_sc_aclk_UNCONNECTED;
  wire NLW_inst_m_sc_aclken_UNCONNECTED;
  wire NLW_inst_m_sc_aresetn_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_s_sc_aclken_UNCONNECTED;
  wire [15:0]NLW_inst_m_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [4:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_req_UNCONNECTED;
  wire [15:0]NLW_inst_s_axis_arb_tdata_UNCONNECTED;
  wire [1:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [6:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_req_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_send_UNCONNECTED;

  (* C_ACLKEN_CONVERSION = "0" *) 
  (* C_ACLK_RELATIONSHIP = "1" *) 
  (* C_ADDR_WIDTH = "32" *) 
  (* C_ARBITER_MODE = "1" *) 
  (* C_CHANNEL = "4" *) 
  (* C_DISABLE_IP = "0" *) 
  (* C_ENABLE_PIPELINING = "8'b00000001" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_IP = "0" *) 
  (* C_FIFO_OUTPUT_REG = "1" *) 
  (* C_FIFO_SIZE = "0" *) 
  (* C_FIFO_TYPE = "0" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_MAX_PAYLD_BYTES = "4" *) 
  (* C_M_NUM_BYTES_ARRAY = "4" *) 
  (* C_M_PIPELINE = "0" *) 
  (* C_M_SEND_PIPELINE = "0" *) 
  (* C_NUM_MI = "1" *) 
  (* C_NUM_OUTSTANDING = "8" *) 
  (* C_NUM_SI = "2" *) 
  (* C_PAYLD_WIDTH = "7" *) 
  (* C_SC_ROUTE_WIDTH = "3" *) 
  (* C_SYNCHRONIZATION_STAGES = "3" *) 
  (* C_S_LATENCY = "0" *) 
  (* C_S_NUM_BYTES_ARRAY = "64'b0000000000000000000000000000010000000000000000000000000000000100" *) 
  (* C_S_PIPELINE = "0" *) 
  (* C_USER_BITS_PER_BYTE = "0" *) 
  (* C_USER_WIDTH = "0" *) 
  (* LP_ACLK_RELATIONSHIP = "1" *) 
  (* LP_ARBITER_MODE = "1" *) 
  (* LP_DT_REG = "true" *) 
  (* LP_FIFO_OUTPUT_REG = "1" *) 
  (* LP_FIFO_TYPE = "0" *) 
  (* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_LOG_NUM_MI = "1" *) 
  (* LP_LOG_NUM_SI = "1" *) 
  (* LP_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_MAX_NUM_BYTES = "4" *) 
  (* LP_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_M_MAX_NUM_BYTES = "4" *) 
  (* LP_M_MIN_NUM_BYTES = "4" *) 
  (* LP_M_STATIC_DWIDTH = "1" *) 
  (* LP_NODE_ADDR_WIDTH = "32" *) 
  (* LP_NODE_ID_WIDTH = "1" *) 
  (* LP_NODE_ROUTE_WIDTH = "3" *) 
  (* LP_NODE_USER_WIDTH = "0" *) 
  (* LP_SYNCHRONIZATION_STAGES = "2" *) 
  (* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) 
  (* LP_S_MAX_NUM_BYTES = "4" *) 
  (* LP_S_MIN_NUM_BYTES = "4" *) 
  (* LP_S_PIPELINE = "0" *) 
  (* LP_S_STATIC_DWIDTH = "1" *) 
  (* LP_ZERO_ROUTE_WIDTH = "0" *) 
  (* P_NUM_OUTSTANDING = "16" *) 
  design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11 inst
       (.m_axis_arb_tdata(NLW_inst_m_axis_arb_tdata_UNCONNECTED[15:0]),
        .m_axis_arb_tready(NLW_inst_m_axis_arb_tready_UNCONNECTED),
        .m_axis_arb_tvalid(NLW_inst_m_axis_arb_tvalid_UNCONNECTED),
        .m_sc_aclk(NLW_inst_m_sc_aclk_UNCONNECTED),
        .m_sc_aclken(NLW_inst_m_sc_aclken_UNCONNECTED),
        .m_sc_aresetn(NLW_inst_m_sc_aresetn_UNCONNECTED),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[0]),
        .m_sc_payld({M_SC_B_payld,NLW_inst_m_sc_payld_UNCONNECTED[4:0]}),
        .m_sc_recv(M_SC_B_recv),
        .m_sc_req(NLW_inst_m_sc_req_UNCONNECTED[0]),
        .m_sc_send(M_SC_B_send),
        .s_axis_arb_tdata(NLW_inst_s_axis_arb_tdata_UNCONNECTED[15:0]),
        .s_axis_arb_tready(NLW_inst_s_axis_arb_tready_UNCONNECTED),
        .s_axis_arb_tvalid(NLW_inst_s_axis_arb_tvalid_UNCONNECTED),
        .s_sc_aclk(aclk),
        .s_sc_aclken(NLW_inst_s_sc_aclken_UNCONNECTED),
        .s_sc_aresetn(interconnect_aresetn),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[1:0]),
        .s_sc_payld(NLW_inst_s_sc_payld_UNCONNECTED[6:0]),
        .s_sc_recv({M01_AXI_bready,NLW_inst_s_sc_recv_UNCONNECTED[0]}),
        .s_sc_req({S_SC_B_req,NLW_inst_s_sc_req_UNCONNECTED[0]}),
        .s_sc_send({S_SC_B_send,NLW_inst_s_sc_send_UNCONNECTED[0]}));
endmodule

(* ORIG_REF_NAME = "bd_afc3_m01arn_0" *) 
module design_1_axi_smc_0_bd_afc3_m01arn_0
   (M_SC_AR_send,
    aclk,
    interconnect_aresetn,
    M01_AXI_arvalid);
  output [0:0]M_SC_AR_send;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]M01_AXI_arvalid;

  wire [0:0]M01_AXI_arvalid;
  wire [0:0]M_SC_AR_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire NLW_inst_m_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_m_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_m_sc_aclk_UNCONNECTED;
  wire NLW_inst_m_sc_aclken_UNCONNECTED;
  wire NLW_inst_m_sc_aresetn_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_s_sc_aclken_UNCONNECTED;
  wire [15:0]NLW_inst_m_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [140:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_req_UNCONNECTED;
  wire [15:0]NLW_inst_s_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [140:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_req_UNCONNECTED;

  (* C_ACLKEN_CONVERSION = "0" *) 
  (* C_ACLK_RELATIONSHIP = "1" *) 
  (* C_ADDR_WIDTH = "32" *) 
  (* C_ARBITER_MODE = "1" *) 
  (* C_CHANNEL = "2" *) 
  (* C_DISABLE_IP = "0" *) 
  (* C_ENABLE_PIPELINING = "8'b00000001" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_IP = "0" *) 
  (* C_FIFO_OUTPUT_REG = "1" *) 
  (* C_FIFO_SIZE = "5" *) 
  (* C_FIFO_TYPE = "2" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_MAX_PAYLD_BYTES = "4" *) 
  (* C_M_NUM_BYTES_ARRAY = "4" *) 
  (* C_M_PIPELINE = "0" *) 
  (* C_M_SEND_PIPELINE = "0" *) 
  (* C_NUM_MI = "1" *) 
  (* C_NUM_OUTSTANDING = "8" *) 
  (* C_NUM_SI = "1" *) 
  (* C_PAYLD_WIDTH = "141" *) 
  (* C_SC_ROUTE_WIDTH = "4" *) 
  (* C_SYNCHRONIZATION_STAGES = "3" *) 
  (* C_S_LATENCY = "0" *) 
  (* C_S_NUM_BYTES_ARRAY = "4" *) 
  (* C_S_PIPELINE = "0" *) 
  (* C_USER_BITS_PER_BYTE = "0" *) 
  (* C_USER_WIDTH = "0" *) 
  (* LP_ACLK_RELATIONSHIP = "1" *) 
  (* LP_ARBITER_MODE = "1" *) 
  (* LP_DT_REG = "true" *) 
  (* LP_FIFO_OUTPUT_REG = "1" *) 
  (* LP_FIFO_TYPE = "2" *) 
  (* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_LOG_NUM_MI = "1" *) 
  (* LP_LOG_NUM_SI = "1" *) 
  (* LP_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_MAX_NUM_BYTES = "4" *) 
  (* LP_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_M_MAX_NUM_BYTES = "4" *) 
  (* LP_M_MIN_NUM_BYTES = "4" *) 
  (* LP_M_STATIC_DWIDTH = "1" *) 
  (* LP_NODE_ADDR_WIDTH = "32" *) 
  (* LP_NODE_ID_WIDTH = "1" *) 
  (* LP_NODE_ROUTE_WIDTH = "4" *) 
  (* LP_NODE_USER_WIDTH = "0" *) 
  (* LP_SYNCHRONIZATION_STAGES = "2" *) 
  (* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) 
  (* LP_S_MAX_NUM_BYTES = "4" *) 
  (* LP_S_MIN_NUM_BYTES = "4" *) 
  (* LP_S_PIPELINE = "0" *) 
  (* LP_S_STATIC_DWIDTH = "1" *) 
  (* LP_ZERO_ROUTE_WIDTH = "0" *) 
  (* P_NUM_OUTSTANDING = "16" *) 
  design_1_axi_smc_0_sc_node_v1_0_10_top inst
       (.m_axis_arb_tdata(NLW_inst_m_axis_arb_tdata_UNCONNECTED[15:0]),
        .m_axis_arb_tready(NLW_inst_m_axis_arb_tready_UNCONNECTED),
        .m_axis_arb_tvalid(NLW_inst_m_axis_arb_tvalid_UNCONNECTED),
        .m_sc_aclk(NLW_inst_m_sc_aclk_UNCONNECTED),
        .m_sc_aclken(NLW_inst_m_sc_aclken_UNCONNECTED),
        .m_sc_aresetn(NLW_inst_m_sc_aresetn_UNCONNECTED),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[0]),
        .m_sc_payld(NLW_inst_m_sc_payld_UNCONNECTED[140:0]),
        .m_sc_recv(NLW_inst_m_sc_recv_UNCONNECTED[0]),
        .m_sc_req(NLW_inst_m_sc_req_UNCONNECTED[0]),
        .m_sc_send(M_SC_AR_send),
        .s_axis_arb_tdata(NLW_inst_s_axis_arb_tdata_UNCONNECTED[15:0]),
        .s_axis_arb_tready(NLW_inst_s_axis_arb_tready_UNCONNECTED),
        .s_axis_arb_tvalid(NLW_inst_s_axis_arb_tvalid_UNCONNECTED),
        .s_sc_aclk(aclk),
        .s_sc_aclken(NLW_inst_s_sc_aclken_UNCONNECTED),
        .s_sc_aresetn(interconnect_aresetn),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[0]),
        .s_sc_payld(NLW_inst_s_sc_payld_UNCONNECTED[140:0]),
        .s_sc_recv(NLW_inst_s_sc_recv_UNCONNECTED[0]),
        .s_sc_req(NLW_inst_s_sc_req_UNCONNECTED[0]),
        .s_sc_send(M01_AXI_arvalid));
endmodule

(* ORIG_REF_NAME = "bd_afc3_m01awn_0" *) 
module design_1_axi_smc_0_bd_afc3_m01awn_0
   (M_SC_AW_send,
    aclk,
    interconnect_aresetn,
    M01_AXI_awvalid);
  output [0:0]M_SC_AW_send;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]M01_AXI_awvalid;

  wire [0:0]M01_AXI_awvalid;
  wire [0:0]M_SC_AW_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire NLW_inst_m_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_m_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_m_sc_aclk_UNCONNECTED;
  wire NLW_inst_m_sc_aclken_UNCONNECTED;
  wire NLW_inst_m_sc_aresetn_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_s_sc_aclken_UNCONNECTED;
  wire [15:0]NLW_inst_m_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [140:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_req_UNCONNECTED;
  wire [15:0]NLW_inst_s_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [140:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_req_UNCONNECTED;

  (* C_ACLKEN_CONVERSION = "0" *) 
  (* C_ACLK_RELATIONSHIP = "1" *) 
  (* C_ADDR_WIDTH = "32" *) 
  (* C_ARBITER_MODE = "1" *) 
  (* C_CHANNEL = "3" *) 
  (* C_DISABLE_IP = "0" *) 
  (* C_ENABLE_PIPELINING = "8'b00000001" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_IP = "0" *) 
  (* C_FIFO_OUTPUT_REG = "1" *) 
  (* C_FIFO_SIZE = "5" *) 
  (* C_FIFO_TYPE = "2" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_MAX_PAYLD_BYTES = "4" *) 
  (* C_M_NUM_BYTES_ARRAY = "4" *) 
  (* C_M_PIPELINE = "0" *) 
  (* C_M_SEND_PIPELINE = "0" *) 
  (* C_NUM_MI = "1" *) 
  (* C_NUM_OUTSTANDING = "8" *) 
  (* C_NUM_SI = "1" *) 
  (* C_PAYLD_WIDTH = "141" *) 
  (* C_SC_ROUTE_WIDTH = "4" *) 
  (* C_SYNCHRONIZATION_STAGES = "3" *) 
  (* C_S_LATENCY = "0" *) 
  (* C_S_NUM_BYTES_ARRAY = "4" *) 
  (* C_S_PIPELINE = "0" *) 
  (* C_USER_BITS_PER_BYTE = "0" *) 
  (* C_USER_WIDTH = "0" *) 
  (* LP_ACLK_RELATIONSHIP = "1" *) 
  (* LP_ARBITER_MODE = "1" *) 
  (* LP_DT_REG = "true" *) 
  (* LP_FIFO_OUTPUT_REG = "1" *) 
  (* LP_FIFO_TYPE = "2" *) 
  (* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_LOG_NUM_MI = "1" *) 
  (* LP_LOG_NUM_SI = "1" *) 
  (* LP_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_MAX_NUM_BYTES = "4" *) 
  (* LP_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_M_MAX_NUM_BYTES = "4" *) 
  (* LP_M_MIN_NUM_BYTES = "4" *) 
  (* LP_M_STATIC_DWIDTH = "1" *) 
  (* LP_NODE_ADDR_WIDTH = "32" *) 
  (* LP_NODE_ID_WIDTH = "1" *) 
  (* LP_NODE_ROUTE_WIDTH = "4" *) 
  (* LP_NODE_USER_WIDTH = "0" *) 
  (* LP_SYNCHRONIZATION_STAGES = "2" *) 
  (* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) 
  (* LP_S_MAX_NUM_BYTES = "4" *) 
  (* LP_S_MIN_NUM_BYTES = "4" *) 
  (* LP_S_PIPELINE = "0" *) 
  (* LP_S_STATIC_DWIDTH = "1" *) 
  (* LP_ZERO_ROUTE_WIDTH = "0" *) 
  (* P_NUM_OUTSTANDING = "16" *) 
  design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0 inst
       (.m_axis_arb_tdata(NLW_inst_m_axis_arb_tdata_UNCONNECTED[15:0]),
        .m_axis_arb_tready(NLW_inst_m_axis_arb_tready_UNCONNECTED),
        .m_axis_arb_tvalid(NLW_inst_m_axis_arb_tvalid_UNCONNECTED),
        .m_sc_aclk(NLW_inst_m_sc_aclk_UNCONNECTED),
        .m_sc_aclken(NLW_inst_m_sc_aclken_UNCONNECTED),
        .m_sc_aresetn(NLW_inst_m_sc_aresetn_UNCONNECTED),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[0]),
        .m_sc_payld(NLW_inst_m_sc_payld_UNCONNECTED[140:0]),
        .m_sc_recv(NLW_inst_m_sc_recv_UNCONNECTED[0]),
        .m_sc_req(NLW_inst_m_sc_req_UNCONNECTED[0]),
        .m_sc_send(M_SC_AW_send),
        .s_axis_arb_tdata(NLW_inst_s_axis_arb_tdata_UNCONNECTED[15:0]),
        .s_axis_arb_tready(NLW_inst_s_axis_arb_tready_UNCONNECTED),
        .s_axis_arb_tvalid(NLW_inst_s_axis_arb_tvalid_UNCONNECTED),
        .s_sc_aclk(aclk),
        .s_sc_aclken(NLW_inst_s_sc_aclken_UNCONNECTED),
        .s_sc_aresetn(interconnect_aresetn),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[0]),
        .s_sc_payld(NLW_inst_s_sc_payld_UNCONNECTED[140:0]),
        .s_sc_recv(NLW_inst_s_sc_recv_UNCONNECTED[0]),
        .s_sc_req(NLW_inst_s_sc_req_UNCONNECTED[0]),
        .s_sc_send(M01_AXI_awvalid));
endmodule

(* ORIG_REF_NAME = "bd_afc3_m01bn_0" *) 
module design_1_axi_smc_0_bd_afc3_m01bn_0
   (M_SC_B_send,
    M_SC_B_req,
    aclk,
    interconnect_aresetn,
    M01_AXI_bvalid,
    M01_AXI_bready);
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_B_req;
  input aclk;
  input [0:0]interconnect_aresetn;
  input M01_AXI_bvalid;
  input M01_AXI_bready;

  wire M01_AXI_bready;
  wire M01_AXI_bvalid;
  wire [0:0]M_SC_B_req;
  wire [0:0]M_SC_B_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire NLW_inst_m_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_m_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_m_sc_aclk_UNCONNECTED;
  wire NLW_inst_m_sc_aclken_UNCONNECTED;
  wire NLW_inst_m_sc_aresetn_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_s_sc_aclken_UNCONNECTED;
  wire [15:0]NLW_inst_m_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [6:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [15:0]NLW_inst_s_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [6:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_req_UNCONNECTED;

  (* C_ACLKEN_CONVERSION = "0" *) 
  (* C_ACLK_RELATIONSHIP = "1" *) 
  (* C_ADDR_WIDTH = "32" *) 
  (* C_ARBITER_MODE = "1" *) 
  (* C_CHANNEL = "4" *) 
  (* C_DISABLE_IP = "0" *) 
  (* C_ENABLE_PIPELINING = "8'b00000001" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_IP = "0" *) 
  (* C_FIFO_OUTPUT_REG = "1" *) 
  (* C_FIFO_SIZE = "5" *) 
  (* C_FIFO_TYPE = "2" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_MAX_PAYLD_BYTES = "4" *) 
  (* C_M_NUM_BYTES_ARRAY = "4" *) 
  (* C_M_PIPELINE = "0" *) 
  (* C_M_SEND_PIPELINE = "1" *) 
  (* C_NUM_MI = "1" *) 
  (* C_NUM_OUTSTANDING = "8" *) 
  (* C_NUM_SI = "1" *) 
  (* C_PAYLD_WIDTH = "7" *) 
  (* C_SC_ROUTE_WIDTH = "3" *) 
  (* C_SYNCHRONIZATION_STAGES = "3" *) 
  (* C_S_LATENCY = "0" *) 
  (* C_S_NUM_BYTES_ARRAY = "4" *) 
  (* C_S_PIPELINE = "0" *) 
  (* C_USER_BITS_PER_BYTE = "0" *) 
  (* C_USER_WIDTH = "0" *) 
  (* LP_ACLK_RELATIONSHIP = "1" *) 
  (* LP_ARBITER_MODE = "1" *) 
  (* LP_DT_REG = "true" *) 
  (* LP_FIFO_OUTPUT_REG = "1" *) 
  (* LP_FIFO_TYPE = "2" *) 
  (* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_LOG_NUM_MI = "1" *) 
  (* LP_LOG_NUM_SI = "1" *) 
  (* LP_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_MAX_NUM_BYTES = "4" *) 
  (* LP_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_M_MAX_NUM_BYTES = "4" *) 
  (* LP_M_MIN_NUM_BYTES = "4" *) 
  (* LP_M_STATIC_DWIDTH = "1" *) 
  (* LP_NODE_ADDR_WIDTH = "32" *) 
  (* LP_NODE_ID_WIDTH = "1" *) 
  (* LP_NODE_ROUTE_WIDTH = "3" *) 
  (* LP_NODE_USER_WIDTH = "0" *) 
  (* LP_SYNCHRONIZATION_STAGES = "2" *) 
  (* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) 
  (* LP_S_MAX_NUM_BYTES = "4" *) 
  (* LP_S_MIN_NUM_BYTES = "4" *) 
  (* LP_S_PIPELINE = "0" *) 
  (* LP_S_STATIC_DWIDTH = "1" *) 
  (* LP_ZERO_ROUTE_WIDTH = "0" *) 
  (* P_NUM_OUTSTANDING = "16" *) 
  design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1 inst
       (.m_axis_arb_tdata(NLW_inst_m_axis_arb_tdata_UNCONNECTED[15:0]),
        .m_axis_arb_tready(NLW_inst_m_axis_arb_tready_UNCONNECTED),
        .m_axis_arb_tvalid(NLW_inst_m_axis_arb_tvalid_UNCONNECTED),
        .m_sc_aclk(NLW_inst_m_sc_aclk_UNCONNECTED),
        .m_sc_aclken(NLW_inst_m_sc_aclken_UNCONNECTED),
        .m_sc_aresetn(NLW_inst_m_sc_aresetn_UNCONNECTED),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[0]),
        .m_sc_payld(NLW_inst_m_sc_payld_UNCONNECTED[6:0]),
        .m_sc_recv(M01_AXI_bready),
        .m_sc_req(M_SC_B_req),
        .m_sc_send(M_SC_B_send),
        .s_axis_arb_tdata(NLW_inst_s_axis_arb_tdata_UNCONNECTED[15:0]),
        .s_axis_arb_tready(NLW_inst_s_axis_arb_tready_UNCONNECTED),
        .s_axis_arb_tvalid(NLW_inst_s_axis_arb_tvalid_UNCONNECTED),
        .s_sc_aclk(aclk),
        .s_sc_aclken(NLW_inst_s_sc_aclken_UNCONNECTED),
        .s_sc_aresetn(interconnect_aresetn),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[0]),
        .s_sc_payld(NLW_inst_s_sc_payld_UNCONNECTED[6:0]),
        .s_sc_recv(NLW_inst_s_sc_recv_UNCONNECTED[0]),
        .s_sc_req(NLW_inst_s_sc_req_UNCONNECTED[0]),
        .s_sc_send(M01_AXI_bvalid));
endmodule

(* ORIG_REF_NAME = "bd_afc3_m01e_0" *) 
module design_1_axi_smc_0_bd_afc3_m01e_0
   (M_SC_AW_recv,
    M_SC_W_recv,
    M_SC_AR_recv,
    M01_AXI_awvalid,
    M01_AXI_wvalid,
    M01_AXI_arvalid,
    aclk,
    interconnect_aresetn,
    M_SC_AW_send,
    M_SC_W_send,
    M01_AXI_bready,
    M_SC_AR_send,
    M01_AXI_rready,
    M01_AXI_awready,
    M01_AXI_wready,
    M01_AXI_bvalid,
    M01_AXI_arready,
    M01_AXI_rvalid);
  output [0:0]M_SC_AW_recv;
  output [0:0]M_SC_W_recv;
  output [0:0]M_SC_AR_recv;
  output M01_AXI_awvalid;
  output M01_AXI_wvalid;
  output M01_AXI_arvalid;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]M_SC_AW_send;
  input [0:0]M_SC_W_send;
  input M01_AXI_bready;
  input [0:0]M_SC_AR_send;
  input M01_AXI_rready;
  input M01_AXI_awready;
  input M01_AXI_wready;
  input M01_AXI_bvalid;
  input M01_AXI_arready;
  input M01_AXI_rvalid;

  wire M01_AXI_arready;
  wire M01_AXI_arvalid;
  wire M01_AXI_awready;
  wire M01_AXI_awvalid;
  wire M01_AXI_bready;
  wire M01_AXI_bvalid;
  wire M01_AXI_rready;
  wire M01_AXI_rvalid;
  wire M01_AXI_wready;
  wire M01_AXI_wvalid;
  wire [0:0]M_SC_AR_recv;
  wire [0:0]M_SC_AR_send;
  wire [0:0]M_SC_AW_recv;
  wire [0:0]M_SC_AW_send;
  wire [0:0]M_SC_W_recv;
  wire [0:0]M_SC_W_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire NLW_inst_aclken_UNCONNECTED;
  wire NLW_inst_m_axi_bready_UNCONNECTED;
  wire NLW_inst_m_axi_rlast_UNCONNECTED;
  wire NLW_inst_m_axi_rready_UNCONNECTED;
  wire NLW_inst_m_axi_wlast_UNCONNECTED;
  wire NLW_inst_s_axi_bvalid_UNCONNECTED;
  wire NLW_inst_s_axi_rlast_UNCONNECTED;
  wire NLW_inst_s_axi_rvalid_UNCONNECTED;
  wire NLW_inst_s_axi_wlast_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arqos_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_aruser_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awqos_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awuser_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_bid_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_buser_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_rid_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_ruser_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_wid_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_inst_s_axi_araddr_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_inst_s_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_arqos_UNCONNECTED;
  wire [1023:0]NLW_inst_s_axi_aruser_UNCONNECTED;
  wire [7:0]NLW_inst_s_axi_awaddr_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_s_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_awqos_UNCONNECTED;
  wire [1023:0]NLW_inst_s_axi_awuser_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_bresp_UNCONNECTED;
  wire [1023:0]NLW_inst_s_axi_buser_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_rresp_UNCONNECTED;
  wire [1023:0]NLW_inst_s_axi_ruser_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_wstrb_UNCONNECTED;
  wire [1023:0]NLW_inst_s_axi_wuser_UNCONNECTED;

  (* C_ADDR_WIDTH = "8" *) 
  (* C_ENABLE_PIPELINING = "1'b0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_LOCK = "0" *) 
  (* C_IS_CASCADED = "0" *) 
  (* C_MAX_RUSER_BITS_PER_BYTE = "0" *) 
  (* C_MAX_WUSER_BITS_PER_BYTE = "0" *) 
  (* C_MEP_IDENTIFIER_WIDTH = "1" *) 
  (* C_M_ARUSER_WIDTH = "0" *) 
  (* C_M_AWUSER_WIDTH = "0" *) 
  (* C_M_BUSER_WIDTH = "0" *) 
  (* C_M_ID_WIDTH = "0" *) 
  (* C_M_LIMIT_READ_LENGTH = "0" *) 
  (* C_M_LIMIT_WRITE_LENGTH = "0" *) 
  (* C_M_PROTOCOL = "2" *) 
  (* C_M_RUSER_BITS_PER_BYTE = "0" *) 
  (* C_M_RUSER_WIDTH = "0" *) 
  (* C_M_WUSER_BITS_PER_BYTE = "0" *) 
  (* C_M_WUSER_WIDTH = "0" *) 
  (* C_NUM_MSC = "2" *) 
  (* C_NUM_READ_OUTSTANDING = "8" *) 
  (* C_NUM_WRITE_OUTSTANDING = "8" *) 
  (* C_RDATA_WIDTH = "32" *) 
  (* C_READ_ACCEPTANCE = "32" *) 
  (* C_SINGLE_ISSUING = "1" *) 
  (* C_SSC_ROUTE_ARRAY = "6'b101111" *) 
  (* C_SSC_ROUTE_WIDTH = "3" *) 
  (* C_S_ID_WIDTH = "1" *) 
  (* C_WDATA_WIDTH = "32" *) 
  (* C_WRITE_ACCEPTANCE = "32" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* P_BYPASS = "0" *) 
  (* P_FULLY_PIPELINED = "2" *) 
  (* P_NUM_READ_OUTSTANDING = "16" *) 
  (* P_NUM_WRITE_OUTSTANDING = "16" *) 
  (* P_ZERO_LATENCY = "1" *) 
  design_1_axi_smc_0_sc_exit_v1_0_9_top inst
       (.aclk(aclk),
        .aclken(NLW_inst_aclken_UNCONNECTED),
        .aresetn(interconnect_aresetn),
        .m_axi_araddr(NLW_inst_m_axi_araddr_UNCONNECTED[7:0]),
        .m_axi_arburst(NLW_inst_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_inst_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_inst_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_inst_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_inst_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_inst_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(M01_AXI_arready),
        .m_axi_arsize(NLW_inst_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_inst_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(M01_AXI_arvalid),
        .m_axi_awaddr(NLW_inst_m_axi_awaddr_UNCONNECTED[7:0]),
        .m_axi_awburst(NLW_inst_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_inst_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_inst_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_inst_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_inst_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_inst_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(M01_AXI_awready),
        .m_axi_awsize(NLW_inst_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_inst_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(M01_AXI_awvalid),
        .m_axi_bid(NLW_inst_m_axi_bid_UNCONNECTED[0]),
        .m_axi_bready(NLW_inst_m_axi_bready_UNCONNECTED),
        .m_axi_bresp(NLW_inst_m_axi_bresp_UNCONNECTED[1:0]),
        .m_axi_buser(NLW_inst_m_axi_buser_UNCONNECTED[0]),
        .m_axi_bvalid(M01_AXI_bvalid),
        .m_axi_rdata(NLW_inst_m_axi_rdata_UNCONNECTED[31:0]),
        .m_axi_rid(NLW_inst_m_axi_rid_UNCONNECTED[0]),
        .m_axi_rlast(NLW_inst_m_axi_rlast_UNCONNECTED),
        .m_axi_rready(NLW_inst_m_axi_rready_UNCONNECTED),
        .m_axi_rresp(NLW_inst_m_axi_rresp_UNCONNECTED[1:0]),
        .m_axi_ruser(NLW_inst_m_axi_ruser_UNCONNECTED[0]),
        .m_axi_rvalid(M01_AXI_rvalid),
        .m_axi_wdata(NLW_inst_m_axi_wdata_UNCONNECTED[31:0]),
        .m_axi_wid(NLW_inst_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_inst_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(M01_AXI_wready),
        .m_axi_wstrb(NLW_inst_m_axi_wstrb_UNCONNECTED[3:0]),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(M01_AXI_wvalid),
        .s_axi_araddr(NLW_inst_s_axi_araddr_UNCONNECTED[7:0]),
        .s_axi_arcache(NLW_inst_s_axi_arcache_UNCONNECTED[3:0]),
        .s_axi_arid(NLW_inst_s_axi_arid_UNCONNECTED[0]),
        .s_axi_arlen(NLW_inst_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arlock(NLW_inst_s_axi_arlock_UNCONNECTED[0]),
        .s_axi_arprot(NLW_inst_s_axi_arprot_UNCONNECTED[2:0]),
        .s_axi_arqos(NLW_inst_s_axi_arqos_UNCONNECTED[3:0]),
        .s_axi_arready(M_SC_AR_recv),
        .s_axi_aruser(NLW_inst_s_axi_aruser_UNCONNECTED[1023:0]),
        .s_axi_arvalid(M_SC_AR_send),
        .s_axi_awaddr(NLW_inst_s_axi_awaddr_UNCONNECTED[7:0]),
        .s_axi_awcache(NLW_inst_s_axi_awcache_UNCONNECTED[3:0]),
        .s_axi_awid(NLW_inst_s_axi_awid_UNCONNECTED[0]),
        .s_axi_awlen(NLW_inst_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awlock(NLW_inst_s_axi_awlock_UNCONNECTED[0]),
        .s_axi_awprot(NLW_inst_s_axi_awprot_UNCONNECTED[2:0]),
        .s_axi_awqos(NLW_inst_s_axi_awqos_UNCONNECTED[3:0]),
        .s_axi_awready(M_SC_AW_recv),
        .s_axi_awuser(NLW_inst_s_axi_awuser_UNCONNECTED[1023:0]),
        .s_axi_awvalid(M_SC_AW_send),
        .s_axi_bid(NLW_inst_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(M01_AXI_bready),
        .s_axi_bresp(NLW_inst_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_inst_s_axi_buser_UNCONNECTED[1023:0]),
        .s_axi_bvalid(NLW_inst_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_inst_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_rid(NLW_inst_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_inst_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(M01_AXI_rready),
        .s_axi_rresp(NLW_inst_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_inst_s_axi_ruser_UNCONNECTED[1023:0]),
        .s_axi_rvalid(NLW_inst_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata(NLW_inst_s_axi_wdata_UNCONNECTED[31:0]),
        .s_axi_wlast(NLW_inst_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(M_SC_W_recv),
        .s_axi_wstrb(NLW_inst_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wuser(NLW_inst_s_axi_wuser_UNCONNECTED[1023:0]),
        .s_axi_wvalid(M_SC_W_send));
endmodule

(* ORIG_REF_NAME = "bd_afc3_m01rn_0" *) 
module design_1_axi_smc_0_bd_afc3_m01rn_0
   (M_SC_R_send,
    M_SC_R_req,
    aclk,
    interconnect_aresetn,
    M01_AXI_rvalid,
    M01_AXI_rready);
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_R_req;
  input aclk;
  input [0:0]interconnect_aresetn;
  input M01_AXI_rvalid;
  input M01_AXI_rready;

  wire M01_AXI_rready;
  wire M01_AXI_rvalid;
  wire [0:0]M_SC_R_req;
  wire [0:0]M_SC_R_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire NLW_inst_m_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_m_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_m_sc_aclk_UNCONNECTED;
  wire NLW_inst_m_sc_aclken_UNCONNECTED;
  wire NLW_inst_m_sc_aresetn_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_s_sc_aclken_UNCONNECTED;
  wire [15:0]NLW_inst_m_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [52:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [15:0]NLW_inst_s_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [52:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_req_UNCONNECTED;

  (* C_ACLKEN_CONVERSION = "0" *) 
  (* C_ACLK_RELATIONSHIP = "1" *) 
  (* C_ADDR_WIDTH = "32" *) 
  (* C_ARBITER_MODE = "1" *) 
  (* C_CHANNEL = "0" *) 
  (* C_DISABLE_IP = "0" *) 
  (* C_ENABLE_PIPELINING = "8'b00000001" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_IP = "0" *) 
  (* C_FIFO_OUTPUT_REG = "1" *) 
  (* C_FIFO_SIZE = "5" *) 
  (* C_FIFO_TYPE = "2" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_MAX_PAYLD_BYTES = "4" *) 
  (* C_M_NUM_BYTES_ARRAY = "4" *) 
  (* C_M_PIPELINE = "0" *) 
  (* C_M_SEND_PIPELINE = "1" *) 
  (* C_NUM_MI = "1" *) 
  (* C_NUM_OUTSTANDING = "8" *) 
  (* C_NUM_SI = "1" *) 
  (* C_PAYLD_WIDTH = "53" *) 
  (* C_SC_ROUTE_WIDTH = "3" *) 
  (* C_SYNCHRONIZATION_STAGES = "3" *) 
  (* C_S_LATENCY = "0" *) 
  (* C_S_NUM_BYTES_ARRAY = "4" *) 
  (* C_S_PIPELINE = "0" *) 
  (* C_USER_BITS_PER_BYTE = "0" *) 
  (* C_USER_WIDTH = "0" *) 
  (* LP_ACLK_RELATIONSHIP = "1" *) 
  (* LP_ARBITER_MODE = "1" *) 
  (* LP_DT_REG = "true" *) 
  (* LP_FIFO_OUTPUT_REG = "1" *) 
  (* LP_FIFO_TYPE = "2" *) 
  (* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_LOG_NUM_MI = "1" *) 
  (* LP_LOG_NUM_SI = "1" *) 
  (* LP_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_MAX_NUM_BYTES = "4" *) 
  (* LP_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_M_MAX_NUM_BYTES = "4" *) 
  (* LP_M_MIN_NUM_BYTES = "4" *) 
  (* LP_M_STATIC_DWIDTH = "1" *) 
  (* LP_NODE_ADDR_WIDTH = "32" *) 
  (* LP_NODE_ID_WIDTH = "1" *) 
  (* LP_NODE_ROUTE_WIDTH = "3" *) 
  (* LP_NODE_USER_WIDTH = "1" *) 
  (* LP_SYNCHRONIZATION_STAGES = "2" *) 
  (* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) 
  (* LP_S_MAX_NUM_BYTES = "4" *) 
  (* LP_S_MIN_NUM_BYTES = "4" *) 
  (* LP_S_PIPELINE = "0" *) 
  (* LP_S_STATIC_DWIDTH = "1" *) 
  (* LP_ZERO_ROUTE_WIDTH = "0" *) 
  (* P_NUM_OUTSTANDING = "16" *) 
  design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2 inst
       (.m_axis_arb_tdata(NLW_inst_m_axis_arb_tdata_UNCONNECTED[15:0]),
        .m_axis_arb_tready(NLW_inst_m_axis_arb_tready_UNCONNECTED),
        .m_axis_arb_tvalid(NLW_inst_m_axis_arb_tvalid_UNCONNECTED),
        .m_sc_aclk(NLW_inst_m_sc_aclk_UNCONNECTED),
        .m_sc_aclken(NLW_inst_m_sc_aclken_UNCONNECTED),
        .m_sc_aresetn(NLW_inst_m_sc_aresetn_UNCONNECTED),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[0]),
        .m_sc_payld(NLW_inst_m_sc_payld_UNCONNECTED[52:0]),
        .m_sc_recv(M01_AXI_rready),
        .m_sc_req(M_SC_R_req),
        .m_sc_send(M_SC_R_send),
        .s_axis_arb_tdata(NLW_inst_s_axis_arb_tdata_UNCONNECTED[15:0]),
        .s_axis_arb_tready(NLW_inst_s_axis_arb_tready_UNCONNECTED),
        .s_axis_arb_tvalid(NLW_inst_s_axis_arb_tvalid_UNCONNECTED),
        .s_sc_aclk(aclk),
        .s_sc_aclken(NLW_inst_s_sc_aclken_UNCONNECTED),
        .s_sc_aresetn(interconnect_aresetn),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[0]),
        .s_sc_payld(NLW_inst_s_sc_payld_UNCONNECTED[52:0]),
        .s_sc_recv(NLW_inst_s_sc_recv_UNCONNECTED[0]),
        .s_sc_req(NLW_inst_s_sc_req_UNCONNECTED[0]),
        .s_sc_send(M01_AXI_rvalid));
endmodule

(* ORIG_REF_NAME = "bd_afc3_m01wn_0" *) 
module design_1_axi_smc_0_bd_afc3_m01wn_0
   (M_SC_W_send,
    aclk,
    interconnect_aresetn,
    M01_AXI_wvalid);
  output [0:0]M_SC_W_send;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]M01_AXI_wvalid;

  wire [0:0]M01_AXI_wvalid;
  wire [0:0]M_SC_W_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire NLW_inst_m_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_m_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_m_sc_aclk_UNCONNECTED;
  wire NLW_inst_m_sc_aclken_UNCONNECTED;
  wire NLW_inst_m_sc_aresetn_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_s_sc_aclken_UNCONNECTED;
  wire [15:0]NLW_inst_m_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [54:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_req_UNCONNECTED;
  wire [15:0]NLW_inst_s_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [54:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_req_UNCONNECTED;

  (* C_ACLKEN_CONVERSION = "0" *) 
  (* C_ACLK_RELATIONSHIP = "1" *) 
  (* C_ADDR_WIDTH = "32" *) 
  (* C_ARBITER_MODE = "1" *) 
  (* C_CHANNEL = "1" *) 
  (* C_DISABLE_IP = "0" *) 
  (* C_ENABLE_PIPELINING = "8'b00000001" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_IP = "0" *) 
  (* C_FIFO_OUTPUT_REG = "1" *) 
  (* C_FIFO_SIZE = "5" *) 
  (* C_FIFO_TYPE = "2" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_MAX_PAYLD_BYTES = "4" *) 
  (* C_M_NUM_BYTES_ARRAY = "4" *) 
  (* C_M_PIPELINE = "0" *) 
  (* C_M_SEND_PIPELINE = "0" *) 
  (* C_NUM_MI = "1" *) 
  (* C_NUM_OUTSTANDING = "8" *) 
  (* C_NUM_SI = "1" *) 
  (* C_PAYLD_WIDTH = "55" *) 
  (* C_SC_ROUTE_WIDTH = "4" *) 
  (* C_SYNCHRONIZATION_STAGES = "3" *) 
  (* C_S_LATENCY = "0" *) 
  (* C_S_NUM_BYTES_ARRAY = "4" *) 
  (* C_S_PIPELINE = "0" *) 
  (* C_USER_BITS_PER_BYTE = "0" *) 
  (* C_USER_WIDTH = "0" *) 
  (* LP_ACLK_RELATIONSHIP = "1" *) 
  (* LP_ARBITER_MODE = "2" *) 
  (* LP_DT_REG = "true" *) 
  (* LP_FIFO_OUTPUT_REG = "1" *) 
  (* LP_FIFO_TYPE = "2" *) 
  (* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_LOG_NUM_MI = "1" *) 
  (* LP_LOG_NUM_SI = "1" *) 
  (* LP_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_MAX_NUM_BYTES = "4" *) 
  (* LP_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_M_MAX_NUM_BYTES = "4" *) 
  (* LP_M_MIN_NUM_BYTES = "4" *) 
  (* LP_M_STATIC_DWIDTH = "1" *) 
  (* LP_NODE_ADDR_WIDTH = "32" *) 
  (* LP_NODE_ID_WIDTH = "1" *) 
  (* LP_NODE_ROUTE_WIDTH = "4" *) 
  (* LP_NODE_USER_WIDTH = "1" *) 
  (* LP_SYNCHRONIZATION_STAGES = "2" *) 
  (* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) 
  (* LP_S_MAX_NUM_BYTES = "4" *) 
  (* LP_S_MIN_NUM_BYTES = "4" *) 
  (* LP_S_PIPELINE = "0" *) 
  (* LP_S_STATIC_DWIDTH = "1" *) 
  (* LP_ZERO_ROUTE_WIDTH = "0" *) 
  (* P_NUM_OUTSTANDING = "16" *) 
  design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3 inst
       (.m_axis_arb_tdata(NLW_inst_m_axis_arb_tdata_UNCONNECTED[15:0]),
        .m_axis_arb_tready(NLW_inst_m_axis_arb_tready_UNCONNECTED),
        .m_axis_arb_tvalid(NLW_inst_m_axis_arb_tvalid_UNCONNECTED),
        .m_sc_aclk(NLW_inst_m_sc_aclk_UNCONNECTED),
        .m_sc_aclken(NLW_inst_m_sc_aclken_UNCONNECTED),
        .m_sc_aresetn(NLW_inst_m_sc_aresetn_UNCONNECTED),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[0]),
        .m_sc_payld(NLW_inst_m_sc_payld_UNCONNECTED[54:0]),
        .m_sc_recv(NLW_inst_m_sc_recv_UNCONNECTED[0]),
        .m_sc_req(NLW_inst_m_sc_req_UNCONNECTED[0]),
        .m_sc_send(M_SC_W_send),
        .s_axis_arb_tdata(NLW_inst_s_axis_arb_tdata_UNCONNECTED[15:0]),
        .s_axis_arb_tready(NLW_inst_s_axis_arb_tready_UNCONNECTED),
        .s_axis_arb_tvalid(NLW_inst_s_axis_arb_tvalid_UNCONNECTED),
        .s_sc_aclk(aclk),
        .s_sc_aclken(NLW_inst_s_sc_aclken_UNCONNECTED),
        .s_sc_aresetn(interconnect_aresetn),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[0]),
        .s_sc_payld(NLW_inst_s_sc_payld_UNCONNECTED[54:0]),
        .s_sc_recv(NLW_inst_s_sc_recv_UNCONNECTED[0]),
        .s_sc_req(NLW_inst_s_sc_req_UNCONNECTED[0]),
        .s_sc_send(M01_AXI_wvalid));
endmodule

(* ORIG_REF_NAME = "bd_afc3_psr_aclk_0" *) 
module design_1_axi_smc_0_bd_afc3_psr_aclk_0
   (interconnect_aresetn,
    aclk,
    aresetn);
  output [0:0]interconnect_aresetn;
  input aclk;
  input aresetn;

  wire aclk;
  wire aresetn;
  wire [0:0]interconnect_aresetn;

  design_1_axi_smc_0_proc_sys_reset U0
       (.aclk(aclk),
        .aresetn(aresetn),
        .interconnect_aresetn(interconnect_aresetn));
endmodule

(* ORIG_REF_NAME = "bd_afc3_rni_0" *) 
module design_1_axi_smc_0_bd_afc3_rni_0
   (M01_AXI_rready,
    M_SC_R_send,
    M_SC_R_payld,
    aclk,
    interconnect_aresetn,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_R_payld,
    M_SC_R_recv);
  output M01_AXI_rready;
  output [0:0]M_SC_R_send;
  output [33:0]M_SC_R_payld;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [33:0]S_SC_R_payld;
  input [0:0]M_SC_R_recv;

  wire M01_AXI_rready;
  wire [33:0]M_SC_R_payld;
  wire [0:0]M_SC_R_recv;
  wire [0:0]M_SC_R_send;
  wire [33:0]S_SC_R_payld;
  wire [0:0]S_SC_R_req;
  wire [0:0]S_SC_R_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire NLW_inst_m_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_m_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_m_sc_aclk_UNCONNECTED;
  wire NLW_inst_m_sc_aclken_UNCONNECTED;
  wire NLW_inst_m_sc_aresetn_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_s_sc_aclken_UNCONNECTED;
  wire [15:0]NLW_inst_m_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [52:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_req_UNCONNECTED;
  wire [15:0]NLW_inst_s_axis_arb_tdata_UNCONNECTED;
  wire [1:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [52:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_req_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_send_UNCONNECTED;

  (* C_ACLKEN_CONVERSION = "0" *) 
  (* C_ACLK_RELATIONSHIP = "1" *) 
  (* C_ADDR_WIDTH = "32" *) 
  (* C_ARBITER_MODE = "1" *) 
  (* C_CHANNEL = "0" *) 
  (* C_DISABLE_IP = "0" *) 
  (* C_ENABLE_PIPELINING = "8'b00000001" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_IP = "0" *) 
  (* C_FIFO_OUTPUT_REG = "1" *) 
  (* C_FIFO_SIZE = "0" *) 
  (* C_FIFO_TYPE = "0" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_MAX_PAYLD_BYTES = "4" *) 
  (* C_M_NUM_BYTES_ARRAY = "4" *) 
  (* C_M_PIPELINE = "0" *) 
  (* C_M_SEND_PIPELINE = "0" *) 
  (* C_NUM_MI = "1" *) 
  (* C_NUM_OUTSTANDING = "8" *) 
  (* C_NUM_SI = "2" *) 
  (* C_PAYLD_WIDTH = "53" *) 
  (* C_SC_ROUTE_WIDTH = "3" *) 
  (* C_SYNCHRONIZATION_STAGES = "3" *) 
  (* C_S_LATENCY = "0" *) 
  (* C_S_NUM_BYTES_ARRAY = "64'b0000000000000000000000000000010000000000000000000000000000000100" *) 
  (* C_S_PIPELINE = "0" *) 
  (* C_USER_BITS_PER_BYTE = "0" *) 
  (* C_USER_WIDTH = "512" *) 
  (* LP_ACLK_RELATIONSHIP = "1" *) 
  (* LP_ARBITER_MODE = "1" *) 
  (* LP_DT_REG = "true" *) 
  (* LP_FIFO_OUTPUT_REG = "1" *) 
  (* LP_FIFO_TYPE = "0" *) 
  (* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_LOG_NUM_MI = "1" *) 
  (* LP_LOG_NUM_SI = "1" *) 
  (* LP_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_MAX_NUM_BYTES = "4" *) 
  (* LP_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_M_MAX_NUM_BYTES = "4" *) 
  (* LP_M_MIN_NUM_BYTES = "4" *) 
  (* LP_M_STATIC_DWIDTH = "1" *) 
  (* LP_NODE_ADDR_WIDTH = "32" *) 
  (* LP_NODE_ID_WIDTH = "1" *) 
  (* LP_NODE_ROUTE_WIDTH = "3" *) 
  (* LP_NODE_USER_WIDTH = "1" *) 
  (* LP_SYNCHRONIZATION_STAGES = "2" *) 
  (* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) 
  (* LP_S_MAX_NUM_BYTES = "4" *) 
  (* LP_S_MIN_NUM_BYTES = "4" *) 
  (* LP_S_PIPELINE = "0" *) 
  (* LP_S_STATIC_DWIDTH = "1" *) 
  (* LP_ZERO_ROUTE_WIDTH = "0" *) 
  (* P_NUM_OUTSTANDING = "16" *) 
  design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12 inst
       (.m_axis_arb_tdata(NLW_inst_m_axis_arb_tdata_UNCONNECTED[15:0]),
        .m_axis_arb_tready(NLW_inst_m_axis_arb_tready_UNCONNECTED),
        .m_axis_arb_tvalid(NLW_inst_m_axis_arb_tvalid_UNCONNECTED),
        .m_sc_aclk(NLW_inst_m_sc_aclk_UNCONNECTED),
        .m_sc_aclken(NLW_inst_m_sc_aclken_UNCONNECTED),
        .m_sc_aresetn(NLW_inst_m_sc_aresetn_UNCONNECTED),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[0]),
        .m_sc_payld({NLW_inst_m_sc_payld_UNCONNECTED[52:32],M_SC_R_payld[12:2],NLW_inst_m_sc_payld_UNCONNECTED[20:0]}),
        .m_sc_recv(M_SC_R_recv),
        .m_sc_req(NLW_inst_m_sc_req_UNCONNECTED[0]),
        .m_sc_send(M_SC_R_send),
        .s_axis_arb_tdata(NLW_inst_s_axis_arb_tdata_UNCONNECTED[15:0]),
        .s_axis_arb_tready(NLW_inst_s_axis_arb_tready_UNCONNECTED),
        .s_axis_arb_tvalid(NLW_inst_s_axis_arb_tvalid_UNCONNECTED),
        .s_sc_aclk(aclk),
        .s_sc_aclken(NLW_inst_s_sc_aclken_UNCONNECTED),
        .s_sc_aresetn(interconnect_aresetn),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[1:0]),
        .s_sc_payld({NLW_inst_s_sc_payld_UNCONNECTED[52:32],S_SC_R_payld[12:2],NLW_inst_s_sc_payld_UNCONNECTED[20:0]}),
        .s_sc_recv({M01_AXI_rready,NLW_inst_s_sc_recv_UNCONNECTED[0]}),
        .s_sc_req({S_SC_R_req,NLW_inst_s_sc_req_UNCONNECTED[0]}),
        .s_sc_send({S_SC_R_send,NLW_inst_s_sc_send_UNCONNECTED[0]}));
endmodule

(* ORIG_REF_NAME = "bd_afc3_routsw_0" *) 
module design_1_axi_smc_0_bd_afc3_routsw_0
   (m_sc_payld,
    S01_SC_R_payld,
    M01_AXI_rready);
  output [33:0]m_sc_payld;
  input [33:0]S01_SC_R_payld;
  input M01_AXI_rready;

  wire M01_AXI_rready;
  wire [33:0]S01_SC_R_payld;
  wire [33:0]m_sc_payld;
  wire NLW_inst_aclk_UNCONNECTED;
  wire NLW_inst_aclken_UNCONNECTED;
  wire [1:0]NLW_inst_connectivity_UNCONNECTED;
  wire [1:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [52:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_recv_UNCONNECTED;
  wire [1:0]NLW_inst_m_sc_req_UNCONNECTED;
  wire [1:0]NLW_inst_m_sc_send_UNCONNECTED;
  wire [1:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [105:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [1:0]NLW_inst_s_sc_recv_UNCONNECTED;
  wire [1:0]NLW_inst_s_sc_req_UNCONNECTED;
  wire [1:0]NLW_inst_s_sc_send_UNCONNECTED;

  (* C_CONNECTIVITY = "2'b11" *) 
  (* C_M_PIPELINES = "32'b00000000000000000000000000000000" *) 
  (* C_NUM_MI = "1" *) 
  (* C_NUM_SI = "2" *) 
  (* C_PAYLD_WIDTH = "53" *) 
  (* C_S_LATENCY = "32'b00000000000000000000000000000000" *) 
  (* C_S_PIPELINES = "32'b00000000000000000000000000000000" *) 
  (* C_TESTING_MODE = "0" *) 
  (* K_MAX_INFO_WIDTH = "1" *) 
  (* LP_LOG_NUM_SI = "32'b00000000000000000000000000000001" *) 
  (* LP_MUX_IMPL = "32'b00000000000000000000000000000000" *) 
  (* LP_M_SC_SEL_MI_PIPELINE_DEPTH = "32'b00000000000000000000000000000000" *) 
  design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4 inst
       (.aclk(NLW_inst_aclk_UNCONNECTED),
        .aclken(NLW_inst_aclken_UNCONNECTED),
        .connectivity(NLW_inst_connectivity_UNCONNECTED[1:0]),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[1:0]),
        .m_sc_payld({NLW_inst_m_sc_payld_UNCONNECTED[52:32],m_sc_payld[12:2],NLW_inst_m_sc_payld_UNCONNECTED[20:0]}),
        .m_sc_recv({M01_AXI_rready,NLW_inst_m_sc_recv_UNCONNECTED[0]}),
        .m_sc_req(NLW_inst_m_sc_req_UNCONNECTED[1:0]),
        .m_sc_send(NLW_inst_m_sc_send_UNCONNECTED[1:0]),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[1:0]),
        .s_sc_payld({NLW_inst_s_sc_payld_UNCONNECTED[105:85],S01_SC_R_payld[12:2],NLW_inst_s_sc_payld_UNCONNECTED[73:0]}),
        .s_sc_recv(NLW_inst_s_sc_recv_UNCONNECTED[1:0]),
        .s_sc_req(NLW_inst_s_sc_req_UNCONNECTED[1:0]),
        .s_sc_send(NLW_inst_s_sc_send_UNCONNECTED[1:0]));
endmodule

(* ORIG_REF_NAME = "bd_afc3_s00mmu_0" *) 
module design_1_axi_smc_0_bd_afc3_s00mmu_0
   (S00_AXI_awready,
    S00_AXI_wready,
    S00_AXI_bid,
    S00_AXI_bresp,
    S00_AXI_bvalid,
    S00_AXI_arready,
    S00_AXI_rid,
    S00_AXI_rdata,
    S00_AXI_rresp,
    S00_AXI_rlast,
    S00_AXI_rvalid,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awsize,
    S_SC_AW_payld,
    m_axi_awvalid,
    S_SC_W_payld,
    m_axi_wvalid,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arprot,
    m_axi_arvalid,
    aclk,
    interconnect_aresetn,
    S00_AXI_awid,
    S00_AXI_awaddr,
    S00_AXI_awlen,
    S00_AXI_awsize,
    S00_AXI_awburst,
    S00_AXI_awprot,
    S00_AXI_awvalid,
    S00_AXI_wlast,
    S00_AXI_wvalid,
    S00_AXI_bready,
    S00_AXI_arid,
    S00_AXI_araddr,
    S00_AXI_arlen,
    S00_AXI_arsize,
    S00_AXI_arburst,
    S00_AXI_arprot,
    S00_AXI_arvalid,
    S00_AXI_rready,
    s_axi_awready,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid);
  output S00_AXI_awready;
  output S00_AXI_wready;
  output [11:0]S00_AXI_bid;
  output [1:0]S00_AXI_bresp;
  output S00_AXI_bvalid;
  output S00_AXI_arready;
  output [11:0]S00_AXI_rid;
  output [31:0]S00_AXI_rdata;
  output [1:0]S00_AXI_rresp;
  output S00_AXI_rlast;
  output S00_AXI_rvalid;
  output [11:0]m_axi_awid;
  output [7:0]m_axi_awaddr;
  output [2:0]m_axi_awsize;
  output [2:0]S_SC_AW_payld;
  output m_axi_awvalid;
  output [0:0]S_SC_W_payld;
  output m_axi_wvalid;
  output [11:0]m_axi_arid;
  output [7:0]m_axi_araddr;
  output [3:0]m_axi_arlen;
  output [1:0]m_axi_arsize;
  output [2:0]m_axi_arprot;
  output m_axi_arvalid;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [11:0]S00_AXI_awid;
  input [23:0]S00_AXI_awaddr;
  input [3:0]S00_AXI_awlen;
  input [2:0]S00_AXI_awsize;
  input [0:0]S00_AXI_awburst;
  input [2:0]S00_AXI_awprot;
  input S00_AXI_awvalid;
  input S00_AXI_wlast;
  input S00_AXI_wvalid;
  input S00_AXI_bready;
  input [11:0]S00_AXI_arid;
  input [23:0]S00_AXI_araddr;
  input [3:0]S00_AXI_arlen;
  input [2:0]S00_AXI_arsize;
  input [0:0]S00_AXI_arburst;
  input [2:0]S00_AXI_arprot;
  input S00_AXI_arvalid;
  input S00_AXI_rready;
  input s_axi_awready;
  input s_axi_wready;
  input [11:0]s_axi_bid;
  input [1:0]s_axi_bresp;
  input s_axi_bvalid;
  input s_axi_arready;
  input [11:0]s_axi_rid;
  input [31:0]s_axi_rdata;
  input [1:0]s_axi_rresp;
  input s_axi_rlast;
  input s_axi_rvalid;

  wire [23:0]S00_AXI_araddr;
  wire [0:0]S00_AXI_arburst;
  wire [11:0]S00_AXI_arid;
  wire [3:0]S00_AXI_arlen;
  wire S00_AXI_arready;
  wire [2:0]S00_AXI_arsize;
  wire S00_AXI_arvalid;
  wire [23:0]S00_AXI_awaddr;
  wire [0:0]S00_AXI_awburst;
  wire [11:0]S00_AXI_awid;
  wire [3:0]S00_AXI_awlen;
  wire S00_AXI_awready;
  wire [2:0]S00_AXI_awsize;
  wire S00_AXI_awvalid;
  wire [11:0]S00_AXI_bid;
  wire S00_AXI_bready;
  wire [1:0]S00_AXI_bresp;
  wire S00_AXI_bvalid;
  wire [31:0]S00_AXI_rdata;
  wire [11:0]S00_AXI_rid;
  wire S00_AXI_rlast;
  wire S00_AXI_rready;
  wire [1:0]S00_AXI_rresp;
  wire S00_AXI_rvalid;
  wire S00_AXI_wlast;
  wire S00_AXI_wready;
  wire S00_AXI_wvalid;
  wire [0:0]S_SC_W_payld;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire [7:0]m_axi_araddr;
  wire [11:0]m_axi_arid;
  wire [3:0]m_axi_arlen;
  wire [1:0]m_axi_arsize;
  wire m_axi_arvalid;
  wire [7:0]m_axi_awaddr;
  wire [11:0]m_axi_awid;
  wire [2:0]m_axi_awsize;
  wire m_axi_awvalid;
  wire m_axi_wvalid;
  wire s_axi_arready;
  wire s_axi_awready;
  wire [11:0]s_axi_bid;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire [11:0]s_axi_rid;
  wire s_axi_rlast;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire s_axi_wready;
  wire NLW_inst_aclken_UNCONNECTED;
  wire NLW_inst_m_axi_bready_UNCONNECTED;
  wire NLW_inst_m_axi_rready_UNCONNECTED;
  wire NLW_inst_m_axi_wlast_UNCONNECTED;
  wire [31:8]NLW_inst_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arcache_UNCONNECTED;
  wire [7:4]NLW_inst_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arqos_UNCONNECTED;
  wire [2:2]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [1023:0]NLW_inst_m_axi_aruser_UNCONNECTED;
  wire [31:8]NLW_inst_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awcache_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awqos_UNCONNECTED;
  wire [2:2]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [1023:0]NLW_inst_m_axi_awuser_UNCONNECTED;
  wire [1023:0]NLW_inst_m_axi_buser_UNCONNECTED;
  wire [31:11]NLW_inst_m_axi_rdata_UNCONNECTED;
  wire [1023:0]NLW_inst_m_axi_ruser_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_wstrb_UNCONNECTED;
  wire [1023:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [15:8]NLW_inst_s_axi_araddr_UNCONNECTED;
  wire [1:1]NLW_inst_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_arcache_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_arqos_UNCONNECTED;
  wire [2:2]NLW_inst_s_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_aruser_UNCONNECTED;
  wire [15:8]NLW_inst_s_axi_awaddr_UNCONNECTED;
  wire [1:1]NLW_inst_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_awcache_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_awqos_UNCONNECTED;
  wire [2:2]NLW_inst_s_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_awuser_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_buser_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_ruser_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_wdata_UNCONNECTED;
  wire [11:0]NLW_inst_s_axi_wid_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_wuser_UNCONNECTED;

  (* C_ADDR_WIDTH = "32" *) 
  (* C_ENABLE_PIPELINING = "1'b0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_ID_WIDTH = "12" *) 
  (* C_IS_CASCADED = "0" *) 
  (* C_MSC_ROUTE_ARRAY = "8'b11011011" *) 
  (* C_MSC_ROUTE_WIDTH = "4" *) 
  (* C_NUM_MSC = "2" *) 
  (* C_NUM_READ_OUTSTANDING = "8" *) 
  (* C_NUM_SEG = "1" *) 
  (* C_NUM_WRITE_OUTSTANDING = "8" *) 
  (* C_RDATA_WIDTH = "32" *) 
  (* C_READ_ACCEPTANCE = "32" *) 
  (* C_SEG_BASE_ADDR_ARRAY = "64'b0000000000000000000000000000000001000011110001000000000000000000" *) 
  (* C_SEG_SECURE_READ_ARRAY = "1'b0" *) 
  (* C_SEG_SECURE_WRITE_ARRAY = "1'b0" *) 
  (* C_SEG_SEP_ROUTE_ARRAY = "64'b0000000000000000000000000000000000000000000000000000000000000001" *) 
  (* C_SEG_SIZE_ARRAY = "16" *) 
  (* C_SEG_SUPPORTS_READ_ARRAY = "1'b1" *) 
  (* C_SEG_SUPPORTS_WRITE_ARRAY = "1'b1" *) 
  (* C_SINGLE_ISSUING = "1" *) 
  (* C_SUPPORTS_NARROW = "0" *) 
  (* C_SUPPORTS_READ_DECERR = "1" *) 
  (* C_SUPPORTS_WRAP = "0" *) 
  (* C_SUPPORTS_WRITE_DECERR = "1" *) 
  (* C_S_ARUSER_WIDTH = "0" *) 
  (* C_S_AWUSER_WIDTH = "0" *) 
  (* C_S_BUSER_WIDTH = "0" *) 
  (* C_S_PROTOCOL = "1" *) 
  (* C_S_RUSER_WIDTH = "0" *) 
  (* C_S_WUSER_WIDTH = "0" *) 
  (* C_WDATA_WIDTH = "32" *) 
  (* C_WRITE_ACCEPTANCE = "32" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* P_AXI3 = "1" *) 
  (* P_AXI4 = "0" *) 
  (* P_AXILITE = "2" *) 
  (* P_BYPASS = "0" *) 
  (* P_DECERR = "2'b11" *) 
  (* P_FIXED = "2'b00" *) 
  (* P_FULLY_PIPELINED = "2" *) 
  (* P_INCR = "2'b01" *) 
  (* P_NUM_MSC_LOG = "1" *) 
  (* P_NUM_SEG_LOG = "1" *) 
  (* P_R_DWBYTES = "4" *) 
  (* P_R_DWSIZE = "2" *) 
  (* P_R_QUEUE_SIZE = "4" *) 
  (* P_WRAP = "2'b10" *) 
  (* P_W_DWBYTES = "4" *) 
  (* P_W_DWSIZE = "2" *) 
  (* P_W_QUEUE_SIZE = "4" *) 
  (* P_ZERO_LATENCY = "1" *) 
  design_1_axi_smc_0_sc_mmu_v1_0_8_top inst
       (.aclk(aclk),
        .aclken(NLW_inst_aclken_UNCONNECTED),
        .aresetn(interconnect_aresetn),
        .m_axi_araddr({NLW_inst_m_axi_araddr_UNCONNECTED[31:8],m_axi_araddr}),
        .m_axi_arburst(NLW_inst_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_inst_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(m_axi_arid),
        .m_axi_arlen({NLW_inst_m_axi_arlen_UNCONNECTED[7:4],m_axi_arlen}),
        .m_axi_arlock(NLW_inst_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_inst_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_inst_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(s_axi_arready),
        .m_axi_arsize({NLW_inst_m_axi_arsize_UNCONNECTED[2],m_axi_arsize}),
        .m_axi_aruser(NLW_inst_m_axi_aruser_UNCONNECTED[1023:0]),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awaddr({NLW_inst_m_axi_awaddr_UNCONNECTED[31:8],m_axi_awaddr}),
        .m_axi_awburst(NLW_inst_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_inst_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(m_axi_awid),
        .m_axi_awlen(NLW_inst_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_inst_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_inst_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_inst_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(s_axi_awready),
        .m_axi_awsize({NLW_inst_m_axi_awsize_UNCONNECTED[2],m_axi_awsize[1:0]}),
        .m_axi_awuser(NLW_inst_m_axi_awuser_UNCONNECTED[1023:0]),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bid(s_axi_bid),
        .m_axi_bready(NLW_inst_m_axi_bready_UNCONNECTED),
        .m_axi_bresp(s_axi_bresp),
        .m_axi_buser(NLW_inst_m_axi_buser_UNCONNECTED[1023:0]),
        .m_axi_bvalid(s_axi_bvalid),
        .m_axi_rdata({NLW_inst_m_axi_rdata_UNCONNECTED[31:11],s_axi_rdata[10:0]}),
        .m_axi_rid(s_axi_rid),
        .m_axi_rlast(s_axi_rlast),
        .m_axi_rready(NLW_inst_m_axi_rready_UNCONNECTED),
        .m_axi_rresp(s_axi_rresp),
        .m_axi_ruser(NLW_inst_m_axi_ruser_UNCONNECTED[1023:0]),
        .m_axi_rvalid(s_axi_rvalid),
        .m_axi_wdata(NLW_inst_m_axi_wdata_UNCONNECTED[31:0]),
        .m_axi_wlast(NLW_inst_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(s_axi_wready),
        .m_axi_wstrb(NLW_inst_m_axi_wstrb_UNCONNECTED[3:0]),
        .m_axi_wuser({NLW_inst_m_axi_wuser_UNCONNECTED[1023:3],S_SC_W_payld,NLW_inst_m_axi_wuser_UNCONNECTED[1:0]}),
        .m_axi_wvalid(m_axi_wvalid),
        .s_axi_araddr({S00_AXI_araddr[23:8],NLW_inst_s_axi_araddr_UNCONNECTED[15:8],S00_AXI_araddr[7:0]}),
        .s_axi_arburst({NLW_inst_s_axi_arburst_UNCONNECTED[1],S00_AXI_arburst}),
        .s_axi_arcache(NLW_inst_s_axi_arcache_UNCONNECTED[3:0]),
        .s_axi_arid(S00_AXI_arid),
        .s_axi_arlen(S00_AXI_arlen),
        .s_axi_arlock(NLW_inst_s_axi_arlock_UNCONNECTED[1:0]),
        .s_axi_arprot(NLW_inst_s_axi_arprot_UNCONNECTED[2:0]),
        .s_axi_arqos(NLW_inst_s_axi_arqos_UNCONNECTED[3:0]),
        .s_axi_arready(S00_AXI_arready),
        .s_axi_arsize({NLW_inst_s_axi_arsize_UNCONNECTED[2],S00_AXI_arsize[1:0]}),
        .s_axi_aruser(NLW_inst_s_axi_aruser_UNCONNECTED[0]),
        .s_axi_arvalid(S00_AXI_arvalid),
        .s_axi_awaddr({S00_AXI_awaddr[23:8],NLW_inst_s_axi_awaddr_UNCONNECTED[15:8],S00_AXI_awaddr[7:0]}),
        .s_axi_awburst({NLW_inst_s_axi_awburst_UNCONNECTED[1],S00_AXI_awburst}),
        .s_axi_awcache(NLW_inst_s_axi_awcache_UNCONNECTED[3:0]),
        .s_axi_awid(S00_AXI_awid),
        .s_axi_awlen(S00_AXI_awlen),
        .s_axi_awlock(NLW_inst_s_axi_awlock_UNCONNECTED[1:0]),
        .s_axi_awprot(NLW_inst_s_axi_awprot_UNCONNECTED[2:0]),
        .s_axi_awqos(NLW_inst_s_axi_awqos_UNCONNECTED[3:0]),
        .s_axi_awready(S00_AXI_awready),
        .s_axi_awsize({NLW_inst_s_axi_awsize_UNCONNECTED[2],S00_AXI_awsize[1:0]}),
        .s_axi_awuser(NLW_inst_s_axi_awuser_UNCONNECTED[0]),
        .s_axi_awvalid(S00_AXI_awvalid),
        .s_axi_bid(S00_AXI_bid),
        .s_axi_bready(S00_AXI_bready),
        .s_axi_bresp(S00_AXI_bresp),
        .s_axi_buser(NLW_inst_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(S00_AXI_bvalid),
        .s_axi_rdata(S00_AXI_rdata),
        .s_axi_rid(S00_AXI_rid),
        .s_axi_rlast(S00_AXI_rlast),
        .s_axi_rready(S00_AXI_rready),
        .s_axi_rresp(S00_AXI_rresp),
        .s_axi_ruser(NLW_inst_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(S00_AXI_rvalid),
        .s_axi_wdata(NLW_inst_s_axi_wdata_UNCONNECTED[31:0]),
        .s_axi_wid(NLW_inst_s_axi_wid_UNCONNECTED[11:0]),
        .s_axi_wlast(S00_AXI_wlast),
        .s_axi_wready(S00_AXI_wready),
        .s_axi_wstrb(NLW_inst_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wuser(NLW_inst_s_axi_wuser_UNCONNECTED[0]),
        .s_axi_wvalid(S00_AXI_wvalid));
endmodule

(* ORIG_REF_NAME = "bd_afc3_s00sic_0" *) 
module design_1_axi_smc_0_bd_afc3_s00sic_0
   (s_axi_awready,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    S_SC_AW_payld,
    m_axi_awvalid,
    S_SC_W_payld,
    m_axi_wvalid,
    m_axi_bready,
    S_SC_AR_payld,
    m_axi_arvalid,
    m_axi_rready,
    aclk,
    interconnect_aresetn,
    m_axi_awaddr,
    m_axi_awsize,
    \aw_incr_reg[2] ,
    S00_AXI_wdata,
    S00_AXI_wstrb,
    S00_AXI_wlast,
    s_axi_wready_i_reg,
    S00_AXI_bready,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arprot,
    \FSM_sequential_r_state_reg[0] ,
    S00_AXI_rready,
    S_SC_AW_recv,
    S_SC_W_recv,
    M_SC_B_payld,
    M_SC_B_send,
    S_SC_AR_recv,
    M_SC_R_payld,
    M_SC_R_send);
  output s_axi_awready;
  output s_axi_wready;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  output s_axi_arready;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  output [7:0]S_SC_AW_payld;
  output m_axi_awvalid;
  output [35:0]S_SC_W_payld;
  output m_axi_wvalid;
  output m_axi_bready;
  output [11:0]S_SC_AR_payld;
  output m_axi_arvalid;
  output m_axi_rready;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [7:0]m_axi_awaddr;
  input [2:0]m_axi_awsize;
  input \aw_incr_reg[2] ;
  input [31:0]S00_AXI_wdata;
  input [3:0]S00_AXI_wstrb;
  input S00_AXI_wlast;
  input s_axi_wready_i_reg;
  input S00_AXI_bready;
  input [7:0]m_axi_araddr;
  input [3:0]m_axi_arlen;
  input [1:0]m_axi_arsize;
  input [2:0]m_axi_arprot;
  input \FSM_sequential_r_state_reg[0] ;
  input S00_AXI_rready;
  input [0:0]S_SC_AW_recv;
  input [0:0]S_SC_W_recv;
  input [1:0]M_SC_B_payld;
  input [0:0]M_SC_B_send;
  input [0:0]S_SC_AR_recv;
  input [33:0]M_SC_R_payld;
  input [0:0]M_SC_R_send;

  wire \FSM_sequential_r_state_reg[0] ;
  wire [1:0]M_SC_B_payld;
  wire [0:0]M_SC_B_send;
  wire [33:0]M_SC_R_payld;
  wire [0:0]M_SC_R_send;
  wire S00_AXI_bready;
  wire S00_AXI_rready;
  wire [31:0]S00_AXI_wdata;
  wire S00_AXI_wlast;
  wire [3:0]S00_AXI_wstrb;
  wire [11:0]S_SC_AR_payld;
  wire [0:0]S_SC_AR_recv;
  wire [7:0]S_SC_AW_payld;
  wire [0:0]S_SC_AW_recv;
  wire [35:0]S_SC_W_payld;
  wire [0:0]S_SC_W_recv;
  wire aclk;
  wire \aw_incr_reg[2] ;
  wire [0:0]interconnect_aresetn;
  wire [7:0]m_axi_araddr;
  wire [3:0]m_axi_arlen;
  wire [1:0]m_axi_arsize;
  wire m_axi_arvalid;
  wire [7:0]m_axi_awaddr;
  wire [2:0]m_axi_awsize;
  wire m_axi_awvalid;
  wire m_axi_bready;
  wire m_axi_rready;
  wire m_axi_wvalid;
  wire s_axi_arready;
  wire s_axi_awready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rlast;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire s_axi_wready;
  wire s_axi_wready_i_reg;
  wire NLW_inst_aclken_UNCONNECTED;
  wire NLW_inst_m_axi_rlast_UNCONNECTED;
  wire NLW_inst_m_axi_wlast_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_araddr_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arqos_UNCONNECTED;
  wire [1023:0]NLW_inst_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_awaddr_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awqos_UNCONNECTED;
  wire [1023:0]NLW_inst_m_axi_awuser_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_bid_UNCONNECTED;
  wire [1023:0]NLW_inst_m_axi_buser_UNCONNECTED;
  wire [31:11]NLW_inst_m_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_rid_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_rresp_UNCONNECTED;
  wire [1023:0]NLW_inst_m_axi_ruser_UNCONNECTED;
  wire [31:1]NLW_inst_m_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_wstrb_UNCONNECTED;
  wire [1023:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [31:8]NLW_inst_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_arid_UNCONNECTED;
  wire [7:4]NLW_inst_s_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_arqos_UNCONNECTED;
  wire [2:2]NLW_inst_s_axi_arsize_UNCONNECTED;
  wire [1023:0]NLW_inst_s_axi_aruser_UNCONNECTED;
  wire [31:8]NLW_inst_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_s_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_awqos_UNCONNECTED;
  wire [2:2]NLW_inst_s_axi_awsize_UNCONNECTED;
  wire [1023:0]NLW_inst_s_axi_awuser_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_bid_UNCONNECTED;
  wire [1023:0]NLW_inst_s_axi_buser_UNCONNECTED;
  wire [31:11]NLW_inst_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rid_UNCONNECTED;
  wire [1023:0]NLW_inst_s_axi_ruser_UNCONNECTED;
  wire [31:1]NLW_inst_s_axi_wdata_UNCONNECTED;
  wire [1023:0]NLW_inst_s_axi_wuser_UNCONNECTED;

  (* C_ADDR_WIDTH = "32" *) 
  (* C_AXILITE_CONV = "1" *) 
  (* C_ENABLE_PIPELINING = "1'b1" *) 
  (* C_HAS_BURST = "1" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_IS_CASCADED = "0" *) 
  (* C_LIMIT_READ_LENGTH = "0" *) 
  (* C_LIMIT_WRITE_LENGTH = "0" *) 
  (* C_MAX_RUSER_BITS_PER_BYTE = "0" *) 
  (* C_MAX_WUSER_BITS_PER_BYTE = "0" *) 
  (* C_MEP_IDENTIFIER_WIDTH = "1" *) 
  (* C_MSC_RDATA_WIDTH_ARRAY = "64'b0000000000000000000000000010000000000000000000000000000000100000" *) 
  (* C_MSC_WDATA_WIDTH_ARRAY = "64'b0000000000000000000000000010000000000000000000000000000000100000" *) 
  (* C_NUM_MSC = "2" *) 
  (* C_NUM_READ_OUTSTANDING = "8" *) 
  (* C_NUM_READ_THREADS = "1" *) 
  (* C_NUM_SEG = "1" *) 
  (* C_NUM_WRITE_OUTSTANDING = "8" *) 
  (* C_NUM_WRITE_THREADS = "1" *) 
  (* C_RDATA_WIDTH = "32" *) 
  (* C_READ_ACCEPTANCE = "32" *) 
  (* C_READ_WATERMARK = "0" *) 
  (* C_SEP_PROTOCOL_ARRAY = "2" *) 
  (* C_SEP_RDATA_WIDTH_ARRAY = "32" *) 
  (* C_SEP_WDATA_WIDTH_ARRAY = "32" *) 
  (* C_SINGLE_ISSUING = "1" *) 
  (* C_SUPPORTS_NARROW = "0" *) 
  (* C_S_RUSER_BITS_PER_BYTE = "0" *) 
  (* C_S_WUSER_BITS_PER_BYTE = "0" *) 
  (* C_WDATA_WIDTH = "32" *) 
  (* C_WRITE_ACCEPTANCE = "32" *) 
  (* C_WRITE_WATERMARK = "0" *) 
  (* P_EXOK = "2'b01" *) 
  (* P_FULLY_PIPELINED = "2" *) 
  (* P_ID_WIDTH = "1" *) 
  (* P_MAX_RUSER_BITS_PER_BYTE = "1" *) 
  (* P_MAX_WUSER_BITS_PER_BYTE = "1" *) 
  (* P_NUM_READ_OUTSTANDING = "16" *) 
  (* P_NUM_WRITE_OUTSTANDING = "16" *) 
  (* P_R_DWBYTES = "4" *) 
  (* P_R_DWSIZE = "2" *) 
  (* P_S_RUSER_BITS_PER_BYTE = "1" *) 
  (* P_S_WUSER_BITS_PER_BYTE = "1" *) 
  (* P_W_DWBYTES = "4" *) 
  (* P_W_DWSIZE = "2" *) 
  (* P_ZERO_LATENCY = "1" *) 
  design_1_axi_smc_0_sc_si_converter_v1_0_9_top inst
       (.aclk(aclk),
        .aclken(NLW_inst_aclken_UNCONNECTED),
        .aresetn(interconnect_aresetn),
        .m_axi_araddr({NLW_inst_m_axi_araddr_UNCONNECTED[31:8],S_SC_AR_payld[8:3],NLW_inst_m_axi_araddr_UNCONNECTED[1:0]}),
        .m_axi_arcache(NLW_inst_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_inst_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_inst_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_inst_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_inst_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(S_SC_AR_recv),
        .m_axi_aruser({NLW_inst_m_axi_aruser_UNCONNECTED[1023:3],S_SC_AR_payld[0],NLW_inst_m_axi_aruser_UNCONNECTED[1:0]}),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awaddr({NLW_inst_m_axi_awaddr_UNCONNECTED[31:8],S_SC_AW_payld[7:2],NLW_inst_m_axi_awaddr_UNCONNECTED[1:0]}),
        .m_axi_awcache(NLW_inst_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_inst_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_inst_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_inst_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_inst_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(S_SC_AW_recv),
        .m_axi_awuser(NLW_inst_m_axi_awuser_UNCONNECTED[1023:0]),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bid(NLW_inst_m_axi_bid_UNCONNECTED[0]),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(M_SC_B_payld),
        .m_axi_buser(NLW_inst_m_axi_buser_UNCONNECTED[1023:0]),
        .m_axi_bvalid(M_SC_B_send),
        .m_axi_rdata({NLW_inst_m_axi_rdata_UNCONNECTED[31:11],M_SC_R_payld[12:2]}),
        .m_axi_rid(NLW_inst_m_axi_rid_UNCONNECTED[0]),
        .m_axi_rlast(NLW_inst_m_axi_rlast_UNCONNECTED),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(NLW_inst_m_axi_rresp_UNCONNECTED[1:0]),
        .m_axi_ruser(NLW_inst_m_axi_ruser_UNCONNECTED[1023:0]),
        .m_axi_rvalid(M_SC_R_send),
        .m_axi_wdata({NLW_inst_m_axi_wdata_UNCONNECTED[31:1],S_SC_W_payld[1]}),
        .m_axi_wlast(NLW_inst_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(S_SC_W_recv),
        .m_axi_wstrb(NLW_inst_m_axi_wstrb_UNCONNECTED[3:0]),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[1023:0]),
        .m_axi_wvalid(m_axi_wvalid),
        .s_axi_araddr({NLW_inst_s_axi_araddr_UNCONNECTED[31:8],m_axi_araddr}),
        .s_axi_arburst(NLW_inst_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arcache(NLW_inst_s_axi_arcache_UNCONNECTED[3:0]),
        .s_axi_arid(NLW_inst_s_axi_arid_UNCONNECTED[0]),
        .s_axi_arlen({NLW_inst_s_axi_arlen_UNCONNECTED[7:4],m_axi_arlen}),
        .s_axi_arlock(NLW_inst_s_axi_arlock_UNCONNECTED[0]),
        .s_axi_arprot(NLW_inst_s_axi_arprot_UNCONNECTED[2:0]),
        .s_axi_arqos(NLW_inst_s_axi_arqos_UNCONNECTED[3:0]),
        .s_axi_arready(s_axi_arready),
        .s_axi_arsize({NLW_inst_s_axi_arsize_UNCONNECTED[2],m_axi_arsize}),
        .s_axi_aruser(NLW_inst_s_axi_aruser_UNCONNECTED[1023:0]),
        .s_axi_arvalid(\FSM_sequential_r_state_reg[0] ),
        .s_axi_awaddr({NLW_inst_s_axi_awaddr_UNCONNECTED[31:8],m_axi_awaddr}),
        .s_axi_awburst(NLW_inst_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awcache(NLW_inst_s_axi_awcache_UNCONNECTED[3:0]),
        .s_axi_awid(NLW_inst_s_axi_awid_UNCONNECTED[0]),
        .s_axi_awlen(NLW_inst_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awlock(NLW_inst_s_axi_awlock_UNCONNECTED[0]),
        .s_axi_awprot(NLW_inst_s_axi_awprot_UNCONNECTED[2:0]),
        .s_axi_awqos(NLW_inst_s_axi_awqos_UNCONNECTED[3:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awsize({NLW_inst_s_axi_awsize_UNCONNECTED[2],m_axi_awsize[1:0]}),
        .s_axi_awuser(NLW_inst_s_axi_awuser_UNCONNECTED[1023:0]),
        .s_axi_awvalid(\aw_incr_reg[2] ),
        .s_axi_bid(NLW_inst_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(S00_AXI_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_buser(NLW_inst_s_axi_buser_UNCONNECTED[1023:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata({NLW_inst_s_axi_rdata_UNCONNECTED[31:11],s_axi_rdata[10:0]}),
        .s_axi_rid(NLW_inst_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(s_axi_rlast),
        .s_axi_rready(S00_AXI_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_ruser(NLW_inst_s_axi_ruser_UNCONNECTED[1023:0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata({NLW_inst_s_axi_wdata_UNCONNECTED[31:1],S00_AXI_wdata[0]}),
        .s_axi_wlast(S00_AXI_wlast),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(S00_AXI_wstrb),
        .s_axi_wuser(NLW_inst_s_axi_wuser_UNCONNECTED[1023:0]),
        .s_axi_wvalid(s_axi_wready_i_reg));
endmodule

(* ORIG_REF_NAME = "bd_afc3_s00tr_0" *) 
module design_1_axi_smc_0_bd_afc3_s00tr_0
   (s_axi_awready,
    s_axi_bid,
    s_axi_arready,
    s_axi_rid,
    m_axi_awvalid,
    m_axi_arvalid,
    aclk,
    interconnect_aresetn,
    m_axi_awid,
    \gen_id_reg.s_rid_i_reg[0] ,
    S00_AXI_bready,
    m_axi_arid,
    \gen_id_reg.s_single_aready_i_reg ,
    S00_AXI_rready,
    \gen_id_reg.s_rid_i_reg[0]_0 ,
    s_axi_bvalid,
    \gen_id_reg.s_single_aready_i_reg_0 ,
    s_axi_rlast,
    s_axi_rvalid);
  output s_axi_awready;
  output [11:0]s_axi_bid;
  output s_axi_arready;
  output [11:0]s_axi_rid;
  output m_axi_awvalid;
  output m_axi_arvalid;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [11:0]m_axi_awid;
  input \gen_id_reg.s_rid_i_reg[0] ;
  input S00_AXI_bready;
  input [11:0]m_axi_arid;
  input \gen_id_reg.s_single_aready_i_reg ;
  input S00_AXI_rready;
  input \gen_id_reg.s_rid_i_reg[0]_0 ;
  input s_axi_bvalid;
  input \gen_id_reg.s_single_aready_i_reg_0 ;
  input s_axi_rlast;
  input s_axi_rvalid;

  wire S00_AXI_bready;
  wire S00_AXI_rready;
  wire aclk;
  wire \gen_id_reg.s_rid_i_reg[0] ;
  wire \gen_id_reg.s_rid_i_reg[0]_0 ;
  wire \gen_id_reg.s_single_aready_i_reg ;
  wire \gen_id_reg.s_single_aready_i_reg_0 ;
  wire [0:0]interconnect_aresetn;
  wire [11:0]m_axi_arid;
  wire m_axi_arvalid;
  wire [11:0]m_axi_awid;
  wire m_axi_awvalid;
  wire s_axi_arready;
  wire s_axi_awready;
  wire [11:0]s_axi_bid;
  wire s_axi_bvalid;
  wire [11:0]s_axi_rid;
  wire s_axi_rlast;
  wire s_axi_rvalid;
  wire NLW_inst_aclken_UNCONNECTED;
  wire NLW_inst_m_axi_bready_UNCONNECTED;
  wire NLW_inst_m_axi_rready_UNCONNECTED;
  wire NLW_inst_m_axi_wlast_UNCONNECTED;
  wire NLW_inst_m_axi_wready_UNCONNECTED;
  wire NLW_inst_m_axi_wvalid_UNCONNECTED;
  wire NLW_inst_s_axi_bvalid_UNCONNECTED;
  wire NLW_inst_s_axi_rlast_UNCONNECTED;
  wire NLW_inst_s_axi_rvalid_UNCONNECTED;
  wire NLW_inst_s_axi_wlast_UNCONNECTED;
  wire NLW_inst_s_axi_wready_UNCONNECTED;
  wire NLW_inst_s_axi_wvalid_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arqos_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [1023:0]NLW_inst_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awqos_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [1023:0]NLW_inst_m_axi_awuser_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_bid_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_bresp_UNCONNECTED;
  wire [1023:0]NLW_inst_m_axi_buser_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_rid_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_rresp_UNCONNECTED;
  wire [1023:0]NLW_inst_m_axi_ruser_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_wstrb_UNCONNECTED;
  wire [1023:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [0:0]NLW_inst_mep_identifier_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_arcache_UNCONNECTED;
  wire [7:0]NLW_inst_s_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_arqos_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_arsize_UNCONNECTED;
  wire [1023:0]NLW_inst_s_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_awcache_UNCONNECTED;
  wire [7:0]NLW_inst_s_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_awqos_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_awsize_UNCONNECTED;
  wire [1023:0]NLW_inst_s_axi_awuser_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_bresp_UNCONNECTED;
  wire [1023:0]NLW_inst_s_axi_buser_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_rdata_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_rresp_UNCONNECTED;
  wire [1023:0]NLW_inst_s_axi_ruser_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_wstrb_UNCONNECTED;
  wire [1023:0]NLW_inst_s_axi_wuser_UNCONNECTED;

  (* C_ADDR_WIDTH = "32" *) 
  (* C_ENABLE_PIPELINING = "1'b1" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_IS_CASCADED = "0" *) 
  (* C_MEP_IDENTIFIER = "1'b0" *) 
  (* C_MEP_IDENTIFIER_WIDTH = "1" *) 
  (* C_M_ID_WIDTH = "1" *) 
  (* C_NUM_READ_OUTSTANDING = "8" *) 
  (* C_NUM_READ_THREADS = "1" *) 
  (* C_NUM_WRITE_OUTSTANDING = "8" *) 
  (* C_NUM_WRITE_THREADS = "1" *) 
  (* C_RDATA_WIDTH = "32" *) 
  (* C_READ_ACCEPTANCE = "32" *) 
  (* C_SEP_ROUTE_WIDTH = "1" *) 
  (* C_SINGLE_ISSUING = "1" *) 
  (* C_SUPPORTS_READ_DEADLOCK = "0" *) 
  (* C_SUPPORTS_WRITE_DEADLOCK = "0" *) 
  (* C_S_ID_WIDTH = "12" *) 
  (* C_WDATA_WIDTH = "32" *) 
  (* C_WRITE_ACCEPTANCE = "32" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* P_FULLY_PIPELINED = "2" *) 
  (* P_ID_BUFFER_WIDTH = "12" *) 
  (* P_M_THREAD_ID_WIDTH = "1" *) 
  (* P_NUM_READ_OUTSTANDING = "16" *) 
  (* P_NUM_WRITE_OUTSTANDING = "16" *) 
  (* P_R_QUEUE_SIZE = "4" *) 
  (* P_S_ID_WIDTH = "12" *) 
  (* P_W_QUEUE_SIZE = "4" *) 
  (* P_ZERO_LATENCY = "1" *) 
  design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top inst
       (.aclk(aclk),
        .aclken(NLW_inst_aclken_UNCONNECTED),
        .aresetn(interconnect_aresetn),
        .m_axi_araddr(NLW_inst_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_inst_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_inst_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_inst_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_inst_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_inst_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_inst_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(\gen_id_reg.s_single_aready_i_reg_0 ),
        .m_axi_arsize(NLW_inst_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_inst_m_axi_aruser_UNCONNECTED[1023:0]),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awaddr(NLW_inst_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_inst_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_inst_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_inst_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_inst_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_inst_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_inst_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(\gen_id_reg.s_rid_i_reg[0]_0 ),
        .m_axi_awsize(NLW_inst_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_inst_m_axi_awuser_UNCONNECTED[1023:0]),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bid(NLW_inst_m_axi_bid_UNCONNECTED[0]),
        .m_axi_bready(NLW_inst_m_axi_bready_UNCONNECTED),
        .m_axi_bresp(NLW_inst_m_axi_bresp_UNCONNECTED[1:0]),
        .m_axi_buser(NLW_inst_m_axi_buser_UNCONNECTED[1023:0]),
        .m_axi_bvalid(s_axi_bvalid),
        .m_axi_rdata(NLW_inst_m_axi_rdata_UNCONNECTED[31:0]),
        .m_axi_rid(NLW_inst_m_axi_rid_UNCONNECTED[0]),
        .m_axi_rlast(s_axi_rlast),
        .m_axi_rready(NLW_inst_m_axi_rready_UNCONNECTED),
        .m_axi_rresp(NLW_inst_m_axi_rresp_UNCONNECTED[1:0]),
        .m_axi_ruser(NLW_inst_m_axi_ruser_UNCONNECTED[1023:0]),
        .m_axi_rvalid(s_axi_rvalid),
        .m_axi_wdata(NLW_inst_m_axi_wdata_UNCONNECTED[31:0]),
        .m_axi_wlast(NLW_inst_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(NLW_inst_m_axi_wready_UNCONNECTED),
        .m_axi_wstrb(NLW_inst_m_axi_wstrb_UNCONNECTED[3:0]),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[1023:0]),
        .m_axi_wvalid(NLW_inst_m_axi_wvalid_UNCONNECTED),
        .mep_identifier(NLW_inst_mep_identifier_UNCONNECTED[0]),
        .s_axi_araddr(NLW_inst_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_inst_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arcache(NLW_inst_s_axi_arcache_UNCONNECTED[3:0]),
        .s_axi_arid(m_axi_arid),
        .s_axi_arlen(NLW_inst_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arlock(NLW_inst_s_axi_arlock_UNCONNECTED[0]),
        .s_axi_arprot(NLW_inst_s_axi_arprot_UNCONNECTED[2:0]),
        .s_axi_arqos(NLW_inst_s_axi_arqos_UNCONNECTED[3:0]),
        .s_axi_arready(s_axi_arready),
        .s_axi_arsize(NLW_inst_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_aruser(NLW_inst_s_axi_aruser_UNCONNECTED[1023:0]),
        .s_axi_arvalid(\gen_id_reg.s_single_aready_i_reg ),
        .s_axi_awaddr(NLW_inst_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_inst_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awcache(NLW_inst_s_axi_awcache_UNCONNECTED[3:0]),
        .s_axi_awid(m_axi_awid),
        .s_axi_awlen(NLW_inst_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awlock(NLW_inst_s_axi_awlock_UNCONNECTED[0]),
        .s_axi_awprot(NLW_inst_s_axi_awprot_UNCONNECTED[2:0]),
        .s_axi_awqos(NLW_inst_s_axi_awqos_UNCONNECTED[3:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awsize(NLW_inst_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awuser(NLW_inst_s_axi_awuser_UNCONNECTED[1023:0]),
        .s_axi_awvalid(\gen_id_reg.s_rid_i_reg[0] ),
        .s_axi_bid(s_axi_bid),
        .s_axi_bready(S00_AXI_bready),
        .s_axi_bresp(NLW_inst_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_inst_s_axi_buser_UNCONNECTED[1023:0]),
        .s_axi_bvalid(NLW_inst_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_inst_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_rid(s_axi_rid),
        .s_axi_rlast(NLW_inst_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(S00_AXI_rready),
        .s_axi_rresp(NLW_inst_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_inst_s_axi_ruser_UNCONNECTED[1023:0]),
        .s_axi_rvalid(NLW_inst_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata(NLW_inst_s_axi_wdata_UNCONNECTED[31:0]),
        .s_axi_wlast(NLW_inst_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_inst_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_inst_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wuser(NLW_inst_s_axi_wuser_UNCONNECTED[1023:0]),
        .s_axi_wvalid(NLW_inst_s_axi_wvalid_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "bd_afc3_sarn_0" *) 
module design_1_axi_smc_0_bd_afc3_sarn_0
   (M_SC_AR_send,
    aclk,
    interconnect_aresetn,
    S_SC_AR_send);
  output [0:0]M_SC_AR_send;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]S_SC_AR_send;

  wire [0:0]M_SC_AR_send;
  wire [0:0]S_SC_AR_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire NLW_inst_m_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_m_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_m_sc_aclk_UNCONNECTED;
  wire NLW_inst_m_sc_aclken_UNCONNECTED;
  wire NLW_inst_m_sc_aresetn_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_s_sc_aclken_UNCONNECTED;
  wire [15:0]NLW_inst_m_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [140:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_req_UNCONNECTED;
  wire [15:0]NLW_inst_s_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [140:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_req_UNCONNECTED;

  (* C_ACLKEN_CONVERSION = "0" *) 
  (* C_ACLK_RELATIONSHIP = "1" *) 
  (* C_ADDR_WIDTH = "32" *) 
  (* C_ARBITER_MODE = "1" *) 
  (* C_CHANNEL = "2" *) 
  (* C_DISABLE_IP = "0" *) 
  (* C_ENABLE_PIPELINING = "8'b00000001" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_IP = "0" *) 
  (* C_FIFO_OUTPUT_REG = "1" *) 
  (* C_FIFO_SIZE = "5" *) 
  (* C_FIFO_TYPE = "2" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_MAX_PAYLD_BYTES = "4" *) 
  (* C_M_NUM_BYTES_ARRAY = "4" *) 
  (* C_M_PIPELINE = "0" *) 
  (* C_M_SEND_PIPELINE = "1" *) 
  (* C_NUM_MI = "1" *) 
  (* C_NUM_OUTSTANDING = "8" *) 
  (* C_NUM_SI = "1" *) 
  (* C_PAYLD_WIDTH = "141" *) 
  (* C_SC_ROUTE_WIDTH = "4" *) 
  (* C_SYNCHRONIZATION_STAGES = "3" *) 
  (* C_S_LATENCY = "0" *) 
  (* C_S_NUM_BYTES_ARRAY = "4" *) 
  (* C_S_PIPELINE = "0" *) 
  (* C_USER_BITS_PER_BYTE = "0" *) 
  (* C_USER_WIDTH = "0" *) 
  (* LP_ACLK_RELATIONSHIP = "1" *) 
  (* LP_ARBITER_MODE = "1" *) 
  (* LP_DT_REG = "true" *) 
  (* LP_FIFO_OUTPUT_REG = "1" *) 
  (* LP_FIFO_TYPE = "2" *) 
  (* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_LOG_NUM_MI = "1" *) 
  (* LP_LOG_NUM_SI = "1" *) 
  (* LP_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_MAX_NUM_BYTES = "4" *) 
  (* LP_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_M_MAX_NUM_BYTES = "4" *) 
  (* LP_M_MIN_NUM_BYTES = "4" *) 
  (* LP_M_STATIC_DWIDTH = "1" *) 
  (* LP_NODE_ADDR_WIDTH = "32" *) 
  (* LP_NODE_ID_WIDTH = "1" *) 
  (* LP_NODE_ROUTE_WIDTH = "4" *) 
  (* LP_NODE_USER_WIDTH = "0" *) 
  (* LP_SYNCHRONIZATION_STAGES = "2" *) 
  (* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) 
  (* LP_S_MAX_NUM_BYTES = "4" *) 
  (* LP_S_MIN_NUM_BYTES = "4" *) 
  (* LP_S_PIPELINE = "0" *) 
  (* LP_S_STATIC_DWIDTH = "1" *) 
  (* LP_ZERO_ROUTE_WIDTH = "0" *) 
  (* P_NUM_OUTSTANDING = "16" *) 
  design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4 inst
       (.m_axis_arb_tdata(NLW_inst_m_axis_arb_tdata_UNCONNECTED[15:0]),
        .m_axis_arb_tready(NLW_inst_m_axis_arb_tready_UNCONNECTED),
        .m_axis_arb_tvalid(NLW_inst_m_axis_arb_tvalid_UNCONNECTED),
        .m_sc_aclk(NLW_inst_m_sc_aclk_UNCONNECTED),
        .m_sc_aclken(NLW_inst_m_sc_aclken_UNCONNECTED),
        .m_sc_aresetn(NLW_inst_m_sc_aresetn_UNCONNECTED),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[0]),
        .m_sc_payld(NLW_inst_m_sc_payld_UNCONNECTED[140:0]),
        .m_sc_recv(NLW_inst_m_sc_recv_UNCONNECTED[0]),
        .m_sc_req(NLW_inst_m_sc_req_UNCONNECTED[0]),
        .m_sc_send(M_SC_AR_send),
        .s_axis_arb_tdata(NLW_inst_s_axis_arb_tdata_UNCONNECTED[15:0]),
        .s_axis_arb_tready(NLW_inst_s_axis_arb_tready_UNCONNECTED),
        .s_axis_arb_tvalid(NLW_inst_s_axis_arb_tvalid_UNCONNECTED),
        .s_sc_aclk(aclk),
        .s_sc_aclken(NLW_inst_s_sc_aclken_UNCONNECTED),
        .s_sc_aresetn(interconnect_aresetn),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[0]),
        .s_sc_payld(NLW_inst_s_sc_payld_UNCONNECTED[140:0]),
        .s_sc_recv(NLW_inst_s_sc_recv_UNCONNECTED[0]),
        .s_sc_req(NLW_inst_s_sc_req_UNCONNECTED[0]),
        .s_sc_send(S_SC_AR_send));
endmodule

(* ORIG_REF_NAME = "bd_afc3_sawn_0" *) 
module design_1_axi_smc_0_bd_afc3_sawn_0
   (M_SC_AW_send,
    aclk,
    interconnect_aresetn,
    S_SC_AW_send);
  output [0:0]M_SC_AW_send;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]S_SC_AW_send;

  wire [0:0]M_SC_AW_send;
  wire [0:0]S_SC_AW_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire NLW_inst_m_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_m_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_m_sc_aclk_UNCONNECTED;
  wire NLW_inst_m_sc_aclken_UNCONNECTED;
  wire NLW_inst_m_sc_aresetn_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_s_sc_aclken_UNCONNECTED;
  wire [15:0]NLW_inst_m_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [140:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_req_UNCONNECTED;
  wire [15:0]NLW_inst_s_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [140:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_req_UNCONNECTED;

  (* C_ACLKEN_CONVERSION = "0" *) 
  (* C_ACLK_RELATIONSHIP = "1" *) 
  (* C_ADDR_WIDTH = "32" *) 
  (* C_ARBITER_MODE = "1" *) 
  (* C_CHANNEL = "3" *) 
  (* C_DISABLE_IP = "0" *) 
  (* C_ENABLE_PIPELINING = "8'b00000001" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_IP = "0" *) 
  (* C_FIFO_OUTPUT_REG = "1" *) 
  (* C_FIFO_SIZE = "5" *) 
  (* C_FIFO_TYPE = "2" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_MAX_PAYLD_BYTES = "4" *) 
  (* C_M_NUM_BYTES_ARRAY = "4" *) 
  (* C_M_PIPELINE = "0" *) 
  (* C_M_SEND_PIPELINE = "1" *) 
  (* C_NUM_MI = "1" *) 
  (* C_NUM_OUTSTANDING = "8" *) 
  (* C_NUM_SI = "1" *) 
  (* C_PAYLD_WIDTH = "141" *) 
  (* C_SC_ROUTE_WIDTH = "4" *) 
  (* C_SYNCHRONIZATION_STAGES = "3" *) 
  (* C_S_LATENCY = "0" *) 
  (* C_S_NUM_BYTES_ARRAY = "4" *) 
  (* C_S_PIPELINE = "0" *) 
  (* C_USER_BITS_PER_BYTE = "0" *) 
  (* C_USER_WIDTH = "0" *) 
  (* LP_ACLK_RELATIONSHIP = "1" *) 
  (* LP_ARBITER_MODE = "1" *) 
  (* LP_DT_REG = "true" *) 
  (* LP_FIFO_OUTPUT_REG = "1" *) 
  (* LP_FIFO_TYPE = "2" *) 
  (* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_LOG_NUM_MI = "1" *) 
  (* LP_LOG_NUM_SI = "1" *) 
  (* LP_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_MAX_NUM_BYTES = "4" *) 
  (* LP_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_M_MAX_NUM_BYTES = "4" *) 
  (* LP_M_MIN_NUM_BYTES = "4" *) 
  (* LP_M_STATIC_DWIDTH = "1" *) 
  (* LP_NODE_ADDR_WIDTH = "32" *) 
  (* LP_NODE_ID_WIDTH = "1" *) 
  (* LP_NODE_ROUTE_WIDTH = "4" *) 
  (* LP_NODE_USER_WIDTH = "0" *) 
  (* LP_SYNCHRONIZATION_STAGES = "2" *) 
  (* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) 
  (* LP_S_MAX_NUM_BYTES = "4" *) 
  (* LP_S_MIN_NUM_BYTES = "4" *) 
  (* LP_S_PIPELINE = "0" *) 
  (* LP_S_STATIC_DWIDTH = "1" *) 
  (* LP_ZERO_ROUTE_WIDTH = "0" *) 
  (* P_NUM_OUTSTANDING = "16" *) 
  design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5 inst
       (.m_axis_arb_tdata(NLW_inst_m_axis_arb_tdata_UNCONNECTED[15:0]),
        .m_axis_arb_tready(NLW_inst_m_axis_arb_tready_UNCONNECTED),
        .m_axis_arb_tvalid(NLW_inst_m_axis_arb_tvalid_UNCONNECTED),
        .m_sc_aclk(NLW_inst_m_sc_aclk_UNCONNECTED),
        .m_sc_aclken(NLW_inst_m_sc_aclken_UNCONNECTED),
        .m_sc_aresetn(NLW_inst_m_sc_aresetn_UNCONNECTED),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[0]),
        .m_sc_payld(NLW_inst_m_sc_payld_UNCONNECTED[140:0]),
        .m_sc_recv(NLW_inst_m_sc_recv_UNCONNECTED[0]),
        .m_sc_req(NLW_inst_m_sc_req_UNCONNECTED[0]),
        .m_sc_send(M_SC_AW_send),
        .s_axis_arb_tdata(NLW_inst_s_axis_arb_tdata_UNCONNECTED[15:0]),
        .s_axis_arb_tready(NLW_inst_s_axis_arb_tready_UNCONNECTED),
        .s_axis_arb_tvalid(NLW_inst_s_axis_arb_tvalid_UNCONNECTED),
        .s_sc_aclk(aclk),
        .s_sc_aclken(NLW_inst_s_sc_aclken_UNCONNECTED),
        .s_sc_aresetn(interconnect_aresetn),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[0]),
        .s_sc_payld(NLW_inst_s_sc_payld_UNCONNECTED[140:0]),
        .s_sc_recv(NLW_inst_s_sc_recv_UNCONNECTED[0]),
        .s_sc_req(NLW_inst_s_sc_req_UNCONNECTED[0]),
        .s_sc_send(S_SC_AW_send));
endmodule

(* ORIG_REF_NAME = "bd_afc3_sbn_0" *) 
module design_1_axi_smc_0_bd_afc3_sbn_0
   (M_SC_B_send,
    aclk,
    interconnect_aresetn,
    \s_axi_bresp_i_reg[1] );
  output [0:0]M_SC_B_send;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]\s_axi_bresp_i_reg[1] ;

  wire [0:0]M_SC_B_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire [0:0]\s_axi_bresp_i_reg[1] ;
  wire NLW_inst_m_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_m_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_m_sc_aclk_UNCONNECTED;
  wire NLW_inst_m_sc_aclken_UNCONNECTED;
  wire NLW_inst_m_sc_aresetn_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_s_sc_aclken_UNCONNECTED;
  wire [15:0]NLW_inst_m_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [6:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_req_UNCONNECTED;
  wire [15:0]NLW_inst_s_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [6:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_req_UNCONNECTED;

  (* C_ACLKEN_CONVERSION = "0" *) 
  (* C_ACLK_RELATIONSHIP = "1" *) 
  (* C_ADDR_WIDTH = "32" *) 
  (* C_ARBITER_MODE = "1" *) 
  (* C_CHANNEL = "4" *) 
  (* C_DISABLE_IP = "0" *) 
  (* C_ENABLE_PIPELINING = "8'b00000001" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_IP = "0" *) 
  (* C_FIFO_OUTPUT_REG = "1" *) 
  (* C_FIFO_SIZE = "5" *) 
  (* C_FIFO_TYPE = "2" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_MAX_PAYLD_BYTES = "4" *) 
  (* C_M_NUM_BYTES_ARRAY = "4" *) 
  (* C_M_PIPELINE = "0" *) 
  (* C_M_SEND_PIPELINE = "0" *) 
  (* C_NUM_MI = "1" *) 
  (* C_NUM_OUTSTANDING = "8" *) 
  (* C_NUM_SI = "1" *) 
  (* C_PAYLD_WIDTH = "7" *) 
  (* C_SC_ROUTE_WIDTH = "3" *) 
  (* C_SYNCHRONIZATION_STAGES = "3" *) 
  (* C_S_LATENCY = "0" *) 
  (* C_S_NUM_BYTES_ARRAY = "4" *) 
  (* C_S_PIPELINE = "0" *) 
  (* C_USER_BITS_PER_BYTE = "0" *) 
  (* C_USER_WIDTH = "0" *) 
  (* LP_ACLK_RELATIONSHIP = "1" *) 
  (* LP_ARBITER_MODE = "1" *) 
  (* LP_DT_REG = "true" *) 
  (* LP_FIFO_OUTPUT_REG = "1" *) 
  (* LP_FIFO_TYPE = "2" *) 
  (* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_LOG_NUM_MI = "1" *) 
  (* LP_LOG_NUM_SI = "1" *) 
  (* LP_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_MAX_NUM_BYTES = "4" *) 
  (* LP_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_M_MAX_NUM_BYTES = "4" *) 
  (* LP_M_MIN_NUM_BYTES = "4" *) 
  (* LP_M_STATIC_DWIDTH = "1" *) 
  (* LP_NODE_ADDR_WIDTH = "32" *) 
  (* LP_NODE_ID_WIDTH = "1" *) 
  (* LP_NODE_ROUTE_WIDTH = "3" *) 
  (* LP_NODE_USER_WIDTH = "0" *) 
  (* LP_SYNCHRONIZATION_STAGES = "2" *) 
  (* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) 
  (* LP_S_MAX_NUM_BYTES = "4" *) 
  (* LP_S_MIN_NUM_BYTES = "4" *) 
  (* LP_S_PIPELINE = "0" *) 
  (* LP_S_STATIC_DWIDTH = "1" *) 
  (* LP_ZERO_ROUTE_WIDTH = "0" *) 
  (* P_NUM_OUTSTANDING = "16" *) 
  design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6 inst
       (.m_axis_arb_tdata(NLW_inst_m_axis_arb_tdata_UNCONNECTED[15:0]),
        .m_axis_arb_tready(NLW_inst_m_axis_arb_tready_UNCONNECTED),
        .m_axis_arb_tvalid(NLW_inst_m_axis_arb_tvalid_UNCONNECTED),
        .m_sc_aclk(NLW_inst_m_sc_aclk_UNCONNECTED),
        .m_sc_aclken(NLW_inst_m_sc_aclken_UNCONNECTED),
        .m_sc_aresetn(NLW_inst_m_sc_aresetn_UNCONNECTED),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[0]),
        .m_sc_payld(NLW_inst_m_sc_payld_UNCONNECTED[6:0]),
        .m_sc_recv(NLW_inst_m_sc_recv_UNCONNECTED[0]),
        .m_sc_req(NLW_inst_m_sc_req_UNCONNECTED[0]),
        .m_sc_send(M_SC_B_send),
        .s_axis_arb_tdata(NLW_inst_s_axis_arb_tdata_UNCONNECTED[15:0]),
        .s_axis_arb_tready(NLW_inst_s_axis_arb_tready_UNCONNECTED),
        .s_axis_arb_tvalid(NLW_inst_s_axis_arb_tvalid_UNCONNECTED),
        .s_sc_aclk(aclk),
        .s_sc_aclken(NLW_inst_s_sc_aclken_UNCONNECTED),
        .s_sc_aresetn(interconnect_aresetn),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[0]),
        .s_sc_payld(NLW_inst_s_sc_payld_UNCONNECTED[6:0]),
        .s_sc_recv(NLW_inst_s_sc_recv_UNCONNECTED[0]),
        .s_sc_req(NLW_inst_s_sc_req_UNCONNECTED[0]),
        .s_sc_send(\s_axi_bresp_i_reg[1] ));
endmodule

(* ORIG_REF_NAME = "bd_afc3_srn_0" *) 
module design_1_axi_smc_0_bd_afc3_srn_0
   (M_SC_R_send,
    aclk,
    interconnect_aresetn,
    \FSM_sequential_r_state_reg[0] );
  output [0:0]M_SC_R_send;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]\FSM_sequential_r_state_reg[0] ;

  wire [0:0]\FSM_sequential_r_state_reg[0] ;
  wire [0:0]M_SC_R_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire NLW_inst_m_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_m_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_m_sc_aclk_UNCONNECTED;
  wire NLW_inst_m_sc_aclken_UNCONNECTED;
  wire NLW_inst_m_sc_aresetn_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_s_sc_aclken_UNCONNECTED;
  wire [15:0]NLW_inst_m_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [52:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_req_UNCONNECTED;
  wire [15:0]NLW_inst_s_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [52:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_req_UNCONNECTED;

  (* C_ACLKEN_CONVERSION = "0" *) 
  (* C_ACLK_RELATIONSHIP = "1" *) 
  (* C_ADDR_WIDTH = "32" *) 
  (* C_ARBITER_MODE = "1" *) 
  (* C_CHANNEL = "0" *) 
  (* C_DISABLE_IP = "0" *) 
  (* C_ENABLE_PIPELINING = "8'b00000001" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_IP = "0" *) 
  (* C_FIFO_OUTPUT_REG = "1" *) 
  (* C_FIFO_SIZE = "5" *) 
  (* C_FIFO_TYPE = "2" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_MAX_PAYLD_BYTES = "4" *) 
  (* C_M_NUM_BYTES_ARRAY = "4" *) 
  (* C_M_PIPELINE = "0" *) 
  (* C_M_SEND_PIPELINE = "0" *) 
  (* C_NUM_MI = "1" *) 
  (* C_NUM_OUTSTANDING = "8" *) 
  (* C_NUM_SI = "1" *) 
  (* C_PAYLD_WIDTH = "53" *) 
  (* C_SC_ROUTE_WIDTH = "3" *) 
  (* C_SYNCHRONIZATION_STAGES = "3" *) 
  (* C_S_LATENCY = "0" *) 
  (* C_S_NUM_BYTES_ARRAY = "4" *) 
  (* C_S_PIPELINE = "0" *) 
  (* C_USER_BITS_PER_BYTE = "0" *) 
  (* C_USER_WIDTH = "512" *) 
  (* LP_ACLK_RELATIONSHIP = "1" *) 
  (* LP_ARBITER_MODE = "1" *) 
  (* LP_DT_REG = "true" *) 
  (* LP_FIFO_OUTPUT_REG = "1" *) 
  (* LP_FIFO_TYPE = "2" *) 
  (* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_LOG_NUM_MI = "1" *) 
  (* LP_LOG_NUM_SI = "1" *) 
  (* LP_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_MAX_NUM_BYTES = "4" *) 
  (* LP_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_M_MAX_NUM_BYTES = "4" *) 
  (* LP_M_MIN_NUM_BYTES = "4" *) 
  (* LP_M_STATIC_DWIDTH = "1" *) 
  (* LP_NODE_ADDR_WIDTH = "32" *) 
  (* LP_NODE_ID_WIDTH = "1" *) 
  (* LP_NODE_ROUTE_WIDTH = "3" *) 
  (* LP_NODE_USER_WIDTH = "1" *) 
  (* LP_SYNCHRONIZATION_STAGES = "2" *) 
  (* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) 
  (* LP_S_MAX_NUM_BYTES = "4" *) 
  (* LP_S_MIN_NUM_BYTES = "4" *) 
  (* LP_S_PIPELINE = "0" *) 
  (* LP_S_STATIC_DWIDTH = "1" *) 
  (* LP_ZERO_ROUTE_WIDTH = "0" *) 
  (* P_NUM_OUTSTANDING = "16" *) 
  design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7 inst
       (.m_axis_arb_tdata(NLW_inst_m_axis_arb_tdata_UNCONNECTED[15:0]),
        .m_axis_arb_tready(NLW_inst_m_axis_arb_tready_UNCONNECTED),
        .m_axis_arb_tvalid(NLW_inst_m_axis_arb_tvalid_UNCONNECTED),
        .m_sc_aclk(NLW_inst_m_sc_aclk_UNCONNECTED),
        .m_sc_aclken(NLW_inst_m_sc_aclken_UNCONNECTED),
        .m_sc_aresetn(NLW_inst_m_sc_aresetn_UNCONNECTED),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[0]),
        .m_sc_payld(NLW_inst_m_sc_payld_UNCONNECTED[52:0]),
        .m_sc_recv(NLW_inst_m_sc_recv_UNCONNECTED[0]),
        .m_sc_req(NLW_inst_m_sc_req_UNCONNECTED[0]),
        .m_sc_send(M_SC_R_send),
        .s_axis_arb_tdata(NLW_inst_s_axis_arb_tdata_UNCONNECTED[15:0]),
        .s_axis_arb_tready(NLW_inst_s_axis_arb_tready_UNCONNECTED),
        .s_axis_arb_tvalid(NLW_inst_s_axis_arb_tvalid_UNCONNECTED),
        .s_sc_aclk(aclk),
        .s_sc_aclken(NLW_inst_s_sc_aclken_UNCONNECTED),
        .s_sc_aresetn(interconnect_aresetn),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[0]),
        .s_sc_payld(NLW_inst_s_sc_payld_UNCONNECTED[52:0]),
        .s_sc_recv(NLW_inst_s_sc_recv_UNCONNECTED[0]),
        .s_sc_req(NLW_inst_s_sc_req_UNCONNECTED[0]),
        .s_sc_send(\FSM_sequential_r_state_reg[0] ));
endmodule

(* ORIG_REF_NAME = "bd_afc3_swn_0" *) 
module design_1_axi_smc_0_bd_afc3_swn_0
   (M_SC_W_send,
    aclk,
    interconnect_aresetn,
    S_SC_W_send);
  output [0:0]M_SC_W_send;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]S_SC_W_send;

  wire [0:0]M_SC_W_send;
  wire [0:0]S_SC_W_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire NLW_inst_m_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_m_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_m_sc_aclk_UNCONNECTED;
  wire NLW_inst_m_sc_aclken_UNCONNECTED;
  wire NLW_inst_m_sc_aresetn_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_s_sc_aclken_UNCONNECTED;
  wire [15:0]NLW_inst_m_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [54:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_req_UNCONNECTED;
  wire [15:0]NLW_inst_s_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [54:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_recv_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_req_UNCONNECTED;

  (* C_ACLKEN_CONVERSION = "0" *) 
  (* C_ACLK_RELATIONSHIP = "1" *) 
  (* C_ADDR_WIDTH = "32" *) 
  (* C_ARBITER_MODE = "1" *) 
  (* C_CHANNEL = "1" *) 
  (* C_DISABLE_IP = "0" *) 
  (* C_ENABLE_PIPELINING = "8'b00000001" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_IP = "0" *) 
  (* C_FIFO_OUTPUT_REG = "1" *) 
  (* C_FIFO_SIZE = "5" *) 
  (* C_FIFO_TYPE = "2" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_MAX_PAYLD_BYTES = "4" *) 
  (* C_M_NUM_BYTES_ARRAY = "4" *) 
  (* C_M_PIPELINE = "0" *) 
  (* C_M_SEND_PIPELINE = "1" *) 
  (* C_NUM_MI = "1" *) 
  (* C_NUM_OUTSTANDING = "8" *) 
  (* C_NUM_SI = "1" *) 
  (* C_PAYLD_WIDTH = "55" *) 
  (* C_SC_ROUTE_WIDTH = "4" *) 
  (* C_SYNCHRONIZATION_STAGES = "3" *) 
  (* C_S_LATENCY = "0" *) 
  (* C_S_NUM_BYTES_ARRAY = "4" *) 
  (* C_S_PIPELINE = "0" *) 
  (* C_USER_BITS_PER_BYTE = "0" *) 
  (* C_USER_WIDTH = "512" *) 
  (* LP_ACLK_RELATIONSHIP = "1" *) 
  (* LP_ARBITER_MODE = "2" *) 
  (* LP_DT_REG = "true" *) 
  (* LP_FIFO_OUTPUT_REG = "1" *) 
  (* LP_FIFO_TYPE = "2" *) 
  (* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_LOG_NUM_MI = "1" *) 
  (* LP_LOG_NUM_SI = "1" *) 
  (* LP_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_MAX_NUM_BYTES = "4" *) 
  (* LP_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_M_MAX_NUM_BYTES = "4" *) 
  (* LP_M_MIN_NUM_BYTES = "4" *) 
  (* LP_M_STATIC_DWIDTH = "1" *) 
  (* LP_NODE_ADDR_WIDTH = "32" *) 
  (* LP_NODE_ID_WIDTH = "1" *) 
  (* LP_NODE_ROUTE_WIDTH = "4" *) 
  (* LP_NODE_USER_WIDTH = "1" *) 
  (* LP_SYNCHRONIZATION_STAGES = "2" *) 
  (* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) 
  (* LP_S_MAX_NUM_BYTES = "4" *) 
  (* LP_S_MIN_NUM_BYTES = "4" *) 
  (* LP_S_PIPELINE = "0" *) 
  (* LP_S_STATIC_DWIDTH = "1" *) 
  (* LP_ZERO_ROUTE_WIDTH = "0" *) 
  (* P_NUM_OUTSTANDING = "16" *) 
  design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8 inst
       (.m_axis_arb_tdata(NLW_inst_m_axis_arb_tdata_UNCONNECTED[15:0]),
        .m_axis_arb_tready(NLW_inst_m_axis_arb_tready_UNCONNECTED),
        .m_axis_arb_tvalid(NLW_inst_m_axis_arb_tvalid_UNCONNECTED),
        .m_sc_aclk(NLW_inst_m_sc_aclk_UNCONNECTED),
        .m_sc_aclken(NLW_inst_m_sc_aclken_UNCONNECTED),
        .m_sc_aresetn(NLW_inst_m_sc_aresetn_UNCONNECTED),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[0]),
        .m_sc_payld(NLW_inst_m_sc_payld_UNCONNECTED[54:0]),
        .m_sc_recv(NLW_inst_m_sc_recv_UNCONNECTED[0]),
        .m_sc_req(NLW_inst_m_sc_req_UNCONNECTED[0]),
        .m_sc_send(M_SC_W_send),
        .s_axis_arb_tdata(NLW_inst_s_axis_arb_tdata_UNCONNECTED[15:0]),
        .s_axis_arb_tready(NLW_inst_s_axis_arb_tready_UNCONNECTED),
        .s_axis_arb_tvalid(NLW_inst_s_axis_arb_tvalid_UNCONNECTED),
        .s_sc_aclk(aclk),
        .s_sc_aclken(NLW_inst_s_sc_aclken_UNCONNECTED),
        .s_sc_aresetn(interconnect_aresetn),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[0]),
        .s_sc_payld(NLW_inst_s_sc_payld_UNCONNECTED[54:0]),
        .s_sc_recv(NLW_inst_s_sc_recv_UNCONNECTED[0]),
        .s_sc_req(NLW_inst_s_sc_req_UNCONNECTED[0]),
        .s_sc_send(S_SC_W_send));
endmodule

(* ORIG_REF_NAME = "bd_afc3_wni_0" *) 
module design_1_axi_smc_0_bd_afc3_wni_0
   (S_SC_W_recv,
    M_SC_W_send,
    M_SC_W_payld,
    aclk,
    interconnect_aresetn,
    S_SC_W_send,
    S_SC_W_payld,
    M_SC_W_recv);
  output [0:0]S_SC_W_recv;
  output [0:0]M_SC_W_send;
  output [35:0]M_SC_W_payld;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]S_SC_W_send;
  input [36:0]S_SC_W_payld;
  input [0:0]M_SC_W_recv;

  wire [35:0]M_SC_W_payld;
  wire [0:0]M_SC_W_recv;
  wire [0:0]M_SC_W_send;
  wire [36:0]S_SC_W_payld;
  wire [0:0]S_SC_W_recv;
  wire [0:0]S_SC_W_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire NLW_inst_m_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_m_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_m_sc_aclk_UNCONNECTED;
  wire NLW_inst_m_sc_aclken_UNCONNECTED;
  wire NLW_inst_m_sc_aresetn_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tready_UNCONNECTED;
  wire NLW_inst_s_axis_arb_tvalid_UNCONNECTED;
  wire NLW_inst_s_sc_aclken_UNCONNECTED;
  wire [15:0]NLW_inst_m_axis_arb_tdata_UNCONNECTED;
  wire [1:0]NLW_inst_m_sc_info_UNCONNECTED;
  wire [54:0]NLW_inst_m_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_recv_UNCONNECTED;
  wire [1:0]NLW_inst_m_sc_req_UNCONNECTED;
  wire [0:0]NLW_inst_m_sc_send_UNCONNECTED;
  wire [15:0]NLW_inst_s_axis_arb_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_info_UNCONNECTED;
  wire [54:0]NLW_inst_s_sc_payld_UNCONNECTED;
  wire [0:0]NLW_inst_s_sc_req_UNCONNECTED;

  (* C_ACLKEN_CONVERSION = "0" *) 
  (* C_ACLK_RELATIONSHIP = "1" *) 
  (* C_ADDR_WIDTH = "32" *) 
  (* C_ARBITER_MODE = "1" *) 
  (* C_CHANNEL = "1" *) 
  (* C_DISABLE_IP = "0" *) 
  (* C_ENABLE_PIPELINING = "8'b00000001" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_IP = "0" *) 
  (* C_FIFO_OUTPUT_REG = "1" *) 
  (* C_FIFO_SIZE = "0" *) 
  (* C_FIFO_TYPE = "0" *) 
  (* C_ID_WIDTH = "1" *) 
  (* C_MAX_PAYLD_BYTES = "4" *) 
  (* C_M_NUM_BYTES_ARRAY = "64'b0000000000000000000000000000010000000000000000000000000000000100" *) 
  (* C_M_PIPELINE = "0" *) 
  (* C_M_SEND_PIPELINE = "0" *) 
  (* C_NUM_MI = "2" *) 
  (* C_NUM_OUTSTANDING = "8" *) 
  (* C_NUM_SI = "1" *) 
  (* C_PAYLD_WIDTH = "55" *) 
  (* C_SC_ROUTE_WIDTH = "4" *) 
  (* C_SYNCHRONIZATION_STAGES = "3" *) 
  (* C_S_LATENCY = "0" *) 
  (* C_S_NUM_BYTES_ARRAY = "4" *) 
  (* C_S_PIPELINE = "0" *) 
  (* C_USER_BITS_PER_BYTE = "0" *) 
  (* C_USER_WIDTH = "512" *) 
  (* LP_ACLK_RELATIONSHIP = "1" *) 
  (* LP_ARBITER_MODE = "2" *) 
  (* LP_DT_REG = "true" *) 
  (* LP_FIFO_OUTPUT_REG = "1" *) 
  (* LP_FIFO_TYPE = "0" *) 
  (* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_LOG_NUM_MI = "1" *) 
  (* LP_LOG_NUM_SI = "1" *) 
  (* LP_MAX_DOWNSIZER_RATIO = "1" *) 
  (* LP_MAX_NUM_BYTES = "4" *) 
  (* LP_MAX_UPSIZER_RATIO = "1" *) 
  (* LP_M_MAX_NUM_BYTES = "4" *) 
  (* LP_M_MIN_NUM_BYTES = "4" *) 
  (* LP_M_STATIC_DWIDTH = "1" *) 
  (* LP_NODE_ADDR_WIDTH = "32" *) 
  (* LP_NODE_ID_WIDTH = "1" *) 
  (* LP_NODE_ROUTE_WIDTH = "4" *) 
  (* LP_NODE_USER_WIDTH = "1" *) 
  (* LP_SYNCHRONIZATION_STAGES = "2" *) 
  (* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) 
  (* LP_S_MAX_NUM_BYTES = "4" *) 
  (* LP_S_MIN_NUM_BYTES = "4" *) 
  (* LP_S_PIPELINE = "0" *) 
  (* LP_S_STATIC_DWIDTH = "1" *) 
  (* LP_ZERO_ROUTE_WIDTH = "0" *) 
  (* P_NUM_OUTSTANDING = "16" *) 
  design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13 inst
       (.m_axis_arb_tdata(NLW_inst_m_axis_arb_tdata_UNCONNECTED[15:0]),
        .m_axis_arb_tready(NLW_inst_m_axis_arb_tready_UNCONNECTED),
        .m_axis_arb_tvalid(NLW_inst_m_axis_arb_tvalid_UNCONNECTED),
        .m_sc_aclk(NLW_inst_m_sc_aclk_UNCONNECTED),
        .m_sc_aclken(NLW_inst_m_sc_aclken_UNCONNECTED),
        .m_sc_aresetn(NLW_inst_m_sc_aresetn_UNCONNECTED),
        .m_sc_info(NLW_inst_m_sc_info_UNCONNECTED[1:0]),
        .m_sc_payld({NLW_inst_m_sc_payld_UNCONNECTED[54:21],M_SC_W_payld[1],NLW_inst_m_sc_payld_UNCONNECTED[19:0]}),
        .m_sc_recv({M_SC_W_recv,NLW_inst_m_sc_recv_UNCONNECTED[0]}),
        .m_sc_req(NLW_inst_m_sc_req_UNCONNECTED[1:0]),
        .m_sc_send({M_SC_W_send,NLW_inst_m_sc_send_UNCONNECTED[0]}),
        .s_axis_arb_tdata(NLW_inst_s_axis_arb_tdata_UNCONNECTED[15:0]),
        .s_axis_arb_tready(NLW_inst_s_axis_arb_tready_UNCONNECTED),
        .s_axis_arb_tvalid(NLW_inst_s_axis_arb_tvalid_UNCONNECTED),
        .s_sc_aclk(aclk),
        .s_sc_aclken(NLW_inst_s_sc_aclken_UNCONNECTED),
        .s_sc_aresetn(interconnect_aresetn),
        .s_sc_info(NLW_inst_s_sc_info_UNCONNECTED[0]),
        .s_sc_payld({NLW_inst_s_sc_payld_UNCONNECTED[54:21],S_SC_W_payld[2],NLW_inst_s_sc_payld_UNCONNECTED[19:2],S_SC_W_payld[0],NLW_inst_s_sc_payld_UNCONNECTED[0]}),
        .s_sc_recv(S_SC_W_recv),
        .s_sc_req(NLW_inst_s_sc_req_UNCONNECTED[0]),
        .s_sc_send(S_SC_W_send));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module design_1_axi_smc_0_cdc_sync
   (scndry_out,
    aresetn,
    aclk);
  output scndry_out;
  input aresetn;
  input aclk;

  wire aclk;
  wire aresetn;
  wire asr_d1;
  wire s_level_out_d1_cdc_to;
  wire s_level_out_d2;
  wire s_level_out_d3;
  wire scndry_out;

  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to 
       (.C(aclk),
        .CE(1'b1),
        .D(asr_d1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to_i_1 
       (.I0(aresetn),
        .O(asr_d1));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 
       (.C(aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 
       (.C(aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 
       (.C(aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(scndry_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "clk_map_imp_5Y9LOC" *) 
module design_1_axi_smc_0_clk_map_imp_5Y9LOC
   (interconnect_aresetn,
    aclk,
    aresetn);
  output [0:0]interconnect_aresetn;
  input aclk;
  input aresetn;

  wire aclk;
  wire aresetn;
  wire [0:0]interconnect_aresetn;

  design_1_axi_smc_0_bd_afc3_psr_aclk_0 psr_aclk
       (.aclk(aclk),
        .aresetn(aresetn),
        .interconnect_aresetn(interconnect_aresetn));
endmodule

(* ORIG_REF_NAME = "i_nodes_imp_1MZRIMQ" *) 
module design_1_axi_smc_0_i_nodes_imp_1MZRIMQ
   (S_SC_AR_recv,
    M_SC_AR_send,
    M_SC_AR_payld,
    S_SC_AW_recv,
    M_SC_AW_send,
    M_SC_AW_payld,
    M01_AXI_bready,
    M_SC_B_send,
    M_SC_B_payld,
    M01_AXI_rready,
    M_SC_R_send,
    M_SC_R_payld,
    S_SC_W_recv,
    M_SC_W_send,
    M_SC_W_payld,
    aclk,
    interconnect_aresetn,
    S_SC_AR_send,
    S_SC_AR_payld,
    M_SC_AR_recv,
    S_SC_AW_send,
    S_SC_AW_payld,
    M_SC_AW_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_B_payld,
    M_SC_B_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_R_payld,
    M_SC_R_recv,
    S_SC_W_send,
    S_SC_W_payld,
    M_SC_W_recv);
  output [0:0]S_SC_AR_recv;
  output [0:0]M_SC_AR_send;
  output [10:0]M_SC_AR_payld;
  output [0:0]S_SC_AW_recv;
  output [0:0]M_SC_AW_send;
  output [10:0]M_SC_AW_payld;
  output M01_AXI_bready;
  output [0:0]M_SC_B_send;
  output [1:0]M_SC_B_payld;
  output M01_AXI_rready;
  output [0:0]M_SC_R_send;
  output [33:0]M_SC_R_payld;
  output [0:0]S_SC_W_recv;
  output [0:0]M_SC_W_send;
  output [35:0]M_SC_W_payld;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]S_SC_AR_send;
  input [11:0]S_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  input [0:0]S_SC_AW_send;
  input [10:0]S_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [1:0]S_SC_B_payld;
  input [0:0]M_SC_B_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [33:0]S_SC_R_payld;
  input [0:0]M_SC_R_recv;
  input [0:0]S_SC_W_send;
  input [36:0]S_SC_W_payld;
  input [0:0]M_SC_W_recv;

  wire M01_AXI_bready;
  wire M01_AXI_rready;
  wire [10:0]M_SC_AR_payld;
  wire [0:0]M_SC_AR_recv;
  wire [0:0]M_SC_AR_send;
  wire [10:0]M_SC_AW_payld;
  wire [0:0]M_SC_AW_recv;
  wire [0:0]M_SC_AW_send;
  wire [1:0]M_SC_B_payld;
  wire [0:0]M_SC_B_recv;
  wire [0:0]M_SC_B_send;
  wire [33:0]M_SC_R_payld;
  wire [0:0]M_SC_R_recv;
  wire [0:0]M_SC_R_send;
  wire [35:0]M_SC_W_payld;
  wire [0:0]M_SC_W_recv;
  wire [0:0]M_SC_W_send;
  wire [11:0]S_SC_AR_payld;
  wire [0:0]S_SC_AR_recv;
  wire [0:0]S_SC_AR_send;
  wire [10:0]S_SC_AW_payld;
  wire [0:0]S_SC_AW_recv;
  wire [0:0]S_SC_AW_send;
  wire [0:0]S_SC_B_req;
  wire [0:0]S_SC_B_send;
  wire [33:0]S_SC_R_payld;
  wire [0:0]S_SC_R_req;
  wire [0:0]S_SC_R_send;
  wire [36:0]S_SC_W_payld;
  wire [0:0]S_SC_W_recv;
  wire [0:0]S_SC_W_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire [10:0]NLW_i_ar_node_M_SC_AR_payld_UNCONNECTED;
  wire [11:1]NLW_i_ar_node_S_SC_AR_payld_UNCONNECTED;
  wire [10:0]NLW_i_aw_node_M_SC_AW_payld_UNCONNECTED;
  wire [10:0]NLW_i_aw_node_S_SC_AW_payld_UNCONNECTED;
  wire [1:0]NLW_i_b_node_S_SC_B_payld_UNCONNECTED;
  wire [33:0]NLW_i_r_node_M_SC_R_payld_UNCONNECTED;
  wire [33:0]NLW_i_r_node_S_SC_R_payld_UNCONNECTED;
  wire [35:0]NLW_i_w_node_M_SC_W_payld_UNCONNECTED;
  wire [36:1]NLW_i_w_node_S_SC_W_payld_UNCONNECTED;

  (* x_core_info = "sc_node_v1_0_10_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_arni_0 i_ar_node
       (.M_SC_AR_payld({NLW_i_ar_node_M_SC_AR_payld_UNCONNECTED[10:8],M_SC_AR_payld[7:2],NLW_i_ar_node_M_SC_AR_payld_UNCONNECTED[1:0]}),
        .M_SC_AR_recv(M_SC_AR_recv),
        .M_SC_AR_send(M_SC_AR_send),
        .S_SC_AR_payld({NLW_i_ar_node_S_SC_AR_payld_UNCONNECTED[11:9],S_SC_AR_payld[8:3],NLW_i_ar_node_S_SC_AR_payld_UNCONNECTED[2:1],S_SC_AR_payld[0]}),
        .S_SC_AR_recv(S_SC_AR_recv),
        .S_SC_AR_send(S_SC_AR_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
  (* x_core_info = "sc_node_v1_0_10_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_awni_0 i_aw_node
       (.M_SC_AW_payld({NLW_i_aw_node_M_SC_AW_payld_UNCONNECTED[10:8],M_SC_AW_payld[7:2],NLW_i_aw_node_M_SC_AW_payld_UNCONNECTED[1:0]}),
        .M_SC_AW_recv(M_SC_AW_recv),
        .M_SC_AW_send(M_SC_AW_send),
        .S_SC_AW_payld({NLW_i_aw_node_S_SC_AW_payld_UNCONNECTED[10:8],S_SC_AW_payld[7:2],NLW_i_aw_node_S_SC_AW_payld_UNCONNECTED[1:0]}),
        .S_SC_AW_recv(S_SC_AW_recv),
        .S_SC_AW_send(S_SC_AW_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
  (* x_core_info = "sc_node_v1_0_10_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_bni_0 i_b_node
       (.M01_AXI_bready(M01_AXI_bready),
        .M_SC_B_payld(M_SC_B_payld),
        .M_SC_B_recv(M_SC_B_recv),
        .M_SC_B_send(M_SC_B_send),
        .S_SC_B_payld(NLW_i_b_node_S_SC_B_payld_UNCONNECTED[1:0]),
        .S_SC_B_req(S_SC_B_req),
        .S_SC_B_send(S_SC_B_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
  (* x_core_info = "sc_node_v1_0_10_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_rni_0 i_r_node
       (.M01_AXI_rready(M01_AXI_rready),
        .M_SC_R_payld({NLW_i_r_node_M_SC_R_payld_UNCONNECTED[33:13],M_SC_R_payld[12:2],NLW_i_r_node_M_SC_R_payld_UNCONNECTED[1:0]}),
        .M_SC_R_recv(M_SC_R_recv),
        .M_SC_R_send(M_SC_R_send),
        .S_SC_R_payld({NLW_i_r_node_S_SC_R_payld_UNCONNECTED[33:13],S_SC_R_payld[12:2],NLW_i_r_node_S_SC_R_payld_UNCONNECTED[1:0]}),
        .S_SC_R_req(S_SC_R_req),
        .S_SC_R_send(S_SC_R_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
  (* x_core_info = "sc_node_v1_0_10_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_wni_0 i_w_node
       (.M_SC_W_payld({NLW_i_w_node_M_SC_W_payld_UNCONNECTED[35:2],M_SC_W_payld[1],NLW_i_w_node_M_SC_W_payld_UNCONNECTED[0]}),
        .M_SC_W_recv(M_SC_W_recv),
        .M_SC_W_send(M_SC_W_send),
        .S_SC_W_payld({NLW_i_w_node_S_SC_W_payld_UNCONNECTED[36:3],S_SC_W_payld[2],NLW_i_w_node_S_SC_W_payld_UNCONNECTED[1],S_SC_W_payld[0]}),
        .S_SC_W_recv(S_SC_W_recv),
        .S_SC_W_send(S_SC_W_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
endmodule

(* ORIG_REF_NAME = "lpf" *) 
module design_1_axi_smc_0_lpf
   (lpf_int,
    aclk,
    aresetn);
  output lpf_int;
  input aclk;
  input aresetn;

  wire Q;
  wire aclk;
  wire aresetn;
  wire lpf_asr;
  wire lpf_int;
  wire lpf_int0;
  wire p_0_in;

  design_1_axi_smc_0_cdc_sync \ACTIVE_LOW_AUX.ACT_LO_AUX 
       (.aclk(aclk),
        .aresetn(aresetn),
        .scndry_out(p_0_in));
  (* XILINX_LEGACY_PRIM = "SRL16" *) 
  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "inst/\clk_map/psr_aclk/U0/EXT_LPF/POR_SRL_I " *) 
  SRL16E #(
    .INIT(16'hFFFF)) 
    POR_SRL_I
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(aclk),
        .D(1'b0),
        .Q(Q));
  FDRE #(
    .INIT(1'b0)) 
    lpf_asr_reg
       (.C(aclk),
        .CE(1'b1),
        .D(p_0_in),
        .Q(lpf_asr),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    lpf_int_i_1
       (.I0(Q),
        .I1(lpf_asr),
        .O(lpf_int0));
  FDRE #(
    .INIT(1'b0)) 
    lpf_int_reg
       (.C(aclk),
        .CE(1'b1),
        .D(lpf_int0),
        .Q(lpf_int),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "m01_exit_pipeline_imp_1XMPFJB" *) 
module design_1_axi_smc_0_m01_exit_pipeline_imp_1XMPFJB
   (M_SC_AW_recv,
    M_SC_W_recv,
    M_SC_AR_recv,
    M01_AXI_awvalid,
    M01_AXI_wvalid,
    M01_AXI_arvalid,
    aclk,
    interconnect_aresetn,
    M_SC_AW_send,
    M_SC_W_send,
    M01_AXI_bready,
    M_SC_AR_send,
    M01_AXI_rready,
    M01_AXI_awready,
    M01_AXI_wready,
    M01_AXI_bvalid,
    M01_AXI_arready,
    M01_AXI_rvalid);
  output [0:0]M_SC_AW_recv;
  output [0:0]M_SC_W_recv;
  output [0:0]M_SC_AR_recv;
  output M01_AXI_awvalid;
  output M01_AXI_wvalid;
  output M01_AXI_arvalid;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]M_SC_AW_send;
  input [0:0]M_SC_W_send;
  input M01_AXI_bready;
  input [0:0]M_SC_AR_send;
  input M01_AXI_rready;
  input M01_AXI_awready;
  input M01_AXI_wready;
  input M01_AXI_bvalid;
  input M01_AXI_arready;
  input M01_AXI_rvalid;

  wire M01_AXI_arready;
  wire M01_AXI_arvalid;
  wire M01_AXI_awready;
  wire M01_AXI_awvalid;
  wire M01_AXI_bready;
  wire M01_AXI_bvalid;
  wire M01_AXI_rready;
  wire M01_AXI_rvalid;
  wire M01_AXI_wready;
  wire M01_AXI_wvalid;
  wire [0:0]M_SC_AR_recv;
  wire [0:0]M_SC_AR_send;
  wire [0:0]M_SC_AW_recv;
  wire [0:0]M_SC_AW_send;
  wire [0:0]M_SC_W_recv;
  wire [0:0]M_SC_W_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;

  (* x_core_info = "sc_exit_v1_0_9_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_m01e_0 m01_exit
       (.M01_AXI_arready(M01_AXI_arready),
        .M01_AXI_arvalid(M01_AXI_arvalid),
        .M01_AXI_awready(M01_AXI_awready),
        .M01_AXI_awvalid(M01_AXI_awvalid),
        .M01_AXI_bready(M01_AXI_bready),
        .M01_AXI_bvalid(M01_AXI_bvalid),
        .M01_AXI_rready(M01_AXI_rready),
        .M01_AXI_rvalid(M01_AXI_rvalid),
        .M01_AXI_wready(M01_AXI_wready),
        .M01_AXI_wvalid(M01_AXI_wvalid),
        .M_SC_AR_recv(M_SC_AR_recv),
        .M_SC_AR_send(M_SC_AR_send),
        .M_SC_AW_recv(M_SC_AW_recv),
        .M_SC_AW_send(M_SC_AW_send),
        .M_SC_W_recv(M_SC_W_recv),
        .M_SC_W_send(M_SC_W_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
endmodule

(* ORIG_REF_NAME = "m01_nodes_imp_94N5OD" *) 
module design_1_axi_smc_0_m01_nodes_imp_94N5OD
   (M_SC_AR_send,
    M_SC_AW_send,
    M_SC_B_send,
    M_SC_B_req,
    M_SC_R_send,
    M_SC_R_req,
    M_SC_W_send,
    aclk,
    interconnect_aresetn,
    M01_AXI_arvalid,
    M01_AXI_awvalid,
    M01_AXI_bvalid,
    M01_AXI_bready,
    M01_AXI_rvalid,
    M01_AXI_rready,
    M01_AXI_wvalid);
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_W_send;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]M01_AXI_arvalid;
  input [0:0]M01_AXI_awvalid;
  input M01_AXI_bvalid;
  input M01_AXI_bready;
  input M01_AXI_rvalid;
  input M01_AXI_rready;
  input [0:0]M01_AXI_wvalid;

  wire [0:0]M01_AXI_arvalid;
  wire [0:0]M01_AXI_awvalid;
  wire M01_AXI_bready;
  wire M01_AXI_bvalid;
  wire M01_AXI_rready;
  wire M01_AXI_rvalid;
  wire [0:0]M01_AXI_wvalid;
  wire [0:0]M_SC_AR_send;
  wire [0:0]M_SC_AW_send;
  wire [0:0]M_SC_B_req;
  wire [0:0]M_SC_B_send;
  wire [0:0]M_SC_R_req;
  wire [0:0]M_SC_R_send;
  wire [0:0]M_SC_W_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;

  (* x_core_info = "sc_node_v1_0_10_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_m01arn_0 m01_ar_node
       (.M01_AXI_arvalid(M01_AXI_arvalid),
        .M_SC_AR_send(M_SC_AR_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
  (* x_core_info = "sc_node_v1_0_10_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_m01awn_0 m01_aw_node
       (.M01_AXI_awvalid(M01_AXI_awvalid),
        .M_SC_AW_send(M_SC_AW_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
  (* x_core_info = "sc_node_v1_0_10_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_m01bn_0 m01_b_node
       (.M01_AXI_bready(M01_AXI_bready),
        .M01_AXI_bvalid(M01_AXI_bvalid),
        .M_SC_B_req(M_SC_B_req),
        .M_SC_B_send(M_SC_B_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
  (* x_core_info = "sc_node_v1_0_10_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_m01rn_0 m01_r_node
       (.M01_AXI_rready(M01_AXI_rready),
        .M01_AXI_rvalid(M01_AXI_rvalid),
        .M_SC_R_req(M_SC_R_req),
        .M_SC_R_send(M_SC_R_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
  (* x_core_info = "sc_node_v1_0_10_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_m01wn_0 m01_w_node
       (.M01_AXI_wvalid(M01_AXI_wvalid),
        .M_SC_W_send(M_SC_W_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
endmodule

(* ORIG_REF_NAME = "proc_sys_reset" *) 
module design_1_axi_smc_0_proc_sys_reset
   (interconnect_aresetn,
    aclk,
    aresetn);
  output [0:0]interconnect_aresetn;
  input aclk;
  input aresetn;

  wire SEQ_n_0;
  wire aclk;
  wire aresetn;
  wire [0:0]interconnect_aresetn;
  wire lpf_int;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N 
       (.C(aclk),
        .CE(1'b1),
        .D(SEQ_n_0),
        .Q(interconnect_aresetn),
        .R(1'b0));
  design_1_axi_smc_0_lpf EXT_LPF
       (.aclk(aclk),
        .aresetn(aresetn),
        .lpf_int(lpf_int));
  design_1_axi_smc_0_sequence_psr SEQ
       (.aclk(aclk),
        .bsr_reg_0(SEQ_n_0),
        .lpf_int(lpf_int));
endmodule

(* ORIG_REF_NAME = "s00_entry_pipeline_imp_USCCV8" *) 
module design_1_axi_smc_0_s00_entry_pipeline_imp_USCCV8
   (S00_AXI_awready,
    S00_AXI_wready,
    S00_AXI_bid,
    S00_AXI_bresp,
    S00_AXI_bvalid,
    S00_AXI_arready,
    S00_AXI_rid,
    S00_AXI_rdata,
    S00_AXI_rresp,
    S00_AXI_rlast,
    S00_AXI_rvalid,
    S_SC_AW_payld,
    S_SC_W_payld,
    m_axi_awvalid,
    m_axi_wvalid,
    m_axi_bready,
    S_SC_AR_payld,
    m_axi_arvalid,
    m_axi_rready,
    aclk,
    interconnect_aresetn,
    S00_AXI_awid,
    S00_AXI_awaddr,
    S00_AXI_awlen,
    S00_AXI_awsize,
    S00_AXI_awburst,
    S00_AXI_awprot,
    S00_AXI_awvalid,
    S00_AXI_wlast,
    S00_AXI_wvalid,
    S00_AXI_bready,
    S00_AXI_arid,
    S00_AXI_araddr,
    S00_AXI_arlen,
    S00_AXI_arsize,
    S00_AXI_arburst,
    S00_AXI_arprot,
    S00_AXI_arvalid,
    S00_AXI_rready,
    S00_AXI_wdata,
    S00_AXI_wstrb,
    S_SC_AW_recv,
    S_SC_W_recv,
    M_SC_B_payld,
    M_SC_B_send,
    S_SC_AR_recv,
    M_SC_R_payld,
    M_SC_R_send);
  output S00_AXI_awready;
  output S00_AXI_wready;
  output [11:0]S00_AXI_bid;
  output [1:0]S00_AXI_bresp;
  output S00_AXI_bvalid;
  output S00_AXI_arready;
  output [11:0]S00_AXI_rid;
  output [31:0]S00_AXI_rdata;
  output [1:0]S00_AXI_rresp;
  output S00_AXI_rlast;
  output S00_AXI_rvalid;
  output [10:0]S_SC_AW_payld;
  output [36:0]S_SC_W_payld;
  output m_axi_awvalid;
  output m_axi_wvalid;
  output m_axi_bready;
  output [11:0]S_SC_AR_payld;
  output m_axi_arvalid;
  output m_axi_rready;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [11:0]S00_AXI_awid;
  input [23:0]S00_AXI_awaddr;
  input [3:0]S00_AXI_awlen;
  input [2:0]S00_AXI_awsize;
  input [0:0]S00_AXI_awburst;
  input [2:0]S00_AXI_awprot;
  input S00_AXI_awvalid;
  input S00_AXI_wlast;
  input S00_AXI_wvalid;
  input S00_AXI_bready;
  input [11:0]S00_AXI_arid;
  input [23:0]S00_AXI_araddr;
  input [3:0]S00_AXI_arlen;
  input [2:0]S00_AXI_arsize;
  input [0:0]S00_AXI_arburst;
  input [2:0]S00_AXI_arprot;
  input S00_AXI_arvalid;
  input S00_AXI_rready;
  input [31:0]S00_AXI_wdata;
  input [3:0]S00_AXI_wstrb;
  input [0:0]S_SC_AW_recv;
  input [0:0]S_SC_W_recv;
  input [1:0]M_SC_B_payld;
  input [0:0]M_SC_B_send;
  input [0:0]S_SC_AR_recv;
  input [33:0]M_SC_R_payld;
  input [0:0]M_SC_R_send;

  wire [1:0]M_SC_B_payld;
  wire [0:0]M_SC_B_send;
  wire [33:0]M_SC_R_payld;
  wire [0:0]M_SC_R_send;
  wire [23:0]S00_AXI_araddr;
  wire [0:0]S00_AXI_arburst;
  wire [11:0]S00_AXI_arid;
  wire [3:0]S00_AXI_arlen;
  wire S00_AXI_arready;
  wire [2:0]S00_AXI_arsize;
  wire S00_AXI_arvalid;
  wire [23:0]S00_AXI_awaddr;
  wire [0:0]S00_AXI_awburst;
  wire [11:0]S00_AXI_awid;
  wire [3:0]S00_AXI_awlen;
  wire S00_AXI_awready;
  wire [2:0]S00_AXI_awsize;
  wire S00_AXI_awvalid;
  wire [11:0]S00_AXI_bid;
  wire S00_AXI_bready;
  wire [1:0]S00_AXI_bresp;
  wire S00_AXI_bvalid;
  wire [31:0]S00_AXI_rdata;
  wire [11:0]S00_AXI_rid;
  wire S00_AXI_rlast;
  wire S00_AXI_rready;
  wire [1:0]S00_AXI_rresp;
  wire S00_AXI_rvalid;
  wire [31:0]S00_AXI_wdata;
  wire S00_AXI_wlast;
  wire S00_AXI_wready;
  wire [3:0]S00_AXI_wstrb;
  wire S00_AXI_wvalid;
  wire [11:0]S_SC_AR_payld;
  wire [0:0]S_SC_AR_recv;
  wire [10:0]S_SC_AW_payld;
  wire [0:0]S_SC_AW_recv;
  wire [36:0]S_SC_W_payld;
  wire [0:0]S_SC_W_recv;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire m_axi_arvalid;
  wire m_axi_awvalid;
  wire m_axi_bready;
  wire m_axi_rready;
  wire m_axi_wvalid;
  wire [7:0]s00_mmu_M_AXI_ARADDR;
  wire [11:0]s00_mmu_M_AXI_ARID;
  wire [3:0]s00_mmu_M_AXI_ARLEN;
  wire s00_mmu_M_AXI_ARREADY;
  wire [1:0]s00_mmu_M_AXI_ARSIZE;
  wire s00_mmu_M_AXI_ARVALID;
  wire [7:0]s00_mmu_M_AXI_AWADDR;
  wire [11:0]s00_mmu_M_AXI_AWID;
  wire s00_mmu_M_AXI_AWREADY;
  wire [2:0]s00_mmu_M_AXI_AWSIZE;
  wire s00_mmu_M_AXI_AWVALID;
  wire [11:0]s00_mmu_M_AXI_BID;
  wire [11:0]s00_mmu_M_AXI_RID;
  wire s00_mmu_M_AXI_WVALID;
  wire s00_transaction_regulator_M_AXI_ARREADY;
  wire s00_transaction_regulator_M_AXI_ARVALID;
  wire s00_transaction_regulator_M_AXI_AWREADY;
  wire s00_transaction_regulator_M_AXI_AWVALID;
  wire [1:0]s00_transaction_regulator_M_AXI_BRESP;
  wire s00_transaction_regulator_M_AXI_BVALID;
  wire [31:0]s00_transaction_regulator_M_AXI_RDATA;
  wire s00_transaction_regulator_M_AXI_RLAST;
  wire [1:0]s00_transaction_regulator_M_AXI_RRESP;
  wire s00_transaction_regulator_M_AXI_RVALID;
  wire s00_transaction_regulator_M_AXI_WREADY;
  wire [2:0]NLW_s00_mmu_S00_AXI_arprot_UNCONNECTED;
  wire [2:2]NLW_s00_mmu_S00_AXI_arsize_UNCONNECTED;
  wire [2:0]NLW_s00_mmu_S00_AXI_awprot_UNCONNECTED;
  wire [2:2]NLW_s00_mmu_S00_AXI_awsize_UNCONNECTED;
  wire [2:0]NLW_s00_mmu_S_SC_AW_payld_UNCONNECTED;
  wire [2:0]NLW_s00_mmu_m_axi_arprot_UNCONNECTED;
  wire [2:2]NLW_s00_mmu_m_axi_awsize_UNCONNECTED;
  wire [31:11]NLW_s00_mmu_s_axi_rdata_UNCONNECTED;
  wire [33:0]NLW_s00_si_converter_M_SC_R_payld_UNCONNECTED;
  wire [31:1]NLW_s00_si_converter_S00_AXI_wdata_UNCONNECTED;
  wire [11:1]NLW_s00_si_converter_S_SC_AR_payld_UNCONNECTED;
  wire [1:0]NLW_s00_si_converter_S_SC_AW_payld_UNCONNECTED;
  wire [35:0]NLW_s00_si_converter_S_SC_W_payld_UNCONNECTED;
  wire [2:0]NLW_s00_si_converter_m_axi_arprot_UNCONNECTED;
  wire [2:2]NLW_s00_si_converter_m_axi_awsize_UNCONNECTED;
  wire [31:11]NLW_s00_si_converter_s_axi_rdata_UNCONNECTED;

  (* x_core_info = "sc_mmu_v1_0_8_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_s00mmu_0 s00_mmu
       (.S00_AXI_araddr(S00_AXI_araddr),
        .S00_AXI_arburst(S00_AXI_arburst),
        .S00_AXI_arid(S00_AXI_arid),
        .S00_AXI_arlen(S00_AXI_arlen),
        .S00_AXI_arprot(NLW_s00_mmu_S00_AXI_arprot_UNCONNECTED[2:0]),
        .S00_AXI_arready(S00_AXI_arready),
        .S00_AXI_arsize({NLW_s00_mmu_S00_AXI_arsize_UNCONNECTED[2],S00_AXI_arsize[1:0]}),
        .S00_AXI_arvalid(S00_AXI_arvalid),
        .S00_AXI_awaddr(S00_AXI_awaddr),
        .S00_AXI_awburst(S00_AXI_awburst),
        .S00_AXI_awid(S00_AXI_awid),
        .S00_AXI_awlen(S00_AXI_awlen),
        .S00_AXI_awprot(NLW_s00_mmu_S00_AXI_awprot_UNCONNECTED[2:0]),
        .S00_AXI_awready(S00_AXI_awready),
        .S00_AXI_awsize({NLW_s00_mmu_S00_AXI_awsize_UNCONNECTED[2],S00_AXI_awsize[1:0]}),
        .S00_AXI_awvalid(S00_AXI_awvalid),
        .S00_AXI_bid(S00_AXI_bid),
        .S00_AXI_bready(S00_AXI_bready),
        .S00_AXI_bresp(S00_AXI_bresp),
        .S00_AXI_bvalid(S00_AXI_bvalid),
        .S00_AXI_rdata(S00_AXI_rdata),
        .S00_AXI_rid(S00_AXI_rid),
        .S00_AXI_rlast(S00_AXI_rlast),
        .S00_AXI_rready(S00_AXI_rready),
        .S00_AXI_rresp(S00_AXI_rresp),
        .S00_AXI_rvalid(S00_AXI_rvalid),
        .S00_AXI_wlast(S00_AXI_wlast),
        .S00_AXI_wready(S00_AXI_wready),
        .S00_AXI_wvalid(S00_AXI_wvalid),
        .S_SC_AW_payld(NLW_s00_mmu_S_SC_AW_payld_UNCONNECTED[2:0]),
        .S_SC_W_payld(S_SC_W_payld[0]),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn),
        .m_axi_araddr(s00_mmu_M_AXI_ARADDR),
        .m_axi_arid(s00_mmu_M_AXI_ARID),
        .m_axi_arlen(s00_mmu_M_AXI_ARLEN),
        .m_axi_arprot(NLW_s00_mmu_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arsize(s00_mmu_M_AXI_ARSIZE),
        .m_axi_arvalid(s00_mmu_M_AXI_ARVALID),
        .m_axi_awaddr(s00_mmu_M_AXI_AWADDR),
        .m_axi_awid(s00_mmu_M_AXI_AWID),
        .m_axi_awsize({NLW_s00_mmu_m_axi_awsize_UNCONNECTED[2],s00_mmu_M_AXI_AWSIZE[1:0]}),
        .m_axi_awvalid(s00_mmu_M_AXI_AWVALID),
        .m_axi_wvalid(s00_mmu_M_AXI_WVALID),
        .s_axi_arready(s00_mmu_M_AXI_ARREADY),
        .s_axi_awready(s00_mmu_M_AXI_AWREADY),
        .s_axi_bid(s00_mmu_M_AXI_BID),
        .s_axi_bresp(s00_transaction_regulator_M_AXI_BRESP),
        .s_axi_bvalid(s00_transaction_regulator_M_AXI_BVALID),
        .s_axi_rdata({NLW_s00_mmu_s_axi_rdata_UNCONNECTED[31:11],s00_transaction_regulator_M_AXI_RDATA[10:0]}),
        .s_axi_rid(s00_mmu_M_AXI_RID),
        .s_axi_rlast(s00_transaction_regulator_M_AXI_RLAST),
        .s_axi_rresp(s00_transaction_regulator_M_AXI_RRESP),
        .s_axi_rvalid(s00_transaction_regulator_M_AXI_RVALID),
        .s_axi_wready(s00_transaction_regulator_M_AXI_WREADY));
  (* x_core_info = "sc_si_converter_v1_0_9_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_s00sic_0 s00_si_converter
       (.\FSM_sequential_r_state_reg[0] (s00_transaction_regulator_M_AXI_ARVALID),
        .M_SC_B_payld(M_SC_B_payld),
        .M_SC_B_send(M_SC_B_send),
        .M_SC_R_payld({NLW_s00_si_converter_M_SC_R_payld_UNCONNECTED[33:13],M_SC_R_payld[12:2],NLW_s00_si_converter_M_SC_R_payld_UNCONNECTED[1:0]}),
        .M_SC_R_send(M_SC_R_send),
        .S00_AXI_bready(S00_AXI_bready),
        .S00_AXI_rready(S00_AXI_rready),
        .S00_AXI_wdata({NLW_s00_si_converter_S00_AXI_wdata_UNCONNECTED[31:1],S00_AXI_wdata[0]}),
        .S00_AXI_wlast(S00_AXI_wlast),
        .S00_AXI_wstrb(S00_AXI_wstrb),
        .S_SC_AR_payld({NLW_s00_si_converter_S_SC_AR_payld_UNCONNECTED[11:9],S_SC_AR_payld[8:3],NLW_s00_si_converter_S_SC_AR_payld_UNCONNECTED[2:1],S_SC_AR_payld[0]}),
        .S_SC_AR_recv(S_SC_AR_recv),
        .S_SC_AW_payld({S_SC_AW_payld[7:2],NLW_s00_si_converter_S_SC_AW_payld_UNCONNECTED[1:0]}),
        .S_SC_AW_recv(S_SC_AW_recv),
        .S_SC_W_payld({NLW_s00_si_converter_S_SC_W_payld_UNCONNECTED[35:2],S_SC_W_payld[2],NLW_s00_si_converter_S_SC_W_payld_UNCONNECTED[0]}),
        .S_SC_W_recv(S_SC_W_recv),
        .aclk(aclk),
        .\aw_incr_reg[2] (s00_transaction_regulator_M_AXI_AWVALID),
        .interconnect_aresetn(interconnect_aresetn),
        .m_axi_araddr(s00_mmu_M_AXI_ARADDR),
        .m_axi_arlen(s00_mmu_M_AXI_ARLEN),
        .m_axi_arprot(NLW_s00_si_converter_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arsize(s00_mmu_M_AXI_ARSIZE),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awaddr(s00_mmu_M_AXI_AWADDR),
        .m_axi_awsize({NLW_s00_si_converter_m_axi_awsize_UNCONNECTED[2],s00_mmu_M_AXI_AWSIZE[1:0]}),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bready(m_axi_bready),
        .m_axi_rready(m_axi_rready),
        .m_axi_wvalid(m_axi_wvalid),
        .s_axi_arready(s00_transaction_regulator_M_AXI_ARREADY),
        .s_axi_awready(s00_transaction_regulator_M_AXI_AWREADY),
        .s_axi_bresp(s00_transaction_regulator_M_AXI_BRESP),
        .s_axi_bvalid(s00_transaction_regulator_M_AXI_BVALID),
        .s_axi_rdata({NLW_s00_si_converter_s_axi_rdata_UNCONNECTED[31:11],s00_transaction_regulator_M_AXI_RDATA[10:0]}),
        .s_axi_rlast(s00_transaction_regulator_M_AXI_RLAST),
        .s_axi_rresp(s00_transaction_regulator_M_AXI_RRESP),
        .s_axi_rvalid(s00_transaction_regulator_M_AXI_RVALID),
        .s_axi_wready(s00_transaction_regulator_M_AXI_WREADY),
        .s_axi_wready_i_reg(s00_mmu_M_AXI_WVALID));
  (* x_core_info = "sc_transaction_regulator_v1_0_8_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_s00tr_0 s00_transaction_regulator
       (.S00_AXI_bready(S00_AXI_bready),
        .S00_AXI_rready(S00_AXI_rready),
        .aclk(aclk),
        .\gen_id_reg.s_rid_i_reg[0] (s00_mmu_M_AXI_AWVALID),
        .\gen_id_reg.s_rid_i_reg[0]_0 (s00_transaction_regulator_M_AXI_AWREADY),
        .\gen_id_reg.s_single_aready_i_reg (s00_mmu_M_AXI_ARVALID),
        .\gen_id_reg.s_single_aready_i_reg_0 (s00_transaction_regulator_M_AXI_ARREADY),
        .interconnect_aresetn(interconnect_aresetn),
        .m_axi_arid(s00_mmu_M_AXI_ARID),
        .m_axi_arvalid(s00_transaction_regulator_M_AXI_ARVALID),
        .m_axi_awid(s00_mmu_M_AXI_AWID),
        .m_axi_awvalid(s00_transaction_regulator_M_AXI_AWVALID),
        .s_axi_arready(s00_mmu_M_AXI_ARREADY),
        .s_axi_awready(s00_mmu_M_AXI_AWREADY),
        .s_axi_bid(s00_mmu_M_AXI_BID),
        .s_axi_bvalid(s00_transaction_regulator_M_AXI_BVALID),
        .s_axi_rid(s00_mmu_M_AXI_RID),
        .s_axi_rlast(s00_transaction_regulator_M_AXI_RLAST),
        .s_axi_rvalid(s00_transaction_regulator_M_AXI_RVALID));
endmodule

(* ORIG_REF_NAME = "s00_nodes_imp_Y7M43I" *) 
module design_1_axi_smc_0_s00_nodes_imp_Y7M43I
   (M_SC_AR_send,
    M_SC_AW_send,
    M_SC_B_send,
    M_SC_R_send,
    M_SC_W_send,
    aclk,
    interconnect_aresetn,
    S_SC_AR_send,
    S_SC_AW_send,
    \s_axi_bresp_i_reg[1] ,
    \FSM_sequential_r_state_reg[0] ,
    S_SC_W_send);
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_send;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_send;
  input [0:0]\s_axi_bresp_i_reg[1] ;
  input [0:0]\FSM_sequential_r_state_reg[0] ;
  input [0:0]S_SC_W_send;

  wire [0:0]\FSM_sequential_r_state_reg[0] ;
  wire [0:0]M_SC_AR_send;
  wire [0:0]M_SC_AW_send;
  wire [0:0]M_SC_B_send;
  wire [0:0]M_SC_R_send;
  wire [0:0]M_SC_W_send;
  wire [0:0]S_SC_AR_send;
  wire [0:0]S_SC_AW_send;
  wire [0:0]S_SC_W_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire [0:0]\s_axi_bresp_i_reg[1] ;

  (* x_core_info = "sc_node_v1_0_10_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_sarn_0 s00_ar_node
       (.M_SC_AR_send(M_SC_AR_send),
        .S_SC_AR_send(S_SC_AR_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
  (* x_core_info = "sc_node_v1_0_10_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_sawn_0 s00_aw_node
       (.M_SC_AW_send(M_SC_AW_send),
        .S_SC_AW_send(S_SC_AW_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
  (* x_core_info = "sc_node_v1_0_10_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_sbn_0 s00_b_node
       (.M_SC_B_send(M_SC_B_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn),
        .\s_axi_bresp_i_reg[1] (\s_axi_bresp_i_reg[1] ));
  (* x_core_info = "sc_node_v1_0_10_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_srn_0 s00_r_node
       (.\FSM_sequential_r_state_reg[0] (\FSM_sequential_r_state_reg[0] ),
        .M_SC_R_send(M_SC_R_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
  (* x_core_info = "sc_node_v1_0_10_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_swn_0 s00_w_node
       (.M_SC_W_send(M_SC_W_send),
        .S_SC_W_send(S_SC_W_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
endmodule

(* ORIG_REF_NAME = "sequence_psr" *) 
module design_1_axi_smc_0_sequence_psr
   (bsr_reg_0,
    lpf_int,
    aclk);
  output bsr_reg_0;
  input lpf_int;
  input aclk;

  wire Bsr_out;
  wire Core_i_1_n_0;
  wire MB_out;
  wire aclk;
  wire \bsr_dec_reg_n_0_[0] ;
  wire \bsr_dec_reg_n_0_[1] ;
  wire \bsr_dec_reg_n_0_[2] ;
  wire bsr_i_1_n_0;
  wire bsr_reg_0;
  wire \core_dec[0]_i_1_n_0 ;
  wire \core_dec[2]_i_1_n_0 ;
  wire \core_dec_reg_n_0_[0] ;
  wire from_sys_i_1_n_0;
  wire lpf_int;
  wire p_0_in;
  wire [2:0]p_5_out;
  wire pr_dec0__0;
  wire seq_clr;
  wire [5:0]seq_cnt;
  wire seq_cnt_en;

  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N_i_1 
       (.I0(Bsr_out),
        .O(bsr_reg_0));
  (* \PinAttr:I0:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h2)) 
    Core_i_1
       (.I0(MB_out),
        .I1(p_0_in),
        .O(Core_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    Core_reg
       (.C(aclk),
        .CE(1'b1),
        .D(Core_i_1_n_0),
        .Q(MB_out),
        .S(lpf_int));
  design_1_axi_smc_0_upcnt_n SEQ_COUNTER
       (.Q(seq_cnt),
        .aclk(aclk),
        .seq_clr(seq_clr),
        .seq_cnt_en(seq_cnt_en));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h0090)) 
    \bsr_dec[0]_i_1 
       (.I0(seq_cnt_en),
        .I1(seq_cnt[4]),
        .I2(seq_cnt[3]),
        .I3(seq_cnt[5]),
        .O(p_5_out[0]));
  (* \PinAttr:I0:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \bsr_dec[2]_i_1 
       (.I0(\bsr_dec_reg_n_0_[1] ),
        .I1(\bsr_dec_reg_n_0_[0] ),
        .O(p_5_out[2]));
  FDRE #(
    .INIT(1'b0)) 
    \bsr_dec_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(p_5_out[0]),
        .Q(\bsr_dec_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bsr_dec_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(pr_dec0__0),
        .Q(\bsr_dec_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bsr_dec_reg[2] 
       (.C(aclk),
        .CE(1'b1),
        .D(p_5_out[2]),
        .Q(\bsr_dec_reg_n_0_[2] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bsr_i_1
       (.I0(Bsr_out),
        .I1(\bsr_dec_reg_n_0_[2] ),
        .O(bsr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    bsr_reg
       (.C(aclk),
        .CE(1'b1),
        .D(bsr_i_1_n_0),
        .Q(Bsr_out),
        .S(lpf_int));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h9000)) 
    \core_dec[0]_i_1 
       (.I0(seq_cnt_en),
        .I1(seq_cnt[4]),
        .I2(seq_cnt[3]),
        .I3(seq_cnt[5]),
        .O(\core_dec[0]_i_1_n_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \core_dec[2]_i_1 
       (.I0(\bsr_dec_reg_n_0_[1] ),
        .I1(\core_dec_reg_n_0_[0] ),
        .O(\core_dec[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \core_dec_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\core_dec[0]_i_1_n_0 ),
        .Q(\core_dec_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \core_dec_reg[2] 
       (.C(aclk),
        .CE(1'b1),
        .D(\core_dec[2]_i_1_n_0 ),
        .Q(p_0_in),
        .R(1'b0));
  (* \PinAttr:I0:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h8)) 
    from_sys_i_1
       (.I0(MB_out),
        .I1(seq_cnt_en),
        .O(from_sys_i_1_n_0));
  FDSE #(
    .INIT(1'b0)) 
    from_sys_reg
       (.C(aclk),
        .CE(1'b1),
        .D(from_sys_i_1_n_0),
        .Q(seq_cnt_en),
        .S(lpf_int));
  LUT4 #(
    .INIT(16'h0018)) 
    pr_dec0
       (.I0(seq_cnt_en),
        .I1(seq_cnt[0]),
        .I2(seq_cnt[2]),
        .I3(seq_cnt[1]),
        .O(pr_dec0__0));
  FDRE #(
    .INIT(1'b0)) 
    seq_clr_reg
       (.C(aclk),
        .CE(1'b1),
        .D(1'b1),
        .Q(seq_clr),
        .R(lpf_int));
endmodule

(* ORIG_REF_NAME = "switchboards_imp_4N4PBE" *) 
module design_1_axi_smc_0_switchboards_imp_4N4PBE
   (M01_AXI_bready,
    S_SC_AR_recv,
    M_SC_AR_send,
    M_SC_AR_payld,
    S_SC_AW_recv,
    M_SC_AW_send,
    M_SC_AW_payld,
    M_SC_B_send,
    M_SC_B_payld,
    M01_AXI_rready,
    M_SC_R_send,
    M_SC_R_payld,
    S_SC_W_recv,
    M_SC_W_send,
    M_SC_W_payld,
    M01_AXI_bresp,
    aclk,
    interconnect_aresetn,
    S_SC_AR_send,
    S_SC_AR_payld,
    M_SC_AR_recv,
    S_SC_AW_send,
    S_SC_AW_payld,
    M_SC_AW_recv,
    S_SC_B_req,
    S_SC_B_send,
    M_SC_B_recv,
    S_SC_R_req,
    S_SC_R_send,
    M_SC_R_recv,
    S_SC_W_send,
    S_SC_W_payld,
    M_SC_W_recv,
    S01_SC_R_payld);
  output M01_AXI_bready;
  output [0:0]S_SC_AR_recv;
  output [0:0]M_SC_AR_send;
  output [10:0]M_SC_AR_payld;
  output [0:0]S_SC_AW_recv;
  output [0:0]M_SC_AW_send;
  output [10:0]M_SC_AW_payld;
  output [0:0]M_SC_B_send;
  output [1:0]M_SC_B_payld;
  output M01_AXI_rready;
  output [0:0]M_SC_R_send;
  output [33:0]M_SC_R_payld;
  output [0:0]S_SC_W_recv;
  output [0:0]M_SC_W_send;
  output [35:0]M_SC_W_payld;
  input [1:0]M01_AXI_bresp;
  input aclk;
  input [0:0]interconnect_aresetn;
  input [0:0]S_SC_AR_send;
  input [11:0]S_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  input [0:0]S_SC_AW_send;
  input [10:0]S_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]M_SC_B_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]M_SC_R_recv;
  input [0:0]S_SC_W_send;
  input [36:0]S_SC_W_payld;
  input [0:0]M_SC_W_recv;
  input [33:0]S01_SC_R_payld;

  wire M01_AXI_bready;
  wire M01_AXI_rready;
  wire [10:0]M_SC_AR_payld;
  wire [0:0]M_SC_AR_recv;
  wire [0:0]M_SC_AR_send;
  wire [10:0]M_SC_AW_payld;
  wire [0:0]M_SC_AW_recv;
  wire [0:0]M_SC_AW_send;
  wire [1:0]M_SC_B_payld;
  wire [0:0]M_SC_B_recv;
  wire [0:0]M_SC_B_send;
  wire [33:0]M_SC_R_payld;
  wire [0:0]M_SC_R_recv;
  wire [0:0]M_SC_R_send;
  wire [35:0]M_SC_W_payld;
  wire [0:0]M_SC_W_recv;
  wire [0:0]M_SC_W_send;
  wire [33:0]S01_SC_R_payld;
  wire [11:0]S_SC_AR_payld;
  wire [0:0]S_SC_AR_recv;
  wire [0:0]S_SC_AR_send;
  wire [10:0]S_SC_AW_payld;
  wire [0:0]S_SC_AW_recv;
  wire [0:0]S_SC_AW_send;
  wire [0:0]S_SC_B_req;
  wire [0:0]S_SC_B_send;
  wire [0:0]S_SC_R_req;
  wire [0:0]S_SC_R_send;
  wire [36:0]S_SC_W_payld;
  wire [0:0]S_SC_W_recv;
  wire [0:0]S_SC_W_send;
  wire aclk;
  wire [0:0]interconnect_aresetn;
  wire [52:18]r_la_out_swbd_M00_SC_PAYLD;
  wire [10:0]NLW_i_nodes_M_SC_AR_payld_UNCONNECTED;
  wire [10:0]NLW_i_nodes_M_SC_AW_payld_UNCONNECTED;
  wire [33:0]NLW_i_nodes_M_SC_R_payld_UNCONNECTED;
  wire [35:0]NLW_i_nodes_M_SC_W_payld_UNCONNECTED;
  wire [11:1]NLW_i_nodes_S_SC_AR_payld_UNCONNECTED;
  wire [10:0]NLW_i_nodes_S_SC_AW_payld_UNCONNECTED;
  wire [1:0]NLW_i_nodes_S_SC_B_payld_UNCONNECTED;
  wire [33:0]NLW_i_nodes_S_SC_R_payld_UNCONNECTED;
  wire [36:1]NLW_i_nodes_S_SC_W_payld_UNCONNECTED;
  wire [33:0]NLW_r_la_out_swbd_S01_SC_R_payld_UNCONNECTED;
  wire [33:0]NLW_r_la_out_swbd_m_sc_payld_UNCONNECTED;

  design_1_axi_smc_0_i_nodes_imp_1MZRIMQ i_nodes
       (.M01_AXI_bready(M01_AXI_bready),
        .M01_AXI_rready(M01_AXI_rready),
        .M_SC_AR_payld({NLW_i_nodes_M_SC_AR_payld_UNCONNECTED[10:8],M_SC_AR_payld[7:2],NLW_i_nodes_M_SC_AR_payld_UNCONNECTED[1:0]}),
        .M_SC_AR_recv(M_SC_AR_recv),
        .M_SC_AR_send(M_SC_AR_send),
        .M_SC_AW_payld({NLW_i_nodes_M_SC_AW_payld_UNCONNECTED[10:8],M_SC_AW_payld[7:2],NLW_i_nodes_M_SC_AW_payld_UNCONNECTED[1:0]}),
        .M_SC_AW_recv(M_SC_AW_recv),
        .M_SC_AW_send(M_SC_AW_send),
        .M_SC_B_payld(M_SC_B_payld),
        .M_SC_B_recv(M_SC_B_recv),
        .M_SC_B_send(M_SC_B_send),
        .M_SC_R_payld({NLW_i_nodes_M_SC_R_payld_UNCONNECTED[33:13],M_SC_R_payld[12:2],NLW_i_nodes_M_SC_R_payld_UNCONNECTED[1:0]}),
        .M_SC_R_recv(M_SC_R_recv),
        .M_SC_R_send(M_SC_R_send),
        .M_SC_W_payld({NLW_i_nodes_M_SC_W_payld_UNCONNECTED[35:2],M_SC_W_payld[1],NLW_i_nodes_M_SC_W_payld_UNCONNECTED[0]}),
        .M_SC_W_recv(M_SC_W_recv),
        .M_SC_W_send(M_SC_W_send),
        .S_SC_AR_payld({NLW_i_nodes_S_SC_AR_payld_UNCONNECTED[11:9],S_SC_AR_payld[8:3],NLW_i_nodes_S_SC_AR_payld_UNCONNECTED[2:1],S_SC_AR_payld[0]}),
        .S_SC_AR_recv(S_SC_AR_recv),
        .S_SC_AR_send(S_SC_AR_send),
        .S_SC_AW_payld({NLW_i_nodes_S_SC_AW_payld_UNCONNECTED[10:8],S_SC_AW_payld[7:2],NLW_i_nodes_S_SC_AW_payld_UNCONNECTED[1:0]}),
        .S_SC_AW_recv(S_SC_AW_recv),
        .S_SC_AW_send(S_SC_AW_send),
        .S_SC_B_payld(NLW_i_nodes_S_SC_B_payld_UNCONNECTED[1:0]),
        .S_SC_B_req(S_SC_B_req),
        .S_SC_B_send(S_SC_B_send),
        .S_SC_R_payld({NLW_i_nodes_S_SC_R_payld_UNCONNECTED[33:13],r_la_out_swbd_M00_SC_PAYLD[31:20],NLW_i_nodes_S_SC_R_payld_UNCONNECTED[0]}),
        .S_SC_R_req(S_SC_R_req),
        .S_SC_R_send(S_SC_R_send),
        .S_SC_W_payld({NLW_i_nodes_S_SC_W_payld_UNCONNECTED[36:3],S_SC_W_payld[2],NLW_i_nodes_S_SC_W_payld_UNCONNECTED[1],S_SC_W_payld[0]}),
        .S_SC_W_recv(S_SC_W_recv),
        .S_SC_W_send(S_SC_W_send),
        .aclk(aclk),
        .interconnect_aresetn(interconnect_aresetn));
  (* x_core_info = "sc_switchboard_v1_0_6_top,Vivado 2019.2" *) 
  design_1_axi_smc_0_bd_afc3_routsw_0 r_la_out_swbd
       (.M01_AXI_rready(M01_AXI_rready),
        .S01_SC_R_payld({NLW_r_la_out_swbd_S01_SC_R_payld_UNCONNECTED[33:13],S01_SC_R_payld[12:2],NLW_r_la_out_swbd_S01_SC_R_payld_UNCONNECTED[1:0]}),
        .m_sc_payld({NLW_r_la_out_swbd_m_sc_payld_UNCONNECTED[33:13],r_la_out_swbd_M00_SC_PAYLD[31:20],NLW_r_la_out_swbd_m_sc_payld_UNCONNECTED[0]}));
endmodule

(* ORIG_REF_NAME = "upcnt_n" *) 
module design_1_axi_smc_0_upcnt_n
   (Q,
    seq_clr,
    seq_cnt_en,
    aclk);
  output [5:0]Q;
  input seq_clr;
  input seq_cnt_en;
  input aclk;

  wire [5:0]Q;
  wire aclk;
  wire clear;
  wire [5:0]q_int0;
  wire seq_clr;
  wire seq_cnt_en;

  LUT1 #(
    .INIT(2'h1)) 
    \q_int[0]_i_1 
       (.I0(Q[0]),
        .O(q_int0[0]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \q_int[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(q_int0[1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \q_int[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(q_int0[2]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \q_int[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(q_int0[3]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \q_int[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(q_int0[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \q_int[5]_i_1 
       (.I0(seq_clr),
        .O(clear));
  (* \PinAttr:I3:HOLD_DETOUR  = "147" *) 
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \q_int[5]_i_2 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(Q[5]),
        .O(q_int0[5]));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[0] 
       (.C(aclk),
        .CE(seq_cnt_en),
        .D(q_int0[0]),
        .Q(Q[0]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[1] 
       (.C(aclk),
        .CE(seq_cnt_en),
        .D(q_int0[1]),
        .Q(Q[1]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[2] 
       (.C(aclk),
        .CE(seq_cnt_en),
        .D(q_int0[2]),
        .Q(Q[2]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[3] 
       (.C(aclk),
        .CE(seq_cnt_en),
        .D(q_int0[3]),
        .Q(Q[3]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[4] 
       (.C(aclk),
        .CE(seq_cnt_en),
        .D(q_int0[4]),
        .Q(Q[4]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[5] 
       (.C(aclk),
        .CE(seq_cnt_en),
        .D(q_int0[5]),
        .Q(Q[5]),
        .R(clear));
endmodule

(* CHECK_LICENSE_TYPE = "design_1_comblock_0_0,axi_comblock,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_comblock,Vivado 2019.2" *) 
(* ip_definition_source = "package_project" *) 
module design_1_comblock_0_0
   (reg0_i,
    reg1_i,
    reg0_o,
    axil_aclk,
    axil_aresetn,
    axil_awaddr,
    axil_awprot,
    axil_awvalid,
    axil_awready,
    axil_wdata,
    axil_wstrb,
    axil_wvalid,
    axil_wready,
    axil_bresp,
    axil_bvalid,
    axil_bready,
    axil_araddr,
    axil_arprot,
    axil_arvalid,
    axil_arready,
    axil_rdata,
    axil_rresp,
    axil_rvalid,
    axil_rready);
  (* x_interface_info = "ictp:user:IREGS:1.0 IN_REGS reg0_i" *) input [10:0]reg0_i;
  (* x_interface_info = "ictp:user:IREGS:1.0 IN_REGS reg1_i" *) input [10:0]reg1_i;
  (* x_interface_info = "ictp:user:OREGS:1.0 OUT_REGS reg0_o" *) output [0:0]reg0_o;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 axil_aclk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME axil_aclk, ASSOCIATED_RESET axil_aresetn, ASSOCIATED_BUSIF AXIL, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, INSERT_VIP 0" *) input axil_aclk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 axil_aresetn RST" *) (* x_interface_parameter = "XIL_INTERFACENAME axil_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input axil_aresetn;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL AWADDR" *) (* x_interface_parameter = "XIL_INTERFACENAME AXIL, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 8, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 8, NUM_WRITE_OUTSTANDING 8, MAX_BURST_LENGTH 1, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input [7:0]axil_awaddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL AWPROT" *) input [2:0]axil_awprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL AWVALID" *) input axil_awvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL AWREADY" *) output axil_awready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL WDATA" *) input [31:0]axil_wdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL WSTRB" *) input [3:0]axil_wstrb;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL WVALID" *) input axil_wvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL WREADY" *) output axil_wready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL BRESP" *) output [1:0]axil_bresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL BVALID" *) output axil_bvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL BREADY" *) input axil_bready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL ARADDR" *) input [7:0]axil_araddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL ARPROT" *) input [2:0]axil_arprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL ARVALID" *) input axil_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL ARREADY" *) output axil_arready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL RDATA" *) output [31:0]axil_rdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL RRESP" *) output [1:0]axil_rresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL RVALID" *) output axil_rvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AXIL RREADY" *) input axil_rready;

  wire axil_aclk;
  wire [7:0]axil_araddr;
  wire axil_aresetn;
  wire axil_arready;
  wire axil_arvalid;
  wire [7:0]axil_awaddr;
  wire axil_awready;
  wire axil_awvalid;
  wire axil_bready;
  wire axil_bvalid;
  wire [31:0]axil_rdata;
  wire axil_rready;
  wire axil_rvalid;
  wire [31:0]axil_wdata;
  wire axil_wready;
  wire axil_wvalid;
  wire [10:0]reg0_i;
  wire [0:0]reg0_o;
  wire [10:0]reg1_i;
  wire [0:0]NLW_U0_reg1_i_UNCONNECTED;

  design_1_comblock_0_0_axi_comblock U0
       (.axil_aclk(axil_aclk),
        .axil_araddr(axil_araddr[7:2]),
        .axil_aresetn(axil_aresetn),
        .axil_arready(axil_arready),
        .axil_arvalid(axil_arvalid),
        .axil_awaddr(axil_awaddr[7:2]),
        .axil_awready(axil_awready),
        .axil_awvalid(axil_awvalid),
        .axil_bready(axil_bready),
        .axil_bvalid(axil_bvalid),
        .axil_rdata(axil_rdata[10:0]),
        .axil_rready(axil_rready),
        .axil_rvalid(axil_rvalid),
        .axil_wdata(axil_wdata[0]),
        .axil_wready(axil_wready),
        .axil_wvalid(axil_wvalid),
        .reg0_i(reg0_i),
        .reg0_o(reg0_o),
        .reg1_i({reg1_i[10:1],NLW_U0_reg1_i_UNCONNECTED[0]}));
endmodule

(* ORIG_REF_NAME = "AXIL" *) 
module design_1_comblock_0_0_AXIL
   (axil_awready,
    axil_wready,
    axil_arready,
    axil_bvalid,
    axil_rvalid,
    axil_wdata_0_sp_1,
    axil_rdata,
    axil_aclk,
    axil_arvalid,
    axil_aresetn,
    axil_bready,
    axil_awvalid,
    axil_wvalid,
    axil_rready,
    axil_wdata,
    reg0_o,
    axil_awaddr,
    axil_araddr,
    reg1_i,
    reg0_i);
  output axil_awready;
  output axil_wready;
  output axil_arready;
  output axil_bvalid;
  output axil_rvalid;
  output axil_wdata_0_sp_1;
  output [10:0]axil_rdata;
  input axil_aclk;
  input axil_arvalid;
  input axil_aresetn;
  input axil_bready;
  input axil_awvalid;
  input axil_wvalid;
  input axil_rready;
  input [0:0]axil_wdata;
  input [0:0]reg0_o;
  input [5:0]axil_awaddr;
  input [5:0]axil_araddr;
  input [10:0]reg1_i;
  input [10:0]reg0_i;

  wire aw_en_i_1_n_0;
  wire aw_en_reg_n_0;
  wire axi_arready0;
  wire axi_awready0;
  wire axi_bvalid_i_1_n_0;
  wire \axi_rdata[0]_i_2_n_0 ;
  wire \axi_rdata[10]_i_1_n_0 ;
  wire \axi_rdata[10]_i_3_n_0 ;
  wire \axi_rdata[10]_i_4_n_0 ;
  wire axi_rvalid_i_1_n_0;
  wire axi_wready0;
  wire axil_aclk;
  wire [5:0]axil_araddr;
  wire axil_aresetn;
  wire axil_arready;
  wire axil_arvalid;
  wire [5:0]axil_awaddr;
  wire axil_awready;
  wire axil_awvalid;
  wire axil_bready;
  wire axil_bvalid;
  wire [10:0]axil_rdata;
  wire axil_rready;
  wire axil_rvalid;
  wire [0:0]axil_wdata;
  wire axil_wdata_0_sn_1;
  wire axil_wready;
  wire axil_wvalid;
  wire p_0_in;
  wire [10:0]reg0_i;
  wire [0:0]reg0_o;
  wire [10:0]reg1_i;
  wire [7:2]reg_rd_adr;
  wire [10:0]reg_rd_dat;
  wire [7:2]reg_wr_adr;
  wire \regs_out[0][0]_i_2_n_0 ;
  wire \regs_out[0][0]_i_3_n_0 ;

  assign axil_wdata_0_sp_1 = axil_wdata_0_sn_1;
  LUT6 #(
    .INIT(64'hF8F8F8F808F8F8F8)) 
    aw_en_i_1
       (.I0(axil_bvalid),
        .I1(axil_bready),
        .I2(aw_en_reg_n_0),
        .I3(axil_wvalid),
        .I4(axil_awvalid),
        .I5(axil_awready),
        .O(aw_en_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    aw_en_reg
       (.C(axil_aclk),
        .CE(1'b1),
        .D(aw_en_i_1_n_0),
        .Q(aw_en_reg_n_0),
        .S(p_0_in));
  FDSE #(
    .INIT(1'b1)) 
    \axi_araddr_reg[2] 
       (.C(axil_aclk),
        .CE(axi_arready0),
        .D(axil_araddr[0]),
        .Q(reg_rd_adr[2]),
        .S(p_0_in));
  FDSE #(
    .INIT(1'b1)) 
    \axi_araddr_reg[3] 
       (.C(axil_aclk),
        .CE(axi_arready0),
        .D(axil_araddr[1]),
        .Q(reg_rd_adr[3]),
        .S(p_0_in));
  FDSE #(
    .INIT(1'b1)) 
    \axi_araddr_reg[4] 
       (.C(axil_aclk),
        .CE(axi_arready0),
        .D(axil_araddr[2]),
        .Q(reg_rd_adr[4]),
        .S(p_0_in));
  FDSE #(
    .INIT(1'b1)) 
    \axi_araddr_reg[5] 
       (.C(axil_aclk),
        .CE(axi_arready0),
        .D(axil_araddr[3]),
        .Q(reg_rd_adr[5]),
        .S(p_0_in));
  FDSE #(
    .INIT(1'b1)) 
    \axi_araddr_reg[6] 
       (.C(axil_aclk),
        .CE(axi_arready0),
        .D(axil_araddr[4]),
        .Q(reg_rd_adr[6]),
        .S(p_0_in));
  FDSE #(
    .INIT(1'b1)) 
    \axi_araddr_reg[7] 
       (.C(axil_aclk),
        .CE(axi_arready0),
        .D(axil_araddr[5]),
        .Q(reg_rd_adr[7]),
        .S(p_0_in));
  LUT2 #(
    .INIT(4'h2)) 
    axi_arready_i_1
       (.I0(axil_arvalid),
        .I1(axil_arready),
        .O(axi_arready0));
  FDRE #(
    .INIT(1'b0)) 
    axi_arready_reg
       (.C(axil_aclk),
        .CE(1'b1),
        .D(axi_arready0),
        .Q(axil_arready),
        .R(p_0_in));
  FDRE #(
    .INIT(1'b0)) 
    \axi_awaddr_reg[2] 
       (.C(axil_aclk),
        .CE(axi_awready0),
        .D(axil_awaddr[0]),
        .Q(reg_wr_adr[2]),
        .R(p_0_in));
  FDRE #(
    .INIT(1'b0)) 
    \axi_awaddr_reg[3] 
       (.C(axil_aclk),
        .CE(axi_awready0),
        .D(axil_awaddr[1]),
        .Q(reg_wr_adr[3]),
        .R(p_0_in));
  FDRE #(
    .INIT(1'b0)) 
    \axi_awaddr_reg[4] 
       (.C(axil_aclk),
        .CE(axi_awready0),
        .D(axil_awaddr[2]),
        .Q(reg_wr_adr[4]),
        .R(p_0_in));
  FDRE #(
    .INIT(1'b0)) 
    \axi_awaddr_reg[5] 
       (.C(axil_aclk),
        .CE(axi_awready0),
        .D(axil_awaddr[3]),
        .Q(reg_wr_adr[5]),
        .R(p_0_in));
  FDRE #(
    .INIT(1'b0)) 
    \axi_awaddr_reg[6] 
       (.C(axil_aclk),
        .CE(axi_awready0),
        .D(axil_awaddr[4]),
        .Q(reg_wr_adr[6]),
        .R(p_0_in));
  FDRE #(
    .INIT(1'b0)) 
    \axi_awaddr_reg[7] 
       (.C(axil_aclk),
        .CE(axi_awready0),
        .D(axil_awaddr[5]),
        .Q(reg_wr_adr[7]),
        .R(p_0_in));
  LUT1 #(
    .INIT(2'h1)) 
    axi_awready_i_1
       (.I0(axil_aresetn),
        .O(p_0_in));
  LUT4 #(
    .INIT(16'h0080)) 
    axi_awready_i_2
       (.I0(aw_en_reg_n_0),
        .I1(axil_wvalid),
        .I2(axil_awvalid),
        .I3(axil_awready),
        .O(axi_awready0));
  FDRE #(
    .INIT(1'b0)) 
    axi_awready_reg
       (.C(axil_aclk),
        .CE(1'b1),
        .D(axi_awready0),
        .Q(axil_awready),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'h55555555C0000000)) 
    axi_bvalid_i_1
       (.I0(axil_bready),
        .I1(axil_wready),
        .I2(axil_awvalid),
        .I3(axil_wvalid),
        .I4(axil_awready),
        .I5(axil_bvalid),
        .O(axi_bvalid_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    axi_bvalid_reg
       (.C(axil_aclk),
        .CE(1'b1),
        .D(axi_bvalid_i_1_n_0),
        .Q(axil_bvalid),
        .R(p_0_in));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'h0B000800)) 
    \axi_rdata[0]_i_1 
       (.I0(reg0_o),
        .I1(reg_rd_adr[6]),
        .I2(reg_rd_adr[2]),
        .I3(\axi_rdata[0]_i_2_n_0 ),
        .I4(reg0_i[0]),
        .O(reg_rd_dat[0]));
  LUT4 #(
    .INIT(16'h0001)) 
    \axi_rdata[0]_i_2 
       (.I0(reg_rd_adr[7]),
        .I1(reg_rd_adr[5]),
        .I2(reg_rd_adr[4]),
        .I3(reg_rd_adr[3]),
        .O(\axi_rdata[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    \axi_rdata[10]_i_1 
       (.I0(axil_rvalid),
        .I1(axil_arvalid),
        .I2(axil_arready),
        .O(\axi_rdata[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \axi_rdata[10]_i_2 
       (.I0(reg1_i[10]),
        .I1(\axi_rdata[10]_i_3_n_0 ),
        .I2(reg0_i[10]),
        .I3(\axi_rdata[10]_i_4_n_0 ),
        .O(reg_rd_dat[10]));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \axi_rdata[10]_i_3 
       (.I0(reg_rd_adr[6]),
        .I1(reg_rd_adr[7]),
        .I2(reg_rd_adr[5]),
        .I3(reg_rd_adr[4]),
        .I4(reg_rd_adr[3]),
        .I5(reg_rd_adr[2]),
        .O(\axi_rdata[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \axi_rdata[10]_i_4 
       (.I0(reg_rd_adr[6]),
        .I1(reg_rd_adr[7]),
        .I2(reg_rd_adr[5]),
        .I3(reg_rd_adr[4]),
        .I4(reg_rd_adr[3]),
        .I5(reg_rd_adr[2]),
        .O(\axi_rdata[10]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \axi_rdata[1]_i_1 
       (.I0(reg1_i[1]),
        .I1(\axi_rdata[10]_i_3_n_0 ),
        .I2(reg0_i[1]),
        .I3(\axi_rdata[10]_i_4_n_0 ),
        .O(reg_rd_dat[1]));
  LUT4 #(
    .INIT(16'hF888)) 
    \axi_rdata[2]_i_1 
       (.I0(reg1_i[2]),
        .I1(\axi_rdata[10]_i_3_n_0 ),
        .I2(reg0_i[2]),
        .I3(\axi_rdata[10]_i_4_n_0 ),
        .O(reg_rd_dat[2]));
  LUT4 #(
    .INIT(16'hF888)) 
    \axi_rdata[3]_i_1 
       (.I0(reg1_i[3]),
        .I1(\axi_rdata[10]_i_3_n_0 ),
        .I2(reg0_i[3]),
        .I3(\axi_rdata[10]_i_4_n_0 ),
        .O(reg_rd_dat[3]));
  LUT4 #(
    .INIT(16'hF888)) 
    \axi_rdata[4]_i_1 
       (.I0(reg1_i[4]),
        .I1(\axi_rdata[10]_i_3_n_0 ),
        .I2(reg0_i[4]),
        .I3(\axi_rdata[10]_i_4_n_0 ),
        .O(reg_rd_dat[4]));
  LUT4 #(
    .INIT(16'hF888)) 
    \axi_rdata[5]_i_1 
       (.I0(reg1_i[5]),
        .I1(\axi_rdata[10]_i_3_n_0 ),
        .I2(reg0_i[5]),
        .I3(\axi_rdata[10]_i_4_n_0 ),
        .O(reg_rd_dat[5]));
  LUT4 #(
    .INIT(16'hF888)) 
    \axi_rdata[6]_i_1 
       (.I0(reg1_i[6]),
        .I1(\axi_rdata[10]_i_3_n_0 ),
        .I2(reg0_i[6]),
        .I3(\axi_rdata[10]_i_4_n_0 ),
        .O(reg_rd_dat[6]));
  LUT4 #(
    .INIT(16'hF888)) 
    \axi_rdata[7]_i_1 
       (.I0(reg1_i[7]),
        .I1(\axi_rdata[10]_i_3_n_0 ),
        .I2(reg0_i[7]),
        .I3(\axi_rdata[10]_i_4_n_0 ),
        .O(reg_rd_dat[7]));
  LUT4 #(
    .INIT(16'hF888)) 
    \axi_rdata[8]_i_1 
       (.I0(reg1_i[8]),
        .I1(\axi_rdata[10]_i_3_n_0 ),
        .I2(reg0_i[8]),
        .I3(\axi_rdata[10]_i_4_n_0 ),
        .O(reg_rd_dat[8]));
  LUT4 #(
    .INIT(16'hF888)) 
    \axi_rdata[9]_i_1 
       (.I0(reg1_i[9]),
        .I1(\axi_rdata[10]_i_3_n_0 ),
        .I2(reg0_i[9]),
        .I3(\axi_rdata[10]_i_4_n_0 ),
        .O(reg_rd_dat[9]));
  FDRE #(
    .INIT(1'b0)) 
    \axi_rdata_reg[0] 
       (.C(axil_aclk),
        .CE(1'b1),
        .D(reg_rd_dat[0]),
        .Q(axil_rdata[0]),
        .R(\axi_rdata[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \axi_rdata_reg[10] 
       (.C(axil_aclk),
        .CE(1'b1),
        .D(reg_rd_dat[10]),
        .Q(axil_rdata[10]),
        .R(\axi_rdata[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \axi_rdata_reg[1] 
       (.C(axil_aclk),
        .CE(1'b1),
        .D(reg_rd_dat[1]),
        .Q(axil_rdata[1]),
        .R(\axi_rdata[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \axi_rdata_reg[2] 
       (.C(axil_aclk),
        .CE(1'b1),
        .D(reg_rd_dat[2]),
        .Q(axil_rdata[2]),
        .R(\axi_rdata[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \axi_rdata_reg[3] 
       (.C(axil_aclk),
        .CE(1'b1),
        .D(reg_rd_dat[3]),
        .Q(axil_rdata[3]),
        .R(\axi_rdata[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \axi_rdata_reg[4] 
       (.C(axil_aclk),
        .CE(1'b1),
        .D(reg_rd_dat[4]),
        .Q(axil_rdata[4]),
        .R(\axi_rdata[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \axi_rdata_reg[5] 
       (.C(axil_aclk),
        .CE(1'b1),
        .D(reg_rd_dat[5]),
        .Q(axil_rdata[5]),
        .R(\axi_rdata[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \axi_rdata_reg[6] 
       (.C(axil_aclk),
        .CE(1'b1),
        .D(reg_rd_dat[6]),
        .Q(axil_rdata[6]),
        .R(\axi_rdata[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \axi_rdata_reg[7] 
       (.C(axil_aclk),
        .CE(1'b1),
        .D(reg_rd_dat[7]),
        .Q(axil_rdata[7]),
        .R(\axi_rdata[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \axi_rdata_reg[8] 
       (.C(axil_aclk),
        .CE(1'b1),
        .D(reg_rd_dat[8]),
        .Q(axil_rdata[8]),
        .R(\axi_rdata[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \axi_rdata_reg[9] 
       (.C(axil_aclk),
        .CE(1'b1),
        .D(reg_rd_dat[9]),
        .Q(axil_rdata[9]),
        .R(\axi_rdata[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h08F8)) 
    axi_rvalid_i_1
       (.I0(axil_arvalid),
        .I1(axil_arready),
        .I2(axil_rvalid),
        .I3(axil_rready),
        .O(axi_rvalid_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    axi_rvalid_reg
       (.C(axil_aclk),
        .CE(1'b1),
        .D(axi_rvalid_i_1_n_0),
        .Q(axil_rvalid),
        .R(p_0_in));
  LUT4 #(
    .INIT(16'h0080)) 
    axi_wready_i_1
       (.I0(aw_en_reg_n_0),
        .I1(axil_wvalid),
        .I2(axil_awvalid),
        .I3(axil_wready),
        .O(axi_wready0));
  FDRE #(
    .INIT(1'b0)) 
    axi_wready_reg
       (.C(axil_aclk),
        .CE(1'b1),
        .D(axi_wready0),
        .Q(axil_wready),
        .R(p_0_in));
  LUT4 #(
    .INIT(16'hFB08)) 
    \regs_out[0][0]_i_1 
       (.I0(axil_wdata),
        .I1(\regs_out[0][0]_i_2_n_0 ),
        .I2(reg_wr_adr[7]),
        .I3(reg0_o),
        .O(axil_wdata_0_sn_1));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \regs_out[0][0]_i_2 
       (.I0(reg_wr_adr[2]),
        .I1(reg_wr_adr[4]),
        .I2(\regs_out[0][0]_i_3_n_0 ),
        .I3(reg_wr_adr[3]),
        .I4(reg_wr_adr[5]),
        .I5(reg_wr_adr[6]),
        .O(\regs_out[0][0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \regs_out[0][0]_i_3 
       (.I0(axil_awready),
        .I1(axil_wvalid),
        .I2(axil_awvalid),
        .I3(axil_wready),
        .O(\regs_out[0][0]_i_3_n_0 ));
endmodule

(* ORIG_REF_NAME = "ComBlock" *) 
module design_1_comblock_0_0_ComBlock
   (reg0_o,
    \regs_out_reg[0][0]_0 ,
    axil_aclk);
  output [0:0]reg0_o;
  input \regs_out_reg[0][0]_0 ;
  input axil_aclk;

  wire axil_aclk;
  wire [0:0]reg0_o;
  wire \regs_out_reg[0][0]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \regs_out_reg[0][0] 
       (.C(axil_aclk),
        .CE(1'b1),
        .D(\regs_out_reg[0][0]_0 ),
        .Q(reg0_o),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_comblock" *) 
module design_1_comblock_0_0_axi_comblock
   (axil_awready,
    axil_wready,
    axil_arready,
    axil_rdata,
    axil_rvalid,
    reg0_o,
    axil_bvalid,
    axil_aclk,
    axil_awaddr,
    axil_araddr,
    axil_arvalid,
    axil_wvalid,
    axil_awvalid,
    reg1_i,
    reg0_i,
    axil_aresetn,
    axil_bready,
    axil_rready,
    axil_wdata);
  output axil_awready;
  output axil_wready;
  output axil_arready;
  output [10:0]axil_rdata;
  output axil_rvalid;
  output [0:0]reg0_o;
  output axil_bvalid;
  input axil_aclk;
  input [5:0]axil_awaddr;
  input [5:0]axil_araddr;
  input axil_arvalid;
  input axil_wvalid;
  input axil_awvalid;
  input [10:0]reg1_i;
  input [10:0]reg0_i;
  input axil_aresetn;
  input axil_bready;
  input axil_rready;
  input [0:0]axil_wdata;

  wire AXIL_inst_n_5;
  wire axil_aclk;
  wire [5:0]axil_araddr;
  wire axil_aresetn;
  wire axil_arready;
  wire axil_arvalid;
  wire [5:0]axil_awaddr;
  wire axil_awready;
  wire axil_awvalid;
  wire axil_bready;
  wire axil_bvalid;
  wire [10:0]axil_rdata;
  wire axil_rready;
  wire axil_rvalid;
  wire [0:0]axil_wdata;
  wire axil_wready;
  wire axil_wvalid;
  wire [10:0]reg0_i;
  wire [0:0]reg0_o;
  wire [10:0]reg1_i;
  wire [0:0]NLW_AXIL_inst_reg1_i_UNCONNECTED;

  design_1_comblock_0_0_AXIL AXIL_inst
       (.axil_aclk(axil_aclk),
        .axil_araddr(axil_araddr),
        .axil_aresetn(axil_aresetn),
        .axil_arready(axil_arready),
        .axil_arvalid(axil_arvalid),
        .axil_awaddr(axil_awaddr),
        .axil_awready(axil_awready),
        .axil_awvalid(axil_awvalid),
        .axil_bready(axil_bready),
        .axil_bvalid(axil_bvalid),
        .axil_rdata(axil_rdata),
        .axil_rready(axil_rready),
        .axil_rvalid(axil_rvalid),
        .axil_wdata(axil_wdata),
        .axil_wdata_0_sp_1(AXIL_inst_n_5),
        .axil_wready(axil_wready),
        .axil_wvalid(axil_wvalid),
        .reg0_i(reg0_i),
        .reg0_o(reg0_o),
        .reg1_i({reg1_i[10:1],NLW_AXIL_inst_reg1_i_UNCONNECTED[0]}));
  design_1_comblock_0_0_ComBlock comblock_i
       (.axil_aclk(axil_aclk),
        .reg0_o(reg0_o),
        .\regs_out_reg[0][0]_0 (AXIL_inst_n_5));
endmodule

(* CHECK_LICENSE_TYPE = "design_1_processing_system7_0_0,processing_system7_v5_5_processing_system7,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "processing_system7_v5_5_processing_system7,Vivado 2019.2" *) 
module design_1_processing_system7_0_0
   (TTC0_WAVE0_OUT,
    TTC0_WAVE1_OUT,
    TTC0_WAVE2_OUT,
    USB0_PORT_INDCTL,
    USB0_VBUS_PWRSELECT,
    USB0_VBUS_PWRFAULT,
    M_AXI_GP0_ARVALID,
    M_AXI_GP0_AWVALID,
    M_AXI_GP0_BREADY,
    M_AXI_GP0_RREADY,
    M_AXI_GP0_WLAST,
    M_AXI_GP0_WVALID,
    M_AXI_GP0_ARID,
    M_AXI_GP0_AWID,
    M_AXI_GP0_WID,
    M_AXI_GP0_ARBURST,
    M_AXI_GP0_ARLOCK,
    M_AXI_GP0_ARSIZE,
    M_AXI_GP0_AWBURST,
    M_AXI_GP0_AWLOCK,
    M_AXI_GP0_AWSIZE,
    M_AXI_GP0_ARPROT,
    M_AXI_GP0_AWPROT,
    M_AXI_GP0_ARADDR,
    M_AXI_GP0_AWADDR,
    M_AXI_GP0_WDATA,
    M_AXI_GP0_ARCACHE,
    M_AXI_GP0_ARLEN,
    M_AXI_GP0_ARQOS,
    M_AXI_GP0_AWCACHE,
    M_AXI_GP0_AWLEN,
    M_AXI_GP0_AWQOS,
    M_AXI_GP0_WSTRB,
    M_AXI_GP0_ACLK,
    M_AXI_GP0_ARREADY,
    M_AXI_GP0_AWREADY,
    M_AXI_GP0_BVALID,
    M_AXI_GP0_RLAST,
    M_AXI_GP0_RVALID,
    M_AXI_GP0_WREADY,
    M_AXI_GP0_BID,
    M_AXI_GP0_RID,
    M_AXI_GP0_BRESP,
    M_AXI_GP0_RRESP,
    M_AXI_GP0_RDATA,
    FCLK_CLK0,
    FCLK_RESET0_N,
    MIO,
    DDR_CAS_n,
    DDR_CKE,
    DDR_Clk_n,
    DDR_Clk,
    DDR_CS_n,
    DDR_DRSTB,
    DDR_ODT,
    DDR_RAS_n,
    DDR_WEB,
    DDR_BankAddr,
    DDR_Addr,
    DDR_VRN,
    DDR_VRP,
    DDR_DM,
    DDR_DQ,
    DDR_DQS_n,
    DDR_DQS,
    PS_SRSTB,
    PS_CLK,
    PS_PORB);
  output TTC0_WAVE0_OUT;
  output TTC0_WAVE1_OUT;
  output TTC0_WAVE2_OUT;
  (* x_interface_info = "xilinx.com:display_processing_system7:usbctrl:1.0 USBIND_0 PORT_INDCTL" *) output [1:0]USB0_PORT_INDCTL;
  (* x_interface_info = "xilinx.com:display_processing_system7:usbctrl:1.0 USBIND_0 VBUS_PWRSELECT" *) output USB0_VBUS_PWRSELECT;
  (* x_interface_info = "xilinx.com:display_processing_system7:usbctrl:1.0 USBIND_0 VBUS_PWRFAULT" *) input USB0_VBUS_PWRFAULT;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARVALID" *) output M_AXI_GP0_ARVALID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWVALID" *) output M_AXI_GP0_AWVALID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 BREADY" *) output M_AXI_GP0_BREADY;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 RREADY" *) output M_AXI_GP0_RREADY;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 WLAST" *) output M_AXI_GP0_WLAST;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 WVALID" *) output M_AXI_GP0_WVALID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARID" *) output [11:0]M_AXI_GP0_ARID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWID" *) output [11:0]M_AXI_GP0_AWID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 WID" *) output [11:0]M_AXI_GP0_WID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARBURST" *) output [1:0]M_AXI_GP0_ARBURST;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARLOCK" *) output [1:0]M_AXI_GP0_ARLOCK;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARSIZE" *) output [2:0]M_AXI_GP0_ARSIZE;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWBURST" *) output [1:0]M_AXI_GP0_AWBURST;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWLOCK" *) output [1:0]M_AXI_GP0_AWLOCK;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWSIZE" *) output [2:0]M_AXI_GP0_AWSIZE;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARPROT" *) output [2:0]M_AXI_GP0_ARPROT;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWPROT" *) output [2:0]M_AXI_GP0_AWPROT;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARADDR" *) output [31:0]M_AXI_GP0_ARADDR;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWADDR" *) output [31:0]M_AXI_GP0_AWADDR;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 WDATA" *) output [31:0]M_AXI_GP0_WDATA;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARCACHE" *) output [3:0]M_AXI_GP0_ARCACHE;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARLEN" *) output [3:0]M_AXI_GP0_ARLEN;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARQOS" *) output [3:0]M_AXI_GP0_ARQOS;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWCACHE" *) output [3:0]M_AXI_GP0_AWCACHE;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWLEN" *) output [3:0]M_AXI_GP0_AWLEN;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWQOS" *) output [3:0]M_AXI_GP0_AWQOS;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 WSTRB" *) output [3:0]M_AXI_GP0_WSTRB;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 M_AXI_GP0_ACLK CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME M_AXI_GP0_ACLK, ASSOCIATED_BUSIF M_AXI_GP0, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, INSERT_VIP 0" *) input M_AXI_GP0_ACLK;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARREADY" *) input M_AXI_GP0_ARREADY;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWREADY" *) input M_AXI_GP0_AWREADY;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 BVALID" *) input M_AXI_GP0_BVALID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 RLAST" *) input M_AXI_GP0_RLAST;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 RVALID" *) input M_AXI_GP0_RVALID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 WREADY" *) input M_AXI_GP0_WREADY;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 BID" *) input [11:0]M_AXI_GP0_BID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 RID" *) input [11:0]M_AXI_GP0_RID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 BRESP" *) input [1:0]M_AXI_GP0_BRESP;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 RRESP" *) input [1:0]M_AXI_GP0_RRESP;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_GP0 RDATA" *) (* x_interface_parameter = "XIL_INTERFACENAME M_AXI_GP0, SUPPORTS_NARROW_BURST 0, NUM_WRITE_OUTSTANDING 8, NUM_READ_OUTSTANDING 8, DATA_WIDTH 32, PROTOCOL AXI3, FREQ_HZ 100000000, ID_WIDTH 12, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, MAX_BURST_LENGTH 16, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 4, NUM_WRITE_THREADS 4, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input [31:0]M_AXI_GP0_RDATA;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 FCLK_CLK0 CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME FCLK_CLK0, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, INSERT_VIP 0" *) output FCLK_CLK0;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 FCLK_RESET0_N RST" *) (* x_interface_parameter = "XIL_INTERFACENAME FCLK_RESET0_N, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) output FCLK_RESET0_N;
  (* x_interface_info = "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO MIO" *) inout [53:0]MIO;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR CAS_N" *) inout DDR_CAS_n;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR CKE" *) inout DDR_CKE;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR CK_N" *) inout DDR_Clk_n;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR CK_P" *) inout DDR_Clk;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR CS_N" *) inout DDR_CS_n;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR RESET_N" *) inout DDR_DRSTB;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR ODT" *) inout DDR_ODT;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR RAS_N" *) inout DDR_RAS_n;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR WE_N" *) inout DDR_WEB;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR BA" *) inout [2:0]DDR_BankAddr;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR ADDR" *) inout [14:0]DDR_Addr;
  (* x_interface_info = "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO DDR_VRN" *) inout DDR_VRN;
  (* x_interface_info = "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO DDR_VRP" *) inout DDR_VRP;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR DM" *) inout [3:0]DDR_DM;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR DQ" *) inout [31:0]DDR_DQ;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR DQS_N" *) inout [3:0]DDR_DQS_n;
  (* x_interface_info = "xilinx.com:interface:ddrx:1.0 DDR DQS_P" *) (* x_interface_parameter = "XIL_INTERFACENAME DDR, CAN_DEBUG false, TIMEPERIOD_PS 1250, MEMORY_TYPE COMPONENTS, DATA_WIDTH 8, CS_ENABLED true, DATA_MASK_ENABLED true, SLOT Single, MEM_ADDR_MAP ROW_COLUMN_BANK, BURST_LENGTH 8, AXI_ARBITRATION_SCHEME TDM, CAS_LATENCY 11, CAS_WRITE_LATENCY 11" *) inout [3:0]DDR_DQS;
  (* x_interface_info = "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO PS_SRSTB" *) inout PS_SRSTB;
  (* x_interface_info = "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO PS_CLK" *) inout PS_CLK;
  (* x_interface_info = "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO PS_PORB" *) (* x_interface_parameter = "XIL_INTERFACENAME FIXED_IO, CAN_DEBUG false" *) inout PS_PORB;

  wire [14:0]DDR_Addr;
  wire [2:0]DDR_BankAddr;
  wire DDR_CAS_n;
  wire DDR_CKE;
  wire DDR_CS_n;
  wire DDR_Clk;
  wire DDR_Clk_n;
  wire [3:0]DDR_DM;
  wire [31:0]DDR_DQ;
  wire [3:0]DDR_DQS;
  wire [3:0]DDR_DQS_n;
  wire DDR_DRSTB;
  wire DDR_ODT;
  wire DDR_RAS_n;
  wire DDR_VRN;
  wire DDR_VRP;
  wire DDR_WEB;
  wire FCLK_CLK0;
  wire FCLK_RESET0_N;
  wire [53:0]MIO;
  wire M_AXI_GP0_ACLK;
  wire [31:0]M_AXI_GP0_ARADDR;
  wire [1:0]M_AXI_GP0_ARBURST;
  wire [11:0]M_AXI_GP0_ARID;
  wire [3:0]M_AXI_GP0_ARLEN;
  wire M_AXI_GP0_ARREADY;
  wire [2:0]M_AXI_GP0_ARSIZE;
  wire M_AXI_GP0_ARVALID;
  wire [31:0]M_AXI_GP0_AWADDR;
  wire [1:0]M_AXI_GP0_AWBURST;
  wire [11:0]M_AXI_GP0_AWID;
  wire [3:0]M_AXI_GP0_AWLEN;
  wire M_AXI_GP0_AWREADY;
  wire [2:0]M_AXI_GP0_AWSIZE;
  wire M_AXI_GP0_AWVALID;
  wire [11:0]M_AXI_GP0_BID;
  wire M_AXI_GP0_BREADY;
  wire [1:0]M_AXI_GP0_BRESP;
  wire M_AXI_GP0_BVALID;
  wire [31:0]M_AXI_GP0_RDATA;
  wire [11:0]M_AXI_GP0_RID;
  wire M_AXI_GP0_RLAST;
  wire M_AXI_GP0_RREADY;
  wire [1:0]M_AXI_GP0_RRESP;
  wire M_AXI_GP0_RVALID;
  wire [31:0]M_AXI_GP0_WDATA;
  wire M_AXI_GP0_WLAST;
  wire M_AXI_GP0_WREADY;
  wire [3:0]M_AXI_GP0_WSTRB;
  wire M_AXI_GP0_WVALID;
  wire PS_CLK;
  wire PS_PORB;
  wire PS_SRSTB;
  wire USB0_VBUS_PWRFAULT;
  wire NLW_inst_CAN0_PHY_TX_UNCONNECTED;
  wire NLW_inst_CAN1_PHY_TX_UNCONNECTED;
  wire NLW_inst_DMA0_DAVALID_UNCONNECTED;
  wire NLW_inst_DMA0_DRREADY_UNCONNECTED;
  wire NLW_inst_DMA0_RSTN_UNCONNECTED;
  wire NLW_inst_DMA1_DAVALID_UNCONNECTED;
  wire NLW_inst_DMA1_DRREADY_UNCONNECTED;
  wire NLW_inst_DMA1_RSTN_UNCONNECTED;
  wire NLW_inst_DMA2_DAVALID_UNCONNECTED;
  wire NLW_inst_DMA2_DRREADY_UNCONNECTED;
  wire NLW_inst_DMA2_RSTN_UNCONNECTED;
  wire NLW_inst_DMA3_DAVALID_UNCONNECTED;
  wire NLW_inst_DMA3_DRREADY_UNCONNECTED;
  wire NLW_inst_DMA3_RSTN_UNCONNECTED;
  wire NLW_inst_ENET0_GMII_COL_UNCONNECTED;
  wire NLW_inst_ENET0_GMII_CRS_UNCONNECTED;
  wire NLW_inst_ENET0_GMII_RX_DV_UNCONNECTED;
  wire NLW_inst_ENET0_GMII_RX_ER_UNCONNECTED;
  wire NLW_inst_ENET0_GMII_TX_EN_UNCONNECTED;
  wire NLW_inst_ENET0_GMII_TX_ER_UNCONNECTED;
  wire NLW_inst_ENET0_MDIO_MDC_UNCONNECTED;
  wire NLW_inst_ENET0_MDIO_O_UNCONNECTED;
  wire NLW_inst_ENET0_MDIO_T_UNCONNECTED;
  wire NLW_inst_ENET0_PTP_DELAY_REQ_RX_UNCONNECTED;
  wire NLW_inst_ENET0_PTP_DELAY_REQ_TX_UNCONNECTED;
  wire NLW_inst_ENET0_PTP_PDELAY_REQ_RX_UNCONNECTED;
  wire NLW_inst_ENET0_PTP_PDELAY_REQ_TX_UNCONNECTED;
  wire NLW_inst_ENET0_PTP_PDELAY_RESP_RX_UNCONNECTED;
  wire NLW_inst_ENET0_PTP_PDELAY_RESP_TX_UNCONNECTED;
  wire NLW_inst_ENET0_PTP_SYNC_FRAME_RX_UNCONNECTED;
  wire NLW_inst_ENET0_PTP_SYNC_FRAME_TX_UNCONNECTED;
  wire NLW_inst_ENET0_SOF_RX_UNCONNECTED;
  wire NLW_inst_ENET0_SOF_TX_UNCONNECTED;
  wire NLW_inst_ENET1_GMII_COL_UNCONNECTED;
  wire NLW_inst_ENET1_GMII_CRS_UNCONNECTED;
  wire NLW_inst_ENET1_GMII_RX_DV_UNCONNECTED;
  wire NLW_inst_ENET1_GMII_RX_ER_UNCONNECTED;
  wire NLW_inst_ENET1_GMII_TX_EN_UNCONNECTED;
  wire NLW_inst_ENET1_GMII_TX_ER_UNCONNECTED;
  wire NLW_inst_ENET1_MDIO_MDC_UNCONNECTED;
  wire NLW_inst_ENET1_MDIO_O_UNCONNECTED;
  wire NLW_inst_ENET1_MDIO_T_UNCONNECTED;
  wire NLW_inst_ENET1_PTP_DELAY_REQ_RX_UNCONNECTED;
  wire NLW_inst_ENET1_PTP_DELAY_REQ_TX_UNCONNECTED;
  wire NLW_inst_ENET1_PTP_PDELAY_REQ_RX_UNCONNECTED;
  wire NLW_inst_ENET1_PTP_PDELAY_REQ_TX_UNCONNECTED;
  wire NLW_inst_ENET1_PTP_PDELAY_RESP_RX_UNCONNECTED;
  wire NLW_inst_ENET1_PTP_PDELAY_RESP_TX_UNCONNECTED;
  wire NLW_inst_ENET1_PTP_SYNC_FRAME_RX_UNCONNECTED;
  wire NLW_inst_ENET1_PTP_SYNC_FRAME_TX_UNCONNECTED;
  wire NLW_inst_ENET1_SOF_RX_UNCONNECTED;
  wire NLW_inst_ENET1_SOF_TX_UNCONNECTED;
  wire NLW_inst_EVENT_EVENTO_UNCONNECTED;
  wire NLW_inst_FCLK_CLK1_UNCONNECTED;
  wire NLW_inst_FCLK_CLK2_UNCONNECTED;
  wire NLW_inst_FCLK_CLK3_UNCONNECTED;
  wire NLW_inst_FCLK_CLKTRIG0_N_UNCONNECTED;
  wire NLW_inst_FCLK_CLKTRIG1_N_UNCONNECTED;
  wire NLW_inst_FCLK_CLKTRIG2_N_UNCONNECTED;
  wire NLW_inst_FCLK_CLKTRIG3_N_UNCONNECTED;
  wire NLW_inst_FCLK_RESET1_N_UNCONNECTED;
  wire NLW_inst_FCLK_RESET2_N_UNCONNECTED;
  wire NLW_inst_FCLK_RESET3_N_UNCONNECTED;
  wire NLW_inst_FTMD_TRACEIN_VALID_UNCONNECTED;
  wire NLW_inst_FTMT_F2P_TRIGACK_0_UNCONNECTED;
  wire NLW_inst_FTMT_F2P_TRIGACK_1_UNCONNECTED;
  wire NLW_inst_FTMT_F2P_TRIGACK_2_UNCONNECTED;
  wire NLW_inst_FTMT_F2P_TRIGACK_3_UNCONNECTED;
  wire NLW_inst_FTMT_P2F_TRIG_0_UNCONNECTED;
  wire NLW_inst_FTMT_P2F_TRIG_1_UNCONNECTED;
  wire NLW_inst_FTMT_P2F_TRIG_2_UNCONNECTED;
  wire NLW_inst_FTMT_P2F_TRIG_3_UNCONNECTED;
  wire NLW_inst_I2C0_SCL_O_UNCONNECTED;
  wire NLW_inst_I2C0_SCL_T_UNCONNECTED;
  wire NLW_inst_I2C0_SDA_O_UNCONNECTED;
  wire NLW_inst_I2C0_SDA_T_UNCONNECTED;
  wire NLW_inst_I2C1_SCL_O_UNCONNECTED;
  wire NLW_inst_I2C1_SCL_T_UNCONNECTED;
  wire NLW_inst_I2C1_SDA_O_UNCONNECTED;
  wire NLW_inst_I2C1_SDA_T_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_CAN0_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_CAN1_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_CTI_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_DMAC0_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_DMAC1_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_DMAC2_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_DMAC3_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_DMAC4_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_DMAC5_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_DMAC6_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_DMAC7_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_DMAC_ABORT_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_ENET0_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_ENET1_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_ENET_WAKE0_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_ENET_WAKE1_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_GPIO_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_I2C0_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_I2C1_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_QSPI_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_SDIO0_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_SDIO1_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_SMC_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_SPI0_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_SPI1_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_UART0_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_UART1_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_USB0_UNCONNECTED;
  wire NLW_inst_IRQ_P2F_USB1_UNCONNECTED;
  wire NLW_inst_M_AXI_GP0_ARESETN_UNCONNECTED;
  wire NLW_inst_M_AXI_GP1_ARESETN_UNCONNECTED;
  wire NLW_inst_M_AXI_GP1_ARVALID_UNCONNECTED;
  wire NLW_inst_M_AXI_GP1_AWVALID_UNCONNECTED;
  wire NLW_inst_M_AXI_GP1_BREADY_UNCONNECTED;
  wire NLW_inst_M_AXI_GP1_RREADY_UNCONNECTED;
  wire NLW_inst_M_AXI_GP1_WLAST_UNCONNECTED;
  wire NLW_inst_M_AXI_GP1_WVALID_UNCONNECTED;
  wire NLW_inst_PJTAG_TDO_UNCONNECTED;
  wire NLW_inst_SDIO0_BUSPOW_UNCONNECTED;
  wire NLW_inst_SDIO0_CLK_UNCONNECTED;
  wire NLW_inst_SDIO0_CMD_O_UNCONNECTED;
  wire NLW_inst_SDIO0_CMD_T_UNCONNECTED;
  wire NLW_inst_SDIO0_LED_UNCONNECTED;
  wire NLW_inst_SDIO1_BUSPOW_UNCONNECTED;
  wire NLW_inst_SDIO1_CLK_UNCONNECTED;
  wire NLW_inst_SDIO1_CMD_O_UNCONNECTED;
  wire NLW_inst_SDIO1_CMD_T_UNCONNECTED;
  wire NLW_inst_SDIO1_LED_UNCONNECTED;
  wire NLW_inst_SPI0_MISO_O_UNCONNECTED;
  wire NLW_inst_SPI0_MISO_T_UNCONNECTED;
  wire NLW_inst_SPI0_MOSI_O_UNCONNECTED;
  wire NLW_inst_SPI0_MOSI_T_UNCONNECTED;
  wire NLW_inst_SPI0_SCLK_O_UNCONNECTED;
  wire NLW_inst_SPI0_SCLK_T_UNCONNECTED;
  wire NLW_inst_SPI0_SS1_O_UNCONNECTED;
  wire NLW_inst_SPI0_SS2_O_UNCONNECTED;
  wire NLW_inst_SPI0_SS_O_UNCONNECTED;
  wire NLW_inst_SPI0_SS_T_UNCONNECTED;
  wire NLW_inst_SPI1_MISO_O_UNCONNECTED;
  wire NLW_inst_SPI1_MISO_T_UNCONNECTED;
  wire NLW_inst_SPI1_MOSI_O_UNCONNECTED;
  wire NLW_inst_SPI1_MOSI_T_UNCONNECTED;
  wire NLW_inst_SPI1_SCLK_O_UNCONNECTED;
  wire NLW_inst_SPI1_SCLK_T_UNCONNECTED;
  wire NLW_inst_SPI1_SS1_O_UNCONNECTED;
  wire NLW_inst_SPI1_SS2_O_UNCONNECTED;
  wire NLW_inst_SPI1_SS_O_UNCONNECTED;
  wire NLW_inst_SPI1_SS_T_UNCONNECTED;
  wire NLW_inst_S_AXI_ACP_ARESETN_UNCONNECTED;
  wire NLW_inst_S_AXI_ACP_ARREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_ACP_AWREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_ACP_BVALID_UNCONNECTED;
  wire NLW_inst_S_AXI_ACP_RLAST_UNCONNECTED;
  wire NLW_inst_S_AXI_ACP_RVALID_UNCONNECTED;
  wire NLW_inst_S_AXI_ACP_WREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_GP0_ARESETN_UNCONNECTED;
  wire NLW_inst_S_AXI_GP0_ARREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_GP0_AWREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_GP0_BVALID_UNCONNECTED;
  wire NLW_inst_S_AXI_GP0_RLAST_UNCONNECTED;
  wire NLW_inst_S_AXI_GP0_RVALID_UNCONNECTED;
  wire NLW_inst_S_AXI_GP0_WREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_GP1_ARESETN_UNCONNECTED;
  wire NLW_inst_S_AXI_GP1_ARREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_GP1_AWREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_GP1_BVALID_UNCONNECTED;
  wire NLW_inst_S_AXI_GP1_RLAST_UNCONNECTED;
  wire NLW_inst_S_AXI_GP1_RVALID_UNCONNECTED;
  wire NLW_inst_S_AXI_GP1_WREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_HP0_ARESETN_UNCONNECTED;
  wire NLW_inst_S_AXI_HP0_ARREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_HP0_AWREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_HP0_BVALID_UNCONNECTED;
  wire NLW_inst_S_AXI_HP0_RLAST_UNCONNECTED;
  wire NLW_inst_S_AXI_HP0_RVALID_UNCONNECTED;
  wire NLW_inst_S_AXI_HP0_WREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_HP1_ARESETN_UNCONNECTED;
  wire NLW_inst_S_AXI_HP1_ARREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_HP1_AWREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_HP1_BVALID_UNCONNECTED;
  wire NLW_inst_S_AXI_HP1_RLAST_UNCONNECTED;
  wire NLW_inst_S_AXI_HP1_RVALID_UNCONNECTED;
  wire NLW_inst_S_AXI_HP1_WREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_HP2_ARESETN_UNCONNECTED;
  wire NLW_inst_S_AXI_HP2_ARREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_HP2_AWREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_HP2_BVALID_UNCONNECTED;
  wire NLW_inst_S_AXI_HP2_RLAST_UNCONNECTED;
  wire NLW_inst_S_AXI_HP2_RVALID_UNCONNECTED;
  wire NLW_inst_S_AXI_HP2_WREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_HP3_ARESETN_UNCONNECTED;
  wire NLW_inst_S_AXI_HP3_ARREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_HP3_AWREADY_UNCONNECTED;
  wire NLW_inst_S_AXI_HP3_BVALID_UNCONNECTED;
  wire NLW_inst_S_AXI_HP3_RLAST_UNCONNECTED;
  wire NLW_inst_S_AXI_HP3_RVALID_UNCONNECTED;
  wire NLW_inst_S_AXI_HP3_WREADY_UNCONNECTED;
  wire NLW_inst_TRACE_CLK_OUT_UNCONNECTED;
  wire NLW_inst_TRACE_CTL_UNCONNECTED;
  wire NLW_inst_TTC0_WAVE0_OUT_UNCONNECTED;
  wire NLW_inst_TTC0_WAVE1_OUT_UNCONNECTED;
  wire NLW_inst_TTC0_WAVE2_OUT_UNCONNECTED;
  wire NLW_inst_TTC1_WAVE0_OUT_UNCONNECTED;
  wire NLW_inst_TTC1_WAVE1_OUT_UNCONNECTED;
  wire NLW_inst_TTC1_WAVE2_OUT_UNCONNECTED;
  wire NLW_inst_UART0_DTRN_UNCONNECTED;
  wire NLW_inst_UART0_RTSN_UNCONNECTED;
  wire NLW_inst_UART0_TX_UNCONNECTED;
  wire NLW_inst_UART1_DTRN_UNCONNECTED;
  wire NLW_inst_UART1_RTSN_UNCONNECTED;
  wire NLW_inst_UART1_TX_UNCONNECTED;
  wire NLW_inst_USB0_VBUS_PWRSELECT_UNCONNECTED;
  wire NLW_inst_USB1_VBUS_PWRSELECT_UNCONNECTED;
  wire NLW_inst_WDT_RST_OUT_UNCONNECTED;
  wire [1:0]NLW_inst_DMA0_DATYPE_UNCONNECTED;
  wire [1:0]NLW_inst_DMA1_DATYPE_UNCONNECTED;
  wire [1:0]NLW_inst_DMA2_DATYPE_UNCONNECTED;
  wire [1:0]NLW_inst_DMA3_DATYPE_UNCONNECTED;
  wire [7:0]NLW_inst_ENET0_GMII_RXD_UNCONNECTED;
  wire [7:0]NLW_inst_ENET0_GMII_TXD_UNCONNECTED;
  wire [7:0]NLW_inst_ENET1_GMII_RXD_UNCONNECTED;
  wire [7:0]NLW_inst_ENET1_GMII_TXD_UNCONNECTED;
  wire [1:0]NLW_inst_EVENT_STANDBYWFE_UNCONNECTED;
  wire [1:0]NLW_inst_EVENT_STANDBYWFI_UNCONNECTED;
  wire [3:0]NLW_inst_FTMD_TRACEIN_ATID_UNCONNECTED;
  wire [31:0]NLW_inst_FTMD_TRACEIN_DATA_UNCONNECTED;
  wire [31:0]NLW_inst_FTMT_P2F_DEBUG_UNCONNECTED;
  wire [63:0]NLW_inst_GPIO_O_UNCONNECTED;
  wire [63:0]NLW_inst_GPIO_T_UNCONNECTED;
  wire [15:8]NLW_inst_M_AXI_GP0_ARADDR_UNCONNECTED;
  wire [1:1]NLW_inst_M_AXI_GP0_ARBURST_UNCONNECTED;
  wire [3:0]NLW_inst_M_AXI_GP0_ARCACHE_UNCONNECTED;
  wire [1:0]NLW_inst_M_AXI_GP0_ARLOCK_UNCONNECTED;
  wire [2:0]NLW_inst_M_AXI_GP0_ARPROT_UNCONNECTED;
  wire [3:0]NLW_inst_M_AXI_GP0_ARQOS_UNCONNECTED;
  wire [2:2]NLW_inst_M_AXI_GP0_ARSIZE_UNCONNECTED;
  wire [15:8]NLW_inst_M_AXI_GP0_AWADDR_UNCONNECTED;
  wire [1:1]NLW_inst_M_AXI_GP0_AWBURST_UNCONNECTED;
  wire [3:0]NLW_inst_M_AXI_GP0_AWCACHE_UNCONNECTED;
  wire [1:0]NLW_inst_M_AXI_GP0_AWLOCK_UNCONNECTED;
  wire [2:0]NLW_inst_M_AXI_GP0_AWPROT_UNCONNECTED;
  wire [3:0]NLW_inst_M_AXI_GP0_AWQOS_UNCONNECTED;
  wire [2:2]NLW_inst_M_AXI_GP0_AWSIZE_UNCONNECTED;
  wire [31:1]NLW_inst_M_AXI_GP0_WDATA_UNCONNECTED;
  wire [11:0]NLW_inst_M_AXI_GP0_WID_UNCONNECTED;
  wire [31:0]NLW_inst_M_AXI_GP1_ARADDR_UNCONNECTED;
  wire [1:0]NLW_inst_M_AXI_GP1_ARBURST_UNCONNECTED;
  wire [3:0]NLW_inst_M_AXI_GP1_ARCACHE_UNCONNECTED;
  wire [11:0]NLW_inst_M_AXI_GP1_ARID_UNCONNECTED;
  wire [3:0]NLW_inst_M_AXI_GP1_ARLEN_UNCONNECTED;
  wire [1:0]NLW_inst_M_AXI_GP1_ARLOCK_UNCONNECTED;
  wire [2:0]NLW_inst_M_AXI_GP1_ARPROT_UNCONNECTED;
  wire [3:0]NLW_inst_M_AXI_GP1_ARQOS_UNCONNECTED;
  wire [2:0]NLW_inst_M_AXI_GP1_ARSIZE_UNCONNECTED;
  wire [31:0]NLW_inst_M_AXI_GP1_AWADDR_UNCONNECTED;
  wire [1:0]NLW_inst_M_AXI_GP1_AWBURST_UNCONNECTED;
  wire [3:0]NLW_inst_M_AXI_GP1_AWCACHE_UNCONNECTED;
  wire [11:0]NLW_inst_M_AXI_GP1_AWID_UNCONNECTED;
  wire [3:0]NLW_inst_M_AXI_GP1_AWLEN_UNCONNECTED;
  wire [1:0]NLW_inst_M_AXI_GP1_AWLOCK_UNCONNECTED;
  wire [2:0]NLW_inst_M_AXI_GP1_AWPROT_UNCONNECTED;
  wire [3:0]NLW_inst_M_AXI_GP1_AWQOS_UNCONNECTED;
  wire [2:0]NLW_inst_M_AXI_GP1_AWSIZE_UNCONNECTED;
  wire [31:0]NLW_inst_M_AXI_GP1_WDATA_UNCONNECTED;
  wire [11:0]NLW_inst_M_AXI_GP1_WID_UNCONNECTED;
  wire [3:0]NLW_inst_M_AXI_GP1_WSTRB_UNCONNECTED;
  wire [2:0]NLW_inst_SDIO0_BUSVOLT_UNCONNECTED;
  wire [3:0]NLW_inst_SDIO0_DATA_O_UNCONNECTED;
  wire [3:0]NLW_inst_SDIO0_DATA_T_UNCONNECTED;
  wire [2:0]NLW_inst_SDIO1_BUSVOLT_UNCONNECTED;
  wire [3:0]NLW_inst_SDIO1_DATA_O_UNCONNECTED;
  wire [3:0]NLW_inst_SDIO1_DATA_T_UNCONNECTED;
  wire [2:2]NLW_inst_S_AXI_ACP_ARSIZE_UNCONNECTED;
  wire [2:2]NLW_inst_S_AXI_ACP_AWSIZE_UNCONNECTED;
  wire [2:0]NLW_inst_S_AXI_ACP_BID_UNCONNECTED;
  wire [1:0]NLW_inst_S_AXI_ACP_BRESP_UNCONNECTED;
  wire [63:0]NLW_inst_S_AXI_ACP_RDATA_UNCONNECTED;
  wire [2:0]NLW_inst_S_AXI_ACP_RID_UNCONNECTED;
  wire [1:0]NLW_inst_S_AXI_ACP_RRESP_UNCONNECTED;
  wire [2:2]NLW_inst_S_AXI_GP0_ARSIZE_UNCONNECTED;
  wire [2:2]NLW_inst_S_AXI_GP0_AWSIZE_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_GP0_BID_UNCONNECTED;
  wire [1:0]NLW_inst_S_AXI_GP0_BRESP_UNCONNECTED;
  wire [31:0]NLW_inst_S_AXI_GP0_RDATA_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_GP0_RID_UNCONNECTED;
  wire [1:0]NLW_inst_S_AXI_GP0_RRESP_UNCONNECTED;
  wire [2:2]NLW_inst_S_AXI_GP1_ARSIZE_UNCONNECTED;
  wire [2:2]NLW_inst_S_AXI_GP1_AWSIZE_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_GP1_BID_UNCONNECTED;
  wire [1:0]NLW_inst_S_AXI_GP1_BRESP_UNCONNECTED;
  wire [31:0]NLW_inst_S_AXI_GP1_RDATA_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_GP1_RID_UNCONNECTED;
  wire [1:0]NLW_inst_S_AXI_GP1_RRESP_UNCONNECTED;
  wire [2:2]NLW_inst_S_AXI_HP0_ARSIZE_UNCONNECTED;
  wire [2:2]NLW_inst_S_AXI_HP0_AWSIZE_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_HP0_BID_UNCONNECTED;
  wire [1:0]NLW_inst_S_AXI_HP0_BRESP_UNCONNECTED;
  wire [2:0]NLW_inst_S_AXI_HP0_RACOUNT_UNCONNECTED;
  wire [7:0]NLW_inst_S_AXI_HP0_RCOUNT_UNCONNECTED;
  wire [63:0]NLW_inst_S_AXI_HP0_RDATA_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_HP0_RID_UNCONNECTED;
  wire [1:0]NLW_inst_S_AXI_HP0_RRESP_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_HP0_WACOUNT_UNCONNECTED;
  wire [7:0]NLW_inst_S_AXI_HP0_WCOUNT_UNCONNECTED;
  wire [2:2]NLW_inst_S_AXI_HP1_ARSIZE_UNCONNECTED;
  wire [2:2]NLW_inst_S_AXI_HP1_AWSIZE_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_HP1_BID_UNCONNECTED;
  wire [1:0]NLW_inst_S_AXI_HP1_BRESP_UNCONNECTED;
  wire [2:0]NLW_inst_S_AXI_HP1_RACOUNT_UNCONNECTED;
  wire [7:0]NLW_inst_S_AXI_HP1_RCOUNT_UNCONNECTED;
  wire [63:0]NLW_inst_S_AXI_HP1_RDATA_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_HP1_RID_UNCONNECTED;
  wire [1:0]NLW_inst_S_AXI_HP1_RRESP_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_HP1_WACOUNT_UNCONNECTED;
  wire [7:0]NLW_inst_S_AXI_HP1_WCOUNT_UNCONNECTED;
  wire [2:2]NLW_inst_S_AXI_HP2_ARSIZE_UNCONNECTED;
  wire [2:2]NLW_inst_S_AXI_HP2_AWSIZE_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_HP2_BID_UNCONNECTED;
  wire [1:0]NLW_inst_S_AXI_HP2_BRESP_UNCONNECTED;
  wire [2:0]NLW_inst_S_AXI_HP2_RACOUNT_UNCONNECTED;
  wire [7:0]NLW_inst_S_AXI_HP2_RCOUNT_UNCONNECTED;
  wire [63:0]NLW_inst_S_AXI_HP2_RDATA_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_HP2_RID_UNCONNECTED;
  wire [1:0]NLW_inst_S_AXI_HP2_RRESP_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_HP2_WACOUNT_UNCONNECTED;
  wire [7:0]NLW_inst_S_AXI_HP2_WCOUNT_UNCONNECTED;
  wire [2:2]NLW_inst_S_AXI_HP3_ARSIZE_UNCONNECTED;
  wire [2:2]NLW_inst_S_AXI_HP3_AWSIZE_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_HP3_BID_UNCONNECTED;
  wire [1:0]NLW_inst_S_AXI_HP3_BRESP_UNCONNECTED;
  wire [2:0]NLW_inst_S_AXI_HP3_RACOUNT_UNCONNECTED;
  wire [7:0]NLW_inst_S_AXI_HP3_RCOUNT_UNCONNECTED;
  wire [63:0]NLW_inst_S_AXI_HP3_RDATA_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_HP3_RID_UNCONNECTED;
  wire [1:0]NLW_inst_S_AXI_HP3_RRESP_UNCONNECTED;
  wire [5:0]NLW_inst_S_AXI_HP3_WACOUNT_UNCONNECTED;
  wire [7:0]NLW_inst_S_AXI_HP3_WCOUNT_UNCONNECTED;
  wire [1:0]NLW_inst_TRACE_DATA_UNCONNECTED;
  wire [1:0]NLW_inst_USB0_PORT_INDCTL_UNCONNECTED;
  wire [1:0]NLW_inst_USB1_PORT_INDCTL_UNCONNECTED;

  (* C_DM_WIDTH = "4" *) 
  (* C_DQS_WIDTH = "4" *) 
  (* C_DQ_WIDTH = "32" *) 
  (* C_EMIO_GPIO_WIDTH = "64" *) 
  (* C_EN_EMIO_ENET0 = "0" *) 
  (* C_EN_EMIO_ENET1 = "0" *) 
  (* C_EN_EMIO_PJTAG = "0" *) 
  (* C_EN_EMIO_TRACE = "0" *) 
  (* C_FCLK_CLK0_BUF = "TRUE" *) 
  (* C_FCLK_CLK1_BUF = "FALSE" *) 
  (* C_FCLK_CLK2_BUF = "FALSE" *) 
  (* C_FCLK_CLK3_BUF = "FALSE" *) 
  (* C_GP0_EN_MODIFIABLE_TXN = "1" *) 
  (* C_GP1_EN_MODIFIABLE_TXN = "1" *) 
  (* C_INCLUDE_ACP_TRANS_CHECK = "0" *) 
  (* C_INCLUDE_TRACE_BUFFER = "0" *) 
  (* C_IRQ_F2P_MODE = "DIRECT" *) 
  (* C_MIO_PRIMITIVE = "54" *) 
  (* C_M_AXI_GP0_ENABLE_STATIC_REMAP = "0" *) 
  (* C_M_AXI_GP0_ID_WIDTH = "12" *) 
  (* C_M_AXI_GP0_THREAD_ID_WIDTH = "12" *) 
  (* C_M_AXI_GP1_ENABLE_STATIC_REMAP = "0" *) 
  (* C_M_AXI_GP1_ID_WIDTH = "12" *) 
  (* C_M_AXI_GP1_THREAD_ID_WIDTH = "12" *) 
  (* C_NUM_F2P_INTR_INPUTS = "1" *) 
  (* C_PACKAGE_NAME = "clg484" *) 
  (* C_PS7_SI_REV = "PRODUCTION" *) 
  (* C_S_AXI_ACP_ARUSER_VAL = "31" *) 
  (* C_S_AXI_ACP_AWUSER_VAL = "31" *) 
  (* C_S_AXI_ACP_ID_WIDTH = "3" *) 
  (* C_S_AXI_GP0_ID_WIDTH = "6" *) 
  (* C_S_AXI_GP1_ID_WIDTH = "6" *) 
  (* C_S_AXI_HP0_DATA_WIDTH = "64" *) 
  (* C_S_AXI_HP0_ID_WIDTH = "6" *) 
  (* C_S_AXI_HP1_DATA_WIDTH = "64" *) 
  (* C_S_AXI_HP1_ID_WIDTH = "6" *) 
  (* C_S_AXI_HP2_DATA_WIDTH = "64" *) 
  (* C_S_AXI_HP2_ID_WIDTH = "6" *) 
  (* C_S_AXI_HP3_DATA_WIDTH = "64" *) 
  (* C_S_AXI_HP3_ID_WIDTH = "6" *) 
  (* C_TRACE_BUFFER_CLOCK_DELAY = "12" *) 
  (* C_TRACE_BUFFER_FIFO_SIZE = "128" *) 
  (* C_TRACE_INTERNAL_WIDTH = "2" *) 
  (* C_TRACE_PIPELINE_WIDTH = "8" *) 
  (* C_USE_AXI_NONSECURE = "0" *) 
  (* C_USE_DEFAULT_ACP_USER_VAL = "0" *) 
  (* C_USE_M_AXI_GP0 = "1" *) 
  (* C_USE_M_AXI_GP1 = "0" *) 
  (* C_USE_S_AXI_ACP = "0" *) 
  (* C_USE_S_AXI_GP0 = "0" *) 
  (* C_USE_S_AXI_GP1 = "0" *) 
  (* C_USE_S_AXI_HP0 = "0" *) 
  (* C_USE_S_AXI_HP1 = "0" *) 
  (* C_USE_S_AXI_HP2 = "0" *) 
  (* C_USE_S_AXI_HP3 = "0" *) 
  (* POWER = "<PROCESSOR name={system} numA9Cores={2} clockFreq={666.666667} load={0.5} /><MEMORY name={code} memType={DDR3} dataWidth={32} clockFreq={533.333313} readRate={0.5} writeRate={0.5} /><IO interface={GPIO_Bank_1} ioStandard={LVCMOS18} bidis={2} ioBank={Vcco_p1} clockFreq={1} usageRate={0.5} /><IO interface={GPIO_Bank_0} ioStandard={LVCMOS33} bidis={10} ioBank={Vcco_p0} clockFreq={1} usageRate={0.5} /><IO interface={Timer} ioStandard={} bidis={0} ioBank={} clockFreq={111.111115} usageRate={0.5} /><IO interface={UART} ioStandard={LVCMOS18} bidis={2} ioBank={Vcco_p1} clockFreq={50.000000} usageRate={0.5} /><IO interface={SD} ioStandard={LVCMOS18} bidis={8} ioBank={Vcco_p1} clockFreq={50.000000} usageRate={0.5} /><IO interface={USB} ioStandard={LVCMOS18} bidis={12} ioBank={Vcco_p1} clockFreq={60} usageRate={0.5} /><IO interface={GigE} ioStandard={LVCMOS18} bidis={14} ioBank={Vcco_p1} clockFreq={125.000000} usageRate={0.5} /><IO interface={QSPI} ioStandard={LVCMOS33} bidis={6} ioBank={Vcco_p0} clockFreq={200.000000} usageRate={0.5} /><PLL domain={Processor} vco={1333.333} /><PLL domain={Memory} vco={1066.667} /><PLL domain={IO} vco={1000.000} /><AXI interface={M_AXI_GP0} dataWidth={32} clockFreq={100} usageRate={0.5} />/>" *) 
  (* USE_TRACE_DATA_EDGE_DETECTOR = "0" *) 
  (* hw_handoff = "design_1_processing_system7_0_0.hwdef" *) 
  design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 inst
       (.CAN0_PHY_RX(1'b0),
        .CAN0_PHY_TX(NLW_inst_CAN0_PHY_TX_UNCONNECTED),
        .CAN1_PHY_RX(1'b0),
        .CAN1_PHY_TX(NLW_inst_CAN1_PHY_TX_UNCONNECTED),
        .Core0_nFIQ(1'b0),
        .Core0_nIRQ(1'b0),
        .Core1_nFIQ(1'b0),
        .Core1_nIRQ(1'b0),
        .DDR_ARB({1'b0,1'b0,1'b0,1'b0}),
        .DDR_Addr(DDR_Addr),
        .DDR_BankAddr(DDR_BankAddr),
        .DDR_CAS_n(DDR_CAS_n),
        .DDR_CKE(DDR_CKE),
        .DDR_CS_n(DDR_CS_n),
        .DDR_Clk(DDR_Clk),
        .DDR_Clk_n(DDR_Clk_n),
        .DDR_DM(DDR_DM),
        .DDR_DQ(DDR_DQ),
        .DDR_DQS(DDR_DQS),
        .DDR_DQS_n(DDR_DQS_n),
        .DDR_DRSTB(DDR_DRSTB),
        .DDR_ODT(DDR_ODT),
        .DDR_RAS_n(DDR_RAS_n),
        .DDR_VRN(DDR_VRN),
        .DDR_VRP(DDR_VRP),
        .DDR_WEB(DDR_WEB),
        .DMA0_ACLK(1'b0),
        .DMA0_DAREADY(1'b0),
        .DMA0_DATYPE(NLW_inst_DMA0_DATYPE_UNCONNECTED[1:0]),
        .DMA0_DAVALID(NLW_inst_DMA0_DAVALID_UNCONNECTED),
        .DMA0_DRLAST(1'b0),
        .DMA0_DRREADY(NLW_inst_DMA0_DRREADY_UNCONNECTED),
        .DMA0_DRTYPE({1'b0,1'b0}),
        .DMA0_DRVALID(1'b0),
        .DMA0_RSTN(NLW_inst_DMA0_RSTN_UNCONNECTED),
        .DMA1_ACLK(1'b0),
        .DMA1_DAREADY(1'b0),
        .DMA1_DATYPE(NLW_inst_DMA1_DATYPE_UNCONNECTED[1:0]),
        .DMA1_DAVALID(NLW_inst_DMA1_DAVALID_UNCONNECTED),
        .DMA1_DRLAST(1'b0),
        .DMA1_DRREADY(NLW_inst_DMA1_DRREADY_UNCONNECTED),
        .DMA1_DRTYPE({1'b0,1'b0}),
        .DMA1_DRVALID(1'b0),
        .DMA1_RSTN(NLW_inst_DMA1_RSTN_UNCONNECTED),
        .DMA2_ACLK(1'b0),
        .DMA2_DAREADY(1'b0),
        .DMA2_DATYPE(NLW_inst_DMA2_DATYPE_UNCONNECTED[1:0]),
        .DMA2_DAVALID(NLW_inst_DMA2_DAVALID_UNCONNECTED),
        .DMA2_DRLAST(1'b0),
        .DMA2_DRREADY(NLW_inst_DMA2_DRREADY_UNCONNECTED),
        .DMA2_DRTYPE({1'b0,1'b0}),
        .DMA2_DRVALID(1'b0),
        .DMA2_RSTN(NLW_inst_DMA2_RSTN_UNCONNECTED),
        .DMA3_ACLK(1'b0),
        .DMA3_DAREADY(1'b0),
        .DMA3_DATYPE(NLW_inst_DMA3_DATYPE_UNCONNECTED[1:0]),
        .DMA3_DAVALID(NLW_inst_DMA3_DAVALID_UNCONNECTED),
        .DMA3_DRLAST(1'b0),
        .DMA3_DRREADY(NLW_inst_DMA3_DRREADY_UNCONNECTED),
        .DMA3_DRTYPE({1'b0,1'b0}),
        .DMA3_DRVALID(1'b0),
        .DMA3_RSTN(NLW_inst_DMA3_RSTN_UNCONNECTED),
        .ENET0_EXT_INTIN(1'b0),
        .ENET0_GMII_COL(NLW_inst_ENET0_GMII_COL_UNCONNECTED),
        .ENET0_GMII_CRS(NLW_inst_ENET0_GMII_CRS_UNCONNECTED),
        .ENET0_GMII_RXD(NLW_inst_ENET0_GMII_RXD_UNCONNECTED[7:0]),
        .ENET0_GMII_RX_CLK(1'b0),
        .ENET0_GMII_RX_DV(NLW_inst_ENET0_GMII_RX_DV_UNCONNECTED),
        .ENET0_GMII_RX_ER(NLW_inst_ENET0_GMII_RX_ER_UNCONNECTED),
        .ENET0_GMII_TXD(NLW_inst_ENET0_GMII_TXD_UNCONNECTED[7:0]),
        .ENET0_GMII_TX_CLK(1'b0),
        .ENET0_GMII_TX_EN(NLW_inst_ENET0_GMII_TX_EN_UNCONNECTED),
        .ENET0_GMII_TX_ER(NLW_inst_ENET0_GMII_TX_ER_UNCONNECTED),
        .ENET0_MDIO_I(1'b0),
        .ENET0_MDIO_MDC(NLW_inst_ENET0_MDIO_MDC_UNCONNECTED),
        .ENET0_MDIO_O(NLW_inst_ENET0_MDIO_O_UNCONNECTED),
        .ENET0_MDIO_T(NLW_inst_ENET0_MDIO_T_UNCONNECTED),
        .ENET0_PTP_DELAY_REQ_RX(NLW_inst_ENET0_PTP_DELAY_REQ_RX_UNCONNECTED),
        .ENET0_PTP_DELAY_REQ_TX(NLW_inst_ENET0_PTP_DELAY_REQ_TX_UNCONNECTED),
        .ENET0_PTP_PDELAY_REQ_RX(NLW_inst_ENET0_PTP_PDELAY_REQ_RX_UNCONNECTED),
        .ENET0_PTP_PDELAY_REQ_TX(NLW_inst_ENET0_PTP_PDELAY_REQ_TX_UNCONNECTED),
        .ENET0_PTP_PDELAY_RESP_RX(NLW_inst_ENET0_PTP_PDELAY_RESP_RX_UNCONNECTED),
        .ENET0_PTP_PDELAY_RESP_TX(NLW_inst_ENET0_PTP_PDELAY_RESP_TX_UNCONNECTED),
        .ENET0_PTP_SYNC_FRAME_RX(NLW_inst_ENET0_PTP_SYNC_FRAME_RX_UNCONNECTED),
        .ENET0_PTP_SYNC_FRAME_TX(NLW_inst_ENET0_PTP_SYNC_FRAME_TX_UNCONNECTED),
        .ENET0_SOF_RX(NLW_inst_ENET0_SOF_RX_UNCONNECTED),
        .ENET0_SOF_TX(NLW_inst_ENET0_SOF_TX_UNCONNECTED),
        .ENET1_EXT_INTIN(1'b0),
        .ENET1_GMII_COL(NLW_inst_ENET1_GMII_COL_UNCONNECTED),
        .ENET1_GMII_CRS(NLW_inst_ENET1_GMII_CRS_UNCONNECTED),
        .ENET1_GMII_RXD(NLW_inst_ENET1_GMII_RXD_UNCONNECTED[7:0]),
        .ENET1_GMII_RX_CLK(1'b0),
        .ENET1_GMII_RX_DV(NLW_inst_ENET1_GMII_RX_DV_UNCONNECTED),
        .ENET1_GMII_RX_ER(NLW_inst_ENET1_GMII_RX_ER_UNCONNECTED),
        .ENET1_GMII_TXD(NLW_inst_ENET1_GMII_TXD_UNCONNECTED[7:0]),
        .ENET1_GMII_TX_CLK(1'b0),
        .ENET1_GMII_TX_EN(NLW_inst_ENET1_GMII_TX_EN_UNCONNECTED),
        .ENET1_GMII_TX_ER(NLW_inst_ENET1_GMII_TX_ER_UNCONNECTED),
        .ENET1_MDIO_I(1'b0),
        .ENET1_MDIO_MDC(NLW_inst_ENET1_MDIO_MDC_UNCONNECTED),
        .ENET1_MDIO_O(NLW_inst_ENET1_MDIO_O_UNCONNECTED),
        .ENET1_MDIO_T(NLW_inst_ENET1_MDIO_T_UNCONNECTED),
        .ENET1_PTP_DELAY_REQ_RX(NLW_inst_ENET1_PTP_DELAY_REQ_RX_UNCONNECTED),
        .ENET1_PTP_DELAY_REQ_TX(NLW_inst_ENET1_PTP_DELAY_REQ_TX_UNCONNECTED),
        .ENET1_PTP_PDELAY_REQ_RX(NLW_inst_ENET1_PTP_PDELAY_REQ_RX_UNCONNECTED),
        .ENET1_PTP_PDELAY_REQ_TX(NLW_inst_ENET1_PTP_PDELAY_REQ_TX_UNCONNECTED),
        .ENET1_PTP_PDELAY_RESP_RX(NLW_inst_ENET1_PTP_PDELAY_RESP_RX_UNCONNECTED),
        .ENET1_PTP_PDELAY_RESP_TX(NLW_inst_ENET1_PTP_PDELAY_RESP_TX_UNCONNECTED),
        .ENET1_PTP_SYNC_FRAME_RX(NLW_inst_ENET1_PTP_SYNC_FRAME_RX_UNCONNECTED),
        .ENET1_PTP_SYNC_FRAME_TX(NLW_inst_ENET1_PTP_SYNC_FRAME_TX_UNCONNECTED),
        .ENET1_SOF_RX(NLW_inst_ENET1_SOF_RX_UNCONNECTED),
        .ENET1_SOF_TX(NLW_inst_ENET1_SOF_TX_UNCONNECTED),
        .EVENT_EVENTI(1'b0),
        .EVENT_EVENTO(NLW_inst_EVENT_EVENTO_UNCONNECTED),
        .EVENT_STANDBYWFE(NLW_inst_EVENT_STANDBYWFE_UNCONNECTED[1:0]),
        .EVENT_STANDBYWFI(NLW_inst_EVENT_STANDBYWFI_UNCONNECTED[1:0]),
        .FCLK_CLK0(FCLK_CLK0),
        .FCLK_CLK1(NLW_inst_FCLK_CLK1_UNCONNECTED),
        .FCLK_CLK2(NLW_inst_FCLK_CLK2_UNCONNECTED),
        .FCLK_CLK3(NLW_inst_FCLK_CLK3_UNCONNECTED),
        .FCLK_CLKTRIG0_N(NLW_inst_FCLK_CLKTRIG0_N_UNCONNECTED),
        .FCLK_CLKTRIG1_N(NLW_inst_FCLK_CLKTRIG1_N_UNCONNECTED),
        .FCLK_CLKTRIG2_N(NLW_inst_FCLK_CLKTRIG2_N_UNCONNECTED),
        .FCLK_CLKTRIG3_N(NLW_inst_FCLK_CLKTRIG3_N_UNCONNECTED),
        .FCLK_RESET0_N(FCLK_RESET0_N),
        .FCLK_RESET1_N(NLW_inst_FCLK_RESET1_N_UNCONNECTED),
        .FCLK_RESET2_N(NLW_inst_FCLK_RESET2_N_UNCONNECTED),
        .FCLK_RESET3_N(NLW_inst_FCLK_RESET3_N_UNCONNECTED),
        .FPGA_IDLE_N(1'b0),
        .FTMD_TRACEIN_ATID(NLW_inst_FTMD_TRACEIN_ATID_UNCONNECTED[3:0]),
        .FTMD_TRACEIN_CLK(1'b0),
        .FTMD_TRACEIN_DATA(NLW_inst_FTMD_TRACEIN_DATA_UNCONNECTED[31:0]),
        .FTMD_TRACEIN_VALID(NLW_inst_FTMD_TRACEIN_VALID_UNCONNECTED),
        .FTMT_F2P_DEBUG({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .FTMT_F2P_TRIGACK_0(NLW_inst_FTMT_F2P_TRIGACK_0_UNCONNECTED),
        .FTMT_F2P_TRIGACK_1(NLW_inst_FTMT_F2P_TRIGACK_1_UNCONNECTED),
        .FTMT_F2P_TRIGACK_2(NLW_inst_FTMT_F2P_TRIGACK_2_UNCONNECTED),
        .FTMT_F2P_TRIGACK_3(NLW_inst_FTMT_F2P_TRIGACK_3_UNCONNECTED),
        .FTMT_F2P_TRIG_0(1'b0),
        .FTMT_F2P_TRIG_1(1'b0),
        .FTMT_F2P_TRIG_2(1'b0),
        .FTMT_F2P_TRIG_3(1'b0),
        .FTMT_P2F_DEBUG(NLW_inst_FTMT_P2F_DEBUG_UNCONNECTED[31:0]),
        .FTMT_P2F_TRIGACK_0(1'b0),
        .FTMT_P2F_TRIGACK_1(1'b0),
        .FTMT_P2F_TRIGACK_2(1'b0),
        .FTMT_P2F_TRIGACK_3(1'b0),
        .FTMT_P2F_TRIG_0(NLW_inst_FTMT_P2F_TRIG_0_UNCONNECTED),
        .FTMT_P2F_TRIG_1(NLW_inst_FTMT_P2F_TRIG_1_UNCONNECTED),
        .FTMT_P2F_TRIG_2(NLW_inst_FTMT_P2F_TRIG_2_UNCONNECTED),
        .FTMT_P2F_TRIG_3(NLW_inst_FTMT_P2F_TRIG_3_UNCONNECTED),
        .GPIO_I({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GPIO_O(NLW_inst_GPIO_O_UNCONNECTED[63:0]),
        .GPIO_T(NLW_inst_GPIO_T_UNCONNECTED[63:0]),
        .I2C0_SCL_I(1'b0),
        .I2C0_SCL_O(NLW_inst_I2C0_SCL_O_UNCONNECTED),
        .I2C0_SCL_T(NLW_inst_I2C0_SCL_T_UNCONNECTED),
        .I2C0_SDA_I(1'b0),
        .I2C0_SDA_O(NLW_inst_I2C0_SDA_O_UNCONNECTED),
        .I2C0_SDA_T(NLW_inst_I2C0_SDA_T_UNCONNECTED),
        .I2C1_SCL_I(1'b0),
        .I2C1_SCL_O(NLW_inst_I2C1_SCL_O_UNCONNECTED),
        .I2C1_SCL_T(NLW_inst_I2C1_SCL_T_UNCONNECTED),
        .I2C1_SDA_I(1'b0),
        .I2C1_SDA_O(NLW_inst_I2C1_SDA_O_UNCONNECTED),
        .I2C1_SDA_T(NLW_inst_I2C1_SDA_T_UNCONNECTED),
        .IRQ_F2P(1'b0),
        .IRQ_P2F_CAN0(NLW_inst_IRQ_P2F_CAN0_UNCONNECTED),
        .IRQ_P2F_CAN1(NLW_inst_IRQ_P2F_CAN1_UNCONNECTED),
        .IRQ_P2F_CTI(NLW_inst_IRQ_P2F_CTI_UNCONNECTED),
        .IRQ_P2F_DMAC0(NLW_inst_IRQ_P2F_DMAC0_UNCONNECTED),
        .IRQ_P2F_DMAC1(NLW_inst_IRQ_P2F_DMAC1_UNCONNECTED),
        .IRQ_P2F_DMAC2(NLW_inst_IRQ_P2F_DMAC2_UNCONNECTED),
        .IRQ_P2F_DMAC3(NLW_inst_IRQ_P2F_DMAC3_UNCONNECTED),
        .IRQ_P2F_DMAC4(NLW_inst_IRQ_P2F_DMAC4_UNCONNECTED),
        .IRQ_P2F_DMAC5(NLW_inst_IRQ_P2F_DMAC5_UNCONNECTED),
        .IRQ_P2F_DMAC6(NLW_inst_IRQ_P2F_DMAC6_UNCONNECTED),
        .IRQ_P2F_DMAC7(NLW_inst_IRQ_P2F_DMAC7_UNCONNECTED),
        .IRQ_P2F_DMAC_ABORT(NLW_inst_IRQ_P2F_DMAC_ABORT_UNCONNECTED),
        .IRQ_P2F_ENET0(NLW_inst_IRQ_P2F_ENET0_UNCONNECTED),
        .IRQ_P2F_ENET1(NLW_inst_IRQ_P2F_ENET1_UNCONNECTED),
        .IRQ_P2F_ENET_WAKE0(NLW_inst_IRQ_P2F_ENET_WAKE0_UNCONNECTED),
        .IRQ_P2F_ENET_WAKE1(NLW_inst_IRQ_P2F_ENET_WAKE1_UNCONNECTED),
        .IRQ_P2F_GPIO(NLW_inst_IRQ_P2F_GPIO_UNCONNECTED),
        .IRQ_P2F_I2C0(NLW_inst_IRQ_P2F_I2C0_UNCONNECTED),
        .IRQ_P2F_I2C1(NLW_inst_IRQ_P2F_I2C1_UNCONNECTED),
        .IRQ_P2F_QSPI(NLW_inst_IRQ_P2F_QSPI_UNCONNECTED),
        .IRQ_P2F_SDIO0(NLW_inst_IRQ_P2F_SDIO0_UNCONNECTED),
        .IRQ_P2F_SDIO1(NLW_inst_IRQ_P2F_SDIO1_UNCONNECTED),
        .IRQ_P2F_SMC(NLW_inst_IRQ_P2F_SMC_UNCONNECTED),
        .IRQ_P2F_SPI0(NLW_inst_IRQ_P2F_SPI0_UNCONNECTED),
        .IRQ_P2F_SPI1(NLW_inst_IRQ_P2F_SPI1_UNCONNECTED),
        .IRQ_P2F_UART0(NLW_inst_IRQ_P2F_UART0_UNCONNECTED),
        .IRQ_P2F_UART1(NLW_inst_IRQ_P2F_UART1_UNCONNECTED),
        .IRQ_P2F_USB0(NLW_inst_IRQ_P2F_USB0_UNCONNECTED),
        .IRQ_P2F_USB1(NLW_inst_IRQ_P2F_USB1_UNCONNECTED),
        .MIO(MIO),
        .M_AXI_GP0_ACLK(M_AXI_GP0_ACLK),
        .M_AXI_GP0_ARADDR({M_AXI_GP0_ARADDR[31:16],NLW_inst_M_AXI_GP0_ARADDR_UNCONNECTED[15:8],M_AXI_GP0_ARADDR[7:0]}),
        .M_AXI_GP0_ARBURST({NLW_inst_M_AXI_GP0_ARBURST_UNCONNECTED[1],M_AXI_GP0_ARBURST[0]}),
        .M_AXI_GP0_ARCACHE(NLW_inst_M_AXI_GP0_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_GP0_ARESETN(NLW_inst_M_AXI_GP0_ARESETN_UNCONNECTED),
        .M_AXI_GP0_ARID(M_AXI_GP0_ARID),
        .M_AXI_GP0_ARLEN(M_AXI_GP0_ARLEN),
        .M_AXI_GP0_ARLOCK(NLW_inst_M_AXI_GP0_ARLOCK_UNCONNECTED[1:0]),
        .M_AXI_GP0_ARPROT(NLW_inst_M_AXI_GP0_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_GP0_ARQOS(NLW_inst_M_AXI_GP0_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_GP0_ARREADY(M_AXI_GP0_ARREADY),
        .M_AXI_GP0_ARSIZE({NLW_inst_M_AXI_GP0_ARSIZE_UNCONNECTED[2],M_AXI_GP0_ARSIZE[1:0]}),
        .M_AXI_GP0_ARVALID(M_AXI_GP0_ARVALID),
        .M_AXI_GP0_AWADDR({M_AXI_GP0_AWADDR[31:16],NLW_inst_M_AXI_GP0_AWADDR_UNCONNECTED[15:8],M_AXI_GP0_AWADDR[7:0]}),
        .M_AXI_GP0_AWBURST({NLW_inst_M_AXI_GP0_AWBURST_UNCONNECTED[1],M_AXI_GP0_AWBURST[0]}),
        .M_AXI_GP0_AWCACHE(NLW_inst_M_AXI_GP0_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_GP0_AWID(M_AXI_GP0_AWID),
        .M_AXI_GP0_AWLEN(M_AXI_GP0_AWLEN),
        .M_AXI_GP0_AWLOCK(NLW_inst_M_AXI_GP0_AWLOCK_UNCONNECTED[1:0]),
        .M_AXI_GP0_AWPROT(NLW_inst_M_AXI_GP0_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_GP0_AWQOS(NLW_inst_M_AXI_GP0_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_GP0_AWREADY(M_AXI_GP0_AWREADY),
        .M_AXI_GP0_AWSIZE({NLW_inst_M_AXI_GP0_AWSIZE_UNCONNECTED[2],M_AXI_GP0_AWSIZE[1:0]}),
        .M_AXI_GP0_AWVALID(M_AXI_GP0_AWVALID),
        .M_AXI_GP0_BID(M_AXI_GP0_BID),
        .M_AXI_GP0_BREADY(M_AXI_GP0_BREADY),
        .M_AXI_GP0_BRESP(M_AXI_GP0_BRESP),
        .M_AXI_GP0_BVALID(M_AXI_GP0_BVALID),
        .M_AXI_GP0_RDATA(M_AXI_GP0_RDATA),
        .M_AXI_GP0_RID(M_AXI_GP0_RID),
        .M_AXI_GP0_RLAST(M_AXI_GP0_RLAST),
        .M_AXI_GP0_RREADY(M_AXI_GP0_RREADY),
        .M_AXI_GP0_RRESP(M_AXI_GP0_RRESP),
        .M_AXI_GP0_RVALID(M_AXI_GP0_RVALID),
        .M_AXI_GP0_WDATA({NLW_inst_M_AXI_GP0_WDATA_UNCONNECTED[31:1],M_AXI_GP0_WDATA[0]}),
        .M_AXI_GP0_WID(NLW_inst_M_AXI_GP0_WID_UNCONNECTED[11:0]),
        .M_AXI_GP0_WLAST(M_AXI_GP0_WLAST),
        .M_AXI_GP0_WREADY(M_AXI_GP0_WREADY),
        .M_AXI_GP0_WSTRB(M_AXI_GP0_WSTRB),
        .M_AXI_GP0_WVALID(M_AXI_GP0_WVALID),
        .M_AXI_GP1_ACLK(1'b0),
        .M_AXI_GP1_ARADDR(NLW_inst_M_AXI_GP1_ARADDR_UNCONNECTED[31:0]),
        .M_AXI_GP1_ARBURST(NLW_inst_M_AXI_GP1_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_GP1_ARCACHE(NLW_inst_M_AXI_GP1_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_GP1_ARESETN(NLW_inst_M_AXI_GP1_ARESETN_UNCONNECTED),
        .M_AXI_GP1_ARID(NLW_inst_M_AXI_GP1_ARID_UNCONNECTED[11:0]),
        .M_AXI_GP1_ARLEN(NLW_inst_M_AXI_GP1_ARLEN_UNCONNECTED[3:0]),
        .M_AXI_GP1_ARLOCK(NLW_inst_M_AXI_GP1_ARLOCK_UNCONNECTED[1:0]),
        .M_AXI_GP1_ARPROT(NLW_inst_M_AXI_GP1_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_GP1_ARQOS(NLW_inst_M_AXI_GP1_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_GP1_ARREADY(1'b0),
        .M_AXI_GP1_ARSIZE(NLW_inst_M_AXI_GP1_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_GP1_ARVALID(NLW_inst_M_AXI_GP1_ARVALID_UNCONNECTED),
        .M_AXI_GP1_AWADDR(NLW_inst_M_AXI_GP1_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_GP1_AWBURST(NLW_inst_M_AXI_GP1_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_GP1_AWCACHE(NLW_inst_M_AXI_GP1_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_GP1_AWID(NLW_inst_M_AXI_GP1_AWID_UNCONNECTED[11:0]),
        .M_AXI_GP1_AWLEN(NLW_inst_M_AXI_GP1_AWLEN_UNCONNECTED[3:0]),
        .M_AXI_GP1_AWLOCK(NLW_inst_M_AXI_GP1_AWLOCK_UNCONNECTED[1:0]),
        .M_AXI_GP1_AWPROT(NLW_inst_M_AXI_GP1_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_GP1_AWQOS(NLW_inst_M_AXI_GP1_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_GP1_AWREADY(1'b0),
        .M_AXI_GP1_AWSIZE(NLW_inst_M_AXI_GP1_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_GP1_AWVALID(NLW_inst_M_AXI_GP1_AWVALID_UNCONNECTED),
        .M_AXI_GP1_BID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .M_AXI_GP1_BREADY(NLW_inst_M_AXI_GP1_BREADY_UNCONNECTED),
        .M_AXI_GP1_BRESP({1'b0,1'b0}),
        .M_AXI_GP1_BVALID(1'b0),
        .M_AXI_GP1_RDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .M_AXI_GP1_RID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .M_AXI_GP1_RLAST(1'b0),
        .M_AXI_GP1_RREADY(NLW_inst_M_AXI_GP1_RREADY_UNCONNECTED),
        .M_AXI_GP1_RRESP({1'b0,1'b0}),
        .M_AXI_GP1_RVALID(1'b0),
        .M_AXI_GP1_WDATA(NLW_inst_M_AXI_GP1_WDATA_UNCONNECTED[31:0]),
        .M_AXI_GP1_WID(NLW_inst_M_AXI_GP1_WID_UNCONNECTED[11:0]),
        .M_AXI_GP1_WLAST(NLW_inst_M_AXI_GP1_WLAST_UNCONNECTED),
        .M_AXI_GP1_WREADY(1'b0),
        .M_AXI_GP1_WSTRB(NLW_inst_M_AXI_GP1_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_GP1_WVALID(NLW_inst_M_AXI_GP1_WVALID_UNCONNECTED),
        .PJTAG_TCK(1'b0),
        .PJTAG_TDI(1'b0),
        .PJTAG_TDO(NLW_inst_PJTAG_TDO_UNCONNECTED),
        .PJTAG_TMS(1'b0),
        .PS_CLK(PS_CLK),
        .PS_PORB(PS_PORB),
        .PS_SRSTB(PS_SRSTB),
        .SDIO0_BUSPOW(NLW_inst_SDIO0_BUSPOW_UNCONNECTED),
        .SDIO0_BUSVOLT(NLW_inst_SDIO0_BUSVOLT_UNCONNECTED[2:0]),
        .SDIO0_CDN(1'b0),
        .SDIO0_CLK(NLW_inst_SDIO0_CLK_UNCONNECTED),
        .SDIO0_CLK_FB(1'b0),
        .SDIO0_CMD_I(1'b0),
        .SDIO0_CMD_O(NLW_inst_SDIO0_CMD_O_UNCONNECTED),
        .SDIO0_CMD_T(NLW_inst_SDIO0_CMD_T_UNCONNECTED),
        .SDIO0_DATA_I({1'b0,1'b0,1'b0,1'b0}),
        .SDIO0_DATA_O(NLW_inst_SDIO0_DATA_O_UNCONNECTED[3:0]),
        .SDIO0_DATA_T(NLW_inst_SDIO0_DATA_T_UNCONNECTED[3:0]),
        .SDIO0_LED(NLW_inst_SDIO0_LED_UNCONNECTED),
        .SDIO0_WP(1'b0),
        .SDIO1_BUSPOW(NLW_inst_SDIO1_BUSPOW_UNCONNECTED),
        .SDIO1_BUSVOLT(NLW_inst_SDIO1_BUSVOLT_UNCONNECTED[2:0]),
        .SDIO1_CDN(1'b0),
        .SDIO1_CLK(NLW_inst_SDIO1_CLK_UNCONNECTED),
        .SDIO1_CLK_FB(1'b0),
        .SDIO1_CMD_I(1'b0),
        .SDIO1_CMD_O(NLW_inst_SDIO1_CMD_O_UNCONNECTED),
        .SDIO1_CMD_T(NLW_inst_SDIO1_CMD_T_UNCONNECTED),
        .SDIO1_DATA_I({1'b0,1'b0,1'b0,1'b0}),
        .SDIO1_DATA_O(NLW_inst_SDIO1_DATA_O_UNCONNECTED[3:0]),
        .SDIO1_DATA_T(NLW_inst_SDIO1_DATA_T_UNCONNECTED[3:0]),
        .SDIO1_LED(NLW_inst_SDIO1_LED_UNCONNECTED),
        .SDIO1_WP(1'b0),
        .SPI0_MISO_I(1'b0),
        .SPI0_MISO_O(NLW_inst_SPI0_MISO_O_UNCONNECTED),
        .SPI0_MISO_T(NLW_inst_SPI0_MISO_T_UNCONNECTED),
        .SPI0_MOSI_I(1'b0),
        .SPI0_MOSI_O(NLW_inst_SPI0_MOSI_O_UNCONNECTED),
        .SPI0_MOSI_T(NLW_inst_SPI0_MOSI_T_UNCONNECTED),
        .SPI0_SCLK_I(1'b0),
        .SPI0_SCLK_O(NLW_inst_SPI0_SCLK_O_UNCONNECTED),
        .SPI0_SCLK_T(NLW_inst_SPI0_SCLK_T_UNCONNECTED),
        .SPI0_SS1_O(NLW_inst_SPI0_SS1_O_UNCONNECTED),
        .SPI0_SS2_O(NLW_inst_SPI0_SS2_O_UNCONNECTED),
        .SPI0_SS_I(1'b0),
        .SPI0_SS_O(NLW_inst_SPI0_SS_O_UNCONNECTED),
        .SPI0_SS_T(NLW_inst_SPI0_SS_T_UNCONNECTED),
        .SPI1_MISO_I(1'b0),
        .SPI1_MISO_O(NLW_inst_SPI1_MISO_O_UNCONNECTED),
        .SPI1_MISO_T(NLW_inst_SPI1_MISO_T_UNCONNECTED),
        .SPI1_MOSI_I(1'b0),
        .SPI1_MOSI_O(NLW_inst_SPI1_MOSI_O_UNCONNECTED),
        .SPI1_MOSI_T(NLW_inst_SPI1_MOSI_T_UNCONNECTED),
        .SPI1_SCLK_I(1'b0),
        .SPI1_SCLK_O(NLW_inst_SPI1_SCLK_O_UNCONNECTED),
        .SPI1_SCLK_T(NLW_inst_SPI1_SCLK_T_UNCONNECTED),
        .SPI1_SS1_O(NLW_inst_SPI1_SS1_O_UNCONNECTED),
        .SPI1_SS2_O(NLW_inst_SPI1_SS2_O_UNCONNECTED),
        .SPI1_SS_I(1'b0),
        .SPI1_SS_O(NLW_inst_SPI1_SS_O_UNCONNECTED),
        .SPI1_SS_T(NLW_inst_SPI1_SS_T_UNCONNECTED),
        .SRAM_INTIN(1'b0),
        .S_AXI_ACP_ACLK(1'b0),
        .S_AXI_ACP_ARADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_ACP_ARBURST({1'b0,1'b0}),
        .S_AXI_ACP_ARCACHE({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_ACP_ARESETN(NLW_inst_S_AXI_ACP_ARESETN_UNCONNECTED),
        .S_AXI_ACP_ARID({1'b0,1'b0,1'b0}),
        .S_AXI_ACP_ARLEN({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_ACP_ARLOCK({1'b0,1'b0}),
        .S_AXI_ACP_ARPROT({1'b0,1'b0,1'b0}),
        .S_AXI_ACP_ARQOS({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_ACP_ARREADY(NLW_inst_S_AXI_ACP_ARREADY_UNCONNECTED),
        .S_AXI_ACP_ARSIZE({NLW_inst_S_AXI_ACP_ARSIZE_UNCONNECTED[2],1'b0,1'b0}),
        .S_AXI_ACP_ARUSER({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_ACP_ARVALID(1'b0),
        .S_AXI_ACP_AWADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_ACP_AWBURST({1'b0,1'b0}),
        .S_AXI_ACP_AWCACHE({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_ACP_AWID({1'b0,1'b0,1'b0}),
        .S_AXI_ACP_AWLEN({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_ACP_AWLOCK({1'b0,1'b0}),
        .S_AXI_ACP_AWPROT({1'b0,1'b0,1'b0}),
        .S_AXI_ACP_AWQOS({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_ACP_AWREADY(NLW_inst_S_AXI_ACP_AWREADY_UNCONNECTED),
        .S_AXI_ACP_AWSIZE({NLW_inst_S_AXI_ACP_AWSIZE_UNCONNECTED[2],1'b0,1'b0}),
        .S_AXI_ACP_AWUSER({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_ACP_AWVALID(1'b0),
        .S_AXI_ACP_BID(NLW_inst_S_AXI_ACP_BID_UNCONNECTED[2:0]),
        .S_AXI_ACP_BREADY(1'b0),
        .S_AXI_ACP_BRESP(NLW_inst_S_AXI_ACP_BRESP_UNCONNECTED[1:0]),
        .S_AXI_ACP_BVALID(NLW_inst_S_AXI_ACP_BVALID_UNCONNECTED),
        .S_AXI_ACP_RDATA(NLW_inst_S_AXI_ACP_RDATA_UNCONNECTED[63:0]),
        .S_AXI_ACP_RID(NLW_inst_S_AXI_ACP_RID_UNCONNECTED[2:0]),
        .S_AXI_ACP_RLAST(NLW_inst_S_AXI_ACP_RLAST_UNCONNECTED),
        .S_AXI_ACP_RREADY(1'b0),
        .S_AXI_ACP_RRESP(NLW_inst_S_AXI_ACP_RRESP_UNCONNECTED[1:0]),
        .S_AXI_ACP_RVALID(NLW_inst_S_AXI_ACP_RVALID_UNCONNECTED),
        .S_AXI_ACP_WDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_ACP_WID({1'b0,1'b0,1'b0}),
        .S_AXI_ACP_WLAST(1'b0),
        .S_AXI_ACP_WREADY(NLW_inst_S_AXI_ACP_WREADY_UNCONNECTED),
        .S_AXI_ACP_WSTRB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_ACP_WVALID(1'b0),
        .S_AXI_GP0_ACLK(1'b0),
        .S_AXI_GP0_ARADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP0_ARBURST({1'b0,1'b0}),
        .S_AXI_GP0_ARCACHE({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP0_ARESETN(NLW_inst_S_AXI_GP0_ARESETN_UNCONNECTED),
        .S_AXI_GP0_ARID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP0_ARLEN({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP0_ARLOCK({1'b0,1'b0}),
        .S_AXI_GP0_ARPROT({1'b0,1'b0,1'b0}),
        .S_AXI_GP0_ARQOS({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP0_ARREADY(NLW_inst_S_AXI_GP0_ARREADY_UNCONNECTED),
        .S_AXI_GP0_ARSIZE({NLW_inst_S_AXI_GP0_ARSIZE_UNCONNECTED[2],1'b0,1'b0}),
        .S_AXI_GP0_ARVALID(1'b0),
        .S_AXI_GP0_AWADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP0_AWBURST({1'b0,1'b0}),
        .S_AXI_GP0_AWCACHE({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP0_AWID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP0_AWLEN({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP0_AWLOCK({1'b0,1'b0}),
        .S_AXI_GP0_AWPROT({1'b0,1'b0,1'b0}),
        .S_AXI_GP0_AWQOS({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP0_AWREADY(NLW_inst_S_AXI_GP0_AWREADY_UNCONNECTED),
        .S_AXI_GP0_AWSIZE({NLW_inst_S_AXI_GP0_AWSIZE_UNCONNECTED[2],1'b0,1'b0}),
        .S_AXI_GP0_AWVALID(1'b0),
        .S_AXI_GP0_BID(NLW_inst_S_AXI_GP0_BID_UNCONNECTED[5:0]),
        .S_AXI_GP0_BREADY(1'b0),
        .S_AXI_GP0_BRESP(NLW_inst_S_AXI_GP0_BRESP_UNCONNECTED[1:0]),
        .S_AXI_GP0_BVALID(NLW_inst_S_AXI_GP0_BVALID_UNCONNECTED),
        .S_AXI_GP0_RDATA(NLW_inst_S_AXI_GP0_RDATA_UNCONNECTED[31:0]),
        .S_AXI_GP0_RID(NLW_inst_S_AXI_GP0_RID_UNCONNECTED[5:0]),
        .S_AXI_GP0_RLAST(NLW_inst_S_AXI_GP0_RLAST_UNCONNECTED),
        .S_AXI_GP0_RREADY(1'b0),
        .S_AXI_GP0_RRESP(NLW_inst_S_AXI_GP0_RRESP_UNCONNECTED[1:0]),
        .S_AXI_GP0_RVALID(NLW_inst_S_AXI_GP0_RVALID_UNCONNECTED),
        .S_AXI_GP0_WDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP0_WID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP0_WLAST(1'b0),
        .S_AXI_GP0_WREADY(NLW_inst_S_AXI_GP0_WREADY_UNCONNECTED),
        .S_AXI_GP0_WSTRB({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP0_WVALID(1'b0),
        .S_AXI_GP1_ACLK(1'b0),
        .S_AXI_GP1_ARADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP1_ARBURST({1'b0,1'b0}),
        .S_AXI_GP1_ARCACHE({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP1_ARESETN(NLW_inst_S_AXI_GP1_ARESETN_UNCONNECTED),
        .S_AXI_GP1_ARID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP1_ARLEN({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP1_ARLOCK({1'b0,1'b0}),
        .S_AXI_GP1_ARPROT({1'b0,1'b0,1'b0}),
        .S_AXI_GP1_ARQOS({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP1_ARREADY(NLW_inst_S_AXI_GP1_ARREADY_UNCONNECTED),
        .S_AXI_GP1_ARSIZE({NLW_inst_S_AXI_GP1_ARSIZE_UNCONNECTED[2],1'b0,1'b0}),
        .S_AXI_GP1_ARVALID(1'b0),
        .S_AXI_GP1_AWADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP1_AWBURST({1'b0,1'b0}),
        .S_AXI_GP1_AWCACHE({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP1_AWID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP1_AWLEN({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP1_AWLOCK({1'b0,1'b0}),
        .S_AXI_GP1_AWPROT({1'b0,1'b0,1'b0}),
        .S_AXI_GP1_AWQOS({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP1_AWREADY(NLW_inst_S_AXI_GP1_AWREADY_UNCONNECTED),
        .S_AXI_GP1_AWSIZE({NLW_inst_S_AXI_GP1_AWSIZE_UNCONNECTED[2],1'b0,1'b0}),
        .S_AXI_GP1_AWVALID(1'b0),
        .S_AXI_GP1_BID(NLW_inst_S_AXI_GP1_BID_UNCONNECTED[5:0]),
        .S_AXI_GP1_BREADY(1'b0),
        .S_AXI_GP1_BRESP(NLW_inst_S_AXI_GP1_BRESP_UNCONNECTED[1:0]),
        .S_AXI_GP1_BVALID(NLW_inst_S_AXI_GP1_BVALID_UNCONNECTED),
        .S_AXI_GP1_RDATA(NLW_inst_S_AXI_GP1_RDATA_UNCONNECTED[31:0]),
        .S_AXI_GP1_RID(NLW_inst_S_AXI_GP1_RID_UNCONNECTED[5:0]),
        .S_AXI_GP1_RLAST(NLW_inst_S_AXI_GP1_RLAST_UNCONNECTED),
        .S_AXI_GP1_RREADY(1'b0),
        .S_AXI_GP1_RRESP(NLW_inst_S_AXI_GP1_RRESP_UNCONNECTED[1:0]),
        .S_AXI_GP1_RVALID(NLW_inst_S_AXI_GP1_RVALID_UNCONNECTED),
        .S_AXI_GP1_WDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP1_WID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP1_WLAST(1'b0),
        .S_AXI_GP1_WREADY(NLW_inst_S_AXI_GP1_WREADY_UNCONNECTED),
        .S_AXI_GP1_WSTRB({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_GP1_WVALID(1'b0),
        .S_AXI_HP0_ACLK(1'b0),
        .S_AXI_HP0_ARADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP0_ARBURST({1'b0,1'b0}),
        .S_AXI_HP0_ARCACHE({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP0_ARESETN(NLW_inst_S_AXI_HP0_ARESETN_UNCONNECTED),
        .S_AXI_HP0_ARID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP0_ARLEN({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP0_ARLOCK({1'b0,1'b0}),
        .S_AXI_HP0_ARPROT({1'b0,1'b0,1'b0}),
        .S_AXI_HP0_ARQOS({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP0_ARREADY(NLW_inst_S_AXI_HP0_ARREADY_UNCONNECTED),
        .S_AXI_HP0_ARSIZE({NLW_inst_S_AXI_HP0_ARSIZE_UNCONNECTED[2],1'b0,1'b0}),
        .S_AXI_HP0_ARVALID(1'b0),
        .S_AXI_HP0_AWADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP0_AWBURST({1'b0,1'b0}),
        .S_AXI_HP0_AWCACHE({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP0_AWID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP0_AWLEN({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP0_AWLOCK({1'b0,1'b0}),
        .S_AXI_HP0_AWPROT({1'b0,1'b0,1'b0}),
        .S_AXI_HP0_AWQOS({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP0_AWREADY(NLW_inst_S_AXI_HP0_AWREADY_UNCONNECTED),
        .S_AXI_HP0_AWSIZE({NLW_inst_S_AXI_HP0_AWSIZE_UNCONNECTED[2],1'b0,1'b0}),
        .S_AXI_HP0_AWVALID(1'b0),
        .S_AXI_HP0_BID(NLW_inst_S_AXI_HP0_BID_UNCONNECTED[5:0]),
        .S_AXI_HP0_BREADY(1'b0),
        .S_AXI_HP0_BRESP(NLW_inst_S_AXI_HP0_BRESP_UNCONNECTED[1:0]),
        .S_AXI_HP0_BVALID(NLW_inst_S_AXI_HP0_BVALID_UNCONNECTED),
        .S_AXI_HP0_RACOUNT(NLW_inst_S_AXI_HP0_RACOUNT_UNCONNECTED[2:0]),
        .S_AXI_HP0_RCOUNT(NLW_inst_S_AXI_HP0_RCOUNT_UNCONNECTED[7:0]),
        .S_AXI_HP0_RDATA(NLW_inst_S_AXI_HP0_RDATA_UNCONNECTED[63:0]),
        .S_AXI_HP0_RDISSUECAP1_EN(1'b0),
        .S_AXI_HP0_RID(NLW_inst_S_AXI_HP0_RID_UNCONNECTED[5:0]),
        .S_AXI_HP0_RLAST(NLW_inst_S_AXI_HP0_RLAST_UNCONNECTED),
        .S_AXI_HP0_RREADY(1'b0),
        .S_AXI_HP0_RRESP(NLW_inst_S_AXI_HP0_RRESP_UNCONNECTED[1:0]),
        .S_AXI_HP0_RVALID(NLW_inst_S_AXI_HP0_RVALID_UNCONNECTED),
        .S_AXI_HP0_WACOUNT(NLW_inst_S_AXI_HP0_WACOUNT_UNCONNECTED[5:0]),
        .S_AXI_HP0_WCOUNT(NLW_inst_S_AXI_HP0_WCOUNT_UNCONNECTED[7:0]),
        .S_AXI_HP0_WDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP0_WID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP0_WLAST(1'b0),
        .S_AXI_HP0_WREADY(NLW_inst_S_AXI_HP0_WREADY_UNCONNECTED),
        .S_AXI_HP0_WRISSUECAP1_EN(1'b0),
        .S_AXI_HP0_WSTRB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP0_WVALID(1'b0),
        .S_AXI_HP1_ACLK(1'b0),
        .S_AXI_HP1_ARADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP1_ARBURST({1'b0,1'b0}),
        .S_AXI_HP1_ARCACHE({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP1_ARESETN(NLW_inst_S_AXI_HP1_ARESETN_UNCONNECTED),
        .S_AXI_HP1_ARID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP1_ARLEN({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP1_ARLOCK({1'b0,1'b0}),
        .S_AXI_HP1_ARPROT({1'b0,1'b0,1'b0}),
        .S_AXI_HP1_ARQOS({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP1_ARREADY(NLW_inst_S_AXI_HP1_ARREADY_UNCONNECTED),
        .S_AXI_HP1_ARSIZE({NLW_inst_S_AXI_HP1_ARSIZE_UNCONNECTED[2],1'b0,1'b0}),
        .S_AXI_HP1_ARVALID(1'b0),
        .S_AXI_HP1_AWADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP1_AWBURST({1'b0,1'b0}),
        .S_AXI_HP1_AWCACHE({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP1_AWID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP1_AWLEN({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP1_AWLOCK({1'b0,1'b0}),
        .S_AXI_HP1_AWPROT({1'b0,1'b0,1'b0}),
        .S_AXI_HP1_AWQOS({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP1_AWREADY(NLW_inst_S_AXI_HP1_AWREADY_UNCONNECTED),
        .S_AXI_HP1_AWSIZE({NLW_inst_S_AXI_HP1_AWSIZE_UNCONNECTED[2],1'b0,1'b0}),
        .S_AXI_HP1_AWVALID(1'b0),
        .S_AXI_HP1_BID(NLW_inst_S_AXI_HP1_BID_UNCONNECTED[5:0]),
        .S_AXI_HP1_BREADY(1'b0),
        .S_AXI_HP1_BRESP(NLW_inst_S_AXI_HP1_BRESP_UNCONNECTED[1:0]),
        .S_AXI_HP1_BVALID(NLW_inst_S_AXI_HP1_BVALID_UNCONNECTED),
        .S_AXI_HP1_RACOUNT(NLW_inst_S_AXI_HP1_RACOUNT_UNCONNECTED[2:0]),
        .S_AXI_HP1_RCOUNT(NLW_inst_S_AXI_HP1_RCOUNT_UNCONNECTED[7:0]),
        .S_AXI_HP1_RDATA(NLW_inst_S_AXI_HP1_RDATA_UNCONNECTED[63:0]),
        .S_AXI_HP1_RDISSUECAP1_EN(1'b0),
        .S_AXI_HP1_RID(NLW_inst_S_AXI_HP1_RID_UNCONNECTED[5:0]),
        .S_AXI_HP1_RLAST(NLW_inst_S_AXI_HP1_RLAST_UNCONNECTED),
        .S_AXI_HP1_RREADY(1'b0),
        .S_AXI_HP1_RRESP(NLW_inst_S_AXI_HP1_RRESP_UNCONNECTED[1:0]),
        .S_AXI_HP1_RVALID(NLW_inst_S_AXI_HP1_RVALID_UNCONNECTED),
        .S_AXI_HP1_WACOUNT(NLW_inst_S_AXI_HP1_WACOUNT_UNCONNECTED[5:0]),
        .S_AXI_HP1_WCOUNT(NLW_inst_S_AXI_HP1_WCOUNT_UNCONNECTED[7:0]),
        .S_AXI_HP1_WDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP1_WID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP1_WLAST(1'b0),
        .S_AXI_HP1_WREADY(NLW_inst_S_AXI_HP1_WREADY_UNCONNECTED),
        .S_AXI_HP1_WRISSUECAP1_EN(1'b0),
        .S_AXI_HP1_WSTRB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP1_WVALID(1'b0),
        .S_AXI_HP2_ACLK(1'b0),
        .S_AXI_HP2_ARADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP2_ARBURST({1'b0,1'b0}),
        .S_AXI_HP2_ARCACHE({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP2_ARESETN(NLW_inst_S_AXI_HP2_ARESETN_UNCONNECTED),
        .S_AXI_HP2_ARID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP2_ARLEN({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP2_ARLOCK({1'b0,1'b0}),
        .S_AXI_HP2_ARPROT({1'b0,1'b0,1'b0}),
        .S_AXI_HP2_ARQOS({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP2_ARREADY(NLW_inst_S_AXI_HP2_ARREADY_UNCONNECTED),
        .S_AXI_HP2_ARSIZE({NLW_inst_S_AXI_HP2_ARSIZE_UNCONNECTED[2],1'b0,1'b0}),
        .S_AXI_HP2_ARVALID(1'b0),
        .S_AXI_HP2_AWADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP2_AWBURST({1'b0,1'b0}),
        .S_AXI_HP2_AWCACHE({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP2_AWID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP2_AWLEN({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP2_AWLOCK({1'b0,1'b0}),
        .S_AXI_HP2_AWPROT({1'b0,1'b0,1'b0}),
        .S_AXI_HP2_AWQOS({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP2_AWREADY(NLW_inst_S_AXI_HP2_AWREADY_UNCONNECTED),
        .S_AXI_HP2_AWSIZE({NLW_inst_S_AXI_HP2_AWSIZE_UNCONNECTED[2],1'b0,1'b0}),
        .S_AXI_HP2_AWVALID(1'b0),
        .S_AXI_HP2_BID(NLW_inst_S_AXI_HP2_BID_UNCONNECTED[5:0]),
        .S_AXI_HP2_BREADY(1'b0),
        .S_AXI_HP2_BRESP(NLW_inst_S_AXI_HP2_BRESP_UNCONNECTED[1:0]),
        .S_AXI_HP2_BVALID(NLW_inst_S_AXI_HP2_BVALID_UNCONNECTED),
        .S_AXI_HP2_RACOUNT(NLW_inst_S_AXI_HP2_RACOUNT_UNCONNECTED[2:0]),
        .S_AXI_HP2_RCOUNT(NLW_inst_S_AXI_HP2_RCOUNT_UNCONNECTED[7:0]),
        .S_AXI_HP2_RDATA(NLW_inst_S_AXI_HP2_RDATA_UNCONNECTED[63:0]),
        .S_AXI_HP2_RDISSUECAP1_EN(1'b0),
        .S_AXI_HP2_RID(NLW_inst_S_AXI_HP2_RID_UNCONNECTED[5:0]),
        .S_AXI_HP2_RLAST(NLW_inst_S_AXI_HP2_RLAST_UNCONNECTED),
        .S_AXI_HP2_RREADY(1'b0),
        .S_AXI_HP2_RRESP(NLW_inst_S_AXI_HP2_RRESP_UNCONNECTED[1:0]),
        .S_AXI_HP2_RVALID(NLW_inst_S_AXI_HP2_RVALID_UNCONNECTED),
        .S_AXI_HP2_WACOUNT(NLW_inst_S_AXI_HP2_WACOUNT_UNCONNECTED[5:0]),
        .S_AXI_HP2_WCOUNT(NLW_inst_S_AXI_HP2_WCOUNT_UNCONNECTED[7:0]),
        .S_AXI_HP2_WDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP2_WID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP2_WLAST(1'b0),
        .S_AXI_HP2_WREADY(NLW_inst_S_AXI_HP2_WREADY_UNCONNECTED),
        .S_AXI_HP2_WRISSUECAP1_EN(1'b0),
        .S_AXI_HP2_WSTRB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP2_WVALID(1'b0),
        .S_AXI_HP3_ACLK(1'b0),
        .S_AXI_HP3_ARADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP3_ARBURST({1'b0,1'b0}),
        .S_AXI_HP3_ARCACHE({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP3_ARESETN(NLW_inst_S_AXI_HP3_ARESETN_UNCONNECTED),
        .S_AXI_HP3_ARID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP3_ARLEN({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP3_ARLOCK({1'b0,1'b0}),
        .S_AXI_HP3_ARPROT({1'b0,1'b0,1'b0}),
        .S_AXI_HP3_ARQOS({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP3_ARREADY(NLW_inst_S_AXI_HP3_ARREADY_UNCONNECTED),
        .S_AXI_HP3_ARSIZE({NLW_inst_S_AXI_HP3_ARSIZE_UNCONNECTED[2],1'b0,1'b0}),
        .S_AXI_HP3_ARVALID(1'b0),
        .S_AXI_HP3_AWADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP3_AWBURST({1'b0,1'b0}),
        .S_AXI_HP3_AWCACHE({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP3_AWID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP3_AWLEN({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP3_AWLOCK({1'b0,1'b0}),
        .S_AXI_HP3_AWPROT({1'b0,1'b0,1'b0}),
        .S_AXI_HP3_AWQOS({1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP3_AWREADY(NLW_inst_S_AXI_HP3_AWREADY_UNCONNECTED),
        .S_AXI_HP3_AWSIZE({NLW_inst_S_AXI_HP3_AWSIZE_UNCONNECTED[2],1'b0,1'b0}),
        .S_AXI_HP3_AWVALID(1'b0),
        .S_AXI_HP3_BID(NLW_inst_S_AXI_HP3_BID_UNCONNECTED[5:0]),
        .S_AXI_HP3_BREADY(1'b0),
        .S_AXI_HP3_BRESP(NLW_inst_S_AXI_HP3_BRESP_UNCONNECTED[1:0]),
        .S_AXI_HP3_BVALID(NLW_inst_S_AXI_HP3_BVALID_UNCONNECTED),
        .S_AXI_HP3_RACOUNT(NLW_inst_S_AXI_HP3_RACOUNT_UNCONNECTED[2:0]),
        .S_AXI_HP3_RCOUNT(NLW_inst_S_AXI_HP3_RCOUNT_UNCONNECTED[7:0]),
        .S_AXI_HP3_RDATA(NLW_inst_S_AXI_HP3_RDATA_UNCONNECTED[63:0]),
        .S_AXI_HP3_RDISSUECAP1_EN(1'b0),
        .S_AXI_HP3_RID(NLW_inst_S_AXI_HP3_RID_UNCONNECTED[5:0]),
        .S_AXI_HP3_RLAST(NLW_inst_S_AXI_HP3_RLAST_UNCONNECTED),
        .S_AXI_HP3_RREADY(1'b0),
        .S_AXI_HP3_RRESP(NLW_inst_S_AXI_HP3_RRESP_UNCONNECTED[1:0]),
        .S_AXI_HP3_RVALID(NLW_inst_S_AXI_HP3_RVALID_UNCONNECTED),
        .S_AXI_HP3_WACOUNT(NLW_inst_S_AXI_HP3_WACOUNT_UNCONNECTED[5:0]),
        .S_AXI_HP3_WCOUNT(NLW_inst_S_AXI_HP3_WCOUNT_UNCONNECTED[7:0]),
        .S_AXI_HP3_WDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP3_WID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP3_WLAST(1'b0),
        .S_AXI_HP3_WREADY(NLW_inst_S_AXI_HP3_WREADY_UNCONNECTED),
        .S_AXI_HP3_WRISSUECAP1_EN(1'b0),
        .S_AXI_HP3_WSTRB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .S_AXI_HP3_WVALID(1'b0),
        .TRACE_CLK(1'b0),
        .TRACE_CLK_OUT(NLW_inst_TRACE_CLK_OUT_UNCONNECTED),
        .TRACE_CTL(NLW_inst_TRACE_CTL_UNCONNECTED),
        .TRACE_DATA(NLW_inst_TRACE_DATA_UNCONNECTED[1:0]),
        .TTC0_CLK0_IN(1'b0),
        .TTC0_CLK1_IN(1'b0),
        .TTC0_CLK2_IN(1'b0),
        .TTC0_WAVE0_OUT(NLW_inst_TTC0_WAVE0_OUT_UNCONNECTED),
        .TTC0_WAVE1_OUT(NLW_inst_TTC0_WAVE1_OUT_UNCONNECTED),
        .TTC0_WAVE2_OUT(NLW_inst_TTC0_WAVE2_OUT_UNCONNECTED),
        .TTC1_CLK0_IN(1'b0),
        .TTC1_CLK1_IN(1'b0),
        .TTC1_CLK2_IN(1'b0),
        .TTC1_WAVE0_OUT(NLW_inst_TTC1_WAVE0_OUT_UNCONNECTED),
        .TTC1_WAVE1_OUT(NLW_inst_TTC1_WAVE1_OUT_UNCONNECTED),
        .TTC1_WAVE2_OUT(NLW_inst_TTC1_WAVE2_OUT_UNCONNECTED),
        .UART0_CTSN(1'b0),
        .UART0_DCDN(1'b0),
        .UART0_DSRN(1'b0),
        .UART0_DTRN(NLW_inst_UART0_DTRN_UNCONNECTED),
        .UART0_RIN(1'b0),
        .UART0_RTSN(NLW_inst_UART0_RTSN_UNCONNECTED),
        .UART0_RX(1'b1),
        .UART0_TX(NLW_inst_UART0_TX_UNCONNECTED),
        .UART1_CTSN(1'b0),
        .UART1_DCDN(1'b0),
        .UART1_DSRN(1'b0),
        .UART1_DTRN(NLW_inst_UART1_DTRN_UNCONNECTED),
        .UART1_RIN(1'b0),
        .UART1_RTSN(NLW_inst_UART1_RTSN_UNCONNECTED),
        .UART1_RX(1'b1),
        .UART1_TX(NLW_inst_UART1_TX_UNCONNECTED),
        .USB0_PORT_INDCTL(NLW_inst_USB0_PORT_INDCTL_UNCONNECTED[1:0]),
        .USB0_VBUS_PWRFAULT(USB0_VBUS_PWRFAULT),
        .USB0_VBUS_PWRSELECT(NLW_inst_USB0_VBUS_PWRSELECT_UNCONNECTED),
        .USB1_PORT_INDCTL(NLW_inst_USB1_PORT_INDCTL_UNCONNECTED[1:0]),
        .USB1_VBUS_PWRFAULT(1'b0),
        .USB1_VBUS_PWRSELECT(NLW_inst_USB1_VBUS_PWRSELECT_UNCONNECTED),
        .WDT_CLK_IN(1'b0),
        .WDT_RST_OUT(NLW_inst_WDT_RST_OUT_UNCONNECTED));
endmodule

(* C_DM_WIDTH = "4" *) (* C_DQS_WIDTH = "4" *) (* C_DQ_WIDTH = "32" *) 
(* C_EMIO_GPIO_WIDTH = "64" *) (* C_EN_EMIO_ENET0 = "0" *) (* C_EN_EMIO_ENET1 = "0" *) 
(* C_EN_EMIO_PJTAG = "0" *) (* C_EN_EMIO_TRACE = "0" *) (* C_FCLK_CLK0_BUF = "TRUE" *) 
(* C_FCLK_CLK1_BUF = "FALSE" *) (* C_FCLK_CLK2_BUF = "FALSE" *) (* C_FCLK_CLK3_BUF = "FALSE" *) 
(* C_GP0_EN_MODIFIABLE_TXN = "1" *) (* C_GP1_EN_MODIFIABLE_TXN = "1" *) (* C_INCLUDE_ACP_TRANS_CHECK = "0" *) 
(* C_INCLUDE_TRACE_BUFFER = "0" *) (* C_IRQ_F2P_MODE = "DIRECT" *) (* C_MIO_PRIMITIVE = "54" *) 
(* C_M_AXI_GP0_ENABLE_STATIC_REMAP = "0" *) (* C_M_AXI_GP0_ID_WIDTH = "12" *) (* C_M_AXI_GP0_THREAD_ID_WIDTH = "12" *) 
(* C_M_AXI_GP1_ENABLE_STATIC_REMAP = "0" *) (* C_M_AXI_GP1_ID_WIDTH = "12" *) (* C_M_AXI_GP1_THREAD_ID_WIDTH = "12" *) 
(* C_NUM_F2P_INTR_INPUTS = "1" *) (* C_PACKAGE_NAME = "clg484" *) (* C_PS7_SI_REV = "PRODUCTION" *) 
(* C_S_AXI_ACP_ARUSER_VAL = "31" *) (* C_S_AXI_ACP_AWUSER_VAL = "31" *) (* C_S_AXI_ACP_ID_WIDTH = "3" *) 
(* C_S_AXI_GP0_ID_WIDTH = "6" *) (* C_S_AXI_GP1_ID_WIDTH = "6" *) (* C_S_AXI_HP0_DATA_WIDTH = "64" *) 
(* C_S_AXI_HP0_ID_WIDTH = "6" *) (* C_S_AXI_HP1_DATA_WIDTH = "64" *) (* C_S_AXI_HP1_ID_WIDTH = "6" *) 
(* C_S_AXI_HP2_DATA_WIDTH = "64" *) (* C_S_AXI_HP2_ID_WIDTH = "6" *) (* C_S_AXI_HP3_DATA_WIDTH = "64" *) 
(* C_S_AXI_HP3_ID_WIDTH = "6" *) (* C_TRACE_BUFFER_CLOCK_DELAY = "12" *) (* C_TRACE_BUFFER_FIFO_SIZE = "128" *) 
(* C_TRACE_INTERNAL_WIDTH = "2" *) (* C_TRACE_PIPELINE_WIDTH = "8" *) (* C_USE_AXI_NONSECURE = "0" *) 
(* C_USE_DEFAULT_ACP_USER_VAL = "0" *) (* C_USE_M_AXI_GP0 = "1" *) (* C_USE_M_AXI_GP1 = "0" *) 
(* C_USE_S_AXI_ACP = "0" *) (* C_USE_S_AXI_GP0 = "0" *) (* C_USE_S_AXI_GP1 = "0" *) 
(* C_USE_S_AXI_HP0 = "0" *) (* C_USE_S_AXI_HP1 = "0" *) (* C_USE_S_AXI_HP2 = "0" *) 
(* C_USE_S_AXI_HP3 = "0" *) (* ORIG_REF_NAME = "processing_system7_v5_5_processing_system7" *) (* POWER = "<PROCESSOR name={system} numA9Cores={2} clockFreq={666.666667} load={0.5} /><MEMORY name={code} memType={DDR3} dataWidth={32} clockFreq={533.333313} readRate={0.5} writeRate={0.5} /><IO interface={GPIO_Bank_1} ioStandard={LVCMOS18} bidis={2} ioBank={Vcco_p1} clockFreq={1} usageRate={0.5} /><IO interface={GPIO_Bank_0} ioStandard={LVCMOS33} bidis={10} ioBank={Vcco_p0} clockFreq={1} usageRate={0.5} /><IO interface={Timer} ioStandard={} bidis={0} ioBank={} clockFreq={111.111115} usageRate={0.5} /><IO interface={UART} ioStandard={LVCMOS18} bidis={2} ioBank={Vcco_p1} clockFreq={50.000000} usageRate={0.5} /><IO interface={SD} ioStandard={LVCMOS18} bidis={8} ioBank={Vcco_p1} clockFreq={50.000000} usageRate={0.5} /><IO interface={USB} ioStandard={LVCMOS18} bidis={12} ioBank={Vcco_p1} clockFreq={60} usageRate={0.5} /><IO interface={GigE} ioStandard={LVCMOS18} bidis={14} ioBank={Vcco_p1} clockFreq={125.000000} usageRate={0.5} /><IO interface={QSPI} ioStandard={LVCMOS33} bidis={6} ioBank={Vcco_p0} clockFreq={200.000000} usageRate={0.5} /><PLL domain={Processor} vco={1333.333} /><PLL domain={Memory} vco={1066.667} /><PLL domain={IO} vco={1000.000} /><AXI interface={M_AXI_GP0} dataWidth={32} clockFreq={100} usageRate={0.5} />/>" *) 
(* USE_TRACE_DATA_EDGE_DETECTOR = "0" *) (* hw_handoff = "design_1_processing_system7_0_0.hwdef" *) 
module design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7
   (CAN0_PHY_TX,
    CAN0_PHY_RX,
    CAN1_PHY_TX,
    CAN1_PHY_RX,
    ENET0_GMII_TX_EN,
    ENET0_GMII_TX_ER,
    ENET0_MDIO_MDC,
    ENET0_MDIO_O,
    ENET0_MDIO_T,
    ENET0_PTP_DELAY_REQ_RX,
    ENET0_PTP_DELAY_REQ_TX,
    ENET0_PTP_PDELAY_REQ_RX,
    ENET0_PTP_PDELAY_REQ_TX,
    ENET0_PTP_PDELAY_RESP_RX,
    ENET0_PTP_PDELAY_RESP_TX,
    ENET0_PTP_SYNC_FRAME_RX,
    ENET0_PTP_SYNC_FRAME_TX,
    ENET0_SOF_RX,
    ENET0_SOF_TX,
    ENET0_GMII_TXD,
    ENET0_GMII_COL,
    ENET0_GMII_CRS,
    ENET0_GMII_RX_CLK,
    ENET0_GMII_RX_DV,
    ENET0_GMII_RX_ER,
    ENET0_GMII_TX_CLK,
    ENET0_MDIO_I,
    ENET0_EXT_INTIN,
    ENET0_GMII_RXD,
    ENET1_GMII_TX_EN,
    ENET1_GMII_TX_ER,
    ENET1_MDIO_MDC,
    ENET1_MDIO_O,
    ENET1_MDIO_T,
    ENET1_PTP_DELAY_REQ_RX,
    ENET1_PTP_DELAY_REQ_TX,
    ENET1_PTP_PDELAY_REQ_RX,
    ENET1_PTP_PDELAY_REQ_TX,
    ENET1_PTP_PDELAY_RESP_RX,
    ENET1_PTP_PDELAY_RESP_TX,
    ENET1_PTP_SYNC_FRAME_RX,
    ENET1_PTP_SYNC_FRAME_TX,
    ENET1_SOF_RX,
    ENET1_SOF_TX,
    ENET1_GMII_TXD,
    ENET1_GMII_COL,
    ENET1_GMII_CRS,
    ENET1_GMII_RX_CLK,
    ENET1_GMII_RX_DV,
    ENET1_GMII_RX_ER,
    ENET1_GMII_TX_CLK,
    ENET1_MDIO_I,
    ENET1_EXT_INTIN,
    ENET1_GMII_RXD,
    GPIO_I,
    GPIO_O,
    GPIO_T,
    I2C0_SDA_I,
    I2C0_SDA_O,
    I2C0_SDA_T,
    I2C0_SCL_I,
    I2C0_SCL_O,
    I2C0_SCL_T,
    I2C1_SDA_I,
    I2C1_SDA_O,
    I2C1_SDA_T,
    I2C1_SCL_I,
    I2C1_SCL_O,
    I2C1_SCL_T,
    PJTAG_TCK,
    PJTAG_TMS,
    PJTAG_TDI,
    PJTAG_TDO,
    SDIO0_CLK,
    SDIO0_CLK_FB,
    SDIO0_CMD_O,
    SDIO0_CMD_I,
    SDIO0_CMD_T,
    SDIO0_DATA_I,
    SDIO0_DATA_O,
    SDIO0_DATA_T,
    SDIO0_LED,
    SDIO0_CDN,
    SDIO0_WP,
    SDIO0_BUSPOW,
    SDIO0_BUSVOLT,
    SDIO1_CLK,
    SDIO1_CLK_FB,
    SDIO1_CMD_O,
    SDIO1_CMD_I,
    SDIO1_CMD_T,
    SDIO1_DATA_I,
    SDIO1_DATA_O,
    SDIO1_DATA_T,
    SDIO1_LED,
    SDIO1_CDN,
    SDIO1_WP,
    SDIO1_BUSPOW,
    SDIO1_BUSVOLT,
    SPI0_SCLK_I,
    SPI0_SCLK_O,
    SPI0_SCLK_T,
    SPI0_MOSI_I,
    SPI0_MOSI_O,
    SPI0_MOSI_T,
    SPI0_MISO_I,
    SPI0_MISO_O,
    SPI0_MISO_T,
    SPI0_SS_I,
    SPI0_SS_O,
    SPI0_SS1_O,
    SPI0_SS2_O,
    SPI0_SS_T,
    SPI1_SCLK_I,
    SPI1_SCLK_O,
    SPI1_SCLK_T,
    SPI1_MOSI_I,
    SPI1_MOSI_O,
    SPI1_MOSI_T,
    SPI1_MISO_I,
    SPI1_MISO_O,
    SPI1_MISO_T,
    SPI1_SS_I,
    SPI1_SS_O,
    SPI1_SS1_O,
    SPI1_SS2_O,
    SPI1_SS_T,
    UART0_DTRN,
    UART0_RTSN,
    UART0_TX,
    UART0_CTSN,
    UART0_DCDN,
    UART0_DSRN,
    UART0_RIN,
    UART0_RX,
    UART1_DTRN,
    UART1_RTSN,
    UART1_TX,
    UART1_CTSN,
    UART1_DCDN,
    UART1_DSRN,
    UART1_RIN,
    UART1_RX,
    TTC0_WAVE0_OUT,
    TTC0_WAVE1_OUT,
    TTC0_WAVE2_OUT,
    TTC0_CLK0_IN,
    TTC0_CLK1_IN,
    TTC0_CLK2_IN,
    TTC1_WAVE0_OUT,
    TTC1_WAVE1_OUT,
    TTC1_WAVE2_OUT,
    TTC1_CLK0_IN,
    TTC1_CLK1_IN,
    TTC1_CLK2_IN,
    WDT_CLK_IN,
    WDT_RST_OUT,
    TRACE_CLK,
    TRACE_CTL,
    TRACE_DATA,
    TRACE_CLK_OUT,
    USB0_PORT_INDCTL,
    USB0_VBUS_PWRSELECT,
    USB0_VBUS_PWRFAULT,
    USB1_PORT_INDCTL,
    USB1_VBUS_PWRSELECT,
    USB1_VBUS_PWRFAULT,
    SRAM_INTIN,
    M_AXI_GP0_ARESETN,
    M_AXI_GP0_ARVALID,
    M_AXI_GP0_AWVALID,
    M_AXI_GP0_BREADY,
    M_AXI_GP0_RREADY,
    M_AXI_GP0_WLAST,
    M_AXI_GP0_WVALID,
    M_AXI_GP0_ARID,
    M_AXI_GP0_AWID,
    M_AXI_GP0_WID,
    M_AXI_GP0_ARBURST,
    M_AXI_GP0_ARLOCK,
    M_AXI_GP0_ARSIZE,
    M_AXI_GP0_AWBURST,
    M_AXI_GP0_AWLOCK,
    M_AXI_GP0_AWSIZE,
    M_AXI_GP0_ARPROT,
    M_AXI_GP0_AWPROT,
    M_AXI_GP0_ARADDR,
    M_AXI_GP0_AWADDR,
    M_AXI_GP0_WDATA,
    M_AXI_GP0_ARCACHE,
    M_AXI_GP0_ARLEN,
    M_AXI_GP0_ARQOS,
    M_AXI_GP0_AWCACHE,
    M_AXI_GP0_AWLEN,
    M_AXI_GP0_AWQOS,
    M_AXI_GP0_WSTRB,
    M_AXI_GP0_ACLK,
    M_AXI_GP0_ARREADY,
    M_AXI_GP0_AWREADY,
    M_AXI_GP0_BVALID,
    M_AXI_GP0_RLAST,
    M_AXI_GP0_RVALID,
    M_AXI_GP0_WREADY,
    M_AXI_GP0_BID,
    M_AXI_GP0_RID,
    M_AXI_GP0_BRESP,
    M_AXI_GP0_RRESP,
    M_AXI_GP0_RDATA,
    M_AXI_GP1_ARESETN,
    M_AXI_GP1_ARVALID,
    M_AXI_GP1_AWVALID,
    M_AXI_GP1_BREADY,
    M_AXI_GP1_RREADY,
    M_AXI_GP1_WLAST,
    M_AXI_GP1_WVALID,
    M_AXI_GP1_ARID,
    M_AXI_GP1_AWID,
    M_AXI_GP1_WID,
    M_AXI_GP1_ARBURST,
    M_AXI_GP1_ARLOCK,
    M_AXI_GP1_ARSIZE,
    M_AXI_GP1_AWBURST,
    M_AXI_GP1_AWLOCK,
    M_AXI_GP1_AWSIZE,
    M_AXI_GP1_ARPROT,
    M_AXI_GP1_AWPROT,
    M_AXI_GP1_ARADDR,
    M_AXI_GP1_AWADDR,
    M_AXI_GP1_WDATA,
    M_AXI_GP1_ARCACHE,
    M_AXI_GP1_ARLEN,
    M_AXI_GP1_ARQOS,
    M_AXI_GP1_AWCACHE,
    M_AXI_GP1_AWLEN,
    M_AXI_GP1_AWQOS,
    M_AXI_GP1_WSTRB,
    M_AXI_GP1_ACLK,
    M_AXI_GP1_ARREADY,
    M_AXI_GP1_AWREADY,
    M_AXI_GP1_BVALID,
    M_AXI_GP1_RLAST,
    M_AXI_GP1_RVALID,
    M_AXI_GP1_WREADY,
    M_AXI_GP1_BID,
    M_AXI_GP1_RID,
    M_AXI_GP1_BRESP,
    M_AXI_GP1_RRESP,
    M_AXI_GP1_RDATA,
    S_AXI_GP0_ARESETN,
    S_AXI_GP0_ARREADY,
    S_AXI_GP0_AWREADY,
    S_AXI_GP0_BVALID,
    S_AXI_GP0_RLAST,
    S_AXI_GP0_RVALID,
    S_AXI_GP0_WREADY,
    S_AXI_GP0_BRESP,
    S_AXI_GP0_RRESP,
    S_AXI_GP0_RDATA,
    S_AXI_GP0_BID,
    S_AXI_GP0_RID,
    S_AXI_GP0_ACLK,
    S_AXI_GP0_ARVALID,
    S_AXI_GP0_AWVALID,
    S_AXI_GP0_BREADY,
    S_AXI_GP0_RREADY,
    S_AXI_GP0_WLAST,
    S_AXI_GP0_WVALID,
    S_AXI_GP0_ARBURST,
    S_AXI_GP0_ARLOCK,
    S_AXI_GP0_ARSIZE,
    S_AXI_GP0_AWBURST,
    S_AXI_GP0_AWLOCK,
    S_AXI_GP0_AWSIZE,
    S_AXI_GP0_ARPROT,
    S_AXI_GP0_AWPROT,
    S_AXI_GP0_ARADDR,
    S_AXI_GP0_AWADDR,
    S_AXI_GP0_WDATA,
    S_AXI_GP0_ARCACHE,
    S_AXI_GP0_ARLEN,
    S_AXI_GP0_ARQOS,
    S_AXI_GP0_AWCACHE,
    S_AXI_GP0_AWLEN,
    S_AXI_GP0_AWQOS,
    S_AXI_GP0_WSTRB,
    S_AXI_GP0_ARID,
    S_AXI_GP0_AWID,
    S_AXI_GP0_WID,
    S_AXI_GP1_ARESETN,
    S_AXI_GP1_ARREADY,
    S_AXI_GP1_AWREADY,
    S_AXI_GP1_BVALID,
    S_AXI_GP1_RLAST,
    S_AXI_GP1_RVALID,
    S_AXI_GP1_WREADY,
    S_AXI_GP1_BRESP,
    S_AXI_GP1_RRESP,
    S_AXI_GP1_RDATA,
    S_AXI_GP1_BID,
    S_AXI_GP1_RID,
    S_AXI_GP1_ACLK,
    S_AXI_GP1_ARVALID,
    S_AXI_GP1_AWVALID,
    S_AXI_GP1_BREADY,
    S_AXI_GP1_RREADY,
    S_AXI_GP1_WLAST,
    S_AXI_GP1_WVALID,
    S_AXI_GP1_ARBURST,
    S_AXI_GP1_ARLOCK,
    S_AXI_GP1_ARSIZE,
    S_AXI_GP1_AWBURST,
    S_AXI_GP1_AWLOCK,
    S_AXI_GP1_AWSIZE,
    S_AXI_GP1_ARPROT,
    S_AXI_GP1_AWPROT,
    S_AXI_GP1_ARADDR,
    S_AXI_GP1_AWADDR,
    S_AXI_GP1_WDATA,
    S_AXI_GP1_ARCACHE,
    S_AXI_GP1_ARLEN,
    S_AXI_GP1_ARQOS,
    S_AXI_GP1_AWCACHE,
    S_AXI_GP1_AWLEN,
    S_AXI_GP1_AWQOS,
    S_AXI_GP1_WSTRB,
    S_AXI_GP1_ARID,
    S_AXI_GP1_AWID,
    S_AXI_GP1_WID,
    S_AXI_ACP_ARESETN,
    S_AXI_ACP_ARREADY,
    S_AXI_ACP_AWREADY,
    S_AXI_ACP_BVALID,
    S_AXI_ACP_RLAST,
    S_AXI_ACP_RVALID,
    S_AXI_ACP_WREADY,
    S_AXI_ACP_BRESP,
    S_AXI_ACP_RRESP,
    S_AXI_ACP_BID,
    S_AXI_ACP_RID,
    S_AXI_ACP_RDATA,
    S_AXI_ACP_ACLK,
    S_AXI_ACP_ARVALID,
    S_AXI_ACP_AWVALID,
    S_AXI_ACP_BREADY,
    S_AXI_ACP_RREADY,
    S_AXI_ACP_WLAST,
    S_AXI_ACP_WVALID,
    S_AXI_ACP_ARID,
    S_AXI_ACP_ARPROT,
    S_AXI_ACP_AWID,
    S_AXI_ACP_AWPROT,
    S_AXI_ACP_WID,
    S_AXI_ACP_ARADDR,
    S_AXI_ACP_AWADDR,
    S_AXI_ACP_ARCACHE,
    S_AXI_ACP_ARLEN,
    S_AXI_ACP_ARQOS,
    S_AXI_ACP_AWCACHE,
    S_AXI_ACP_AWLEN,
    S_AXI_ACP_AWQOS,
    S_AXI_ACP_ARBURST,
    S_AXI_ACP_ARLOCK,
    S_AXI_ACP_ARSIZE,
    S_AXI_ACP_AWBURST,
    S_AXI_ACP_AWLOCK,
    S_AXI_ACP_AWSIZE,
    S_AXI_ACP_ARUSER,
    S_AXI_ACP_AWUSER,
    S_AXI_ACP_WDATA,
    S_AXI_ACP_WSTRB,
    S_AXI_HP0_ARESETN,
    S_AXI_HP0_ARREADY,
    S_AXI_HP0_AWREADY,
    S_AXI_HP0_BVALID,
    S_AXI_HP0_RLAST,
    S_AXI_HP0_RVALID,
    S_AXI_HP0_WREADY,
    S_AXI_HP0_BRESP,
    S_AXI_HP0_RRESP,
    S_AXI_HP0_BID,
    S_AXI_HP0_RID,
    S_AXI_HP0_RDATA,
    S_AXI_HP0_RCOUNT,
    S_AXI_HP0_WCOUNT,
    S_AXI_HP0_RACOUNT,
    S_AXI_HP0_WACOUNT,
    S_AXI_HP0_ACLK,
    S_AXI_HP0_ARVALID,
    S_AXI_HP0_AWVALID,
    S_AXI_HP0_BREADY,
    S_AXI_HP0_RDISSUECAP1_EN,
    S_AXI_HP0_RREADY,
    S_AXI_HP0_WLAST,
    S_AXI_HP0_WRISSUECAP1_EN,
    S_AXI_HP0_WVALID,
    S_AXI_HP0_ARBURST,
    S_AXI_HP0_ARLOCK,
    S_AXI_HP0_ARSIZE,
    S_AXI_HP0_AWBURST,
    S_AXI_HP0_AWLOCK,
    S_AXI_HP0_AWSIZE,
    S_AXI_HP0_ARPROT,
    S_AXI_HP0_AWPROT,
    S_AXI_HP0_ARADDR,
    S_AXI_HP0_AWADDR,
    S_AXI_HP0_ARCACHE,
    S_AXI_HP0_ARLEN,
    S_AXI_HP0_ARQOS,
    S_AXI_HP0_AWCACHE,
    S_AXI_HP0_AWLEN,
    S_AXI_HP0_AWQOS,
    S_AXI_HP0_ARID,
    S_AXI_HP0_AWID,
    S_AXI_HP0_WID,
    S_AXI_HP0_WDATA,
    S_AXI_HP0_WSTRB,
    S_AXI_HP1_ARESETN,
    S_AXI_HP1_ARREADY,
    S_AXI_HP1_AWREADY,
    S_AXI_HP1_BVALID,
    S_AXI_HP1_RLAST,
    S_AXI_HP1_RVALID,
    S_AXI_HP1_WREADY,
    S_AXI_HP1_BRESP,
    S_AXI_HP1_RRESP,
    S_AXI_HP1_BID,
    S_AXI_HP1_RID,
    S_AXI_HP1_RDATA,
    S_AXI_HP1_RCOUNT,
    S_AXI_HP1_WCOUNT,
    S_AXI_HP1_RACOUNT,
    S_AXI_HP1_WACOUNT,
    S_AXI_HP1_ACLK,
    S_AXI_HP1_ARVALID,
    S_AXI_HP1_AWVALID,
    S_AXI_HP1_BREADY,
    S_AXI_HP1_RDISSUECAP1_EN,
    S_AXI_HP1_RREADY,
    S_AXI_HP1_WLAST,
    S_AXI_HP1_WRISSUECAP1_EN,
    S_AXI_HP1_WVALID,
    S_AXI_HP1_ARBURST,
    S_AXI_HP1_ARLOCK,
    S_AXI_HP1_ARSIZE,
    S_AXI_HP1_AWBURST,
    S_AXI_HP1_AWLOCK,
    S_AXI_HP1_AWSIZE,
    S_AXI_HP1_ARPROT,
    S_AXI_HP1_AWPROT,
    S_AXI_HP1_ARADDR,
    S_AXI_HP1_AWADDR,
    S_AXI_HP1_ARCACHE,
    S_AXI_HP1_ARLEN,
    S_AXI_HP1_ARQOS,
    S_AXI_HP1_AWCACHE,
    S_AXI_HP1_AWLEN,
    S_AXI_HP1_AWQOS,
    S_AXI_HP1_ARID,
    S_AXI_HP1_AWID,
    S_AXI_HP1_WID,
    S_AXI_HP1_WDATA,
    S_AXI_HP1_WSTRB,
    S_AXI_HP2_ARESETN,
    S_AXI_HP2_ARREADY,
    S_AXI_HP2_AWREADY,
    S_AXI_HP2_BVALID,
    S_AXI_HP2_RLAST,
    S_AXI_HP2_RVALID,
    S_AXI_HP2_WREADY,
    S_AXI_HP2_BRESP,
    S_AXI_HP2_RRESP,
    S_AXI_HP2_BID,
    S_AXI_HP2_RID,
    S_AXI_HP2_RDATA,
    S_AXI_HP2_RCOUNT,
    S_AXI_HP2_WCOUNT,
    S_AXI_HP2_RACOUNT,
    S_AXI_HP2_WACOUNT,
    S_AXI_HP2_ACLK,
    S_AXI_HP2_ARVALID,
    S_AXI_HP2_AWVALID,
    S_AXI_HP2_BREADY,
    S_AXI_HP2_RDISSUECAP1_EN,
    S_AXI_HP2_RREADY,
    S_AXI_HP2_WLAST,
    S_AXI_HP2_WRISSUECAP1_EN,
    S_AXI_HP2_WVALID,
    S_AXI_HP2_ARBURST,
    S_AXI_HP2_ARLOCK,
    S_AXI_HP2_ARSIZE,
    S_AXI_HP2_AWBURST,
    S_AXI_HP2_AWLOCK,
    S_AXI_HP2_AWSIZE,
    S_AXI_HP2_ARPROT,
    S_AXI_HP2_AWPROT,
    S_AXI_HP2_ARADDR,
    S_AXI_HP2_AWADDR,
    S_AXI_HP2_ARCACHE,
    S_AXI_HP2_ARLEN,
    S_AXI_HP2_ARQOS,
    S_AXI_HP2_AWCACHE,
    S_AXI_HP2_AWLEN,
    S_AXI_HP2_AWQOS,
    S_AXI_HP2_ARID,
    S_AXI_HP2_AWID,
    S_AXI_HP2_WID,
    S_AXI_HP2_WDATA,
    S_AXI_HP2_WSTRB,
    S_AXI_HP3_ARESETN,
    S_AXI_HP3_ARREADY,
    S_AXI_HP3_AWREADY,
    S_AXI_HP3_BVALID,
    S_AXI_HP3_RLAST,
    S_AXI_HP3_RVALID,
    S_AXI_HP3_WREADY,
    S_AXI_HP3_BRESP,
    S_AXI_HP3_RRESP,
    S_AXI_HP3_BID,
    S_AXI_HP3_RID,
    S_AXI_HP3_RDATA,
    S_AXI_HP3_RCOUNT,
    S_AXI_HP3_WCOUNT,
    S_AXI_HP3_RACOUNT,
    S_AXI_HP3_WACOUNT,
    S_AXI_HP3_ACLK,
    S_AXI_HP3_ARVALID,
    S_AXI_HP3_AWVALID,
    S_AXI_HP3_BREADY,
    S_AXI_HP3_RDISSUECAP1_EN,
    S_AXI_HP3_RREADY,
    S_AXI_HP3_WLAST,
    S_AXI_HP3_WRISSUECAP1_EN,
    S_AXI_HP3_WVALID,
    S_AXI_HP3_ARBURST,
    S_AXI_HP3_ARLOCK,
    S_AXI_HP3_ARSIZE,
    S_AXI_HP3_AWBURST,
    S_AXI_HP3_AWLOCK,
    S_AXI_HP3_AWSIZE,
    S_AXI_HP3_ARPROT,
    S_AXI_HP3_AWPROT,
    S_AXI_HP3_ARADDR,
    S_AXI_HP3_AWADDR,
    S_AXI_HP3_ARCACHE,
    S_AXI_HP3_ARLEN,
    S_AXI_HP3_ARQOS,
    S_AXI_HP3_AWCACHE,
    S_AXI_HP3_AWLEN,
    S_AXI_HP3_AWQOS,
    S_AXI_HP3_ARID,
    S_AXI_HP3_AWID,
    S_AXI_HP3_WID,
    S_AXI_HP3_WDATA,
    S_AXI_HP3_WSTRB,
    IRQ_P2F_DMAC_ABORT,
    IRQ_P2F_DMAC0,
    IRQ_P2F_DMAC1,
    IRQ_P2F_DMAC2,
    IRQ_P2F_DMAC3,
    IRQ_P2F_DMAC4,
    IRQ_P2F_DMAC5,
    IRQ_P2F_DMAC6,
    IRQ_P2F_DMAC7,
    IRQ_P2F_SMC,
    IRQ_P2F_QSPI,
    IRQ_P2F_CTI,
    IRQ_P2F_GPIO,
    IRQ_P2F_USB0,
    IRQ_P2F_ENET0,
    IRQ_P2F_ENET_WAKE0,
    IRQ_P2F_SDIO0,
    IRQ_P2F_I2C0,
    IRQ_P2F_SPI0,
    IRQ_P2F_UART0,
    IRQ_P2F_CAN0,
    IRQ_P2F_USB1,
    IRQ_P2F_ENET1,
    IRQ_P2F_ENET_WAKE1,
    IRQ_P2F_SDIO1,
    IRQ_P2F_I2C1,
    IRQ_P2F_SPI1,
    IRQ_P2F_UART1,
    IRQ_P2F_CAN1,
    IRQ_F2P,
    Core0_nFIQ,
    Core0_nIRQ,
    Core1_nFIQ,
    Core1_nIRQ,
    DMA0_DATYPE,
    DMA0_DAVALID,
    DMA0_DRREADY,
    DMA0_RSTN,
    DMA1_DATYPE,
    DMA1_DAVALID,
    DMA1_DRREADY,
    DMA1_RSTN,
    DMA2_DATYPE,
    DMA2_DAVALID,
    DMA2_DRREADY,
    DMA2_RSTN,
    DMA3_DATYPE,
    DMA3_DAVALID,
    DMA3_DRREADY,
    DMA3_RSTN,
    DMA0_ACLK,
    DMA0_DAREADY,
    DMA0_DRLAST,
    DMA0_DRVALID,
    DMA1_ACLK,
    DMA1_DAREADY,
    DMA1_DRLAST,
    DMA1_DRVALID,
    DMA2_ACLK,
    DMA2_DAREADY,
    DMA2_DRLAST,
    DMA2_DRVALID,
    DMA3_ACLK,
    DMA3_DAREADY,
    DMA3_DRLAST,
    DMA3_DRVALID,
    DMA0_DRTYPE,
    DMA1_DRTYPE,
    DMA2_DRTYPE,
    DMA3_DRTYPE,
    FCLK_CLK3,
    FCLK_CLK2,
    FCLK_CLK1,
    FCLK_CLK0,
    FCLK_CLKTRIG3_N,
    FCLK_CLKTRIG2_N,
    FCLK_CLKTRIG1_N,
    FCLK_CLKTRIG0_N,
    FCLK_RESET3_N,
    FCLK_RESET2_N,
    FCLK_RESET1_N,
    FCLK_RESET0_N,
    FTMD_TRACEIN_DATA,
    FTMD_TRACEIN_VALID,
    FTMD_TRACEIN_CLK,
    FTMD_TRACEIN_ATID,
    FTMT_F2P_TRIG_0,
    FTMT_F2P_TRIGACK_0,
    FTMT_F2P_TRIG_1,
    FTMT_F2P_TRIGACK_1,
    FTMT_F2P_TRIG_2,
    FTMT_F2P_TRIGACK_2,
    FTMT_F2P_TRIG_3,
    FTMT_F2P_TRIGACK_3,
    FTMT_F2P_DEBUG,
    FTMT_P2F_TRIGACK_0,
    FTMT_P2F_TRIG_0,
    FTMT_P2F_TRIGACK_1,
    FTMT_P2F_TRIG_1,
    FTMT_P2F_TRIGACK_2,
    FTMT_P2F_TRIG_2,
    FTMT_P2F_TRIGACK_3,
    FTMT_P2F_TRIG_3,
    FTMT_P2F_DEBUG,
    FPGA_IDLE_N,
    EVENT_EVENTO,
    EVENT_STANDBYWFE,
    EVENT_STANDBYWFI,
    EVENT_EVENTI,
    DDR_ARB,
    MIO,
    DDR_CAS_n,
    DDR_CKE,
    DDR_Clk_n,
    DDR_Clk,
    DDR_CS_n,
    DDR_DRSTB,
    DDR_ODT,
    DDR_RAS_n,
    DDR_WEB,
    DDR_BankAddr,
    DDR_Addr,
    DDR_VRN,
    DDR_VRP,
    DDR_DM,
    DDR_DQ,
    DDR_DQS_n,
    DDR_DQS,
    PS_SRSTB,
    PS_CLK,
    PS_PORB);
  output CAN0_PHY_TX;
  input CAN0_PHY_RX;
  output CAN1_PHY_TX;
  input CAN1_PHY_RX;
  output ENET0_GMII_TX_EN;
  output ENET0_GMII_TX_ER;
  output ENET0_MDIO_MDC;
  output ENET0_MDIO_O;
  output ENET0_MDIO_T;
  output ENET0_PTP_DELAY_REQ_RX;
  output ENET0_PTP_DELAY_REQ_TX;
  output ENET0_PTP_PDELAY_REQ_RX;
  output ENET0_PTP_PDELAY_REQ_TX;
  output ENET0_PTP_PDELAY_RESP_RX;
  output ENET0_PTP_PDELAY_RESP_TX;
  output ENET0_PTP_SYNC_FRAME_RX;
  output ENET0_PTP_SYNC_FRAME_TX;
  output ENET0_SOF_RX;
  output ENET0_SOF_TX;
  output [7:0]ENET0_GMII_TXD;
  input ENET0_GMII_COL;
  input ENET0_GMII_CRS;
  input ENET0_GMII_RX_CLK;
  input ENET0_GMII_RX_DV;
  input ENET0_GMII_RX_ER;
  input ENET0_GMII_TX_CLK;
  input ENET0_MDIO_I;
  input ENET0_EXT_INTIN;
  input [7:0]ENET0_GMII_RXD;
  output ENET1_GMII_TX_EN;
  output ENET1_GMII_TX_ER;
  output ENET1_MDIO_MDC;
  output ENET1_MDIO_O;
  output ENET1_MDIO_T;
  output ENET1_PTP_DELAY_REQ_RX;
  output ENET1_PTP_DELAY_REQ_TX;
  output ENET1_PTP_PDELAY_REQ_RX;
  output ENET1_PTP_PDELAY_REQ_TX;
  output ENET1_PTP_PDELAY_RESP_RX;
  output ENET1_PTP_PDELAY_RESP_TX;
  output ENET1_PTP_SYNC_FRAME_RX;
  output ENET1_PTP_SYNC_FRAME_TX;
  output ENET1_SOF_RX;
  output ENET1_SOF_TX;
  output [7:0]ENET1_GMII_TXD;
  input ENET1_GMII_COL;
  input ENET1_GMII_CRS;
  input ENET1_GMII_RX_CLK;
  input ENET1_GMII_RX_DV;
  input ENET1_GMII_RX_ER;
  input ENET1_GMII_TX_CLK;
  input ENET1_MDIO_I;
  input ENET1_EXT_INTIN;
  input [7:0]ENET1_GMII_RXD;
  input [63:0]GPIO_I;
  output [63:0]GPIO_O;
  output [63:0]GPIO_T;
  input I2C0_SDA_I;
  output I2C0_SDA_O;
  output I2C0_SDA_T;
  input I2C0_SCL_I;
  output I2C0_SCL_O;
  output I2C0_SCL_T;
  input I2C1_SDA_I;
  output I2C1_SDA_O;
  output I2C1_SDA_T;
  input I2C1_SCL_I;
  output I2C1_SCL_O;
  output I2C1_SCL_T;
  input PJTAG_TCK;
  input PJTAG_TMS;
  input PJTAG_TDI;
  output PJTAG_TDO;
  output SDIO0_CLK;
  input SDIO0_CLK_FB;
  output SDIO0_CMD_O;
  input SDIO0_CMD_I;
  output SDIO0_CMD_T;
  input [3:0]SDIO0_DATA_I;
  output [3:0]SDIO0_DATA_O;
  output [3:0]SDIO0_DATA_T;
  output SDIO0_LED;
  input SDIO0_CDN;
  input SDIO0_WP;
  output SDIO0_BUSPOW;
  output [2:0]SDIO0_BUSVOLT;
  output SDIO1_CLK;
  input SDIO1_CLK_FB;
  output SDIO1_CMD_O;
  input SDIO1_CMD_I;
  output SDIO1_CMD_T;
  input [3:0]SDIO1_DATA_I;
  output [3:0]SDIO1_DATA_O;
  output [3:0]SDIO1_DATA_T;
  output SDIO1_LED;
  input SDIO1_CDN;
  input SDIO1_WP;
  output SDIO1_BUSPOW;
  output [2:0]SDIO1_BUSVOLT;
  input SPI0_SCLK_I;
  output SPI0_SCLK_O;
  output SPI0_SCLK_T;
  input SPI0_MOSI_I;
  output SPI0_MOSI_O;
  output SPI0_MOSI_T;
  input SPI0_MISO_I;
  output SPI0_MISO_O;
  output SPI0_MISO_T;
  input SPI0_SS_I;
  output SPI0_SS_O;
  output SPI0_SS1_O;
  output SPI0_SS2_O;
  output SPI0_SS_T;
  input SPI1_SCLK_I;
  output SPI1_SCLK_O;
  output SPI1_SCLK_T;
  input SPI1_MOSI_I;
  output SPI1_MOSI_O;
  output SPI1_MOSI_T;
  input SPI1_MISO_I;
  output SPI1_MISO_O;
  output SPI1_MISO_T;
  input SPI1_SS_I;
  output SPI1_SS_O;
  output SPI1_SS1_O;
  output SPI1_SS2_O;
  output SPI1_SS_T;
  output UART0_DTRN;
  output UART0_RTSN;
  output UART0_TX;
  input UART0_CTSN;
  input UART0_DCDN;
  input UART0_DSRN;
  input UART0_RIN;
  input UART0_RX;
  output UART1_DTRN;
  output UART1_RTSN;
  output UART1_TX;
  input UART1_CTSN;
  input UART1_DCDN;
  input UART1_DSRN;
  input UART1_RIN;
  input UART1_RX;
  output TTC0_WAVE0_OUT;
  output TTC0_WAVE1_OUT;
  output TTC0_WAVE2_OUT;
  input TTC0_CLK0_IN;
  input TTC0_CLK1_IN;
  input TTC0_CLK2_IN;
  output TTC1_WAVE0_OUT;
  output TTC1_WAVE1_OUT;
  output TTC1_WAVE2_OUT;
  input TTC1_CLK0_IN;
  input TTC1_CLK1_IN;
  input TTC1_CLK2_IN;
  input WDT_CLK_IN;
  output WDT_RST_OUT;
  input TRACE_CLK;
  output TRACE_CTL;
  output [1:0]TRACE_DATA;
  output TRACE_CLK_OUT;
  output [1:0]USB0_PORT_INDCTL;
  output USB0_VBUS_PWRSELECT;
  input USB0_VBUS_PWRFAULT;
  output [1:0]USB1_PORT_INDCTL;
  output USB1_VBUS_PWRSELECT;
  input USB1_VBUS_PWRFAULT;
  input SRAM_INTIN;
  output M_AXI_GP0_ARESETN;
  output M_AXI_GP0_ARVALID;
  output M_AXI_GP0_AWVALID;
  output M_AXI_GP0_BREADY;
  output M_AXI_GP0_RREADY;
  output M_AXI_GP0_WLAST;
  output M_AXI_GP0_WVALID;
  output [11:0]M_AXI_GP0_ARID;
  output [11:0]M_AXI_GP0_AWID;
  output [11:0]M_AXI_GP0_WID;
  output [1:0]M_AXI_GP0_ARBURST;
  output [1:0]M_AXI_GP0_ARLOCK;
  output [2:0]M_AXI_GP0_ARSIZE;
  output [1:0]M_AXI_GP0_AWBURST;
  output [1:0]M_AXI_GP0_AWLOCK;
  output [2:0]M_AXI_GP0_AWSIZE;
  output [2:0]M_AXI_GP0_ARPROT;
  output [2:0]M_AXI_GP0_AWPROT;
  output [31:0]M_AXI_GP0_ARADDR;
  output [31:0]M_AXI_GP0_AWADDR;
  output [31:0]M_AXI_GP0_WDATA;
  output [3:0]M_AXI_GP0_ARCACHE;
  output [3:0]M_AXI_GP0_ARLEN;
  output [3:0]M_AXI_GP0_ARQOS;
  output [3:0]M_AXI_GP0_AWCACHE;
  output [3:0]M_AXI_GP0_AWLEN;
  output [3:0]M_AXI_GP0_AWQOS;
  output [3:0]M_AXI_GP0_WSTRB;
  input M_AXI_GP0_ACLK;
  input M_AXI_GP0_ARREADY;
  input M_AXI_GP0_AWREADY;
  input M_AXI_GP0_BVALID;
  input M_AXI_GP0_RLAST;
  input M_AXI_GP0_RVALID;
  input M_AXI_GP0_WREADY;
  input [11:0]M_AXI_GP0_BID;
  input [11:0]M_AXI_GP0_RID;
  input [1:0]M_AXI_GP0_BRESP;
  input [1:0]M_AXI_GP0_RRESP;
  input [31:0]M_AXI_GP0_RDATA;
  output M_AXI_GP1_ARESETN;
  output M_AXI_GP1_ARVALID;
  output M_AXI_GP1_AWVALID;
  output M_AXI_GP1_BREADY;
  output M_AXI_GP1_RREADY;
  output M_AXI_GP1_WLAST;
  output M_AXI_GP1_WVALID;
  output [11:0]M_AXI_GP1_ARID;
  output [11:0]M_AXI_GP1_AWID;
  output [11:0]M_AXI_GP1_WID;
  output [1:0]M_AXI_GP1_ARBURST;
  output [1:0]M_AXI_GP1_ARLOCK;
  output [2:0]M_AXI_GP1_ARSIZE;
  output [1:0]M_AXI_GP1_AWBURST;
  output [1:0]M_AXI_GP1_AWLOCK;
  output [2:0]M_AXI_GP1_AWSIZE;
  output [2:0]M_AXI_GP1_ARPROT;
  output [2:0]M_AXI_GP1_AWPROT;
  output [31:0]M_AXI_GP1_ARADDR;
  output [31:0]M_AXI_GP1_AWADDR;
  output [31:0]M_AXI_GP1_WDATA;
  output [3:0]M_AXI_GP1_ARCACHE;
  output [3:0]M_AXI_GP1_ARLEN;
  output [3:0]M_AXI_GP1_ARQOS;
  output [3:0]M_AXI_GP1_AWCACHE;
  output [3:0]M_AXI_GP1_AWLEN;
  output [3:0]M_AXI_GP1_AWQOS;
  output [3:0]M_AXI_GP1_WSTRB;
  input M_AXI_GP1_ACLK;
  input M_AXI_GP1_ARREADY;
  input M_AXI_GP1_AWREADY;
  input M_AXI_GP1_BVALID;
  input M_AXI_GP1_RLAST;
  input M_AXI_GP1_RVALID;
  input M_AXI_GP1_WREADY;
  input [11:0]M_AXI_GP1_BID;
  input [11:0]M_AXI_GP1_RID;
  input [1:0]M_AXI_GP1_BRESP;
  input [1:0]M_AXI_GP1_RRESP;
  input [31:0]M_AXI_GP1_RDATA;
  output S_AXI_GP0_ARESETN;
  output S_AXI_GP0_ARREADY;
  output S_AXI_GP0_AWREADY;
  output S_AXI_GP0_BVALID;
  output S_AXI_GP0_RLAST;
  output S_AXI_GP0_RVALID;
  output S_AXI_GP0_WREADY;
  output [1:0]S_AXI_GP0_BRESP;
  output [1:0]S_AXI_GP0_RRESP;
  output [31:0]S_AXI_GP0_RDATA;
  output [5:0]S_AXI_GP0_BID;
  output [5:0]S_AXI_GP0_RID;
  input S_AXI_GP0_ACLK;
  input S_AXI_GP0_ARVALID;
  input S_AXI_GP0_AWVALID;
  input S_AXI_GP0_BREADY;
  input S_AXI_GP0_RREADY;
  input S_AXI_GP0_WLAST;
  input S_AXI_GP0_WVALID;
  input [1:0]S_AXI_GP0_ARBURST;
  input [1:0]S_AXI_GP0_ARLOCK;
  input [2:0]S_AXI_GP0_ARSIZE;
  input [1:0]S_AXI_GP0_AWBURST;
  input [1:0]S_AXI_GP0_AWLOCK;
  input [2:0]S_AXI_GP0_AWSIZE;
  input [2:0]S_AXI_GP0_ARPROT;
  input [2:0]S_AXI_GP0_AWPROT;
  input [31:0]S_AXI_GP0_ARADDR;
  input [31:0]S_AXI_GP0_AWADDR;
  input [31:0]S_AXI_GP0_WDATA;
  input [3:0]S_AXI_GP0_ARCACHE;
  input [3:0]S_AXI_GP0_ARLEN;
  input [3:0]S_AXI_GP0_ARQOS;
  input [3:0]S_AXI_GP0_AWCACHE;
  input [3:0]S_AXI_GP0_AWLEN;
  input [3:0]S_AXI_GP0_AWQOS;
  input [3:0]S_AXI_GP0_WSTRB;
  input [5:0]S_AXI_GP0_ARID;
  input [5:0]S_AXI_GP0_AWID;
  input [5:0]S_AXI_GP0_WID;
  output S_AXI_GP1_ARESETN;
  output S_AXI_GP1_ARREADY;
  output S_AXI_GP1_AWREADY;
  output S_AXI_GP1_BVALID;
  output S_AXI_GP1_RLAST;
  output S_AXI_GP1_RVALID;
  output S_AXI_GP1_WREADY;
  output [1:0]S_AXI_GP1_BRESP;
  output [1:0]S_AXI_GP1_RRESP;
  output [31:0]S_AXI_GP1_RDATA;
  output [5:0]S_AXI_GP1_BID;
  output [5:0]S_AXI_GP1_RID;
  input S_AXI_GP1_ACLK;
  input S_AXI_GP1_ARVALID;
  input S_AXI_GP1_AWVALID;
  input S_AXI_GP1_BREADY;
  input S_AXI_GP1_RREADY;
  input S_AXI_GP1_WLAST;
  input S_AXI_GP1_WVALID;
  input [1:0]S_AXI_GP1_ARBURST;
  input [1:0]S_AXI_GP1_ARLOCK;
  input [2:0]S_AXI_GP1_ARSIZE;
  input [1:0]S_AXI_GP1_AWBURST;
  input [1:0]S_AXI_GP1_AWLOCK;
  input [2:0]S_AXI_GP1_AWSIZE;
  input [2:0]S_AXI_GP1_ARPROT;
  input [2:0]S_AXI_GP1_AWPROT;
  input [31:0]S_AXI_GP1_ARADDR;
  input [31:0]S_AXI_GP1_AWADDR;
  input [31:0]S_AXI_GP1_WDATA;
  input [3:0]S_AXI_GP1_ARCACHE;
  input [3:0]S_AXI_GP1_ARLEN;
  input [3:0]S_AXI_GP1_ARQOS;
  input [3:0]S_AXI_GP1_AWCACHE;
  input [3:0]S_AXI_GP1_AWLEN;
  input [3:0]S_AXI_GP1_AWQOS;
  input [3:0]S_AXI_GP1_WSTRB;
  input [5:0]S_AXI_GP1_ARID;
  input [5:0]S_AXI_GP1_AWID;
  input [5:0]S_AXI_GP1_WID;
  output S_AXI_ACP_ARESETN;
  output S_AXI_ACP_ARREADY;
  output S_AXI_ACP_AWREADY;
  output S_AXI_ACP_BVALID;
  output S_AXI_ACP_RLAST;
  output S_AXI_ACP_RVALID;
  output S_AXI_ACP_WREADY;
  output [1:0]S_AXI_ACP_BRESP;
  output [1:0]S_AXI_ACP_RRESP;
  output [2:0]S_AXI_ACP_BID;
  output [2:0]S_AXI_ACP_RID;
  output [63:0]S_AXI_ACP_RDATA;
  input S_AXI_ACP_ACLK;
  input S_AXI_ACP_ARVALID;
  input S_AXI_ACP_AWVALID;
  input S_AXI_ACP_BREADY;
  input S_AXI_ACP_RREADY;
  input S_AXI_ACP_WLAST;
  input S_AXI_ACP_WVALID;
  input [2:0]S_AXI_ACP_ARID;
  input [2:0]S_AXI_ACP_ARPROT;
  input [2:0]S_AXI_ACP_AWID;
  input [2:0]S_AXI_ACP_AWPROT;
  input [2:0]S_AXI_ACP_WID;
  input [31:0]S_AXI_ACP_ARADDR;
  input [31:0]S_AXI_ACP_AWADDR;
  input [3:0]S_AXI_ACP_ARCACHE;
  input [3:0]S_AXI_ACP_ARLEN;
  input [3:0]S_AXI_ACP_ARQOS;
  input [3:0]S_AXI_ACP_AWCACHE;
  input [3:0]S_AXI_ACP_AWLEN;
  input [3:0]S_AXI_ACP_AWQOS;
  input [1:0]S_AXI_ACP_ARBURST;
  input [1:0]S_AXI_ACP_ARLOCK;
  input [2:0]S_AXI_ACP_ARSIZE;
  input [1:0]S_AXI_ACP_AWBURST;
  input [1:0]S_AXI_ACP_AWLOCK;
  input [2:0]S_AXI_ACP_AWSIZE;
  input [4:0]S_AXI_ACP_ARUSER;
  input [4:0]S_AXI_ACP_AWUSER;
  input [63:0]S_AXI_ACP_WDATA;
  input [7:0]S_AXI_ACP_WSTRB;
  output S_AXI_HP0_ARESETN;
  output S_AXI_HP0_ARREADY;
  output S_AXI_HP0_AWREADY;
  output S_AXI_HP0_BVALID;
  output S_AXI_HP0_RLAST;
  output S_AXI_HP0_RVALID;
  output S_AXI_HP0_WREADY;
  output [1:0]S_AXI_HP0_BRESP;
  output [1:0]S_AXI_HP0_RRESP;
  output [5:0]S_AXI_HP0_BID;
  output [5:0]S_AXI_HP0_RID;
  output [63:0]S_AXI_HP0_RDATA;
  output [7:0]S_AXI_HP0_RCOUNT;
  output [7:0]S_AXI_HP0_WCOUNT;
  output [2:0]S_AXI_HP0_RACOUNT;
  output [5:0]S_AXI_HP0_WACOUNT;
  input S_AXI_HP0_ACLK;
  input S_AXI_HP0_ARVALID;
  input S_AXI_HP0_AWVALID;
  input S_AXI_HP0_BREADY;
  input S_AXI_HP0_RDISSUECAP1_EN;
  input S_AXI_HP0_RREADY;
  input S_AXI_HP0_WLAST;
  input S_AXI_HP0_WRISSUECAP1_EN;
  input S_AXI_HP0_WVALID;
  input [1:0]S_AXI_HP0_ARBURST;
  input [1:0]S_AXI_HP0_ARLOCK;
  input [2:0]S_AXI_HP0_ARSIZE;
  input [1:0]S_AXI_HP0_AWBURST;
  input [1:0]S_AXI_HP0_AWLOCK;
  input [2:0]S_AXI_HP0_AWSIZE;
  input [2:0]S_AXI_HP0_ARPROT;
  input [2:0]S_AXI_HP0_AWPROT;
  input [31:0]S_AXI_HP0_ARADDR;
  input [31:0]S_AXI_HP0_AWADDR;
  input [3:0]S_AXI_HP0_ARCACHE;
  input [3:0]S_AXI_HP0_ARLEN;
  input [3:0]S_AXI_HP0_ARQOS;
  input [3:0]S_AXI_HP0_AWCACHE;
  input [3:0]S_AXI_HP0_AWLEN;
  input [3:0]S_AXI_HP0_AWQOS;
  input [5:0]S_AXI_HP0_ARID;
  input [5:0]S_AXI_HP0_AWID;
  input [5:0]S_AXI_HP0_WID;
  input [63:0]S_AXI_HP0_WDATA;
  input [7:0]S_AXI_HP0_WSTRB;
  output S_AXI_HP1_ARESETN;
  output S_AXI_HP1_ARREADY;
  output S_AXI_HP1_AWREADY;
  output S_AXI_HP1_BVALID;
  output S_AXI_HP1_RLAST;
  output S_AXI_HP1_RVALID;
  output S_AXI_HP1_WREADY;
  output [1:0]S_AXI_HP1_BRESP;
  output [1:0]S_AXI_HP1_RRESP;
  output [5:0]S_AXI_HP1_BID;
  output [5:0]S_AXI_HP1_RID;
  output [63:0]S_AXI_HP1_RDATA;
  output [7:0]S_AXI_HP1_RCOUNT;
  output [7:0]S_AXI_HP1_WCOUNT;
  output [2:0]S_AXI_HP1_RACOUNT;
  output [5:0]S_AXI_HP1_WACOUNT;
  input S_AXI_HP1_ACLK;
  input S_AXI_HP1_ARVALID;
  input S_AXI_HP1_AWVALID;
  input S_AXI_HP1_BREADY;
  input S_AXI_HP1_RDISSUECAP1_EN;
  input S_AXI_HP1_RREADY;
  input S_AXI_HP1_WLAST;
  input S_AXI_HP1_WRISSUECAP1_EN;
  input S_AXI_HP1_WVALID;
  input [1:0]S_AXI_HP1_ARBURST;
  input [1:0]S_AXI_HP1_ARLOCK;
  input [2:0]S_AXI_HP1_ARSIZE;
  input [1:0]S_AXI_HP1_AWBURST;
  input [1:0]S_AXI_HP1_AWLOCK;
  input [2:0]S_AXI_HP1_AWSIZE;
  input [2:0]S_AXI_HP1_ARPROT;
  input [2:0]S_AXI_HP1_AWPROT;
  input [31:0]S_AXI_HP1_ARADDR;
  input [31:0]S_AXI_HP1_AWADDR;
  input [3:0]S_AXI_HP1_ARCACHE;
  input [3:0]S_AXI_HP1_ARLEN;
  input [3:0]S_AXI_HP1_ARQOS;
  input [3:0]S_AXI_HP1_AWCACHE;
  input [3:0]S_AXI_HP1_AWLEN;
  input [3:0]S_AXI_HP1_AWQOS;
  input [5:0]S_AXI_HP1_ARID;
  input [5:0]S_AXI_HP1_AWID;
  input [5:0]S_AXI_HP1_WID;
  input [63:0]S_AXI_HP1_WDATA;
  input [7:0]S_AXI_HP1_WSTRB;
  output S_AXI_HP2_ARESETN;
  output S_AXI_HP2_ARREADY;
  output S_AXI_HP2_AWREADY;
  output S_AXI_HP2_BVALID;
  output S_AXI_HP2_RLAST;
  output S_AXI_HP2_RVALID;
  output S_AXI_HP2_WREADY;
  output [1:0]S_AXI_HP2_BRESP;
  output [1:0]S_AXI_HP2_RRESP;
  output [5:0]S_AXI_HP2_BID;
  output [5:0]S_AXI_HP2_RID;
  output [63:0]S_AXI_HP2_RDATA;
  output [7:0]S_AXI_HP2_RCOUNT;
  output [7:0]S_AXI_HP2_WCOUNT;
  output [2:0]S_AXI_HP2_RACOUNT;
  output [5:0]S_AXI_HP2_WACOUNT;
  input S_AXI_HP2_ACLK;
  input S_AXI_HP2_ARVALID;
  input S_AXI_HP2_AWVALID;
  input S_AXI_HP2_BREADY;
  input S_AXI_HP2_RDISSUECAP1_EN;
  input S_AXI_HP2_RREADY;
  input S_AXI_HP2_WLAST;
  input S_AXI_HP2_WRISSUECAP1_EN;
  input S_AXI_HP2_WVALID;
  input [1:0]S_AXI_HP2_ARBURST;
  input [1:0]S_AXI_HP2_ARLOCK;
  input [2:0]S_AXI_HP2_ARSIZE;
  input [1:0]S_AXI_HP2_AWBURST;
  input [1:0]S_AXI_HP2_AWLOCK;
  input [2:0]S_AXI_HP2_AWSIZE;
  input [2:0]S_AXI_HP2_ARPROT;
  input [2:0]S_AXI_HP2_AWPROT;
  input [31:0]S_AXI_HP2_ARADDR;
  input [31:0]S_AXI_HP2_AWADDR;
  input [3:0]S_AXI_HP2_ARCACHE;
  input [3:0]S_AXI_HP2_ARLEN;
  input [3:0]S_AXI_HP2_ARQOS;
  input [3:0]S_AXI_HP2_AWCACHE;
  input [3:0]S_AXI_HP2_AWLEN;
  input [3:0]S_AXI_HP2_AWQOS;
  input [5:0]S_AXI_HP2_ARID;
  input [5:0]S_AXI_HP2_AWID;
  input [5:0]S_AXI_HP2_WID;
  input [63:0]S_AXI_HP2_WDATA;
  input [7:0]S_AXI_HP2_WSTRB;
  output S_AXI_HP3_ARESETN;
  output S_AXI_HP3_ARREADY;
  output S_AXI_HP3_AWREADY;
  output S_AXI_HP3_BVALID;
  output S_AXI_HP3_RLAST;
  output S_AXI_HP3_RVALID;
  output S_AXI_HP3_WREADY;
  output [1:0]S_AXI_HP3_BRESP;
  output [1:0]S_AXI_HP3_RRESP;
  output [5:0]S_AXI_HP3_BID;
  output [5:0]S_AXI_HP3_RID;
  output [63:0]S_AXI_HP3_RDATA;
  output [7:0]S_AXI_HP3_RCOUNT;
  output [7:0]S_AXI_HP3_WCOUNT;
  output [2:0]S_AXI_HP3_RACOUNT;
  output [5:0]S_AXI_HP3_WACOUNT;
  input S_AXI_HP3_ACLK;
  input S_AXI_HP3_ARVALID;
  input S_AXI_HP3_AWVALID;
  input S_AXI_HP3_BREADY;
  input S_AXI_HP3_RDISSUECAP1_EN;
  input S_AXI_HP3_RREADY;
  input S_AXI_HP3_WLAST;
  input S_AXI_HP3_WRISSUECAP1_EN;
  input S_AXI_HP3_WVALID;
  input [1:0]S_AXI_HP3_ARBURST;
  input [1:0]S_AXI_HP3_ARLOCK;
  input [2:0]S_AXI_HP3_ARSIZE;
  input [1:0]S_AXI_HP3_AWBURST;
  input [1:0]S_AXI_HP3_AWLOCK;
  input [2:0]S_AXI_HP3_AWSIZE;
  input [2:0]S_AXI_HP3_ARPROT;
  input [2:0]S_AXI_HP3_AWPROT;
  input [31:0]S_AXI_HP3_ARADDR;
  input [31:0]S_AXI_HP3_AWADDR;
  input [3:0]S_AXI_HP3_ARCACHE;
  input [3:0]S_AXI_HP3_ARLEN;
  input [3:0]S_AXI_HP3_ARQOS;
  input [3:0]S_AXI_HP3_AWCACHE;
  input [3:0]S_AXI_HP3_AWLEN;
  input [3:0]S_AXI_HP3_AWQOS;
  input [5:0]S_AXI_HP3_ARID;
  input [5:0]S_AXI_HP3_AWID;
  input [5:0]S_AXI_HP3_WID;
  input [63:0]S_AXI_HP3_WDATA;
  input [7:0]S_AXI_HP3_WSTRB;
  output IRQ_P2F_DMAC_ABORT;
  output IRQ_P2F_DMAC0;
  output IRQ_P2F_DMAC1;
  output IRQ_P2F_DMAC2;
  output IRQ_P2F_DMAC3;
  output IRQ_P2F_DMAC4;
  output IRQ_P2F_DMAC5;
  output IRQ_P2F_DMAC6;
  output IRQ_P2F_DMAC7;
  output IRQ_P2F_SMC;
  output IRQ_P2F_QSPI;
  output IRQ_P2F_CTI;
  output IRQ_P2F_GPIO;
  output IRQ_P2F_USB0;
  output IRQ_P2F_ENET0;
  output IRQ_P2F_ENET_WAKE0;
  output IRQ_P2F_SDIO0;
  output IRQ_P2F_I2C0;
  output IRQ_P2F_SPI0;
  output IRQ_P2F_UART0;
  output IRQ_P2F_CAN0;
  output IRQ_P2F_USB1;
  output IRQ_P2F_ENET1;
  output IRQ_P2F_ENET_WAKE1;
  output IRQ_P2F_SDIO1;
  output IRQ_P2F_I2C1;
  output IRQ_P2F_SPI1;
  output IRQ_P2F_UART1;
  output IRQ_P2F_CAN1;
  input [0:0]IRQ_F2P;
  input Core0_nFIQ;
  input Core0_nIRQ;
  input Core1_nFIQ;
  input Core1_nIRQ;
  output [1:0]DMA0_DATYPE;
  output DMA0_DAVALID;
  output DMA0_DRREADY;
  output DMA0_RSTN;
  output [1:0]DMA1_DATYPE;
  output DMA1_DAVALID;
  output DMA1_DRREADY;
  output DMA1_RSTN;
  output [1:0]DMA2_DATYPE;
  output DMA2_DAVALID;
  output DMA2_DRREADY;
  output DMA2_RSTN;
  output [1:0]DMA3_DATYPE;
  output DMA3_DAVALID;
  output DMA3_DRREADY;
  output DMA3_RSTN;
  input DMA0_ACLK;
  input DMA0_DAREADY;
  input DMA0_DRLAST;
  input DMA0_DRVALID;
  input DMA1_ACLK;
  input DMA1_DAREADY;
  input DMA1_DRLAST;
  input DMA1_DRVALID;
  input DMA2_ACLK;
  input DMA2_DAREADY;
  input DMA2_DRLAST;
  input DMA2_DRVALID;
  input DMA3_ACLK;
  input DMA3_DAREADY;
  input DMA3_DRLAST;
  input DMA3_DRVALID;
  input [1:0]DMA0_DRTYPE;
  input [1:0]DMA1_DRTYPE;
  input [1:0]DMA2_DRTYPE;
  input [1:0]DMA3_DRTYPE;
  output FCLK_CLK3;
  output FCLK_CLK2;
  output FCLK_CLK1;
  output FCLK_CLK0;
  input FCLK_CLKTRIG3_N;
  input FCLK_CLKTRIG2_N;
  input FCLK_CLKTRIG1_N;
  input FCLK_CLKTRIG0_N;
  output FCLK_RESET3_N;
  output FCLK_RESET2_N;
  output FCLK_RESET1_N;
  output FCLK_RESET0_N;
  input [31:0]FTMD_TRACEIN_DATA;
  input FTMD_TRACEIN_VALID;
  input FTMD_TRACEIN_CLK;
  input [3:0]FTMD_TRACEIN_ATID;
  input FTMT_F2P_TRIG_0;
  output FTMT_F2P_TRIGACK_0;
  input FTMT_F2P_TRIG_1;
  output FTMT_F2P_TRIGACK_1;
  input FTMT_F2P_TRIG_2;
  output FTMT_F2P_TRIGACK_2;
  input FTMT_F2P_TRIG_3;
  output FTMT_F2P_TRIGACK_3;
  input [31:0]FTMT_F2P_DEBUG;
  input FTMT_P2F_TRIGACK_0;
  output FTMT_P2F_TRIG_0;
  input FTMT_P2F_TRIGACK_1;
  output FTMT_P2F_TRIG_1;
  input FTMT_P2F_TRIGACK_2;
  output FTMT_P2F_TRIG_2;
  input FTMT_P2F_TRIGACK_3;
  output FTMT_P2F_TRIG_3;
  output [31:0]FTMT_P2F_DEBUG;
  input FPGA_IDLE_N;
  output EVENT_EVENTO;
  output [1:0]EVENT_STANDBYWFE;
  output [1:0]EVENT_STANDBYWFI;
  input EVENT_EVENTI;
  input [3:0]DDR_ARB;
  inout [53:0]MIO;
  inout DDR_CAS_n;
  inout DDR_CKE;
  inout DDR_Clk_n;
  inout DDR_Clk;
  inout DDR_CS_n;
  inout DDR_DRSTB;
  inout DDR_ODT;
  inout DDR_RAS_n;
  inout DDR_WEB;
  inout [2:0]DDR_BankAddr;
  inout [14:0]DDR_Addr;
  inout DDR_VRN;
  inout DDR_VRP;
  inout [3:0]DDR_DM;
  inout [31:0]DDR_DQ;
  inout [3:0]DDR_DQS_n;
  inout [3:0]DDR_DQS;
  inout PS_SRSTB;
  inout PS_CLK;
  inout PS_PORB;

  wire CAN0_PHY_RX;
  wire CAN1_PHY_RX;
  wire Core0_nFIQ;
  wire Core0_nIRQ;
  wire Core1_nFIQ;
  wire Core1_nIRQ;
  wire [3:0]DDR_ARB;
  wire [14:0]DDR_Addr;
  wire [2:0]DDR_BankAddr;
  wire DDR_CAS_n;
  wire DDR_CKE;
  wire DDR_CS_n;
  wire DDR_Clk;
  wire DDR_Clk_n;
  wire [3:0]DDR_DM;
  wire [31:0]DDR_DQ;
  wire [3:0]DDR_DQS;
  wire [3:0]DDR_DQS_n;
  wire DDR_DRSTB;
  wire DDR_ODT;
  wire DDR_RAS_n;
  wire DDR_VRN;
  wire DDR_VRP;
  wire DDR_WEB;
  wire DMA0_ACLK;
  wire DMA0_DAREADY;
  wire DMA0_DRLAST;
  wire [1:0]DMA0_DRTYPE;
  wire DMA0_DRVALID;
  wire DMA1_ACLK;
  wire DMA1_DAREADY;
  wire DMA1_DRLAST;
  wire [1:0]DMA1_DRTYPE;
  wire DMA1_DRVALID;
  wire DMA2_ACLK;
  wire DMA2_DAREADY;
  wire DMA2_DRLAST;
  wire [1:0]DMA2_DRTYPE;
  wire DMA2_DRVALID;
  wire DMA3_ACLK;
  wire DMA3_DAREADY;
  wire DMA3_DRLAST;
  wire [1:0]DMA3_DRTYPE;
  wire DMA3_DRVALID;
  wire ENET0_EXT_INTIN;
  wire ENET0_GMII_RX_CLK;
  wire ENET0_GMII_TX_CLK;
  wire ENET0_MDIO_I;
  wire ENET1_EXT_INTIN;
  wire ENET1_GMII_RX_CLK;
  wire ENET1_GMII_TX_CLK;
  wire ENET1_MDIO_I;
  wire EVENT_EVENTI;
  wire FCLK_CLK0;
  wire [0:0]FCLK_CLK_unbuffered;
  wire FCLK_RESET0_N;
  wire FPGA_IDLE_N;
  wire FTMD_TRACEIN_CLK;
  wire [31:0]FTMT_F2P_DEBUG;
  wire FTMT_F2P_TRIG_0;
  wire FTMT_F2P_TRIG_1;
  wire FTMT_F2P_TRIG_2;
  wire FTMT_F2P_TRIG_3;
  wire FTMT_P2F_TRIGACK_0;
  wire FTMT_P2F_TRIGACK_1;
  wire FTMT_P2F_TRIGACK_2;
  wire FTMT_P2F_TRIGACK_3;
  wire [63:0]GPIO_I;
  wire I2C0_SCL_I;
  wire I2C0_SDA_I;
  wire I2C1_SCL_I;
  wire I2C1_SDA_I;
  wire [0:0]IRQ_F2P;
  wire [53:0]MIO;
  wire M_AXI_GP0_ACLK;
  wire [31:0]M_AXI_GP0_ARADDR;
  wire [1:0]M_AXI_GP0_ARBURST;
  wire [11:0]M_AXI_GP0_ARID;
  wire [3:0]M_AXI_GP0_ARLEN;
  wire M_AXI_GP0_ARREADY;
  wire [2:0]M_AXI_GP0_ARSIZE;
  wire M_AXI_GP0_ARVALID;
  wire [31:0]M_AXI_GP0_AWADDR;
  wire [1:0]M_AXI_GP0_AWBURST;
  wire [11:0]M_AXI_GP0_AWID;
  wire [3:0]M_AXI_GP0_AWLEN;
  wire M_AXI_GP0_AWREADY;
  wire [2:0]M_AXI_GP0_AWSIZE;
  wire M_AXI_GP0_AWVALID;
  wire [11:0]M_AXI_GP0_BID;
  wire M_AXI_GP0_BREADY;
  wire [1:0]M_AXI_GP0_BRESP;
  wire M_AXI_GP0_BVALID;
  wire [31:0]M_AXI_GP0_RDATA;
  wire [11:0]M_AXI_GP0_RID;
  wire M_AXI_GP0_RLAST;
  wire M_AXI_GP0_RREADY;
  wire [1:0]M_AXI_GP0_RRESP;
  wire M_AXI_GP0_RVALID;
  wire [31:0]M_AXI_GP0_WDATA;
  wire M_AXI_GP0_WLAST;
  wire M_AXI_GP0_WREADY;
  wire [3:0]M_AXI_GP0_WSTRB;
  wire M_AXI_GP0_WVALID;
  wire M_AXI_GP1_ACLK;
  wire M_AXI_GP1_ARREADY;
  wire M_AXI_GP1_AWREADY;
  wire [11:0]M_AXI_GP1_BID;
  wire [1:0]M_AXI_GP1_BRESP;
  wire M_AXI_GP1_BVALID;
  wire [31:0]M_AXI_GP1_RDATA;
  wire [11:0]M_AXI_GP1_RID;
  wire M_AXI_GP1_RLAST;
  wire [1:0]M_AXI_GP1_RRESP;
  wire M_AXI_GP1_RVALID;
  wire M_AXI_GP1_WREADY;
  wire PJTAG_TCK;
  wire PJTAG_TDI;
  wire PJTAG_TMS;
  wire PS_CLK;
  wire PS_PORB;
  wire PS_SRSTB;
  wire SDIO0_CDN;
  wire SDIO0_CLK_FB;
  wire SDIO0_CMD_I;
  wire [3:0]SDIO0_DATA_I;
  wire SDIO0_WP;
  wire SDIO1_CDN;
  wire SDIO1_CLK_FB;
  wire SDIO1_CMD_I;
  wire [3:0]SDIO1_DATA_I;
  wire SDIO1_WP;
  wire SPI0_MISO_I;
  wire SPI0_MOSI_I;
  wire SPI0_SCLK_I;
  wire SPI0_SS_I;
  wire SPI1_MISO_I;
  wire SPI1_MOSI_I;
  wire SPI1_SCLK_I;
  wire SPI1_SS_I;
  wire SRAM_INTIN;
  wire S_AXI_ACP_ACLK;
  wire [31:0]S_AXI_ACP_ARADDR;
  wire [1:0]S_AXI_ACP_ARBURST;
  wire [3:0]S_AXI_ACP_ARCACHE;
  wire [2:0]S_AXI_ACP_ARID;
  wire [3:0]S_AXI_ACP_ARLEN;
  wire [1:0]S_AXI_ACP_ARLOCK;
  wire [2:0]S_AXI_ACP_ARPROT;
  wire [3:0]S_AXI_ACP_ARQOS;
  wire [2:0]S_AXI_ACP_ARSIZE;
  wire [4:0]S_AXI_ACP_ARUSER;
  wire S_AXI_ACP_ARVALID;
  wire [31:0]S_AXI_ACP_AWADDR;
  wire [1:0]S_AXI_ACP_AWBURST;
  wire [3:0]S_AXI_ACP_AWCACHE;
  wire [2:0]S_AXI_ACP_AWID;
  wire [3:0]S_AXI_ACP_AWLEN;
  wire [1:0]S_AXI_ACP_AWLOCK;
  wire [2:0]S_AXI_ACP_AWPROT;
  wire [3:0]S_AXI_ACP_AWQOS;
  wire [2:0]S_AXI_ACP_AWSIZE;
  wire [4:0]S_AXI_ACP_AWUSER;
  wire S_AXI_ACP_AWVALID;
  wire S_AXI_ACP_BREADY;
  wire S_AXI_ACP_RREADY;
  wire [63:0]S_AXI_ACP_WDATA;
  wire [2:0]S_AXI_ACP_WID;
  wire S_AXI_ACP_WLAST;
  wire [7:0]S_AXI_ACP_WSTRB;
  wire S_AXI_ACP_WVALID;
  wire S_AXI_GP0_ACLK;
  wire [31:0]S_AXI_GP0_ARADDR;
  wire [1:0]S_AXI_GP0_ARBURST;
  wire [3:0]S_AXI_GP0_ARCACHE;
  wire [5:0]S_AXI_GP0_ARID;
  wire [3:0]S_AXI_GP0_ARLEN;
  wire [1:0]S_AXI_GP0_ARLOCK;
  wire [2:0]S_AXI_GP0_ARPROT;
  wire [3:0]S_AXI_GP0_ARQOS;
  wire [2:0]S_AXI_GP0_ARSIZE;
  wire S_AXI_GP0_ARVALID;
  wire [31:0]S_AXI_GP0_AWADDR;
  wire [1:0]S_AXI_GP0_AWBURST;
  wire [3:0]S_AXI_GP0_AWCACHE;
  wire [5:0]S_AXI_GP0_AWID;
  wire [3:0]S_AXI_GP0_AWLEN;
  wire [1:0]S_AXI_GP0_AWLOCK;
  wire [2:0]S_AXI_GP0_AWPROT;
  wire [3:0]S_AXI_GP0_AWQOS;
  wire [2:0]S_AXI_GP0_AWSIZE;
  wire S_AXI_GP0_AWVALID;
  wire S_AXI_GP0_BREADY;
  wire S_AXI_GP0_RREADY;
  wire [31:0]S_AXI_GP0_WDATA;
  wire [5:0]S_AXI_GP0_WID;
  wire S_AXI_GP0_WLAST;
  wire [3:0]S_AXI_GP0_WSTRB;
  wire S_AXI_GP0_WVALID;
  wire S_AXI_GP1_ACLK;
  wire [31:0]S_AXI_GP1_ARADDR;
  wire [1:0]S_AXI_GP1_ARBURST;
  wire [3:0]S_AXI_GP1_ARCACHE;
  wire [5:0]S_AXI_GP1_ARID;
  wire [3:0]S_AXI_GP1_ARLEN;
  wire [1:0]S_AXI_GP1_ARLOCK;
  wire [2:0]S_AXI_GP1_ARPROT;
  wire [3:0]S_AXI_GP1_ARQOS;
  wire [2:0]S_AXI_GP1_ARSIZE;
  wire S_AXI_GP1_ARVALID;
  wire [31:0]S_AXI_GP1_AWADDR;
  wire [1:0]S_AXI_GP1_AWBURST;
  wire [3:0]S_AXI_GP1_AWCACHE;
  wire [5:0]S_AXI_GP1_AWID;
  wire [3:0]S_AXI_GP1_AWLEN;
  wire [1:0]S_AXI_GP1_AWLOCK;
  wire [2:0]S_AXI_GP1_AWPROT;
  wire [3:0]S_AXI_GP1_AWQOS;
  wire [2:0]S_AXI_GP1_AWSIZE;
  wire S_AXI_GP1_AWVALID;
  wire S_AXI_GP1_BREADY;
  wire S_AXI_GP1_RREADY;
  wire [31:0]S_AXI_GP1_WDATA;
  wire [5:0]S_AXI_GP1_WID;
  wire S_AXI_GP1_WLAST;
  wire [3:0]S_AXI_GP1_WSTRB;
  wire S_AXI_GP1_WVALID;
  wire S_AXI_HP0_ACLK;
  wire [31:0]S_AXI_HP0_ARADDR;
  wire [1:0]S_AXI_HP0_ARBURST;
  wire [3:0]S_AXI_HP0_ARCACHE;
  wire [5:0]S_AXI_HP0_ARID;
  wire [3:0]S_AXI_HP0_ARLEN;
  wire [1:0]S_AXI_HP0_ARLOCK;
  wire [2:0]S_AXI_HP0_ARPROT;
  wire [3:0]S_AXI_HP0_ARQOS;
  wire [2:0]S_AXI_HP0_ARSIZE;
  wire S_AXI_HP0_ARVALID;
  wire [31:0]S_AXI_HP0_AWADDR;
  wire [1:0]S_AXI_HP0_AWBURST;
  wire [3:0]S_AXI_HP0_AWCACHE;
  wire [5:0]S_AXI_HP0_AWID;
  wire [3:0]S_AXI_HP0_AWLEN;
  wire [1:0]S_AXI_HP0_AWLOCK;
  wire [2:0]S_AXI_HP0_AWPROT;
  wire [3:0]S_AXI_HP0_AWQOS;
  wire [2:0]S_AXI_HP0_AWSIZE;
  wire S_AXI_HP0_AWVALID;
  wire S_AXI_HP0_BREADY;
  wire S_AXI_HP0_RDISSUECAP1_EN;
  wire S_AXI_HP0_RREADY;
  wire [63:0]S_AXI_HP0_WDATA;
  wire [5:0]S_AXI_HP0_WID;
  wire S_AXI_HP0_WLAST;
  wire S_AXI_HP0_WRISSUECAP1_EN;
  wire [7:0]S_AXI_HP0_WSTRB;
  wire S_AXI_HP0_WVALID;
  wire S_AXI_HP1_ACLK;
  wire [31:0]S_AXI_HP1_ARADDR;
  wire [1:0]S_AXI_HP1_ARBURST;
  wire [3:0]S_AXI_HP1_ARCACHE;
  wire [5:0]S_AXI_HP1_ARID;
  wire [3:0]S_AXI_HP1_ARLEN;
  wire [1:0]S_AXI_HP1_ARLOCK;
  wire [2:0]S_AXI_HP1_ARPROT;
  wire [3:0]S_AXI_HP1_ARQOS;
  wire [2:0]S_AXI_HP1_ARSIZE;
  wire S_AXI_HP1_ARVALID;
  wire [31:0]S_AXI_HP1_AWADDR;
  wire [1:0]S_AXI_HP1_AWBURST;
  wire [3:0]S_AXI_HP1_AWCACHE;
  wire [5:0]S_AXI_HP1_AWID;
  wire [3:0]S_AXI_HP1_AWLEN;
  wire [1:0]S_AXI_HP1_AWLOCK;
  wire [2:0]S_AXI_HP1_AWPROT;
  wire [3:0]S_AXI_HP1_AWQOS;
  wire [2:0]S_AXI_HP1_AWSIZE;
  wire S_AXI_HP1_AWVALID;
  wire S_AXI_HP1_BREADY;
  wire S_AXI_HP1_RDISSUECAP1_EN;
  wire S_AXI_HP1_RREADY;
  wire [63:0]S_AXI_HP1_WDATA;
  wire [5:0]S_AXI_HP1_WID;
  wire S_AXI_HP1_WLAST;
  wire S_AXI_HP1_WRISSUECAP1_EN;
  wire [7:0]S_AXI_HP1_WSTRB;
  wire S_AXI_HP1_WVALID;
  wire S_AXI_HP2_ACLK;
  wire [31:0]S_AXI_HP2_ARADDR;
  wire [1:0]S_AXI_HP2_ARBURST;
  wire [3:0]S_AXI_HP2_ARCACHE;
  wire [5:0]S_AXI_HP2_ARID;
  wire [3:0]S_AXI_HP2_ARLEN;
  wire [1:0]S_AXI_HP2_ARLOCK;
  wire [2:0]S_AXI_HP2_ARPROT;
  wire [3:0]S_AXI_HP2_ARQOS;
  wire [2:0]S_AXI_HP2_ARSIZE;
  wire S_AXI_HP2_ARVALID;
  wire [31:0]S_AXI_HP2_AWADDR;
  wire [1:0]S_AXI_HP2_AWBURST;
  wire [3:0]S_AXI_HP2_AWCACHE;
  wire [5:0]S_AXI_HP2_AWID;
  wire [3:0]S_AXI_HP2_AWLEN;
  wire [1:0]S_AXI_HP2_AWLOCK;
  wire [2:0]S_AXI_HP2_AWPROT;
  wire [3:0]S_AXI_HP2_AWQOS;
  wire [2:0]S_AXI_HP2_AWSIZE;
  wire S_AXI_HP2_AWVALID;
  wire S_AXI_HP2_BREADY;
  wire S_AXI_HP2_RDISSUECAP1_EN;
  wire S_AXI_HP2_RREADY;
  wire [63:0]S_AXI_HP2_WDATA;
  wire [5:0]S_AXI_HP2_WID;
  wire S_AXI_HP2_WLAST;
  wire S_AXI_HP2_WRISSUECAP1_EN;
  wire [7:0]S_AXI_HP2_WSTRB;
  wire S_AXI_HP2_WVALID;
  wire S_AXI_HP3_ACLK;
  wire [31:0]S_AXI_HP3_ARADDR;
  wire [1:0]S_AXI_HP3_ARBURST;
  wire [3:0]S_AXI_HP3_ARCACHE;
  wire [5:0]S_AXI_HP3_ARID;
  wire [3:0]S_AXI_HP3_ARLEN;
  wire [1:0]S_AXI_HP3_ARLOCK;
  wire [2:0]S_AXI_HP3_ARPROT;
  wire [3:0]S_AXI_HP3_ARQOS;
  wire [2:0]S_AXI_HP3_ARSIZE;
  wire S_AXI_HP3_ARVALID;
  wire [31:0]S_AXI_HP3_AWADDR;
  wire [1:0]S_AXI_HP3_AWBURST;
  wire [3:0]S_AXI_HP3_AWCACHE;
  wire [5:0]S_AXI_HP3_AWID;
  wire [3:0]S_AXI_HP3_AWLEN;
  wire [1:0]S_AXI_HP3_AWLOCK;
  wire [2:0]S_AXI_HP3_AWPROT;
  wire [3:0]S_AXI_HP3_AWQOS;
  wire [2:0]S_AXI_HP3_AWSIZE;
  wire S_AXI_HP3_AWVALID;
  wire S_AXI_HP3_BREADY;
  wire S_AXI_HP3_RDISSUECAP1_EN;
  wire S_AXI_HP3_RREADY;
  wire [63:0]S_AXI_HP3_WDATA;
  wire [5:0]S_AXI_HP3_WID;
  wire S_AXI_HP3_WLAST;
  wire S_AXI_HP3_WRISSUECAP1_EN;
  wire [7:0]S_AXI_HP3_WSTRB;
  wire S_AXI_HP3_WVALID;
  wire TRACE_CLK;
  wire TTC0_CLK0_IN;
  wire TTC0_CLK1_IN;
  wire TTC0_CLK2_IN;
  wire TTC1_CLK0_IN;
  wire TTC1_CLK1_IN;
  wire TTC1_CLK2_IN;
  wire UART0_CTSN;
  wire UART0_DCDN;
  wire UART0_DSRN;
  wire UART0_RIN;
  wire UART0_RX;
  wire UART1_CTSN;
  wire UART1_DCDN;
  wire UART1_DSRN;
  wire UART1_RIN;
  wire UART1_RX;
  wire USB0_VBUS_PWRFAULT;
  wire USB1_VBUS_PWRFAULT;
  wire WDT_CLK_IN;
  wire [14:0]buffered_DDR_Addr;
  wire [2:0]buffered_DDR_BankAddr;
  wire buffered_DDR_CAS_n;
  wire buffered_DDR_CKE;
  wire buffered_DDR_CS_n;
  wire buffered_DDR_Clk;
  wire buffered_DDR_Clk_n;
  wire [3:0]buffered_DDR_DM;
  wire [31:0]buffered_DDR_DQ;
  wire [3:0]buffered_DDR_DQS;
  wire [3:0]buffered_DDR_DQS_n;
  wire buffered_DDR_DRSTB;
  wire buffered_DDR_ODT;
  wire buffered_DDR_RAS_n;
  wire buffered_DDR_VRN;
  wire buffered_DDR_VRP;
  wire buffered_DDR_WEB;
  wire [53:0]buffered_MIO;
  wire buffered_PS_CLK;
  wire buffered_PS_PORB;
  wire buffered_PS_SRSTB;
  wire NLW_PS7_i_DMA0DAVALID_UNCONNECTED;
  wire NLW_PS7_i_DMA0DRREADY_UNCONNECTED;
  wire NLW_PS7_i_DMA0RSTN_UNCONNECTED;
  wire NLW_PS7_i_DMA1DAVALID_UNCONNECTED;
  wire NLW_PS7_i_DMA1DRREADY_UNCONNECTED;
  wire NLW_PS7_i_DMA1RSTN_UNCONNECTED;
  wire NLW_PS7_i_DMA2DAVALID_UNCONNECTED;
  wire NLW_PS7_i_DMA2DRREADY_UNCONNECTED;
  wire NLW_PS7_i_DMA2RSTN_UNCONNECTED;
  wire NLW_PS7_i_DMA3DAVALID_UNCONNECTED;
  wire NLW_PS7_i_DMA3DRREADY_UNCONNECTED;
  wire NLW_PS7_i_DMA3RSTN_UNCONNECTED;
  wire NLW_PS7_i_EMIOCAN0PHYTX_UNCONNECTED;
  wire NLW_PS7_i_EMIOCAN1PHYTX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET0GMIITXEN_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET0GMIITXER_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET0MDIOMDC_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET0MDIOO_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET0MDIOTN_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET0PTPDELAYREQRX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET0PTPDELAYREQTX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET0PTPPDELAYREQRX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET0PTPPDELAYREQTX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET0PTPPDELAYRESPRX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET0PTPPDELAYRESPTX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET0PTPSYNCFRAMERX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET0PTPSYNCFRAMETX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET0SOFRX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET0SOFTX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET1GMIITXEN_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET1GMIITXER_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET1MDIOMDC_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET1MDIOO_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET1MDIOTN_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET1PTPDELAYREQRX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET1PTPDELAYREQTX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET1PTPPDELAYREQRX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET1PTPPDELAYREQTX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET1PTPPDELAYRESPRX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET1PTPPDELAYRESPTX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET1PTPSYNCFRAMERX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET1PTPSYNCFRAMETX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET1SOFRX_UNCONNECTED;
  wire NLW_PS7_i_EMIOENET1SOFTX_UNCONNECTED;
  wire NLW_PS7_i_EMIOI2C0SCLO_UNCONNECTED;
  wire NLW_PS7_i_EMIOI2C0SCLTN_UNCONNECTED;
  wire NLW_PS7_i_EMIOI2C0SDAO_UNCONNECTED;
  wire NLW_PS7_i_EMIOI2C0SDATN_UNCONNECTED;
  wire NLW_PS7_i_EMIOI2C1SCLO_UNCONNECTED;
  wire NLW_PS7_i_EMIOI2C1SCLTN_UNCONNECTED;
  wire NLW_PS7_i_EMIOI2C1SDAO_UNCONNECTED;
  wire NLW_PS7_i_EMIOI2C1SDATN_UNCONNECTED;
  wire NLW_PS7_i_EMIOPJTAGTDO_UNCONNECTED;
  wire NLW_PS7_i_EMIOPJTAGTDTN_UNCONNECTED;
  wire NLW_PS7_i_EMIOSDIO0BUSPOW_UNCONNECTED;
  wire NLW_PS7_i_EMIOSDIO0CLK_UNCONNECTED;
  wire NLW_PS7_i_EMIOSDIO0CMDO_UNCONNECTED;
  wire NLW_PS7_i_EMIOSDIO0CMDTN_UNCONNECTED;
  wire NLW_PS7_i_EMIOSDIO0LED_UNCONNECTED;
  wire NLW_PS7_i_EMIOSDIO1BUSPOW_UNCONNECTED;
  wire NLW_PS7_i_EMIOSDIO1CLK_UNCONNECTED;
  wire NLW_PS7_i_EMIOSDIO1CMDO_UNCONNECTED;
  wire NLW_PS7_i_EMIOSDIO1CMDTN_UNCONNECTED;
  wire NLW_PS7_i_EMIOSDIO1LED_UNCONNECTED;
  wire NLW_PS7_i_EMIOSPI0MO_UNCONNECTED;
  wire NLW_PS7_i_EMIOSPI0MOTN_UNCONNECTED;
  wire NLW_PS7_i_EMIOSPI0SCLKO_UNCONNECTED;
  wire NLW_PS7_i_EMIOSPI0SCLKTN_UNCONNECTED;
  wire NLW_PS7_i_EMIOSPI0SO_UNCONNECTED;
  wire NLW_PS7_i_EMIOSPI0SSNTN_UNCONNECTED;
  wire NLW_PS7_i_EMIOSPI0STN_UNCONNECTED;
  wire NLW_PS7_i_EMIOSPI1MO_UNCONNECTED;
  wire NLW_PS7_i_EMIOSPI1MOTN_UNCONNECTED;
  wire NLW_PS7_i_EMIOSPI1SCLKO_UNCONNECTED;
  wire NLW_PS7_i_EMIOSPI1SCLKTN_UNCONNECTED;
  wire NLW_PS7_i_EMIOSPI1SO_UNCONNECTED;
  wire NLW_PS7_i_EMIOSPI1SSNTN_UNCONNECTED;
  wire NLW_PS7_i_EMIOSPI1STN_UNCONNECTED;
  wire NLW_PS7_i_EMIOTRACECTL_UNCONNECTED;
  wire NLW_PS7_i_EMIOUART0DTRN_UNCONNECTED;
  wire NLW_PS7_i_EMIOUART0RTSN_UNCONNECTED;
  wire NLW_PS7_i_EMIOUART0TX_UNCONNECTED;
  wire NLW_PS7_i_EMIOUART1DTRN_UNCONNECTED;
  wire NLW_PS7_i_EMIOUART1RTSN_UNCONNECTED;
  wire NLW_PS7_i_EMIOUART1TX_UNCONNECTED;
  wire NLW_PS7_i_EMIOUSB0VBUSPWRSELECT_UNCONNECTED;
  wire NLW_PS7_i_EMIOUSB1VBUSPWRSELECT_UNCONNECTED;
  wire NLW_PS7_i_EMIOWDTRSTO_UNCONNECTED;
  wire NLW_PS7_i_EVENTEVENTO_UNCONNECTED;
  wire NLW_PS7_i_MAXIGP0ARESETN_UNCONNECTED;
  wire NLW_PS7_i_MAXIGP1ARESETN_UNCONNECTED;
  wire NLW_PS7_i_MAXIGP1ARVALID_UNCONNECTED;
  wire NLW_PS7_i_MAXIGP1AWVALID_UNCONNECTED;
  wire NLW_PS7_i_MAXIGP1BREADY_UNCONNECTED;
  wire NLW_PS7_i_MAXIGP1RREADY_UNCONNECTED;
  wire NLW_PS7_i_MAXIGP1WLAST_UNCONNECTED;
  wire NLW_PS7_i_MAXIGP1WVALID_UNCONNECTED;
  wire NLW_PS7_i_SAXIACPARESETN_UNCONNECTED;
  wire NLW_PS7_i_SAXIACPARREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIACPAWREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIACPBVALID_UNCONNECTED;
  wire NLW_PS7_i_SAXIACPRLAST_UNCONNECTED;
  wire NLW_PS7_i_SAXIACPRVALID_UNCONNECTED;
  wire NLW_PS7_i_SAXIACPWREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIGP0ARESETN_UNCONNECTED;
  wire NLW_PS7_i_SAXIGP0ARREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIGP0AWREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIGP0BVALID_UNCONNECTED;
  wire NLW_PS7_i_SAXIGP0RLAST_UNCONNECTED;
  wire NLW_PS7_i_SAXIGP0RVALID_UNCONNECTED;
  wire NLW_PS7_i_SAXIGP0WREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIGP1ARESETN_UNCONNECTED;
  wire NLW_PS7_i_SAXIGP1ARREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIGP1AWREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIGP1BVALID_UNCONNECTED;
  wire NLW_PS7_i_SAXIGP1RLAST_UNCONNECTED;
  wire NLW_PS7_i_SAXIGP1RVALID_UNCONNECTED;
  wire NLW_PS7_i_SAXIGP1WREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP0ARESETN_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP0ARREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP0AWREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP0BVALID_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP0RLAST_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP0RVALID_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP0WREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP1ARESETN_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP1ARREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP1AWREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP1BVALID_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP1RLAST_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP1RVALID_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP1WREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP2ARESETN_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP2ARREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP2AWREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP2BVALID_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP2RLAST_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP2RVALID_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP2WREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP3ARESETN_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP3ARREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP3AWREADY_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP3BVALID_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP3RLAST_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP3RVALID_UNCONNECTED;
  wire NLW_PS7_i_SAXIHP3WREADY_UNCONNECTED;
  wire [1:0]NLW_PS7_i_DMA0DATYPE_UNCONNECTED;
  wire [1:0]NLW_PS7_i_DMA1DATYPE_UNCONNECTED;
  wire [1:0]NLW_PS7_i_DMA2DATYPE_UNCONNECTED;
  wire [1:0]NLW_PS7_i_DMA3DATYPE_UNCONNECTED;
  wire [7:0]NLW_PS7_i_EMIOENET0GMIITXD_UNCONNECTED;
  wire [7:0]NLW_PS7_i_EMIOENET1GMIITXD_UNCONNECTED;
  wire [63:0]NLW_PS7_i_EMIOGPIOO_UNCONNECTED;
  wire [63:0]NLW_PS7_i_EMIOGPIOTN_UNCONNECTED;
  wire [2:0]NLW_PS7_i_EMIOSDIO0BUSVOLT_UNCONNECTED;
  wire [3:0]NLW_PS7_i_EMIOSDIO0DATAO_UNCONNECTED;
  wire [3:0]NLW_PS7_i_EMIOSDIO0DATATN_UNCONNECTED;
  wire [2:0]NLW_PS7_i_EMIOSDIO1BUSVOLT_UNCONNECTED;
  wire [3:0]NLW_PS7_i_EMIOSDIO1DATAO_UNCONNECTED;
  wire [3:0]NLW_PS7_i_EMIOSDIO1DATATN_UNCONNECTED;
  wire [2:0]NLW_PS7_i_EMIOSPI0SSON_UNCONNECTED;
  wire [2:0]NLW_PS7_i_EMIOSPI1SSON_UNCONNECTED;
  wire [31:0]NLW_PS7_i_EMIOTRACEDATA_UNCONNECTED;
  wire [2:0]NLW_PS7_i_EMIOTTC0WAVEO_UNCONNECTED;
  wire [2:0]NLW_PS7_i_EMIOTTC1WAVEO_UNCONNECTED;
  wire [1:0]NLW_PS7_i_EMIOUSB0PORTINDCTL_UNCONNECTED;
  wire [1:0]NLW_PS7_i_EMIOUSB1PORTINDCTL_UNCONNECTED;
  wire [1:0]NLW_PS7_i_EVENTSTANDBYWFE_UNCONNECTED;
  wire [1:0]NLW_PS7_i_EVENTSTANDBYWFI_UNCONNECTED;
  wire [3:1]NLW_PS7_i_FCLKCLK_UNCONNECTED;
  wire [3:1]NLW_PS7_i_FCLKRESETN_UNCONNECTED;
  wire [3:0]NLW_PS7_i_FTMTF2PTRIGACK_UNCONNECTED;
  wire [31:0]NLW_PS7_i_FTMTP2FDEBUG_UNCONNECTED;
  wire [3:0]NLW_PS7_i_FTMTP2FTRIG_UNCONNECTED;
  wire [28:0]NLW_PS7_i_IRQP2F_UNCONNECTED;
  wire [15:8]NLW_PS7_i_MAXIGP0ARADDR_UNCONNECTED;
  wire [1:1]NLW_PS7_i_MAXIGP0ARBURST_UNCONNECTED;
  wire [3:0]NLW_PS7_i_MAXIGP0ARCACHE_UNCONNECTED;
  wire [1:0]NLW_PS7_i_MAXIGP0ARLOCK_UNCONNECTED;
  wire [2:0]NLW_PS7_i_MAXIGP0ARPROT_UNCONNECTED;
  wire [3:0]NLW_PS7_i_MAXIGP0ARQOS_UNCONNECTED;
  wire [15:8]NLW_PS7_i_MAXIGP0AWADDR_UNCONNECTED;
  wire [1:1]NLW_PS7_i_MAXIGP0AWBURST_UNCONNECTED;
  wire [3:0]NLW_PS7_i_MAXIGP0AWCACHE_UNCONNECTED;
  wire [1:0]NLW_PS7_i_MAXIGP0AWLOCK_UNCONNECTED;
  wire [2:0]NLW_PS7_i_MAXIGP0AWPROT_UNCONNECTED;
  wire [3:0]NLW_PS7_i_MAXIGP0AWQOS_UNCONNECTED;
  wire [31:1]NLW_PS7_i_MAXIGP0WDATA_UNCONNECTED;
  wire [11:0]NLW_PS7_i_MAXIGP0WID_UNCONNECTED;
  wire [31:0]NLW_PS7_i_MAXIGP1ARADDR_UNCONNECTED;
  wire [1:0]NLW_PS7_i_MAXIGP1ARBURST_UNCONNECTED;
  wire [3:0]NLW_PS7_i_MAXIGP1ARCACHE_UNCONNECTED;
  wire [11:0]NLW_PS7_i_MAXIGP1ARID_UNCONNECTED;
  wire [3:0]NLW_PS7_i_MAXIGP1ARLEN_UNCONNECTED;
  wire [1:0]NLW_PS7_i_MAXIGP1ARLOCK_UNCONNECTED;
  wire [2:0]NLW_PS7_i_MAXIGP1ARPROT_UNCONNECTED;
  wire [3:0]NLW_PS7_i_MAXIGP1ARQOS_UNCONNECTED;
  wire [1:0]NLW_PS7_i_MAXIGP1ARSIZE_UNCONNECTED;
  wire [31:0]NLW_PS7_i_MAXIGP1AWADDR_UNCONNECTED;
  wire [1:0]NLW_PS7_i_MAXIGP1AWBURST_UNCONNECTED;
  wire [3:0]NLW_PS7_i_MAXIGP1AWCACHE_UNCONNECTED;
  wire [11:0]NLW_PS7_i_MAXIGP1AWID_UNCONNECTED;
  wire [3:0]NLW_PS7_i_MAXIGP1AWLEN_UNCONNECTED;
  wire [1:0]NLW_PS7_i_MAXIGP1AWLOCK_UNCONNECTED;
  wire [2:0]NLW_PS7_i_MAXIGP1AWPROT_UNCONNECTED;
  wire [3:0]NLW_PS7_i_MAXIGP1AWQOS_UNCONNECTED;
  wire [1:0]NLW_PS7_i_MAXIGP1AWSIZE_UNCONNECTED;
  wire [31:0]NLW_PS7_i_MAXIGP1WDATA_UNCONNECTED;
  wire [11:0]NLW_PS7_i_MAXIGP1WID_UNCONNECTED;
  wire [3:0]NLW_PS7_i_MAXIGP1WSTRB_UNCONNECTED;
  wire [2:0]NLW_PS7_i_SAXIACPBID_UNCONNECTED;
  wire [1:0]NLW_PS7_i_SAXIACPBRESP_UNCONNECTED;
  wire [63:0]NLW_PS7_i_SAXIACPRDATA_UNCONNECTED;
  wire [2:0]NLW_PS7_i_SAXIACPRID_UNCONNECTED;
  wire [1:0]NLW_PS7_i_SAXIACPRRESP_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIGP0BID_UNCONNECTED;
  wire [1:0]NLW_PS7_i_SAXIGP0BRESP_UNCONNECTED;
  wire [31:0]NLW_PS7_i_SAXIGP0RDATA_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIGP0RID_UNCONNECTED;
  wire [1:0]NLW_PS7_i_SAXIGP0RRESP_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIGP1BID_UNCONNECTED;
  wire [1:0]NLW_PS7_i_SAXIGP1BRESP_UNCONNECTED;
  wire [31:0]NLW_PS7_i_SAXIGP1RDATA_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIGP1RID_UNCONNECTED;
  wire [1:0]NLW_PS7_i_SAXIGP1RRESP_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIHP0BID_UNCONNECTED;
  wire [1:0]NLW_PS7_i_SAXIHP0BRESP_UNCONNECTED;
  wire [2:0]NLW_PS7_i_SAXIHP0RACOUNT_UNCONNECTED;
  wire [7:0]NLW_PS7_i_SAXIHP0RCOUNT_UNCONNECTED;
  wire [63:0]NLW_PS7_i_SAXIHP0RDATA_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIHP0RID_UNCONNECTED;
  wire [1:0]NLW_PS7_i_SAXIHP0RRESP_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIHP0WACOUNT_UNCONNECTED;
  wire [7:0]NLW_PS7_i_SAXIHP0WCOUNT_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIHP1BID_UNCONNECTED;
  wire [1:0]NLW_PS7_i_SAXIHP1BRESP_UNCONNECTED;
  wire [2:0]NLW_PS7_i_SAXIHP1RACOUNT_UNCONNECTED;
  wire [7:0]NLW_PS7_i_SAXIHP1RCOUNT_UNCONNECTED;
  wire [63:0]NLW_PS7_i_SAXIHP1RDATA_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIHP1RID_UNCONNECTED;
  wire [1:0]NLW_PS7_i_SAXIHP1RRESP_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIHP1WACOUNT_UNCONNECTED;
  wire [7:0]NLW_PS7_i_SAXIHP1WCOUNT_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIHP2BID_UNCONNECTED;
  wire [1:0]NLW_PS7_i_SAXIHP2BRESP_UNCONNECTED;
  wire [2:0]NLW_PS7_i_SAXIHP2RACOUNT_UNCONNECTED;
  wire [7:0]NLW_PS7_i_SAXIHP2RCOUNT_UNCONNECTED;
  wire [63:0]NLW_PS7_i_SAXIHP2RDATA_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIHP2RID_UNCONNECTED;
  wire [1:0]NLW_PS7_i_SAXIHP2RRESP_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIHP2WACOUNT_UNCONNECTED;
  wire [7:0]NLW_PS7_i_SAXIHP2WCOUNT_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIHP3BID_UNCONNECTED;
  wire [1:0]NLW_PS7_i_SAXIHP3BRESP_UNCONNECTED;
  wire [2:0]NLW_PS7_i_SAXIHP3RACOUNT_UNCONNECTED;
  wire [7:0]NLW_PS7_i_SAXIHP3RCOUNT_UNCONNECTED;
  wire [63:0]NLW_PS7_i_SAXIHP3RDATA_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIHP3RID_UNCONNECTED;
  wire [1:0]NLW_PS7_i_SAXIHP3RRESP_UNCONNECTED;
  wire [5:0]NLW_PS7_i_SAXIHP3WACOUNT_UNCONNECTED;
  wire [7:0]NLW_PS7_i_SAXIHP3WCOUNT_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  BIBUF DDR_CAS_n_BIBUF
       (.IO(buffered_DDR_CAS_n),
        .PAD(DDR_CAS_n));
  (* box_type = "PRIMITIVE" *) 
  BIBUF DDR_CKE_BIBUF
       (.IO(buffered_DDR_CKE),
        .PAD(DDR_CKE));
  (* box_type = "PRIMITIVE" *) 
  BIBUF DDR_CS_n_BIBUF
       (.IO(buffered_DDR_CS_n),
        .PAD(DDR_CS_n));
  (* box_type = "PRIMITIVE" *) 
  BIBUF DDR_Clk_BIBUF
       (.IO(buffered_DDR_Clk),
        .PAD(DDR_Clk));
  (* box_type = "PRIMITIVE" *) 
  BIBUF DDR_Clk_n_BIBUF
       (.IO(buffered_DDR_Clk_n),
        .PAD(DDR_Clk_n));
  (* box_type = "PRIMITIVE" *) 
  BIBUF DDR_DRSTB_BIBUF
       (.IO(buffered_DDR_DRSTB),
        .PAD(DDR_DRSTB));
  (* box_type = "PRIMITIVE" *) 
  BIBUF DDR_ODT_BIBUF
       (.IO(buffered_DDR_ODT),
        .PAD(DDR_ODT));
  (* box_type = "PRIMITIVE" *) 
  BIBUF DDR_RAS_n_BIBUF
       (.IO(buffered_DDR_RAS_n),
        .PAD(DDR_RAS_n));
  (* box_type = "PRIMITIVE" *) 
  BIBUF DDR_VRN_BIBUF
       (.IO(buffered_DDR_VRN),
        .PAD(DDR_VRN));
  (* box_type = "PRIMITIVE" *) 
  BIBUF DDR_VRP_BIBUF
       (.IO(buffered_DDR_VRP),
        .PAD(DDR_VRP));
  (* box_type = "PRIMITIVE" *) 
  BIBUF DDR_WEB_BIBUF
       (.IO(buffered_DDR_WEB),
        .PAD(DDR_WEB));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  PS7 PS7_i
       (.DDRA(buffered_DDR_Addr),
        .DDRARB(DDR_ARB),
        .DDRBA(buffered_DDR_BankAddr),
        .DDRCASB(buffered_DDR_CAS_n),
        .DDRCKE(buffered_DDR_CKE),
        .DDRCKN(buffered_DDR_Clk_n),
        .DDRCKP(buffered_DDR_Clk),
        .DDRCSB(buffered_DDR_CS_n),
        .DDRDM(buffered_DDR_DM),
        .DDRDQ(buffered_DDR_DQ),
        .DDRDQSN(buffered_DDR_DQS_n),
        .DDRDQSP(buffered_DDR_DQS),
        .DDRDRSTB(buffered_DDR_DRSTB),
        .DDRODT(buffered_DDR_ODT),
        .DDRRASB(buffered_DDR_RAS_n),
        .DDRVRN(buffered_DDR_VRN),
        .DDRVRP(buffered_DDR_VRP),
        .DDRWEB(buffered_DDR_WEB),
        .DMA0ACLK(DMA0_ACLK),
        .DMA0DAREADY(DMA0_DAREADY),
        .DMA0DATYPE(NLW_PS7_i_DMA0DATYPE_UNCONNECTED[1:0]),
        .DMA0DAVALID(NLW_PS7_i_DMA0DAVALID_UNCONNECTED),
        .DMA0DRLAST(DMA0_DRLAST),
        .DMA0DRREADY(NLW_PS7_i_DMA0DRREADY_UNCONNECTED),
        .DMA0DRTYPE(DMA0_DRTYPE),
        .DMA0DRVALID(DMA0_DRVALID),
        .DMA0RSTN(NLW_PS7_i_DMA0RSTN_UNCONNECTED),
        .DMA1ACLK(DMA1_ACLK),
        .DMA1DAREADY(DMA1_DAREADY),
        .DMA1DATYPE(NLW_PS7_i_DMA1DATYPE_UNCONNECTED[1:0]),
        .DMA1DAVALID(NLW_PS7_i_DMA1DAVALID_UNCONNECTED),
        .DMA1DRLAST(DMA1_DRLAST),
        .DMA1DRREADY(NLW_PS7_i_DMA1DRREADY_UNCONNECTED),
        .DMA1DRTYPE(DMA1_DRTYPE),
        .DMA1DRVALID(DMA1_DRVALID),
        .DMA1RSTN(NLW_PS7_i_DMA1RSTN_UNCONNECTED),
        .DMA2ACLK(DMA2_ACLK),
        .DMA2DAREADY(DMA2_DAREADY),
        .DMA2DATYPE(NLW_PS7_i_DMA2DATYPE_UNCONNECTED[1:0]),
        .DMA2DAVALID(NLW_PS7_i_DMA2DAVALID_UNCONNECTED),
        .DMA2DRLAST(DMA2_DRLAST),
        .DMA2DRREADY(NLW_PS7_i_DMA2DRREADY_UNCONNECTED),
        .DMA2DRTYPE(DMA2_DRTYPE),
        .DMA2DRVALID(DMA2_DRVALID),
        .DMA2RSTN(NLW_PS7_i_DMA2RSTN_UNCONNECTED),
        .DMA3ACLK(DMA3_ACLK),
        .DMA3DAREADY(DMA3_DAREADY),
        .DMA3DATYPE(NLW_PS7_i_DMA3DATYPE_UNCONNECTED[1:0]),
        .DMA3DAVALID(NLW_PS7_i_DMA3DAVALID_UNCONNECTED),
        .DMA3DRLAST(DMA3_DRLAST),
        .DMA3DRREADY(NLW_PS7_i_DMA3DRREADY_UNCONNECTED),
        .DMA3DRTYPE(DMA3_DRTYPE),
        .DMA3DRVALID(DMA3_DRVALID),
        .DMA3RSTN(NLW_PS7_i_DMA3RSTN_UNCONNECTED),
        .EMIOCAN0PHYRX(CAN0_PHY_RX),
        .EMIOCAN0PHYTX(NLW_PS7_i_EMIOCAN0PHYTX_UNCONNECTED),
        .EMIOCAN1PHYRX(CAN1_PHY_RX),
        .EMIOCAN1PHYTX(NLW_PS7_i_EMIOCAN1PHYTX_UNCONNECTED),
        .EMIOENET0EXTINTIN(ENET0_EXT_INTIN),
        .EMIOENET0GMIICOL(1'b0),
        .EMIOENET0GMIICRS(1'b0),
        .EMIOENET0GMIIRXCLK(ENET0_GMII_RX_CLK),
        .EMIOENET0GMIIRXD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .EMIOENET0GMIIRXDV(1'b0),
        .EMIOENET0GMIIRXER(1'b0),
        .EMIOENET0GMIITXCLK(ENET0_GMII_TX_CLK),
        .EMIOENET0GMIITXD(NLW_PS7_i_EMIOENET0GMIITXD_UNCONNECTED[7:0]),
        .EMIOENET0GMIITXEN(NLW_PS7_i_EMIOENET0GMIITXEN_UNCONNECTED),
        .EMIOENET0GMIITXER(NLW_PS7_i_EMIOENET0GMIITXER_UNCONNECTED),
        .EMIOENET0MDIOI(ENET0_MDIO_I),
        .EMIOENET0MDIOMDC(NLW_PS7_i_EMIOENET0MDIOMDC_UNCONNECTED),
        .EMIOENET0MDIOO(NLW_PS7_i_EMIOENET0MDIOO_UNCONNECTED),
        .EMIOENET0MDIOTN(NLW_PS7_i_EMIOENET0MDIOTN_UNCONNECTED),
        .EMIOENET0PTPDELAYREQRX(NLW_PS7_i_EMIOENET0PTPDELAYREQRX_UNCONNECTED),
        .EMIOENET0PTPDELAYREQTX(NLW_PS7_i_EMIOENET0PTPDELAYREQTX_UNCONNECTED),
        .EMIOENET0PTPPDELAYREQRX(NLW_PS7_i_EMIOENET0PTPPDELAYREQRX_UNCONNECTED),
        .EMIOENET0PTPPDELAYREQTX(NLW_PS7_i_EMIOENET0PTPPDELAYREQTX_UNCONNECTED),
        .EMIOENET0PTPPDELAYRESPRX(NLW_PS7_i_EMIOENET0PTPPDELAYRESPRX_UNCONNECTED),
        .EMIOENET0PTPPDELAYRESPTX(NLW_PS7_i_EMIOENET0PTPPDELAYRESPTX_UNCONNECTED),
        .EMIOENET0PTPSYNCFRAMERX(NLW_PS7_i_EMIOENET0PTPSYNCFRAMERX_UNCONNECTED),
        .EMIOENET0PTPSYNCFRAMETX(NLW_PS7_i_EMIOENET0PTPSYNCFRAMETX_UNCONNECTED),
        .EMIOENET0SOFRX(NLW_PS7_i_EMIOENET0SOFRX_UNCONNECTED),
        .EMIOENET0SOFTX(NLW_PS7_i_EMIOENET0SOFTX_UNCONNECTED),
        .EMIOENET1EXTINTIN(ENET1_EXT_INTIN),
        .EMIOENET1GMIICOL(1'b0),
        .EMIOENET1GMIICRS(1'b0),
        .EMIOENET1GMIIRXCLK(ENET1_GMII_RX_CLK),
        .EMIOENET1GMIIRXD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .EMIOENET1GMIIRXDV(1'b0),
        .EMIOENET1GMIIRXER(1'b0),
        .EMIOENET1GMIITXCLK(ENET1_GMII_TX_CLK),
        .EMIOENET1GMIITXD(NLW_PS7_i_EMIOENET1GMIITXD_UNCONNECTED[7:0]),
        .EMIOENET1GMIITXEN(NLW_PS7_i_EMIOENET1GMIITXEN_UNCONNECTED),
        .EMIOENET1GMIITXER(NLW_PS7_i_EMIOENET1GMIITXER_UNCONNECTED),
        .EMIOENET1MDIOI(ENET1_MDIO_I),
        .EMIOENET1MDIOMDC(NLW_PS7_i_EMIOENET1MDIOMDC_UNCONNECTED),
        .EMIOENET1MDIOO(NLW_PS7_i_EMIOENET1MDIOO_UNCONNECTED),
        .EMIOENET1MDIOTN(NLW_PS7_i_EMIOENET1MDIOTN_UNCONNECTED),
        .EMIOENET1PTPDELAYREQRX(NLW_PS7_i_EMIOENET1PTPDELAYREQRX_UNCONNECTED),
        .EMIOENET1PTPDELAYREQTX(NLW_PS7_i_EMIOENET1PTPDELAYREQTX_UNCONNECTED),
        .EMIOENET1PTPPDELAYREQRX(NLW_PS7_i_EMIOENET1PTPPDELAYREQRX_UNCONNECTED),
        .EMIOENET1PTPPDELAYREQTX(NLW_PS7_i_EMIOENET1PTPPDELAYREQTX_UNCONNECTED),
        .EMIOENET1PTPPDELAYRESPRX(NLW_PS7_i_EMIOENET1PTPPDELAYRESPRX_UNCONNECTED),
        .EMIOENET1PTPPDELAYRESPTX(NLW_PS7_i_EMIOENET1PTPPDELAYRESPTX_UNCONNECTED),
        .EMIOENET1PTPSYNCFRAMERX(NLW_PS7_i_EMIOENET1PTPSYNCFRAMERX_UNCONNECTED),
        .EMIOENET1PTPSYNCFRAMETX(NLW_PS7_i_EMIOENET1PTPSYNCFRAMETX_UNCONNECTED),
        .EMIOENET1SOFRX(NLW_PS7_i_EMIOENET1SOFRX_UNCONNECTED),
        .EMIOENET1SOFTX(NLW_PS7_i_EMIOENET1SOFTX_UNCONNECTED),
        .EMIOGPIOI(GPIO_I),
        .EMIOGPIOO(NLW_PS7_i_EMIOGPIOO_UNCONNECTED[63:0]),
        .EMIOGPIOTN(NLW_PS7_i_EMIOGPIOTN_UNCONNECTED[63:0]),
        .EMIOI2C0SCLI(I2C0_SCL_I),
        .EMIOI2C0SCLO(NLW_PS7_i_EMIOI2C0SCLO_UNCONNECTED),
        .EMIOI2C0SCLTN(NLW_PS7_i_EMIOI2C0SCLTN_UNCONNECTED),
        .EMIOI2C0SDAI(I2C0_SDA_I),
        .EMIOI2C0SDAO(NLW_PS7_i_EMIOI2C0SDAO_UNCONNECTED),
        .EMIOI2C0SDATN(NLW_PS7_i_EMIOI2C0SDATN_UNCONNECTED),
        .EMIOI2C1SCLI(I2C1_SCL_I),
        .EMIOI2C1SCLO(NLW_PS7_i_EMIOI2C1SCLO_UNCONNECTED),
        .EMIOI2C1SCLTN(NLW_PS7_i_EMIOI2C1SCLTN_UNCONNECTED),
        .EMIOI2C1SDAI(I2C1_SDA_I),
        .EMIOI2C1SDAO(NLW_PS7_i_EMIOI2C1SDAO_UNCONNECTED),
        .EMIOI2C1SDATN(NLW_PS7_i_EMIOI2C1SDATN_UNCONNECTED),
        .EMIOPJTAGTCK(PJTAG_TCK),
        .EMIOPJTAGTDI(PJTAG_TDI),
        .EMIOPJTAGTDO(NLW_PS7_i_EMIOPJTAGTDO_UNCONNECTED),
        .EMIOPJTAGTDTN(NLW_PS7_i_EMIOPJTAGTDTN_UNCONNECTED),
        .EMIOPJTAGTMS(PJTAG_TMS),
        .EMIOSDIO0BUSPOW(NLW_PS7_i_EMIOSDIO0BUSPOW_UNCONNECTED),
        .EMIOSDIO0BUSVOLT(NLW_PS7_i_EMIOSDIO0BUSVOLT_UNCONNECTED[2:0]),
        .EMIOSDIO0CDN(SDIO0_CDN),
        .EMIOSDIO0CLK(NLW_PS7_i_EMIOSDIO0CLK_UNCONNECTED),
        .EMIOSDIO0CLKFB(SDIO0_CLK_FB),
        .EMIOSDIO0CMDI(SDIO0_CMD_I),
        .EMIOSDIO0CMDO(NLW_PS7_i_EMIOSDIO0CMDO_UNCONNECTED),
        .EMIOSDIO0CMDTN(NLW_PS7_i_EMIOSDIO0CMDTN_UNCONNECTED),
        .EMIOSDIO0DATAI(SDIO0_DATA_I),
        .EMIOSDIO0DATAO(NLW_PS7_i_EMIOSDIO0DATAO_UNCONNECTED[3:0]),
        .EMIOSDIO0DATATN(NLW_PS7_i_EMIOSDIO0DATATN_UNCONNECTED[3:0]),
        .EMIOSDIO0LED(NLW_PS7_i_EMIOSDIO0LED_UNCONNECTED),
        .EMIOSDIO0WP(SDIO0_WP),
        .EMIOSDIO1BUSPOW(NLW_PS7_i_EMIOSDIO1BUSPOW_UNCONNECTED),
        .EMIOSDIO1BUSVOLT(NLW_PS7_i_EMIOSDIO1BUSVOLT_UNCONNECTED[2:0]),
        .EMIOSDIO1CDN(SDIO1_CDN),
        .EMIOSDIO1CLK(NLW_PS7_i_EMIOSDIO1CLK_UNCONNECTED),
        .EMIOSDIO1CLKFB(SDIO1_CLK_FB),
        .EMIOSDIO1CMDI(SDIO1_CMD_I),
        .EMIOSDIO1CMDO(NLW_PS7_i_EMIOSDIO1CMDO_UNCONNECTED),
        .EMIOSDIO1CMDTN(NLW_PS7_i_EMIOSDIO1CMDTN_UNCONNECTED),
        .EMIOSDIO1DATAI(SDIO1_DATA_I),
        .EMIOSDIO1DATAO(NLW_PS7_i_EMIOSDIO1DATAO_UNCONNECTED[3:0]),
        .EMIOSDIO1DATATN(NLW_PS7_i_EMIOSDIO1DATATN_UNCONNECTED[3:0]),
        .EMIOSDIO1LED(NLW_PS7_i_EMIOSDIO1LED_UNCONNECTED),
        .EMIOSDIO1WP(SDIO1_WP),
        .EMIOSPI0MI(SPI0_MISO_I),
        .EMIOSPI0MO(NLW_PS7_i_EMIOSPI0MO_UNCONNECTED),
        .EMIOSPI0MOTN(NLW_PS7_i_EMIOSPI0MOTN_UNCONNECTED),
        .EMIOSPI0SCLKI(SPI0_SCLK_I),
        .EMIOSPI0SCLKO(NLW_PS7_i_EMIOSPI0SCLKO_UNCONNECTED),
        .EMIOSPI0SCLKTN(NLW_PS7_i_EMIOSPI0SCLKTN_UNCONNECTED),
        .EMIOSPI0SI(SPI0_MOSI_I),
        .EMIOSPI0SO(NLW_PS7_i_EMIOSPI0SO_UNCONNECTED),
        .EMIOSPI0SSIN(SPI0_SS_I),
        .EMIOSPI0SSNTN(NLW_PS7_i_EMIOSPI0SSNTN_UNCONNECTED),
        .EMIOSPI0SSON(NLW_PS7_i_EMIOSPI0SSON_UNCONNECTED[2:0]),
        .EMIOSPI0STN(NLW_PS7_i_EMIOSPI0STN_UNCONNECTED),
        .EMIOSPI1MI(SPI1_MISO_I),
        .EMIOSPI1MO(NLW_PS7_i_EMIOSPI1MO_UNCONNECTED),
        .EMIOSPI1MOTN(NLW_PS7_i_EMIOSPI1MOTN_UNCONNECTED),
        .EMIOSPI1SCLKI(SPI1_SCLK_I),
        .EMIOSPI1SCLKO(NLW_PS7_i_EMIOSPI1SCLKO_UNCONNECTED),
        .EMIOSPI1SCLKTN(NLW_PS7_i_EMIOSPI1SCLKTN_UNCONNECTED),
        .EMIOSPI1SI(SPI1_MOSI_I),
        .EMIOSPI1SO(NLW_PS7_i_EMIOSPI1SO_UNCONNECTED),
        .EMIOSPI1SSIN(SPI1_SS_I),
        .EMIOSPI1SSNTN(NLW_PS7_i_EMIOSPI1SSNTN_UNCONNECTED),
        .EMIOSPI1SSON(NLW_PS7_i_EMIOSPI1SSON_UNCONNECTED[2:0]),
        .EMIOSPI1STN(NLW_PS7_i_EMIOSPI1STN_UNCONNECTED),
        .EMIOSRAMINTIN(SRAM_INTIN),
        .EMIOTRACECLK(TRACE_CLK),
        .EMIOTRACECTL(NLW_PS7_i_EMIOTRACECTL_UNCONNECTED),
        .EMIOTRACEDATA(NLW_PS7_i_EMIOTRACEDATA_UNCONNECTED[31:0]),
        .EMIOTTC0CLKI({TTC0_CLK2_IN,TTC0_CLK1_IN,TTC0_CLK0_IN}),
        .EMIOTTC0WAVEO(NLW_PS7_i_EMIOTTC0WAVEO_UNCONNECTED[2:0]),
        .EMIOTTC1CLKI({TTC1_CLK2_IN,TTC1_CLK1_IN,TTC1_CLK0_IN}),
        .EMIOTTC1WAVEO(NLW_PS7_i_EMIOTTC1WAVEO_UNCONNECTED[2:0]),
        .EMIOUART0CTSN(UART0_CTSN),
        .EMIOUART0DCDN(UART0_DCDN),
        .EMIOUART0DSRN(UART0_DSRN),
        .EMIOUART0DTRN(NLW_PS7_i_EMIOUART0DTRN_UNCONNECTED),
        .EMIOUART0RIN(UART0_RIN),
        .EMIOUART0RTSN(NLW_PS7_i_EMIOUART0RTSN_UNCONNECTED),
        .EMIOUART0RX(UART0_RX),
        .EMIOUART0TX(NLW_PS7_i_EMIOUART0TX_UNCONNECTED),
        .EMIOUART1CTSN(UART1_CTSN),
        .EMIOUART1DCDN(UART1_DCDN),
        .EMIOUART1DSRN(UART1_DSRN),
        .EMIOUART1DTRN(NLW_PS7_i_EMIOUART1DTRN_UNCONNECTED),
        .EMIOUART1RIN(UART1_RIN),
        .EMIOUART1RTSN(NLW_PS7_i_EMIOUART1RTSN_UNCONNECTED),
        .EMIOUART1RX(UART1_RX),
        .EMIOUART1TX(NLW_PS7_i_EMIOUART1TX_UNCONNECTED),
        .EMIOUSB0PORTINDCTL(NLW_PS7_i_EMIOUSB0PORTINDCTL_UNCONNECTED[1:0]),
        .EMIOUSB0VBUSPWRFAULT(USB0_VBUS_PWRFAULT),
        .EMIOUSB0VBUSPWRSELECT(NLW_PS7_i_EMIOUSB0VBUSPWRSELECT_UNCONNECTED),
        .EMIOUSB1PORTINDCTL(NLW_PS7_i_EMIOUSB1PORTINDCTL_UNCONNECTED[1:0]),
        .EMIOUSB1VBUSPWRFAULT(USB1_VBUS_PWRFAULT),
        .EMIOUSB1VBUSPWRSELECT(NLW_PS7_i_EMIOUSB1VBUSPWRSELECT_UNCONNECTED),
        .EMIOWDTCLKI(WDT_CLK_IN),
        .EMIOWDTRSTO(NLW_PS7_i_EMIOWDTRSTO_UNCONNECTED),
        .EVENTEVENTI(EVENT_EVENTI),
        .EVENTEVENTO(NLW_PS7_i_EVENTEVENTO_UNCONNECTED),
        .EVENTSTANDBYWFE(NLW_PS7_i_EVENTSTANDBYWFE_UNCONNECTED[1:0]),
        .EVENTSTANDBYWFI(NLW_PS7_i_EVENTSTANDBYWFI_UNCONNECTED[1:0]),
        .FCLKCLK({NLW_PS7_i_FCLKCLK_UNCONNECTED[3:1],FCLK_CLK_unbuffered}),
        .FCLKCLKTRIGN({1'b0,1'b0,1'b0,1'b0}),
        .FCLKRESETN({NLW_PS7_i_FCLKRESETN_UNCONNECTED[3:1],FCLK_RESET0_N}),
        .FPGAIDLEN(FPGA_IDLE_N),
        .FTMDTRACEINATID({1'b0,1'b0,1'b0,1'b0}),
        .FTMDTRACEINCLOCK(FTMD_TRACEIN_CLK),
        .FTMDTRACEINDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .FTMDTRACEINVALID(1'b0),
        .FTMTF2PDEBUG(FTMT_F2P_DEBUG),
        .FTMTF2PTRIG({FTMT_F2P_TRIG_3,FTMT_F2P_TRIG_2,FTMT_F2P_TRIG_1,FTMT_F2P_TRIG_0}),
        .FTMTF2PTRIGACK(NLW_PS7_i_FTMTF2PTRIGACK_UNCONNECTED[3:0]),
        .FTMTP2FDEBUG(NLW_PS7_i_FTMTP2FDEBUG_UNCONNECTED[31:0]),
        .FTMTP2FTRIG(NLW_PS7_i_FTMTP2FTRIG_UNCONNECTED[3:0]),
        .FTMTP2FTRIGACK({FTMT_P2F_TRIGACK_3,FTMT_P2F_TRIGACK_2,FTMT_P2F_TRIGACK_1,FTMT_P2F_TRIGACK_0}),
        .IRQF2P({Core1_nFIQ,Core0_nFIQ,Core1_nIRQ,Core0_nIRQ,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,IRQ_F2P}),
        .IRQP2F(NLW_PS7_i_IRQP2F_UNCONNECTED[28:0]),
        .MAXIGP0ACLK(M_AXI_GP0_ACLK),
        .MAXIGP0ARADDR({M_AXI_GP0_ARADDR[31:16],NLW_PS7_i_MAXIGP0ARADDR_UNCONNECTED[15:8],M_AXI_GP0_ARADDR[7:0]}),
        .MAXIGP0ARBURST({NLW_PS7_i_MAXIGP0ARBURST_UNCONNECTED[1],M_AXI_GP0_ARBURST[0]}),
        .MAXIGP0ARCACHE(NLW_PS7_i_MAXIGP0ARCACHE_UNCONNECTED[3:0]),
        .MAXIGP0ARESETN(NLW_PS7_i_MAXIGP0ARESETN_UNCONNECTED),
        .MAXIGP0ARID(M_AXI_GP0_ARID),
        .MAXIGP0ARLEN(M_AXI_GP0_ARLEN),
        .MAXIGP0ARLOCK(NLW_PS7_i_MAXIGP0ARLOCK_UNCONNECTED[1:0]),
        .MAXIGP0ARPROT(NLW_PS7_i_MAXIGP0ARPROT_UNCONNECTED[2:0]),
        .MAXIGP0ARQOS(NLW_PS7_i_MAXIGP0ARQOS_UNCONNECTED[3:0]),
        .MAXIGP0ARREADY(M_AXI_GP0_ARREADY),
        .MAXIGP0ARSIZE(M_AXI_GP0_ARSIZE[1:0]),
        .MAXIGP0ARVALID(M_AXI_GP0_ARVALID),
        .MAXIGP0AWADDR({M_AXI_GP0_AWADDR[31:16],NLW_PS7_i_MAXIGP0AWADDR_UNCONNECTED[15:8],M_AXI_GP0_AWADDR[7:0]}),
        .MAXIGP0AWBURST({NLW_PS7_i_MAXIGP0AWBURST_UNCONNECTED[1],M_AXI_GP0_AWBURST[0]}),
        .MAXIGP0AWCACHE(NLW_PS7_i_MAXIGP0AWCACHE_UNCONNECTED[3:0]),
        .MAXIGP0AWID(M_AXI_GP0_AWID),
        .MAXIGP0AWLEN(M_AXI_GP0_AWLEN),
        .MAXIGP0AWLOCK(NLW_PS7_i_MAXIGP0AWLOCK_UNCONNECTED[1:0]),
        .MAXIGP0AWPROT(NLW_PS7_i_MAXIGP0AWPROT_UNCONNECTED[2:0]),
        .MAXIGP0AWQOS(NLW_PS7_i_MAXIGP0AWQOS_UNCONNECTED[3:0]),
        .MAXIGP0AWREADY(M_AXI_GP0_AWREADY),
        .MAXIGP0AWSIZE(M_AXI_GP0_AWSIZE[1:0]),
        .MAXIGP0AWVALID(M_AXI_GP0_AWVALID),
        .MAXIGP0BID(M_AXI_GP0_BID),
        .MAXIGP0BREADY(M_AXI_GP0_BREADY),
        .MAXIGP0BRESP(M_AXI_GP0_BRESP),
        .MAXIGP0BVALID(M_AXI_GP0_BVALID),
        .MAXIGP0RDATA(M_AXI_GP0_RDATA),
        .MAXIGP0RID(M_AXI_GP0_RID),
        .MAXIGP0RLAST(M_AXI_GP0_RLAST),
        .MAXIGP0RREADY(M_AXI_GP0_RREADY),
        .MAXIGP0RRESP(M_AXI_GP0_RRESP),
        .MAXIGP0RVALID(M_AXI_GP0_RVALID),
        .MAXIGP0WDATA({NLW_PS7_i_MAXIGP0WDATA_UNCONNECTED[31:1],M_AXI_GP0_WDATA[0]}),
        .MAXIGP0WID(NLW_PS7_i_MAXIGP0WID_UNCONNECTED[11:0]),
        .MAXIGP0WLAST(M_AXI_GP0_WLAST),
        .MAXIGP0WREADY(M_AXI_GP0_WREADY),
        .MAXIGP0WSTRB(M_AXI_GP0_WSTRB),
        .MAXIGP0WVALID(M_AXI_GP0_WVALID),
        .MAXIGP1ACLK(M_AXI_GP1_ACLK),
        .MAXIGP1ARADDR(NLW_PS7_i_MAXIGP1ARADDR_UNCONNECTED[31:0]),
        .MAXIGP1ARBURST(NLW_PS7_i_MAXIGP1ARBURST_UNCONNECTED[1:0]),
        .MAXIGP1ARCACHE(NLW_PS7_i_MAXIGP1ARCACHE_UNCONNECTED[3:0]),
        .MAXIGP1ARESETN(NLW_PS7_i_MAXIGP1ARESETN_UNCONNECTED),
        .MAXIGP1ARID(NLW_PS7_i_MAXIGP1ARID_UNCONNECTED[11:0]),
        .MAXIGP1ARLEN(NLW_PS7_i_MAXIGP1ARLEN_UNCONNECTED[3:0]),
        .MAXIGP1ARLOCK(NLW_PS7_i_MAXIGP1ARLOCK_UNCONNECTED[1:0]),
        .MAXIGP1ARPROT(NLW_PS7_i_MAXIGP1ARPROT_UNCONNECTED[2:0]),
        .MAXIGP1ARQOS(NLW_PS7_i_MAXIGP1ARQOS_UNCONNECTED[3:0]),
        .MAXIGP1ARREADY(M_AXI_GP1_ARREADY),
        .MAXIGP1ARSIZE(NLW_PS7_i_MAXIGP1ARSIZE_UNCONNECTED[1:0]),
        .MAXIGP1ARVALID(NLW_PS7_i_MAXIGP1ARVALID_UNCONNECTED),
        .MAXIGP1AWADDR(NLW_PS7_i_MAXIGP1AWADDR_UNCONNECTED[31:0]),
        .MAXIGP1AWBURST(NLW_PS7_i_MAXIGP1AWBURST_UNCONNECTED[1:0]),
        .MAXIGP1AWCACHE(NLW_PS7_i_MAXIGP1AWCACHE_UNCONNECTED[3:0]),
        .MAXIGP1AWID(NLW_PS7_i_MAXIGP1AWID_UNCONNECTED[11:0]),
        .MAXIGP1AWLEN(NLW_PS7_i_MAXIGP1AWLEN_UNCONNECTED[3:0]),
        .MAXIGP1AWLOCK(NLW_PS7_i_MAXIGP1AWLOCK_UNCONNECTED[1:0]),
        .MAXIGP1AWPROT(NLW_PS7_i_MAXIGP1AWPROT_UNCONNECTED[2:0]),
        .MAXIGP1AWQOS(NLW_PS7_i_MAXIGP1AWQOS_UNCONNECTED[3:0]),
        .MAXIGP1AWREADY(M_AXI_GP1_AWREADY),
        .MAXIGP1AWSIZE(NLW_PS7_i_MAXIGP1AWSIZE_UNCONNECTED[1:0]),
        .MAXIGP1AWVALID(NLW_PS7_i_MAXIGP1AWVALID_UNCONNECTED),
        .MAXIGP1BID(M_AXI_GP1_BID),
        .MAXIGP1BREADY(NLW_PS7_i_MAXIGP1BREADY_UNCONNECTED),
        .MAXIGP1BRESP(M_AXI_GP1_BRESP),
        .MAXIGP1BVALID(M_AXI_GP1_BVALID),
        .MAXIGP1RDATA(M_AXI_GP1_RDATA),
        .MAXIGP1RID(M_AXI_GP1_RID),
        .MAXIGP1RLAST(M_AXI_GP1_RLAST),
        .MAXIGP1RREADY(NLW_PS7_i_MAXIGP1RREADY_UNCONNECTED),
        .MAXIGP1RRESP(M_AXI_GP1_RRESP),
        .MAXIGP1RVALID(M_AXI_GP1_RVALID),
        .MAXIGP1WDATA(NLW_PS7_i_MAXIGP1WDATA_UNCONNECTED[31:0]),
        .MAXIGP1WID(NLW_PS7_i_MAXIGP1WID_UNCONNECTED[11:0]),
        .MAXIGP1WLAST(NLW_PS7_i_MAXIGP1WLAST_UNCONNECTED),
        .MAXIGP1WREADY(M_AXI_GP1_WREADY),
        .MAXIGP1WSTRB(NLW_PS7_i_MAXIGP1WSTRB_UNCONNECTED[3:0]),
        .MAXIGP1WVALID(NLW_PS7_i_MAXIGP1WVALID_UNCONNECTED),
        .MIO(buffered_MIO),
        .PSCLK(buffered_PS_CLK),
        .PSPORB(buffered_PS_PORB),
        .PSSRSTB(buffered_PS_SRSTB),
        .SAXIACPACLK(S_AXI_ACP_ACLK),
        .SAXIACPARADDR(S_AXI_ACP_ARADDR),
        .SAXIACPARBURST(S_AXI_ACP_ARBURST),
        .SAXIACPARCACHE(S_AXI_ACP_ARCACHE),
        .SAXIACPARESETN(NLW_PS7_i_SAXIACPARESETN_UNCONNECTED),
        .SAXIACPARID(S_AXI_ACP_ARID),
        .SAXIACPARLEN(S_AXI_ACP_ARLEN),
        .SAXIACPARLOCK(S_AXI_ACP_ARLOCK),
        .SAXIACPARPROT(S_AXI_ACP_ARPROT),
        .SAXIACPARQOS(S_AXI_ACP_ARQOS),
        .SAXIACPARREADY(NLW_PS7_i_SAXIACPARREADY_UNCONNECTED),
        .SAXIACPARSIZE(S_AXI_ACP_ARSIZE[1:0]),
        .SAXIACPARUSER(S_AXI_ACP_ARUSER),
        .SAXIACPARVALID(S_AXI_ACP_ARVALID),
        .SAXIACPAWADDR(S_AXI_ACP_AWADDR),
        .SAXIACPAWBURST(S_AXI_ACP_AWBURST),
        .SAXIACPAWCACHE(S_AXI_ACP_AWCACHE),
        .SAXIACPAWID(S_AXI_ACP_AWID),
        .SAXIACPAWLEN(S_AXI_ACP_AWLEN),
        .SAXIACPAWLOCK(S_AXI_ACP_AWLOCK),
        .SAXIACPAWPROT(S_AXI_ACP_AWPROT),
        .SAXIACPAWQOS(S_AXI_ACP_AWQOS),
        .SAXIACPAWREADY(NLW_PS7_i_SAXIACPAWREADY_UNCONNECTED),
        .SAXIACPAWSIZE(S_AXI_ACP_AWSIZE[1:0]),
        .SAXIACPAWUSER(S_AXI_ACP_AWUSER),
        .SAXIACPAWVALID(S_AXI_ACP_AWVALID),
        .SAXIACPBID(NLW_PS7_i_SAXIACPBID_UNCONNECTED[2:0]),
        .SAXIACPBREADY(S_AXI_ACP_BREADY),
        .SAXIACPBRESP(NLW_PS7_i_SAXIACPBRESP_UNCONNECTED[1:0]),
        .SAXIACPBVALID(NLW_PS7_i_SAXIACPBVALID_UNCONNECTED),
        .SAXIACPRDATA(NLW_PS7_i_SAXIACPRDATA_UNCONNECTED[63:0]),
        .SAXIACPRID(NLW_PS7_i_SAXIACPRID_UNCONNECTED[2:0]),
        .SAXIACPRLAST(NLW_PS7_i_SAXIACPRLAST_UNCONNECTED),
        .SAXIACPRREADY(S_AXI_ACP_RREADY),
        .SAXIACPRRESP(NLW_PS7_i_SAXIACPRRESP_UNCONNECTED[1:0]),
        .SAXIACPRVALID(NLW_PS7_i_SAXIACPRVALID_UNCONNECTED),
        .SAXIACPWDATA(S_AXI_ACP_WDATA),
        .SAXIACPWID(S_AXI_ACP_WID),
        .SAXIACPWLAST(S_AXI_ACP_WLAST),
        .SAXIACPWREADY(NLW_PS7_i_SAXIACPWREADY_UNCONNECTED),
        .SAXIACPWSTRB(S_AXI_ACP_WSTRB),
        .SAXIACPWVALID(S_AXI_ACP_WVALID),
        .SAXIGP0ACLK(S_AXI_GP0_ACLK),
        .SAXIGP0ARADDR(S_AXI_GP0_ARADDR),
        .SAXIGP0ARBURST(S_AXI_GP0_ARBURST),
        .SAXIGP0ARCACHE(S_AXI_GP0_ARCACHE),
        .SAXIGP0ARESETN(NLW_PS7_i_SAXIGP0ARESETN_UNCONNECTED),
        .SAXIGP0ARID(S_AXI_GP0_ARID),
        .SAXIGP0ARLEN(S_AXI_GP0_ARLEN),
        .SAXIGP0ARLOCK(S_AXI_GP0_ARLOCK),
        .SAXIGP0ARPROT(S_AXI_GP0_ARPROT),
        .SAXIGP0ARQOS(S_AXI_GP0_ARQOS),
        .SAXIGP0ARREADY(NLW_PS7_i_SAXIGP0ARREADY_UNCONNECTED),
        .SAXIGP0ARSIZE(S_AXI_GP0_ARSIZE[1:0]),
        .SAXIGP0ARVALID(S_AXI_GP0_ARVALID),
        .SAXIGP0AWADDR(S_AXI_GP0_AWADDR),
        .SAXIGP0AWBURST(S_AXI_GP0_AWBURST),
        .SAXIGP0AWCACHE(S_AXI_GP0_AWCACHE),
        .SAXIGP0AWID(S_AXI_GP0_AWID),
        .SAXIGP0AWLEN(S_AXI_GP0_AWLEN),
        .SAXIGP0AWLOCK(S_AXI_GP0_AWLOCK),
        .SAXIGP0AWPROT(S_AXI_GP0_AWPROT),
        .SAXIGP0AWQOS(S_AXI_GP0_AWQOS),
        .SAXIGP0AWREADY(NLW_PS7_i_SAXIGP0AWREADY_UNCONNECTED),
        .SAXIGP0AWSIZE(S_AXI_GP0_AWSIZE[1:0]),
        .SAXIGP0AWVALID(S_AXI_GP0_AWVALID),
        .SAXIGP0BID(NLW_PS7_i_SAXIGP0BID_UNCONNECTED[5:0]),
        .SAXIGP0BREADY(S_AXI_GP0_BREADY),
        .SAXIGP0BRESP(NLW_PS7_i_SAXIGP0BRESP_UNCONNECTED[1:0]),
        .SAXIGP0BVALID(NLW_PS7_i_SAXIGP0BVALID_UNCONNECTED),
        .SAXIGP0RDATA(NLW_PS7_i_SAXIGP0RDATA_UNCONNECTED[31:0]),
        .SAXIGP0RID(NLW_PS7_i_SAXIGP0RID_UNCONNECTED[5:0]),
        .SAXIGP0RLAST(NLW_PS7_i_SAXIGP0RLAST_UNCONNECTED),
        .SAXIGP0RREADY(S_AXI_GP0_RREADY),
        .SAXIGP0RRESP(NLW_PS7_i_SAXIGP0RRESP_UNCONNECTED[1:0]),
        .SAXIGP0RVALID(NLW_PS7_i_SAXIGP0RVALID_UNCONNECTED),
        .SAXIGP0WDATA(S_AXI_GP0_WDATA),
        .SAXIGP0WID(S_AXI_GP0_WID),
        .SAXIGP0WLAST(S_AXI_GP0_WLAST),
        .SAXIGP0WREADY(NLW_PS7_i_SAXIGP0WREADY_UNCONNECTED),
        .SAXIGP0WSTRB(S_AXI_GP0_WSTRB),
        .SAXIGP0WVALID(S_AXI_GP0_WVALID),
        .SAXIGP1ACLK(S_AXI_GP1_ACLK),
        .SAXIGP1ARADDR(S_AXI_GP1_ARADDR),
        .SAXIGP1ARBURST(S_AXI_GP1_ARBURST),
        .SAXIGP1ARCACHE(S_AXI_GP1_ARCACHE),
        .SAXIGP1ARESETN(NLW_PS7_i_SAXIGP1ARESETN_UNCONNECTED),
        .SAXIGP1ARID(S_AXI_GP1_ARID),
        .SAXIGP1ARLEN(S_AXI_GP1_ARLEN),
        .SAXIGP1ARLOCK(S_AXI_GP1_ARLOCK),
        .SAXIGP1ARPROT(S_AXI_GP1_ARPROT),
        .SAXIGP1ARQOS(S_AXI_GP1_ARQOS),
        .SAXIGP1ARREADY(NLW_PS7_i_SAXIGP1ARREADY_UNCONNECTED),
        .SAXIGP1ARSIZE(S_AXI_GP1_ARSIZE[1:0]),
        .SAXIGP1ARVALID(S_AXI_GP1_ARVALID),
        .SAXIGP1AWADDR(S_AXI_GP1_AWADDR),
        .SAXIGP1AWBURST(S_AXI_GP1_AWBURST),
        .SAXIGP1AWCACHE(S_AXI_GP1_AWCACHE),
        .SAXIGP1AWID(S_AXI_GP1_AWID),
        .SAXIGP1AWLEN(S_AXI_GP1_AWLEN),
        .SAXIGP1AWLOCK(S_AXI_GP1_AWLOCK),
        .SAXIGP1AWPROT(S_AXI_GP1_AWPROT),
        .SAXIGP1AWQOS(S_AXI_GP1_AWQOS),
        .SAXIGP1AWREADY(NLW_PS7_i_SAXIGP1AWREADY_UNCONNECTED),
        .SAXIGP1AWSIZE(S_AXI_GP1_AWSIZE[1:0]),
        .SAXIGP1AWVALID(S_AXI_GP1_AWVALID),
        .SAXIGP1BID(NLW_PS7_i_SAXIGP1BID_UNCONNECTED[5:0]),
        .SAXIGP1BREADY(S_AXI_GP1_BREADY),
        .SAXIGP1BRESP(NLW_PS7_i_SAXIGP1BRESP_UNCONNECTED[1:0]),
        .SAXIGP1BVALID(NLW_PS7_i_SAXIGP1BVALID_UNCONNECTED),
        .SAXIGP1RDATA(NLW_PS7_i_SAXIGP1RDATA_UNCONNECTED[31:0]),
        .SAXIGP1RID(NLW_PS7_i_SAXIGP1RID_UNCONNECTED[5:0]),
        .SAXIGP1RLAST(NLW_PS7_i_SAXIGP1RLAST_UNCONNECTED),
        .SAXIGP1RREADY(S_AXI_GP1_RREADY),
        .SAXIGP1RRESP(NLW_PS7_i_SAXIGP1RRESP_UNCONNECTED[1:0]),
        .SAXIGP1RVALID(NLW_PS7_i_SAXIGP1RVALID_UNCONNECTED),
        .SAXIGP1WDATA(S_AXI_GP1_WDATA),
        .SAXIGP1WID(S_AXI_GP1_WID),
        .SAXIGP1WLAST(S_AXI_GP1_WLAST),
        .SAXIGP1WREADY(NLW_PS7_i_SAXIGP1WREADY_UNCONNECTED),
        .SAXIGP1WSTRB(S_AXI_GP1_WSTRB),
        .SAXIGP1WVALID(S_AXI_GP1_WVALID),
        .SAXIHP0ACLK(S_AXI_HP0_ACLK),
        .SAXIHP0ARADDR(S_AXI_HP0_ARADDR),
        .SAXIHP0ARBURST(S_AXI_HP0_ARBURST),
        .SAXIHP0ARCACHE(S_AXI_HP0_ARCACHE),
        .SAXIHP0ARESETN(NLW_PS7_i_SAXIHP0ARESETN_UNCONNECTED),
        .SAXIHP0ARID(S_AXI_HP0_ARID),
        .SAXIHP0ARLEN(S_AXI_HP0_ARLEN),
        .SAXIHP0ARLOCK(S_AXI_HP0_ARLOCK),
        .SAXIHP0ARPROT(S_AXI_HP0_ARPROT),
        .SAXIHP0ARQOS(S_AXI_HP0_ARQOS),
        .SAXIHP0ARREADY(NLW_PS7_i_SAXIHP0ARREADY_UNCONNECTED),
        .SAXIHP0ARSIZE(S_AXI_HP0_ARSIZE[1:0]),
        .SAXIHP0ARVALID(S_AXI_HP0_ARVALID),
        .SAXIHP0AWADDR(S_AXI_HP0_AWADDR),
        .SAXIHP0AWBURST(S_AXI_HP0_AWBURST),
        .SAXIHP0AWCACHE(S_AXI_HP0_AWCACHE),
        .SAXIHP0AWID(S_AXI_HP0_AWID),
        .SAXIHP0AWLEN(S_AXI_HP0_AWLEN),
        .SAXIHP0AWLOCK(S_AXI_HP0_AWLOCK),
        .SAXIHP0AWPROT(S_AXI_HP0_AWPROT),
        .SAXIHP0AWQOS(S_AXI_HP0_AWQOS),
        .SAXIHP0AWREADY(NLW_PS7_i_SAXIHP0AWREADY_UNCONNECTED),
        .SAXIHP0AWSIZE(S_AXI_HP0_AWSIZE[1:0]),
        .SAXIHP0AWVALID(S_AXI_HP0_AWVALID),
        .SAXIHP0BID(NLW_PS7_i_SAXIHP0BID_UNCONNECTED[5:0]),
        .SAXIHP0BREADY(S_AXI_HP0_BREADY),
        .SAXIHP0BRESP(NLW_PS7_i_SAXIHP0BRESP_UNCONNECTED[1:0]),
        .SAXIHP0BVALID(NLW_PS7_i_SAXIHP0BVALID_UNCONNECTED),
        .SAXIHP0RACOUNT(NLW_PS7_i_SAXIHP0RACOUNT_UNCONNECTED[2:0]),
        .SAXIHP0RCOUNT(NLW_PS7_i_SAXIHP0RCOUNT_UNCONNECTED[7:0]),
        .SAXIHP0RDATA(NLW_PS7_i_SAXIHP0RDATA_UNCONNECTED[63:0]),
        .SAXIHP0RDISSUECAP1EN(S_AXI_HP0_RDISSUECAP1_EN),
        .SAXIHP0RID(NLW_PS7_i_SAXIHP0RID_UNCONNECTED[5:0]),
        .SAXIHP0RLAST(NLW_PS7_i_SAXIHP0RLAST_UNCONNECTED),
        .SAXIHP0RREADY(S_AXI_HP0_RREADY),
        .SAXIHP0RRESP(NLW_PS7_i_SAXIHP0RRESP_UNCONNECTED[1:0]),
        .SAXIHP0RVALID(NLW_PS7_i_SAXIHP0RVALID_UNCONNECTED),
        .SAXIHP0WACOUNT(NLW_PS7_i_SAXIHP0WACOUNT_UNCONNECTED[5:0]),
        .SAXIHP0WCOUNT(NLW_PS7_i_SAXIHP0WCOUNT_UNCONNECTED[7:0]),
        .SAXIHP0WDATA(S_AXI_HP0_WDATA),
        .SAXIHP0WID(S_AXI_HP0_WID),
        .SAXIHP0WLAST(S_AXI_HP0_WLAST),
        .SAXIHP0WREADY(NLW_PS7_i_SAXIHP0WREADY_UNCONNECTED),
        .SAXIHP0WRISSUECAP1EN(S_AXI_HP0_WRISSUECAP1_EN),
        .SAXIHP0WSTRB(S_AXI_HP0_WSTRB),
        .SAXIHP0WVALID(S_AXI_HP0_WVALID),
        .SAXIHP1ACLK(S_AXI_HP1_ACLK),
        .SAXIHP1ARADDR(S_AXI_HP1_ARADDR),
        .SAXIHP1ARBURST(S_AXI_HP1_ARBURST),
        .SAXIHP1ARCACHE(S_AXI_HP1_ARCACHE),
        .SAXIHP1ARESETN(NLW_PS7_i_SAXIHP1ARESETN_UNCONNECTED),
        .SAXIHP1ARID(S_AXI_HP1_ARID),
        .SAXIHP1ARLEN(S_AXI_HP1_ARLEN),
        .SAXIHP1ARLOCK(S_AXI_HP1_ARLOCK),
        .SAXIHP1ARPROT(S_AXI_HP1_ARPROT),
        .SAXIHP1ARQOS(S_AXI_HP1_ARQOS),
        .SAXIHP1ARREADY(NLW_PS7_i_SAXIHP1ARREADY_UNCONNECTED),
        .SAXIHP1ARSIZE(S_AXI_HP1_ARSIZE[1:0]),
        .SAXIHP1ARVALID(S_AXI_HP1_ARVALID),
        .SAXIHP1AWADDR(S_AXI_HP1_AWADDR),
        .SAXIHP1AWBURST(S_AXI_HP1_AWBURST),
        .SAXIHP1AWCACHE(S_AXI_HP1_AWCACHE),
        .SAXIHP1AWID(S_AXI_HP1_AWID),
        .SAXIHP1AWLEN(S_AXI_HP1_AWLEN),
        .SAXIHP1AWLOCK(S_AXI_HP1_AWLOCK),
        .SAXIHP1AWPROT(S_AXI_HP1_AWPROT),
        .SAXIHP1AWQOS(S_AXI_HP1_AWQOS),
        .SAXIHP1AWREADY(NLW_PS7_i_SAXIHP1AWREADY_UNCONNECTED),
        .SAXIHP1AWSIZE(S_AXI_HP1_AWSIZE[1:0]),
        .SAXIHP1AWVALID(S_AXI_HP1_AWVALID),
        .SAXIHP1BID(NLW_PS7_i_SAXIHP1BID_UNCONNECTED[5:0]),
        .SAXIHP1BREADY(S_AXI_HP1_BREADY),
        .SAXIHP1BRESP(NLW_PS7_i_SAXIHP1BRESP_UNCONNECTED[1:0]),
        .SAXIHP1BVALID(NLW_PS7_i_SAXIHP1BVALID_UNCONNECTED),
        .SAXIHP1RACOUNT(NLW_PS7_i_SAXIHP1RACOUNT_UNCONNECTED[2:0]),
        .SAXIHP1RCOUNT(NLW_PS7_i_SAXIHP1RCOUNT_UNCONNECTED[7:0]),
        .SAXIHP1RDATA(NLW_PS7_i_SAXIHP1RDATA_UNCONNECTED[63:0]),
        .SAXIHP1RDISSUECAP1EN(S_AXI_HP1_RDISSUECAP1_EN),
        .SAXIHP1RID(NLW_PS7_i_SAXIHP1RID_UNCONNECTED[5:0]),
        .SAXIHP1RLAST(NLW_PS7_i_SAXIHP1RLAST_UNCONNECTED),
        .SAXIHP1RREADY(S_AXI_HP1_RREADY),
        .SAXIHP1RRESP(NLW_PS7_i_SAXIHP1RRESP_UNCONNECTED[1:0]),
        .SAXIHP1RVALID(NLW_PS7_i_SAXIHP1RVALID_UNCONNECTED),
        .SAXIHP1WACOUNT(NLW_PS7_i_SAXIHP1WACOUNT_UNCONNECTED[5:0]),
        .SAXIHP1WCOUNT(NLW_PS7_i_SAXIHP1WCOUNT_UNCONNECTED[7:0]),
        .SAXIHP1WDATA(S_AXI_HP1_WDATA),
        .SAXIHP1WID(S_AXI_HP1_WID),
        .SAXIHP1WLAST(S_AXI_HP1_WLAST),
        .SAXIHP1WREADY(NLW_PS7_i_SAXIHP1WREADY_UNCONNECTED),
        .SAXIHP1WRISSUECAP1EN(S_AXI_HP1_WRISSUECAP1_EN),
        .SAXIHP1WSTRB(S_AXI_HP1_WSTRB),
        .SAXIHP1WVALID(S_AXI_HP1_WVALID),
        .SAXIHP2ACLK(S_AXI_HP2_ACLK),
        .SAXIHP2ARADDR(S_AXI_HP2_ARADDR),
        .SAXIHP2ARBURST(S_AXI_HP2_ARBURST),
        .SAXIHP2ARCACHE(S_AXI_HP2_ARCACHE),
        .SAXIHP2ARESETN(NLW_PS7_i_SAXIHP2ARESETN_UNCONNECTED),
        .SAXIHP2ARID(S_AXI_HP2_ARID),
        .SAXIHP2ARLEN(S_AXI_HP2_ARLEN),
        .SAXIHP2ARLOCK(S_AXI_HP2_ARLOCK),
        .SAXIHP2ARPROT(S_AXI_HP2_ARPROT),
        .SAXIHP2ARQOS(S_AXI_HP2_ARQOS),
        .SAXIHP2ARREADY(NLW_PS7_i_SAXIHP2ARREADY_UNCONNECTED),
        .SAXIHP2ARSIZE(S_AXI_HP2_ARSIZE[1:0]),
        .SAXIHP2ARVALID(S_AXI_HP2_ARVALID),
        .SAXIHP2AWADDR(S_AXI_HP2_AWADDR),
        .SAXIHP2AWBURST(S_AXI_HP2_AWBURST),
        .SAXIHP2AWCACHE(S_AXI_HP2_AWCACHE),
        .SAXIHP2AWID(S_AXI_HP2_AWID),
        .SAXIHP2AWLEN(S_AXI_HP2_AWLEN),
        .SAXIHP2AWLOCK(S_AXI_HP2_AWLOCK),
        .SAXIHP2AWPROT(S_AXI_HP2_AWPROT),
        .SAXIHP2AWQOS(S_AXI_HP2_AWQOS),
        .SAXIHP2AWREADY(NLW_PS7_i_SAXIHP2AWREADY_UNCONNECTED),
        .SAXIHP2AWSIZE(S_AXI_HP2_AWSIZE[1:0]),
        .SAXIHP2AWVALID(S_AXI_HP2_AWVALID),
        .SAXIHP2BID(NLW_PS7_i_SAXIHP2BID_UNCONNECTED[5:0]),
        .SAXIHP2BREADY(S_AXI_HP2_BREADY),
        .SAXIHP2BRESP(NLW_PS7_i_SAXIHP2BRESP_UNCONNECTED[1:0]),
        .SAXIHP2BVALID(NLW_PS7_i_SAXIHP2BVALID_UNCONNECTED),
        .SAXIHP2RACOUNT(NLW_PS7_i_SAXIHP2RACOUNT_UNCONNECTED[2:0]),
        .SAXIHP2RCOUNT(NLW_PS7_i_SAXIHP2RCOUNT_UNCONNECTED[7:0]),
        .SAXIHP2RDATA(NLW_PS7_i_SAXIHP2RDATA_UNCONNECTED[63:0]),
        .SAXIHP2RDISSUECAP1EN(S_AXI_HP2_RDISSUECAP1_EN),
        .SAXIHP2RID(NLW_PS7_i_SAXIHP2RID_UNCONNECTED[5:0]),
        .SAXIHP2RLAST(NLW_PS7_i_SAXIHP2RLAST_UNCONNECTED),
        .SAXIHP2RREADY(S_AXI_HP2_RREADY),
        .SAXIHP2RRESP(NLW_PS7_i_SAXIHP2RRESP_UNCONNECTED[1:0]),
        .SAXIHP2RVALID(NLW_PS7_i_SAXIHP2RVALID_UNCONNECTED),
        .SAXIHP2WACOUNT(NLW_PS7_i_SAXIHP2WACOUNT_UNCONNECTED[5:0]),
        .SAXIHP2WCOUNT(NLW_PS7_i_SAXIHP2WCOUNT_UNCONNECTED[7:0]),
        .SAXIHP2WDATA(S_AXI_HP2_WDATA),
        .SAXIHP2WID(S_AXI_HP2_WID),
        .SAXIHP2WLAST(S_AXI_HP2_WLAST),
        .SAXIHP2WREADY(NLW_PS7_i_SAXIHP2WREADY_UNCONNECTED),
        .SAXIHP2WRISSUECAP1EN(S_AXI_HP2_WRISSUECAP1_EN),
        .SAXIHP2WSTRB(S_AXI_HP2_WSTRB),
        .SAXIHP2WVALID(S_AXI_HP2_WVALID),
        .SAXIHP3ACLK(S_AXI_HP3_ACLK),
        .SAXIHP3ARADDR(S_AXI_HP3_ARADDR),
        .SAXIHP3ARBURST(S_AXI_HP3_ARBURST),
        .SAXIHP3ARCACHE(S_AXI_HP3_ARCACHE),
        .SAXIHP3ARESETN(NLW_PS7_i_SAXIHP3ARESETN_UNCONNECTED),
        .SAXIHP3ARID(S_AXI_HP3_ARID),
        .SAXIHP3ARLEN(S_AXI_HP3_ARLEN),
        .SAXIHP3ARLOCK(S_AXI_HP3_ARLOCK),
        .SAXIHP3ARPROT(S_AXI_HP3_ARPROT),
        .SAXIHP3ARQOS(S_AXI_HP3_ARQOS),
        .SAXIHP3ARREADY(NLW_PS7_i_SAXIHP3ARREADY_UNCONNECTED),
        .SAXIHP3ARSIZE(S_AXI_HP3_ARSIZE[1:0]),
        .SAXIHP3ARVALID(S_AXI_HP3_ARVALID),
        .SAXIHP3AWADDR(S_AXI_HP3_AWADDR),
        .SAXIHP3AWBURST(S_AXI_HP3_AWBURST),
        .SAXIHP3AWCACHE(S_AXI_HP3_AWCACHE),
        .SAXIHP3AWID(S_AXI_HP3_AWID),
        .SAXIHP3AWLEN(S_AXI_HP3_AWLEN),
        .SAXIHP3AWLOCK(S_AXI_HP3_AWLOCK),
        .SAXIHP3AWPROT(S_AXI_HP3_AWPROT),
        .SAXIHP3AWQOS(S_AXI_HP3_AWQOS),
        .SAXIHP3AWREADY(NLW_PS7_i_SAXIHP3AWREADY_UNCONNECTED),
        .SAXIHP3AWSIZE(S_AXI_HP3_AWSIZE[1:0]),
        .SAXIHP3AWVALID(S_AXI_HP3_AWVALID),
        .SAXIHP3BID(NLW_PS7_i_SAXIHP3BID_UNCONNECTED[5:0]),
        .SAXIHP3BREADY(S_AXI_HP3_BREADY),
        .SAXIHP3BRESP(NLW_PS7_i_SAXIHP3BRESP_UNCONNECTED[1:0]),
        .SAXIHP3BVALID(NLW_PS7_i_SAXIHP3BVALID_UNCONNECTED),
        .SAXIHP3RACOUNT(NLW_PS7_i_SAXIHP3RACOUNT_UNCONNECTED[2:0]),
        .SAXIHP3RCOUNT(NLW_PS7_i_SAXIHP3RCOUNT_UNCONNECTED[7:0]),
        .SAXIHP3RDATA(NLW_PS7_i_SAXIHP3RDATA_UNCONNECTED[63:0]),
        .SAXIHP3RDISSUECAP1EN(S_AXI_HP3_RDISSUECAP1_EN),
        .SAXIHP3RID(NLW_PS7_i_SAXIHP3RID_UNCONNECTED[5:0]),
        .SAXIHP3RLAST(NLW_PS7_i_SAXIHP3RLAST_UNCONNECTED),
        .SAXIHP3RREADY(S_AXI_HP3_RREADY),
        .SAXIHP3RRESP(NLW_PS7_i_SAXIHP3RRESP_UNCONNECTED[1:0]),
        .SAXIHP3RVALID(NLW_PS7_i_SAXIHP3RVALID_UNCONNECTED),
        .SAXIHP3WACOUNT(NLW_PS7_i_SAXIHP3WACOUNT_UNCONNECTED[5:0]),
        .SAXIHP3WCOUNT(NLW_PS7_i_SAXIHP3WCOUNT_UNCONNECTED[7:0]),
        .SAXIHP3WDATA(S_AXI_HP3_WDATA),
        .SAXIHP3WID(S_AXI_HP3_WID),
        .SAXIHP3WLAST(S_AXI_HP3_WLAST),
        .SAXIHP3WREADY(NLW_PS7_i_SAXIHP3WREADY_UNCONNECTED),
        .SAXIHP3WRISSUECAP1EN(S_AXI_HP3_WRISSUECAP1_EN),
        .SAXIHP3WSTRB(S_AXI_HP3_WSTRB),
        .SAXIHP3WVALID(S_AXI_HP3_WVALID));
  (* box_type = "PRIMITIVE" *) 
  BIBUF PS_CLK_BIBUF
       (.IO(buffered_PS_CLK),
        .PAD(PS_CLK));
  (* box_type = "PRIMITIVE" *) 
  BIBUF PS_PORB_BIBUF
       (.IO(buffered_PS_PORB),
        .PAD(PS_PORB));
  (* box_type = "PRIMITIVE" *) 
  BIBUF PS_SRSTB_BIBUF
       (.IO(buffered_PS_SRSTB),
        .PAD(PS_SRSTB));
  (* box_type = "PRIMITIVE" *) 
  BUFG \buffer_fclk_clk_0.FCLK_CLK_0_BUFG 
       (.I(FCLK_CLK_unbuffered),
        .O(FCLK_CLK0));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[0].MIO_BIBUF 
       (.IO(buffered_MIO[0]),
        .PAD(MIO[0]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[10].MIO_BIBUF 
       (.IO(buffered_MIO[10]),
        .PAD(MIO[10]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[11].MIO_BIBUF 
       (.IO(buffered_MIO[11]),
        .PAD(MIO[11]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[12].MIO_BIBUF 
       (.IO(buffered_MIO[12]),
        .PAD(MIO[12]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[13].MIO_BIBUF 
       (.IO(buffered_MIO[13]),
        .PAD(MIO[13]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[14].MIO_BIBUF 
       (.IO(buffered_MIO[14]),
        .PAD(MIO[14]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[15].MIO_BIBUF 
       (.IO(buffered_MIO[15]),
        .PAD(MIO[15]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[16].MIO_BIBUF 
       (.IO(buffered_MIO[16]),
        .PAD(MIO[16]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[17].MIO_BIBUF 
       (.IO(buffered_MIO[17]),
        .PAD(MIO[17]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[18].MIO_BIBUF 
       (.IO(buffered_MIO[18]),
        .PAD(MIO[18]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[19].MIO_BIBUF 
       (.IO(buffered_MIO[19]),
        .PAD(MIO[19]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[1].MIO_BIBUF 
       (.IO(buffered_MIO[1]),
        .PAD(MIO[1]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[20].MIO_BIBUF 
       (.IO(buffered_MIO[20]),
        .PAD(MIO[20]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[21].MIO_BIBUF 
       (.IO(buffered_MIO[21]),
        .PAD(MIO[21]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[22].MIO_BIBUF 
       (.IO(buffered_MIO[22]),
        .PAD(MIO[22]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[23].MIO_BIBUF 
       (.IO(buffered_MIO[23]),
        .PAD(MIO[23]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[24].MIO_BIBUF 
       (.IO(buffered_MIO[24]),
        .PAD(MIO[24]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[25].MIO_BIBUF 
       (.IO(buffered_MIO[25]),
        .PAD(MIO[25]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[26].MIO_BIBUF 
       (.IO(buffered_MIO[26]),
        .PAD(MIO[26]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[27].MIO_BIBUF 
       (.IO(buffered_MIO[27]),
        .PAD(MIO[27]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[28].MIO_BIBUF 
       (.IO(buffered_MIO[28]),
        .PAD(MIO[28]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[29].MIO_BIBUF 
       (.IO(buffered_MIO[29]),
        .PAD(MIO[29]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[2].MIO_BIBUF 
       (.IO(buffered_MIO[2]),
        .PAD(MIO[2]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[30].MIO_BIBUF 
       (.IO(buffered_MIO[30]),
        .PAD(MIO[30]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[31].MIO_BIBUF 
       (.IO(buffered_MIO[31]),
        .PAD(MIO[31]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[32].MIO_BIBUF 
       (.IO(buffered_MIO[32]),
        .PAD(MIO[32]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[33].MIO_BIBUF 
       (.IO(buffered_MIO[33]),
        .PAD(MIO[33]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[34].MIO_BIBUF 
       (.IO(buffered_MIO[34]),
        .PAD(MIO[34]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[35].MIO_BIBUF 
       (.IO(buffered_MIO[35]),
        .PAD(MIO[35]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[36].MIO_BIBUF 
       (.IO(buffered_MIO[36]),
        .PAD(MIO[36]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[37].MIO_BIBUF 
       (.IO(buffered_MIO[37]),
        .PAD(MIO[37]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[38].MIO_BIBUF 
       (.IO(buffered_MIO[38]),
        .PAD(MIO[38]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[39].MIO_BIBUF 
       (.IO(buffered_MIO[39]),
        .PAD(MIO[39]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[3].MIO_BIBUF 
       (.IO(buffered_MIO[3]),
        .PAD(MIO[3]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[40].MIO_BIBUF 
       (.IO(buffered_MIO[40]),
        .PAD(MIO[40]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[41].MIO_BIBUF 
       (.IO(buffered_MIO[41]),
        .PAD(MIO[41]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[42].MIO_BIBUF 
       (.IO(buffered_MIO[42]),
        .PAD(MIO[42]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[43].MIO_BIBUF 
       (.IO(buffered_MIO[43]),
        .PAD(MIO[43]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[44].MIO_BIBUF 
       (.IO(buffered_MIO[44]),
        .PAD(MIO[44]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[45].MIO_BIBUF 
       (.IO(buffered_MIO[45]),
        .PAD(MIO[45]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[46].MIO_BIBUF 
       (.IO(buffered_MIO[46]),
        .PAD(MIO[46]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[47].MIO_BIBUF 
       (.IO(buffered_MIO[47]),
        .PAD(MIO[47]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[48].MIO_BIBUF 
       (.IO(buffered_MIO[48]),
        .PAD(MIO[48]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[49].MIO_BIBUF 
       (.IO(buffered_MIO[49]),
        .PAD(MIO[49]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[4].MIO_BIBUF 
       (.IO(buffered_MIO[4]),
        .PAD(MIO[4]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[50].MIO_BIBUF 
       (.IO(buffered_MIO[50]),
        .PAD(MIO[50]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[51].MIO_BIBUF 
       (.IO(buffered_MIO[51]),
        .PAD(MIO[51]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[52].MIO_BIBUF 
       (.IO(buffered_MIO[52]),
        .PAD(MIO[52]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[53].MIO_BIBUF 
       (.IO(buffered_MIO[53]),
        .PAD(MIO[53]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[5].MIO_BIBUF 
       (.IO(buffered_MIO[5]),
        .PAD(MIO[5]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[6].MIO_BIBUF 
       (.IO(buffered_MIO[6]),
        .PAD(MIO[6]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[7].MIO_BIBUF 
       (.IO(buffered_MIO[7]),
        .PAD(MIO[7]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[8].MIO_BIBUF 
       (.IO(buffered_MIO[8]),
        .PAD(MIO[8]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk13[9].MIO_BIBUF 
       (.IO(buffered_MIO[9]),
        .PAD(MIO[9]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk14[0].DDR_BankAddr_BIBUF 
       (.IO(buffered_DDR_BankAddr[0]),
        .PAD(DDR_BankAddr[0]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk14[1].DDR_BankAddr_BIBUF 
       (.IO(buffered_DDR_BankAddr[1]),
        .PAD(DDR_BankAddr[1]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk14[2].DDR_BankAddr_BIBUF 
       (.IO(buffered_DDR_BankAddr[2]),
        .PAD(DDR_BankAddr[2]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk15[0].DDR_Addr_BIBUF 
       (.IO(buffered_DDR_Addr[0]),
        .PAD(DDR_Addr[0]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk15[10].DDR_Addr_BIBUF 
       (.IO(buffered_DDR_Addr[10]),
        .PAD(DDR_Addr[10]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk15[11].DDR_Addr_BIBUF 
       (.IO(buffered_DDR_Addr[11]),
        .PAD(DDR_Addr[11]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk15[12].DDR_Addr_BIBUF 
       (.IO(buffered_DDR_Addr[12]),
        .PAD(DDR_Addr[12]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk15[13].DDR_Addr_BIBUF 
       (.IO(buffered_DDR_Addr[13]),
        .PAD(DDR_Addr[13]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk15[14].DDR_Addr_BIBUF 
       (.IO(buffered_DDR_Addr[14]),
        .PAD(DDR_Addr[14]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk15[1].DDR_Addr_BIBUF 
       (.IO(buffered_DDR_Addr[1]),
        .PAD(DDR_Addr[1]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk15[2].DDR_Addr_BIBUF 
       (.IO(buffered_DDR_Addr[2]),
        .PAD(DDR_Addr[2]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk15[3].DDR_Addr_BIBUF 
       (.IO(buffered_DDR_Addr[3]),
        .PAD(DDR_Addr[3]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk15[4].DDR_Addr_BIBUF 
       (.IO(buffered_DDR_Addr[4]),
        .PAD(DDR_Addr[4]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk15[5].DDR_Addr_BIBUF 
       (.IO(buffered_DDR_Addr[5]),
        .PAD(DDR_Addr[5]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk15[6].DDR_Addr_BIBUF 
       (.IO(buffered_DDR_Addr[6]),
        .PAD(DDR_Addr[6]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk15[7].DDR_Addr_BIBUF 
       (.IO(buffered_DDR_Addr[7]),
        .PAD(DDR_Addr[7]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk15[8].DDR_Addr_BIBUF 
       (.IO(buffered_DDR_Addr[8]),
        .PAD(DDR_Addr[8]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk15[9].DDR_Addr_BIBUF 
       (.IO(buffered_DDR_Addr[9]),
        .PAD(DDR_Addr[9]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk16[0].DDR_DM_BIBUF 
       (.IO(buffered_DDR_DM[0]),
        .PAD(DDR_DM[0]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk16[1].DDR_DM_BIBUF 
       (.IO(buffered_DDR_DM[1]),
        .PAD(DDR_DM[1]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk16[2].DDR_DM_BIBUF 
       (.IO(buffered_DDR_DM[2]),
        .PAD(DDR_DM[2]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk16[3].DDR_DM_BIBUF 
       (.IO(buffered_DDR_DM[3]),
        .PAD(DDR_DM[3]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[0].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[0]),
        .PAD(DDR_DQ[0]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[10].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[10]),
        .PAD(DDR_DQ[10]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[11].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[11]),
        .PAD(DDR_DQ[11]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[12].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[12]),
        .PAD(DDR_DQ[12]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[13].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[13]),
        .PAD(DDR_DQ[13]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[14].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[14]),
        .PAD(DDR_DQ[14]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[15].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[15]),
        .PAD(DDR_DQ[15]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[16].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[16]),
        .PAD(DDR_DQ[16]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[17].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[17]),
        .PAD(DDR_DQ[17]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[18].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[18]),
        .PAD(DDR_DQ[18]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[19].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[19]),
        .PAD(DDR_DQ[19]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[1].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[1]),
        .PAD(DDR_DQ[1]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[20].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[20]),
        .PAD(DDR_DQ[20]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[21].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[21]),
        .PAD(DDR_DQ[21]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[22].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[22]),
        .PAD(DDR_DQ[22]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[23].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[23]),
        .PAD(DDR_DQ[23]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[24].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[24]),
        .PAD(DDR_DQ[24]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[25].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[25]),
        .PAD(DDR_DQ[25]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[26].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[26]),
        .PAD(DDR_DQ[26]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[27].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[27]),
        .PAD(DDR_DQ[27]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[28].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[28]),
        .PAD(DDR_DQ[28]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[29].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[29]),
        .PAD(DDR_DQ[29]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[2].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[2]),
        .PAD(DDR_DQ[2]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[30].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[30]),
        .PAD(DDR_DQ[30]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[31].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[31]),
        .PAD(DDR_DQ[31]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[3].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[3]),
        .PAD(DDR_DQ[3]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[4].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[4]),
        .PAD(DDR_DQ[4]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[5].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[5]),
        .PAD(DDR_DQ[5]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[6].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[6]),
        .PAD(DDR_DQ[6]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[7].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[7]),
        .PAD(DDR_DQ[7]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[8].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[8]),
        .PAD(DDR_DQ[8]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk17[9].DDR_DQ_BIBUF 
       (.IO(buffered_DDR_DQ[9]),
        .PAD(DDR_DQ[9]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk18[0].DDR_DQS_n_BIBUF 
       (.IO(buffered_DDR_DQS_n[0]),
        .PAD(DDR_DQS_n[0]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk18[1].DDR_DQS_n_BIBUF 
       (.IO(buffered_DDR_DQS_n[1]),
        .PAD(DDR_DQS_n[1]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk18[2].DDR_DQS_n_BIBUF 
       (.IO(buffered_DDR_DQS_n[2]),
        .PAD(DDR_DQS_n[2]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk18[3].DDR_DQS_n_BIBUF 
       (.IO(buffered_DDR_DQS_n[3]),
        .PAD(DDR_DQS_n[3]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk19[0].DDR_DQS_BIBUF 
       (.IO(buffered_DDR_DQS[0]),
        .PAD(DDR_DQS[0]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk19[1].DDR_DQS_BIBUF 
       (.IO(buffered_DDR_DQS[1]),
        .PAD(DDR_DQS[1]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk19[2].DDR_DQS_BIBUF 
       (.IO(buffered_DDR_DQS[2]),
        .PAD(DDR_DQS[2]));
  (* box_type = "PRIMITIVE" *) 
  BIBUF \genblk19[3].DDR_DQS_BIBUF 
       (.IO(buffered_DDR_DQS[3]),
        .PAD(DDR_DQS[3]));
endmodule

(* CHECK_LICENSE_TYPE = "design_1_rst_ps7_0_100M_0,proc_sys_reset,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "proc_sys_reset,Vivado 2019.2" *) 
module design_1_rst_ps7_0_100M_0
   (slowest_sync_clk,
    ext_reset_in,
    aux_reset_in,
    mb_debug_sys_rst,
    dcm_locked,
    mb_reset,
    bus_struct_reset,
    peripheral_reset,
    interconnect_aresetn,
    peripheral_aresetn);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 clock CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME clock, ASSOCIATED_RESET mb_reset:bus_struct_reset:interconnect_aresetn:peripheral_aresetn:peripheral_reset, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, INSERT_VIP 0" *) input slowest_sync_clk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 ext_reset RST" *) (* x_interface_parameter = "XIL_INTERFACENAME ext_reset, BOARD.ASSOCIATED_PARAM RESET_BOARD_INTERFACE, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input ext_reset_in;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 aux_reset RST" *) (* x_interface_parameter = "XIL_INTERFACENAME aux_reset, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input aux_reset_in;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 dbg_reset RST" *) (* x_interface_parameter = "XIL_INTERFACENAME dbg_reset, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input mb_debug_sys_rst;
  input dcm_locked;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 mb_rst RST" *) (* x_interface_parameter = "XIL_INTERFACENAME mb_rst, POLARITY ACTIVE_HIGH, TYPE PROCESSOR, INSERT_VIP 0" *) output mb_reset;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 bus_struct_reset RST" *) (* x_interface_parameter = "XIL_INTERFACENAME bus_struct_reset, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT, INSERT_VIP 0" *) output [0:0]bus_struct_reset;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 peripheral_high_rst RST" *) (* x_interface_parameter = "XIL_INTERFACENAME peripheral_high_rst, POLARITY ACTIVE_HIGH, TYPE PERIPHERAL, INSERT_VIP 0" *) output [0:0]peripheral_reset;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 interconnect_low_rst RST" *) (* x_interface_parameter = "XIL_INTERFACENAME interconnect_low_rst, POLARITY ACTIVE_LOW, TYPE INTERCONNECT, INSERT_VIP 0" *) output [0:0]interconnect_aresetn;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 peripheral_low_rst RST" *) (* x_interface_parameter = "XIL_INTERFACENAME peripheral_low_rst, POLARITY ACTIVE_LOW, TYPE PERIPHERAL, INSERT_VIP 0" *) output [0:0]peripheral_aresetn;

  wire ext_reset_in;
  wire [0:0]peripheral_aresetn;
  wire slowest_sync_clk;
  wire NLW_U0_aux_reset_in_UNCONNECTED;
  wire NLW_U0_dcm_locked_UNCONNECTED;
  wire NLW_U0_mb_debug_sys_rst_UNCONNECTED;
  wire NLW_U0_mb_reset_UNCONNECTED;
  wire [0:0]NLW_U0_bus_struct_reset_UNCONNECTED;
  wire [0:0]NLW_U0_interconnect_aresetn_UNCONNECTED;
  wire [0:0]NLW_U0_peripheral_reset_UNCONNECTED;

  (* C_AUX_RESET_HIGH = "1'b0" *) 
  (* C_AUX_RST_WIDTH = "4" *) 
  (* C_EXT_RESET_HIGH = "1'b0" *) 
  (* C_EXT_RST_WIDTH = "4" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_NUM_BUS_RST = "1" *) 
  (* C_NUM_INTERCONNECT_ARESETN = "1" *) 
  (* C_NUM_PERP_ARESETN = "1" *) 
  (* C_NUM_PERP_RST = "1" *) 
  design_1_rst_ps7_0_100M_0_proc_sys_reset U0
       (.aux_reset_in(NLW_U0_aux_reset_in_UNCONNECTED),
        .bus_struct_reset(NLW_U0_bus_struct_reset_UNCONNECTED[0]),
        .dcm_locked(NLW_U0_dcm_locked_UNCONNECTED),
        .ext_reset_in(ext_reset_in),
        .interconnect_aresetn(NLW_U0_interconnect_aresetn_UNCONNECTED[0]),
        .mb_debug_sys_rst(NLW_U0_mb_debug_sys_rst_UNCONNECTED),
        .mb_reset(NLW_U0_mb_reset_UNCONNECTED),
        .peripheral_aresetn(peripheral_aresetn),
        .peripheral_reset(NLW_U0_peripheral_reset_UNCONNECTED[0]),
        .slowest_sync_clk(slowest_sync_clk));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module design_1_rst_ps7_0_100M_0_cdc_sync
   (lpf_asr_reg,
    scndry_out,
    lpf_asr,
    p_1_in,
    p_2_in,
    asr_lpf,
    aux_reset_in,
    slowest_sync_clk);
  output lpf_asr_reg;
  output scndry_out;
  input lpf_asr;
  input p_1_in;
  input p_2_in;
  input [0:0]asr_lpf;
  input aux_reset_in;
  input slowest_sync_clk;

  wire [0:0]asr_lpf;
  wire lpf_asr;
  wire lpf_asr_reg;
  wire p_1_in;
  wire p_2_in;
  wire s_level_out_d1_cdc_to;
  wire s_level_out_d2;
  wire s_level_out_d3;
  wire scndry_out;
  wire slowest_sync_clk;

  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(scndry_out),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEAAAAAA8)) 
    lpf_asr_i_1
       (.I0(lpf_asr),
        .I1(p_1_in),
        .I2(p_2_in),
        .I3(scndry_out),
        .I4(asr_lpf),
        .O(lpf_asr_reg));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module design_1_rst_ps7_0_100M_0_cdc_sync_0
   (lpf_exr_reg,
    scndry_out,
    lpf_exr,
    p_1_in4_in,
    p_2_in3_in,
    exr_lpf,
    mb_debug_sys_rst,
    ext_reset_in,
    slowest_sync_clk);
  output lpf_exr_reg;
  output scndry_out;
  input lpf_exr;
  input p_1_in4_in;
  input p_2_in3_in;
  input [0:0]exr_lpf;
  input mb_debug_sys_rst;
  input ext_reset_in;
  input slowest_sync_clk;

  wire exr_d1;
  wire [0:0]exr_lpf;
  wire ext_reset_in;
  wire lpf_exr;
  wire lpf_exr_reg;
  wire p_1_in4_in;
  wire p_2_in3_in;
  wire s_level_out_d1_cdc_to;
  wire s_level_out_d2;
  wire s_level_out_d3;
  wire scndry_out;
  wire slowest_sync_clk;

  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(exr_d1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to_i_1 
       (.I0(ext_reset_in),
        .O(exr_d1));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(scndry_out),
        .R(1'b0));
  (* \PinAttr:I3:HOLD_DETOUR  = "152" *) 
  LUT5 #(
    .INIT(32'hEAAAAAA8)) 
    lpf_exr_i_1
       (.I0(lpf_exr),
        .I1(p_1_in4_in),
        .I2(p_2_in3_in),
        .I3(scndry_out),
        .I4(exr_lpf),
        .O(lpf_exr_reg));
endmodule

(* ORIG_REF_NAME = "lpf" *) 
module design_1_rst_ps7_0_100M_0_lpf
   (lpf_int,
    slowest_sync_clk,
    dcm_locked,
    mb_debug_sys_rst,
    ext_reset_in,
    aux_reset_in);
  output lpf_int;
  input slowest_sync_clk;
  input dcm_locked;
  input mb_debug_sys_rst;
  input ext_reset_in;
  input aux_reset_in;

  wire \ACTIVE_LOW_AUX.ACT_LO_AUX_n_0 ;
  wire \ACTIVE_LOW_EXT.ACT_LO_EXT_n_0 ;
  wire Q;
  wire [0:0]asr_lpf;
  wire [0:0]exr_lpf;
  wire ext_reset_in;
  wire lpf_asr;
  wire lpf_exr;
  wire lpf_int;
  wire lpf_int0__0;
  wire p_1_in;
  wire p_1_in4_in;
  wire p_2_in;
  wire p_2_in3_in;
  wire p_3_in1_in;
  wire p_3_in6_in;
  wire slowest_sync_clk;
  wire \NLW_ACTIVE_LOW_AUX.ACT_LO_AUX_aux_reset_in_UNCONNECTED ;
  wire \NLW_ACTIVE_LOW_EXT.ACT_LO_EXT_mb_debug_sys_rst_UNCONNECTED ;

  design_1_rst_ps7_0_100M_0_cdc_sync \ACTIVE_LOW_AUX.ACT_LO_AUX 
       (.asr_lpf(asr_lpf),
        .aux_reset_in(\NLW_ACTIVE_LOW_AUX.ACT_LO_AUX_aux_reset_in_UNCONNECTED ),
        .lpf_asr(lpf_asr),
        .lpf_asr_reg(\ACTIVE_LOW_AUX.ACT_LO_AUX_n_0 ),
        .p_1_in(p_1_in),
        .p_2_in(p_2_in),
        .scndry_out(p_3_in1_in),
        .slowest_sync_clk(slowest_sync_clk));
  design_1_rst_ps7_0_100M_0_cdc_sync_0 \ACTIVE_LOW_EXT.ACT_LO_EXT 
       (.exr_lpf(exr_lpf),
        .ext_reset_in(ext_reset_in),
        .lpf_exr(lpf_exr),
        .lpf_exr_reg(\ACTIVE_LOW_EXT.ACT_LO_EXT_n_0 ),
        .mb_debug_sys_rst(\NLW_ACTIVE_LOW_EXT.ACT_LO_EXT_mb_debug_sys_rst_UNCONNECTED ),
        .p_1_in4_in(p_1_in4_in),
        .p_2_in3_in(p_2_in3_in),
        .scndry_out(p_3_in6_in),
        .slowest_sync_clk(slowest_sync_clk));
  FDRE #(
    .INIT(1'b0)) 
    \AUX_LPF[1].asr_lpf_reg[1] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_in1_in),
        .Q(p_2_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \AUX_LPF[2].asr_lpf_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_2_in),
        .Q(p_1_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \AUX_LPF[3].asr_lpf_reg[3] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_1_in),
        .Q(asr_lpf),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \EXT_LPF[1].exr_lpf_reg[1] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_in6_in),
        .Q(p_2_in3_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \EXT_LPF[2].exr_lpf_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_2_in3_in),
        .Q(p_1_in4_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \EXT_LPF[3].exr_lpf_reg[3] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_1_in4_in),
        .Q(exr_lpf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRL16" *) 
  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "U0/\EXT_LPF/POR_SRL_I " *) 
  SRL16E #(
    .INIT(16'hFFFF)) 
    POR_SRL_I
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(slowest_sync_clk),
        .D(1'b0),
        .Q(Q));
  FDRE #(
    .INIT(1'b0)) 
    lpf_asr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(\ACTIVE_LOW_AUX.ACT_LO_AUX_n_0 ),
        .Q(lpf_asr),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    lpf_exr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(\ACTIVE_LOW_EXT.ACT_LO_EXT_n_0 ),
        .Q(lpf_exr),
        .R(1'b0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    lpf_int0
       (.I0(lpf_exr),
        .I1(lpf_asr),
        .I2(Q),
        .O(lpf_int0__0));
  FDRE #(
    .INIT(1'b0)) 
    lpf_int_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(lpf_int0__0),
        .Q(lpf_int),
        .R(1'b0));
endmodule

(* C_AUX_RESET_HIGH = "1'b0" *) (* C_AUX_RST_WIDTH = "4" *) (* C_EXT_RESET_HIGH = "1'b0" *) 
(* C_EXT_RST_WIDTH = "4" *) (* C_FAMILY = "zynq" *) (* C_NUM_BUS_RST = "1" *) 
(* C_NUM_INTERCONNECT_ARESETN = "1" *) (* C_NUM_PERP_ARESETN = "1" *) (* C_NUM_PERP_RST = "1" *) 
(* ORIG_REF_NAME = "proc_sys_reset" *) 
module design_1_rst_ps7_0_100M_0_proc_sys_reset
   (slowest_sync_clk,
    ext_reset_in,
    aux_reset_in,
    mb_debug_sys_rst,
    dcm_locked,
    mb_reset,
    bus_struct_reset,
    peripheral_reset,
    interconnect_aresetn,
    peripheral_aresetn);
  input slowest_sync_clk;
  input ext_reset_in;
  input aux_reset_in;
  input mb_debug_sys_rst;
  input dcm_locked;
  output mb_reset;
  output [0:0]bus_struct_reset;
  output [0:0]peripheral_reset;
  output [0:0]interconnect_aresetn;
  output [0:0]peripheral_aresetn;

  wire SEQ_n_4;
  wire ext_reset_in;
  wire lpf_int;
  wire [0:0]peripheral_aresetn;
  wire slowest_sync_clk;
  wire NLW_EXT_LPF_aux_reset_in_UNCONNECTED;
  wire NLW_EXT_LPF_dcm_locked_UNCONNECTED;
  wire NLW_EXT_LPF_mb_debug_sys_rst_UNCONNECTED;
  wire NLW_SEQ_Bsr_out_UNCONNECTED;
  wire NLW_SEQ_MB_out_UNCONNECTED;
  wire NLW_SEQ_Pr_out_UNCONNECTED;
  wire NLW_SEQ_bsr_reg_0_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(SEQ_n_4),
        .Q(peripheral_aresetn),
        .R(1'b0));
  design_1_rst_ps7_0_100M_0_lpf EXT_LPF
       (.aux_reset_in(NLW_EXT_LPF_aux_reset_in_UNCONNECTED),
        .dcm_locked(NLW_EXT_LPF_dcm_locked_UNCONNECTED),
        .ext_reset_in(ext_reset_in),
        .lpf_int(lpf_int),
        .mb_debug_sys_rst(NLW_EXT_LPF_mb_debug_sys_rst_UNCONNECTED),
        .slowest_sync_clk(slowest_sync_clk));
  design_1_rst_ps7_0_100M_0_sequence_psr SEQ
       (.Bsr_out(NLW_SEQ_Bsr_out_UNCONNECTED),
        .MB_out(NLW_SEQ_MB_out_UNCONNECTED),
        .Pr_out(NLW_SEQ_Pr_out_UNCONNECTED),
        .bsr_reg_0(NLW_SEQ_bsr_reg_0_UNCONNECTED),
        .lpf_int(lpf_int),
        .pr_reg_0(SEQ_n_4),
        .slowest_sync_clk(slowest_sync_clk));
endmodule

(* ORIG_REF_NAME = "sequence_psr" *) 
module design_1_rst_ps7_0_100M_0_sequence_psr
   (MB_out,
    Bsr_out,
    Pr_out,
    bsr_reg_0,
    pr_reg_0,
    lpf_int,
    slowest_sync_clk);
  output MB_out;
  output Bsr_out;
  output Pr_out;
  output bsr_reg_0;
  output pr_reg_0;
  input lpf_int;
  input slowest_sync_clk;

  wire Core_i_1_n_0;
  wire \^MB_out ;
  wire \^Pr_out ;
  wire \core_dec[0]_i_1_n_0 ;
  wire \core_dec[2]_i_1_n_0 ;
  wire \core_dec_reg_n_0_[0] ;
  wire \core_dec_reg_n_0_[1] ;
  wire from_sys_i_1_n_0;
  wire lpf_int;
  wire p_0_in;
  wire [2:0]p_3_out;
  wire pr_dec0__0;
  wire \pr_dec_reg_n_0_[0] ;
  wire \pr_dec_reg_n_0_[2] ;
  wire pr_i_1_n_0;
  wire pr_reg_0;
  wire seq_clr;
  wire [5:0]seq_cnt;
  wire seq_cnt_en;
  wire slowest_sync_clk;

  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N_i_1 
       (.I0(\^Pr_out ),
        .O(pr_reg_0));
  (* \PinAttr:I0:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h2)) 
    Core_i_1
       (.I0(\^MB_out ),
        .I1(p_0_in),
        .O(Core_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    Core_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(Core_i_1_n_0),
        .Q(\^MB_out ),
        .S(lpf_int));
  design_1_rst_ps7_0_100M_0_upcnt_n SEQ_COUNTER
       (.Q(seq_cnt),
        .seq_clr(seq_clr),
        .seq_cnt_en(seq_cnt_en),
        .slowest_sync_clk(slowest_sync_clk));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h9000)) 
    \core_dec[0]_i_1 
       (.I0(seq_cnt_en),
        .I1(seq_cnt[4]),
        .I2(seq_cnt[3]),
        .I3(seq_cnt[5]),
        .O(\core_dec[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \core_dec[2]_i_1 
       (.I0(\core_dec_reg_n_0_[1] ),
        .I1(\core_dec_reg_n_0_[0] ),
        .O(\core_dec[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \core_dec_reg[0] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(\core_dec[0]_i_1_n_0 ),
        .Q(\core_dec_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \core_dec_reg[1] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(pr_dec0__0),
        .Q(\core_dec_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \core_dec_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(\core_dec[2]_i_1_n_0 ),
        .Q(p_0_in),
        .R(1'b0));
  (* \PinAttr:I0:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h8)) 
    from_sys_i_1
       (.I0(\^MB_out ),
        .I1(seq_cnt_en),
        .O(from_sys_i_1_n_0));
  FDSE #(
    .INIT(1'b0)) 
    from_sys_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(from_sys_i_1_n_0),
        .Q(seq_cnt_en),
        .S(lpf_int));
  LUT4 #(
    .INIT(16'h0018)) 
    pr_dec0
       (.I0(seq_cnt_en),
        .I1(seq_cnt[0]),
        .I2(seq_cnt[2]),
        .I3(seq_cnt[1]),
        .O(pr_dec0__0));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h0480)) 
    \pr_dec[0]_i_1 
       (.I0(seq_cnt_en),
        .I1(seq_cnt[3]),
        .I2(seq_cnt[5]),
        .I3(seq_cnt[4]),
        .O(p_3_out[0]));
  (* \PinAttr:I1:HOLD_DETOUR  = "146" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pr_dec[2]_i_1 
       (.I0(\core_dec_reg_n_0_[1] ),
        .I1(\pr_dec_reg_n_0_[0] ),
        .O(p_3_out[2]));
  FDRE #(
    .INIT(1'b0)) 
    \pr_dec_reg[0] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_out[0]),
        .Q(\pr_dec_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pr_dec_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_out[2]),
        .Q(\pr_dec_reg_n_0_[2] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h2)) 
    pr_i_1
       (.I0(\^Pr_out ),
        .I1(\pr_dec_reg_n_0_[2] ),
        .O(pr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    pr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(pr_i_1_n_0),
        .Q(\^Pr_out ),
        .S(lpf_int));
  FDRE #(
    .INIT(1'b0)) 
    seq_clr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(seq_clr),
        .R(lpf_int));
endmodule

(* ORIG_REF_NAME = "upcnt_n" *) 
module design_1_rst_ps7_0_100M_0_upcnt_n
   (Q,
    seq_clr,
    seq_cnt_en,
    slowest_sync_clk);
  output [5:0]Q;
  input seq_clr;
  input seq_cnt_en;
  input slowest_sync_clk;

  wire [5:0]Q;
  wire clear;
  wire [5:0]q_int0;
  wire seq_clr;
  wire seq_cnt_en;
  wire slowest_sync_clk;

  LUT1 #(
    .INIT(2'h1)) 
    \q_int[0]_i_1 
       (.I0(Q[0]),
        .O(q_int0[0]));
  (* \PinAttr:I1:HOLD_DETOUR  = "188" *) 
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \q_int[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(q_int0[1]));
  (* \PinAttr:I1:HOLD_DETOUR  = "188" *) 
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \q_int[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(q_int0[2]));
  (* \PinAttr:I0:HOLD_DETOUR  = "194" *) 
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \q_int[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(q_int0[3]));
  (* \PinAttr:I2:HOLD_DETOUR  = "194" *) 
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \q_int[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(q_int0[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \q_int[5]_i_1 
       (.I0(seq_clr),
        .O(clear));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \q_int[5]_i_2 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(Q[5]),
        .O(q_int0[5]));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[0] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[0]),
        .Q(Q[0]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[1] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[1]),
        .Q(Q[1]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[2] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[2]),
        .Q(Q[2]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[3] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[3]),
        .Q(Q[3]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[4] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[4]),
        .Q(Q[4]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[5] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[5]),
        .Q(Q[5]),
        .R(clear));
endmodule

(* CHECK_LICENSE_TYPE = "design_1_top_nqueens_0_0,top_nqueens,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "top_nqueens,Vivado 2019.2" *) 
(* ip_definition_source = "module_ref" *) 
module design_1_top_nqueens_0_0
   (clk,
    nRst,
    flag,
    done,
    counter);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME clk, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, INSERT_VIP 0" *) input clk;
  input nRst;
  output flag;
  output done;
  output [10:0]counter;

  wire clk;
  wire [10:0]counter;
  wire done;
  wire nRst;
  wire NLW_U0_flag_UNCONNECTED;

  design_1_top_nqueens_0_0_top_nqueens U0
       (.clk(clk),
        .counter(counter[10:1]),
        .done(done),
        .flag(NLW_U0_flag_UNCONNECTED),
        .nRst(nRst));
endmodule

(* ORIG_REF_NAME = "ctrl_logic" *) 
module design_1_top_nqueens_0_0_ctrl_logic
   (valid,
    \j_reg[2]_0 ,
    \j_reg[2]_1 ,
    \j_reg[1]_0 ,
    \j_reg[1]_1 ,
    \j_reg[1]_2 ,
    \j_reg[0]_0 ,
    \count_reg_reg[4] ,
    \j_reg[1]_3 ,
    \j_reg[1]_4 ,
    \j_reg[1]_5 ,
    \j_reg[1]_6 ,
    \FSM_onehot_state_reg[0] ,
    E,
    D,
    S,
    clk,
    AR,
    Q,
    \count_reg[0]_0 ,
    \count_reg[0]_1 ,
    \count_reg[0]_2 ,
    count1_carry__1_0,
    count1_carry__1_1,
    count1_carry_i_4,
    \count[4]_i_5_0 ,
    \count[4]_i_5_1 ,
    \count[4]_i_5_2 ,
    \count[4]_i_5_3 ,
    \count[4]_i_12_0 ,
    \count[4]_i_12_1 ,
    \count[4]_i_7_0 ,
    \count[4]_i_7_1 ,
    count1_carry_i_14,
    count1_carry_i_14_0,
    acks_out_reg,
    done_aux_reg_0);
  output valid;
  output \j_reg[2]_0 ;
  output [2:0]\j_reg[2]_1 ;
  output \j_reg[1]_0 ;
  output \j_reg[1]_1 ;
  output \j_reg[1]_2 ;
  output \j_reg[0]_0 ;
  output \count_reg_reg[4] ;
  output \j_reg[1]_3 ;
  output \j_reg[1]_4 ;
  output \j_reg[1]_5 ;
  output \j_reg[1]_6 ;
  output \FSM_onehot_state_reg[0] ;
  output [0:0]E;
  output [0:0]D;
  input [0:0]S;
  input clk;
  input [0:0]AR;
  input [1:0]Q;
  input [1:0]\count_reg[0]_0 ;
  input \count_reg[0]_1 ;
  input \count_reg[0]_2 ;
  input count1_carry__1_0;
  input count1_carry__1_1;
  input count1_carry_i_4;
  input \count[4]_i_5_0 ;
  input \count[4]_i_5_1 ;
  input \count[4]_i_5_2 ;
  input \count[4]_i_5_3 ;
  input \count[4]_i_12_0 ;
  input \count[4]_i_12_1 ;
  input \count[4]_i_7_0 ;
  input \count[4]_i_7_1 ;
  input count1_carry_i_14;
  input count1_carry_i_14_0;
  input [4:0]acks_out_reg;
  input done_aux_reg_0;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state_reg[0] ;
  wire [1:0]Q;
  wire [0:0]S;
  wire [4:0]acks_out_reg;
  wire clk;
  wire count;
  wire count1;
  wire count1_carry__0_i_1_n_0;
  wire count1_carry__0_i_2_n_0;
  wire count1_carry__0_i_3_n_0;
  wire count1_carry__0_i_4_n_0;
  wire count1_carry__0_n_0;
  wire count1_carry__1_0;
  wire count1_carry__1_1;
  wire count1_carry__1_i_1_n_0;
  wire count1_carry__1_i_2_n_0;
  wire count1_carry__1_i_3_n_0;
  wire count1_carry_i_14;
  wire count1_carry_i_14_0;
  wire count1_carry_i_1_n_0;
  wire count1_carry_i_2_n_0;
  wire count1_carry_i_3_n_0;
  wire count1_carry_i_4;
  wire count1_carry_i_5_n_0;
  wire count1_carry_n_0;
  wire \count[0]_i_1_n_0 ;
  wire \count[4]_i_12_0 ;
  wire \count[4]_i_12_1 ;
  wire \count[4]_i_12_n_0 ;
  wire \count[4]_i_16_n_0 ;
  wire \count[4]_i_20_n_0 ;
  wire \count[4]_i_5_0 ;
  wire \count[4]_i_5_1 ;
  wire \count[4]_i_5_2 ;
  wire \count[4]_i_5_3 ;
  wire \count[4]_i_7_0 ;
  wire \count[4]_i_7_1 ;
  wire \count[4]_i_7_n_0 ;
  wire [4:0]count_reg;
  wire [1:0]\count_reg[0]_0 ;
  wire \count_reg[0]_1 ;
  wire \count_reg[0]_2 ;
  wire \count_reg_reg[4] ;
  wire done;
  wire done_aux_i_1_n_0;
  wire done_aux_i_2_n_0;
  wire done_aux_i_3__0_n_0;
  wire done_aux_reg_0;
  wire j0;
  wire \j[0]_i_1_n_0 ;
  wire [4:3]j_reg;
  wire \j_reg[0]_0 ;
  wire \j_reg[1]_0 ;
  wire \j_reg[1]_1 ;
  wire \j_reg[1]_2 ;
  wire \j_reg[1]_3 ;
  wire \j_reg[1]_4 ;
  wire \j_reg[1]_5 ;
  wire \j_reg[1]_6 ;
  wire \j_reg[2]_0 ;
  wire [2:0]\j_reg[2]_1 ;
  wire [4:1]p_0_in;
  wire [4:1]plusOp;
  wire valid;
  wire valid_aux_i_1_n_0;
  wire valid_aux_i_2_n_0;
  wire [2:0]NLW_count1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry_O_UNCONNECTED;
  wire [2:0]NLW_count1_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_O_UNCONNECTED;

  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(valid),
        .I1(acks_out_reg[2]),
        .O(D));
  LUT5 #(
    .INIT(32'hFFFFFEEE)) 
    \FSM_onehot_state[4]_i_2__7 
       (.I0(acks_out_reg[3]),
        .I1(acks_out_reg[1]),
        .I2(done),
        .I3(acks_out_reg[2]),
        .I4(acks_out_reg[0]),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFEFEFEFEFEFEFE)) 
    acks_out_reg_i_2__0
       (.I0(acks_out_reg[0]),
        .I1(acks_out_reg[4]),
        .I2(acks_out_reg[1]),
        .I3(done),
        .I4(acks_out_reg[2]),
        .I5(valid),
        .O(\FSM_onehot_state_reg[0] ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry
       (.CI(1'b0),
        .CO({count1_carry_n_0,NLW_count1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry_O_UNCONNECTED[3:0]),
        .S({count1_carry_i_1_n_0,count1_carry_i_2_n_0,count1_carry_i_3_n_0,S}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__0
       (.CI(count1_carry_n_0),
        .CO({count1_carry__0_n_0,NLW_count1_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__0_O_UNCONNECTED[3:0]),
        .S({count1_carry__0_i_1_n_0,count1_carry__0_i_2_n_0,count1_carry__0_i_3_n_0,count1_carry__0_i_4_n_0}));
  LUT6 #(
    .INIT(64'h0D0D0D0D0DF20D0D)) 
    count1_carry__0_i_1
       (.I0(j_reg[3]),
        .I1(count1_carry_i_5_n_0),
        .I2(j_reg[4]),
        .I3(\count_reg[0]_2 ),
        .I4(count1_carry__1_0),
        .I5(count1_carry__1_1),
        .O(count1_carry__0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0D0D0D0D0DF20D0D)) 
    count1_carry__0_i_2
       (.I0(j_reg[3]),
        .I1(count1_carry_i_5_n_0),
        .I2(j_reg[4]),
        .I3(\count_reg[0]_2 ),
        .I4(count1_carry__1_0),
        .I5(count1_carry__1_1),
        .O(count1_carry__0_i_2_n_0));
  LUT6 #(
    .INIT(64'h0D0D0D0D0DF20D0D)) 
    count1_carry__0_i_3
       (.I0(j_reg[3]),
        .I1(count1_carry_i_5_n_0),
        .I2(j_reg[4]),
        .I3(\count_reg[0]_2 ),
        .I4(count1_carry__1_0),
        .I5(count1_carry__1_1),
        .O(count1_carry__0_i_3_n_0));
  LUT6 #(
    .INIT(64'h0D0D0D0D0DF20D0D)) 
    count1_carry__0_i_4
       (.I0(j_reg[3]),
        .I1(count1_carry_i_5_n_0),
        .I2(j_reg[4]),
        .I3(\count_reg[0]_2 ),
        .I4(count1_carry__1_0),
        .I5(count1_carry__1_1),
        .O(count1_carry__0_i_4_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__1
       (.CI(count1_carry__0_n_0),
        .CO({NLW_count1_carry__1_CO_UNCONNECTED[3],count1,NLW_count1_carry__1_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,count1_carry__1_i_1_n_0,count1_carry__1_i_2_n_0,count1_carry__1_i_3_n_0}));
  LUT6 #(
    .INIT(64'h4545454545004545)) 
    count1_carry__1_i_1
       (.I0(j_reg[4]),
        .I1(count1_carry_i_5_n_0),
        .I2(j_reg[3]),
        .I3(\count_reg[0]_2 ),
        .I4(count1_carry__1_0),
        .I5(count1_carry__1_1),
        .O(count1_carry__1_i_1_n_0));
  LUT6 #(
    .INIT(64'h0D0D0D0D0DF20D0D)) 
    count1_carry__1_i_2
       (.I0(j_reg[3]),
        .I1(count1_carry_i_5_n_0),
        .I2(j_reg[4]),
        .I3(\count_reg[0]_2 ),
        .I4(count1_carry__1_0),
        .I5(count1_carry__1_1),
        .O(count1_carry__1_i_2_n_0));
  LUT6 #(
    .INIT(64'h0D0D0D0D0DF20D0D)) 
    count1_carry__1_i_3
       (.I0(j_reg[3]),
        .I1(count1_carry_i_5_n_0),
        .I2(j_reg[4]),
        .I3(\count_reg[0]_2 ),
        .I4(count1_carry__1_0),
        .I5(count1_carry__1_1),
        .O(count1_carry__1_i_3_n_0));
  LUT6 #(
    .INIT(64'h0D0D0D0D0DF20D0D)) 
    count1_carry_i_1
       (.I0(j_reg[3]),
        .I1(count1_carry_i_5_n_0),
        .I2(j_reg[4]),
        .I3(\count_reg[0]_2 ),
        .I4(count1_carry__1_0),
        .I5(count1_carry__1_1),
        .O(count1_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    count1_carry_i_11
       (.I0(\j_reg[2]_1 [1]),
        .I1(count1_carry_i_4),
        .O(\j_reg[1]_3 ));
  LUT6 #(
    .INIT(64'hACCACAACCAACCCAA)) 
    count1_carry_i_17
       (.I0(count1_carry_i_14),
        .I1(count1_carry_i_14_0),
        .I2(\j_reg[2]_1 [1]),
        .I3(j_reg[3]),
        .I4(\j_reg[2]_1 [0]),
        .I5(\j_reg[2]_1 [2]),
        .O(\j_reg[1]_4 ));
  LUT6 #(
    .INIT(64'h0D0D0D0D0DF20D0D)) 
    count1_carry_i_2
       (.I0(j_reg[3]),
        .I1(count1_carry_i_5_n_0),
        .I2(j_reg[4]),
        .I3(\count_reg[0]_2 ),
        .I4(count1_carry__1_0),
        .I5(count1_carry__1_1),
        .O(count1_carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h4104044141820404)) 
    count1_carry_i_3
       (.I0(j_reg[4]),
        .I1(count1_carry_i_5_n_0),
        .I2(j_reg[3]),
        .I3(count1_carry__1_1),
        .I4(count1_carry__1_0),
        .I5(\count_reg[0]_2 ),
        .O(count1_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    count1_carry_i_5
       (.I0(\j_reg[2]_1 [1]),
        .I1(\j_reg[2]_1 [2]),
        .O(count1_carry_i_5_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_1 
       (.I0(count_reg[0]),
        .O(\count[0]_i_1_n_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "192" *) 
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count[1]_i_1 
       (.I0(count_reg[1]),
        .I1(count_reg[0]),
        .O(plusOp[1]));
  (* \PinAttr:I2:HOLD_DETOUR  = "192" *) 
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \count[2]_i_1 
       (.I0(count_reg[2]),
        .I1(count_reg[0]),
        .I2(count_reg[1]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \count[3]_i_1 
       (.I0(count_reg[3]),
        .I1(count_reg[1]),
        .I2(count_reg[0]),
        .I3(count_reg[2]),
        .O(plusOp[3]));
  LUT6 #(
    .INIT(64'h8888888888880880)) 
    \count[4]_i_1 
       (.I0(j0),
        .I1(count1),
        .I2(\j_reg[0]_0 ),
        .I3(Q[0]),
        .I4(\count_reg[0]_2 ),
        .I5(\count_reg_reg[4] ),
        .O(count));
  LUT6 #(
    .INIT(64'h00004700FF004700)) 
    \count[4]_i_12 
       (.I0(\count[4]_i_20_n_0 ),
        .I1(\j_reg[2]_1 [2]),
        .I2(\count[4]_i_5_2 ),
        .I3(\j_reg[2]_1 [0]),
        .I4(\j_reg[2]_1 [1]),
        .I5(\count[4]_i_5_3 ),
        .O(\count[4]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hBEEBEBFA8228280A)) 
    \count[4]_i_16 
       (.I0(\count[4]_i_7_0 ),
        .I1(\j_reg[2]_1 [1]),
        .I2(j_reg[3]),
        .I3(\j_reg[2]_1 [0]),
        .I4(\j_reg[2]_1 [2]),
        .I5(\count[4]_i_7_1 ),
        .O(\count[4]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count[4]_i_2 
       (.I0(count_reg[4]),
        .I1(count_reg[2]),
        .I2(count_reg[0]),
        .I3(count_reg[1]),
        .I4(count_reg[3]),
        .O(plusOp[4]));
  LUT6 #(
    .INIT(64'hBEEBEBFA8228280A)) 
    \count[4]_i_20 
       (.I0(\count[4]_i_12_0 ),
        .I1(\j_reg[2]_1 [1]),
        .I2(j_reg[3]),
        .I3(\j_reg[2]_1 [0]),
        .I4(\j_reg[2]_1 [2]),
        .I5(\count[4]_i_12_1 ),
        .O(\count[4]_i_20_n_0 ));
  LUT3 #(
    .INIT(8'h39)) 
    \count[4]_i_23__1 
       (.I0(\j_reg[2]_1 [1]),
        .I1(\j_reg[2]_1 [2]),
        .I2(\j_reg[2]_1 [0]),
        .O(\j_reg[1]_0 ));
  LUT4 #(
    .INIT(16'h9663)) 
    \count[4]_i_25 
       (.I0(\j_reg[2]_1 [1]),
        .I1(j_reg[3]),
        .I2(\j_reg[2]_1 [0]),
        .I3(\j_reg[2]_1 [2]),
        .O(\j_reg[1]_6 ));
  LUT5 #(
    .INIT(32'hD1FFD100)) 
    \count[4]_i_3 
       (.I0(\count_reg[0]_1 ),
        .I1(\j_reg[2]_1 [0]),
        .I2(\count[4]_i_7_n_0 ),
        .I3(\j_reg[2]_0 ),
        .I4(\count_reg[0]_0 [0]),
        .O(\j_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h7E1581EA)) 
    \count[4]_i_32__2 
       (.I0(\j_reg[2]_1 [1]),
        .I1(j_reg[3]),
        .I2(\j_reg[2]_1 [0]),
        .I3(\j_reg[2]_1 [2]),
        .I4(j_reg[4]),
        .O(\j_reg[1]_1 ));
  LUT2 #(
    .INIT(4'h9)) 
    \count[4]_i_42__0 
       (.I0(\j_reg[2]_1 [1]),
        .I1(\j_reg[2]_1 [0]),
        .O(\j_reg[1]_2 ));
  LUT5 #(
    .INIT(32'hCD33B326)) 
    \count[4]_i_46 
       (.I0(\j_reg[2]_1 [1]),
        .I1(j_reg[3]),
        .I2(\j_reg[2]_1 [0]),
        .I3(\j_reg[2]_1 [2]),
        .I4(j_reg[4]),
        .O(\j_reg[1]_5 ));
  LUT6 #(
    .INIT(64'h56A656A6565656A6)) 
    \count[4]_i_5 
       (.I0(Q[1]),
        .I1(\count_reg[0]_0 [1]),
        .I2(\j_reg[2]_0 ),
        .I3(\count[4]_i_12_n_0 ),
        .I4(\count[4]_i_7_n_0 ),
        .I5(\j_reg[2]_1 [0]),
        .O(\count_reg_reg[4] ));
  LUT6 #(
    .INIT(64'hFF001D1D4747FF00)) 
    \count[4]_i_7 
       (.I0(\count[4]_i_5_0 ),
        .I1(\j_reg[2]_1 [2]),
        .I2(\count[4]_i_16_n_0 ),
        .I3(\count[4]_i_5_1 ),
        .I4(\j_reg[2]_1 [1]),
        .I5(\j_reg[2]_1 [0]),
        .O(\count[4]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h000F010F)) 
    \count[4]_i_8 
       (.I0(\j_reg[2]_1 [2]),
        .I1(\j_reg[2]_1 [1]),
        .I2(j_reg[4]),
        .I3(j_reg[3]),
        .I4(\j_reg[2]_1 [0]),
        .O(\j_reg[2]_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(\count[0]_i_1_n_0 ),
        .Q(count_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp[1]),
        .Q(count_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp[2]),
        .Q(count_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp[3]),
        .Q(count_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp[4]),
        .Q(count_reg[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFF2E2EEE2E)) 
    done_aux_i_1
       (.I0(done_aux_i_2_n_0),
        .I1(j0),
        .I2(count1),
        .I3(done_aux_i_3__0_n_0),
        .I4(done_aux_reg_0),
        .I5(done),
        .O(done_aux_i_1_n_0));
  LUT5 #(
    .INIT(32'h00000040)) 
    done_aux_i_2
       (.I0(\j_reg[2]_1 [1]),
        .I1(\j_reg[2]_1 [0]),
        .I2(j_reg[3]),
        .I3(\j_reg[2]_1 [2]),
        .I4(j_reg[4]),
        .O(done_aux_i_2_n_0));
  LUT6 #(
    .INIT(64'hA9595959A959A9A9)) 
    done_aux_i_3__0
       (.I0(Q[0]),
        .I1(\count_reg[0]_0 [0]),
        .I2(\j_reg[2]_0 ),
        .I3(\count[4]_i_7_n_0 ),
        .I4(\j_reg[2]_1 [0]),
        .I5(\count_reg[0]_1 ),
        .O(done_aux_i_3__0_n_0));
  FDCE #(
    .INIT(1'b0)) 
    done_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(done_aux_i_1_n_0),
        .Q(done));
  LUT1 #(
    .INIT(2'h1)) 
    \j[0]_i_1 
       (.I0(\j_reg[2]_1 [0]),
        .O(\j[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \j[1]_i_1 
       (.I0(\j_reg[2]_1 [0]),
        .I1(\j_reg[2]_1 [1]),
        .O(p_0_in[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \j[2]_i_1 
       (.I0(\j_reg[2]_1 [2]),
        .I1(\j_reg[2]_1 [0]),
        .I2(\j_reg[2]_1 [1]),
        .O(p_0_in[2]));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \j[3]_i_1 
       (.I0(j_reg[3]),
        .I1(\j_reg[2]_1 [0]),
        .I2(\j_reg[2]_1 [2]),
        .I3(\j_reg[2]_1 [1]),
        .O(p_0_in[3]));
  LUT6 #(
    .INIT(64'h0000000003030307)) 
    \j[4]_i_1 
       (.I0(\j_reg[2]_1 [0]),
        .I1(j_reg[3]),
        .I2(j_reg[4]),
        .I3(\j_reg[2]_1 [1]),
        .I4(\j_reg[2]_1 [2]),
        .I5(done),
        .O(j0));
  LUT4 #(
    .INIT(16'h8000)) 
    \j[4]_i_2 
       (.I0(\j_reg[2]_1 [1]),
        .I1(j_reg[3]),
        .I2(\j_reg[2]_1 [0]),
        .I3(\j_reg[2]_1 [2]),
        .O(p_0_in[4]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[0] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(\j[0]_i_1_n_0 ),
        .Q(\j_reg[2]_1 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[1] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in[1]),
        .Q(\j_reg[2]_1 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[2] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in[2]),
        .Q(\j_reg[2]_1 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[3] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in[3]),
        .Q(j_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[4] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in[4]),
        .Q(j_reg[4]));
  (* \PinAttr:I3:HOLD_DETOUR  = "153" *) 
  LUT6 #(
    .INIT(64'hFFFFFFFF00001000)) 
    valid_aux_i_1
       (.I0(valid_aux_i_2_n_0),
        .I1(count_reg[2]),
        .I2(count_reg[0]),
        .I3(count_reg[3]),
        .I4(count_reg[1]),
        .I5(valid),
        .O(valid_aux_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFEFFFFFFFFFFFF)) 
    valid_aux_i_2
       (.I0(\j_reg[2]_1 [2]),
        .I1(\j_reg[2]_1 [1]),
        .I2(j_reg[4]),
        .I3(count_reg[4]),
        .I4(\j_reg[2]_1 [0]),
        .I5(j_reg[3]),
        .O(valid_aux_i_2_n_0));
  FDCE #(
    .INIT(1'b0)) 
    valid_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(valid_aux_i_1_n_0),
        .Q(valid));
endmodule

(* ORIG_REF_NAME = "ctrl_logic" *) 
module design_1_top_nqueens_0_0_ctrl_logic__parameterized0
   (valid,
    \j_reg[0]_0 ,
    Q,
    \j_reg[3]_0 ,
    \j_reg[3]_1 ,
    \j_reg[0]_1 ,
    \j_reg[0]_2 ,
    \j_reg[0]_3 ,
    \j_reg[1]_0 ,
    \j_reg[1]_1 ,
    \FSM_onehot_state_reg[3] ,
    \j_reg[1]_2 ,
    \FSM_onehot_state_reg[3]_0 ,
    \FSM_onehot_state_reg[3]_1 ,
    \FSM_onehot_state_reg[3]_2 ,
    \count_reg_reg[3] ,
    \count_reg_reg[2] ,
    \FSM_onehot_state_reg[3]_3 ,
    \FSM_onehot_state_reg[3]_4 ,
    \j_reg[0]_4 ,
    \j_reg[2]_0 ,
    \j_reg[3]_2 ,
    \j_reg[2]_1 ,
    \j_reg[2]_2 ,
    \j_reg[2]_3 ,
    E,
    \FSM_onehot_state_reg[1] ,
    valid_aux_reg_0,
    clk,
    AR,
    a_in_9,
    \count[4]_i_17_0 ,
    \count[4]_i_17_1 ,
    count1_carry_i_14_0,
    \count_reg[0]_0 ,
    count1_carry_i_4__0_0,
    \count_reg[0]_1 ,
    done_aux_reg_0,
    D,
    \count_reg[0]_2 ,
    a_in_8,
    \count[4]_i_11_0 ,
    \count[4]_i_4 ,
    count1_carry_i_13_0,
    count1_carry_i_13_1,
    count1_carry_i_13_2,
    count1_carry_i_17,
    count1_carry_0,
    count1_carry_1,
    count1_carry_i_4__0_1,
    count1_carry_i_4__0_2,
    count1_carry_i_4__0_3,
    \count[4]_i_11__3_0 ,
    \count[4]_i_11__3_1 ,
    \count[4]_i_7__0_0 ,
    \count_reg_reg[0] ,
    next_out_9,
    \count[4]_i_5__5 );
  output valid;
  output \j_reg[0]_0 ;
  output [3:0]Q;
  output \j_reg[3]_0 ;
  output \j_reg[3]_1 ;
  output \j_reg[0]_1 ;
  output \j_reg[0]_2 ;
  output \j_reg[0]_3 ;
  output \j_reg[1]_0 ;
  output \j_reg[1]_1 ;
  output \FSM_onehot_state_reg[3] ;
  output \j_reg[1]_2 ;
  output \FSM_onehot_state_reg[3]_0 ;
  output \FSM_onehot_state_reg[3]_1 ;
  output \FSM_onehot_state_reg[3]_2 ;
  output \count_reg_reg[3] ;
  output \count_reg_reg[2] ;
  output \FSM_onehot_state_reg[3]_3 ;
  output \FSM_onehot_state_reg[3]_4 ;
  output \j_reg[0]_4 ;
  output \j_reg[2]_0 ;
  output \j_reg[3]_2 ;
  output \j_reg[2]_1 ;
  output \j_reg[2]_2 ;
  output \j_reg[2]_3 ;
  output [0:0]E;
  output \FSM_onehot_state_reg[1] ;
  output [0:0]valid_aux_reg_0;
  input clk;
  input [0:0]AR;
  input [42:0]a_in_9;
  input \count[4]_i_17_0 ;
  input \count[4]_i_17_1 ;
  input count1_carry_i_14_0;
  input \count_reg[0]_0 ;
  input count1_carry_i_4__0_0;
  input \count_reg[0]_1 ;
  input done_aux_reg_0;
  input [2:0]D;
  input \count_reg[0]_2 ;
  input [4:0]a_in_8;
  input [1:0]\count[4]_i_11_0 ;
  input \count[4]_i_4 ;
  input count1_carry_i_13_0;
  input count1_carry_i_13_1;
  input count1_carry_i_13_2;
  input [1:0]count1_carry_i_17;
  input count1_carry_0;
  input count1_carry_1;
  input count1_carry_i_4__0_1;
  input count1_carry_i_4__0_2;
  input count1_carry_i_4__0_3;
  input \count[4]_i_11__3_0 ;
  input \count[4]_i_11__3_1 ;
  input \count[4]_i_7__0_0 ;
  input [4:0]\count_reg_reg[0] ;
  input next_out_9;
  input \count[4]_i_5__5 ;

  wire [0:0]AR;
  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state_reg[1] ;
  wire \FSM_onehot_state_reg[3] ;
  wire \FSM_onehot_state_reg[3]_0 ;
  wire \FSM_onehot_state_reg[3]_1 ;
  wire \FSM_onehot_state_reg[3]_2 ;
  wire \FSM_onehot_state_reg[3]_3 ;
  wire \FSM_onehot_state_reg[3]_4 ;
  wire [3:0]Q;
  wire [4:0]a_in_8;
  wire [42:0]a_in_9;
  wire clk;
  wire count;
  wire count1;
  wire count1_carry_0;
  wire count1_carry_1;
  wire count1_carry__0_i_1__0_n_0;
  wire count1_carry__0_i_2__0_n_0;
  wire count1_carry__0_i_3__0_n_0;
  wire count1_carry__0_i_4__0_n_0;
  wire count1_carry__0_n_0;
  wire count1_carry__1_i_1__0_n_0;
  wire count1_carry__1_i_2__0_n_0;
  wire count1_carry__1_i_3__0_n_0;
  wire count1_carry_i_11__0_n_0;
  wire count1_carry_i_13_0;
  wire count1_carry_i_13_1;
  wire count1_carry_i_13_2;
  wire count1_carry_i_14_0;
  wire count1_carry_i_14_n_0;
  wire count1_carry_i_15__3_n_0;
  wire count1_carry_i_16_n_0;
  wire [1:0]count1_carry_i_17;
  wire count1_carry_i_1__0_n_0;
  wire count1_carry_i_2__0_n_0;
  wire count1_carry_i_3__0_n_0;
  wire count1_carry_i_4__0_0;
  wire count1_carry_i_4__0_1;
  wire count1_carry_i_4__0_2;
  wire count1_carry_i_4__0_3;
  wire count1_carry_i_4__0_n_0;
  wire count1_carry_i_6__0_n_0;
  wire count1_carry_i_7__0_n_0;
  wire count1_carry_i_9_n_0;
  wire count1_carry_n_0;
  wire [1:0]\count[4]_i_11_0 ;
  wire \count[4]_i_11__3_0 ;
  wire \count[4]_i_11__3_1 ;
  wire \count[4]_i_14_n_0 ;
  wire \count[4]_i_15__0_n_0 ;
  wire \count[4]_i_17_0 ;
  wire \count[4]_i_17_1 ;
  wire \count[4]_i_18_n_0 ;
  wire \count[4]_i_19_n_0 ;
  wire \count[4]_i_22__2_n_0 ;
  wire \count[4]_i_24_n_0 ;
  wire \count[4]_i_26_n_0 ;
  wire \count[4]_i_28_n_0 ;
  wire \count[4]_i_29_n_0 ;
  wire \count[4]_i_30__2_n_0 ;
  wire \count[4]_i_30_n_0 ;
  wire \count[4]_i_31_n_0 ;
  wire \count[4]_i_37_n_0 ;
  wire \count[4]_i_38_n_0 ;
  wire \count[4]_i_39_n_0 ;
  wire \count[4]_i_4 ;
  wire \count[4]_i_40__0_n_0 ;
  wire \count[4]_i_41_n_0 ;
  wire \count[4]_i_44_n_0 ;
  wire \count[4]_i_45_n_0 ;
  wire \count[4]_i_47_n_0 ;
  wire \count[4]_i_48_n_0 ;
  wire \count[4]_i_49_n_0 ;
  wire \count[4]_i_5__5 ;
  wire \count[4]_i_7__0_0 ;
  wire \count[4]_i_7__0_n_0 ;
  wire [4:0]count_reg;
  wire \count_reg[0]_0 ;
  wire \count_reg[0]_1 ;
  wire \count_reg[0]_2 ;
  wire [4:0]\count_reg_reg[0] ;
  wire \count_reg_reg[2] ;
  wire \count_reg_reg[3] ;
  wire done;
  wire done_aux_i_1__5_n_0;
  wire done_aux_i_3__1_n_0;
  wire done_aux_reg_0;
  wire j0;
  wire \j[0]_i_1__0_n_0 ;
  wire \j_reg[0]_0 ;
  wire \j_reg[0]_1 ;
  wire \j_reg[0]_2 ;
  wire \j_reg[0]_3 ;
  wire \j_reg[0]_4 ;
  wire \j_reg[1]_0 ;
  wire \j_reg[1]_1 ;
  wire \j_reg[1]_2 ;
  wire \j_reg[2]_0 ;
  wire \j_reg[2]_1 ;
  wire \j_reg[2]_2 ;
  wire \j_reg[2]_3 ;
  wire \j_reg[3]_0 ;
  wire \j_reg[3]_1 ;
  wire \j_reg[3]_2 ;
  wire next_out_9;
  wire [3:1]p_0_in__0;
  wire [4:0]plusOp__0;
  wire valid;
  wire valid_aux_i_1__2_n_0;
  wire valid_aux_i_2__0_n_0;
  wire [0:0]valid_aux_reg_0;
  wire [2:0]NLW_count1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry_O_UNCONNECTED;
  wire [2:0]NLW_count1_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_O_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[3]_i_1__0 
       (.I0(valid),
        .I1(\count_reg_reg[0] [2]),
        .O(valid_aux_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \FSM_onehot_state[4]_i_2__1 
       (.I0(\count_reg_reg[0] [3]),
        .I1(next_out_9),
        .I2(done),
        .I3(\count_reg_reg[0] [2]),
        .I4(\count_reg_reg[0] [1]),
        .I5(\count_reg_reg[0] [0]),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFEFEFEFEFEFEFE)) 
    acks_out_reg_i_2__2
       (.I0(\count_reg_reg[0] [1]),
        .I1(\count_reg_reg[0] [0]),
        .I2(\count_reg_reg[0] [4]),
        .I3(done),
        .I4(\count_reg_reg[0] [2]),
        .I5(valid),
        .O(\FSM_onehot_state_reg[1] ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry
       (.CI(1'b0),
        .CO({count1_carry_n_0,NLW_count1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry_O_UNCONNECTED[3:0]),
        .S({count1_carry_i_1__0_n_0,count1_carry_i_2__0_n_0,count1_carry_i_3__0_n_0,count1_carry_i_4__0_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__0
       (.CI(count1_carry_n_0),
        .CO({count1_carry__0_n_0,NLW_count1_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__0_O_UNCONNECTED[3:0]),
        .S({count1_carry__0_i_1__0_n_0,count1_carry__0_i_2__0_n_0,count1_carry__0_i_3__0_n_0,count1_carry__0_i_4__0_n_0}));
  LUT6 #(
    .INIT(64'h0FFF0FFF69990FFF)) 
    count1_carry__0_i_1__0
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_4__0_0),
        .I2(count1_carry_i_6__0_n_0),
        .I3(Q[3]),
        .I4(\count_reg[0]_1 ),
        .I5(count1_carry_i_7__0_n_0),
        .O(count1_carry__0_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h0FFF0FFF69990FFF)) 
    count1_carry__0_i_2__0
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_4__0_0),
        .I2(count1_carry_i_6__0_n_0),
        .I3(Q[3]),
        .I4(\count_reg[0]_1 ),
        .I5(count1_carry_i_7__0_n_0),
        .O(count1_carry__0_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h0FFF0FFF69990FFF)) 
    count1_carry__0_i_3__0
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_4__0_0),
        .I2(count1_carry_i_6__0_n_0),
        .I3(Q[3]),
        .I4(\count_reg[0]_1 ),
        .I5(count1_carry_i_7__0_n_0),
        .O(count1_carry__0_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h0FFF0FFF69990FFF)) 
    count1_carry__0_i_4__0
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_4__0_0),
        .I2(count1_carry_i_6__0_n_0),
        .I3(Q[3]),
        .I4(\count_reg[0]_1 ),
        .I5(count1_carry_i_7__0_n_0),
        .O(count1_carry__0_i_4__0_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__1
       (.CI(count1_carry__0_n_0),
        .CO({NLW_count1_carry__1_CO_UNCONNECTED[3],count1,NLW_count1_carry__1_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,count1_carry__1_i_1__0_n_0,count1_carry__1_i_2__0_n_0,count1_carry__1_i_3__0_n_0}));
  LUT6 #(
    .INIT(64'h0FFF0FFF09990FFF)) 
    count1_carry__1_i_1__0
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_4__0_0),
        .I2(Q[3]),
        .I3(count1_carry_i_6__0_n_0),
        .I4(\count_reg[0]_1 ),
        .I5(count1_carry_i_7__0_n_0),
        .O(count1_carry__1_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h0FFF0FFF69990FFF)) 
    count1_carry__1_i_2__0
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_4__0_0),
        .I2(count1_carry_i_6__0_n_0),
        .I3(Q[3]),
        .I4(\count_reg[0]_1 ),
        .I5(count1_carry_i_7__0_n_0),
        .O(count1_carry__1_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h0FFF0FFF69990FFF)) 
    count1_carry__1_i_3__0
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_4__0_0),
        .I2(count1_carry_i_6__0_n_0),
        .I3(Q[3]),
        .I4(\count_reg[0]_1 ),
        .I5(count1_carry_i_7__0_n_0),
        .O(count1_carry__1_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h9696966969696996)) 
    count1_carry_i_11__0
       (.I0(count1_carry_i_4__0_1),
        .I1(D[0]),
        .I2(count1_carry_i_4__0_2),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(count1_carry_i_11__0_n_0));
  LUT5 #(
    .INIT(32'hB800B8FF)) 
    count1_carry_i_13
       (.I0(\count[4]_i_19_n_0 ),
        .I1(\count[4]_i_11_0 [0]),
        .I2(count1_carry_i_14_n_0),
        .I3(\count[4]_i_4 ),
        .I4(a_in_9[40]),
        .O(\j_reg[0]_2 ));
  LUT6 #(
    .INIT(64'h101FFFFF101F0000)) 
    count1_carry_i_14
       (.I0(count1_carry_i_15__3_n_0),
        .I1(count1_carry_i_16_n_0),
        .I2(count1_carry_i_13_0),
        .I3(count1_carry_i_13_1),
        .I4(count1_carry_i_13_2),
        .I5(\count[4]_i_39_n_0 ),
        .O(count1_carry_i_14_n_0));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    count1_carry_i_15__3
       (.I0(a_in_9[40]),
        .I1(\count[4]_i_17_1 ),
        .I2(a_in_9[8]),
        .I3(\count[4]_i_17_0 ),
        .I4(a_in_9[24]),
        .I5(count1_carry_i_14_0),
        .O(count1_carry_i_15__3_n_0));
  LUT6 #(
    .INIT(64'h00000000FFB800B8)) 
    count1_carry_i_16
       (.I0(a_in_9[0]),
        .I1(\count[4]_i_17_1 ),
        .I2(a_in_9[32]),
        .I3(\count[4]_i_17_0 ),
        .I4(a_in_9[16]),
        .I5(count1_carry_i_14_0),
        .O(count1_carry_i_16_n_0));
  LUT6 #(
    .INIT(64'h0FFF0FFF69990FFF)) 
    count1_carry_i_1__0
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_4__0_0),
        .I2(count1_carry_i_6__0_n_0),
        .I3(Q[3]),
        .I4(\count_reg[0]_1 ),
        .I5(count1_carry_i_7__0_n_0),
        .O(count1_carry_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h0FFF0FFF69990FFF)) 
    count1_carry_i_2__0
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_4__0_0),
        .I2(count1_carry_i_6__0_n_0),
        .I3(Q[3]),
        .I4(\count_reg[0]_1 ),
        .I5(count1_carry_i_7__0_n_0),
        .O(count1_carry_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h0669066900090996)) 
    count1_carry_i_3__0
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_4__0_0),
        .I2(count1_carry_i_6__0_n_0),
        .I3(Q[3]),
        .I4(\count_reg[0]_1 ),
        .I5(count1_carry_i_7__0_n_0),
        .O(count1_carry_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h8400008501202000)) 
    count1_carry_i_4__0
       (.I0(Q[0]),
        .I1(count1_carry_i_7__0_n_0),
        .I2(count1_carry_0),
        .I3(count1_carry_i_9_n_0),
        .I4(count1_carry_1),
        .I5(count1_carry_i_11__0_n_0),
        .O(count1_carry_i_4__0_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    count1_carry_i_6__0
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(count1_carry_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h566A)) 
    count1_carry_i_7__0
       (.I0(\j_reg[3]_1 ),
        .I1(\j_reg[0]_4 ),
        .I2(D[1]),
        .I3(count1_carry_i_4__0_0),
        .O(count1_carry_i_7__0_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    count1_carry_i_9
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(count1_carry_i_4__0_3),
        .O(count1_carry_i_9_n_0));
  (* \PinAttr:I0:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_1__0 
       (.I0(count_reg[0]),
        .O(plusOp__0[0]));
  (* \PinAttr:I0:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count[1]_i_1__0 
       (.I0(count_reg[0]),
        .I1(count_reg[1]),
        .O(plusOp__0[1]));
  (* \PinAttr:I2:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \count[2]_i_1__0 
       (.I0(count_reg[2]),
        .I1(count_reg[1]),
        .I2(count_reg[0]),
        .O(plusOp__0[2]));
  (* \PinAttr:I1:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \count[3]_i_1__0 
       (.I0(count_reg[3]),
        .I1(count_reg[0]),
        .I2(count_reg[1]),
        .I3(count_reg[2]),
        .O(plusOp__0[3]));
  LUT5 #(
    .INIT(32'hCFC05555)) 
    \count[4]_i_10 
       (.I0(a_in_9[42]),
        .I1(\j_reg[1]_0 ),
        .I2(\count[4]_i_11_0 [0]),
        .I3(\count[4]_i_18_n_0 ),
        .I4(\count[4]_i_4 ),
        .O(\j_reg[0]_3 ));
  LUT5 #(
    .INIT(32'hB800B8FF)) 
    \count[4]_i_11 
       (.I0(\count[4]_i_18_n_0 ),
        .I1(\count[4]_i_11_0 [0]),
        .I2(\count[4]_i_19_n_0 ),
        .I3(\count[4]_i_4 ),
        .I4(a_in_9[41]),
        .O(\j_reg[0]_1 ));
  LUT5 #(
    .INIT(32'h5555CFC0)) 
    \count[4]_i_11__3 
       (.I0(a_in_8[3]),
        .I1(\count[4]_i_5__5 ),
        .I2(Q[0]),
        .I3(\count[4]_i_7__0_n_0 ),
        .I4(Q[3]),
        .O(\j_reg[0]_4 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \count[4]_i_13 
       (.I0(\count[4]_i_22__2_n_0 ),
        .I1(count1_carry_i_13_0),
        .I2(\count[4]_i_24_n_0 ),
        .I3(count1_carry_i_14_0),
        .I4(\count[4]_i_26_n_0 ),
        .O(\j_reg[1]_2 ));
  LUT6 #(
    .INIT(64'hA0A0C0CFAFAFC0CF)) 
    \count[4]_i_14 
       (.I0(\FSM_onehot_state_reg[3]_0 ),
        .I1(\count[4]_i_28_n_0 ),
        .I2(count1_carry_i_13_0),
        .I3(\count[4]_i_29_n_0 ),
        .I4(count1_carry_i_14_0),
        .I5(\count[4]_i_30_n_0 ),
        .O(\count[4]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h05F5030305F5F3F3)) 
    \count[4]_i_15 
       (.I0(a_in_9[22]),
        .I1(\count[4]_i_31_n_0 ),
        .I2(count1_carry_i_14_0),
        .I3(a_in_9[30]),
        .I4(\count[4]_i_17_0 ),
        .I5(a_in_9[14]),
        .O(\FSM_onehot_state_reg[3]_3 ));
  LUT6 #(
    .INIT(64'h00000000D0DDFFFF)) 
    \count[4]_i_15__0 
       (.I0(\j_reg[3]_0 ),
        .I1(a_in_8[2]),
        .I2(a_in_8[1]),
        .I3(\count[4]_i_30__2_n_0 ),
        .I4(\j_reg[2]_0 ),
        .I5(\count[4]_i_7__0_0 ),
        .O(\count[4]_i_15__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \count[4]_i_17 
       (.I0(\FSM_onehot_state_reg[3]_1 ),
        .I1(\FSM_onehot_state_reg[3]_2 ),
        .I2(count1_carry_i_13_0),
        .I3(\count[4]_i_37_n_0 ),
        .I4(count1_carry_i_14_0),
        .I5(\count[4]_i_38_n_0 ),
        .O(\j_reg[1]_1 ));
  LUT4 #(
    .INIT(16'hC55C)) 
    \count[4]_i_18 
       (.I0(\j_reg[1]_1 ),
        .I1(\count[4]_i_39_n_0 ),
        .I2(\count[4]_i_11_0 [1]),
        .I3(\count[4]_i_11_0 [0]),
        .O(\count[4]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h2F20FFFF2F200000)) 
    \count[4]_i_19 
       (.I0(\count[4]_i_40__0_n_0 ),
        .I1(\count[4]_i_41_n_0 ),
        .I2(count1_carry_i_13_0),
        .I3(\count[4]_i_22__2_n_0 ),
        .I4(count1_carry_i_13_2),
        .I5(\count[4]_i_14_n_0 ),
        .O(\count[4]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h1111101100000000)) 
    \count[4]_i_1__6 
       (.I0(done),
        .I1(Q[3]),
        .I2(\j_reg[3]_1 ),
        .I3(\count_reg[0]_1 ),
        .I4(\count_reg[0]_0 ),
        .I5(count1),
        .O(count));
  LUT6 #(
    .INIT(64'h05F5030305F5F3F3)) 
    \count[4]_i_21 
       (.I0(a_in_9[23]),
        .I1(\count[4]_i_44_n_0 ),
        .I2(count1_carry_i_14_0),
        .I3(a_in_9[31]),
        .I4(\count[4]_i_17_0 ),
        .I5(a_in_9[15]),
        .O(\FSM_onehot_state_reg[3]_4 ));
  LUT4 #(
    .INIT(16'hE11E)) 
    \count[4]_i_21__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(Q[1]),
        .O(\j_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h05F5030305F5F3F3)) 
    \count[4]_i_22__2 
       (.I0(a_in_9[21]),
        .I1(\count[4]_i_45_n_0 ),
        .I2(count1_carry_i_14_0),
        .I3(a_in_9[29]),
        .I4(\count[4]_i_17_0 ),
        .I5(a_in_9[13]),
        .O(\count[4]_i_22__2_n_0 ));
  LUT4 #(
    .INIT(16'h887E)) 
    \count[4]_i_23__2 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(\j_reg[3]_0 ));
  LUT5 #(
    .INIT(32'h1D001DFF)) 
    \count[4]_i_24 
       (.I0(a_in_9[1]),
        .I1(\count[4]_i_17_1 ),
        .I2(a_in_9[33]),
        .I3(\count[4]_i_17_0 ),
        .I4(a_in_9[17]),
        .O(\count[4]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h111F)) 
    \count[4]_i_24__0 
       (.I0(\j_reg[2]_2 ),
        .I1(a_in_8[4]),
        .I2(\j_reg[2]_3 ),
        .I3(a_in_8[0]),
        .O(\j_reg[2]_1 ));
  LUT5 #(
    .INIT(32'h001DFF1D)) 
    \count[4]_i_26 
       (.I0(a_in_9[41]),
        .I1(\count[4]_i_17_1 ),
        .I2(a_in_9[9]),
        .I3(\count[4]_i_17_0 ),
        .I4(a_in_9[25]),
        .O(\count[4]_i_26_n_0 ));
  LUT5 #(
    .INIT(32'h00FF1D1D)) 
    \count[4]_i_27 
       (.I0(count1_carry_i_17[0]),
        .I1(\count[4]_i_17_1 ),
        .I2(a_in_9[11]),
        .I3(a_in_9[27]),
        .I4(\count[4]_i_17_0 ),
        .O(\FSM_onehot_state_reg[3]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \count[4]_i_27__2 
       (.I0(Q[0]),
        .I1(Q[2]),
        .O(\j_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h47444777)) 
    \count[4]_i_28 
       (.I0(a_in_9[19]),
        .I1(\count[4]_i_17_0 ),
        .I2(a_in_9[3]),
        .I3(\count[4]_i_17_1 ),
        .I4(a_in_9[35]),
        .O(\count[4]_i_28_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \count[4]_i_29 
       (.I0(a_in_9[23]),
        .I1(\count[4]_i_17_0 ),
        .I2(a_in_9[7]),
        .I3(\count[4]_i_17_1 ),
        .I4(a_in_9[39]),
        .O(\count[4]_i_29_n_0 ));
  (* \PinAttr:I2:HOLD_DETOUR  = "147" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count[4]_i_2__0 
       (.I0(count_reg[4]),
        .I1(count_reg[2]),
        .I2(count_reg[1]),
        .I3(count_reg[0]),
        .I4(count_reg[3]),
        .O(plusOp__0[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \count[4]_i_30 
       (.I0(a_in_9[31]),
        .I1(\count[4]_i_17_0 ),
        .I2(a_in_9[15]),
        .O(\count[4]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h522B)) 
    \count[4]_i_30__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(\count[4]_i_30__2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \count[4]_i_31 
       (.I0(a_in_9[6]),
        .I1(\count[4]_i_17_1 ),
        .I2(a_in_9[38]),
        .O(\count[4]_i_31_n_0 ));
  LUT5 #(
    .INIT(32'h1D001DFF)) 
    \count[4]_i_33 
       (.I0(a_in_9[2]),
        .I1(\count[4]_i_17_1 ),
        .I2(a_in_9[34]),
        .I3(\count[4]_i_17_0 ),
        .I4(a_in_9[18]),
        .O(\count_reg_reg[2] ));
  LUT5 #(
    .INIT(32'h00FF1D1D)) 
    \count[4]_i_34 
       (.I0(a_in_9[42]),
        .I1(\count[4]_i_17_1 ),
        .I2(a_in_9[10]),
        .I3(a_in_9[26]),
        .I4(\count[4]_i_17_0 ),
        .O(\FSM_onehot_state_reg[3] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \count[4]_i_35 
       (.I0(a_in_9[28]),
        .I1(\count[4]_i_17_0 ),
        .I2(a_in_9[12]),
        .I3(\count[4]_i_17_1 ),
        .I4(count1_carry_i_17[1]),
        .O(\FSM_onehot_state_reg[3]_1 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \count[4]_i_36 
       (.I0(a_in_9[20]),
        .I1(\count[4]_i_17_0 ),
        .I2(a_in_9[4]),
        .I3(\count[4]_i_17_1 ),
        .I4(a_in_9[36]),
        .O(\FSM_onehot_state_reg[3]_2 ));
  LUT5 #(
    .INIT(32'hE2FFE200)) 
    \count[4]_i_37 
       (.I0(a_in_9[0]),
        .I1(\count[4]_i_17_1 ),
        .I2(a_in_9[32]),
        .I3(\count[4]_i_17_0 ),
        .I4(a_in_9[16]),
        .O(\count[4]_i_37_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \count[4]_i_38 
       (.I0(a_in_9[24]),
        .I1(\count[4]_i_17_0 ),
        .I2(a_in_9[8]),
        .I3(\count[4]_i_17_1 ),
        .I4(a_in_9[40]),
        .O(\count[4]_i_38_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0C0CFAFAFC0CF)) 
    \count[4]_i_39 
       (.I0(\FSM_onehot_state_reg[3] ),
        .I1(\count[4]_i_47_n_0 ),
        .I2(count1_carry_i_13_0),
        .I3(\count[4]_i_48_n_0 ),
        .I4(count1_carry_i_14_0),
        .I5(\count[4]_i_49_n_0 ),
        .O(\count[4]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'h363633369C9C999C)) 
    \count[4]_i_3__7 
       (.I0(Q[3]),
        .I1(D[2]),
        .I2(\count_reg[0]_2 ),
        .I3(Q[0]),
        .I4(\count[4]_i_7__0_n_0 ),
        .I5(a_in_8[4]),
        .O(\j_reg[3]_1 ));
  LUT6 #(
    .INIT(64'h47444777FFFFFFFF)) 
    \count[4]_i_40__0 
       (.I0(a_in_9[25]),
        .I1(\count[4]_i_17_0 ),
        .I2(a_in_9[9]),
        .I3(\count[4]_i_17_1 ),
        .I4(a_in_9[41]),
        .I5(count1_carry_i_14_0),
        .O(\count[4]_i_40__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFB800B8)) 
    \count[4]_i_41 
       (.I0(a_in_9[1]),
        .I1(\count[4]_i_17_1 ),
        .I2(a_in_9[33]),
        .I3(\count[4]_i_17_0 ),
        .I4(a_in_9[17]),
        .I5(count1_carry_i_14_0),
        .O(\count[4]_i_41_n_0 ));
  LUT4 #(
    .INIT(16'h5F01)) 
    \count[4]_i_41__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(\j_reg[2]_3 ));
  LUT4 #(
    .INIT(16'hA0FE)) 
    \count[4]_i_42 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(\j_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h1D001DFF)) 
    \count[4]_i_43 
       (.I0(a_in_9[3]),
        .I1(\count[4]_i_17_1 ),
        .I2(a_in_9[35]),
        .I3(\count[4]_i_17_0 ),
        .I4(a_in_9[19]),
        .O(\count_reg_reg[3] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \count[4]_i_44 
       (.I0(a_in_9[7]),
        .I1(\count[4]_i_17_1 ),
        .I2(a_in_9[39]),
        .O(\count[4]_i_44_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \count[4]_i_45 
       (.I0(a_in_9[5]),
        .I1(\count[4]_i_17_1 ),
        .I2(a_in_9[37]),
        .O(\count[4]_i_45_n_0 ));
  LUT5 #(
    .INIT(32'h47444777)) 
    \count[4]_i_47 
       (.I0(a_in_9[18]),
        .I1(\count[4]_i_17_0 ),
        .I2(a_in_9[2]),
        .I3(\count[4]_i_17_1 ),
        .I4(a_in_9[34]),
        .O(\count[4]_i_47_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \count[4]_i_48 
       (.I0(a_in_9[22]),
        .I1(\count[4]_i_17_0 ),
        .I2(a_in_9[6]),
        .I3(\count[4]_i_17_1 ),
        .I4(a_in_9[38]),
        .O(\count[4]_i_48_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \count[4]_i_49 
       (.I0(a_in_9[30]),
        .I1(\count[4]_i_17_0 ),
        .I2(a_in_9[14]),
        .O(\count[4]_i_49_n_0 ));
  LUT4 #(
    .INIT(16'hD0DD)) 
    \count[4]_i_51 
       (.I0(\j_reg[3]_0 ),
        .I1(a_in_8[2]),
        .I2(a_in_8[1]),
        .I3(\count[4]_i_30__2_n_0 ),
        .O(\j_reg[3]_2 ));
  LUT4 #(
    .INIT(16'hCAAC)) 
    \count[4]_i_6 
       (.I0(\j_reg[1]_2 ),
        .I1(\count[4]_i_14_n_0 ),
        .I2(\count[4]_i_11_0 [1]),
        .I3(\count[4]_i_11_0 [0]),
        .O(\j_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hFFFF0000417D417D)) 
    \count[4]_i_7__0 
       (.I0(\count[4]_i_15__0_n_0 ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\count[4]_i_11__3_0 ),
        .I4(\count[4]_i_11__3_1 ),
        .I5(Q[1]),
        .O(\count[4]_i_7__0_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__0[0]),
        .Q(count_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__0[1]),
        .Q(count_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__0[2]),
        .Q(count_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__0[3]),
        .Q(count_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__0[4]),
        .Q(count_reg[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAABABBBB)) 
    done_aux_i_1__5
       (.I0(done),
        .I1(Q[3]),
        .I2(done_aux_reg_0),
        .I3(\count_reg[0]_0 ),
        .I4(count1),
        .I5(done_aux_i_3__1_n_0),
        .O(done_aux_i_1__5_n_0));
  LUT4 #(
    .INIT(16'h0002)) 
    done_aux_i_3__1
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(done_aux_i_3__1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    done_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(done_aux_i_1__5_n_0),
        .Q(done));
  LUT1 #(
    .INIT(2'h1)) 
    \j[0]_i_1__0 
       (.I0(Q[0]),
        .O(\j[0]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \j[1]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(p_0_in__0[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \j[2]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(p_0_in__0[2]));
  LUT2 #(
    .INIT(4'h1)) 
    \j[3]_i_1__0 
       (.I0(done),
        .I1(Q[3]),
        .O(j0));
  LUT3 #(
    .INIT(8'h80)) 
    \j[3]_i_2 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .O(p_0_in__0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[0] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(\j[0]_i_1__0_n_0 ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[1] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in__0[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[2] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in__0[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[3] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in__0[3]),
        .Q(Q[3]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT4 #(
    .INIT(16'hFF02)) 
    valid_aux_i_1__2
       (.I0(Q[3]),
        .I1(valid_aux_i_2__0_n_0),
        .I2(count1_carry_i_6__0_n_0),
        .I3(valid),
        .O(valid_aux_i_1__2_n_0));
  (* \PinAttr:I0:HOLD_DETOUR  = "147" *) 
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    valid_aux_i_2__0
       (.I0(count_reg[1]),
        .I1(count_reg[0]),
        .I2(count_reg[4]),
        .I3(count_reg[3]),
        .I4(count_reg[2]),
        .O(valid_aux_i_2__0_n_0));
  FDCE #(
    .INIT(1'b0)) 
    valid_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(valid_aux_i_1__2_n_0),
        .Q(valid));
endmodule

(* ORIG_REF_NAME = "ctrl_logic" *) 
module design_1_top_nqueens_0_0_ctrl_logic__parameterized1
   (CO,
    valid,
    \j_reg[2]_0 ,
    \j_reg[3]_0 ,
    \j_reg[0]_0 ,
    \j_reg[3]_1 ,
    \j_reg[0]_1 ,
    \count_reg_reg[3] ,
    \count_reg_reg[0] ,
    \j_reg[3]_2 ,
    \j_reg[3]_3 ,
    \j_reg[0]_2 ,
    \count_reg_reg[2] ,
    \count_reg_reg[0]_0 ,
    \count_reg_reg[1] ,
    \count_reg_reg[0]_1 ,
    \j_reg[0]_3 ,
    \j_reg[1]_0 ,
    \FSM_onehot_state_reg[3] ,
    \FSM_onehot_state_reg[3]_0 ,
    \count_reg_reg[4] ,
    \j_reg[0]_4 ,
    \j_reg[3]_4 ,
    \j_reg[0]_5 ,
    E,
    \FSM_onehot_state_reg[1] ,
    valid_aux_reg_0,
    \j_reg[1]_1 ,
    \j_reg[1]_2 ,
    count1_carry__0_0,
    count1_carry__1_0,
    S,
    clk,
    AR,
    Q,
    \count[4]_i_5__0_0 ,
    \count[4]_i_5__0_1 ,
    \count[4]_i_5__0_2 ,
    D,
    count1_carry_i_7__1_0,
    \count_reg[0]_0 ,
    count1_carry__1_i_1__6,
    count1_carry_0,
    done_aux_reg_0,
    done_aux_reg_1,
    done_aux_reg_2,
    \count[4]_i_7__0 ,
    \count[4]_i_7__0_0 ,
    a_in_8,
    \count[4]_i_17__0_0 ,
    \count[4]_i_17__0_1 ,
    \count[4]_i_14__0_0 ,
    \count[4]_i_19__0_0 ,
    \count[4]_i_6__3_0 ,
    count1_carry_1,
    count1_carry_2,
    a_in_7,
    count1_carry_i_12__0,
    count1_carry_i_8__1_0,
    \count[4]_i_4__5 ,
    count1_carry_i_16__1_0,
    count1_carry_i_16__1_1,
    count1_carry_i_16__1_2,
    \count_reg_reg[0]_2 ,
    next_out_8);
  output [0:0]CO;
  output valid;
  output \j_reg[2]_0 ;
  output [3:0]\j_reg[3]_0 ;
  output \j_reg[0]_0 ;
  output \j_reg[3]_1 ;
  output \j_reg[0]_1 ;
  output \count_reg_reg[3] ;
  output \count_reg_reg[0] ;
  output \j_reg[3]_2 ;
  output \j_reg[3]_3 ;
  output \j_reg[0]_2 ;
  output \count_reg_reg[2] ;
  output \count_reg_reg[0]_0 ;
  output \count_reg_reg[1] ;
  output \count_reg_reg[0]_1 ;
  output \j_reg[0]_3 ;
  output \j_reg[1]_0 ;
  output \FSM_onehot_state_reg[3] ;
  output \FSM_onehot_state_reg[3]_0 ;
  output \count_reg_reg[4] ;
  output \j_reg[0]_4 ;
  output \j_reg[3]_4 ;
  output \j_reg[0]_5 ;
  output [0:0]E;
  output \FSM_onehot_state_reg[1] ;
  output [0:0]valid_aux_reg_0;
  output \j_reg[1]_1 ;
  output \j_reg[1]_2 ;
  input [1:0]count1_carry__0_0;
  input [3:0]count1_carry__1_0;
  input [2:0]S;
  input clk;
  input [0:0]AR;
  input [3:0]Q;
  input \count[4]_i_5__0_0 ;
  input \count[4]_i_5__0_1 ;
  input \count[4]_i_5__0_2 ;
  input [4:0]D;
  input count1_carry_i_7__1_0;
  input \count_reg[0]_0 ;
  input count1_carry__1_i_1__6;
  input count1_carry_0;
  input [2:0]done_aux_reg_0;
  input done_aux_reg_1;
  input done_aux_reg_2;
  input \count[4]_i_7__0 ;
  input \count[4]_i_7__0_0 ;
  input [37:0]a_in_8;
  input \count[4]_i_17__0_0 ;
  input \count[4]_i_17__0_1 ;
  input \count[4]_i_14__0_0 ;
  input \count[4]_i_19__0_0 ;
  input \count[4]_i_6__3_0 ;
  input count1_carry_1;
  input count1_carry_2;
  input [2:0]a_in_7;
  input count1_carry_i_12__0;
  input count1_carry_i_8__1_0;
  input \count[4]_i_4__5 ;
  input count1_carry_i_16__1_0;
  input count1_carry_i_16__1_1;
  input count1_carry_i_16__1_2;
  input [4:0]\count_reg_reg[0]_2 ;
  input next_out_8;

  wire [0:0]AR;
  wire [0:0]CO;
  wire [4:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state_reg[1] ;
  wire \FSM_onehot_state_reg[3] ;
  wire \FSM_onehot_state_reg[3]_0 ;
  wire [3:0]Q;
  wire [2:0]S;
  wire [2:0]a_in_7;
  wire [37:0]a_in_8;
  wire clk;
  wire count;
  wire count1_carry_0;
  wire count1_carry_1;
  wire count1_carry_2;
  wire [1:0]count1_carry__0_0;
  wire count1_carry__0_n_0;
  wire [3:0]count1_carry__1_0;
  wire count1_carry__1_i_1__6;
  wire count1_carry_i_11__1_n_0;
  wire count1_carry_i_12__0;
  wire count1_carry_i_14__0_n_0;
  wire count1_carry_i_15_n_0;
  wire count1_carry_i_16__0_n_0;
  wire count1_carry_i_16__1_0;
  wire count1_carry_i_16__1_1;
  wire count1_carry_i_16__1_2;
  wire count1_carry_i_17__0_n_0;
  wire count1_carry_i_18__0_n_0;
  wire count1_carry_i_18_n_0;
  wire count1_carry_i_25_n_0;
  wire count1_carry_i_3__6_n_0;
  wire count1_carry_i_4__1_n_0;
  wire count1_carry_i_7__1_0;
  wire count1_carry_i_8__1_0;
  wire count1_carry_i_8__1_n_0;
  wire count1_carry_i_9__4_n_0;
  wire count1_carry_n_0;
  wire \count[4]_i_12__0_n_0 ;
  wire \count[4]_i_13__0_n_0 ;
  wire \count[4]_i_14__0_0 ;
  wire \count[4]_i_14__0_n_0 ;
  wire \count[4]_i_17__0_0 ;
  wire \count[4]_i_17__0_1 ;
  wire \count[4]_i_18__0_n_0 ;
  wire \count[4]_i_19__0_0 ;
  wire \count[4]_i_19__0_n_0 ;
  wire \count[4]_i_22_n_0 ;
  wire \count[4]_i_25__0_n_0 ;
  wire \count[4]_i_26__0_n_0 ;
  wire \count[4]_i_28__0_n_0 ;
  wire \count[4]_i_29__0_n_0 ;
  wire \count[4]_i_32_n_0 ;
  wire \count[4]_i_33__0_n_0 ;
  wire \count[4]_i_34__0_n_0 ;
  wire \count[4]_i_35__0_n_0 ;
  wire \count[4]_i_36__0_n_0 ;
  wire \count[4]_i_37__0_n_0 ;
  wire \count[4]_i_38__0_n_0 ;
  wire \count[4]_i_39__0_n_0 ;
  wire \count[4]_i_40_n_0 ;
  wire \count[4]_i_43__0_n_0 ;
  wire \count[4]_i_44__0_n_0 ;
  wire \count[4]_i_45__0_n_0 ;
  wire \count[4]_i_46__0_n_0 ;
  wire \count[4]_i_47__0_n_0 ;
  wire \count[4]_i_48__0_n_0 ;
  wire \count[4]_i_49__0_n_0 ;
  wire \count[4]_i_4__5 ;
  wire \count[4]_i_50_n_0 ;
  wire \count[4]_i_5__0_0 ;
  wire \count[4]_i_5__0_1 ;
  wire \count[4]_i_5__0_2 ;
  wire \count[4]_i_6__3_0 ;
  wire \count[4]_i_6__4_n_0 ;
  wire \count[4]_i_7__0 ;
  wire \count[4]_i_7__0_0 ;
  wire [4:0]count_reg;
  wire \count_reg[0]_0 ;
  wire \count_reg_reg[0] ;
  wire \count_reg_reg[0]_0 ;
  wire \count_reg_reg[0]_1 ;
  wire [4:0]\count_reg_reg[0]_2 ;
  wire \count_reg_reg[1] ;
  wire \count_reg_reg[2] ;
  wire \count_reg_reg[3] ;
  wire \count_reg_reg[4] ;
  wire done;
  wire done_aux_i_1__4_n_0;
  wire [2:0]done_aux_reg_0;
  wire done_aux_reg_1;
  wire done_aux_reg_2;
  wire j0;
  wire \j[0]_i_1__1_n_0 ;
  wire \j_reg[0]_0 ;
  wire \j_reg[0]_1 ;
  wire \j_reg[0]_2 ;
  wire \j_reg[0]_3 ;
  wire \j_reg[0]_4 ;
  wire \j_reg[0]_5 ;
  wire \j_reg[1]_0 ;
  wire \j_reg[1]_1 ;
  wire \j_reg[1]_2 ;
  wire \j_reg[2]_0 ;
  wire [3:0]\j_reg[3]_0 ;
  wire \j_reg[3]_1 ;
  wire \j_reg[3]_2 ;
  wire \j_reg[3]_3 ;
  wire \j_reg[3]_4 ;
  wire next_out_8;
  wire [3:1]p_0_in__1;
  wire [4:0]plusOp__1;
  wire valid;
  wire valid_aux_i_1__0_n_0;
  wire valid_aux_i_2__1_n_0;
  wire valid_aux_i_3_n_0;
  wire [0:0]valid_aux_reg_0;
  wire [2:0]NLW_count1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry_O_UNCONNECTED;
  wire [2:0]NLW_count1_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_O_UNCONNECTED;

  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[3]_i_1__1 
       (.I0(valid),
        .I1(\count_reg_reg[0]_2 [2]),
        .O(valid_aux_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \FSM_onehot_state[4]_i_2__3 
       (.I0(\count_reg_reg[0]_2 [3]),
        .I1(next_out_8),
        .I2(done),
        .I3(\count_reg_reg[0]_2 [2]),
        .I4(\count_reg_reg[0]_2 [1]),
        .I5(\count_reg_reg[0]_2 [0]),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFEFEFEFEFEFEFE)) 
    acks_out_reg_i_2__4
       (.I0(\count_reg_reg[0]_2 [1]),
        .I1(\count_reg_reg[0]_2 [0]),
        .I2(\count_reg_reg[0]_2 [4]),
        .I3(done),
        .I4(\count_reg_reg[0]_2 [2]),
        .I5(valid),
        .O(\FSM_onehot_state_reg[1] ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry
       (.CI(1'b0),
        .CO({count1_carry_n_0,NLW_count1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry_O_UNCONNECTED[3:0]),
        .S({count1_carry__0_0,count1_carry_i_3__6_n_0,count1_carry_i_4__1_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__0
       (.CI(count1_carry_n_0),
        .CO({count1_carry__0_n_0,NLW_count1_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__0_O_UNCONNECTED[3:0]),
        .S(count1_carry__1_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__1
       (.CI(count1_carry__0_n_0),
        .CO({NLW_count1_carry__1_CO_UNCONNECTED[3],CO,NLW_count1_carry__1_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,S}));
  LUT2 #(
    .INIT(4'h9)) 
    count1_carry_i_10__0
       (.I0(\j_reg[3]_3 ),
        .I1(done_aux_reg_0[1]),
        .O(\count_reg_reg[1] ));
  LUT2 #(
    .INIT(4'h6)) 
    count1_carry_i_11__1
       (.I0(\j_reg[3]_0 [1]),
        .I1(count1_carry_i_18__0_n_0),
        .O(count1_carry_i_11__1_n_0));
  LUT5 #(
    .INIT(32'hBBBB888B)) 
    count1_carry_i_12__5
       (.I0(a_in_8[33]),
        .I1(Q[3]),
        .I2(\count[4]_i_18__0_n_0 ),
        .I3(Q[0]),
        .I4(count1_carry_i_14__0_n_0),
        .O(\j_reg[3]_2 ));
  LUT4 #(
    .INIT(16'h022F)) 
    count1_carry_i_13__0
       (.I0(\j_reg[3]_2 ),
        .I1(done_aux_reg_0[0]),
        .I2(done_aux_reg_0[1]),
        .I3(\j_reg[3]_3 ),
        .O(\count_reg_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hD0101010D0D010D0)) 
    count1_carry_i_14__0
       (.I0(\count[4]_i_40_n_0 ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(count1_carry_i_15_n_0),
        .I5(count1_carry_i_16__0_n_0),
        .O(count1_carry_i_14__0_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    count1_carry_i_15
       (.I0(a_in_8[23]),
        .I1(a_in_8[8]),
        .I2(\count[4]_i_7__0_0 ),
        .I3(a_in_8[15]),
        .I4(\count[4]_i_17__0_1 ),
        .I5(count1_carry_i_17__0_n_0),
        .O(count1_carry_i_15_n_0));
  LUT5 #(
    .INIT(32'hBBB8B8B8)) 
    count1_carry_i_15__0
       (.I0(a_in_7[0]),
        .I1(\j_reg[0]_0 ),
        .I2(count1_carry_i_8__1_0),
        .I3(count1_carry_i_25_n_0),
        .I4(\j_reg[3]_0 [0]),
        .O(\j_reg[0]_4 ));
  LUT6 #(
    .INIT(64'h30305F503F3F5F50)) 
    count1_carry_i_16__0
       (.I0(a_in_8[12]),
        .I1(a_in_8[27]),
        .I2(\count[4]_i_7__0_0 ),
        .I3(count1_carry_i_18_n_0),
        .I4(\count[4]_i_17__0_1 ),
        .I5(a_in_8[19]),
        .O(count1_carry_i_16__0_n_0));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    count1_carry_i_16__1
       (.I0(a_in_7[1]),
        .I1(\j_reg[0]_0 ),
        .I2(count1_carry_i_12__0),
        .I3(\j_reg[3]_0 [0]),
        .I4(count1_carry_i_25_n_0),
        .O(\j_reg[0]_1 ));
  LUT3 #(
    .INIT(8'hB8)) 
    count1_carry_i_17__0
       (.I0(a_in_8[0]),
        .I1(\count[4]_i_14__0_0 ),
        .I2(a_in_8[30]),
        .O(count1_carry_i_17__0_n_0));
  LUT4 #(
    .INIT(16'hD0DD)) 
    count1_carry_i_18
       (.I0(a_in_8[34]),
        .I1(\count[4]_i_14__0_0 ),
        .I2(\count[4]_i_17__0_0 ),
        .I3(a_in_8[4]),
        .O(count1_carry_i_18_n_0));
  LUT6 #(
    .INIT(64'h00000000FFF800F8)) 
    count1_carry_i_18__0
       (.I0(\j_reg[3]_0 [0]),
        .I1(count1_carry_i_25_n_0),
        .I2(count1_carry_i_8__1_0),
        .I3(\j_reg[0]_0 ),
        .I4(a_in_7[0]),
        .I5(D[0]),
        .O(count1_carry_i_18__0_n_0));
  LUT6 #(
    .INIT(64'hFF0D0EFF000D0E00)) 
    count1_carry_i_25
       (.I0(\j_reg[3]_0 [2]),
        .I1(count1_carry_i_16__1_0),
        .I2(count1_carry_i_16__1_1),
        .I3(\j_reg[3]_0 [1]),
        .I4(\j_reg[3]_0 [0]),
        .I5(count1_carry_i_16__1_2),
        .O(count1_carry_i_25_n_0));
  LUT4 #(
    .INIT(16'hA56A)) 
    count1_carry_i_28
       (.I0(\j_reg[3]_0 [3]),
        .I1(\j_reg[3]_0 [2]),
        .I2(\j_reg[3]_0 [0]),
        .I3(\j_reg[3]_0 [1]),
        .O(\j_reg[3]_4 ));
  LUT3 #(
    .INIT(8'h39)) 
    count1_carry_i_31
       (.I0(\j_reg[3]_0 [0]),
        .I1(\j_reg[3]_0 [2]),
        .I2(\j_reg[3]_0 [1]),
        .O(\j_reg[0]_5 ));
  LUT4 #(
    .INIT(16'h1E70)) 
    count1_carry_i_32__0
       (.I0(\j_reg[3]_0 [3]),
        .I1(\j_reg[3]_0 [0]),
        .I2(\j_reg[3]_0 [2]),
        .I3(\j_reg[3]_0 [1]),
        .O(\j_reg[3]_1 ));
  LUT6 #(
    .INIT(64'h0006000099696690)) 
    count1_carry_i_3__6
       (.I0(D[3]),
        .I1(count1_carry__1_i_1__6),
        .I2(count1_carry_0),
        .I3(\count_reg_reg[3] ),
        .I4(count1_carry_i_8__1_n_0),
        .I5(\j_reg[3]_0 [3]),
        .O(count1_carry_i_3__6_n_0));
  LUT4 #(
    .INIT(16'h3780)) 
    count1_carry_i_42
       (.I0(\j_reg[3]_0 [1]),
        .I1(\j_reg[3]_0 [2]),
        .I2(\j_reg[3]_0 [0]),
        .I3(\j_reg[3]_0 [3]),
        .O(\j_reg[1]_2 ));
  LUT4 #(
    .INIT(16'hC87F)) 
    count1_carry_i_47
       (.I0(\j_reg[3]_0 [1]),
        .I1(\j_reg[3]_0 [2]),
        .I2(\j_reg[3]_0 [0]),
        .I3(\j_reg[3]_0 [3]),
        .O(\j_reg[1]_1 ));
  LUT6 #(
    .INIT(64'h0090A00001080801)) 
    count1_carry_i_4__1
       (.I0(count1_carry_i_9__4_n_0),
        .I1(\count_reg_reg[3] ),
        .I2(count1_carry_1),
        .I3(count1_carry_i_11__1_n_0),
        .I4(count1_carry_2),
        .I5(\j_reg[3]_0 [0]),
        .O(count1_carry_i_4__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFDD0FDD00000)) 
    count1_carry_i_5__0
       (.I0(\j_reg[3]_2 ),
        .I1(done_aux_reg_0[0]),
        .I2(done_aux_reg_0[1]),
        .I3(\j_reg[3]_3 ),
        .I4(\j_reg[0]_2 ),
        .I5(done_aux_reg_0[2]),
        .O(\count_reg_reg[0] ));
  LUT4 #(
    .INIT(16'h6A56)) 
    count1_carry_i_7__1
       (.I0(\count_reg_reg[4] ),
        .I1(D[3]),
        .I2(count1_carry__1_i_1__6),
        .I3(count1_carry_i_8__1_n_0),
        .O(\count_reg_reg[3] ));
  LUT5 #(
    .INIT(32'h008E8EFF)) 
    count1_carry_i_8__1
       (.I0(count1_carry_i_18__0_n_0),
        .I1(\j_reg[0]_1 ),
        .I2(D[1]),
        .I3(D[2]),
        .I4(count1_carry_i_7__1_0),
        .O(count1_carry_i_8__1_n_0));
  LUT6 #(
    .INIT(64'h8E71718E718E8E71)) 
    count1_carry_i_9__4
       (.I0(count1_carry_i_18__0_n_0),
        .I1(\j_reg[0]_1 ),
        .I2(D[1]),
        .I3(\j_reg[3]_0 [2]),
        .I4(D[2]),
        .I5(count1_carry_i_7__1_0),
        .O(count1_carry_i_9__4_n_0));
  (* \PinAttr:I0:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_1__1 
       (.I0(count_reg[0]),
        .O(plusOp__1[0]));
  (* \PinAttr:I0:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count[1]_i_1__1 
       (.I0(count_reg[0]),
        .I1(count_reg[1]),
        .O(plusOp__1[1]));
  (* \PinAttr:I2:HOLD_DETOUR  = "184" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \count[2]_i_1__1 
       (.I0(count_reg[2]),
        .I1(count_reg[1]),
        .I2(count_reg[0]),
        .O(plusOp__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \count[3]_i_1__1 
       (.I0(count_reg[3]),
        .I1(count_reg[0]),
        .I2(count_reg[1]),
        .I3(count_reg[2]),
        .O(plusOp__1[3]));
  LUT5 #(
    .INIT(32'h5555CCF0)) 
    \count[4]_i_10__2 
       (.I0(a_in_8[35]),
        .I1(\count[4]_i_19__0_n_0 ),
        .I2(\j_reg[1]_0 ),
        .I3(Q[0]),
        .I4(Q[3]),
        .O(\j_reg[0]_2 ));
  LUT6 #(
    .INIT(64'h05F5030305F5F3F3)) 
    \count[4]_i_12__0 
       (.I0(a_in_8[26]),
        .I1(a_in_8[11]),
        .I2(\count[4]_i_7__0_0 ),
        .I3(\count[4]_i_22_n_0 ),
        .I4(\count[4]_i_17__0_1 ),
        .I5(a_in_8[18]),
        .O(\count[4]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'h303F5F5F303F5050)) 
    \count[4]_i_13__0 
       (.I0(a_in_8[14]),
        .I1(a_in_8[29]),
        .I2(\count[4]_i_7__0_0 ),
        .I3(a_in_8[22]),
        .I4(\count[4]_i_17__0_1 ),
        .I5(\count[4]_i_6__3_0 ),
        .O(\count[4]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \count[4]_i_14__0 
       (.I0(\count[4]_i_25__0_n_0 ),
        .I1(\count[4]_i_26__0_n_0 ),
        .I2(\count[4]_i_7__0 ),
        .I3(\count[4]_i_28__0_n_0 ),
        .I4(\count[4]_i_7__0_0 ),
        .I5(\count[4]_i_29__0_n_0 ),
        .O(\count[4]_i_14__0_n_0 ));
  LUT6 #(
    .INIT(64'hCFC0AFAFCFC0A0A0)) 
    \count[4]_i_16__0 
       (.I0(a_in_8[17]),
        .I1(\count[4]_i_32_n_0 ),
        .I2(\count[4]_i_7__0_0 ),
        .I3(a_in_8[25]),
        .I4(\count[4]_i_17__0_1 ),
        .I5(a_in_8[10]),
        .O(\FSM_onehot_state_reg[3]_0 ));
  LUT6 #(
    .INIT(64'h5050C0CF5F5FC0CF)) 
    \count[4]_i_17__0 
       (.I0(\count[4]_i_33__0_n_0 ),
        .I1(\count[4]_i_34__0_n_0 ),
        .I2(\count[4]_i_7__0 ),
        .I3(\count[4]_i_35__0_n_0 ),
        .I4(\count[4]_i_7__0_0 ),
        .I5(\count[4]_i_36__0_n_0 ),
        .O(\j_reg[0]_3 ));
  LUT6 #(
    .INIT(64'hBE82FFFFBE820000)) 
    \count[4]_i_18__0 
       (.I0(\count[4]_i_37__0_n_0 ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\count[4]_i_38__0_n_0 ),
        .I4(Q[1]),
        .I5(\count[4]_i_39__0_n_0 ),
        .O(\count[4]_i_18__0_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \count[4]_i_19__0 
       (.I0(\count[4]_i_40_n_0 ),
        .I1(Q[1]),
        .I2(\j_reg[0]_3 ),
        .O(\count[4]_i_19__0_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \count[4]_i_1__0 
       (.I0(\j_reg[0]_0 ),
        .I1(done),
        .I2(\count_reg[0]_0 ),
        .O(count));
  LUT3 #(
    .INIT(8'hB8)) 
    \count[4]_i_20__0 
       (.I0(\count[4]_i_39__0_n_0 ),
        .I1(Q[1]),
        .I2(\count[4]_i_14__0_n_0 ),
        .O(\j_reg[1]_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \count[4]_i_22 
       (.I0(a_in_8[3]),
        .I1(\count[4]_i_17__0_0 ),
        .I2(a_in_8[33]),
        .O(\count[4]_i_22_n_0 ));
  LUT3 #(
    .INIT(8'h1D)) 
    \count[4]_i_25__0 
       (.I0(a_in_8[13]),
        .I1(\count[4]_i_17__0_1 ),
        .I2(a_in_8[28]),
        .O(\count[4]_i_25__0_n_0 ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \count[4]_i_26__0 
       (.I0(a_in_8[5]),
        .I1(\count[4]_i_14__0_0 ),
        .I2(a_in_8[35]),
        .I3(\count[4]_i_17__0_1 ),
        .I4(a_in_8[20]),
        .O(\count[4]_i_26__0_n_0 ));
  LUT5 #(
    .INIT(32'h470047FF)) 
    \count[4]_i_28__0 
       (.I0(a_in_8[1]),
        .I1(\count[4]_i_17__0_0 ),
        .I2(a_in_8[31]),
        .I3(\count[4]_i_17__0_1 ),
        .I4(a_in_8[16]),
        .O(\count[4]_i_28__0_n_0 ));
  LUT3 #(
    .INIT(8'h47)) 
    \count[4]_i_29__0 
       (.I0(a_in_8[24]),
        .I1(\count[4]_i_17__0_1 ),
        .I2(a_in_8[9]),
        .O(\count[4]_i_29__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count[4]_i_2__1 
       (.I0(count_reg[4]),
        .I1(count_reg[2]),
        .I2(count_reg[1]),
        .I3(count_reg[0]),
        .I4(count_reg[3]),
        .O(plusOp__1[4]));
  LUT6 #(
    .INIT(64'h0000000000FF4747)) 
    \count[4]_i_31__0 
       (.I0(a_in_8[36]),
        .I1(\count[4]_i_17__0_0 ),
        .I2(a_in_8[6]),
        .I3(a_in_8[21]),
        .I4(\count[4]_i_17__0_1 ),
        .I5(\count[4]_i_7__0_0 ),
        .O(\FSM_onehot_state_reg[3] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \count[4]_i_32 
       (.I0(a_in_8[2]),
        .I1(\count[4]_i_17__0_0 ),
        .I2(a_in_8[32]),
        .O(\count[4]_i_32_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \count[4]_i_33__0 
       (.I0(a_in_8[27]),
        .I1(\count[4]_i_17__0_1 ),
        .I2(a_in_8[12]),
        .O(\count[4]_i_33__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000D0DDFFFFD0DD)) 
    \count[4]_i_34__0 
       (.I0(a_in_8[34]),
        .I1(\count[4]_i_14__0_0 ),
        .I2(\count[4]_i_17__0_0 ),
        .I3(a_in_8[4]),
        .I4(\count[4]_i_17__0_1 ),
        .I5(a_in_8[19]),
        .O(\count[4]_i_34__0_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \count[4]_i_35__0 
       (.I0(a_in_8[23]),
        .I1(\count[4]_i_17__0_1 ),
        .I2(a_in_8[8]),
        .O(\count[4]_i_35__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \count[4]_i_36__0 
       (.I0(a_in_8[0]),
        .I1(\count[4]_i_17__0_0 ),
        .I2(a_in_8[30]),
        .I3(\count[4]_i_17__0_1 ),
        .I4(a_in_8[15]),
        .O(\count[4]_i_36__0_n_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \count[4]_i_37__0 
       (.I0(a_in_8[16]),
        .I1(\count[4]_i_43__0_n_0 ),
        .I2(a_in_8[24]),
        .I3(\count[4]_i_17__0_1 ),
        .I4(a_in_8[9]),
        .I5(\count[4]_i_7__0_0 ),
        .O(\count[4]_i_37__0_n_0 ));
  LUT6 #(
    .INIT(64'h3030505F3F3F505F)) 
    \count[4]_i_38__0 
       (.I0(a_in_8[13]),
        .I1(a_in_8[28]),
        .I2(\count[4]_i_7__0_0 ),
        .I3(\count[4]_i_44__0_n_0 ),
        .I4(\count[4]_i_17__0_1 ),
        .I5(a_in_8[20]),
        .O(\count[4]_i_38__0_n_0 ));
  LUT6 #(
    .INIT(64'hCFC05F5FCFC05050)) 
    \count[4]_i_39__0 
       (.I0(\count[4]_i_45__0_n_0 ),
        .I1(\count[4]_i_46__0_n_0 ),
        .I2(\count[4]_i_7__0 ),
        .I3(\count[4]_i_47__0_n_0 ),
        .I4(\count[4]_i_7__0_0 ),
        .I5(\count[4]_i_48__0_n_0 ),
        .O(\count[4]_i_39__0_n_0 ));
  LUT4 #(
    .INIT(16'hFF80)) 
    \count[4]_i_3__5 
       (.I0(\j_reg[3]_0 [0]),
        .I1(\j_reg[3]_0 [2]),
        .I2(\j_reg[3]_0 [1]),
        .I3(\j_reg[3]_0 [3]),
        .O(\j_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hCFC05F50CFCF5F50)) 
    \count[4]_i_40 
       (.I0(\count[4]_i_49__0_n_0 ),
        .I1(\count[4]_i_50_n_0 ),
        .I2(\count[4]_i_7__0 ),
        .I3(\FSM_onehot_state_reg[3] ),
        .I4(\count[4]_i_7__0_0 ),
        .I5(\count[4]_i_19__0_0 ),
        .O(\count[4]_i_40_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \count[4]_i_43__0 
       (.I0(a_in_8[1]),
        .I1(\count[4]_i_14__0_0 ),
        .I2(a_in_8[31]),
        .O(\count[4]_i_43__0_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \count[4]_i_44__0 
       (.I0(a_in_8[5]),
        .I1(\count[4]_i_14__0_0 ),
        .I2(a_in_8[35]),
        .O(\count[4]_i_44__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \count[4]_i_45__0 
       (.I0(a_in_8[18]),
        .I1(\count[4]_i_17__0_1 ),
        .I2(a_in_8[3]),
        .I3(\count[4]_i_14__0_0 ),
        .I4(a_in_8[33]),
        .O(\count[4]_i_45__0_n_0 ));
  LUT3 #(
    .INIT(8'h47)) 
    \count[4]_i_46__0 
       (.I0(a_in_8[26]),
        .I1(\count[4]_i_17__0_1 ),
        .I2(a_in_8[11]),
        .O(\count[4]_i_46__0_n_0 ));
  LUT3 #(
    .INIT(8'h1D)) 
    \count[4]_i_47__0 
       (.I0(a_in_8[14]),
        .I1(\count[4]_i_17__0_1 ),
        .I2(a_in_8[29]),
        .O(\count[4]_i_47__0_n_0 ));
  LUT6 #(
    .INIT(64'h4447444744477777)) 
    \count[4]_i_48__0 
       (.I0(a_in_8[22]),
        .I1(\count[4]_i_17__0_1 ),
        .I2(\count[4]_i_14__0_0 ),
        .I3(a_in_8[37]),
        .I4(\count[4]_i_17__0_0 ),
        .I5(a_in_8[7]),
        .O(\count[4]_i_48__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \count[4]_i_49__0 
       (.I0(a_in_8[17]),
        .I1(\count[4]_i_17__0_1 ),
        .I2(a_in_8[2]),
        .I3(\count[4]_i_14__0_0 ),
        .I4(a_in_8[32]),
        .O(\count[4]_i_49__0_n_0 ));
  LUT3 #(
    .INIT(8'h47)) 
    \count[4]_i_50 
       (.I0(a_in_8[25]),
        .I1(\count[4]_i_17__0_1 ),
        .I2(a_in_8[10]),
        .O(\count[4]_i_50_n_0 ));
  LUT6 #(
    .INIT(64'h55556665AAAA6665)) 
    \count[4]_i_5__0 
       (.I0(D[4]),
        .I1(\count[4]_i_6__4_n_0 ),
        .I2(\j_reg[3]_0 [0]),
        .I3(\count[4]_i_4__5 ),
        .I4(\j_reg[0]_0 ),
        .I5(a_in_7[2]),
        .O(\count_reg_reg[4] ));
  LUT6 #(
    .INIT(64'h000004070F0F0407)) 
    \count[4]_i_6__3 
       (.I0(\count[4]_i_12__0_n_0 ),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(\count[4]_i_13__0_n_0 ),
        .I4(Q[1]),
        .I5(\count[4]_i_14__0_n_0 ),
        .O(\j_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hB1BBB11100000000)) 
    \count[4]_i_6__4 
       (.I0(\j_reg[3]_0 [1]),
        .I1(\count[4]_i_5__0_0 ),
        .I2(\count[4]_i_5__0_1 ),
        .I3(\j_reg[3]_0 [2]),
        .I4(\count[4]_i_5__0_2 ),
        .I5(\j_reg[3]_0 [0]),
        .O(\count[4]_i_6__4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \count[4]_i_8__0 
       (.I0(\j_reg[3]_2 ),
        .I1(done_aux_reg_0[0]),
        .O(\count_reg_reg[0]_1 ));
  LUT5 #(
    .INIT(32'h74777444)) 
    \count[4]_i_9__3 
       (.I0(a_in_8[34]),
        .I1(Q[3]),
        .I2(\count[4]_i_18__0_n_0 ),
        .I3(Q[0]),
        .I4(\count[4]_i_19__0_n_0 ),
        .O(\j_reg[3]_3 ));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__1[0]),
        .Q(count_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__1[1]),
        .Q(count_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__1[2]),
        .Q(count_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__1[3]),
        .Q(count_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__1[4]),
        .Q(count_reg[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFF008000FF)) 
    done_aux_i_1__4
       (.I0(\j_reg[3]_0 [1]),
        .I1(\j_reg[3]_0 [2]),
        .I2(\j_reg[3]_0 [0]),
        .I3(\j_reg[3]_0 [3]),
        .I4(\count_reg[0]_0 ),
        .I5(done),
        .O(done_aux_i_1__4_n_0));
  LUT6 #(
    .INIT(64'h0000000000000096)) 
    done_aux_i_2__0
       (.I0(\j_reg[0]_2 ),
        .I1(done_aux_reg_0[2]),
        .I2(\count_reg_reg[0]_0 ),
        .I3(\count_reg_reg[1] ),
        .I4(done_aux_reg_1),
        .I5(done_aux_reg_2),
        .O(\count_reg_reg[2] ));
  FDCE #(
    .INIT(1'b0)) 
    done_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(done_aux_i_1__4_n_0),
        .Q(done));
  LUT1 #(
    .INIT(2'h1)) 
    \j[0]_i_1__1 
       (.I0(\j_reg[3]_0 [0]),
        .O(\j[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \j[1]_i_1__1 
       (.I0(\j_reg[3]_0 [1]),
        .I1(\j_reg[3]_0 [0]),
        .O(p_0_in__1[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \j[2]_i_1__1 
       (.I0(\j_reg[3]_0 [2]),
        .I1(\j_reg[3]_0 [0]),
        .I2(\j_reg[3]_0 [1]),
        .O(p_0_in__1[2]));
  LUT5 #(
    .INIT(32'h01111111)) 
    \j[3]_i_1__1 
       (.I0(done),
        .I1(\j_reg[3]_0 [3]),
        .I2(\j_reg[3]_0 [1]),
        .I3(\j_reg[3]_0 [2]),
        .I4(\j_reg[3]_0 [0]),
        .O(j0));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \j[3]_i_2__0 
       (.I0(\j_reg[3]_0 [0]),
        .I1(\j_reg[3]_0 [2]),
        .I2(\j_reg[3]_0 [1]),
        .O(p_0_in__1[3]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[0] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(\j[0]_i_1__1_n_0 ),
        .Q(\j_reg[3]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[1] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in__1[1]),
        .Q(\j_reg[3]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[2] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in__1[2]),
        .Q(\j_reg[3]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[3] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in__1[3]),
        .Q(\j_reg[3]_0 [3]));
  LUT5 #(
    .INIT(32'hFFFF0200)) 
    valid_aux_i_1__0
       (.I0(valid_aux_i_2__1_n_0),
        .I1(count_reg[4]),
        .I2(count_reg[3]),
        .I3(valid_aux_i_3_n_0),
        .I4(valid),
        .O(valid_aux_i_1__0_n_0));
  (* \PinAttr:I2:HOLD_DETOUR  = "184" *) 
  LUT3 #(
    .INIT(8'h80)) 
    valid_aux_i_2__1
       (.I0(count_reg[2]),
        .I1(count_reg[1]),
        .I2(count_reg[0]),
        .O(valid_aux_i_2__1_n_0));
  LUT4 #(
    .INIT(16'h0080)) 
    valid_aux_i_3
       (.I0(\j_reg[3]_0 [0]),
        .I1(\j_reg[3]_0 [2]),
        .I2(\j_reg[3]_0 [1]),
        .I3(\j_reg[3]_0 [3]),
        .O(valid_aux_i_3_n_0));
  FDCE #(
    .INIT(1'b0)) 
    valid_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(valid_aux_i_1__0_n_0),
        .Q(valid));
endmodule

(* ORIG_REF_NAME = "ctrl_logic" *) 
module design_1_top_nqueens_0_0_ctrl_logic__parameterized2
   (valid,
    \j_reg[0]_0 ,
    \j_reg[1]_0 ,
    \j_reg[0]_1 ,
    \j_reg[1]_1 ,
    \j_reg[3]_0 ,
    \j_reg[3]_1 ,
    \FSM_onehot_state_reg[3] ,
    \FSM_onehot_state_reg[3]_0 ,
    \j_reg[2]_0 ,
    \j_reg[3]_2 ,
    \FSM_onehot_state_reg[3]_1 ,
    \j_reg[0]_2 ,
    \j_reg[0]_3 ,
    \j_reg[3]_3 ,
    E,
    \FSM_onehot_state_reg[1] ,
    valid_aux_reg_0,
    \j_reg[3]_4 ,
    clk,
    AR,
    \count[4]_i_3__0_0 ,
    \count[4]_i_3__0_1 ,
    count1_carry_i_12__1_0,
    \count[4]_i_8__2_0 ,
    \count_reg[0]_0 ,
    Q,
    \count[4]_i_5__0 ,
    count1_carry__1_i_3__6,
    \count[4]_i_6__4 ,
    \count[4]_i_6__4_0 ,
    a_in_7,
    count1_carry_i_25,
    count1_carry_i_41_0,
    count1_carry_i_19_0,
    count1_carry_0,
    D,
    a_in_6,
    \count[4]_i_3__0_2 ,
    \count[4]_i_3__0_3 ,
    \count[4]_i_7__4_0 ,
    \count[4]_i_7__4_1 ,
    \count[4]_i_8__2_1 ,
    count1_carry_i_12__1_1,
    \count[4]_i_22__0_0 ,
    \count[4]_i_21__1_0 ,
    \count_reg_reg[0] ,
    next_out_7);
  output valid;
  output \j_reg[0]_0 ;
  output \j_reg[1]_0 ;
  output \j_reg[0]_1 ;
  output \j_reg[1]_1 ;
  output \j_reg[3]_0 ;
  output \j_reg[3]_1 ;
  output \FSM_onehot_state_reg[3] ;
  output \FSM_onehot_state_reg[3]_0 ;
  output \j_reg[2]_0 ;
  output \j_reg[3]_2 ;
  output \FSM_onehot_state_reg[3]_1 ;
  output \j_reg[0]_2 ;
  output \j_reg[0]_3 ;
  output \j_reg[3]_3 ;
  output [0:0]E;
  output \FSM_onehot_state_reg[1] ;
  output [0:0]valid_aux_reg_0;
  output \j_reg[3]_4 ;
  input clk;
  input [0:0]AR;
  input \count[4]_i_3__0_0 ;
  input \count[4]_i_3__0_1 ;
  input count1_carry_i_12__1_0;
  input \count[4]_i_8__2_0 ;
  input \count_reg[0]_0 ;
  input [4:0]Q;
  input [2:0]\count[4]_i_5__0 ;
  input count1_carry__1_i_3__6;
  input \count[4]_i_6__4 ;
  input \count[4]_i_6__4_0 ;
  input [29:0]a_in_7;
  input count1_carry_i_25;
  input count1_carry_i_41_0;
  input count1_carry_i_19_0;
  input count1_carry_0;
  input [4:0]D;
  input [4:0]a_in_6;
  input \count[4]_i_3__0_2 ;
  input \count[4]_i_3__0_3 ;
  input \count[4]_i_7__4_0 ;
  input \count[4]_i_7__4_1 ;
  input \count[4]_i_8__2_1 ;
  input count1_carry_i_12__1_1;
  input \count[4]_i_22__0_0 ;
  input \count[4]_i_21__1_0 ;
  input [4:0]\count_reg_reg[0] ;
  input next_out_7;

  wire [0:0]AR;
  wire [4:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state_reg[1] ;
  wire \FSM_onehot_state_reg[3] ;
  wire \FSM_onehot_state_reg[3]_0 ;
  wire \FSM_onehot_state_reg[3]_1 ;
  wire [4:0]Q;
  wire [4:0]a_in_6;
  wire [29:0]a_in_7;
  wire clk;
  wire count;
  wire count1;
  wire count1_carry_0;
  wire count1_carry__0_i_1__7_n_0;
  wire count1_carry__0_i_2__7_n_0;
  wire count1_carry__0_i_3__7_n_0;
  wire count1_carry__0_i_4__7_n_0;
  wire count1_carry__0_n_0;
  wire count1_carry__1_i_1__7_n_0;
  wire count1_carry__1_i_2__7_n_0;
  wire count1_carry__1_i_3__6;
  wire count1_carry__1_i_3__7_n_0;
  wire count1_carry_i_10__1_n_0;
  wire count1_carry_i_11__2_n_0;
  wire count1_carry_i_12__1_0;
  wire count1_carry_i_12__1_1;
  wire count1_carry_i_12__1_n_0;
  wire count1_carry_i_13__2_n_0;
  wire count1_carry_i_14__1_n_0;
  wire count1_carry_i_19_0;
  wire count1_carry_i_19_n_0;
  wire count1_carry_i_1__7_n_0;
  wire count1_carry_i_20_n_0;
  wire count1_carry_i_21_n_0;
  wire count1_carry_i_25;
  wire count1_carry_i_27_n_0;
  wire count1_carry_i_29_n_0;
  wire count1_carry_i_2__7_n_0;
  wire count1_carry_i_30_n_0;
  wire count1_carry_i_33_n_0;
  wire count1_carry_i_34_n_0;
  wire count1_carry_i_35_n_0;
  wire count1_carry_i_37_n_0;
  wire count1_carry_i_38_n_0;
  wire count1_carry_i_39_n_0;
  wire count1_carry_i_3__7_n_0;
  wire count1_carry_i_40_n_0;
  wire count1_carry_i_41_0;
  wire count1_carry_i_43_n_0;
  wire count1_carry_i_44_n_0;
  wire count1_carry_i_45_n_0;
  wire count1_carry_i_46_n_0;
  wire count1_carry_i_4__2_n_0;
  wire count1_carry_i_5__2_n_0;
  wire count1_carry_i_6__2_n_0;
  wire count1_carry_i_7__2_n_0;
  wire count1_carry_i_9__0_n_0;
  wire count1_carry_n_0;
  wire \count[4]_i_10__0_n_0 ;
  wire \count[4]_i_11__0_n_0 ;
  wire \count[4]_i_13__1_n_0 ;
  wire \count[4]_i_18__1_n_0 ;
  wire \count[4]_i_19__1_n_0 ;
  wire \count[4]_i_20__2_n_0 ;
  wire \count[4]_i_21__1_0 ;
  wire \count[4]_i_21__1_n_0 ;
  wire \count[4]_i_22__0_0 ;
  wire \count[4]_i_22__0_n_0 ;
  wire \count[4]_i_29__1_n_0 ;
  wire \count[4]_i_32__0_n_0 ;
  wire \count[4]_i_3__0_0 ;
  wire \count[4]_i_3__0_1 ;
  wire \count[4]_i_3__0_2 ;
  wire \count[4]_i_3__0_3 ;
  wire \count[4]_i_3__0_n_0 ;
  wire \count[4]_i_4__1_n_0 ;
  wire [2:0]\count[4]_i_5__0 ;
  wire \count[4]_i_6__1_n_0 ;
  wire \count[4]_i_6__4 ;
  wire \count[4]_i_6__4_0 ;
  wire \count[4]_i_7__4_0 ;
  wire \count[4]_i_7__4_1 ;
  wire \count[4]_i_7__4_n_0 ;
  wire \count[4]_i_8__2_0 ;
  wire \count[4]_i_8__2_1 ;
  wire \count[4]_i_8__2_n_0 ;
  wire [4:0]count_reg;
  wire \count_reg[0]_0 ;
  wire [4:0]\count_reg_reg[0] ;
  wire done;
  wire done_aux_i_1__6_n_0;
  wire j0;
  wire \j[0]_i_1__2_n_0 ;
  wire [3:0]j_reg;
  wire \j_reg[0]_0 ;
  wire \j_reg[0]_1 ;
  wire \j_reg[0]_2 ;
  wire \j_reg[0]_3 ;
  wire \j_reg[1]_0 ;
  wire \j_reg[1]_1 ;
  wire \j_reg[2]_0 ;
  wire \j_reg[3]_0 ;
  wire \j_reg[3]_1 ;
  wire \j_reg[3]_2 ;
  wire \j_reg[3]_3 ;
  wire \j_reg[3]_4 ;
  wire next_out_7;
  wire [3:1]p_0_in__2;
  wire [4:0]plusOp__2;
  wire valid;
  wire valid_aux_i_1__1_n_0;
  wire valid_aux_i_2__7_n_0;
  wire [0:0]valid_aux_reg_0;
  wire [2:0]NLW_count1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry_O_UNCONNECTED;
  wire [2:0]NLW_count1_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_O_UNCONNECTED;

  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[3]_i_1__2 
       (.I0(valid),
        .I1(\count_reg_reg[0] [2]),
        .O(valid_aux_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \FSM_onehot_state[4]_i_2__4 
       (.I0(\count_reg_reg[0] [3]),
        .I1(next_out_7),
        .I2(done),
        .I3(\count_reg_reg[0] [2]),
        .I4(\count_reg_reg[0] [1]),
        .I5(\count_reg_reg[0] [0]),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFEFEFEFEFEFEFE)) 
    acks_out_reg_i_2__5
       (.I0(\count_reg_reg[0] [1]),
        .I1(\count_reg_reg[0] [0]),
        .I2(\count_reg_reg[0] [4]),
        .I3(done),
        .I4(\count_reg_reg[0] [2]),
        .I5(valid),
        .O(\FSM_onehot_state_reg[1] ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry
       (.CI(1'b0),
        .CO({count1_carry_n_0,NLW_count1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry_O_UNCONNECTED[3:0]),
        .S({count1_carry_i_1__7_n_0,count1_carry_i_2__7_n_0,count1_carry_i_3__7_n_0,count1_carry_i_4__2_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__0
       (.CI(count1_carry_n_0),
        .CO({count1_carry__0_n_0,NLW_count1_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__0_O_UNCONNECTED[3:0]),
        .S({count1_carry__0_i_1__7_n_0,count1_carry__0_i_2__7_n_0,count1_carry__0_i_3__7_n_0,count1_carry__0_i_4__7_n_0}));
  LUT6 #(
    .INIT(64'h000F000F000F6669)) 
    count1_carry__0_i_1__7
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__2_n_0),
        .I2(count1_carry_i_6__2_n_0),
        .I3(j_reg[3]),
        .I4(\count[4]_i_4__1_n_0 ),
        .I5(count1_carry_i_7__2_n_0),
        .O(count1_carry__0_i_1__7_n_0));
  LUT6 #(
    .INIT(64'h000F000F000F6669)) 
    count1_carry__0_i_2__7
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__2_n_0),
        .I2(count1_carry_i_6__2_n_0),
        .I3(j_reg[3]),
        .I4(\count[4]_i_4__1_n_0 ),
        .I5(count1_carry_i_7__2_n_0),
        .O(count1_carry__0_i_2__7_n_0));
  LUT6 #(
    .INIT(64'h000F000F000F6669)) 
    count1_carry__0_i_3__7
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__2_n_0),
        .I2(count1_carry_i_6__2_n_0),
        .I3(j_reg[3]),
        .I4(\count[4]_i_4__1_n_0 ),
        .I5(count1_carry_i_7__2_n_0),
        .O(count1_carry__0_i_3__7_n_0));
  LUT6 #(
    .INIT(64'h000F000F000F6669)) 
    count1_carry__0_i_4__7
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__2_n_0),
        .I2(count1_carry_i_6__2_n_0),
        .I3(j_reg[3]),
        .I4(\count[4]_i_4__1_n_0 ),
        .I5(count1_carry_i_7__2_n_0),
        .O(count1_carry__0_i_4__7_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__1
       (.CI(count1_carry__0_n_0),
        .CO({NLW_count1_carry__1_CO_UNCONNECTED[3],count1,NLW_count1_carry__1_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,count1_carry__1_i_1__7_n_0,count1_carry__1_i_2__7_n_0,count1_carry__1_i_3__7_n_0}));
  LUT6 #(
    .INIT(64'h000F000F000F0009)) 
    count1_carry__1_i_1__7
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__2_n_0),
        .I2(j_reg[3]),
        .I3(count1_carry_i_6__2_n_0),
        .I4(\count[4]_i_4__1_n_0 ),
        .I5(count1_carry_i_7__2_n_0),
        .O(count1_carry__1_i_1__7_n_0));
  LUT6 #(
    .INIT(64'h000F000F000F6669)) 
    count1_carry__1_i_2__7
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__2_n_0),
        .I2(count1_carry_i_6__2_n_0),
        .I3(j_reg[3]),
        .I4(\count[4]_i_4__1_n_0 ),
        .I5(count1_carry_i_7__2_n_0),
        .O(count1_carry__1_i_2__7_n_0));
  LUT6 #(
    .INIT(64'h000F000F000F6669)) 
    count1_carry__1_i_3__7
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__2_n_0),
        .I2(count1_carry_i_6__2_n_0),
        .I3(j_reg[3]),
        .I4(\count[4]_i_4__1_n_0 ),
        .I5(count1_carry_i_7__2_n_0),
        .O(count1_carry__1_i_3__7_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    count1_carry_i_10__1
       (.I0(\count[4]_i_10__0_n_0 ),
        .I1(D[1]),
        .O(count1_carry_i_10__1_n_0));
  LUT6 #(
    .INIT(64'h9669696969969696)) 
    count1_carry_i_11__2
       (.I0(count1_carry_i_13__2_n_0),
        .I1(D[2]),
        .I2(\count[4]_i_11__0_n_0 ),
        .I3(j_reg[1]),
        .I4(j_reg[0]),
        .I5(j_reg[2]),
        .O(count1_carry_i_11__2_n_0));
  LUT6 #(
    .INIT(64'h00000000E2E2E2EE)) 
    count1_carry_i_12__1
       (.I0(a_in_6[0]),
        .I1(\count[4]_i_6__1_n_0 ),
        .I2(\count[4]_i_20__2_n_0 ),
        .I3(j_reg[0]),
        .I4(\count[4]_i_19__1_n_0 ),
        .I5(D[0]),
        .O(count1_carry_i_12__1_n_0));
  LUT6 #(
    .INIT(64'h282828EBEBEB28EB)) 
    count1_carry_i_13__1
       (.I0(count1_carry_i_19_n_0),
        .I1(\count[4]_i_5__0 [1]),
        .I2(\count[4]_i_5__0 [0]),
        .I3(count1_carry_i_20_n_0),
        .I4(\count[4]_i_5__0 [2]),
        .I5(count1_carry_i_21_n_0),
        .O(\j_reg[1]_0 ));
  LUT3 #(
    .INIT(8'h2B)) 
    count1_carry_i_13__2
       (.I0(count1_carry_i_12__1_n_0),
        .I1(D[1]),
        .I2(\count[4]_i_10__0_n_0 ),
        .O(count1_carry_i_13__2_n_0));
  LUT4 #(
    .INIT(16'hC55C)) 
    count1_carry_i_14__1
       (.I0(\j_reg[3]_0 ),
        .I1(\j_reg[3]_1 ),
        .I2(\count[4]_i_5__0 [1]),
        .I3(\count[4]_i_5__0 [0]),
        .O(count1_carry_i_14__1_n_0));
  LUT5 #(
    .INIT(32'h77444747)) 
    count1_carry_i_17__1
       (.I0(Q[2]),
        .I1(count1_carry__1_i_3__6),
        .I2(\j_reg[1]_1 ),
        .I3(count1_carry_i_14__1_n_0),
        .I4(\count[4]_i_5__0 [0]),
        .O(\j_reg[0]_1 ));
  LUT5 #(
    .INIT(32'h8B8B00FF)) 
    count1_carry_i_19
       (.I0(count1_carry_i_27_n_0),
        .I1(\count[4]_i_6__4 ),
        .I2(count1_carry_i_29_n_0),
        .I3(count1_carry_i_30_n_0),
        .I4(\count[4]_i_6__4_0 ),
        .O(count1_carry_i_19_n_0));
  LUT6 #(
    .INIT(64'h000F000F000F6669)) 
    count1_carry_i_1__7
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__2_n_0),
        .I2(count1_carry_i_6__2_n_0),
        .I3(j_reg[3]),
        .I4(\count[4]_i_4__1_n_0 ),
        .I5(count1_carry_i_7__2_n_0),
        .O(count1_carry_i_1__7_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    count1_carry_i_20
       (.I0(a_in_7[10]),
        .I1(a_in_7[26]),
        .I2(\count[4]_i_6__4 ),
        .I3(a_in_7[18]),
        .I4(count1_carry_i_25),
        .I5(count1_carry_i_33_n_0),
        .O(count1_carry_i_20_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    count1_carry_i_21
       (.I0(a_in_7[6]),
        .I1(a_in_7[22]),
        .I2(\count[4]_i_6__4 ),
        .I3(a_in_7[14]),
        .I4(count1_carry_i_25),
        .I5(Q[0]),
        .O(count1_carry_i_21_n_0));
  LUT5 #(
    .INIT(32'hFF008D8D)) 
    count1_carry_i_22
       (.I0(\count[4]_i_6__4 ),
        .I1(count1_carry_i_34_n_0),
        .I2(count1_carry_i_35_n_0),
        .I3(\FSM_onehot_state_reg[3]_0 ),
        .I4(\count[4]_i_6__4_0 ),
        .O(\j_reg[3]_0 ));
  LUT5 #(
    .INIT(32'hCF035555)) 
    count1_carry_i_23
       (.I0(\FSM_onehot_state_reg[3] ),
        .I1(\count[4]_i_6__4 ),
        .I2(count1_carry_i_37_n_0),
        .I3(count1_carry_i_38_n_0),
        .I4(\count[4]_i_6__4_0 ),
        .O(\j_reg[3]_1 ));
  LUT6 #(
    .INIT(64'h0000E0FF0000E000)) 
    count1_carry_i_24
       (.I0(count1_carry_i_30_n_0),
        .I1(\count[4]_i_5__0 [2]),
        .I2(count1_carry_i_39_n_0),
        .I3(\count[4]_i_5__0 [1]),
        .I4(\count[4]_i_5__0 [0]),
        .I5(count1_carry_i_40_n_0),
        .O(\j_reg[2]_0 ));
  LUT4 #(
    .INIT(16'h28EB)) 
    count1_carry_i_26
       (.I0(count1_carry_i_40_n_0),
        .I1(\count[4]_i_5__0 [1]),
        .I2(\count[4]_i_5__0 [0]),
        .I3(count1_carry_i_19_n_0),
        .O(\j_reg[1]_1 ));
  LUT3 #(
    .INIT(8'h47)) 
    count1_carry_i_27
       (.I0(a_in_7[8]),
        .I1(count1_carry_i_25),
        .I2(a_in_7[24]),
        .O(count1_carry_i_27_n_0));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    count1_carry_i_29
       (.I0(a_in_7[16]),
        .I1(count1_carry_i_25),
        .I2(a_in_7[0]),
        .I3(count1_carry_i_19_0),
        .I4(Q[2]),
        .O(count1_carry_i_29_n_0));
  LUT6 #(
    .INIT(64'h000F000F000F6669)) 
    count1_carry_i_2__7
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__2_n_0),
        .I2(count1_carry_i_6__2_n_0),
        .I3(j_reg[3]),
        .I4(\count[4]_i_4__1_n_0 ),
        .I5(count1_carry_i_7__2_n_0),
        .O(count1_carry_i_2__7_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    count1_carry_i_30
       (.I0(a_in_7[4]),
        .I1(a_in_7[20]),
        .I2(\count[4]_i_6__4 ),
        .I3(a_in_7[12]),
        .I4(count1_carry_i_25),
        .I5(a_in_7[28]),
        .O(count1_carry_i_30_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    count1_carry_i_33
       (.I0(a_in_7[2]),
        .I1(count1_carry_i_19_0),
        .I2(Q[4]),
        .O(count1_carry_i_33_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    count1_carry_i_34
       (.I0(a_in_7[3]),
        .I1(count1_carry_i_25),
        .I2(a_in_7[19]),
        .O(count1_carry_i_34_n_0));
  LUT3 #(
    .INIT(8'h47)) 
    count1_carry_i_35
       (.I0(a_in_7[11]),
        .I1(count1_carry_i_25),
        .I2(a_in_7[27]),
        .O(count1_carry_i_35_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    count1_carry_i_36
       (.I0(a_in_7[5]),
        .I1(a_in_7[21]),
        .I2(\count[4]_i_6__4 ),
        .I3(a_in_7[13]),
        .I4(count1_carry_i_25),
        .I5(a_in_7[29]),
        .O(\FSM_onehot_state_reg[3] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    count1_carry_i_37
       (.I0(a_in_7[17]),
        .I1(count1_carry_i_25),
        .I2(a_in_7[1]),
        .I3(count1_carry_i_19_0),
        .I4(Q[3]),
        .O(count1_carry_i_37_n_0));
  LUT3 #(
    .INIT(8'h47)) 
    count1_carry_i_38
       (.I0(a_in_7[9]),
        .I1(count1_carry_i_25),
        .I2(a_in_7[25]),
        .O(count1_carry_i_38_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF77744474)) 
    count1_carry_i_39
       (.I0(count1_carry_i_43_n_0),
        .I1(\count[4]_i_6__4 ),
        .I2(a_in_7[24]),
        .I3(count1_carry_i_25),
        .I4(a_in_7[8]),
        .I5(\count[4]_i_6__4_0 ),
        .O(count1_carry_i_39_n_0));
  LUT6 #(
    .INIT(64'h0006000600096000)) 
    count1_carry_i_3__7
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__2_n_0),
        .I2(count1_carry_i_6__2_n_0),
        .I3(j_reg[3]),
        .I4(\count[4]_i_4__1_n_0 ),
        .I5(count1_carry_i_7__2_n_0),
        .O(count1_carry_i_3__7_n_0));
  LUT5 #(
    .INIT(32'hBB8B888B)) 
    count1_carry_i_40
       (.I0(count1_carry_i_21_n_0),
        .I1(\count[4]_i_6__4_0 ),
        .I2(count1_carry_i_44_n_0),
        .I3(\count[4]_i_6__4 ),
        .I4(count1_carry_i_45_n_0),
        .O(count1_carry_i_40_n_0));
  LUT6 #(
    .INIT(64'h00000000888AAA8A)) 
    count1_carry_i_41
       (.I0(count1_carry_i_46_n_0),
        .I1(\count[4]_i_6__4 ),
        .I2(a_in_7[25]),
        .I3(count1_carry_i_25),
        .I4(a_in_7[9]),
        .I5(\count[4]_i_6__4_0 ),
        .O(\j_reg[3]_2 ));
  LUT5 #(
    .INIT(32'h470047FF)) 
    count1_carry_i_43
       (.I0(a_in_7[0]),
        .I1(count1_carry_i_41_0),
        .I2(Q[2]),
        .I3(count1_carry_i_25),
        .I4(a_in_7[16]),
        .O(count1_carry_i_43_n_0));
  LUT3 #(
    .INIT(8'h47)) 
    count1_carry_i_44
       (.I0(a_in_7[10]),
        .I1(count1_carry_i_25),
        .I2(a_in_7[26]),
        .O(count1_carry_i_44_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    count1_carry_i_45
       (.I0(a_in_7[2]),
        .I1(count1_carry_i_41_0),
        .I2(Q[4]),
        .I3(count1_carry_i_25),
        .I4(a_in_7[18]),
        .O(count1_carry_i_45_n_0));
  LUT6 #(
    .INIT(64'h47FF47FF00FFFFFF)) 
    count1_carry_i_46
       (.I0(a_in_7[1]),
        .I1(count1_carry_i_41_0),
        .I2(Q[3]),
        .I3(\count[4]_i_6__4 ),
        .I4(a_in_7[17]),
        .I5(count1_carry_i_25),
        .O(count1_carry_i_46_n_0));
  LUT6 #(
    .INIT(64'h0120200084000085)) 
    count1_carry_i_4__2
       (.I0(j_reg[0]),
        .I1(count1_carry_i_7__2_n_0),
        .I2(count1_carry_0),
        .I3(count1_carry_i_9__0_n_0),
        .I4(count1_carry_i_10__1_n_0),
        .I5(count1_carry_i_11__2_n_0),
        .O(count1_carry_i_4__2_n_0));
  LUT5 #(
    .INIT(32'h5555CFC0)) 
    count1_carry_i_5__1
       (.I0(Q[3]),
        .I1(\j_reg[1]_0 ),
        .I2(\count[4]_i_5__0 [0]),
        .I3(count1_carry_i_14__1_n_0),
        .I4(count1_carry__1_i_3__6),
        .O(\j_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h002B2BFF)) 
    count1_carry_i_5__2
       (.I0(count1_carry_i_12__1_n_0),
        .I1(D[1]),
        .I2(\count[4]_i_10__0_n_0 ),
        .I3(D[2]),
        .I4(\count[4]_i_11__0_n_0 ),
        .O(count1_carry_i_5__2_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    count1_carry_i_6__2
       (.I0(j_reg[1]),
        .I1(j_reg[2]),
        .I2(j_reg[0]),
        .O(count1_carry_i_6__2_n_0));
  LUT4 #(
    .INIT(16'h599A)) 
    count1_carry_i_7__2
       (.I0(\count[4]_i_3__0_n_0 ),
        .I1(count1_carry_i_5__2_n_0),
        .I2(D[3]),
        .I3(\j_reg[0]_3 ),
        .O(count1_carry_i_7__2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    count1_carry_i_9__0
       (.I0(j_reg[0]),
        .I1(j_reg[1]),
        .I2(count1_carry_i_12__1_n_0),
        .O(count1_carry_i_9__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_1__2 
       (.I0(count_reg[0]),
        .O(plusOp__2[0]));
  (* \PinAttr:I1:HOLD_DETOUR  = "189" *) 
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count[1]_i_1__2 
       (.I0(count_reg[0]),
        .I1(count_reg[1]),
        .O(plusOp__2[1]));
  (* \PinAttr:I1:HOLD_DETOUR  = "189" *) 
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \count[2]_i_1__2 
       (.I0(count_reg[2]),
        .I1(count_reg[1]),
        .I2(count_reg[0]),
        .O(plusOp__2[2]));
  (* \PinAttr:I2:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \count[3]_i_1__2 
       (.I0(count_reg[3]),
        .I1(count_reg[0]),
        .I2(count_reg[1]),
        .I3(count_reg[2]),
        .O(plusOp__2[3]));
  LUT5 #(
    .INIT(32'hD100D1FF)) 
    \count[4]_i_10__0 
       (.I0(\count[4]_i_21__1_n_0 ),
        .I1(j_reg[0]),
        .I2(\count[4]_i_19__1_n_0 ),
        .I3(\count[4]_i_6__1_n_0 ),
        .I4(a_in_6[1]),
        .O(\count[4]_i_10__0_n_0 ));
  LUT5 #(
    .INIT(32'h3F553055)) 
    \count[4]_i_11__0 
       (.I0(a_in_6[2]),
        .I1(\count[4]_i_21__1_n_0 ),
        .I2(j_reg[0]),
        .I3(\count[4]_i_6__1_n_0 ),
        .I4(\count[4]_i_22__0_n_0 ),
        .O(\count[4]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'hF3550355)) 
    \count[4]_i_12__1 
       (.I0(a_in_6[3]),
        .I1(\count[4]_i_8__2_n_0 ),
        .I2(j_reg[0]),
        .I3(\count[4]_i_6__1_n_0 ),
        .I4(\count[4]_i_22__0_n_0 ),
        .O(\j_reg[0]_3 ));
  LUT5 #(
    .INIT(32'hBEEB8228)) 
    \count[4]_i_13__1 
       (.I0(\count[4]_i_7__4_0 ),
        .I1(j_reg[2]),
        .I2(j_reg[0]),
        .I3(j_reg[1]),
        .I4(\count[4]_i_7__4_1 ),
        .O(\count[4]_i_13__1_n_0 ));
  LUT5 #(
    .INIT(32'hBEEB8228)) 
    \count[4]_i_18__1 
       (.I0(\count[4]_i_8__2_1 ),
        .I1(j_reg[2]),
        .I2(j_reg[0]),
        .I3(j_reg[1]),
        .I4(\count[4]_i_8__2_0 ),
        .O(\count[4]_i_18__1_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8B8BB88B8B888)) 
    \count[4]_i_19__1 
       (.I0(\count[4]_i_29__1_n_0 ),
        .I1(j_reg[1]),
        .I2(\count[4]_i_7__4_1 ),
        .I3(j_reg[2]),
        .I4(j_reg[0]),
        .I5(count1_carry_i_12__1_1),
        .O(\count[4]_i_19__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000EF0000000000)) 
    \count[4]_i_1__1 
       (.I0(\count[4]_i_3__0_n_0 ),
        .I1(\count[4]_i_4__1_n_0 ),
        .I2(\count_reg[0]_0 ),
        .I3(\count[4]_i_6__1_n_0 ),
        .I4(done),
        .I5(count1),
        .O(count));
  LUT6 #(
    .INIT(64'hFFB800B800000000)) 
    \count[4]_i_20__2 
       (.I0(count1_carry_i_12__1_0),
        .I1(j_reg[2]),
        .I2(\count[4]_i_8__2_0 ),
        .I3(j_reg[1]),
        .I4(\count[4]_i_32__0_n_0 ),
        .I5(j_reg[0]),
        .O(\count[4]_i_20__2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \count[4]_i_21__1 
       (.I0(\count[4]_i_18__1_n_0 ),
        .I1(j_reg[1]),
        .I2(\count[4]_i_32__0_n_0 ),
        .O(\count[4]_i_21__1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \count[4]_i_22__0 
       (.I0(\count[4]_i_13__1_n_0 ),
        .I1(j_reg[1]),
        .I2(\count[4]_i_29__1_n_0 ),
        .O(\count[4]_i_22__0_n_0 ));
  LUT4 #(
    .INIT(16'h91EC)) 
    \count[4]_i_25__2 
       (.I0(j_reg[3]),
        .I1(j_reg[1]),
        .I2(j_reg[0]),
        .I3(j_reg[2]),
        .O(\j_reg[3]_4 ));
  LUT4 #(
    .INIT(16'h599A)) 
    \count[4]_i_26__1 
       (.I0(j_reg[3]),
        .I1(j_reg[1]),
        .I2(j_reg[2]),
        .I3(j_reg[0]),
        .O(\j_reg[3]_3 ));
  LUT5 #(
    .INIT(32'hBEEB8228)) 
    \count[4]_i_29__1 
       (.I0(\count[4]_i_3__0_0 ),
        .I1(j_reg[2]),
        .I2(j_reg[0]),
        .I3(j_reg[1]),
        .I4(\count[4]_i_22__0_0 ),
        .O(\count[4]_i_29__1_n_0 ));
  (* \PinAttr:I2:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count[4]_i_2__2 
       (.I0(count_reg[4]),
        .I1(count_reg[2]),
        .I2(count_reg[1]),
        .I3(count_reg[0]),
        .I4(count_reg[3]),
        .O(plusOp__2[4]));
  LUT5 #(
    .INIT(32'hBEEB8228)) 
    \count[4]_i_32__0 
       (.I0(\count[4]_i_3__0_3 ),
        .I1(j_reg[2]),
        .I2(j_reg[0]),
        .I3(j_reg[1]),
        .I4(\count[4]_i_21__1_0 ),
        .O(\count[4]_i_32__0_n_0 ));
  LUT6 #(
    .INIT(64'h565656A656A656A6)) 
    \count[4]_i_3__0 
       (.I0(D[4]),
        .I1(a_in_6[4]),
        .I2(\count[4]_i_6__1_n_0 ),
        .I3(\count[4]_i_7__4_n_0 ),
        .I4(\count[4]_i_8__2_n_0 ),
        .I5(j_reg[0]),
        .O(\count[4]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF66FF66FFFFF)) 
    \count[4]_i_4__1 
       (.I0(\j_reg[0]_2 ),
        .I1(D[0]),
        .I2(D[1]),
        .I3(\count[4]_i_10__0_n_0 ),
        .I4(D[2]),
        .I5(\count[4]_i_11__0_n_0 ),
        .O(\count[4]_i_4__1_n_0 ));
  LUT3 #(
    .INIT(8'h07)) 
    \count[4]_i_6__1 
       (.I0(j_reg[2]),
        .I1(j_reg[1]),
        .I2(j_reg[3]),
        .O(\count[4]_i_6__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFAFCFC0A0A0CFC0)) 
    \count[4]_i_7__1 
       (.I0(a_in_7[7]),
        .I1(a_in_7[23]),
        .I2(\count[4]_i_6__4 ),
        .I3(Q[1]),
        .I4(count1_carry_i_25),
        .I5(a_in_7[15]),
        .O(\FSM_onehot_state_reg[3]_0 ));
  LUT6 #(
    .INIT(64'h001D0011001D00DD)) 
    \count[4]_i_7__4 
       (.I0(\count[4]_i_13__1_n_0 ),
        .I1(j_reg[1]),
        .I2(\count[4]_i_3__0_0 ),
        .I3(j_reg[0]),
        .I4(j_reg[2]),
        .I5(\count[4]_i_3__0_1 ),
        .O(\count[4]_i_7__4_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \count[4]_i_8__1 
       (.I0(a_in_7[11]),
        .I1(a_in_7[27]),
        .I2(a_in_7[19]),
        .I3(count1_carry_i_25),
        .I4(a_in_7[3]),
        .I5(\count[4]_i_6__4 ),
        .O(\FSM_onehot_state_reg[3]_1 ));
  LUT6 #(
    .INIT(64'hBE82FFFFBE820000)) 
    \count[4]_i_8__2 
       (.I0(\count[4]_i_3__0_2 ),
        .I1(j_reg[2]),
        .I2(j_reg[0]),
        .I3(\count[4]_i_3__0_3 ),
        .I4(j_reg[1]),
        .I5(\count[4]_i_18__1_n_0 ),
        .O(\count[4]_i_8__2_n_0 ));
  LUT5 #(
    .INIT(32'hF1FFF100)) 
    \count[4]_i_9__0 
       (.I0(\count[4]_i_19__1_n_0 ),
        .I1(j_reg[0]),
        .I2(\count[4]_i_20__2_n_0 ),
        .I3(\count[4]_i_6__1_n_0 ),
        .I4(a_in_6[0]),
        .O(\j_reg[0]_2 ));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__2[0]),
        .Q(count_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__2[1]),
        .Q(count_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__2[2]),
        .Q(count_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__2[3]),
        .Q(count_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__2[4]),
        .Q(count_reg[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFF01111111)) 
    done_aux_i_1__6
       (.I0(j_reg[3]),
        .I1(count),
        .I2(j_reg[0]),
        .I3(j_reg[1]),
        .I4(j_reg[2]),
        .I5(done),
        .O(done_aux_i_1__6_n_0));
  FDCE #(
    .INIT(1'b0)) 
    done_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(done_aux_i_1__6_n_0),
        .Q(done));
  LUT1 #(
    .INIT(2'h1)) 
    \j[0]_i_1__2 
       (.I0(j_reg[0]),
        .O(\j[0]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \j[1]_i_1__2 
       (.I0(j_reg[0]),
        .I1(j_reg[1]),
        .O(p_0_in__2[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \j[2]_i_1__2 
       (.I0(j_reg[2]),
        .I1(j_reg[0]),
        .I2(j_reg[1]),
        .O(p_0_in__2[2]));
  LUT4 #(
    .INIT(16'h0015)) 
    \j[3]_i_1__2 
       (.I0(j_reg[3]),
        .I1(j_reg[1]),
        .I2(j_reg[2]),
        .I3(done),
        .O(j0));
  LUT3 #(
    .INIT(8'h80)) 
    \j[3]_i_2__1 
       (.I0(j_reg[0]),
        .I1(j_reg[2]),
        .I2(j_reg[1]),
        .O(p_0_in__2[3]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[0] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(\j[0]_i_1__2_n_0 ),
        .Q(j_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[1] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in__2[1]),
        .Q(j_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[2] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in__2[2]),
        .Q(j_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[3] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in__2[3]),
        .Q(j_reg[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFF01000000)) 
    valid_aux_i_1__1
       (.I0(valid_aux_i_2__7_n_0),
        .I1(count_reg[4]),
        .I2(count_reg[3]),
        .I3(count_reg[2]),
        .I4(count_reg[1]),
        .I5(valid),
        .O(valid_aux_i_1__1_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFF7)) 
    valid_aux_i_2__7
       (.I0(j_reg[2]),
        .I1(j_reg[1]),
        .I2(j_reg[0]),
        .I3(count_reg[0]),
        .I4(j_reg[3]),
        .O(valid_aux_i_2__7_n_0));
  FDCE #(
    .INIT(1'b0)) 
    valid_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(valid_aux_i_1__1_n_0),
        .Q(valid));
endmodule

(* ORIG_REF_NAME = "ctrl_logic" *) 
module design_1_top_nqueens_0_0_ctrl_logic__parameterized3
   (valid,
    \j_reg[0]_0 ,
    \j_reg[2]_0 ,
    \FSM_onehot_state_reg[3] ,
    \FSM_onehot_state_reg[3]_0 ,
    \FSM_onehot_state_reg[3]_1 ,
    \FSM_onehot_state_reg[3]_2 ,
    \FSM_onehot_state_reg[3]_3 ,
    \count_reg_reg[3] ,
    \count_reg_reg[1] ,
    \FSM_onehot_state_reg[3]_4 ,
    \FSM_onehot_state_reg[3]_5 ,
    \count_reg_reg[2] ,
    \count_reg_reg[4] ,
    \count_reg_reg[0] ,
    \j_reg[0]_1 ,
    \j_reg[0]_2 ,
    \j_reg[1]_0 ,
    E,
    \FSM_onehot_state_reg[1] ,
    valid_aux_reg_0,
    \j_reg[2]_1 ,
    clk,
    AR,
    D,
    count1_carry_i_13__3_0,
    count1_carry_i_13__3_1,
    \count_reg[0]_0 ,
    a_in_6,
    \count[4]_i_8__2 ,
    \count[4]_i_8__2_0 ,
    count1_carry_0,
    count1_carry_1,
    a_in_5,
    \count[4]_i_10__1_0 ,
    \count[4]_i_10__1_1 ,
    \count[4]_i_3__1_0 ,
    \count[4]_i_3__1_1 ,
    \count[4]_i_6__0_0 ,
    \count[4]_i_19__2_0 ,
    \count[4]_i_12__2_0 ,
    \count[4]_i_12__2_1 ,
    \count[4]_i_21__2_0 ,
    \count[4]_i_7__2_0 ,
    Q,
    next_out_6);
  output valid;
  output \j_reg[0]_0 ;
  output \j_reg[2]_0 ;
  output \FSM_onehot_state_reg[3] ;
  output \FSM_onehot_state_reg[3]_0 ;
  output \FSM_onehot_state_reg[3]_1 ;
  output \FSM_onehot_state_reg[3]_2 ;
  output \FSM_onehot_state_reg[3]_3 ;
  output \count_reg_reg[3] ;
  output \count_reg_reg[1] ;
  output \FSM_onehot_state_reg[3]_4 ;
  output \FSM_onehot_state_reg[3]_5 ;
  output \count_reg_reg[2] ;
  output \count_reg_reg[4] ;
  output \count_reg_reg[0] ;
  output \j_reg[0]_1 ;
  output \j_reg[0]_2 ;
  output \j_reg[1]_0 ;
  output [0:0]E;
  output \FSM_onehot_state_reg[1] ;
  output [0:0]valid_aux_reg_0;
  output \j_reg[2]_1 ;
  input clk;
  input [0:0]AR;
  input [4:0]D;
  input count1_carry_i_13__3_0;
  input count1_carry_i_13__3_1;
  input \count_reg[0]_0 ;
  input [29:0]a_in_6;
  input \count[4]_i_8__2 ;
  input \count[4]_i_8__2_0 ;
  input count1_carry_0;
  input count1_carry_1;
  input [4:0]a_in_5;
  input \count[4]_i_10__1_0 ;
  input \count[4]_i_10__1_1 ;
  input \count[4]_i_3__1_0 ;
  input \count[4]_i_3__1_1 ;
  input \count[4]_i_6__0_0 ;
  input \count[4]_i_19__2_0 ;
  input \count[4]_i_12__2_0 ;
  input \count[4]_i_12__2_1 ;
  input \count[4]_i_21__2_0 ;
  input \count[4]_i_7__2_0 ;
  input [4:0]Q;
  input next_out_6;

  wire [0:0]AR;
  wire [4:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state_reg[1] ;
  wire \FSM_onehot_state_reg[3] ;
  wire \FSM_onehot_state_reg[3]_0 ;
  wire \FSM_onehot_state_reg[3]_1 ;
  wire \FSM_onehot_state_reg[3]_2 ;
  wire \FSM_onehot_state_reg[3]_3 ;
  wire \FSM_onehot_state_reg[3]_4 ;
  wire \FSM_onehot_state_reg[3]_5 ;
  wire [4:0]Q;
  wire [4:0]a_in_5;
  wire [29:0]a_in_6;
  wire clk;
  wire count;
  wire count1;
  wire count1_carry_0;
  wire count1_carry_1;
  wire count1_carry__0_i_1__1_n_0;
  wire count1_carry__0_i_2__1_n_0;
  wire count1_carry__0_i_3__1_n_0;
  wire count1_carry__0_i_4__1_n_0;
  wire count1_carry__0_n_0;
  wire count1_carry__1_i_1__1_n_0;
  wire count1_carry__1_i_2__1_n_0;
  wire count1_carry__1_i_3__1_n_0;
  wire count1_carry_i_12__2_n_0;
  wire count1_carry_i_13__3_0;
  wire count1_carry_i_13__3_1;
  wire count1_carry_i_13__3_n_0;
  wire count1_carry_i_14__2_n_0;
  wire count1_carry_i_1__1_n_0;
  wire count1_carry_i_2__1_n_0;
  wire count1_carry_i_3__1_n_0;
  wire count1_carry_i_4__3_n_0;
  wire count1_carry_i_5__3_n_0;
  wire count1_carry_i_6__6_n_0;
  wire count1_carry_i_7__5_n_0;
  wire count1_carry_i_8__3_n_0;
  wire count1_carry_i_9__1_n_0;
  wire count1_carry_n_0;
  wire \count[0]_i_1__3_n_0 ;
  wire \count[4]_i_10__1_0 ;
  wire \count[4]_i_10__1_1 ;
  wire \count[4]_i_11__1_n_0 ;
  wire \count[4]_i_12__2_0 ;
  wire \count[4]_i_12__2_1 ;
  wire \count[4]_i_15__2_n_0 ;
  wire \count[4]_i_16__2_n_0 ;
  wire \count[4]_i_19__2_0 ;
  wire \count[4]_i_19__2_n_0 ;
  wire \count[4]_i_20__3_n_0 ;
  wire \count[4]_i_21__2_0 ;
  wire \count[4]_i_21__2_n_0 ;
  wire \count[4]_i_22__1_n_0 ;
  wire \count[4]_i_30__1_n_0 ;
  wire \count[4]_i_31__2_n_0 ;
  wire \count[4]_i_3__1_0 ;
  wire \count[4]_i_3__1_1 ;
  wire \count[4]_i_3__1_n_0 ;
  wire \count[4]_i_4__2_n_0 ;
  wire \count[4]_i_6__0_0 ;
  wire \count[4]_i_6__0_n_0 ;
  wire \count[4]_i_7__2_0 ;
  wire \count[4]_i_7__2_n_0 ;
  wire \count[4]_i_8__2 ;
  wire \count[4]_i_8__2_0 ;
  wire \count[4]_i_8__4_n_0 ;
  wire [4:0]count_reg;
  wire \count_reg[0]_0 ;
  wire \count_reg_reg[0] ;
  wire \count_reg_reg[1] ;
  wire \count_reg_reg[2] ;
  wire \count_reg_reg[3] ;
  wire \count_reg_reg[4] ;
  wire done;
  wire done_aux_i_1__0_n_0;
  wire done_aux_i_2__1_n_0;
  wire j0;
  wire \j[0]_i_1__3_n_0 ;
  wire [3:0]j_reg;
  wire \j_reg[0]_0 ;
  wire \j_reg[0]_1 ;
  wire \j_reg[0]_2 ;
  wire \j_reg[1]_0 ;
  wire \j_reg[2]_0 ;
  wire \j_reg[2]_1 ;
  wire next_out_6;
  wire [3:1]p_0_in__3;
  wire [4:1]plusOp__3;
  wire valid;
  wire valid_aux_i_1__5_n_0;
  wire valid_aux_i_2__2_n_0;
  wire [0:0]valid_aux_reg_0;
  wire [2:0]NLW_count1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry_O_UNCONNECTED;
  wire [2:0]NLW_count1_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_O_UNCONNECTED;

  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[3]_i_1__3 
       (.I0(valid),
        .I1(Q[2]),
        .O(valid_aux_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \FSM_onehot_state[4]_i_2__6 
       (.I0(Q[3]),
        .I1(next_out_6),
        .I2(done),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFEFEFEFEFEFEFE)) 
    acks_out_reg_i_2__7
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(done),
        .I4(Q[2]),
        .I5(valid),
        .O(\FSM_onehot_state_reg[1] ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry
       (.CI(1'b0),
        .CO({count1_carry_n_0,NLW_count1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry_O_UNCONNECTED[3:0]),
        .S({count1_carry_i_1__1_n_0,count1_carry_i_2__1_n_0,count1_carry_i_3__1_n_0,count1_carry_i_4__3_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__0
       (.CI(count1_carry_n_0),
        .CO({count1_carry__0_n_0,NLW_count1_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__0_O_UNCONNECTED[3:0]),
        .S({count1_carry__0_i_1__1_n_0,count1_carry__0_i_2__1_n_0,count1_carry__0_i_3__1_n_0,count1_carry__0_i_4__1_n_0}));
  LUT5 #(
    .INIT(32'hF0F096F0)) 
    count1_carry__0_i_1__1
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__3_n_0),
        .I2(count1_carry_i_6__6_n_0),
        .I3(\count[4]_i_4__2_n_0 ),
        .I4(count1_carry_i_7__5_n_0),
        .O(count1_carry__0_i_1__1_n_0));
  LUT5 #(
    .INIT(32'hF0F096F0)) 
    count1_carry__0_i_2__1
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__3_n_0),
        .I2(count1_carry_i_6__6_n_0),
        .I3(\count[4]_i_4__2_n_0 ),
        .I4(count1_carry_i_7__5_n_0),
        .O(count1_carry__0_i_2__1_n_0));
  LUT5 #(
    .INIT(32'hF0F096F0)) 
    count1_carry__0_i_3__1
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__3_n_0),
        .I2(count1_carry_i_6__6_n_0),
        .I3(\count[4]_i_4__2_n_0 ),
        .I4(count1_carry_i_7__5_n_0),
        .O(count1_carry__0_i_3__1_n_0));
  LUT5 #(
    .INIT(32'hF0F096F0)) 
    count1_carry__0_i_4__1
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__3_n_0),
        .I2(count1_carry_i_6__6_n_0),
        .I3(\count[4]_i_4__2_n_0 ),
        .I4(count1_carry_i_7__5_n_0),
        .O(count1_carry__0_i_4__1_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__1
       (.CI(count1_carry__0_n_0),
        .CO({NLW_count1_carry__1_CO_UNCONNECTED[3],count1,NLW_count1_carry__1_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,count1_carry__1_i_1__1_n_0,count1_carry__1_i_2__1_n_0,count1_carry__1_i_3__1_n_0}));
  LUT5 #(
    .INIT(32'hF0F090F0)) 
    count1_carry__1_i_1__1
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__3_n_0),
        .I2(count1_carry_i_6__6_n_0),
        .I3(\count[4]_i_4__2_n_0 ),
        .I4(count1_carry_i_7__5_n_0),
        .O(count1_carry__1_i_1__1_n_0));
  LUT5 #(
    .INIT(32'hF0F096F0)) 
    count1_carry__1_i_2__1
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__3_n_0),
        .I2(count1_carry_i_6__6_n_0),
        .I3(\count[4]_i_4__2_n_0 ),
        .I4(count1_carry_i_7__5_n_0),
        .O(count1_carry__1_i_2__1_n_0));
  LUT5 #(
    .INIT(32'hF0F096F0)) 
    count1_carry__1_i_3__1
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__3_n_0),
        .I2(count1_carry_i_6__6_n_0),
        .I3(\count[4]_i_4__2_n_0 ),
        .I4(count1_carry_i_7__5_n_0),
        .O(count1_carry__1_i_3__1_n_0));
  LUT5 #(
    .INIT(32'h69969669)) 
    count1_carry_i_12__2
       (.I0(count1_carry_i_14__2_n_0),
        .I1(D[2]),
        .I2(\count[4]_i_11__1_n_0 ),
        .I3(j_reg[2]),
        .I4(j_reg[1]),
        .O(count1_carry_i_12__2_n_0));
  LUT6 #(
    .INIT(64'h00000000FFAE00AE)) 
    count1_carry_i_13__3
       (.I0(\count[4]_i_20__3_n_0 ),
        .I1(j_reg[0]),
        .I2(\count[4]_i_19__2_n_0 ),
        .I3(\count[4]_i_8__4_n_0 ),
        .I4(a_in_5[0]),
        .I5(D[0]),
        .O(count1_carry_i_13__3_n_0));
  LUT3 #(
    .INIT(8'h2B)) 
    count1_carry_i_14__2
       (.I0(count1_carry_i_13__3_n_0),
        .I1(D[1]),
        .I2(\j_reg[0]_2 ),
        .O(count1_carry_i_14__2_n_0));
  LUT5 #(
    .INIT(32'hF0F096F0)) 
    count1_carry_i_1__1
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__3_n_0),
        .I2(count1_carry_i_6__6_n_0),
        .I3(\count[4]_i_4__2_n_0 ),
        .I4(count1_carry_i_7__5_n_0),
        .O(count1_carry_i_1__1_n_0));
  LUT5 #(
    .INIT(32'hF0F096F0)) 
    count1_carry_i_2__1
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__3_n_0),
        .I2(count1_carry_i_6__6_n_0),
        .I3(\count[4]_i_4__2_n_0 ),
        .I4(count1_carry_i_7__5_n_0),
        .O(count1_carry_i_2__1_n_0));
  LUT6 #(
    .INIT(64'h0600000000006069)) 
    count1_carry_i_3__1
       (.I0(\count_reg[0]_0 ),
        .I1(count1_carry_i_5__3_n_0),
        .I2(count1_carry_i_7__5_n_0),
        .I3(\count[4]_i_4__2_n_0 ),
        .I4(j_reg[3]),
        .I5(count1_carry_i_8__3_n_0),
        .O(count1_carry_i_3__1_n_0));
  LUT6 #(
    .INIT(64'h0058000248002100)) 
    count1_carry_i_4__3
       (.I0(count1_carry_i_9__1_n_0),
        .I1(count1_carry_i_7__5_n_0),
        .I2(count1_carry_0),
        .I3(count1_carry_1),
        .I4(count1_carry_i_12__2_n_0),
        .I5(j_reg[0]),
        .O(count1_carry_i_4__3_n_0));
  LUT5 #(
    .INIT(32'h002B2BFF)) 
    count1_carry_i_5__3
       (.I0(count1_carry_i_13__3_n_0),
        .I1(D[1]),
        .I2(\j_reg[0]_2 ),
        .I3(D[2]),
        .I4(\count[4]_i_11__1_n_0 ),
        .O(count1_carry_i_5__3_n_0));
  LUT3 #(
    .INIT(8'h07)) 
    count1_carry_i_6__6
       (.I0(j_reg[1]),
        .I1(j_reg[2]),
        .I2(j_reg[3]),
        .O(count1_carry_i_6__6_n_0));
  LUT4 #(
    .INIT(16'h6A56)) 
    count1_carry_i_7__5
       (.I0(\count[4]_i_3__1_n_0 ),
        .I1(\j_reg[0]_0 ),
        .I2(D[3]),
        .I3(count1_carry_i_5__3_n_0),
        .O(count1_carry_i_7__5_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    count1_carry_i_8__3
       (.I0(j_reg[1]),
        .I1(j_reg[2]),
        .O(count1_carry_i_8__3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    count1_carry_i_9__1
       (.I0(j_reg[1]),
        .I1(count1_carry_i_13__3_n_0),
        .O(count1_carry_i_9__1_n_0));
  (* \PinAttr:I0:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_1__3 
       (.I0(count_reg[0]),
        .O(\count[0]_i_1__3_n_0 ));
  (* \PinAttr:I1:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count[1]_i_1__3 
       (.I0(count_reg[1]),
        .I1(count_reg[0]),
        .O(plusOp__3[1]));
  (* \PinAttr:I1:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \count[2]_i_1__3 
       (.I0(count_reg[2]),
        .I1(count_reg[0]),
        .I2(count_reg[1]),
        .O(plusOp__3[2]));
  (* \PinAttr:I2:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \count[3]_i_1__3 
       (.I0(count_reg[3]),
        .I1(count_reg[1]),
        .I2(count_reg[0]),
        .I3(count_reg[2]),
        .O(plusOp__3[3]));
  LUT5 #(
    .INIT(32'h74777444)) 
    \count[4]_i_10__1 
       (.I0(a_in_5[1]),
        .I1(\count[4]_i_8__4_n_0 ),
        .I2(\count[4]_i_21__2_n_0 ),
        .I3(j_reg[0]),
        .I4(\count[4]_i_19__2_n_0 ),
        .O(\j_reg[0]_2 ));
  LUT5 #(
    .INIT(32'h74777444)) 
    \count[4]_i_11__1 
       (.I0(a_in_5[2]),
        .I1(\count[4]_i_8__4_n_0 ),
        .I2(\count[4]_i_22__1_n_0 ),
        .I3(j_reg[0]),
        .I4(\count[4]_i_21__2_n_0 ),
        .O(\count[4]_i_11__1_n_0 ));
  LUT5 #(
    .INIT(32'h74777444)) 
    \count[4]_i_12__2 
       (.I0(a_in_5[3]),
        .I1(\count[4]_i_8__4_n_0 ),
        .I2(\count[4]_i_7__2_n_0 ),
        .I3(j_reg[0]),
        .I4(\count[4]_i_22__1_n_0 ),
        .O(\j_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h470047FF)) 
    \count[4]_i_14__1 
       (.I0(a_in_6[7]),
        .I1(\count[4]_i_8__2_0 ),
        .I2(a_in_6[23]),
        .I3(\count[4]_i_8__2 ),
        .I4(a_in_6[15]),
        .O(\FSM_onehot_state_reg[3]_3 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \count[4]_i_15__1 
       (.I0(a_in_6[11]),
        .I1(a_in_6[27]),
        .I2(\count[4]_i_8__2 ),
        .I3(a_in_6[19]),
        .I4(\count[4]_i_8__2_0 ),
        .I5(a_in_6[3]),
        .O(\FSM_onehot_state_reg[3]_0 ));
  LUT5 #(
    .INIT(32'hAFEBA028)) 
    \count[4]_i_15__2 
       (.I0(\count[4]_i_10__1_1 ),
        .I1(j_reg[1]),
        .I2(j_reg[2]),
        .I3(j_reg[0]),
        .I4(\count[4]_i_6__0_0 ),
        .O(\count[4]_i_15__2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \count[4]_i_16__1 
       (.I0(a_in_6[10]),
        .I1(a_in_6[26]),
        .I2(\count[4]_i_8__2 ),
        .I3(a_in_6[18]),
        .I4(\count[4]_i_8__2_0 ),
        .I5(a_in_6[2]),
        .O(\FSM_onehot_state_reg[3] ));
  LUT5 #(
    .INIT(32'h33AAA33A)) 
    \count[4]_i_16__2 
       (.I0(\count[4]_i_7__2_0 ),
        .I1(count1_carry_i_13__3_0),
        .I2(j_reg[1]),
        .I3(j_reg[2]),
        .I4(j_reg[0]),
        .O(\count[4]_i_16__2_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \count[4]_i_17__1 
       (.I0(a_in_6[6]),
        .I1(\count[4]_i_8__2_0 ),
        .I2(a_in_6[22]),
        .I3(\count[4]_i_8__2 ),
        .I4(a_in_6[14]),
        .O(\FSM_onehot_state_reg[3]_5 ));
  LUT6 #(
    .INIT(64'hB8FFFFB8B80000B8)) 
    \count[4]_i_19__2 
       (.I0(\count[4]_i_10__1_0 ),
        .I1(j_reg[2]),
        .I2(\count[4]_i_10__1_1 ),
        .I3(j_reg[1]),
        .I4(j_reg[0]),
        .I5(\count[4]_i_30__1_n_0 ),
        .O(\count[4]_i_19__2_n_0 ));
  LUT5 #(
    .INIT(32'hBF000000)) 
    \count[4]_i_1__2 
       (.I0(\count[4]_i_3__1_n_0 ),
        .I1(\count[4]_i_4__2_n_0 ),
        .I2(\count_reg[0]_0 ),
        .I3(j0),
        .I4(count1),
        .O(count));
  LUT6 #(
    .INIT(64'h1313131010101310)) 
    \count[4]_i_20__3 
       (.I0(\count[4]_i_31__2_n_0 ),
        .I1(j_reg[0]),
        .I2(j_reg[1]),
        .I3(count1_carry_i_13__3_0),
        .I4(j_reg[2]),
        .I5(count1_carry_i_13__3_1),
        .O(\count[4]_i_20__3_n_0 ));
  LUT4 #(
    .INIT(16'hBE82)) 
    \count[4]_i_21__2 
       (.I0(\count[4]_i_31__2_n_0 ),
        .I1(j_reg[1]),
        .I2(j_reg[0]),
        .I3(\count[4]_i_16__2_n_0 ),
        .O(\count[4]_i_21__2_n_0 ));
  LUT4 #(
    .INIT(16'hBE82)) 
    \count[4]_i_22__1 
       (.I0(\count[4]_i_30__1_n_0 ),
        .I1(j_reg[1]),
        .I2(j_reg[0]),
        .I3(\count[4]_i_15__2_n_0 ),
        .O(\count[4]_i_22__1_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \count[4]_i_23 
       (.I0(a_in_6[9]),
        .I1(a_in_6[25]),
        .I2(\count[4]_i_8__2 ),
        .I3(a_in_6[17]),
        .I4(\count[4]_i_8__2_0 ),
        .I5(a_in_6[1]),
        .O(\FSM_onehot_state_reg[3]_1 ));
  LUT4 #(
    .INIT(16'hB556)) 
    \count[4]_i_23__0 
       (.I0(j_reg[2]),
        .I1(j_reg[0]),
        .I2(j_reg[3]),
        .I3(j_reg[1]),
        .O(\j_reg[2]_1 ));
  LUT6 #(
    .INIT(64'h50505F5F303F303F)) 
    \count[4]_i_24__1 
       (.I0(a_in_6[5]),
        .I1(a_in_6[21]),
        .I2(\count[4]_i_8__2 ),
        .I3(a_in_6[29]),
        .I4(a_in_6[13]),
        .I5(\count[4]_i_8__2_0 ),
        .O(\FSM_onehot_state_reg[3]_4 ));
  LUT4 #(
    .INIT(16'hE13C)) 
    \count[4]_i_24__2 
       (.I0(j_reg[2]),
        .I1(j_reg[0]),
        .I2(j_reg[3]),
        .I3(j_reg[1]),
        .O(\j_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \count[4]_i_27__0 
       (.I0(a_in_6[8]),
        .I1(a_in_6[24]),
        .I2(\count[4]_i_8__2 ),
        .I3(a_in_6[16]),
        .I4(\count[4]_i_8__2_0 ),
        .I5(a_in_6[0]),
        .O(\FSM_onehot_state_reg[3]_2 ));
  LUT6 #(
    .INIT(64'hAFAFA0A0CFC0CFC0)) 
    \count[4]_i_28__1 
       (.I0(a_in_6[4]),
        .I1(a_in_6[20]),
        .I2(\count[4]_i_8__2 ),
        .I3(a_in_6[28]),
        .I4(a_in_6[12]),
        .I5(\count[4]_i_8__2_0 ),
        .O(\count_reg_reg[4] ));
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count[4]_i_2__3 
       (.I0(count_reg[4]),
        .I1(count_reg[2]),
        .I2(count_reg[0]),
        .I3(count_reg[1]),
        .I4(count_reg[3]),
        .O(plusOp__3[4]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \count[4]_i_30__0 
       (.I0(a_in_6[1]),
        .I1(a_in_6[17]),
        .I2(\count[4]_i_8__2 ),
        .I3(a_in_6[9]),
        .I4(\count[4]_i_8__2_0 ),
        .I5(a_in_6[25]),
        .O(\count_reg_reg[1] ));
  LUT5 #(
    .INIT(32'hAFEBA028)) 
    \count[4]_i_30__1 
       (.I0(\count[4]_i_19__2_0 ),
        .I1(j_reg[1]),
        .I2(j_reg[2]),
        .I3(j_reg[0]),
        .I4(\count[4]_i_3__1_1 ),
        .O(\count[4]_i_30__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \count[4]_i_31__1 
       (.I0(a_in_6[0]),
        .I1(a_in_6[16]),
        .I2(\count[4]_i_8__2 ),
        .I3(a_in_6[8]),
        .I4(\count[4]_i_8__2_0 ),
        .I5(a_in_6[24]),
        .O(\count_reg_reg[0] ));
  LUT5 #(
    .INIT(32'h0A82FABE)) 
    \count[4]_i_31__2 
       (.I0(\count[4]_i_12__2_0 ),
        .I1(j_reg[1]),
        .I2(j_reg[2]),
        .I3(j_reg[0]),
        .I4(\count[4]_i_21__2_0 ),
        .O(\count[4]_i_31__2_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \count[4]_i_33__1 
       (.I0(a_in_6[3]),
        .I1(a_in_6[19]),
        .I2(\count[4]_i_8__2 ),
        .I3(a_in_6[11]),
        .I4(\count[4]_i_8__2_0 ),
        .I5(a_in_6[27]),
        .O(\count_reg_reg[3] ));
  LUT4 #(
    .INIT(16'h9663)) 
    \count[4]_i_33__2 
       (.I0(j_reg[1]),
        .I1(j_reg[3]),
        .I2(j_reg[0]),
        .I3(j_reg[2]),
        .O(\j_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \count[4]_i_34__1 
       (.I0(a_in_6[2]),
        .I1(a_in_6[18]),
        .I2(\count[4]_i_8__2 ),
        .I3(a_in_6[10]),
        .I4(\count[4]_i_8__2_0 ),
        .I5(a_in_6[26]),
        .O(\count_reg_reg[2] ));
  LUT6 #(
    .INIT(64'h55556665AAAA6665)) 
    \count[4]_i_3__1 
       (.I0(D[4]),
        .I1(\count[4]_i_6__0_n_0 ),
        .I2(j_reg[0]),
        .I3(\count[4]_i_7__2_n_0 ),
        .I4(\count[4]_i_8__4_n_0 ),
        .I5(a_in_5[4]),
        .O(\count[4]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000099009900000)) 
    \count[4]_i_4__2 
       (.I0(\j_reg[0]_1 ),
        .I1(D[0]),
        .I2(D[1]),
        .I3(\j_reg[0]_2 ),
        .I4(D[2]),
        .I5(\count[4]_i_11__1_n_0 ),
        .O(\count[4]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'h00001D00FF001D00)) 
    \count[4]_i_6__0 
       (.I0(\count[4]_i_3__1_0 ),
        .I1(j_reg[2]),
        .I2(\count[4]_i_3__1_1 ),
        .I3(j_reg[0]),
        .I4(j_reg[1]),
        .I5(\count[4]_i_15__2_n_0 ),
        .O(\count[4]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hB2828E82BE8EBEB2)) 
    \count[4]_i_7__2 
       (.I0(\count[4]_i_16__2_n_0 ),
        .I1(j_reg[1]),
        .I2(j_reg[0]),
        .I3(\count[4]_i_12__2_0 ),
        .I4(j_reg[2]),
        .I5(\count[4]_i_12__2_1 ),
        .O(\count[4]_i_7__2_n_0 ));
  LUT4 #(
    .INIT(16'hFCEC)) 
    \count[4]_i_8__4 
       (.I0(j_reg[0]),
        .I1(j_reg[3]),
        .I2(j_reg[2]),
        .I3(j_reg[1]),
        .O(\count[4]_i_8__4_n_0 ));
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \count[4]_i_9__1 
       (.I0(a_in_5[0]),
        .I1(\count[4]_i_8__4_n_0 ),
        .I2(\count[4]_i_19__2_n_0 ),
        .I3(j_reg[0]),
        .I4(\count[4]_i_20__3_n_0 ),
        .O(\j_reg[0]_1 ));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(\count[0]_i_1__3_n_0 ),
        .Q(count_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__3[1]),
        .Q(count_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__3[2]),
        .Q(count_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__3[3]),
        .Q(count_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__3[4]),
        .Q(count_reg[4]));
  LUT4 #(
    .INIT(16'hFF54)) 
    done_aux_i_1__0
       (.I0(count),
        .I1(j0),
        .I2(done_aux_i_2__1_n_0),
        .I3(done),
        .O(done_aux_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h0008)) 
    done_aux_i_2__1
       (.I0(j_reg[2]),
        .I1(j_reg[0]),
        .I2(j_reg[1]),
        .I3(j_reg[3]),
        .O(done_aux_i_2__1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    done_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(done_aux_i_1__0_n_0),
        .Q(done));
  LUT1 #(
    .INIT(2'h1)) 
    \j[0]_i_1__3 
       (.I0(j_reg[0]),
        .O(\j[0]_i_1__3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \j[1]_i_1__3 
       (.I0(j_reg[0]),
        .I1(j_reg[1]),
        .O(p_0_in__3[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \j[2]_i_1__3 
       (.I0(j_reg[2]),
        .I1(j_reg[0]),
        .I2(j_reg[1]),
        .O(p_0_in__3[2]));
  LUT5 #(
    .INIT(32'h00050015)) 
    \j[3]_i_1__3 
       (.I0(done),
        .I1(j_reg[1]),
        .I2(j_reg[2]),
        .I3(j_reg[3]),
        .I4(j_reg[0]),
        .O(j0));
  LUT3 #(
    .INIT(8'h80)) 
    \j[3]_i_2__2 
       (.I0(j_reg[1]),
        .I1(j_reg[0]),
        .I2(j_reg[2]),
        .O(p_0_in__3[3]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[0] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(\j[0]_i_1__3_n_0 ),
        .Q(j_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[1] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in__3[1]),
        .Q(j_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[2] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in__3[2]),
        .Q(j_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[3] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in__3[3]),
        .Q(j_reg[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000008)) 
    valid_aux_i_1__5
       (.I0(j_reg[0]),
        .I1(j_reg[2]),
        .I2(valid_aux_i_2__2_n_0),
        .I3(j_reg[1]),
        .I4(j_reg[3]),
        .I5(valid),
        .O(valid_aux_i_1__5_n_0));
  LUT5 #(
    .INIT(32'hFFFFFDFF)) 
    valid_aux_i_2__2
       (.I0(count_reg[2]),
        .I1(count_reg[4]),
        .I2(count_reg[1]),
        .I3(count_reg[0]),
        .I4(count_reg[3]),
        .O(valid_aux_i_2__2_n_0));
  FDCE #(
    .INIT(1'b0)) 
    valid_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(valid_aux_i_1__5_n_0),
        .Q(valid));
endmodule

(* ORIG_REF_NAME = "ctrl_logic" *) 
module design_1_top_nqueens_0_0_ctrl_logic__parameterized4
   (valid,
    Q,
    \j_reg[2]_0 ,
    \j_reg[2]_1 ,
    \j_reg[2]_2 ,
    \j_reg[2]_3 ,
    \FSM_onehot_state_reg[3] ,
    \FSM_onehot_state_reg[3]_0 ,
    \FSM_onehot_state_reg[3]_1 ,
    \FSM_onehot_state_reg[3]_2 ,
    \FSM_onehot_state_reg[3]_3 ,
    \FSM_onehot_state_reg[3]_4 ,
    \FSM_onehot_state_reg[3]_5 ,
    \count_reg_reg[1] ,
    \FSM_onehot_state_reg[3]_6 ,
    \FSM_onehot_state_reg[3]_7 ,
    \FSM_onehot_state_reg[3]_8 ,
    \FSM_onehot_state_reg[3]_9 ,
    \count_reg_reg[3] ,
    \j_reg[0]_0 ,
    \j_reg[2]_4 ,
    E,
    \FSM_onehot_state_reg[1] ,
    valid_aux_reg_0,
    \j_reg[2]_5 ,
    \j_reg[1]_0 ,
    count1_carry__0_0,
    count1_carry__1_0,
    S,
    clk,
    AR,
    count1_carry_i_19__0_0,
    count1_carry_i_19__0_1,
    D,
    done_aux_reg_0,
    a_in_4,
    count1_carry__1_i_3__2,
    count1_carry_i_13__6,
    a_in_5,
    \count[4]_i_19__2 ,
    \count[4]_i_19__2_0 ,
    \count[4]_i_15__2 ,
    count1_carry_0,
    count1_carry_1,
    count1_carry__1_i_3__2_0,
    count1_carry_i_4__4_0,
    count1_carry_i_5__7_0,
    count1_carry_i_5__7_1,
    \count[4]_i_4__6_0 ,
    \count[4]_i_4__6_1 ,
    count1_carry_i_19__0_2,
    count1_carry_i_19__0_3,
    \count_reg_reg[0] ,
    next_out_5);
  output valid;
  output [2:0]Q;
  output \j_reg[2]_0 ;
  output \j_reg[2]_1 ;
  output \j_reg[2]_2 ;
  output \j_reg[2]_3 ;
  output \FSM_onehot_state_reg[3] ;
  output \FSM_onehot_state_reg[3]_0 ;
  output \FSM_onehot_state_reg[3]_1 ;
  output \FSM_onehot_state_reg[3]_2 ;
  output \FSM_onehot_state_reg[3]_3 ;
  output \FSM_onehot_state_reg[3]_4 ;
  output \FSM_onehot_state_reg[3]_5 ;
  output \count_reg_reg[1] ;
  output \FSM_onehot_state_reg[3]_6 ;
  output \FSM_onehot_state_reg[3]_7 ;
  output \FSM_onehot_state_reg[3]_8 ;
  output \FSM_onehot_state_reg[3]_9 ;
  output \count_reg_reg[3] ;
  output \j_reg[0]_0 ;
  output \j_reg[2]_4 ;
  output [0:0]E;
  output \FSM_onehot_state_reg[1] ;
  output [0:0]valid_aux_reg_0;
  output \j_reg[2]_5 ;
  output \j_reg[1]_0 ;
  input [2:0]count1_carry__0_0;
  input [3:0]count1_carry__1_0;
  input [2:0]S;
  input clk;
  input [0:0]AR;
  input count1_carry_i_19__0_0;
  input count1_carry_i_19__0_1;
  input [4:0]D;
  input done_aux_reg_0;
  input [10:0]a_in_4;
  input count1_carry__1_i_3__2;
  input count1_carry_i_13__6;
  input [24:0]a_in_5;
  input \count[4]_i_19__2 ;
  input \count[4]_i_19__2_0 ;
  input \count[4]_i_15__2 ;
  input count1_carry_0;
  input count1_carry_1;
  input count1_carry__1_i_3__2_0;
  input count1_carry_i_4__4_0;
  input count1_carry_i_5__7_0;
  input count1_carry_i_5__7_1;
  input \count[4]_i_4__6_0 ;
  input \count[4]_i_4__6_1 ;
  input count1_carry_i_19__0_2;
  input count1_carry_i_19__0_3;
  input [4:0]\count_reg_reg[0] ;
  input next_out_5;

  wire [0:0]AR;
  wire [4:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state_reg[1] ;
  wire \FSM_onehot_state_reg[3] ;
  wire \FSM_onehot_state_reg[3]_0 ;
  wire \FSM_onehot_state_reg[3]_1 ;
  wire \FSM_onehot_state_reg[3]_2 ;
  wire \FSM_onehot_state_reg[3]_3 ;
  wire \FSM_onehot_state_reg[3]_4 ;
  wire \FSM_onehot_state_reg[3]_5 ;
  wire \FSM_onehot_state_reg[3]_6 ;
  wire \FSM_onehot_state_reg[3]_7 ;
  wire \FSM_onehot_state_reg[3]_8 ;
  wire \FSM_onehot_state_reg[3]_9 ;
  wire [2:0]Q;
  wire [2:0]S;
  wire [10:0]a_in_4;
  wire [24:0]a_in_5;
  wire clk;
  wire count;
  wire count1;
  wire count1_carry_0;
  wire count1_carry_1;
  wire [2:0]count1_carry__0_0;
  wire count1_carry__0_n_0;
  wire [3:0]count1_carry__1_0;
  wire count1_carry__1_i_3__2;
  wire count1_carry__1_i_3__2_0;
  wire count1_carry_i_10__3_n_0;
  wire count1_carry_i_12__3_n_0;
  wire count1_carry_i_13__6;
  wire count1_carry_i_15__1_n_0;
  wire count1_carry_i_19__0_0;
  wire count1_carry_i_19__0_1;
  wire count1_carry_i_19__0_2;
  wire count1_carry_i_19__0_3;
  wire count1_carry_i_20__0_n_0;
  wire count1_carry_i_24__0_n_0;
  wire count1_carry_i_26__0_n_0;
  wire count1_carry_i_28__0_n_0;
  wire count1_carry_i_35__0_n_0;
  wire count1_carry_i_37__0_n_0;
  wire count1_carry_i_4__4_0;
  wire count1_carry_i_4__4_n_0;
  wire count1_carry_i_5__7_0;
  wire count1_carry_i_5__7_1;
  wire count1_carry_n_0;
  wire \count[4]_i_15__2 ;
  wire \count[4]_i_19__2 ;
  wire \count[4]_i_19__2_0 ;
  wire \count[4]_i_3__6_n_0 ;
  wire \count[4]_i_4__6_0 ;
  wire \count[4]_i_4__6_1 ;
  wire \count[4]_i_4__6_n_0 ;
  wire \count[4]_i_5__3_n_0 ;
  wire \count[4]_i_6__2_n_0 ;
  wire [4:0]count_reg;
  wire [4:0]\count_reg_reg[0] ;
  wire \count_reg_reg[1] ;
  wire \count_reg_reg[3] ;
  wire done;
  wire done_aux_i_1__1_n_0;
  wire done_aux_reg_0;
  wire j0;
  wire \j[0]_i_1__4_n_0 ;
  wire \j_reg[0]_0 ;
  wire \j_reg[1]_0 ;
  wire \j_reg[2]_0 ;
  wire \j_reg[2]_1 ;
  wire \j_reg[2]_2 ;
  wire \j_reg[2]_3 ;
  wire \j_reg[2]_4 ;
  wire \j_reg[2]_5 ;
  wire next_out_5;
  wire [2:1]p_0_in__4;
  wire [4:0]plusOp__4;
  wire valid;
  wire valid_aux_i_1__6_n_0;
  wire valid_aux_i_2__3_n_0;
  wire [0:0]valid_aux_reg_0;
  wire [2:0]NLW_count1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry_O_UNCONNECTED;
  wire [2:0]NLW_count1_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_O_UNCONNECTED;

  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[3]_i_1__4 
       (.I0(valid),
        .I1(\count_reg_reg[0] [2]),
        .O(valid_aux_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \FSM_onehot_state[4]_i_2__5 
       (.I0(\count_reg_reg[0] [3]),
        .I1(next_out_5),
        .I2(done),
        .I3(\count_reg_reg[0] [2]),
        .I4(\count_reg_reg[0] [1]),
        .I5(\count_reg_reg[0] [0]),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFEFEFEFEFEFEFE)) 
    acks_out_reg_i_2__6
       (.I0(\count_reg_reg[0] [1]),
        .I1(\count_reg_reg[0] [0]),
        .I2(\count_reg_reg[0] [4]),
        .I3(done),
        .I4(\count_reg_reg[0] [2]),
        .I5(valid),
        .O(\FSM_onehot_state_reg[1] ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry
       (.CI(1'b0),
        .CO({count1_carry_n_0,NLW_count1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry_O_UNCONNECTED[3:0]),
        .S({count1_carry__0_0,count1_carry_i_4__4_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__0
       (.CI(count1_carry_n_0),
        .CO({count1_carry__0_n_0,NLW_count1_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__0_O_UNCONNECTED[3:0]),
        .S(count1_carry__1_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__1
       (.CI(count1_carry__0_n_0),
        .CO({NLW_count1_carry__1_CO_UNCONNECTED[3],count1,NLW_count1_carry__1_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,S}));
  LUT6 #(
    .INIT(64'h6969699696969669)) 
    count1_carry_i_10__3
       (.I0(count1_carry_i_20__0_n_0),
        .I1(D[2]),
        .I2(count1_carry_i_4__4_0),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(count1_carry_i_10__3_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    count1_carry_i_12__3
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\j_reg[2]_2 ),
        .O(count1_carry_i_12__3_n_0));
  LUT6 #(
    .INIT(64'h0000FFFF90F690F6)) 
    count1_carry_i_15__1
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(count1_carry_i_5__7_0),
        .I3(count1_carry_i_24__0_n_0),
        .I4(count1_carry_i_5__7_1),
        .I5(Q[1]),
        .O(count1_carry_i_15__1_n_0));
  LUT5 #(
    .INIT(32'h72777222)) 
    count1_carry_i_16__4
       (.I0(Q[2]),
        .I1(a_in_4[8]),
        .I2(count1_carry_i_26__0_n_0),
        .I3(Q[0]),
        .I4(count1_carry_i_13__6),
        .O(\j_reg[2]_3 ));
  LUT6 #(
    .INIT(64'hDFDFDFCECECECECE)) 
    count1_carry_i_17__4
       (.I0(Q[2]),
        .I1(D[0]),
        .I2(a_in_4[7]),
        .I3(count1_carry_i_26__0_n_0),
        .I4(Q[0]),
        .I5(count1_carry_i_28__0_n_0),
        .O(\j_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h4440EEEA)) 
    count1_carry_i_19__0
       (.I0(Q[2]),
        .I1(count1_carry_i_28__0_n_0),
        .I2(Q[0]),
        .I3(count1_carry_i_26__0_n_0),
        .I4(a_in_4[7]),
        .O(\j_reg[2]_1 ));
  LUT3 #(
    .INIT(8'h17)) 
    count1_carry_i_20__0
       (.I0(D[1]),
        .I1(\j_reg[2]_3 ),
        .I2(\j_reg[2]_2 ),
        .O(count1_carry_i_20__0_n_0));
  LUT5 #(
    .INIT(32'hEABF2A80)) 
    count1_carry_i_24__0
       (.I0(a_in_4[2]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(a_in_4[6]),
        .O(count1_carry_i_24__0_n_0));
  LUT6 #(
    .INIT(64'h14D7FFFF14D70000)) 
    count1_carry_i_26__0
       (.I0(count1_carry_i_19__0_2),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(count1_carry_i_35__0_n_0),
        .I4(Q[1]),
        .I5(count1_carry_i_19__0_3),
        .O(count1_carry_i_26__0_n_0));
  LUT6 #(
    .INIT(64'h2EEE2E22FFFFFFFF)) 
    count1_carry_i_28__0
       (.I0(count1_carry_i_19__0_0),
        .I1(Q[1]),
        .I2(count1_carry_i_37__0_n_0),
        .I3(Q[2]),
        .I4(count1_carry_i_19__0_1),
        .I5(Q[0]),
        .O(count1_carry_i_28__0_n_0));
  LUT3 #(
    .INIT(8'h78)) 
    count1_carry_i_30__0
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\j_reg[2]_5 ));
  LUT3 #(
    .INIT(8'h70)) 
    count1_carry_i_32
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(\j_reg[1]_0 ));
  LUT5 #(
    .INIT(32'hEABF2A80)) 
    count1_carry_i_35__0
       (.I0(a_in_4[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(a_in_4[5]),
        .O(count1_carry_i_35__0_n_0));
  LUT5 #(
    .INIT(32'hEABF2A80)) 
    count1_carry_i_37__0
       (.I0(a_in_4[0]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(a_in_4[4]),
        .O(count1_carry_i_37__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    count1_carry_i_40__0
       (.I0(Q[0]),
        .I1(Q[2]),
        .O(\j_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h08010108900000A0)) 
    count1_carry_i_4__4
       (.I0(count1_carry_i_10__3_n_0),
        .I1(\count_reg_reg[3] ),
        .I2(count1_carry_0),
        .I3(count1_carry_i_12__3_n_0),
        .I4(count1_carry_1),
        .I5(Q[0]),
        .O(count1_carry_i_4__4_n_0));
  LUT5 #(
    .INIT(32'h72777222)) 
    count1_carry_i_5__7
       (.I0(Q[2]),
        .I1(a_in_4[9]),
        .I2(count1_carry__1_i_3__2),
        .I3(Q[0]),
        .I4(count1_carry_i_15__1_n_0),
        .O(\j_reg[2]_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    count1_carry_i_7__3
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\j_reg[2]_4 ));
  LUT4 #(
    .INIT(16'h566A)) 
    count1_carry_i_9__2
       (.I0(\count[4]_i_4__6_n_0 ),
        .I1(\j_reg[2]_0 ),
        .I2(D[3]),
        .I3(count1_carry__1_i_3__2_0),
        .O(\count_reg_reg[3] ));
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_1__4 
       (.I0(count_reg[0]),
        .O(plusOp__4[0]));
  (* \PinAttr:I1:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count[1]_i_1__4 
       (.I0(count_reg[0]),
        .I1(count_reg[1]),
        .O(plusOp__4[1]));
  (* \PinAttr:I1:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \count[2]_i_1__4 
       (.I0(count_reg[2]),
        .I1(count_reg[1]),
        .I2(count_reg[0]),
        .O(plusOp__4[2]));
  (* \PinAttr:I3:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \count[3]_i_1__4 
       (.I0(count_reg[3]),
        .I1(count_reg[2]),
        .I2(count_reg[0]),
        .I3(count_reg[1]),
        .O(plusOp__4[3]));
  LUT5 #(
    .INIT(32'h470047FF)) 
    \count[4]_i_13__2 
       (.I0(a_in_5[19]),
        .I1(\count[4]_i_19__2 ),
        .I2(a_in_5[3]),
        .I3(\count[4]_i_19__2_0 ),
        .I4(a_in_5[11]),
        .O(\FSM_onehot_state_reg[3]_3 ));
  LUT5 #(
    .INIT(32'h00FF3535)) 
    \count[4]_i_14__2 
       (.I0(a_in_5[23]),
        .I1(a_in_5[7]),
        .I2(\count[4]_i_19__2 ),
        .I3(a_in_5[15]),
        .I4(\count[4]_i_19__2_0 ),
        .O(\FSM_onehot_state_reg[3]_0 ));
  LUT5 #(
    .INIT(32'h00FF3535)) 
    \count[4]_i_17__2 
       (.I0(a_in_5[22]),
        .I1(a_in_5[6]),
        .I2(\count[4]_i_19__2 ),
        .I3(a_in_5[14]),
        .I4(\count[4]_i_19__2_0 ),
        .O(\FSM_onehot_state_reg[3]_1 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \count[4]_i_18__2 
       (.I0(a_in_5[18]),
        .I1(\count[4]_i_19__2 ),
        .I2(a_in_5[2]),
        .I3(\count[4]_i_19__2_0 ),
        .I4(a_in_5[10]),
        .O(\FSM_onehot_state_reg[3]_2 ));
  LUT3 #(
    .INIT(8'h10)) 
    \count[4]_i_1__4 
       (.I0(done),
        .I1(Q[2]),
        .I2(\count[4]_i_3__6_n_0 ),
        .O(count));
  LUT5 #(
    .INIT(32'h00FF3535)) 
    \count[4]_i_25__1 
       (.I0(a_in_5[21]),
        .I1(a_in_5[5]),
        .I2(\count[4]_i_19__2 ),
        .I3(a_in_5[13]),
        .I4(\count[4]_i_19__2_0 ),
        .O(\FSM_onehot_state_reg[3] ));
  LUT6 #(
    .INIT(64'h000047FF47FF47FF)) 
    \count[4]_i_26__2 
       (.I0(a_in_5[17]),
        .I1(\count[4]_i_19__2 ),
        .I2(a_in_5[1]),
        .I3(\count[4]_i_19__2_0 ),
        .I4(\count[4]_i_15__2 ),
        .I5(a_in_5[9]),
        .O(\FSM_onehot_state_reg[3]_4 ));
  LUT6 #(
    .INIT(64'h553355330F000FFF)) 
    \count[4]_i_27__1 
       (.I0(a_in_5[16]),
        .I1(a_in_5[0]),
        .I2(a_in_5[8]),
        .I3(\count[4]_i_19__2 ),
        .I4(a_in_5[24]),
        .I5(\count[4]_i_19__2_0 ),
        .O(\FSM_onehot_state_reg[3]_5 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \count[4]_i_28__2 
       (.I0(a_in_5[12]),
        .I1(\count[4]_i_19__2_0 ),
        .I2(a_in_5[4]),
        .I3(\count[4]_i_19__2 ),
        .I4(a_in_5[20]),
        .O(\FSM_onehot_state_reg[3]_9 ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \count[4]_i_29__2 
       (.I0(a_in_5[1]),
        .I1(\count[4]_i_19__2 ),
        .I2(a_in_5[17]),
        .I3(\count[4]_i_19__2_0 ),
        .I4(a_in_5[9]),
        .O(\count_reg_reg[1] ));
  (* \PinAttr:I1:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count[4]_i_2__4 
       (.I0(count_reg[4]),
        .I1(count_reg[1]),
        .I2(count_reg[0]),
        .I3(count_reg[2]),
        .I4(count_reg[3]),
        .O(plusOp__4[4]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \count[4]_i_32__1 
       (.I0(a_in_5[8]),
        .I1(a_in_5[24]),
        .I2(a_in_5[0]),
        .I3(\count[4]_i_19__2 ),
        .I4(a_in_5[16]),
        .I5(\count[4]_i_19__2_0 ),
        .O(\FSM_onehot_state_reg[3]_8 ));
  LUT5 #(
    .INIT(32'h47444777)) 
    \count[4]_i_34__2 
       (.I0(a_in_5[11]),
        .I1(\count[4]_i_19__2_0 ),
        .I2(a_in_5[3]),
        .I3(\count[4]_i_19__2 ),
        .I4(a_in_5[19]),
        .O(\FSM_onehot_state_reg[3]_6 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \count[4]_i_35__1 
       (.I0(a_in_5[10]),
        .I1(\count[4]_i_19__2_0 ),
        .I2(a_in_5[2]),
        .I3(\count[4]_i_19__2 ),
        .I4(a_in_5[18]),
        .O(\FSM_onehot_state_reg[3]_7 ));
  LUT5 #(
    .INIT(32'hF090F0F0)) 
    \count[4]_i_3__6 
       (.I0(D[3]),
        .I1(\j_reg[2]_0 ),
        .I2(count1),
        .I3(\count[4]_i_4__6_n_0 ),
        .I4(done_aux_reg_0),
        .O(\count[4]_i_3__6_n_0 ));
  LUT6 #(
    .INIT(64'h66633363CCC999C9)) 
    \count[4]_i_4__6 
       (.I0(Q[2]),
        .I1(D[4]),
        .I2(\count[4]_i_5__3_n_0 ),
        .I3(Q[0]),
        .I4(count1_carry_i_15__1_n_0),
        .I5(a_in_4[10]),
        .O(\count[4]_i_4__6_n_0 ));
  LUT6 #(
    .INIT(64'h55555555FCCF0CC0)) 
    \count[4]_i_5__3 
       (.I0(\count[4]_i_4__6_0 ),
        .I1(\count[4]_i_6__2_n_0 ),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(\count[4]_i_4__6_1 ),
        .I5(Q[1]),
        .O(\count[4]_i_5__3_n_0 ));
  LUT5 #(
    .INIT(32'h41117DDD)) 
    \count[4]_i_6__2 
       (.I0(a_in_4[7]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(a_in_4[3]),
        .O(\count[4]_i_6__2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__4[0]),
        .Q(count_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__4[1]),
        .Q(count_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__4[2]),
        .Q(count_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__4[3]),
        .Q(count_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__4[4]),
        .Q(count_reg[4]));
  LUT5 #(
    .INIT(32'hFFFF111B)) 
    done_aux_i_1__1
       (.I0(Q[2]),
        .I1(\count[4]_i_3__6_n_0 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(done),
        .O(done_aux_i_1__1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    done_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(done_aux_i_1__1_n_0),
        .Q(done));
  LUT1 #(
    .INIT(2'h1)) 
    \j[0]_i_1__4 
       (.I0(Q[0]),
        .O(\j[0]_i_1__4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \j[1]_i_1__4 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in__4[1]));
  LUT2 #(
    .INIT(4'h1)) 
    \j[2]_i_1__4 
       (.I0(Q[2]),
        .I1(done),
        .O(j0));
  LUT2 #(
    .INIT(4'h8)) 
    \j[2]_i_2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in__4[2]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[0] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(\j[0]_i_1__4_n_0 ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[1] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in__4[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[2] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in__4[2]),
        .Q(Q[2]));
  (* \PinAttr:I4:HOLD_DETOUR  = "191" *) 
  LUT5 #(
    .INIT(32'hFFFF0100)) 
    valid_aux_i_1__6
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(valid_aux_i_2__3_n_0),
        .I3(Q[2]),
        .I4(valid),
        .O(valid_aux_i_1__6_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    valid_aux_i_2__3
       (.I0(j0),
        .I1(count_reg[4]),
        .I2(count_reg[3]),
        .I3(count_reg[2]),
        .I4(count_reg[0]),
        .I5(count_reg[1]),
        .O(valid_aux_i_2__3_n_0));
  FDCE #(
    .INIT(1'b0)) 
    valid_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(valid_aux_i_1__6_n_0),
        .Q(valid));
endmodule

(* ORIG_REF_NAME = "ctrl_logic" *) 
module design_1_top_nqueens_0_0_ctrl_logic__parameterized5
   (valid,
    Q,
    \j_reg[2]_0 ,
    \j_reg[1]_0 ,
    \j_reg[1]_1 ,
    \FSM_onehot_state_reg[3] ,
    \FSM_onehot_state_reg[3]_0 ,
    \j_reg[0]_0 ,
    \j_reg[0]_1 ,
    \FSM_onehot_state_reg[3]_1 ,
    \FSM_onehot_state_reg[3]_2 ,
    \j_reg[0]_2 ,
    \FSM_onehot_state_reg[3]_3 ,
    \count_reg_reg[3] ,
    \count_reg_reg[4] ,
    \j_reg[2]_1 ,
    \j_reg[1]_2 ,
    \j_reg[2]_2 ,
    E,
    \FSM_onehot_state_reg[1] ,
    valid_aux_reg_0,
    \j_reg[2]_3 ,
    count1_carry__0_0,
    count1_carry__1_0,
    S,
    clk,
    AR,
    count1_carry_i_4__5_0,
    D,
    count1_carry_i_4__5_1,
    \count[4]_i_5__4_0 ,
    \count_reg[0]_0 ,
    done_aux_reg_0,
    \count[4]_i_5__3 ,
    \count[4]_i_5__3_0 ,
    a_in_4,
    count1_carry_i_15__1,
    count1_carry_i_15__1_0,
    count1_carry_i_28__0,
    count1_carry_0,
    count1_carry_1,
    count1_carry_2,
    count1_carry__1_i_1__3,
    count1_carry__1_i_1__3_0,
    \count_reg[0]_1 ,
    \count_reg[0]_2 ,
    a_in_3,
    \count_reg_reg[0] ,
    next_out_4);
  output valid;
  output [2:0]Q;
  output \j_reg[2]_0 ;
  output \j_reg[1]_0 ;
  output \j_reg[1]_1 ;
  output \FSM_onehot_state_reg[3] ;
  output \FSM_onehot_state_reg[3]_0 ;
  output \j_reg[0]_0 ;
  output \j_reg[0]_1 ;
  output \FSM_onehot_state_reg[3]_1 ;
  output \FSM_onehot_state_reg[3]_2 ;
  output \j_reg[0]_2 ;
  output \FSM_onehot_state_reg[3]_3 ;
  output \count_reg_reg[3] ;
  output \count_reg_reg[4] ;
  output \j_reg[2]_1 ;
  output [0:0]\j_reg[1]_2 ;
  output \j_reg[2]_2 ;
  output [0:0]E;
  output \FSM_onehot_state_reg[1] ;
  output [0:0]valid_aux_reg_0;
  output \j_reg[2]_3 ;
  input [2:0]count1_carry__0_0;
  input [3:0]count1_carry__1_0;
  input [2:0]S;
  input clk;
  input [0:0]AR;
  input count1_carry_i_4__5_0;
  input [2:0]D;
  input count1_carry_i_4__5_1;
  input \count[4]_i_5__4_0 ;
  input \count_reg[0]_0 ;
  input done_aux_reg_0;
  input [2:0]\count[4]_i_5__3 ;
  input [4:0]\count[4]_i_5__3_0 ;
  input [14:0]a_in_4;
  input count1_carry_i_15__1;
  input count1_carry_i_15__1_0;
  input count1_carry_i_28__0;
  input count1_carry_0;
  input count1_carry_1;
  input count1_carry_2;
  input count1_carry__1_i_1__3;
  input count1_carry__1_i_1__3_0;
  input \count_reg[0]_1 ;
  input \count_reg[0]_2 ;
  input [0:0]a_in_3;
  input [4:0]\count_reg_reg[0] ;
  input next_out_4;

  wire [0:0]AR;
  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state_reg[1] ;
  wire \FSM_onehot_state_reg[3] ;
  wire \FSM_onehot_state_reg[3]_0 ;
  wire \FSM_onehot_state_reg[3]_1 ;
  wire \FSM_onehot_state_reg[3]_2 ;
  wire \FSM_onehot_state_reg[3]_3 ;
  wire [2:0]Q;
  wire [2:0]S;
  wire [0:0]a_in_3;
  wire [14:0]a_in_4;
  wire clk;
  wire count;
  wire count1;
  wire count1_carry_0;
  wire count1_carry_1;
  wire count1_carry_2;
  wire [2:0]count1_carry__0_0;
  wire count1_carry__0_n_0;
  wire [3:0]count1_carry__1_0;
  wire count1_carry__1_i_1__3;
  wire count1_carry__1_i_1__3_0;
  wire count1_carry_i_15__1;
  wire count1_carry_i_15__1_0;
  wire count1_carry_i_28__0;
  wire count1_carry_i_29__0_n_0;
  wire count1_carry_i_31__0_n_0;
  wire count1_carry_i_33__0_n_0;
  wire count1_carry_i_39__0_n_0;
  wire count1_carry_i_4__5_0;
  wire count1_carry_i_4__5_1;
  wire count1_carry_i_4__5_n_0;
  wire count1_carry_i_7__6_n_0;
  wire count1_carry_n_0;
  wire \count[0]_i_1__5_n_0 ;
  wire \count[4]_i_10__3_n_0 ;
  wire [2:0]\count[4]_i_5__3 ;
  wire [4:0]\count[4]_i_5__3_0 ;
  wire \count[4]_i_5__4_0 ;
  wire [4:0]count_reg;
  wire \count_reg[0]_0 ;
  wire \count_reg[0]_1 ;
  wire \count_reg[0]_2 ;
  wire [4:0]\count_reg_reg[0] ;
  wire \count_reg_reg[3] ;
  wire \count_reg_reg[4] ;
  wire done;
  wire done_aux_i_1__7_n_0;
  wire done_aux_i_3_n_0;
  wire done_aux_reg_0;
  wire j0;
  wire \j[0]_i_1__5_n_0 ;
  wire \j_reg[0]_0 ;
  wire \j_reg[0]_1 ;
  wire \j_reg[0]_2 ;
  wire \j_reg[1]_0 ;
  wire \j_reg[1]_1 ;
  wire [0:0]\j_reg[1]_2 ;
  wire \j_reg[2]_0 ;
  wire \j_reg[2]_1 ;
  wire \j_reg[2]_2 ;
  wire \j_reg[2]_3 ;
  wire next_out_4;
  wire [2:2]p_0_in__5;
  wire [4:1]plusOp__5;
  wire valid;
  wire valid_aux_i_1__3_n_0;
  wire valid_aux_i_2__4_n_0;
  wire [0:0]valid_aux_reg_0;
  wire [2:0]NLW_count1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry_O_UNCONNECTED;
  wire [2:0]NLW_count1_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_O_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[3]_i_1__5 
       (.I0(valid),
        .I1(\count_reg_reg[0] [2]),
        .O(valid_aux_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \FSM_onehot_state[4]_i_2__2 
       (.I0(\count_reg_reg[0] [3]),
        .I1(next_out_4),
        .I2(done),
        .I3(\count_reg_reg[0] [2]),
        .I4(\count_reg_reg[0] [1]),
        .I5(\count_reg_reg[0] [0]),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFEFEFEFEFEFEFE)) 
    acks_out_reg_i_2__3
       (.I0(\count_reg_reg[0] [1]),
        .I1(\count_reg_reg[0] [0]),
        .I2(\count_reg_reg[0] [4]),
        .I3(done),
        .I4(\count_reg_reg[0] [2]),
        .I5(valid),
        .O(\FSM_onehot_state_reg[1] ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry
       (.CI(1'b0),
        .CO({count1_carry_n_0,NLW_count1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry_O_UNCONNECTED[3:0]),
        .S({count1_carry__0_0,count1_carry_i_4__5_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__0
       (.CI(count1_carry_n_0),
        .CO({count1_carry__0_n_0,NLW_count1_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__0_O_UNCONNECTED[3:0]),
        .S(count1_carry__1_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__1
       (.CI(count1_carry__0_n_0),
        .CO({NLW_count1_carry__1_CO_UNCONNECTED[3],count1,NLW_count1_carry__1_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,S}));
  LUT3 #(
    .INIT(8'hC5)) 
    count1_carry_i_14__3
       (.I0(\j_reg[0]_0 ),
        .I1(\j_reg[0]_1 ),
        .I2(\count[4]_i_5__3 [1]),
        .O(\j_reg[1]_1 ));
  LUT5 #(
    .INIT(32'h72777222)) 
    count1_carry_i_18__2
       (.I0(\count[4]_i_5__3 [2]),
        .I1(\count[4]_i_5__3_0 [2]),
        .I2(\j_reg[1]_0 ),
        .I3(\count[4]_i_5__3 [0]),
        .I4(\j_reg[1]_1 ),
        .O(\j_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hAAAACFC0CFC0AAAA)) 
    count1_carry_i_21__0
       (.I0(count1_carry_i_29__0_n_0),
        .I1(a_in_4[5]),
        .I2(count1_carry_i_15__1_0),
        .I3(a_in_4[13]),
        .I4(\count[4]_i_5__3 [0]),
        .I5(\count[4]_i_5__3 [2]),
        .O(\j_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h282828EBEBEB28EB)) 
    count1_carry_i_22__0
       (.I0(count1_carry_i_31__0_n_0),
        .I1(\count[4]_i_5__3 [0]),
        .I2(\count[4]_i_5__3 [2]),
        .I3(\count[4]_i_5__3_0 [0]),
        .I4(count1_carry_i_15__1_0),
        .I5(a_in_4[7]),
        .O(\j_reg[0]_1 ));
  LUT5 #(
    .INIT(32'h5555303F)) 
    count1_carry_i_23__0
       (.I0(a_in_4[10]),
        .I1(a_in_4[2]),
        .I2(count1_carry_i_15__1),
        .I3(\count[4]_i_5__3_0 [3]),
        .I4(count1_carry_i_15__1_0),
        .O(\FSM_onehot_state_reg[3] ));
  LUT6 #(
    .INIT(64'hFFB8B8FF00B8B800)) 
    count1_carry_i_25__0
       (.I0(a_in_4[4]),
        .I1(count1_carry_i_15__1_0),
        .I2(a_in_4[12]),
        .I3(\count[4]_i_5__3 [0]),
        .I4(\count[4]_i_5__3 [2]),
        .I5(count1_carry_i_33__0_n_0),
        .O(\j_reg[0]_2 ));
  LUT3 #(
    .INIT(8'hC5)) 
    count1_carry_i_27__0
       (.I0(\j_reg[0]_2 ),
        .I1(\FSM_onehot_state_reg[3]_3 ),
        .I2(\count[4]_i_5__3 [1]),
        .O(\j_reg[1]_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    count1_carry_i_29__0
       (.I0(a_in_4[9]),
        .I1(count1_carry_i_15__1_0),
        .I2(a_in_4[1]),
        .I3(count1_carry_i_15__1),
        .I4(\count[4]_i_5__3_0 [2]),
        .O(count1_carry_i_29__0_n_0));
  LUT5 #(
    .INIT(32'h470047FF)) 
    count1_carry_i_31__0
       (.I0(\count[4]_i_5__3_0 [4]),
        .I1(count1_carry_i_15__1),
        .I2(a_in_4[3]),
        .I3(count1_carry_i_15__1_0),
        .I4(a_in_4[11]),
        .O(count1_carry_i_31__0_n_0));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    count1_carry_i_33__0
       (.I0(a_in_4[8]),
        .I1(count1_carry_i_15__1_0),
        .I2(a_in_4[0]),
        .I3(count1_carry_i_15__1),
        .I4(\count[4]_i_5__3_0 [1]),
        .O(count1_carry_i_33__0_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    count1_carry_i_34__0
       (.I0(\count[4]_i_5__3_0 [2]),
        .I1(count1_carry_i_15__1),
        .I2(a_in_4[1]),
        .I3(count1_carry_i_15__1_0),
        .I4(a_in_4[9]),
        .O(\FSM_onehot_state_reg[3]_2 ));
  LUT6 #(
    .INIT(64'hCC55CC550F000FFF)) 
    count1_carry_i_36__0
       (.I0(a_in_4[10]),
        .I1(count1_carry_i_39__0_n_0),
        .I2(a_in_4[6]),
        .I3(count1_carry_i_15__1_0),
        .I4(a_in_4[14]),
        .I5(count1_carry_i_28__0),
        .O(\FSM_onehot_state_reg[3]_3 ));
  LUT5 #(
    .INIT(32'h470047FF)) 
    count1_carry_i_38__0
       (.I0(\count[4]_i_5__3_0 [1]),
        .I1(count1_carry_i_15__1),
        .I2(a_in_4[0]),
        .I3(count1_carry_i_15__1_0),
        .I4(a_in_4[8]),
        .O(\FSM_onehot_state_reg[3]_1 ));
  LUT3 #(
    .INIT(8'h47)) 
    count1_carry_i_39__0
       (.I0(\count[4]_i_5__3_0 [3]),
        .I1(count1_carry_i_15__1),
        .I2(a_in_4[2]),
        .O(count1_carry_i_39__0_n_0));
  LUT6 #(
    .INIT(64'hA000009008010108)) 
    count1_carry_i_4__5
       (.I0(count1_carry_i_7__6_n_0),
        .I1(\count_reg_reg[3] ),
        .I2(count1_carry_0),
        .I3(count1_carry_1),
        .I4(count1_carry_2),
        .I5(Q[0]),
        .O(count1_carry_i_4__5_n_0));
  LUT4 #(
    .INIT(16'h6A56)) 
    count1_carry_i_6__4
       (.I0(\count_reg_reg[4] ),
        .I1(D[1]),
        .I2(count1_carry__1_i_1__3),
        .I3(count1_carry__1_i_1__3_0),
        .O(\count_reg_reg[3] ));
  LUT4 #(
    .INIT(16'h9669)) 
    count1_carry_i_7__6
       (.I0(Q[2]),
        .I1(count1_carry_i_4__5_0),
        .I2(D[0]),
        .I3(count1_carry_i_4__5_1),
        .O(count1_carry_i_7__6_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_1__5 
       (.I0(count_reg[0]),
        .O(\count[0]_i_1__5_n_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "192" *) 
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count[1]_i_1__5 
       (.I0(count_reg[1]),
        .I1(count_reg[0]),
        .O(plusOp__5[1]));
  (* \PinAttr:I2:HOLD_DETOUR  = "192" *) 
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \count[2]_i_1__5 
       (.I0(count_reg[2]),
        .I1(count_reg[0]),
        .I2(count_reg[1]),
        .O(plusOp__5[2]));
  (* \PinAttr:I2:HOLD_DETOUR  = "194" *) 
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \count[3]_i_1__5 
       (.I0(count_reg[3]),
        .I1(count_reg[2]),
        .I2(count_reg[1]),
        .I3(count_reg[0]),
        .O(plusOp__5[3]));
  LUT4 #(
    .INIT(16'hFFE0)) 
    \count[4]_i_10__3 
       (.I0(\count[4]_i_5__4_0 ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(\count[4]_i_10__3_n_0 ));
  LUT3 #(
    .INIT(8'h61)) 
    \count[4]_i_19__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\j_reg[2]_3 ));
  LUT6 #(
    .INIT(64'h4444444000000000)) 
    \count[4]_i_1__3 
       (.I0(done),
        .I1(\j_reg[2]_1 ),
        .I2(\count_reg[0]_1 ),
        .I3(\count_reg_reg[4] ),
        .I4(\count_reg[0]_0 ),
        .I5(count1),
        .O(count));
  LUT3 #(
    .INIT(8'h9A)) 
    \count[4]_i_20__1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(\j_reg[2]_2 ));
  (* \PinAttr:I2:HOLD_DETOUR  = "194" *) 
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count[4]_i_2__5 
       (.I0(count_reg[4]),
        .I1(count_reg[0]),
        .I2(count_reg[1]),
        .I3(count_reg[2]),
        .I4(count_reg[3]),
        .O(plusOp__5[4]));
  LUT3 #(
    .INIT(8'h15)) 
    \count[4]_i_3__4 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\j_reg[2]_1 ));
  LUT6 #(
    .INIT(64'h55A655A655A6AAAA)) 
    \count[4]_i_5__4 
       (.I0(D[2]),
        .I1(\count_reg[0]_2 ),
        .I2(Q[0]),
        .I3(\count[4]_i_10__3_n_0 ),
        .I4(a_in_3),
        .I5(\j_reg[2]_1 ),
        .O(\count_reg_reg[4] ));
  LUT5 #(
    .INIT(32'h47444777)) 
    \count[4]_i_7__3 
       (.I0(a_in_4[11]),
        .I1(count1_carry_i_15__1_0),
        .I2(a_in_4[3]),
        .I3(count1_carry_i_15__1),
        .I4(\count[4]_i_5__3_0 [4]),
        .O(\FSM_onehot_state_reg[3]_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(\count[0]_i_1__5_n_0 ),
        .Q(count_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__5[1]),
        .Q(count_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__5[2]),
        .Q(count_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__5[3]),
        .Q(count_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__5[4]),
        .Q(count_reg[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFF55551511)) 
    done_aux_i_1__7
       (.I0(Q[2]),
        .I1(count1),
        .I2(\count_reg[0]_0 ),
        .I3(done_aux_reg_0),
        .I4(done_aux_i_3_n_0),
        .I5(done),
        .O(done_aux_i_1__7_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    done_aux_i_3
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(done_aux_i_3_n_0));
  FDCE #(
    .INIT(1'b0)) 
    done_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(done_aux_i_1__7_n_0),
        .Q(done));
  LUT1 #(
    .INIT(2'h1)) 
    \j[0]_i_1__5 
       (.I0(Q[0]),
        .O(\j[0]_i_1__5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \j[1]_i_1__5 
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(\j_reg[1]_2 ));
  LUT4 #(
    .INIT(16'h0007)) 
    \j[2]_i_1__5 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(done),
        .O(j0));
  LUT2 #(
    .INIT(4'h8)) 
    \j[2]_i_2__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in__5));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[0] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(\j[0]_i_1__5_n_0 ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[1] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(\j_reg[1]_2 ),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[2] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(p_0_in__5),
        .Q(Q[2]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    valid_aux_i_1__3
       (.I0(valid_aux_i_2__4_n_0),
        .I1(Q[2]),
        .I2(valid),
        .O(valid_aux_i_1__3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFF7FFFFFFFF)) 
    valid_aux_i_2__4
       (.I0(count_reg[1]),
        .I1(count_reg[0]),
        .I2(count_reg[2]),
        .I3(count_reg[3]),
        .I4(count_reg[4]),
        .I5(done_aux_i_3_n_0),
        .O(valid_aux_i_2__4_n_0));
  FDCE #(
    .INIT(1'b0)) 
    valid_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(valid_aux_i_1__3_n_0),
        .Q(valid));
endmodule

(* ORIG_REF_NAME = "ctrl_logic" *) 
module design_1_top_nqueens_0_0_ctrl_logic__parameterized6
   (CO,
    valid,
    \j_reg[0]_0 ,
    Q,
    \count_reg_reg[0] ,
    \j_reg[0]_1 ,
    \j_reg[0]_2 ,
    \count_reg_reg[0]_0 ,
    \j_reg[0]_3 ,
    \j_reg[0]_4 ,
    \j_reg[0]_5 ,
    \j_reg[1]_0 ,
    \count_reg_reg[1] ,
    E,
    \FSM_onehot_state_reg[1] ,
    valid_aux_reg_0,
    count1_carry__0_0,
    count1_carry__1_0,
    S,
    clk,
    AR,
    count1_carry__1_i_3__3,
    count1_carry_i_4__6_0,
    D,
    a_in_2,
    \count[4]_i_3__2 ,
    count1_carry_i_14__4_0,
    count1_carry_i_10__7,
    \count[4]_i_5__4 ,
    count1_carry_i_12__4_0,
    a_in_3,
    count1_carry_i_13__4_0,
    count1_carry_i_13__4_1,
    count1_carry_0,
    count1_carry_1,
    count1_carry_2,
    \count_reg_reg[0]_1 ,
    next_out_3,
    done_aux_reg_0,
    count1_carry_i_4__6_1,
    count1_carry_i_4__6_2);
  output [0:0]CO;
  output valid;
  output \j_reg[0]_0 ;
  output [1:0]Q;
  output \count_reg_reg[0] ;
  output \j_reg[0]_1 ;
  output \j_reg[0]_2 ;
  output \count_reg_reg[0]_0 ;
  output \j_reg[0]_3 ;
  output \j_reg[0]_4 ;
  output \j_reg[0]_5 ;
  output \j_reg[1]_0 ;
  output \count_reg_reg[1] ;
  output [0:0]E;
  output \FSM_onehot_state_reg[1] ;
  output [0:0]valid_aux_reg_0;
  input [2:0]count1_carry__0_0;
  input [3:0]count1_carry__1_0;
  input [2:0]S;
  input clk;
  input [0:0]AR;
  input [2:0]count1_carry__1_i_3__3;
  input count1_carry_i_4__6_0;
  input [2:0]D;
  input [0:0]a_in_2;
  input \count[4]_i_3__2 ;
  input [4:0]count1_carry_i_14__4_0;
  input count1_carry_i_10__7;
  input [1:0]\count[4]_i_5__4 ;
  input [0:0]count1_carry_i_12__4_0;
  input [9:0]a_in_3;
  input count1_carry_i_13__4_0;
  input count1_carry_i_13__4_1;
  input count1_carry_0;
  input count1_carry_1;
  input count1_carry_2;
  input [4:0]\count_reg_reg[0]_1 ;
  input next_out_3;
  input done_aux_reg_0;
  input count1_carry_i_4__6_1;
  input count1_carry_i_4__6_2;

  wire [0:0]AR;
  wire [0:0]CO;
  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state_reg[1] ;
  wire [1:0]Q;
  wire [2:0]S;
  wire [0:0]a_in_2;
  wire [9:0]a_in_3;
  wire clk;
  wire count;
  wire count1_carry_0;
  wire count1_carry_1;
  wire count1_carry_2;
  wire [2:0]count1_carry__0_0;
  wire count1_carry__0_n_0;
  wire [3:0]count1_carry__1_0;
  wire [2:0]count1_carry__1_i_3__3;
  wire count1_carry_i_10__4_n_0;
  wire count1_carry_i_10__7;
  wire [0:0]count1_carry_i_12__4_0;
  wire count1_carry_i_12__6_n_0;
  wire count1_carry_i_13__4_0;
  wire count1_carry_i_13__4_1;
  wire count1_carry_i_13__4_n_0;
  wire [4:0]count1_carry_i_14__4_0;
  wire count1_carry_i_14__4_n_0;
  wire count1_carry_i_15__2_n_0;
  wire count1_carry_i_16__2_n_0;
  wire count1_carry_i_17__2_n_0;
  wire count1_carry_i_4__6_0;
  wire count1_carry_i_4__6_1;
  wire count1_carry_i_4__6_2;
  wire count1_carry_i_4__6_n_0;
  wire count1_carry_n_0;
  wire \count[4]_i_12__3_n_0 ;
  wire \count[4]_i_13__3_n_0 ;
  wire \count[4]_i_14__3_n_0 ;
  wire \count[4]_i_15__3_n_0 ;
  wire \count[4]_i_17__3_n_0 ;
  wire \count[4]_i_18__3_n_0 ;
  wire \count[4]_i_3__2 ;
  wire [1:0]\count[4]_i_5__4 ;
  wire [4:0]count_reg;
  wire \count_reg_reg[0] ;
  wire \count_reg_reg[0]_0 ;
  wire [4:0]\count_reg_reg[0]_1 ;
  wire \count_reg_reg[1] ;
  wire done;
  wire done_aux_i_1__3_n_0;
  wire done_aux_reg_0;
  wire j0;
  wire \j[0]_i_1__6_n_0 ;
  wire \j_reg[0]_0 ;
  wire \j_reg[0]_1 ;
  wire \j_reg[0]_2 ;
  wire \j_reg[0]_3 ;
  wire \j_reg[0]_4 ;
  wire \j_reg[0]_5 ;
  wire \j_reg[1]_0 ;
  wire next_out_3;
  wire [4:0]plusOp__6;
  wire valid;
  wire valid_aux_i_1__7_n_0;
  wire valid_aux_i_2__5_n_0;
  wire [0:0]valid_aux_reg_0;
  wire [2:0]NLW_count1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry_O_UNCONNECTED;
  wire [2:0]NLW_count1_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_O_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[3]_i_1__6 
       (.I0(valid),
        .I1(\count_reg_reg[0]_1 [2]),
        .O(valid_aux_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \FSM_onehot_state[4]_i_2__0 
       (.I0(\count_reg_reg[0]_1 [3]),
        .I1(next_out_3),
        .I2(done),
        .I3(\count_reg_reg[0]_1 [2]),
        .I4(\count_reg_reg[0]_1 [1]),
        .I5(\count_reg_reg[0]_1 [0]),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFEFEFEFEFEFEFE)) 
    acks_out_reg_i_2__1
       (.I0(\count_reg_reg[0]_1 [1]),
        .I1(\count_reg_reg[0]_1 [0]),
        .I2(\count_reg_reg[0]_1 [4]),
        .I3(done),
        .I4(\count_reg_reg[0]_1 [2]),
        .I5(valid),
        .O(\FSM_onehot_state_reg[1] ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry
       (.CI(1'b0),
        .CO({count1_carry_n_0,NLW_count1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry_O_UNCONNECTED[3:0]),
        .S({count1_carry__0_0,count1_carry_i_4__6_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__0
       (.CI(count1_carry_n_0),
        .CO({count1_carry__0_n_0,NLW_count1_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__0_O_UNCONNECTED[3:0]),
        .S(count1_carry__1_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__1
       (.CI(count1_carry__0_n_0),
        .CO({NLW_count1_carry__1_CO_UNCONNECTED[3],CO,NLW_count1_carry__1_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,S}));
  LUT5 #(
    .INIT(32'h69969696)) 
    count1_carry_i_10__4
       (.I0(count1_carry_i_4__6_1),
        .I1(D[1]),
        .I2(count1_carry_i_4__6_2),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(count1_carry_i_10__4_n_0));
  LUT5 #(
    .INIT(32'h303FAAAA)) 
    count1_carry_i_11__5
       (.I0(count1_carry_i_14__4_0[0]),
        .I1(count1_carry_i_13__4_n_0),
        .I2(\count[4]_i_5__4 [0]),
        .I3(count1_carry_i_14__4_n_0),
        .I4(count1_carry_i_10__7),
        .O(\j_reg[0]_1 ));
  LUT5 #(
    .INIT(32'h2E222EEE)) 
    count1_carry_i_12__4
       (.I0(count1_carry_i_14__4_0[1]),
        .I1(count1_carry_i_10__7),
        .I2(\count[4]_i_13__3_n_0 ),
        .I3(\count[4]_i_5__4 [0]),
        .I4(count1_carry_i_13__4_n_0),
        .O(\j_reg[0]_2 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    count1_carry_i_12__6
       (.I0(count1_carry_i_4__6_0),
        .I1(D[0]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(count1_carry_i_12__6_n_0));
  MUXF7 count1_carry_i_13__4
       (.I0(count1_carry_i_15__2_n_0),
        .I1(count1_carry_i_16__2_n_0),
        .O(count1_carry_i_13__4_n_0),
        .S(count1_carry_i_12__4_0));
  LUT4 #(
    .INIT(16'hEB28)) 
    count1_carry_i_14__4
       (.I0(count1_carry_i_17__2_n_0),
        .I1(\count[4]_i_5__4 [1]),
        .I2(\count[4]_i_5__4 [0]),
        .I3(\count[4]_i_18__3_n_0 ),
        .O(count1_carry_i_14__4_n_0));
  LUT5 #(
    .INIT(32'h001DFF1D)) 
    count1_carry_i_15__2
       (.I0(a_in_3[3]),
        .I1(count1_carry_i_13__4_1),
        .I2(count1_carry_i_14__4_0[1]),
        .I3(count1_carry_i_13__4_0),
        .I4(a_in_3[7]),
        .O(count1_carry_i_15__2_n_0));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    count1_carry_i_16__2
       (.I0(count1_carry_i_14__4_0[3]),
        .I1(a_in_3[5]),
        .I2(count1_carry_i_13__4_0),
        .I3(a_in_3[9]),
        .I4(count1_carry_i_13__4_1),
        .I5(a_in_3[1]),
        .O(count1_carry_i_16__2_n_0));
  LUT6 #(
    .INIT(64'h553355330F000FFF)) 
    count1_carry_i_17__2
       (.I0(count1_carry_i_14__4_0[2]),
        .I1(a_in_3[4]),
        .I2(a_in_3[8]),
        .I3(count1_carry_i_13__4_1),
        .I4(a_in_3[0]),
        .I5(count1_carry_i_13__4_0),
        .O(count1_carry_i_17__2_n_0));
  LUT6 #(
    .INIT(64'h08010108900000A0)) 
    count1_carry_i_4__6
       (.I0(count1_carry_i_10__4_n_0),
        .I1(count1_carry_0),
        .I2(count1_carry_1),
        .I3(count1_carry_i_12__6_n_0),
        .I4(count1_carry_2),
        .I5(Q[0]),
        .O(count1_carry_i_4__6_n_0));
  LUT6 #(
    .INIT(64'h2F02FFFF00002F02)) 
    count1_carry_i_5__6
       (.I0(\j_reg[0]_1 ),
        .I1(count1_carry__1_i_3__3[0]),
        .I2(count1_carry__1_i_3__3[1]),
        .I3(\j_reg[0]_2 ),
        .I4(count1_carry__1_i_3__3[2]),
        .I5(\j_reg[0]_3 ),
        .O(\count_reg_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    count1_carry_i_7__7
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\j_reg[0]_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_1__6 
       (.I0(count_reg[0]),
        .O(plusOp__6[0]));
  (* \PinAttr:I0:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count[1]_i_1__6 
       (.I0(count_reg[0]),
        .I1(count_reg[1]),
        .O(plusOp__6[1]));
  (* \PinAttr:I2:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \count[2]_i_1__6 
       (.I0(count_reg[2]),
        .I1(count_reg[1]),
        .I2(count_reg[0]),
        .O(plusOp__6[2]));
  (* \PinAttr:I1:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \count[3]_i_1__6 
       (.I0(count_reg[3]),
        .I1(count_reg[0]),
        .I2(count_reg[1]),
        .I3(count_reg[2]),
        .O(plusOp__6[3]));
  LUT5 #(
    .INIT(32'h0CFC5555)) 
    \count[4]_i_11__2 
       (.I0(count1_carry_i_14__4_0[3]),
        .I1(\count[4]_i_12__3_n_0 ),
        .I2(\count[4]_i_5__4 [0]),
        .I3(\j_reg[1]_0 ),
        .I4(count1_carry_i_10__7),
        .O(\j_reg[0]_5 ));
  LUT4 #(
    .INIT(16'h5335)) 
    \count[4]_i_12__3 
       (.I0(\count_reg_reg[1] ),
        .I1(\count[4]_i_17__3_n_0 ),
        .I2(\count[4]_i_5__4 [1]),
        .I3(\count[4]_i_5__4 [0]),
        .O(\count[4]_i_12__3_n_0 ));
  LUT4 #(
    .INIT(16'h5CC5)) 
    \count[4]_i_13__3 
       (.I0(\count[4]_i_14__3_n_0 ),
        .I1(\count[4]_i_18__3_n_0 ),
        .I2(\count[4]_i_5__4 [1]),
        .I3(\count[4]_i_5__4 [0]),
        .O(\count[4]_i_13__3_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \count[4]_i_14__3 
       (.I0(a_in_3[0]),
        .I1(a_in_3[8]),
        .I2(count1_carry_i_14__4_0[2]),
        .I3(count1_carry_i_13__4_1),
        .I4(a_in_3[4]),
        .I5(count1_carry_i_13__4_0),
        .O(\count[4]_i_14__3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \count[4]_i_15__3 
       (.I0(a_in_3[2]),
        .I1(count1_carry_i_14__4_0[0]),
        .I2(count1_carry_i_13__4_0),
        .I3(count1_carry_i_14__4_0[4]),
        .I4(count1_carry_i_13__4_1),
        .I5(a_in_3[6]),
        .O(\count[4]_i_15__3_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \count[4]_i_16__3 
       (.I0(a_in_3[1]),
        .I1(a_in_3[9]),
        .I2(count1_carry_i_14__4_0[3]),
        .I3(count1_carry_i_13__4_1),
        .I4(a_in_3[5]),
        .I5(count1_carry_i_13__4_0),
        .O(\count_reg_reg[1] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \count[4]_i_17__3 
       (.I0(a_in_3[7]),
        .I1(count1_carry_i_13__4_0),
        .I2(count1_carry_i_14__4_0[1]),
        .I3(count1_carry_i_13__4_1),
        .I4(a_in_3[3]),
        .O(\count[4]_i_17__3_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \count[4]_i_18__3 
       (.I0(count1_carry_i_14__4_0[4]),
        .I1(a_in_3[6]),
        .I2(count1_carry_i_13__4_0),
        .I3(count1_carry_i_14__4_0[0]),
        .I4(count1_carry_i_13__4_1),
        .I5(a_in_3[2]),
        .O(\count[4]_i_18__3_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \count[4]_i_1__5 
       (.I0(done),
        .I1(Q[1]),
        .I2(done_aux_reg_0),
        .O(count));
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count[4]_i_2__6 
       (.I0(count_reg[4]),
        .I1(count_reg[2]),
        .I2(count_reg[1]),
        .I3(count_reg[0]),
        .I4(count_reg[3]),
        .O(plusOp__6[4]));
  LUT5 #(
    .INIT(32'h2FD00DF2)) 
    \count[4]_i_6__6 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(a_in_2),
        .I3(D[2]),
        .I4(\count[4]_i_3__2 ),
        .O(\j_reg[0]_4 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \count[4]_i_7__5 
       (.I0(\j_reg[0]_1 ),
        .I1(count1_carry__1_i_3__3[0]),
        .I2(count1_carry__1_i_3__3[1]),
        .I3(\j_reg[0]_2 ),
        .O(\count_reg_reg[0] ));
  LUT5 #(
    .INIT(32'h2E222EEE)) 
    \count[4]_i_8__3 
       (.I0(count1_carry_i_14__4_0[2]),
        .I1(count1_carry_i_10__7),
        .I2(\count[4]_i_12__3_n_0 ),
        .I3(\count[4]_i_5__4 [0]),
        .I4(\count[4]_i_13__3_n_0 ),
        .O(\j_reg[0]_3 ));
  LUT4 #(
    .INIT(16'hEB28)) 
    \count[4]_i_9__2 
       (.I0(\count[4]_i_14__3_n_0 ),
        .I1(\count[4]_i_5__4 [1]),
        .I2(\count[4]_i_5__4 [0]),
        .I3(\count[4]_i_15__3_n_0 ),
        .O(\j_reg[1]_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__6[0]),
        .Q(count_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__6[1]),
        .Q(count_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__6[2]),
        .Q(count_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__6[3]),
        .Q(count_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__6[4]),
        .Q(count_reg[4]));
  LUT4 #(
    .INIT(16'hFF1B)) 
    done_aux_i_1__3
       (.I0(Q[1]),
        .I1(done_aux_reg_0),
        .I2(Q[0]),
        .I3(done),
        .O(done_aux_i_1__3_n_0));
  FDCE #(
    .INIT(1'b0)) 
    done_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(done_aux_i_1__3_n_0),
        .Q(done));
  LUT1 #(
    .INIT(2'h1)) 
    \j[0]_i_1__6 
       (.I0(Q[0]),
        .O(\j[0]_i_1__6_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \j[1]_i_1__6 
       (.I0(Q[1]),
        .I1(done),
        .O(j0));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[0] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(\j[0]_i_1__6_n_0 ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[1] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(Q[0]),
        .Q(Q[1]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'hFF04)) 
    valid_aux_i_1__7
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(valid_aux_i_2__5_n_0),
        .I3(valid),
        .O(valid_aux_i_1__7_n_0));
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    valid_aux_i_2__5
       (.I0(count_reg[4]),
        .I1(count_reg[3]),
        .I2(count_reg[2]),
        .I3(count_reg[1]),
        .I4(count_reg[0]),
        .O(valid_aux_i_2__5_n_0));
  FDCE #(
    .INIT(1'b0)) 
    valid_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(valid_aux_i_1__7_n_0),
        .Q(valid));
endmodule

(* ORIG_REF_NAME = "ctrl_logic" *) 
module design_1_top_nqueens_0_0_ctrl_logic__parameterized7
   (j_reg,
    CO,
    valid,
    \count_reg_reg[1] ,
    \count_reg_reg[2] ,
    \j_reg[1] ,
    \count_reg_reg[2]_0 ,
    \count_reg_reg[2]_1 ,
    \count_reg_reg[2]_2 ,
    \count_reg_reg[0] ,
    \j_reg[1]_0 ,
    \j_reg[0]_0 ,
    \count_reg_reg[3] ,
    E,
    \FSM_onehot_state_reg[1] ,
    D,
    clk,
    AR,
    count1_carry__0_0,
    count1_carry__1_0,
    S,
    \count[4]_i_3__2_0 ,
    done_aux_reg_0,
    count1_carry__1_1,
    done_aux_reg_1,
    count1_carry_i_19__1_0,
    Q,
    a_in_2,
    done_aux_reg_2,
    done_aux_reg_3,
    done_aux_reg_4,
    \count_reg_reg[0]_0 ,
    next_out_2);
  output [0:0]j_reg;
  output [0:0]CO;
  output valid;
  output \count_reg_reg[1] ;
  output [2:0]\count_reg_reg[2] ;
  output \j_reg[1] ;
  output \count_reg_reg[2]_0 ;
  output [3:0]\count_reg_reg[2]_1 ;
  output [2:0]\count_reg_reg[2]_2 ;
  output \count_reg_reg[0] ;
  output \j_reg[1]_0 ;
  output \j_reg[0]_0 ;
  output \count_reg_reg[3] ;
  output [0:0]E;
  output \FSM_onehot_state_reg[1] ;
  output [0:0]D;
  input clk;
  input [0:0]AR;
  input [3:0]count1_carry__0_0;
  input [3:0]count1_carry__1_0;
  input [2:0]S;
  input \count[4]_i_3__2_0 ;
  input [3:0]done_aux_reg_0;
  input count1_carry__1_1;
  input done_aux_reg_1;
  input [1:0]count1_carry_i_19__1_0;
  input [4:0]Q;
  input [4:0]a_in_2;
  input done_aux_reg_2;
  input [0:0]done_aux_reg_3;
  input done_aux_reg_4;
  input [4:0]\count_reg_reg[0]_0 ;
  input next_out_2;

  wire [0:0]AR;
  wire [0:0]CO;
  wire [0:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state_reg[1] ;
  wire [4:0]Q;
  wire [2:0]S;
  wire [4:0]a_in_2;
  wire clk;
  wire count;
  wire [3:0]count1_carry__0_0;
  wire count1_carry__0_n_0;
  wire [3:0]count1_carry__1_0;
  wire count1_carry__1_1;
  wire count1_carry_i_14__5_n_0;
  wire count1_carry_i_15__4_n_0;
  wire count1_carry_i_18__1_n_0;
  wire [1:0]count1_carry_i_19__1_0;
  wire count1_carry_i_19__1_n_0;
  wire count1_carry_i_20__1_n_0;
  wire count1_carry_i_5__5_n_0;
  wire count1_carry_i_9__6_n_0;
  wire count1_carry_n_0;
  wire \count[0]_i_1__7_n_0 ;
  wire \count[4]_i_3__2_0 ;
  wire \count[4]_i_5__6_n_0 ;
  wire [4:0]count_reg;
  wire \count_reg_reg[0] ;
  wire [4:0]\count_reg_reg[0]_0 ;
  wire \count_reg_reg[1] ;
  wire [2:0]\count_reg_reg[2] ;
  wire \count_reg_reg[2]_0 ;
  wire [3:0]\count_reg_reg[2]_1 ;
  wire [2:0]\count_reg_reg[2]_2 ;
  wire \count_reg_reg[3] ;
  wire done;
  wire done_aux_i_1__2_n_0;
  wire [3:0]done_aux_reg_0;
  wire done_aux_reg_1;
  wire done_aux_reg_2;
  wire [0:0]done_aux_reg_3;
  wire done_aux_reg_4;
  wire j0;
  wire [0:0]j_reg;
  wire \j_reg[0]_0 ;
  wire \j_reg[1] ;
  wire \j_reg[1]_0 ;
  wire next_out_2;
  wire [4:1]plusOp__7;
  wire valid;
  wire valid_aux_i_1__4_n_0;
  wire valid_aux_i_2__6_n_0;
  wire [2:0]NLW_count1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry_O_UNCONNECTED;
  wire [2:0]NLW_count1_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_count1_carry__1_O_UNCONNECTED;

  (* \PinAttr:I1:HOLD_DETOUR  = "184" *) 
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[3]_i_1__7 
       (.I0(valid),
        .I1(\count_reg_reg[0]_0 [2]),
        .O(D));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \FSM_onehot_state[4]_i_2 
       (.I0(\count_reg_reg[0]_0 [3]),
        .I1(next_out_2),
        .I2(done),
        .I3(\count_reg_reg[0]_0 [2]),
        .I4(\count_reg_reg[0]_0 [1]),
        .I5(\count_reg_reg[0]_0 [0]),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFEFEFEFEFEFEFE)) 
    acks_out_reg_i_2
       (.I0(\count_reg_reg[0]_0 [1]),
        .I1(\count_reg_reg[0]_0 [0]),
        .I2(\count_reg_reg[0]_0 [4]),
        .I3(done),
        .I4(\count_reg_reg[0]_0 [2]),
        .I5(valid),
        .O(\FSM_onehot_state_reg[1] ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry
       (.CI(1'b0),
        .CO({count1_carry_n_0,NLW_count1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry_O_UNCONNECTED[3:0]),
        .S(count1_carry__0_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__0
       (.CI(count1_carry_n_0),
        .CO({count1_carry__0_n_0,NLW_count1_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__0_O_UNCONNECTED[3:0]),
        .S(count1_carry__1_0));
  LUT6 #(
    .INIT(64'hFF00EB14FF00FF00)) 
    count1_carry__0_i_1__4
       (.I0(count1_carry_i_5__5_n_0),
        .I1(\j_reg[1] ),
        .I2(done_aux_reg_0[2]),
        .I3(count1_carry__1_1),
        .I4(\count_reg_reg[2]_0 ),
        .I5(count1_carry_i_9__6_n_0),
        .O(\count_reg_reg[2]_1 [3]));
  LUT6 #(
    .INIT(64'hFF00EB14FF00FF00)) 
    count1_carry__0_i_2__4
       (.I0(count1_carry_i_5__5_n_0),
        .I1(\j_reg[1] ),
        .I2(done_aux_reg_0[2]),
        .I3(count1_carry__1_1),
        .I4(\count_reg_reg[2]_0 ),
        .I5(count1_carry_i_9__6_n_0),
        .O(\count_reg_reg[2]_1 [2]));
  LUT6 #(
    .INIT(64'hFF00EB14FF00FF00)) 
    count1_carry__0_i_3__4
       (.I0(count1_carry_i_5__5_n_0),
        .I1(\j_reg[1] ),
        .I2(done_aux_reg_0[2]),
        .I3(count1_carry__1_1),
        .I4(\count_reg_reg[2]_0 ),
        .I5(count1_carry_i_9__6_n_0),
        .O(\count_reg_reg[2]_1 [1]));
  LUT6 #(
    .INIT(64'hFF00EB14FF00FF00)) 
    count1_carry__0_i_4__4
       (.I0(count1_carry_i_5__5_n_0),
        .I1(\j_reg[1] ),
        .I2(done_aux_reg_0[2]),
        .I3(count1_carry__1_1),
        .I4(\count_reg_reg[2]_0 ),
        .I5(count1_carry_i_9__6_n_0),
        .O(\count_reg_reg[2]_1 [0]));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 count1_carry__1
       (.CI(count1_carry__0_n_0),
        .CO({NLW_count1_carry__1_CO_UNCONNECTED[3],CO,NLW_count1_carry__1_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(NLW_count1_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,S}));
  LUT6 #(
    .INIT(64'hFF00EB00FF00FF00)) 
    count1_carry__1_i_1__4
       (.I0(count1_carry_i_5__5_n_0),
        .I1(\j_reg[1] ),
        .I2(done_aux_reg_0[2]),
        .I3(count1_carry__1_1),
        .I4(\count_reg_reg[2]_0 ),
        .I5(count1_carry_i_9__6_n_0),
        .O(\count_reg_reg[2] [2]));
  LUT6 #(
    .INIT(64'hFF00EB14FF00FF00)) 
    count1_carry__1_i_2__4
       (.I0(count1_carry_i_5__5_n_0),
        .I1(\j_reg[1] ),
        .I2(done_aux_reg_0[2]),
        .I3(count1_carry__1_1),
        .I4(\count_reg_reg[2]_0 ),
        .I5(count1_carry_i_9__6_n_0),
        .O(\count_reg_reg[2] [1]));
  LUT6 #(
    .INIT(64'hFF00EB14FF00FF00)) 
    count1_carry__1_i_3__4
       (.I0(count1_carry_i_5__5_n_0),
        .I1(\j_reg[1] ),
        .I2(done_aux_reg_0[2]),
        .I3(count1_carry__1_1),
        .I4(\count_reg_reg[2]_0 ),
        .I5(count1_carry_i_9__6_n_0),
        .O(\count_reg_reg[2] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    count1_carry_i_13__5
       (.I0(count1_carry_i_18__1_n_0),
        .I1(done_aux_reg_0[1]),
        .O(\count_reg_reg[1] ));
  LUT6 #(
    .INIT(64'h084C2A6E195D3B7F)) 
    count1_carry_i_14__5
       (.I0(count1_carry_i_19__1_0[0]),
        .I1(count1_carry_i_19__1_0[1]),
        .I2(Q[3]),
        .I3(a_in_2[4]),
        .I4(a_in_2[2]),
        .I5(Q[1]),
        .O(count1_carry_i_14__5_n_0));
  LUT6 #(
    .INIT(64'h048C26AE159D37BF)) 
    count1_carry_i_15__4
       (.I0(count1_carry_i_19__1_0[0]),
        .I1(count1_carry_i_19__1_0[1]),
        .I2(Q[0]),
        .I3(Q[4]),
        .I4(a_in_2[3]),
        .I5(Q[2]),
        .O(count1_carry_i_15__4_n_0));
  LUT4 #(
    .INIT(16'h022F)) 
    count1_carry_i_16__3
       (.I0(\j_reg[1]_0 ),
        .I1(done_aux_reg_0[0]),
        .I2(done_aux_reg_0[1]),
        .I3(count1_carry_i_18__1_n_0),
        .O(\count_reg_reg[0] ));
  LUT5 #(
    .INIT(32'hFB51EA40)) 
    count1_carry_i_17__3
       (.I0(count1_carry_i_19__1_0[1]),
        .I1(count1_carry_i_19__1_0[0]),
        .I2(a_in_2[0]),
        .I3(Q[0]),
        .I4(count1_carry_i_19__1_n_0),
        .O(\j_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h27772272)) 
    count1_carry_i_18__1
       (.I0(count1_carry_i_19__1_0[1]),
        .I1(Q[1]),
        .I2(count1_carry_i_19__1_0[0]),
        .I3(count1_carry_i_19__1_n_0),
        .I4(count1_carry_i_14__5_n_0),
        .O(count1_carry_i_18__1_n_0));
  LUT6 #(
    .INIT(64'hFB73D951EA62C840)) 
    count1_carry_i_19__1
       (.I0(count1_carry_i_19__1_0[0]),
        .I1(count1_carry_i_19__1_0[1]),
        .I2(a_in_2[3]),
        .I3(Q[2]),
        .I4(count1_carry_i_20__1_n_0),
        .I5(Q[0]),
        .O(count1_carry_i_19__1_n_0));
  LUT6 #(
    .INIT(64'hFF00EB14FF00FF00)) 
    count1_carry_i_1__4
       (.I0(count1_carry_i_5__5_n_0),
        .I1(\j_reg[1] ),
        .I2(done_aux_reg_0[2]),
        .I3(count1_carry__1_1),
        .I4(\count_reg_reg[2]_0 ),
        .I5(count1_carry_i_9__6_n_0),
        .O(\count_reg_reg[2]_2 [2]));
  LUT4 #(
    .INIT(16'hBA8A)) 
    count1_carry_i_20__1
       (.I0(a_in_2[1]),
        .I1(count1_carry_i_19__1_0[0]),
        .I2(count1_carry_i_19__1_0[1]),
        .I3(Q[4]),
        .O(count1_carry_i_20__1_n_0));
  LUT6 #(
    .INIT(64'hFF00EB14FF00FF00)) 
    count1_carry_i_2__4
       (.I0(count1_carry_i_5__5_n_0),
        .I1(\j_reg[1] ),
        .I2(done_aux_reg_0[2]),
        .I3(count1_carry__1_1),
        .I4(\count_reg_reg[2]_0 ),
        .I5(count1_carry_i_9__6_n_0),
        .O(\count_reg_reg[2]_2 [1]));
  LUT6 #(
    .INIT(64'hFF0000EB00000000)) 
    count1_carry_i_3__4
       (.I0(count1_carry_i_5__5_n_0),
        .I1(\j_reg[1] ),
        .I2(done_aux_reg_0[2]),
        .I3(\count_reg_reg[2]_0 ),
        .I4(count1_carry_i_9__6_n_0),
        .I5(count1_carry__1_1),
        .O(\count_reg_reg[2]_2 [0]));
  LUT2 #(
    .INIT(4'hB)) 
    count1_carry_i_5__5
       (.I0(\count_reg_reg[1] ),
        .I1(\count[4]_i_3__2_0 ),
        .O(count1_carry_i_5__5_n_0));
  LUT5 #(
    .INIT(32'h72777222)) 
    count1_carry_i_6__7
       (.I0(count1_carry_i_19__1_0[1]),
        .I1(Q[2]),
        .I2(count1_carry_i_14__5_n_0),
        .I3(count1_carry_i_19__1_0[0]),
        .I4(count1_carry_i_15__4_n_0),
        .O(\j_reg[1] ));
  LUT6 #(
    .INIT(64'h00FF2BD42BD4FF00)) 
    count1_carry_i_8__7
       (.I0(\count_reg_reg[0] ),
        .I1(done_aux_reg_0[2]),
        .I2(\j_reg[1] ),
        .I3(done_aux_reg_1),
        .I4(done_aux_reg_0[3]),
        .I5(\count[4]_i_5__6_n_0 ),
        .O(\count_reg_reg[2]_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    count1_carry_i_9__6
       (.I0(\count_reg_reg[0] ),
        .I1(done_aux_reg_0[2]),
        .I2(\j_reg[1] ),
        .I3(\count[4]_i_5__6_n_0 ),
        .I4(done_aux_reg_0[3]),
        .O(count1_carry_i_9__6_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_1__7 
       (.I0(count_reg[0]),
        .O(\count[0]_i_1__7_n_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count[1]_i_1__7 
       (.I0(count_reg[1]),
        .I1(count_reg[0]),
        .O(plusOp__7[1]));
  (* \PinAttr:I2:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \count[2]_i_1__7 
       (.I0(count_reg[2]),
        .I1(count_reg[0]),
        .I2(count_reg[1]),
        .O(plusOp__7[2]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \count[3]_i_1__7 
       (.I0(count_reg[3]),
        .I1(count_reg[1]),
        .I2(count_reg[0]),
        .I3(count_reg[2]),
        .O(plusOp__7[3]));
  LUT3 #(
    .INIT(8'h10)) 
    \count[4]_i_1__7 
       (.I0(j_reg),
        .I1(done),
        .I2(done_aux_reg_2),
        .O(count));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count[4]_i_2__7 
       (.I0(count_reg[4]),
        .I1(count_reg[2]),
        .I2(count_reg[0]),
        .I3(count_reg[1]),
        .I4(count_reg[3]),
        .O(plusOp__7[4]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA8A8AAA)) 
    \count[4]_i_3__2 
       (.I0(done_aux_reg_3),
        .I1(count1_carry_i_5__5_n_0),
        .I2(done_aux_reg_4),
        .I3(\count[4]_i_5__6_n_0 ),
        .I4(done_aux_reg_0[3]),
        .I5(done_aux_reg_1),
        .O(\count_reg_reg[3] ));
  LUT5 #(
    .INIT(32'h72777222)) 
    \count[4]_i_5__6 
       (.I0(count1_carry_i_19__1_0[1]),
        .I1(Q[3]),
        .I2(count1_carry_i_15__4_n_0),
        .I3(count1_carry_i_19__1_0[0]),
        .I4(\j_reg[0]_0 ),
        .O(\count[4]_i_5__6_n_0 ));
  LUT6 #(
    .INIT(64'h0123456789ABCDEF)) 
    \count[4]_i_7__6 
       (.I0(count1_carry_i_19__1_0[0]),
        .I1(count1_carry_i_19__1_0[1]),
        .I2(Q[3]),
        .I3(a_in_2[4]),
        .I4(Q[1]),
        .I5(a_in_2[2]),
        .O(\j_reg[0]_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(\count[0]_i_1__7_n_0 ),
        .Q(count_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__7[1]),
        .Q(count_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__7[2]),
        .Q(count_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__7[3]),
        .Q(count_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(clk),
        .CE(count),
        .CLR(AR),
        .D(plusOp__7[4]),
        .Q(count_reg[4]));
  LUT3 #(
    .INIT(8'hFB)) 
    done_aux_i_1__2
       (.I0(j_reg),
        .I1(done_aux_reg_2),
        .I2(done),
        .O(done_aux_i_1__2_n_0));
  FDCE #(
    .INIT(1'b0)) 
    done_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(done_aux_i_1__2_n_0),
        .Q(done));
  LUT2 #(
    .INIT(4'h1)) 
    \j[0]_i_1__7 
       (.I0(j_reg),
        .I1(done),
        .O(j0));
  FDCE #(
    .INIT(1'b0)) 
    \j_reg[0] 
       (.C(clk),
        .CE(j0),
        .CLR(AR),
        .D(1'b1),
        .Q(j_reg));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'hD)) 
    valid_aux_i_1__4
       (.I0(valid_aux_i_2__6_n_0),
        .I1(valid),
        .O(valid_aux_i_1__4_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFDFF)) 
    valid_aux_i_2__6
       (.I0(count_reg[0]),
        .I1(count_reg[1]),
        .I2(count_reg[3]),
        .I3(j_reg),
        .I4(count_reg[2]),
        .I5(count_reg[4]),
        .O(valid_aux_i_2__6_n_0));
  FDCE #(
    .INIT(1'b0)) 
    valid_aux_reg
       (.C(clk),
        .CE(1'b1),
        .CLR(AR),
        .D(valid_aux_i_1__4_n_0),
        .Q(valid));
endmodule

(* ORIG_REF_NAME = "fsm" *) 
module design_1_top_nqueens_0_0_fsm
   (next_out_9,
    \j_reg[2] ,
    \j_reg[1] ,
    \j_reg[1]_0 ,
    \j_reg[1]_1 ,
    \j_reg[1]_2 ,
    \j_reg[1]_3 ,
    \j_reg[1]_4 ,
    \j_reg[1]_5 ,
    E,
    clk,
    \count_reg[0] ,
    Q,
    \count_reg[0]_0 ,
    \count_reg[0]_1 ,
    done_aux_i_4,
    \count[4]_i_5 ,
    \count[4]_i_5_0 ,
    \count[4]_i_5_1 ,
    \count[4]_i_5_2 ,
    \count[4]_i_12 ,
    \count[4]_i_12_0 ,
    \count[4]_i_7 ,
    \count[4]_i_7_0 ,
    count1_carry_i_14,
    count1_carry_i_14_0,
    SR,
    AR);
  output next_out_9;
  output \j_reg[2] ;
  output [1:0]\j_reg[1] ;
  output \j_reg[1]_0 ;
  output \j_reg[1]_1 ;
  output \j_reg[1]_2 ;
  output \j_reg[1]_3 ;
  output \j_reg[1]_4 ;
  output \j_reg[1]_5 ;
  output [0:0]E;
  input clk;
  input \count_reg[0] ;
  input [1:0]Q;
  input \count_reg[0]_0 ;
  input \count_reg[0]_1 ;
  input done_aux_i_4;
  input \count[4]_i_5 ;
  input \count[4]_i_5_0 ;
  input \count[4]_i_5_1 ;
  input \count[4]_i_5_2 ;
  input \count[4]_i_12 ;
  input \count[4]_i_12_0 ;
  input \count[4]_i_7 ;
  input \count[4]_i_7_0 ;
  input count1_carry_i_14;
  input count1_carry_i_14_0;
  input [0:0]SR;
  input [0:0]AR;

  wire [0:0]AR;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[2] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire ack_out_9;
  wire acks_out;
  wire \asout_array[9]_0 ;
  wire ce;
  wire ce__0;
  wire ce_reg_i_1__0_n_0;
  wire clk;
  wire count1_carry_i_14;
  wire count1_carry_i_14_0;
  wire \count[4]_i_12 ;
  wire \count[4]_i_12_0 ;
  wire \count[4]_i_5 ;
  wire \count[4]_i_5_0 ;
  wire \count[4]_i_5_1 ;
  wire \count[4]_i_5_2 ;
  wire \count[4]_i_7 ;
  wire \count[4]_i_7_0 ;
  wire \count_reg[0] ;
  wire \count_reg[0]_0 ;
  wire \count_reg[0]_1 ;
  wire done_aux_i_4;
  wire dut_n_10;
  wire dut_n_2;
  wire dut_n_3;
  wire dut_n_4;
  wire dut_n_5;
  wire dut_n_6;
  wire dut_n_7;
  wire dut_n_8;
  wire dut_n_9;
  wire [2:2]j_reg;
  wire [1:0]\j_reg[1] ;
  wire \j_reg[1]_0 ;
  wire \j_reg[1]_1 ;
  wire \j_reg[1]_2 ;
  wire \j_reg[1]_3 ;
  wire \j_reg[1]_4 ;
  wire \j_reg[1]_5 ;
  wire j_reg_2_sn_1;
  wire logic_n_10;
  wire logic_n_14;
  wire logic_n_15;
  wire logic_n_16;
  wire logic_n_8;
  wire logic_n_9;
  wire next_out_9;
  wire nexts_out;
  wire reset_control;
  wire reset_control_reg_i_1_n_0;
  wire [4:3]u_i;
  wire valid;

  assign E[0] = ack_out_9;
  assign \j_reg[2]  = j_reg_2_sn_1;
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(clk),
        .CE(logic_n_15),
        .D(1'b0),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(SR));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(clk),
        .CE(logic_n_15),
        .D(dut_n_10),
        .Q(ce__0),
        .R(SR));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(clk),
        .CE(logic_n_15),
        .D(dut_n_9),
        .Q(\FSM_onehot_state_reg_n_0_[2] ),
        .R(SR));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(clk),
        .CE(logic_n_15),
        .D(logic_n_16),
        .Q(\asout_array[9]_0 ),
        .R(SR));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(clk),
        .CE(logic_n_15),
        .D(dut_n_8),
        .Q(nexts_out),
        .R(SR));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    acks_out_reg
       (.CLR(1'b0),
        .D(acks_out),
        .G(logic_n_14),
        .GE(1'b1),
        .Q(ack_out_9));
  LUT3 #(
    .INIT(8'hFE)) 
    acks_out_reg_i_1__0
       (.I0(ce__0),
        .I1(nexts_out),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .O(acks_out));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    ce_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(ce_reg_i_1__0_n_0),
        .GE(1'b1),
        .Q(ce));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ce_reg_i_1__0
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(nexts_out),
        .I3(ce__0),
        .O(ce_reg_i_1__0_n_0));
  design_1_top_nqueens_0_0_up_counter dut
       (.AR(AR),
        .D({dut_n_8,dut_n_9,dut_n_10}),
        .E(ce),
        .\FSM_onehot_state_reg[4] ({\asout_array[9]_0 ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .Q(u_i),
        .S(dut_n_2),
        .clk(clk),
        .count1_carry(logic_n_10),
        .count1_carry__1_i_3(logic_n_8),
        .count1_carry_i_4_0({j_reg,\j_reg[1] }),
        .\count_reg[0] (\count_reg[0] ),
        .\count_reg[0]_0 (\count_reg[0]_1 ),
        .\count_reg_reg[0]_0 (dut_n_6),
        .\count_reg_reg[2]_0 (dut_n_3),
        .\count_reg_reg[2]_1 (dut_n_4),
        .\count_reg_reg[2]_2 (dut_n_5),
        .\count_reg_reg[3]_0 (dut_n_7),
        .done_aux_i_4_0(done_aux_i_4),
        .done_aux_reg(logic_n_9),
        .valid(valid));
  design_1_top_nqueens_0_0_ctrl_logic logic
       (.AR(reset_control),
        .D(logic_n_16),
        .E(logic_n_15),
        .\FSM_onehot_state_reg[0] (logic_n_14),
        .Q(u_i),
        .S(dut_n_2),
        .acks_out_reg({nexts_out,\asout_array[9]_0 ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .clk(clk),
        .count1_carry__1_0(dut_n_7),
        .count1_carry__1_1(dut_n_3),
        .count1_carry_i_14(count1_carry_i_14),
        .count1_carry_i_14_0(count1_carry_i_14_0),
        .count1_carry_i_4(dut_n_6),
        .\count[4]_i_12_0 (\count[4]_i_12 ),
        .\count[4]_i_12_1 (\count[4]_i_12_0 ),
        .\count[4]_i_5_0 (\count[4]_i_5 ),
        .\count[4]_i_5_1 (\count[4]_i_5_0 ),
        .\count[4]_i_5_2 (\count[4]_i_5_1 ),
        .\count[4]_i_5_3 (\count[4]_i_5_2 ),
        .\count[4]_i_7_0 (\count[4]_i_7 ),
        .\count[4]_i_7_1 (\count[4]_i_7_0 ),
        .\count_reg[0]_0 (Q),
        .\count_reg[0]_1 (\count_reg[0]_0 ),
        .\count_reg[0]_2 (dut_n_5),
        .\count_reg_reg[4] (logic_n_9),
        .done_aux_reg_0(dut_n_4),
        .\j_reg[0]_0 (logic_n_8),
        .\j_reg[1]_0 (\j_reg[1]_0 ),
        .\j_reg[1]_1 (\j_reg[1]_1 ),
        .\j_reg[1]_2 (\j_reg[1]_2 ),
        .\j_reg[1]_3 (logic_n_10),
        .\j_reg[1]_4 (\j_reg[1]_3 ),
        .\j_reg[1]_5 (\j_reg[1]_4 ),
        .\j_reg[1]_6 (\j_reg[1]_5 ),
        .\j_reg[2]_0 (j_reg_2_sn_1),
        .\j_reg[2]_1 ({j_reg,\j_reg[1] }),
        .valid(valid));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    nexts_out_reg
       (.CLR(1'b0),
        .D(nexts_out),
        .G(acks_out),
        .GE(1'b1),
        .Q(next_out_9));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    reset_control_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(reset_control_reg_i_1_n_0),
        .GE(1'b1),
        .Q(reset_control));
  LUT2 #(
    .INIT(4'hE)) 
    reset_control_reg_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .O(reset_control_reg_i_1_n_0));
endmodule

(* ORIG_REF_NAME = "fsm" *) 
module design_1_top_nqueens_0_0_fsm__parameterized0
   (AR,
    next_out_8,
    Q,
    \count_reg_reg[2] ,
    \j_reg[0] ,
    \j_reg[3] ,
    \j_reg[3]_0 ,
    \j_reg[3]_1 ,
    \j_reg[0]_0 ,
    \j_reg[0]_1 ,
    \j_reg[0]_2 ,
    \j_reg[1] ,
    \j_reg[1]_0 ,
    \FSM_onehot_state_reg[3]_0 ,
    \j_reg[1]_1 ,
    \FSM_onehot_state_reg[3]_1 ,
    \FSM_onehot_state_reg[3]_2 ,
    \FSM_onehot_state_reg[3]_3 ,
    \count_reg_reg[3] ,
    \count_reg_reg[2]_0 ,
    \FSM_onehot_state_reg[3]_4 ,
    \FSM_onehot_state_reg[3]_5 ,
    \count_reg_reg[0] ,
    \j_reg[2] ,
    \j_reg[3]_2 ,
    \j_reg[2]_0 ,
    \j_reg[2]_1 ,
    \j_reg[2]_2 ,
    SR,
    clk,
    \count[4]_i_17 ,
    \count[4]_i_17_0 ,
    count1_carry_i_14,
    count1_carry_i_4__0,
    done_aux_reg,
    \count_reg[0] ,
    a_in_8,
    \count[4]_i_11 ,
    \count[4]_i_4 ,
    count1_carry_i_13,
    count1_carry_i_13_0,
    count1_carry_i_13_1,
    count1_carry,
    count1_carry_i_4__0_0,
    \count_reg[0]_0 ,
    \count_reg[0]_1 ,
    \count_reg[0]_2 ,
    done_aux_i_2__0,
    \count[4]_i_11__3 ,
    \count[4]_i_11__3_0 ,
    \count[4]_i_7__0 ,
    next_out_9,
    \count[4]_i_5__5 ,
    nRst,
    \FSM_onehot_state_reg[0]_0 ,
    \count_reg_reg[0]_0 );
  output [0:0]AR;
  output next_out_8;
  output [1:0]Q;
  output [2:0]\count_reg_reg[2] ;
  output \j_reg[0] ;
  output [3:0]\j_reg[3] ;
  output \j_reg[3]_0 ;
  output \j_reg[3]_1 ;
  output \j_reg[0]_0 ;
  output \j_reg[0]_1 ;
  output \j_reg[0]_2 ;
  output \j_reg[1] ;
  output \j_reg[1]_0 ;
  output \FSM_onehot_state_reg[3]_0 ;
  output \j_reg[1]_1 ;
  output \FSM_onehot_state_reg[3]_1 ;
  output \FSM_onehot_state_reg[3]_2 ;
  output \FSM_onehot_state_reg[3]_3 ;
  output \count_reg_reg[3] ;
  output \count_reg_reg[2]_0 ;
  output \FSM_onehot_state_reg[3]_4 ;
  output \FSM_onehot_state_reg[3]_5 ;
  output \count_reg_reg[0] ;
  output \j_reg[2] ;
  output \j_reg[3]_2 ;
  output \j_reg[2]_0 ;
  output \j_reg[2]_1 ;
  output \j_reg[2]_2 ;
  output [0:0]SR;
  input clk;
  input \count[4]_i_17 ;
  input \count[4]_i_17_0 ;
  input count1_carry_i_14;
  input count1_carry_i_4__0;
  input done_aux_reg;
  input \count_reg[0] ;
  input [39:0]a_in_8;
  input [1:0]\count[4]_i_11 ;
  input \count[4]_i_4 ;
  input count1_carry_i_13;
  input count1_carry_i_13_0;
  input count1_carry_i_13_1;
  input count1_carry;
  input count1_carry_i_4__0_0;
  input \count_reg[0]_0 ;
  input \count_reg[0]_1 ;
  input \count_reg[0]_2 ;
  input done_aux_i_2__0;
  input \count[4]_i_11__3 ;
  input \count[4]_i_11__3_0 ;
  input \count[4]_i_7__0 ;
  input next_out_9;
  input \count[4]_i_5__5 ;
  input nRst;
  input [0:0]\FSM_onehot_state_reg[0]_0 ;
  input [0:0]\count_reg_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]\FSM_onehot_state_reg[0]_0 ;
  wire \FSM_onehot_state_reg[3]_0 ;
  wire \FSM_onehot_state_reg[3]_1 ;
  wire \FSM_onehot_state_reg[3]_2 ;
  wire \FSM_onehot_state_reg[3]_3 ;
  wire \FSM_onehot_state_reg[3]_4 ;
  wire \FSM_onehot_state_reg[3]_5 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[2] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire [39:0]a_in_8;
  wire [42:0]a_in_9;
  wire acks_out;
  wire \asout_array[8]_1 ;
  wire \asout_array[8]_1_BUFG ;
  wire ce;
  wire ce__0;
  wire ce_reg_i_1__2_n_0;
  wire clk;
  wire count1_carry;
  wire count1_carry_i_13;
  wire count1_carry_i_13_0;
  wire count1_carry_i_13_1;
  wire count1_carry_i_14;
  wire count1_carry_i_4__0;
  wire count1_carry_i_4__0_0;
  wire [1:0]\count[4]_i_11 ;
  wire \count[4]_i_11__3 ;
  wire \count[4]_i_11__3_0 ;
  wire \count[4]_i_17 ;
  wire \count[4]_i_17_0 ;
  wire \count[4]_i_4 ;
  wire \count[4]_i_5__5 ;
  wire \count[4]_i_7__0 ;
  wire \count_reg[0] ;
  wire \count_reg[0]_0 ;
  wire \count_reg[0]_1 ;
  wire \count_reg[0]_2 ;
  wire \count_reg_reg[0] ;
  wire [0:0]\count_reg_reg[0]_0 ;
  wire [2:0]\count_reg_reg[2] ;
  wire \count_reg_reg[2]_0 ;
  wire \count_reg_reg[3] ;
  wire done_aux_i_2__0;
  wire done_aux_reg;
  wire dut_n_0;
  wire dut_n_10;
  wire dut_n_6;
  wire dut_n_8;
  wire dut_n_9;
  wire \j_reg[0] ;
  wire \j_reg[0]_0 ;
  wire \j_reg[0]_1 ;
  wire \j_reg[0]_2 ;
  wire \j_reg[1] ;
  wire \j_reg[1]_0 ;
  wire \j_reg[1]_1 ;
  wire \j_reg[2] ;
  wire \j_reg[2]_0 ;
  wire \j_reg[2]_1 ;
  wire \j_reg[2]_2 ;
  wire [3:0]\j_reg[3] ;
  wire \j_reg[3]_0 ;
  wire \j_reg[3]_1 ;
  wire \j_reg[3]_2 ;
  wire logic_n_22;
  wire logic_n_28;
  wire logic_n_29;
  wire logic_n_30;
  wire nRst;
  wire next_out_8;
  wire next_out_9;
  wire nexts_out;
  wire reset_control;
  wire reset_control_reg_i_1__0_n_0;
  wire [4:3]u_i;
  wire valid;

  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_state[4]_i_1 
       (.I0(AR),
        .I1(nRst),
        .O(SR));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(clk),
        .CE(logic_n_28),
        .D(1'b0),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(clk),
        .CE(logic_n_28),
        .D(dut_n_10),
        .Q(ce__0),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(clk),
        .CE(logic_n_28),
        .D(dut_n_9),
        .Q(\FSM_onehot_state_reg_n_0_[2] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  (* OPT_MODIFIED = "BUFG_OPT" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(clk),
        .CE(logic_n_28),
        .D(logic_n_30),
        .Q(\asout_array[8]_1 ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(clk),
        .CE(logic_n_28),
        .D(dut_n_8),
        .Q(nexts_out),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    acks_out_reg
       (.CLR(1'b0),
        .D(acks_out),
        .G(logic_n_29),
        .GE(1'b1),
        .Q(AR));
  LUT3 #(
    .INIT(8'hFE)) 
    acks_out_reg_i_1__2
       (.I0(nexts_out),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(ce__0),
        .O(acks_out));
  (* LOPT_BUFG_CLOCK *) 
  (* OPT_MODIFIED = "BUFG_OPT" *) 
  BUFG \asout_array[8]_1_BUFG_inst 
       (.I(\asout_array[8]_1 ),
        .O(\asout_array[8]_1_BUFG ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][0] 
       (.CLR(1'b0),
        .D(\count_reg_reg[2] [0]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[0]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][1] 
       (.CLR(1'b0),
        .D(\count_reg_reg[2] [1]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[1]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][2] 
       (.CLR(1'b0),
        .D(\count_reg_reg[2] [2]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[2]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][3] 
       (.CLR(1'b0),
        .D(u_i[3]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[3]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][4] 
       (.CLR(1'b0),
        .D(u_i[4]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[4]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][0] 
       (.CLR(1'b0),
        .D(a_in_8[0]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[5]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][1] 
       (.CLR(1'b0),
        .D(a_in_8[1]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[6]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][2] 
       (.CLR(1'b0),
        .D(a_in_8[2]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[7]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][3] 
       (.CLR(1'b0),
        .D(a_in_8[3]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[8]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][4] 
       (.CLR(1'b0),
        .D(a_in_8[4]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[9]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][0] 
       (.CLR(1'b0),
        .D(a_in_8[5]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[10]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][1] 
       (.CLR(1'b0),
        .D(a_in_8[6]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[11]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][2] 
       (.CLR(1'b0),
        .D(a_in_8[7]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[12]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][3] 
       (.CLR(1'b0),
        .D(a_in_8[8]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[13]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][4] 
       (.CLR(1'b0),
        .D(a_in_8[9]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[14]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][0] 
       (.CLR(1'b0),
        .D(a_in_8[10]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[15]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][1] 
       (.CLR(1'b0),
        .D(a_in_8[11]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[16]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][2] 
       (.CLR(1'b0),
        .D(a_in_8[12]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[17]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][3] 
       (.CLR(1'b0),
        .D(a_in_8[13]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[18]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][4] 
       (.CLR(1'b0),
        .D(a_in_8[14]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[19]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][0] 
       (.CLR(1'b0),
        .D(a_in_8[15]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[20]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][1] 
       (.CLR(1'b0),
        .D(a_in_8[16]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[21]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][2] 
       (.CLR(1'b0),
        .D(a_in_8[17]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[22]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][3] 
       (.CLR(1'b0),
        .D(a_in_8[18]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[23]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][4] 
       (.CLR(1'b0),
        .D(a_in_8[19]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[24]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][0] 
       (.CLR(1'b0),
        .D(a_in_8[20]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[25]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][1] 
       (.CLR(1'b0),
        .D(a_in_8[21]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[26]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][2] 
       (.CLR(1'b0),
        .D(a_in_8[22]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[27]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][3] 
       (.CLR(1'b0),
        .D(a_in_8[23]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[28]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][4] 
       (.CLR(1'b0),
        .D(a_in_8[24]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[29]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[6][0] 
       (.CLR(1'b0),
        .D(a_in_8[25]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[30]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[6][1] 
       (.CLR(1'b0),
        .D(a_in_8[26]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[31]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[6][2] 
       (.CLR(1'b0),
        .D(a_in_8[27]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[32]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[6][3] 
       (.CLR(1'b0),
        .D(a_in_8[28]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[33]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[6][4] 
       (.CLR(1'b0),
        .D(a_in_8[29]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[34]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[7][0] 
       (.CLR(1'b0),
        .D(a_in_8[30]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[35]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[7][1] 
       (.CLR(1'b0),
        .D(a_in_8[31]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[36]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[7][2] 
       (.CLR(1'b0),
        .D(a_in_8[32]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[37]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[7][3] 
       (.CLR(1'b0),
        .D(a_in_8[33]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[38]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[7][4] 
       (.CLR(1'b0),
        .D(a_in_8[34]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[39]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[8][0] 
       (.CLR(1'b0),
        .D(a_in_8[35]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[40]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[8][1] 
       (.CLR(1'b0),
        .D(a_in_8[36]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[41]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[8][2] 
       (.CLR(1'b0),
        .D(a_in_8[37]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(a_in_9[42]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[8][3] 
       (.CLR(1'b0),
        .D(a_in_8[38]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(Q[0]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[8][4] 
       (.CLR(1'b0),
        .D(a_in_8[39]),
        .G(\asout_array[8]_1_BUFG ),
        .GE(1'b1),
        .Q(Q[1]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    ce_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(ce_reg_i_1__2_n_0),
        .GE(1'b1),
        .Q(ce));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ce_reg_i_1__2
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(nexts_out),
        .O(ce_reg_i_1__2_n_0));
  design_1_top_nqueens_0_0_up_counter_0 dut
       (.D({dut_n_8,dut_n_9,dut_n_10}),
        .E(ce),
        .\FSM_onehot_state_reg[4] ({\asout_array[8]_1_BUFG ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .Q({u_i,\count_reg_reg[2] }),
        .clk(clk),
        .\count_reg[0] (logic_n_22),
        .\count_reg[0]_0 (\count_reg[0]_1 ),
        .\count_reg[0]_1 (\count_reg[0]_2 ),
        .\count_reg[0]_2 (\count_reg[0]_0 ),
        .\count_reg_reg[0]_0 (\count_reg_reg[0] ),
        .\count_reg_reg[0]_1 (\count_reg_reg[0]_0 ),
        .\count_reg_reg[1]_0 (dut_n_6),
        .\count_reg_reg[3]_0 (dut_n_0),
        .done_aux_i_2__0(done_aux_i_2__0),
        .valid(valid));
  design_1_top_nqueens_0_0_ctrl_logic__parameterized0 logic
       (.AR(reset_control),
        .D({u_i,\count_reg_reg[2] [2]}),
        .E(logic_n_28),
        .\FSM_onehot_state_reg[1] (logic_n_29),
        .\FSM_onehot_state_reg[3] (\FSM_onehot_state_reg[3]_0 ),
        .\FSM_onehot_state_reg[3]_0 (\FSM_onehot_state_reg[3]_1 ),
        .\FSM_onehot_state_reg[3]_1 (\FSM_onehot_state_reg[3]_2 ),
        .\FSM_onehot_state_reg[3]_2 (\FSM_onehot_state_reg[3]_3 ),
        .\FSM_onehot_state_reg[3]_3 (\FSM_onehot_state_reg[3]_4 ),
        .\FSM_onehot_state_reg[3]_4 (\FSM_onehot_state_reg[3]_5 ),
        .Q(\j_reg[3] ),
        .a_in_8({a_in_8[39:38],a_in_8[30],a_in_8[14],a_in_8[7]}),
        .a_in_9(a_in_9),
        .clk(clk),
        .count1_carry_0(\count_reg_reg[0] ),
        .count1_carry_1(count1_carry),
        .count1_carry_i_13_0(count1_carry_i_13),
        .count1_carry_i_13_1(count1_carry_i_13_0),
        .count1_carry_i_13_2(count1_carry_i_13_1),
        .count1_carry_i_14_0(count1_carry_i_14),
        .count1_carry_i_17(Q),
        .count1_carry_i_4__0_0(count1_carry_i_4__0),
        .count1_carry_i_4__0_1(count1_carry_i_4__0_0),
        .count1_carry_i_4__0_2(\count_reg[0]_0 ),
        .count1_carry_i_4__0_3(\count_reg[0]_1 ),
        .\count[4]_i_11_0 (\count[4]_i_11 ),
        .\count[4]_i_11__3_0 (\count[4]_i_11__3 ),
        .\count[4]_i_11__3_1 (\count[4]_i_11__3_0 ),
        .\count[4]_i_17_0 (\count[4]_i_17 ),
        .\count[4]_i_17_1 (\count[4]_i_17_0 ),
        .\count[4]_i_4 (\count[4]_i_4 ),
        .\count[4]_i_5__5 (\count[4]_i_5__5 ),
        .\count[4]_i_7__0_0 (\count[4]_i_7__0 ),
        .\count_reg[0]_0 (dut_n_0),
        .\count_reg[0]_1 (dut_n_6),
        .\count_reg[0]_2 (\count_reg[0] ),
        .\count_reg_reg[0] ({nexts_out,\asout_array[8]_1_BUFG ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .\count_reg_reg[2] (\count_reg_reg[2]_0 ),
        .\count_reg_reg[3] (\count_reg_reg[3] ),
        .done_aux_reg_0(done_aux_reg),
        .\j_reg[0]_0 (\j_reg[0] ),
        .\j_reg[0]_1 (\j_reg[0]_0 ),
        .\j_reg[0]_2 (\j_reg[0]_1 ),
        .\j_reg[0]_3 (\j_reg[0]_2 ),
        .\j_reg[0]_4 (logic_n_22),
        .\j_reg[1]_0 (\j_reg[1] ),
        .\j_reg[1]_1 (\j_reg[1]_0 ),
        .\j_reg[1]_2 (\j_reg[1]_1 ),
        .\j_reg[2]_0 (\j_reg[2] ),
        .\j_reg[2]_1 (\j_reg[2]_0 ),
        .\j_reg[2]_2 (\j_reg[2]_1 ),
        .\j_reg[2]_3 (\j_reg[2]_2 ),
        .\j_reg[3]_0 (\j_reg[3]_0 ),
        .\j_reg[3]_1 (\j_reg[3]_1 ),
        .\j_reg[3]_2 (\j_reg[3]_2 ),
        .next_out_9(next_out_9),
        .valid(valid),
        .valid_aux_reg_0(logic_n_30));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    nexts_out_reg
       (.CLR(1'b0),
        .D(nexts_out),
        .G(acks_out),
        .GE(1'b1),
        .Q(next_out_8));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    reset_control_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(reset_control_reg_i_1__0_n_0),
        .GE(1'b1),
        .Q(reset_control));
  LUT2 #(
    .INIT(4'hE)) 
    reset_control_reg_i_1__0
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .O(reset_control_reg_i_1__0_n_0));
endmodule

(* ORIG_REF_NAME = "fsm" *) 
module design_1_top_nqueens_0_0_fsm__parameterized1
   (AR,
    next_out_7,
    \j_reg[2] ,
    \j_reg[2]_0 ,
    \j_reg[0] ,
    \j_reg[3] ,
    \count_reg_reg[0] ,
    \j_reg[3]_0 ,
    \j_reg[3]_1 ,
    \j_reg[0]_0 ,
    \count_reg_reg[2] ,
    \count_reg_reg[0]_0 ,
    \count_reg_reg[1] ,
    \count_reg_reg[0]_1 ,
    \j_reg[0]_1 ,
    a_in_8,
    \j_reg[1] ,
    \FSM_onehot_state_reg[3]_0 ,
    \FSM_onehot_state_reg[3]_1 ,
    \j_reg[3]_2 ,
    \j_reg[0]_2 ,
    \j_reg[1]_0 ,
    \j_reg[1]_1 ,
    SR,
    clk,
    Q,
    \count[4]_i_5__0 ,
    \count[4]_i_5__0_0 ,
    \count[4]_i_5__0_1 ,
    count1_carry_i_3__6,
    \count_reg[0] ,
    done_aux_reg,
    done_aux_reg_0,
    done_aux_reg_1,
    \count[4]_i_7__0 ,
    \count[4]_i_7__0_0 ,
    \count[4]_i_17__0 ,
    \count[4]_i_17__0_0 ,
    \count[4]_i_14__0 ,
    \count[4]_i_19__0 ,
    \count[4]_i_6__3 ,
    a_in_7,
    count1_carry_i_12__0,
    count1_carry_i_8__1,
    \count[4]_i_4__5 ,
    count1_carry_i_16__1,
    count1_carry_i_16__1_0,
    count1_carry_i_16__1_1,
    next_out_8,
    nRst,
    \FSM_onehot_state_reg[0]_0 ,
    \count_reg_reg[0]_2 );
  output [0:0]AR;
  output next_out_7;
  output \j_reg[2] ;
  output [2:0]\j_reg[2]_0 ;
  output \j_reg[0] ;
  output \j_reg[3] ;
  output \count_reg_reg[0] ;
  output \j_reg[3]_0 ;
  output \j_reg[3]_1 ;
  output \j_reg[0]_0 ;
  output \count_reg_reg[2] ;
  output \count_reg_reg[0]_0 ;
  output \count_reg_reg[1] ;
  output \count_reg_reg[0]_1 ;
  output \j_reg[0]_1 ;
  output [39:0]a_in_8;
  output \j_reg[1] ;
  output \FSM_onehot_state_reg[3]_0 ;
  output \FSM_onehot_state_reg[3]_1 ;
  output \j_reg[3]_2 ;
  output \j_reg[0]_2 ;
  output \j_reg[1]_0 ;
  output \j_reg[1]_1 ;
  output [0:0]SR;
  input clk;
  input [3:0]Q;
  input \count[4]_i_5__0 ;
  input \count[4]_i_5__0_0 ;
  input \count[4]_i_5__0_1 ;
  input count1_carry_i_3__6;
  input \count_reg[0] ;
  input [2:0]done_aux_reg;
  input done_aux_reg_0;
  input done_aux_reg_1;
  input \count[4]_i_7__0 ;
  input \count[4]_i_7__0_0 ;
  input \count[4]_i_17__0 ;
  input \count[4]_i_17__0_0 ;
  input \count[4]_i_14__0 ;
  input \count[4]_i_19__0 ;
  input \count[4]_i_6__3 ;
  input [34:0]a_in_7;
  input count1_carry_i_12__0;
  input count1_carry_i_8__1;
  input \count[4]_i_4__5 ;
  input count1_carry_i_16__1;
  input count1_carry_i_16__1_0;
  input count1_carry_i_16__1_1;
  input next_out_8;
  input nRst;
  input [0:0]\FSM_onehot_state_reg[0]_0 ;
  input [0:0]\count_reg_reg[0]_2 ;

  wire [0:0]AR;
  wire [0:0]\FSM_onehot_state_reg[0]_0 ;
  wire \FSM_onehot_state_reg[3]_0 ;
  wire \FSM_onehot_state_reg[3]_1 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[2] ;
  wire [3:0]Q;
  wire [0:0]SR;
  wire [34:0]a_in_7;
  wire [39:0]a_in_8;
  wire acks_out;
  wire \asout_array[7]_2 ;
  wire \asout_array[7]_2_BUFG ;
  wire ce;
  wire ce__0;
  wire ce_reg_i_1__4_n_0;
  wire clk;
  wire count1;
  wire count1_carry_i_12__0;
  wire count1_carry_i_16__1;
  wire count1_carry_i_16__1_0;
  wire count1_carry_i_16__1_1;
  wire count1_carry_i_3__6;
  wire count1_carry_i_8__1;
  wire \count[4]_i_14__0 ;
  wire \count[4]_i_17__0 ;
  wire \count[4]_i_17__0_0 ;
  wire \count[4]_i_19__0 ;
  wire \count[4]_i_4__5 ;
  wire \count[4]_i_5__0 ;
  wire \count[4]_i_5__0_0 ;
  wire \count[4]_i_5__0_1 ;
  wire \count[4]_i_6__3 ;
  wire \count[4]_i_7__0 ;
  wire \count[4]_i_7__0_0 ;
  wire \count_reg[0] ;
  wire \count_reg_reg[0] ;
  wire \count_reg_reg[0]_0 ;
  wire \count_reg_reg[0]_1 ;
  wire [0:0]\count_reg_reg[0]_2 ;
  wire \count_reg_reg[1] ;
  wire \count_reg_reg[2] ;
  wire [2:0]done_aux_reg;
  wire done_aux_reg_0;
  wire done_aux_reg_1;
  wire dut_n_0;
  wire dut_n_10;
  wire dut_n_11;
  wire dut_n_12;
  wire dut_n_13;
  wire dut_n_14;
  wire dut_n_15;
  wire dut_n_16;
  wire dut_n_17;
  wire dut_n_18;
  wire dut_n_19;
  wire dut_n_20;
  wire dut_n_6;
  wire dut_n_7;
  wire dut_n_8;
  wire dut_n_9;
  wire [3:3]j_reg;
  wire \j_reg[0] ;
  wire \j_reg[0]_0 ;
  wire \j_reg[0]_1 ;
  wire \j_reg[0]_2 ;
  wire \j_reg[1] ;
  wire \j_reg[1]_0 ;
  wire \j_reg[1]_1 ;
  wire \j_reg[2] ;
  wire [2:0]\j_reg[2]_0 ;
  wire \j_reg[3]_0 ;
  wire \j_reg[3]_1 ;
  wire \j_reg[3]_2 ;
  wire j_reg_3_sn_1;
  wire logic_n_10;
  wire logic_n_23;
  wire logic_n_24;
  wire logic_n_27;
  wire logic_n_28;
  wire logic_n_29;
  wire logic_n_9;
  wire nRst;
  wire next_out_7;
  wire next_out_8;
  wire nexts_out;
  wire reset_control;
  wire reset_control_reg_i_1__1_n_0;
  wire [4:0]u_i;
  wire valid;

  assign \j_reg[3]  = j_reg_3_sn_1;
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_state[4]_i_1__0 
       (.I0(AR),
        .I1(nRst),
        .O(SR));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(clk),
        .CE(logic_n_27),
        .D(1'b0),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(clk),
        .CE(logic_n_27),
        .D(dut_n_20),
        .Q(ce__0),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(clk),
        .CE(logic_n_27),
        .D(dut_n_19),
        .Q(\FSM_onehot_state_reg_n_0_[2] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  (* OPT_MODIFIED = "BUFG_OPT" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(clk),
        .CE(logic_n_27),
        .D(logic_n_29),
        .Q(\asout_array[7]_2 ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(clk),
        .CE(logic_n_27),
        .D(dut_n_18),
        .Q(nexts_out),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    acks_out_reg
       (.CLR(1'b0),
        .D(acks_out),
        .G(logic_n_28),
        .GE(1'b1),
        .Q(AR));
  LUT3 #(
    .INIT(8'hFE)) 
    acks_out_reg_i_1__4
       (.I0(nexts_out),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(ce__0),
        .O(acks_out));
  (* LOPT_BUFG_CLOCK *) 
  (* OPT_MODIFIED = "BUFG_OPT" *) 
  BUFG \asout_array[7]_2_BUFG_inst 
       (.I(\asout_array[7]_2 ),
        .O(\asout_array[7]_2_BUFG ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][0] 
       (.CLR(1'b0),
        .D(u_i[0]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[0]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][1] 
       (.CLR(1'b0),
        .D(u_i[1]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[1]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][2] 
       (.CLR(1'b0),
        .D(u_i[2]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[2]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][3] 
       (.CLR(1'b0),
        .D(u_i[3]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[3]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][4] 
       (.CLR(1'b0),
        .D(u_i[4]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[4]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][0] 
       (.CLR(1'b0),
        .D(a_in_7[0]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[5]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][1] 
       (.CLR(1'b0),
        .D(a_in_7[1]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[6]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][2] 
       (.CLR(1'b0),
        .D(a_in_7[2]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[7]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][3] 
       (.CLR(1'b0),
        .D(a_in_7[3]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[8]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][4] 
       (.CLR(1'b0),
        .D(a_in_7[4]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[9]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][0] 
       (.CLR(1'b0),
        .D(a_in_7[5]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[10]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][1] 
       (.CLR(1'b0),
        .D(a_in_7[6]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[11]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][2] 
       (.CLR(1'b0),
        .D(a_in_7[7]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[12]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][3] 
       (.CLR(1'b0),
        .D(a_in_7[8]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[13]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][4] 
       (.CLR(1'b0),
        .D(a_in_7[9]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[14]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][0] 
       (.CLR(1'b0),
        .D(a_in_7[10]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[15]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][1] 
       (.CLR(1'b0),
        .D(a_in_7[11]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[16]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][2] 
       (.CLR(1'b0),
        .D(a_in_7[12]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[17]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][3] 
       (.CLR(1'b0),
        .D(a_in_7[13]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[18]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][4] 
       (.CLR(1'b0),
        .D(a_in_7[14]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[19]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][0] 
       (.CLR(1'b0),
        .D(a_in_7[15]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[20]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][1] 
       (.CLR(1'b0),
        .D(a_in_7[16]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[21]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][2] 
       (.CLR(1'b0),
        .D(a_in_7[17]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[22]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][3] 
       (.CLR(1'b0),
        .D(a_in_7[18]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[23]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][4] 
       (.CLR(1'b0),
        .D(a_in_7[19]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[24]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][0] 
       (.CLR(1'b0),
        .D(a_in_7[20]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[25]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][1] 
       (.CLR(1'b0),
        .D(a_in_7[21]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[26]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][2] 
       (.CLR(1'b0),
        .D(a_in_7[22]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[27]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][3] 
       (.CLR(1'b0),
        .D(a_in_7[23]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[28]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][4] 
       (.CLR(1'b0),
        .D(a_in_7[24]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[29]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[6][0] 
       (.CLR(1'b0),
        .D(a_in_7[25]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[30]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[6][1] 
       (.CLR(1'b0),
        .D(a_in_7[26]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[31]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[6][2] 
       (.CLR(1'b0),
        .D(a_in_7[27]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[32]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[6][3] 
       (.CLR(1'b0),
        .D(a_in_7[28]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[33]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[6][4] 
       (.CLR(1'b0),
        .D(a_in_7[29]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[34]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[7][0] 
       (.CLR(1'b0),
        .D(a_in_7[30]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[35]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[7][1] 
       (.CLR(1'b0),
        .D(a_in_7[31]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[36]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[7][2] 
       (.CLR(1'b0),
        .D(a_in_7[32]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[37]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[7][3] 
       (.CLR(1'b0),
        .D(a_in_7[33]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[38]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[7][4] 
       (.CLR(1'b0),
        .D(a_in_7[34]),
        .G(\asout_array[7]_2_BUFG ),
        .GE(1'b1),
        .Q(a_in_8[39]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    ce_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(ce_reg_i_1__4_n_0),
        .GE(1'b1),
        .Q(ce));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ce_reg_i_1__4
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(nexts_out),
        .O(ce_reg_i_1__4_n_0));
  design_1_top_nqueens_0_0_up_counter_1 dut
       (.CO(count1),
        .D({dut_n_18,dut_n_19,dut_n_20}),
        .E(ce),
        .\FSM_onehot_state_reg[4] ({\asout_array[7]_2_BUFG ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .Q(u_i),
        .S({dut_n_6,dut_n_7,dut_n_8}),
        .clk(clk),
        .count1_carry__1(j_reg),
        .count1_carry__1_0(logic_n_10),
        .count1_carry_i_3__6(count1_carry_i_3__6),
        .count1_carry_i_4__1(logic_n_24),
        .count1_carry_i_4__1_0(logic_n_9),
        .\count_reg[0] (\count_reg[0] ),
        .\count_reg[0]_0 (logic_n_23),
        .\count_reg_reg[0]_0 (dut_n_0),
        .\count_reg_reg[0]_1 (dut_n_9),
        .\count_reg_reg[0]_2 (\count_reg_reg[0]_2 ),
        .\count_reg_reg[1]_0 (dut_n_17),
        .\count_reg_reg[3]_0 ({dut_n_10,dut_n_11,dut_n_12,dut_n_13}),
        .\count_reg_reg[3]_1 ({dut_n_14,dut_n_15}),
        .\count_reg_reg[3]_2 (dut_n_16),
        .valid(valid));
  design_1_top_nqueens_0_0_ctrl_logic__parameterized1 logic
       (.AR(reset_control),
        .CO(count1),
        .D(u_i),
        .E(logic_n_27),
        .\FSM_onehot_state_reg[1] (logic_n_28),
        .\FSM_onehot_state_reg[3] (\FSM_onehot_state_reg[3]_0 ),
        .\FSM_onehot_state_reg[3]_0 (\FSM_onehot_state_reg[3]_1 ),
        .Q(Q),
        .S({dut_n_6,dut_n_7,dut_n_8}),
        .a_in_7({a_in_7[34],a_in_7[31:30]}),
        .a_in_8({a_in_8[39:31],a_in_8[29:15],a_in_8[13:0]}),
        .clk(clk),
        .count1_carry_0(dut_n_9),
        .count1_carry_1(dut_n_0),
        .count1_carry_2(dut_n_17),
        .count1_carry__0_0({dut_n_14,dut_n_15}),
        .count1_carry__1_0({dut_n_10,dut_n_11,dut_n_12,dut_n_13}),
        .count1_carry__1_i_1__6(\count_reg[0] ),
        .count1_carry_i_12__0(count1_carry_i_12__0),
        .count1_carry_i_16__1_0(count1_carry_i_16__1),
        .count1_carry_i_16__1_1(count1_carry_i_16__1_0),
        .count1_carry_i_16__1_2(count1_carry_i_16__1_1),
        .count1_carry_i_7__1_0(count1_carry_i_3__6),
        .count1_carry_i_8__1_0(count1_carry_i_8__1),
        .\count[4]_i_14__0_0 (\count[4]_i_14__0 ),
        .\count[4]_i_17__0_0 (\count[4]_i_17__0 ),
        .\count[4]_i_17__0_1 (\count[4]_i_17__0_0 ),
        .\count[4]_i_19__0_0 (\count[4]_i_19__0 ),
        .\count[4]_i_4__5 (\count[4]_i_4__5 ),
        .\count[4]_i_5__0_0 (\count[4]_i_5__0 ),
        .\count[4]_i_5__0_1 (\count[4]_i_5__0_0 ),
        .\count[4]_i_5__0_2 (\count[4]_i_5__0_1 ),
        .\count[4]_i_6__3_0 (\count[4]_i_6__3 ),
        .\count[4]_i_7__0 (\count[4]_i_7__0 ),
        .\count[4]_i_7__0_0 (\count[4]_i_7__0_0 ),
        .\count_reg[0]_0 (dut_n_16),
        .\count_reg_reg[0] (\count_reg_reg[0] ),
        .\count_reg_reg[0]_0 (\count_reg_reg[0]_0 ),
        .\count_reg_reg[0]_1 (\count_reg_reg[0]_1 ),
        .\count_reg_reg[0]_2 ({nexts_out,\asout_array[7]_2_BUFG ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .\count_reg_reg[1] (\count_reg_reg[1] ),
        .\count_reg_reg[2] (\count_reg_reg[2] ),
        .\count_reg_reg[3] (logic_n_10),
        .\count_reg_reg[4] (logic_n_23),
        .done_aux_reg_0(done_aux_reg),
        .done_aux_reg_1(done_aux_reg_0),
        .done_aux_reg_2(done_aux_reg_1),
        .\j_reg[0]_0 (\j_reg[0] ),
        .\j_reg[0]_1 (logic_n_9),
        .\j_reg[0]_2 (\j_reg[0]_0 ),
        .\j_reg[0]_3 (\j_reg[0]_1 ),
        .\j_reg[0]_4 (logic_n_24),
        .\j_reg[0]_5 (\j_reg[0]_2 ),
        .\j_reg[1]_0 (\j_reg[1] ),
        .\j_reg[1]_1 (\j_reg[1]_0 ),
        .\j_reg[1]_2 (\j_reg[1]_1 ),
        .\j_reg[2]_0 (\j_reg[2] ),
        .\j_reg[3]_0 ({j_reg,\j_reg[2]_0 }),
        .\j_reg[3]_1 (j_reg_3_sn_1),
        .\j_reg[3]_2 (\j_reg[3]_0 ),
        .\j_reg[3]_3 (\j_reg[3]_1 ),
        .\j_reg[3]_4 (\j_reg[3]_2 ),
        .next_out_8(next_out_8),
        .valid(valid),
        .valid_aux_reg_0(logic_n_29));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    nexts_out_reg
       (.CLR(1'b0),
        .D(nexts_out),
        .G(acks_out),
        .GE(1'b1),
        .Q(next_out_7));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    reset_control_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(reset_control_reg_i_1__1_n_0),
        .GE(1'b1),
        .Q(reset_control));
  LUT2 #(
    .INIT(4'hE)) 
    reset_control_reg_i_1__1
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .O(reset_control_reg_i_1__1_n_0));
endmodule

(* ORIG_REF_NAME = "fsm" *) 
module design_1_top_nqueens_0_0_fsm__parameterized2
   (AR,
    next_out_6,
    \j_reg[0] ,
    a_in_7,
    \j_reg[1] ,
    \j_reg[0]_0 ,
    \j_reg[1]_0 ,
    \j_reg[3] ,
    \j_reg[3]_0 ,
    \FSM_onehot_state_reg[3]_0 ,
    \FSM_onehot_state_reg[3]_1 ,
    \j_reg[2] ,
    \j_reg[3]_1 ,
    \FSM_onehot_state_reg[3]_2 ,
    \j_reg[3]_2 ,
    \j_reg[3]_3 ,
    SR,
    clk,
    \count[4]_i_3__0 ,
    \count[4]_i_3__0_0 ,
    count1_carry_i_12__1,
    \count[4]_i_8__2 ,
    Q,
    count1_carry__1_i_3__6,
    \count[4]_i_6__4 ,
    \count[4]_i_6__4_0 ,
    count1_carry_i_25,
    count1_carry_i_41,
    count1_carry_i_19,
    a_in_6,
    \count[4]_i_3__0_1 ,
    \count[4]_i_3__0_2 ,
    \count[4]_i_7__4 ,
    \count[4]_i_7__4_0 ,
    \count[4]_i_8__2_0 ,
    count1_carry_i_12__1_0,
    \count[4]_i_22__0 ,
    \count[4]_i_21__1 ,
    next_out_7,
    nRst,
    \FSM_onehot_state_reg[0]_0 ,
    \count_reg_reg[0] );
  output [0:0]AR;
  output next_out_6;
  output \j_reg[0] ;
  output [34:0]a_in_7;
  output \j_reg[1] ;
  output \j_reg[0]_0 ;
  output \j_reg[1]_0 ;
  output \j_reg[3] ;
  output \j_reg[3]_0 ;
  output \FSM_onehot_state_reg[3]_0 ;
  output \FSM_onehot_state_reg[3]_1 ;
  output \j_reg[2] ;
  output \j_reg[3]_1 ;
  output \FSM_onehot_state_reg[3]_2 ;
  output \j_reg[3]_2 ;
  output \j_reg[3]_3 ;
  output [0:0]SR;
  input clk;
  input \count[4]_i_3__0 ;
  input \count[4]_i_3__0_0 ;
  input count1_carry_i_12__1;
  input \count[4]_i_8__2 ;
  input [2:0]Q;
  input count1_carry__1_i_3__6;
  input \count[4]_i_6__4 ;
  input \count[4]_i_6__4_0 ;
  input count1_carry_i_25;
  input count1_carry_i_41;
  input count1_carry_i_19;
  input [29:0]a_in_6;
  input \count[4]_i_3__0_1 ;
  input \count[4]_i_3__0_2 ;
  input \count[4]_i_7__4 ;
  input \count[4]_i_7__4_0 ;
  input \count[4]_i_8__2_0 ;
  input count1_carry_i_12__1_0;
  input \count[4]_i_22__0 ;
  input \count[4]_i_21__1 ;
  input next_out_7;
  input nRst;
  input [0:0]\FSM_onehot_state_reg[0]_0 ;
  input [0:0]\count_reg_reg[0] ;

  wire [0:0]AR;
  wire [0:0]\FSM_onehot_state_reg[0]_0 ;
  wire \FSM_onehot_state_reg[3]_0 ;
  wire \FSM_onehot_state_reg[3]_1 ;
  wire \FSM_onehot_state_reg[3]_2 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[2] ;
  wire [2:0]Q;
  wire [0:0]SR;
  wire [29:0]a_in_6;
  wire [34:0]a_in_7;
  wire acks_out;
  wire \asout_array[6]_3 ;
  wire \asout_array[6]_3_BUFG ;
  wire ce;
  wire ce__0;
  wire ce_reg_i_1__5_n_0;
  wire clk;
  wire count1_carry__1_i_3__6;
  wire count1_carry_i_12__1;
  wire count1_carry_i_12__1_0;
  wire count1_carry_i_19;
  wire count1_carry_i_25;
  wire count1_carry_i_41;
  wire \count[4]_i_21__1 ;
  wire \count[4]_i_22__0 ;
  wire \count[4]_i_3__0 ;
  wire \count[4]_i_3__0_0 ;
  wire \count[4]_i_3__0_1 ;
  wire \count[4]_i_3__0_2 ;
  wire \count[4]_i_6__4 ;
  wire \count[4]_i_6__4_0 ;
  wire \count[4]_i_7__4 ;
  wire \count[4]_i_7__4_0 ;
  wire \count[4]_i_8__2 ;
  wire \count[4]_i_8__2_0 ;
  wire [0:0]\count_reg_reg[0] ;
  wire dut_n_0;
  wire dut_n_6;
  wire dut_n_7;
  wire dut_n_8;
  wire dut_n_9;
  wire \j_reg[0] ;
  wire \j_reg[0]_0 ;
  wire \j_reg[1] ;
  wire \j_reg[1]_0 ;
  wire \j_reg[2] ;
  wire \j_reg[3] ;
  wire \j_reg[3]_0 ;
  wire \j_reg[3]_1 ;
  wire \j_reg[3]_2 ;
  wire \j_reg[3]_3 ;
  wire logic_n_12;
  wire logic_n_13;
  wire logic_n_15;
  wire logic_n_16;
  wire logic_n_17;
  wire nRst;
  wire next_out_6;
  wire next_out_7;
  wire nexts_out;
  wire reset_control;
  wire reset_control_reg_i_1__2_n_0;
  wire [4:0]u_i;
  wire valid;

  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_state[4]_i_1__1 
       (.I0(AR),
        .I1(nRst),
        .O(SR));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(clk),
        .CE(logic_n_15),
        .D(1'b0),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(clk),
        .CE(logic_n_15),
        .D(dut_n_9),
        .Q(ce__0),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(clk),
        .CE(logic_n_15),
        .D(dut_n_8),
        .Q(\FSM_onehot_state_reg_n_0_[2] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  (* OPT_MODIFIED = "BUFG_OPT" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(clk),
        .CE(logic_n_15),
        .D(logic_n_17),
        .Q(\asout_array[6]_3 ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(clk),
        .CE(logic_n_15),
        .D(dut_n_7),
        .Q(nexts_out),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    acks_out_reg
       (.CLR(1'b0),
        .D(acks_out),
        .G(logic_n_16),
        .GE(1'b1),
        .Q(AR));
  LUT3 #(
    .INIT(8'hFE)) 
    acks_out_reg_i_1__5
       (.I0(nexts_out),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(ce__0),
        .O(acks_out));
  (* LOPT_BUFG_CLOCK *) 
  (* OPT_MODIFIED = "BUFG_OPT" *) 
  BUFG \asout_array[6]_3_BUFG_inst 
       (.I(\asout_array[6]_3 ),
        .O(\asout_array[6]_3_BUFG ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][0] 
       (.CLR(1'b0),
        .D(u_i[0]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[0]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][1] 
       (.CLR(1'b0),
        .D(u_i[1]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[1]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][2] 
       (.CLR(1'b0),
        .D(u_i[2]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[2]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][3] 
       (.CLR(1'b0),
        .D(u_i[3]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[3]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][4] 
       (.CLR(1'b0),
        .D(u_i[4]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[4]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][0] 
       (.CLR(1'b0),
        .D(a_in_6[0]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[5]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][1] 
       (.CLR(1'b0),
        .D(a_in_6[1]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[6]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][2] 
       (.CLR(1'b0),
        .D(a_in_6[2]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[7]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][3] 
       (.CLR(1'b0),
        .D(a_in_6[3]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[8]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][4] 
       (.CLR(1'b0),
        .D(a_in_6[4]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[9]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][0] 
       (.CLR(1'b0),
        .D(a_in_6[5]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[10]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][1] 
       (.CLR(1'b0),
        .D(a_in_6[6]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[11]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][2] 
       (.CLR(1'b0),
        .D(a_in_6[7]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[12]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][3] 
       (.CLR(1'b0),
        .D(a_in_6[8]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[13]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][4] 
       (.CLR(1'b0),
        .D(a_in_6[9]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[14]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][0] 
       (.CLR(1'b0),
        .D(a_in_6[10]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[15]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][1] 
       (.CLR(1'b0),
        .D(a_in_6[11]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[16]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][2] 
       (.CLR(1'b0),
        .D(a_in_6[12]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[17]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][3] 
       (.CLR(1'b0),
        .D(a_in_6[13]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[18]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][4] 
       (.CLR(1'b0),
        .D(a_in_6[14]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[19]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][0] 
       (.CLR(1'b0),
        .D(a_in_6[15]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[20]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][1] 
       (.CLR(1'b0),
        .D(a_in_6[16]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[21]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][2] 
       (.CLR(1'b0),
        .D(a_in_6[17]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[22]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][3] 
       (.CLR(1'b0),
        .D(a_in_6[18]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[23]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][4] 
       (.CLR(1'b0),
        .D(a_in_6[19]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[24]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][0] 
       (.CLR(1'b0),
        .D(a_in_6[20]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[25]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][1] 
       (.CLR(1'b0),
        .D(a_in_6[21]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[26]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][2] 
       (.CLR(1'b0),
        .D(a_in_6[22]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[27]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][3] 
       (.CLR(1'b0),
        .D(a_in_6[23]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[28]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][4] 
       (.CLR(1'b0),
        .D(a_in_6[24]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[29]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[6][0] 
       (.CLR(1'b0),
        .D(a_in_6[25]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[30]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[6][1] 
       (.CLR(1'b0),
        .D(a_in_6[26]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[31]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[6][2] 
       (.CLR(1'b0),
        .D(a_in_6[27]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[32]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[6][3] 
       (.CLR(1'b0),
        .D(a_in_6[28]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[33]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[6][4] 
       (.CLR(1'b0),
        .D(a_in_6[29]),
        .G(\asout_array[6]_3_BUFG ),
        .GE(1'b1),
        .Q(a_in_7[34]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    ce_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(ce_reg_i_1__5_n_0),
        .GE(1'b1),
        .Q(ce));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ce_reg_i_1__5
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(nexts_out),
        .O(ce_reg_i_1__5_n_0));
  design_1_top_nqueens_0_0_up_counter_2 dut
       (.D({dut_n_7,dut_n_8,dut_n_9}),
        .E(ce),
        .\FSM_onehot_state_reg[4] ({\asout_array[6]_3_BUFG ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .Q(u_i),
        .clk(clk),
        .count1_carry_i_4__2(logic_n_12),
        .\count_reg[0] (logic_n_13),
        .\count_reg_reg[0]_0 (dut_n_0),
        .\count_reg_reg[0]_1 (\count_reg_reg[0] ),
        .\count_reg_reg[3]_0 (dut_n_6),
        .valid(valid));
  design_1_top_nqueens_0_0_ctrl_logic__parameterized2 logic
       (.AR(reset_control),
        .D(u_i),
        .E(logic_n_15),
        .\FSM_onehot_state_reg[1] (logic_n_16),
        .\FSM_onehot_state_reg[3] (\FSM_onehot_state_reg[3]_0 ),
        .\FSM_onehot_state_reg[3]_0 (\FSM_onehot_state_reg[3]_1 ),
        .\FSM_onehot_state_reg[3]_1 (\FSM_onehot_state_reg[3]_2 ),
        .Q(a_in_7[34:30]),
        .a_in_6(a_in_6[29:25]),
        .a_in_7(a_in_7[29:0]),
        .clk(clk),
        .count1_carry_0(dut_n_0),
        .count1_carry__1_i_3__6(count1_carry__1_i_3__6),
        .count1_carry_i_12__1_0(count1_carry_i_12__1),
        .count1_carry_i_12__1_1(count1_carry_i_12__1_0),
        .count1_carry_i_19_0(count1_carry_i_19),
        .count1_carry_i_25(count1_carry_i_25),
        .count1_carry_i_41_0(count1_carry_i_41),
        .\count[4]_i_21__1_0 (\count[4]_i_21__1 ),
        .\count[4]_i_22__0_0 (\count[4]_i_22__0 ),
        .\count[4]_i_3__0_0 (\count[4]_i_3__0 ),
        .\count[4]_i_3__0_1 (\count[4]_i_3__0_0 ),
        .\count[4]_i_3__0_2 (\count[4]_i_3__0_1 ),
        .\count[4]_i_3__0_3 (\count[4]_i_3__0_2 ),
        .\count[4]_i_5__0 (Q),
        .\count[4]_i_6__4 (\count[4]_i_6__4 ),
        .\count[4]_i_6__4_0 (\count[4]_i_6__4_0 ),
        .\count[4]_i_7__4_0 (\count[4]_i_7__4 ),
        .\count[4]_i_7__4_1 (\count[4]_i_7__4_0 ),
        .\count[4]_i_8__2_0 (\count[4]_i_8__2 ),
        .\count[4]_i_8__2_1 (\count[4]_i_8__2_0 ),
        .\count_reg[0]_0 (dut_n_6),
        .\count_reg_reg[0] ({nexts_out,\asout_array[6]_3_BUFG ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .\j_reg[0]_0 (\j_reg[0] ),
        .\j_reg[0]_1 (\j_reg[0]_0 ),
        .\j_reg[0]_2 (logic_n_12),
        .\j_reg[0]_3 (logic_n_13),
        .\j_reg[1]_0 (\j_reg[1] ),
        .\j_reg[1]_1 (\j_reg[1]_0 ),
        .\j_reg[2]_0 (\j_reg[2] ),
        .\j_reg[3]_0 (\j_reg[3] ),
        .\j_reg[3]_1 (\j_reg[3]_0 ),
        .\j_reg[3]_2 (\j_reg[3]_1 ),
        .\j_reg[3]_3 (\j_reg[3]_2 ),
        .\j_reg[3]_4 (\j_reg[3]_3 ),
        .next_out_7(next_out_7),
        .valid(valid),
        .valid_aux_reg_0(logic_n_17));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    nexts_out_reg
       (.CLR(1'b0),
        .D(nexts_out),
        .G(acks_out),
        .GE(1'b1),
        .Q(next_out_6));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    reset_control_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(reset_control_reg_i_1__2_n_0),
        .GE(1'b1),
        .Q(reset_control));
  LUT2 #(
    .INIT(4'hE)) 
    reset_control_reg_i_1__2
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .O(reset_control_reg_i_1__2_n_0));
endmodule

(* ORIG_REF_NAME = "fsm" *) 
module design_1_top_nqueens_0_0_fsm__parameterized3
   (AR,
    next_out_5,
    \j_reg[2] ,
    \FSM_onehot_state_reg[3]_0 ,
    a_in_6,
    \FSM_onehot_state_reg[3]_1 ,
    \FSM_onehot_state_reg[3]_2 ,
    \FSM_onehot_state_reg[3]_3 ,
    \FSM_onehot_state_reg[3]_4 ,
    \count_reg_reg[3] ,
    \count_reg_reg[1] ,
    \FSM_onehot_state_reg[3]_5 ,
    \FSM_onehot_state_reg[3]_6 ,
    \count_reg_reg[2] ,
    \count_reg_reg[4] ,
    \count_reg_reg[0] ,
    \j_reg[1] ,
    \j_reg[2]_0 ,
    SR,
    clk,
    count1_carry_i_13__3,
    count1_carry_i_13__3_0,
    \count[4]_i_8__2 ,
    \count[4]_i_8__2_0 ,
    a_in_5,
    \count[4]_i_10__1 ,
    \count[4]_i_10__1_0 ,
    \count[4]_i_3__1 ,
    \count[4]_i_3__1_0 ,
    \count[4]_i_6__0 ,
    \count[4]_i_19__2 ,
    \count[4]_i_12__2 ,
    \count[4]_i_12__2_0 ,
    \count[4]_i_21__2 ,
    \count[4]_i_7__2 ,
    next_out_6,
    nRst,
    \FSM_onehot_state_reg[0]_0 ,
    \count_reg_reg[0]_0 );
  output [0:0]AR;
  output next_out_5;
  output \j_reg[2] ;
  output \FSM_onehot_state_reg[3]_0 ;
  output [29:0]a_in_6;
  output \FSM_onehot_state_reg[3]_1 ;
  output \FSM_onehot_state_reg[3]_2 ;
  output \FSM_onehot_state_reg[3]_3 ;
  output \FSM_onehot_state_reg[3]_4 ;
  output \count_reg_reg[3] ;
  output \count_reg_reg[1] ;
  output \FSM_onehot_state_reg[3]_5 ;
  output \FSM_onehot_state_reg[3]_6 ;
  output \count_reg_reg[2] ;
  output \count_reg_reg[4] ;
  output \count_reg_reg[0] ;
  output \j_reg[1] ;
  output \j_reg[2]_0 ;
  output [0:0]SR;
  input clk;
  input count1_carry_i_13__3;
  input count1_carry_i_13__3_0;
  input \count[4]_i_8__2 ;
  input \count[4]_i_8__2_0 ;
  input [24:0]a_in_5;
  input \count[4]_i_10__1 ;
  input \count[4]_i_10__1_0 ;
  input \count[4]_i_3__1 ;
  input \count[4]_i_3__1_0 ;
  input \count[4]_i_6__0 ;
  input \count[4]_i_19__2 ;
  input \count[4]_i_12__2 ;
  input \count[4]_i_12__2_0 ;
  input \count[4]_i_21__2 ;
  input \count[4]_i_7__2 ;
  input next_out_6;
  input nRst;
  input [0:0]\FSM_onehot_state_reg[0]_0 ;
  input [0:0]\count_reg_reg[0]_0 ;

  wire [0:0]AR;
  wire [0:0]\FSM_onehot_state_reg[0]_0 ;
  wire \FSM_onehot_state_reg[3]_0 ;
  wire \FSM_onehot_state_reg[3]_1 ;
  wire \FSM_onehot_state_reg[3]_2 ;
  wire \FSM_onehot_state_reg[3]_3 ;
  wire \FSM_onehot_state_reg[3]_4 ;
  wire \FSM_onehot_state_reg[3]_5 ;
  wire \FSM_onehot_state_reg[3]_6 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[2] ;
  wire [0:0]SR;
  wire [24:0]a_in_5;
  wire [29:0]a_in_6;
  wire acks_out;
  wire \asout_array[5]_4 ;
  wire \asout_array[5]_4_BUFG ;
  wire ce;
  wire ce__0;
  wire ce_reg_i_1__7_n_0;
  wire clk;
  wire count1_carry_i_13__3;
  wire count1_carry_i_13__3_0;
  wire \count[4]_i_10__1 ;
  wire \count[4]_i_10__1_0 ;
  wire \count[4]_i_12__2 ;
  wire \count[4]_i_12__2_0 ;
  wire \count[4]_i_19__2 ;
  wire \count[4]_i_21__2 ;
  wire \count[4]_i_3__1 ;
  wire \count[4]_i_3__1_0 ;
  wire \count[4]_i_6__0 ;
  wire \count[4]_i_7__2 ;
  wire \count[4]_i_8__2 ;
  wire \count[4]_i_8__2_0 ;
  wire \count_reg_reg[0] ;
  wire [0:0]\count_reg_reg[0]_0 ;
  wire \count_reg_reg[1] ;
  wire \count_reg_reg[2] ;
  wire \count_reg_reg[3] ;
  wire \count_reg_reg[4] ;
  wire dut_n_0;
  wire dut_n_10;
  wire dut_n_6;
  wire dut_n_7;
  wire dut_n_8;
  wire dut_n_9;
  wire \j_reg[1] ;
  wire \j_reg[2] ;
  wire \j_reg[2]_0 ;
  wire logic_n_1;
  wire logic_n_15;
  wire logic_n_16;
  wire logic_n_18;
  wire logic_n_19;
  wire logic_n_20;
  wire nRst;
  wire next_out_5;
  wire next_out_6;
  wire nexts_out;
  wire reset_control;
  wire reset_control_reg_i_1__3_n_0;
  wire [4:0]u_i;
  wire valid;

  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_state[4]_i_1__2 
       (.I0(AR),
        .I1(nRst),
        .O(SR));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(clk),
        .CE(logic_n_18),
        .D(1'b0),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(clk),
        .CE(logic_n_18),
        .D(dut_n_10),
        .Q(ce__0),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(clk),
        .CE(logic_n_18),
        .D(dut_n_9),
        .Q(\FSM_onehot_state_reg_n_0_[2] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  (* OPT_MODIFIED = "BUFG_OPT" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(clk),
        .CE(logic_n_18),
        .D(logic_n_20),
        .Q(\asout_array[5]_4 ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(clk),
        .CE(logic_n_18),
        .D(dut_n_8),
        .Q(nexts_out),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    acks_out_reg
       (.CLR(1'b0),
        .D(acks_out),
        .G(logic_n_19),
        .GE(1'b1),
        .Q(AR));
  LUT3 #(
    .INIT(8'hFE)) 
    acks_out_reg_i_1__7
       (.I0(nexts_out),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(ce__0),
        .O(acks_out));
  (* LOPT_BUFG_CLOCK *) 
  (* OPT_MODIFIED = "BUFG_OPT" *) 
  BUFG \asout_array[5]_4_BUFG_inst 
       (.I(\asout_array[5]_4 ),
        .O(\asout_array[5]_4_BUFG ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][0] 
       (.CLR(1'b0),
        .D(u_i[0]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[0]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][1] 
       (.CLR(1'b0),
        .D(u_i[1]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[1]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][2] 
       (.CLR(1'b0),
        .D(u_i[2]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[2]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][3] 
       (.CLR(1'b0),
        .D(u_i[3]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[3]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][4] 
       (.CLR(1'b0),
        .D(u_i[4]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[4]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][0] 
       (.CLR(1'b0),
        .D(a_in_5[0]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[5]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][1] 
       (.CLR(1'b0),
        .D(a_in_5[1]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[6]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][2] 
       (.CLR(1'b0),
        .D(a_in_5[2]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[7]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][3] 
       (.CLR(1'b0),
        .D(a_in_5[3]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[8]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][4] 
       (.CLR(1'b0),
        .D(a_in_5[4]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[9]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][0] 
       (.CLR(1'b0),
        .D(a_in_5[5]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[10]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][1] 
       (.CLR(1'b0),
        .D(a_in_5[6]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[11]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][2] 
       (.CLR(1'b0),
        .D(a_in_5[7]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[12]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][3] 
       (.CLR(1'b0),
        .D(a_in_5[8]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[13]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][4] 
       (.CLR(1'b0),
        .D(a_in_5[9]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[14]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][0] 
       (.CLR(1'b0),
        .D(a_in_5[10]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[15]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][1] 
       (.CLR(1'b0),
        .D(a_in_5[11]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[16]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][2] 
       (.CLR(1'b0),
        .D(a_in_5[12]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[17]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][3] 
       (.CLR(1'b0),
        .D(a_in_5[13]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[18]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][4] 
       (.CLR(1'b0),
        .D(a_in_5[14]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[19]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][0] 
       (.CLR(1'b0),
        .D(a_in_5[15]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[20]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][1] 
       (.CLR(1'b0),
        .D(a_in_5[16]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[21]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][2] 
       (.CLR(1'b0),
        .D(a_in_5[17]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[22]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][3] 
       (.CLR(1'b0),
        .D(a_in_5[18]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[23]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][4] 
       (.CLR(1'b0),
        .D(a_in_5[19]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[24]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][0] 
       (.CLR(1'b0),
        .D(a_in_5[20]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[25]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][1] 
       (.CLR(1'b0),
        .D(a_in_5[21]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[26]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][2] 
       (.CLR(1'b0),
        .D(a_in_5[22]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[27]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][3] 
       (.CLR(1'b0),
        .D(a_in_5[23]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[28]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[5][4] 
       (.CLR(1'b0),
        .D(a_in_5[24]),
        .G(\asout_array[5]_4_BUFG ),
        .GE(1'b1),
        .Q(a_in_6[29]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    ce_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(ce_reg_i_1__7_n_0),
        .GE(1'b1),
        .Q(ce));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ce_reg_i_1__7
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(nexts_out),
        .O(ce_reg_i_1__7_n_0));
  design_1_top_nqueens_0_0_up_counter_3 dut
       (.D({dut_n_8,dut_n_9,dut_n_10}),
        .E(ce),
        .\FSM_onehot_state_reg[4] ({\asout_array[5]_4_BUFG ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .Q(u_i),
        .clk(clk),
        .count1_carry_i_4__3(logic_n_16),
        .count1_carry_i_4__3_0(logic_n_15),
        .\count_reg[0] (logic_n_1),
        .\count_reg_reg[0]_0 (dut_n_7),
        .\count_reg_reg[0]_1 (\count_reg_reg[0]_0 ),
        .\count_reg_reg[1]_0 (dut_n_6),
        .\count_reg_reg[3]_0 (dut_n_0),
        .valid(valid));
  design_1_top_nqueens_0_0_ctrl_logic__parameterized3 logic
       (.AR(reset_control),
        .D(u_i),
        .E(logic_n_18),
        .\FSM_onehot_state_reg[1] (logic_n_19),
        .\FSM_onehot_state_reg[3] (\FSM_onehot_state_reg[3]_0 ),
        .\FSM_onehot_state_reg[3]_0 (\FSM_onehot_state_reg[3]_1 ),
        .\FSM_onehot_state_reg[3]_1 (\FSM_onehot_state_reg[3]_2 ),
        .\FSM_onehot_state_reg[3]_2 (\FSM_onehot_state_reg[3]_3 ),
        .\FSM_onehot_state_reg[3]_3 (\FSM_onehot_state_reg[3]_4 ),
        .\FSM_onehot_state_reg[3]_4 (\FSM_onehot_state_reg[3]_5 ),
        .\FSM_onehot_state_reg[3]_5 (\FSM_onehot_state_reg[3]_6 ),
        .Q({nexts_out,\asout_array[5]_4_BUFG ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .a_in_5(a_in_5[24:20]),
        .a_in_6(a_in_6),
        .clk(clk),
        .count1_carry_0(dut_n_6),
        .count1_carry_1(dut_n_7),
        .count1_carry_i_13__3_0(count1_carry_i_13__3),
        .count1_carry_i_13__3_1(count1_carry_i_13__3_0),
        .\count[4]_i_10__1_0 (\count[4]_i_10__1 ),
        .\count[4]_i_10__1_1 (\count[4]_i_10__1_0 ),
        .\count[4]_i_12__2_0 (\count[4]_i_12__2 ),
        .\count[4]_i_12__2_1 (\count[4]_i_12__2_0 ),
        .\count[4]_i_19__2_0 (\count[4]_i_19__2 ),
        .\count[4]_i_21__2_0 (\count[4]_i_21__2 ),
        .\count[4]_i_3__1_0 (\count[4]_i_3__1 ),
        .\count[4]_i_3__1_1 (\count[4]_i_3__1_0 ),
        .\count[4]_i_6__0_0 (\count[4]_i_6__0 ),
        .\count[4]_i_7__2_0 (\count[4]_i_7__2 ),
        .\count[4]_i_8__2 (\count[4]_i_8__2 ),
        .\count[4]_i_8__2_0 (\count[4]_i_8__2_0 ),
        .\count_reg[0]_0 (dut_n_0),
        .\count_reg_reg[0] (\count_reg_reg[0] ),
        .\count_reg_reg[1] (\count_reg_reg[1] ),
        .\count_reg_reg[2] (\count_reg_reg[2] ),
        .\count_reg_reg[3] (\count_reg_reg[3] ),
        .\count_reg_reg[4] (\count_reg_reg[4] ),
        .\j_reg[0]_0 (logic_n_1),
        .\j_reg[0]_1 (logic_n_15),
        .\j_reg[0]_2 (logic_n_16),
        .\j_reg[1]_0 (\j_reg[1] ),
        .\j_reg[2]_0 (\j_reg[2] ),
        .\j_reg[2]_1 (\j_reg[2]_0 ),
        .next_out_6(next_out_6),
        .valid(valid),
        .valid_aux_reg_0(logic_n_20));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    nexts_out_reg
       (.CLR(1'b0),
        .D(nexts_out),
        .G(acks_out),
        .GE(1'b1),
        .Q(next_out_5));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    reset_control_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(reset_control_reg_i_1__3_n_0),
        .GE(1'b1),
        .Q(reset_control));
  LUT2 #(
    .INIT(4'hE)) 
    reset_control_reg_i_1__3
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .O(reset_control_reg_i_1__3_n_0));
endmodule

(* ORIG_REF_NAME = "fsm" *) 
module design_1_top_nqueens_0_0_fsm__parameterized4
   (AR,
    next_out_4,
    Q,
    \FSM_onehot_state_reg[3]_0 ,
    a_in_5,
    \FSM_onehot_state_reg[3]_1 ,
    \FSM_onehot_state_reg[3]_2 ,
    \FSM_onehot_state_reg[3]_3 ,
    \FSM_onehot_state_reg[3]_4 ,
    \FSM_onehot_state_reg[3]_5 ,
    \FSM_onehot_state_reg[3]_6 ,
    \count_reg_reg[1] ,
    \FSM_onehot_state_reg[3]_7 ,
    \FSM_onehot_state_reg[3]_8 ,
    \FSM_onehot_state_reg[3]_9 ,
    \FSM_onehot_state_reg[3]_10 ,
    \j_reg[0] ,
    \j_reg[2] ,
    \j_reg[1] ,
    SR,
    clk,
    count1_carry_i_19__0,
    count1_carry_i_19__0_0,
    a_in_4,
    count1_carry__1_i_3__2,
    count1_carry_i_13__6,
    \count[4]_i_19__2 ,
    \count[4]_i_19__2_0 ,
    \count[4]_i_15__2 ,
    count1_carry_i_9__2,
    count1_carry_i_5__7,
    count1_carry_i_5__7_0,
    \count[4]_i_4__6 ,
    \count[4]_i_4__6_0 ,
    count1_carry_i_19__0_1,
    count1_carry_i_19__0_2,
    next_out_5,
    nRst,
    \FSM_onehot_state_reg[0]_0 ,
    \count_reg_reg[0] );
  output [0:0]AR;
  output next_out_4;
  output [2:0]Q;
  output \FSM_onehot_state_reg[3]_0 ;
  output [24:0]a_in_5;
  output \FSM_onehot_state_reg[3]_1 ;
  output \FSM_onehot_state_reg[3]_2 ;
  output \FSM_onehot_state_reg[3]_3 ;
  output \FSM_onehot_state_reg[3]_4 ;
  output \FSM_onehot_state_reg[3]_5 ;
  output \FSM_onehot_state_reg[3]_6 ;
  output \count_reg_reg[1] ;
  output \FSM_onehot_state_reg[3]_7 ;
  output \FSM_onehot_state_reg[3]_8 ;
  output \FSM_onehot_state_reg[3]_9 ;
  output \FSM_onehot_state_reg[3]_10 ;
  output \j_reg[0] ;
  output \j_reg[2] ;
  output \j_reg[1] ;
  output [0:0]SR;
  input clk;
  input count1_carry_i_19__0;
  input count1_carry_i_19__0_0;
  input [19:0]a_in_4;
  input count1_carry__1_i_3__2;
  input count1_carry_i_13__6;
  input \count[4]_i_19__2 ;
  input \count[4]_i_19__2_0 ;
  input \count[4]_i_15__2 ;
  input count1_carry_i_9__2;
  input count1_carry_i_5__7;
  input count1_carry_i_5__7_0;
  input \count[4]_i_4__6 ;
  input \count[4]_i_4__6_0 ;
  input count1_carry_i_19__0_1;
  input count1_carry_i_19__0_2;
  input next_out_5;
  input nRst;
  input [0:0]\FSM_onehot_state_reg[0]_0 ;
  input [0:0]\count_reg_reg[0] ;

  wire [0:0]AR;
  wire [0:0]\FSM_onehot_state_reg[0]_0 ;
  wire \FSM_onehot_state_reg[3]_0 ;
  wire \FSM_onehot_state_reg[3]_1 ;
  wire \FSM_onehot_state_reg[3]_10 ;
  wire \FSM_onehot_state_reg[3]_2 ;
  wire \FSM_onehot_state_reg[3]_3 ;
  wire \FSM_onehot_state_reg[3]_4 ;
  wire \FSM_onehot_state_reg[3]_5 ;
  wire \FSM_onehot_state_reg[3]_6 ;
  wire \FSM_onehot_state_reg[3]_7 ;
  wire \FSM_onehot_state_reg[3]_8 ;
  wire \FSM_onehot_state_reg[3]_9 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[2] ;
  wire [2:0]Q;
  wire [0:0]SR;
  wire [19:0]a_in_4;
  wire [24:0]a_in_5;
  wire acks_out_reg_i_1__6_n_0;
  wire \asout_array[4]_5 ;
  wire ce;
  wire ce__0;
  wire ce_reg_i_1__6_n_0;
  wire clk;
  wire count1_carry__1_i_3__2;
  wire count1_carry_i_13__6;
  wire count1_carry_i_19__0;
  wire count1_carry_i_19__0_0;
  wire count1_carry_i_19__0_1;
  wire count1_carry_i_19__0_2;
  wire count1_carry_i_5__7;
  wire count1_carry_i_5__7_0;
  wire count1_carry_i_9__2;
  wire \count[4]_i_15__2 ;
  wire \count[4]_i_19__2 ;
  wire \count[4]_i_19__2_0 ;
  wire \count[4]_i_4__6 ;
  wire \count[4]_i_4__6_0 ;
  wire [0:0]\count_reg_reg[0] ;
  wire \count_reg_reg[1] ;
  wire dut_n_0;
  wire dut_n_10;
  wire dut_n_11;
  wire dut_n_12;
  wire dut_n_13;
  wire dut_n_14;
  wire dut_n_15;
  wire dut_n_16;
  wire dut_n_17;
  wire dut_n_18;
  wire dut_n_19;
  wire dut_n_20;
  wire dut_n_21;
  wire dut_n_6;
  wire dut_n_7;
  wire dut_n_8;
  wire dut_n_9;
  wire \j_reg[0] ;
  wire \j_reg[1] ;
  wire \j_reg[2] ;
  wire logic_n_20;
  wire logic_n_22;
  wire logic_n_23;
  wire logic_n_24;
  wire logic_n_25;
  wire logic_n_4;
  wire logic_n_5;
  wire logic_n_6;
  wire logic_n_7;
  wire nRst;
  wire next_out_4;
  wire next_out_5;
  wire nexts_out;
  wire reset_control;
  wire reset_control_reg_i_1__4_n_0;
  wire [4:0]u_i;
  wire valid;

  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_state[4]_i_1__3 
       (.I0(AR),
        .I1(nRst),
        .O(SR));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(clk),
        .CE(logic_n_23),
        .D(1'b0),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(clk),
        .CE(logic_n_23),
        .D(dut_n_21),
        .Q(ce__0),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(clk),
        .CE(logic_n_23),
        .D(dut_n_20),
        .Q(\FSM_onehot_state_reg_n_0_[2] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(clk),
        .CE(logic_n_23),
        .D(logic_n_25),
        .Q(\asout_array[4]_5 ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(clk),
        .CE(logic_n_23),
        .D(dut_n_19),
        .Q(nexts_out),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    acks_out_reg
       (.CLR(1'b0),
        .D(acks_out_reg_i_1__6_n_0),
        .G(logic_n_24),
        .GE(1'b1),
        .Q(AR));
  LUT3 #(
    .INIT(8'hFE)) 
    acks_out_reg_i_1__6
       (.I0(nexts_out),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(ce__0),
        .O(acks_out_reg_i_1__6_n_0));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][0] 
       (.CLR(1'b0),
        .D(u_i[0]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[0]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][1] 
       (.CLR(1'b0),
        .D(u_i[1]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[1]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][2] 
       (.CLR(1'b0),
        .D(u_i[2]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[2]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][3] 
       (.CLR(1'b0),
        .D(u_i[3]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[3]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][4] 
       (.CLR(1'b0),
        .D(u_i[4]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[4]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][0] 
       (.CLR(1'b0),
        .D(a_in_4[0]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[5]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][1] 
       (.CLR(1'b0),
        .D(a_in_4[1]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[6]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][2] 
       (.CLR(1'b0),
        .D(a_in_4[2]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[7]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][3] 
       (.CLR(1'b0),
        .D(a_in_4[3]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[8]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][4] 
       (.CLR(1'b0),
        .D(a_in_4[4]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[9]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][0] 
       (.CLR(1'b0),
        .D(a_in_4[5]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[10]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][1] 
       (.CLR(1'b0),
        .D(a_in_4[6]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[11]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][2] 
       (.CLR(1'b0),
        .D(a_in_4[7]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[12]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][3] 
       (.CLR(1'b0),
        .D(a_in_4[8]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[13]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][4] 
       (.CLR(1'b0),
        .D(a_in_4[9]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[14]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][0] 
       (.CLR(1'b0),
        .D(a_in_4[10]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[15]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][1] 
       (.CLR(1'b0),
        .D(a_in_4[11]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[16]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][2] 
       (.CLR(1'b0),
        .D(a_in_4[12]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[17]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][3] 
       (.CLR(1'b0),
        .D(a_in_4[13]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[18]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][4] 
       (.CLR(1'b0),
        .D(a_in_4[14]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[19]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][0] 
       (.CLR(1'b0),
        .D(a_in_4[15]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[20]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][1] 
       (.CLR(1'b0),
        .D(a_in_4[16]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[21]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][2] 
       (.CLR(1'b0),
        .D(a_in_4[17]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[22]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][3] 
       (.CLR(1'b0),
        .D(a_in_4[18]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[23]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[4][4] 
       (.CLR(1'b0),
        .D(a_in_4[19]),
        .G(\asout_array[4]_5 ),
        .GE(1'b1),
        .Q(a_in_5[24]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    ce_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(ce_reg_i_1__6_n_0),
        .GE(1'b1),
        .Q(ce));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ce_reg_i_1__6
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(nexts_out),
        .O(ce_reg_i_1__6_n_0));
  design_1_top_nqueens_0_0_up_counter_4 dut
       (.D({dut_n_19,dut_n_20,dut_n_21}),
        .E(ce),
        .\FSM_onehot_state_reg[4] ({\asout_array[4]_5 ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .Q(u_i),
        .S({dut_n_6,dut_n_7,dut_n_8}),
        .clk(clk),
        .count1_carry__1(logic_n_4),
        .count1_carry__1_0(logic_n_22),
        .count1_carry__1_1(logic_n_20),
        .count1_carry_i_4__4(logic_n_7),
        .count1_carry_i_4__4_0(logic_n_5),
        .count1_carry_i_9__2(logic_n_6),
        .count1_carry_i_9__2_0(count1_carry_i_9__2),
        .\count_reg_reg[0]_0 (dut_n_18),
        .\count_reg_reg[0]_1 (\count_reg_reg[0] ),
        .\count_reg_reg[1]_0 (dut_n_0),
        .\count_reg_reg[1]_1 (dut_n_9),
        .\count_reg_reg[1]_2 (dut_n_10),
        .\count_reg_reg[3]_0 ({dut_n_11,dut_n_12,dut_n_13}),
        .\count_reg_reg[3]_1 ({dut_n_14,dut_n_15,dut_n_16,dut_n_17}),
        .valid(valid));
  design_1_top_nqueens_0_0_ctrl_logic__parameterized4 logic
       (.AR(reset_control),
        .D(u_i),
        .E(logic_n_23),
        .\FSM_onehot_state_reg[1] (logic_n_24),
        .\FSM_onehot_state_reg[3] (\FSM_onehot_state_reg[3]_0 ),
        .\FSM_onehot_state_reg[3]_0 (\FSM_onehot_state_reg[3]_1 ),
        .\FSM_onehot_state_reg[3]_1 (\FSM_onehot_state_reg[3]_2 ),
        .\FSM_onehot_state_reg[3]_2 (\FSM_onehot_state_reg[3]_3 ),
        .\FSM_onehot_state_reg[3]_3 (\FSM_onehot_state_reg[3]_4 ),
        .\FSM_onehot_state_reg[3]_4 (\FSM_onehot_state_reg[3]_5 ),
        .\FSM_onehot_state_reg[3]_5 (\FSM_onehot_state_reg[3]_6 ),
        .\FSM_onehot_state_reg[3]_6 (\FSM_onehot_state_reg[3]_7 ),
        .\FSM_onehot_state_reg[3]_7 (\FSM_onehot_state_reg[3]_8 ),
        .\FSM_onehot_state_reg[3]_8 (\FSM_onehot_state_reg[3]_9 ),
        .\FSM_onehot_state_reg[3]_9 (\FSM_onehot_state_reg[3]_10 ),
        .Q(Q),
        .S({dut_n_6,dut_n_7,dut_n_8}),
        .a_in_4({a_in_4[19:18],a_in_4[16:12],a_in_4[7:4]}),
        .a_in_5(a_in_5),
        .clk(clk),
        .count1_carry_0(dut_n_18),
        .count1_carry_1(dut_n_0),
        .count1_carry__0_0({dut_n_11,dut_n_12,dut_n_13}),
        .count1_carry__1_0({dut_n_14,dut_n_15,dut_n_16,dut_n_17}),
        .count1_carry__1_i_3__2(count1_carry__1_i_3__2),
        .count1_carry__1_i_3__2_0(dut_n_9),
        .count1_carry_i_13__6(count1_carry_i_13__6),
        .count1_carry_i_19__0_0(count1_carry_i_19__0),
        .count1_carry_i_19__0_1(count1_carry_i_19__0_0),
        .count1_carry_i_19__0_2(count1_carry_i_19__0_1),
        .count1_carry_i_19__0_3(count1_carry_i_19__0_2),
        .count1_carry_i_4__4_0(count1_carry_i_9__2),
        .count1_carry_i_5__7_0(count1_carry_i_5__7),
        .count1_carry_i_5__7_1(count1_carry_i_5__7_0),
        .\count[4]_i_15__2 (\count[4]_i_15__2 ),
        .\count[4]_i_19__2 (\count[4]_i_19__2 ),
        .\count[4]_i_19__2_0 (\count[4]_i_19__2_0 ),
        .\count[4]_i_4__6_0 (\count[4]_i_4__6 ),
        .\count[4]_i_4__6_1 (\count[4]_i_4__6_0 ),
        .\count_reg_reg[0] ({nexts_out,\asout_array[4]_5 ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .\count_reg_reg[1] (\count_reg_reg[1] ),
        .\count_reg_reg[3] (logic_n_20),
        .done_aux_reg_0(dut_n_10),
        .\j_reg[0]_0 (\j_reg[0] ),
        .\j_reg[1]_0 (\j_reg[1] ),
        .\j_reg[2]_0 (logic_n_4),
        .\j_reg[2]_1 (logic_n_5),
        .\j_reg[2]_2 (logic_n_6),
        .\j_reg[2]_3 (logic_n_7),
        .\j_reg[2]_4 (logic_n_22),
        .\j_reg[2]_5 (\j_reg[2] ),
        .next_out_5(next_out_5),
        .valid(valid),
        .valid_aux_reg_0(logic_n_25));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    nexts_out_reg
       (.CLR(1'b0),
        .D(nexts_out),
        .G(acks_out_reg_i_1__6_n_0),
        .GE(1'b1),
        .Q(next_out_4));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    reset_control_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(reset_control_reg_i_1__4_n_0),
        .GE(1'b1),
        .Q(reset_control));
  LUT2 #(
    .INIT(4'hE)) 
    reset_control_reg_i_1__4
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .O(reset_control_reg_i_1__4_n_0));
endmodule

(* ORIG_REF_NAME = "fsm" *) 
module design_1_top_nqueens_0_0_fsm__parameterized5
   (AR,
    next_out_3,
    Q,
    \count_reg_reg[2] ,
    \j_reg[2] ,
    a_in_4,
    \j_reg[1] ,
    \j_reg[1]_0 ,
    \FSM_onehot_state_reg[3]_0 ,
    \FSM_onehot_state_reg[3]_1 ,
    \j_reg[0] ,
    \j_reg[0]_0 ,
    \FSM_onehot_state_reg[3]_2 ,
    \FSM_onehot_state_reg[3]_3 ,
    \j_reg[0]_1 ,
    \FSM_onehot_state_reg[3]_4 ,
    \j_reg[2]_0 ,
    D,
    \j_reg[2]_1 ,
    \j_reg[2]_2 ,
    SR,
    clk,
    done_aux_reg,
    done_aux_reg_0,
    count1_carry_i_4__5,
    count1_carry_i_4__5_0,
    \count_reg[0] ,
    \count[4]_i_5__4 ,
    count1_carry__1,
    \count[4]_i_5__3 ,
    count1_carry_i_15__1,
    count1_carry_i_15__1_0,
    count1_carry_i_28__0,
    \count_reg[0]_0 ,
    a_in_3,
    next_out_4,
    nRst,
    \FSM_onehot_state_reg[0]_0 ,
    \count_reg_reg[0] );
  output [0:0]AR;
  output next_out_3;
  output [1:0]Q;
  output [2:0]\count_reg_reg[2] ;
  output \j_reg[2] ;
  output [19:0]a_in_4;
  output \j_reg[1] ;
  output \j_reg[1]_0 ;
  output \FSM_onehot_state_reg[3]_0 ;
  output \FSM_onehot_state_reg[3]_1 ;
  output \j_reg[0] ;
  output \j_reg[0]_0 ;
  output \FSM_onehot_state_reg[3]_2 ;
  output \FSM_onehot_state_reg[3]_3 ;
  output \j_reg[0]_1 ;
  output \FSM_onehot_state_reg[3]_4 ;
  output \j_reg[2]_0 ;
  output [0:0]D;
  output \j_reg[2]_1 ;
  output \j_reg[2]_2 ;
  output [0:0]SR;
  input clk;
  input done_aux_reg;
  input done_aux_reg_0;
  input count1_carry_i_4__5;
  input count1_carry_i_4__5_0;
  input \count_reg[0] ;
  input \count[4]_i_5__4 ;
  input count1_carry__1;
  input [2:0]\count[4]_i_5__3 ;
  input count1_carry_i_15__1;
  input count1_carry_i_15__1_0;
  input count1_carry_i_28__0;
  input \count_reg[0]_0 ;
  input [14:0]a_in_3;
  input next_out_4;
  input nRst;
  input [0:0]\FSM_onehot_state_reg[0]_0 ;
  input [0:0]\count_reg_reg[0] ;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]\FSM_onehot_state_reg[0]_0 ;
  wire \FSM_onehot_state_reg[3]_0 ;
  wire \FSM_onehot_state_reg[3]_1 ;
  wire \FSM_onehot_state_reg[3]_2 ;
  wire \FSM_onehot_state_reg[3]_3 ;
  wire \FSM_onehot_state_reg[3]_4 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[2] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire [14:0]a_in_3;
  wire [19:0]a_in_4;
  wire acks_out_reg_i_1__3_n_0;
  wire \asout_array[3]_6 ;
  wire ce;
  wire ce__0;
  wire ce_reg_i_1__3_n_0;
  wire clk;
  wire count1_carry__1;
  wire count1_carry_i_15__1;
  wire count1_carry_i_15__1_0;
  wire count1_carry_i_28__0;
  wire count1_carry_i_4__5;
  wire count1_carry_i_4__5_0;
  wire [2:0]\count[4]_i_5__3 ;
  wire \count[4]_i_5__4 ;
  wire \count_reg[0] ;
  wire \count_reg[0]_0 ;
  wire [0:0]\count_reg_reg[0] ;
  wire [2:0]\count_reg_reg[2] ;
  wire done_aux_reg;
  wire done_aux_reg_0;
  wire dut_n_0;
  wire dut_n_10;
  wire dut_n_11;
  wire dut_n_12;
  wire dut_n_13;
  wire dut_n_14;
  wire dut_n_15;
  wire dut_n_16;
  wire dut_n_17;
  wire dut_n_18;
  wire dut_n_19;
  wire dut_n_20;
  wire dut_n_21;
  wire dut_n_22;
  wire dut_n_23;
  wire dut_n_6;
  wire dut_n_7;
  wire dut_n_8;
  wire dut_n_9;
  wire [2:2]j_reg;
  wire \j_reg[0] ;
  wire \j_reg[0]_0 ;
  wire \j_reg[0]_1 ;
  wire \j_reg[1] ;
  wire \j_reg[1]_0 ;
  wire \j_reg[2]_0 ;
  wire \j_reg[2]_1 ;
  wire \j_reg[2]_2 ;
  wire j_reg_2_sn_1;
  wire logic_n_15;
  wire logic_n_16;
  wire logic_n_20;
  wire logic_n_21;
  wire logic_n_22;
  wire nRst;
  wire next_out_3;
  wire next_out_4;
  wire nexts_out;
  wire reset_control;
  wire reset_control_reg_i_1__5_n_0;
  wire [4:3]u_i;
  wire valid;

  assign \j_reg[2]  = j_reg_2_sn_1;
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_state[4]_i_1__4 
       (.I0(AR),
        .I1(nRst),
        .O(SR));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(clk),
        .CE(logic_n_20),
        .D(1'b0),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(clk),
        .CE(logic_n_20),
        .D(dut_n_23),
        .Q(ce__0),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(clk),
        .CE(logic_n_20),
        .D(dut_n_22),
        .Q(\FSM_onehot_state_reg_n_0_[2] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(clk),
        .CE(logic_n_20),
        .D(logic_n_22),
        .Q(\asout_array[3]_6 ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(clk),
        .CE(logic_n_20),
        .D(dut_n_21),
        .Q(nexts_out),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    acks_out_reg
       (.CLR(1'b0),
        .D(acks_out_reg_i_1__3_n_0),
        .G(logic_n_21),
        .GE(1'b1),
        .Q(AR));
  LUT3 #(
    .INIT(8'hFE)) 
    acks_out_reg_i_1__3
       (.I0(nexts_out),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(ce__0),
        .O(acks_out_reg_i_1__3_n_0));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][0] 
       (.CLR(1'b0),
        .D(\count_reg_reg[2] [0]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[0]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][1] 
       (.CLR(1'b0),
        .D(\count_reg_reg[2] [1]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[1]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][2] 
       (.CLR(1'b0),
        .D(\count_reg_reg[2] [2]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[2]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][3] 
       (.CLR(1'b0),
        .D(u_i[3]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[3]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][4] 
       (.CLR(1'b0),
        .D(u_i[4]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[4]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][0] 
       (.CLR(1'b0),
        .D(a_in_3[0]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[5]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][1] 
       (.CLR(1'b0),
        .D(a_in_3[1]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[6]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][2] 
       (.CLR(1'b0),
        .D(a_in_3[2]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[7]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][3] 
       (.CLR(1'b0),
        .D(a_in_3[3]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[8]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][4] 
       (.CLR(1'b0),
        .D(a_in_3[4]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[9]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][0] 
       (.CLR(1'b0),
        .D(a_in_3[5]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[10]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][1] 
       (.CLR(1'b0),
        .D(a_in_3[6]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[11]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][2] 
       (.CLR(1'b0),
        .D(a_in_3[7]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[12]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][3] 
       (.CLR(1'b0),
        .D(a_in_3[8]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[13]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][4] 
       (.CLR(1'b0),
        .D(a_in_3[9]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[14]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][0] 
       (.CLR(1'b0),
        .D(a_in_3[10]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[15]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][1] 
       (.CLR(1'b0),
        .D(a_in_3[11]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[16]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][2] 
       (.CLR(1'b0),
        .D(a_in_3[12]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[17]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][3] 
       (.CLR(1'b0),
        .D(a_in_3[13]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[18]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[3][4] 
       (.CLR(1'b0),
        .D(a_in_3[14]),
        .G(\asout_array[3]_6 ),
        .GE(1'b1),
        .Q(a_in_4[19]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    ce_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(ce_reg_i_1__3_n_0),
        .GE(1'b1),
        .Q(ce));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ce_reg_i_1__3
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(nexts_out),
        .O(ce_reg_i_1__3_n_0));
  design_1_top_nqueens_0_0_up_counter_5 dut
       (.D({dut_n_21,dut_n_22,dut_n_23}),
        .E(ce),
        .\FSM_onehot_state_reg[4] ({\asout_array[3]_6 ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .Q({u_i,\count_reg_reg[2] }),
        .S({dut_n_8,dut_n_9,dut_n_10}),
        .clk(clk),
        .count1_carry__1(count1_carry__1),
        .count1_carry__1_0({j_reg,Q[1]}),
        .count1_carry__1_1(logic_n_15),
        .count1_carry_i_4__5(count1_carry_i_4__5),
        .count1_carry_i_4__5_0(count1_carry_i_4__5_0),
        .\count_reg[0] (\count_reg[0] ),
        .\count_reg_reg[0]_0 (dut_n_6),
        .\count_reg_reg[0]_1 (dut_n_20),
        .\count_reg_reg[0]_2 (\count_reg_reg[0] ),
        .\count_reg_reg[1]_0 (dut_n_0),
        .\count_reg_reg[2]_0 (dut_n_11),
        .\count_reg_reg[2]_1 (dut_n_19),
        .\count_reg_reg[3]_0 (dut_n_7),
        .done_aux_reg(done_aux_reg),
        .done_aux_reg_0(done_aux_reg_0),
        .done_aux_reg_1(logic_n_16),
        .\j_reg[2] ({dut_n_12,dut_n_13,dut_n_14,dut_n_15}),
        .\j_reg[2]_0 ({dut_n_16,dut_n_17,dut_n_18}),
        .valid(valid));
  design_1_top_nqueens_0_0_ctrl_logic__parameterized5 logic
       (.AR(reset_control),
        .D({u_i,\count_reg_reg[2] [2]}),
        .E(logic_n_20),
        .\FSM_onehot_state_reg[1] (logic_n_21),
        .\FSM_onehot_state_reg[3] (\FSM_onehot_state_reg[3]_0 ),
        .\FSM_onehot_state_reg[3]_0 (\FSM_onehot_state_reg[3]_1 ),
        .\FSM_onehot_state_reg[3]_1 (\FSM_onehot_state_reg[3]_2 ),
        .\FSM_onehot_state_reg[3]_2 (\FSM_onehot_state_reg[3]_3 ),
        .\FSM_onehot_state_reg[3]_3 (\FSM_onehot_state_reg[3]_4 ),
        .Q({j_reg,Q}),
        .S({dut_n_8,dut_n_9,dut_n_10}),
        .a_in_3(a_in_3[14]),
        .a_in_4(a_in_4[14:0]),
        .clk(clk),
        .count1_carry_0(dut_n_6),
        .count1_carry_1(dut_n_20),
        .count1_carry_2(dut_n_0),
        .count1_carry__0_0({dut_n_16,dut_n_17,dut_n_18}),
        .count1_carry__1_0({dut_n_12,dut_n_13,dut_n_14,dut_n_15}),
        .count1_carry__1_i_1__3(\count_reg[0] ),
        .count1_carry__1_i_1__3_0(count1_carry__1),
        .count1_carry_i_15__1(count1_carry_i_15__1),
        .count1_carry_i_15__1_0(count1_carry_i_15__1_0),
        .count1_carry_i_28__0(count1_carry_i_28__0),
        .count1_carry_i_4__5_0(done_aux_reg),
        .count1_carry_i_4__5_1(done_aux_reg_0),
        .\count[4]_i_5__3 (\count[4]_i_5__3 ),
        .\count[4]_i_5__3_0 (a_in_4[19:15]),
        .\count[4]_i_5__4_0 (\count[4]_i_5__4 ),
        .\count_reg[0]_0 (dut_n_7),
        .\count_reg[0]_1 (dut_n_11),
        .\count_reg[0]_2 (\count_reg[0]_0 ),
        .\count_reg_reg[0] ({nexts_out,\asout_array[3]_6 ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .\count_reg_reg[3] (logic_n_15),
        .\count_reg_reg[4] (logic_n_16),
        .done_aux_reg_0(dut_n_19),
        .\j_reg[0]_0 (\j_reg[0] ),
        .\j_reg[0]_1 (\j_reg[0]_0 ),
        .\j_reg[0]_2 (\j_reg[0]_1 ),
        .\j_reg[1]_0 (\j_reg[1] ),
        .\j_reg[1]_1 (\j_reg[1]_0 ),
        .\j_reg[1]_2 (D),
        .\j_reg[2]_0 (j_reg_2_sn_1),
        .\j_reg[2]_1 (\j_reg[2]_0 ),
        .\j_reg[2]_2 (\j_reg[2]_1 ),
        .\j_reg[2]_3 (\j_reg[2]_2 ),
        .next_out_4(next_out_4),
        .valid(valid),
        .valid_aux_reg_0(logic_n_22));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    nexts_out_reg
       (.CLR(1'b0),
        .D(nexts_out),
        .G(acks_out_reg_i_1__3_n_0),
        .GE(1'b1),
        .Q(next_out_3));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    reset_control_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(reset_control_reg_i_1__5_n_0),
        .GE(1'b1),
        .Q(reset_control));
  LUT2 #(
    .INIT(4'hE)) 
    reset_control_reg_i_1__5
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .O(reset_control_reg_i_1__5_n_0));
endmodule

(* ORIG_REF_NAME = "fsm" *) 
module design_1_top_nqueens_0_0_fsm__parameterized6
   (AR,
    next_out_2,
    CO,
    \count_reg_reg[0] ,
    Q,
    \j_reg[0] ,
    \j_reg[1] ,
    \count_reg_reg[0]_0 ,
    \j_reg[0]_0 ,
    \j_reg[0]_1 ,
    \count_reg_reg[0]_1 ,
    \j_reg[0]_2 ,
    \j_reg[0]_3 ,
    a_in_3,
    \j_reg[0]_4 ,
    \j_reg[1]_0 ,
    \count_reg_reg[1] ,
    \count_reg_reg[2] ,
    SR,
    count1_carry__0,
    count1_carry__1,
    S,
    clk,
    count1_carry_i_5__5,
    count1_carry__1_i_3__3,
    a_in_2,
    \count[4]_i_3__2 ,
    count1_carry_i_10__7,
    \count[4]_i_5__4 ,
    D,
    count1_carry_i_13__4,
    count1_carry_i_13__4_0,
    count1_carry,
    count1_carry_0,
    \count[4]_i_3__2_0 ,
    next_out_3,
    done_aux_reg,
    count1_carry_i_4__6,
    nRst,
    \FSM_onehot_state_reg[0]_0 ,
    \count_reg_reg[0]_2 );
  output [0:0]AR;
  output next_out_2;
  output [0:0]CO;
  output \count_reg_reg[0] ;
  output [3:0]Q;
  output \j_reg[0] ;
  output [1:0]\j_reg[1] ;
  output \count_reg_reg[0]_0 ;
  output \j_reg[0]_0 ;
  output \j_reg[0]_1 ;
  output \count_reg_reg[0]_1 ;
  output \j_reg[0]_2 ;
  output \j_reg[0]_3 ;
  output [14:0]a_in_3;
  output \j_reg[0]_4 ;
  output \j_reg[1]_0 ;
  output \count_reg_reg[1] ;
  output \count_reg_reg[2] ;
  output [0:0]SR;
  input [2:0]count1_carry__0;
  input [3:0]count1_carry__1;
  input [2:0]S;
  input clk;
  input count1_carry_i_5__5;
  input [2:0]count1_carry__1_i_3__3;
  input [9:0]a_in_2;
  input \count[4]_i_3__2 ;
  input count1_carry_i_10__7;
  input [1:0]\count[4]_i_5__4 ;
  input [0:0]D;
  input count1_carry_i_13__4;
  input count1_carry_i_13__4_0;
  input count1_carry;
  input count1_carry_0;
  input \count[4]_i_3__2_0 ;
  input next_out_3;
  input done_aux_reg;
  input count1_carry_i_4__6;
  input nRst;
  input [0:0]\FSM_onehot_state_reg[0]_0 ;
  input [0:0]\count_reg_reg[0]_2 ;

  wire [0:0]AR;
  wire [0:0]CO;
  wire [0:0]D;
  wire [0:0]\FSM_onehot_state_reg[0]_0 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[2] ;
  wire [3:0]Q;
  wire [2:0]S;
  wire [0:0]SR;
  wire [9:0]a_in_2;
  wire [14:0]a_in_3;
  wire acks_out_reg_i_1__1_n_0;
  wire \asout_array[2]_7 ;
  wire ce;
  wire ce__0;
  wire ce_reg_i_1__1_n_0;
  wire clk;
  wire count1_carry;
  wire count1_carry_0;
  wire [2:0]count1_carry__0;
  wire [3:0]count1_carry__1;
  wire [2:0]count1_carry__1_i_3__3;
  wire count1_carry_i_10__7;
  wire count1_carry_i_13__4;
  wire count1_carry_i_13__4_0;
  wire count1_carry_i_4__6;
  wire count1_carry_i_5__5;
  wire \count[4]_i_3__2 ;
  wire \count[4]_i_3__2_0 ;
  wire [1:0]\count[4]_i_5__4 ;
  wire \count_reg_reg[0] ;
  wire \count_reg_reg[0]_0 ;
  wire \count_reg_reg[0]_1 ;
  wire [0:0]\count_reg_reg[0]_2 ;
  wire \count_reg_reg[1] ;
  wire \count_reg_reg[2] ;
  wire done_aux_reg;
  wire dut_n_7;
  wire dut_n_8;
  wire dut_n_9;
  wire \j_reg[0] ;
  wire \j_reg[0]_0 ;
  wire \j_reg[0]_1 ;
  wire \j_reg[0]_2 ;
  wire \j_reg[0]_3 ;
  wire \j_reg[0]_4 ;
  wire [1:0]\j_reg[1] ;
  wire \j_reg[1]_0 ;
  wire logic_n_14;
  wire logic_n_15;
  wire logic_n_16;
  wire nRst;
  wire next_out_2;
  wire next_out_3;
  wire nexts_out;
  wire reset_control;
  wire reset_control_reg_i_1__6_n_0;
  wire [4:4]u_i;
  wire valid;

  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_state[4]_i_1__5 
       (.I0(AR),
        .I1(nRst),
        .O(SR));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(clk),
        .CE(logic_n_14),
        .D(1'b0),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(clk),
        .CE(logic_n_14),
        .D(dut_n_9),
        .Q(ce__0),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(clk),
        .CE(logic_n_14),
        .D(dut_n_8),
        .Q(\FSM_onehot_state_reg_n_0_[2] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(clk),
        .CE(logic_n_14),
        .D(logic_n_16),
        .Q(\asout_array[2]_7 ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(clk),
        .CE(logic_n_14),
        .D(dut_n_7),
        .Q(nexts_out),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    acks_out_reg
       (.CLR(1'b0),
        .D(acks_out_reg_i_1__1_n_0),
        .G(logic_n_15),
        .GE(1'b1),
        .Q(AR));
  LUT3 #(
    .INIT(8'hFE)) 
    acks_out_reg_i_1__1
       (.I0(nexts_out),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(ce__0),
        .O(acks_out_reg_i_1__1_n_0));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][0] 
       (.CLR(1'b0),
        .D(Q[0]),
        .G(\asout_array[2]_7 ),
        .GE(1'b1),
        .Q(a_in_3[0]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][1] 
       (.CLR(1'b0),
        .D(Q[1]),
        .G(\asout_array[2]_7 ),
        .GE(1'b1),
        .Q(a_in_3[1]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][2] 
       (.CLR(1'b0),
        .D(Q[2]),
        .G(\asout_array[2]_7 ),
        .GE(1'b1),
        .Q(a_in_3[2]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][3] 
       (.CLR(1'b0),
        .D(Q[3]),
        .G(\asout_array[2]_7 ),
        .GE(1'b1),
        .Q(a_in_3[3]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][4] 
       (.CLR(1'b0),
        .D(u_i),
        .G(\asout_array[2]_7 ),
        .GE(1'b1),
        .Q(a_in_3[4]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][0] 
       (.CLR(1'b0),
        .D(a_in_2[0]),
        .G(\asout_array[2]_7 ),
        .GE(1'b1),
        .Q(a_in_3[5]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][1] 
       (.CLR(1'b0),
        .D(a_in_2[1]),
        .G(\asout_array[2]_7 ),
        .GE(1'b1),
        .Q(a_in_3[6]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][2] 
       (.CLR(1'b0),
        .D(a_in_2[2]),
        .G(\asout_array[2]_7 ),
        .GE(1'b1),
        .Q(a_in_3[7]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][3] 
       (.CLR(1'b0),
        .D(a_in_2[3]),
        .G(\asout_array[2]_7 ),
        .GE(1'b1),
        .Q(a_in_3[8]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][4] 
       (.CLR(1'b0),
        .D(a_in_2[4]),
        .G(\asout_array[2]_7 ),
        .GE(1'b1),
        .Q(a_in_3[9]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][0] 
       (.CLR(1'b0),
        .D(a_in_2[5]),
        .G(\asout_array[2]_7 ),
        .GE(1'b1),
        .Q(a_in_3[10]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][1] 
       (.CLR(1'b0),
        .D(a_in_2[6]),
        .G(\asout_array[2]_7 ),
        .GE(1'b1),
        .Q(a_in_3[11]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][2] 
       (.CLR(1'b0),
        .D(a_in_2[7]),
        .G(\asout_array[2]_7 ),
        .GE(1'b1),
        .Q(a_in_3[12]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][3] 
       (.CLR(1'b0),
        .D(a_in_2[8]),
        .G(\asout_array[2]_7 ),
        .GE(1'b1),
        .Q(a_in_3[13]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[2][4] 
       (.CLR(1'b0),
        .D(a_in_2[9]),
        .G(\asout_array[2]_7 ),
        .GE(1'b1),
        .Q(a_in_3[14]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    ce_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(ce_reg_i_1__1_n_0),
        .GE(1'b1),
        .Q(ce));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ce_reg_i_1__1
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(nexts_out),
        .O(ce_reg_i_1__1_n_0));
  design_1_top_nqueens_0_0_up_counter_6 dut
       (.D({dut_n_7,dut_n_8,dut_n_9}),
        .E(ce),
        .\FSM_onehot_state_reg[4] ({\asout_array[2]_7 ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .Q({u_i,Q}),
        .clk(clk),
        .count1_carry_i_5__5(count1_carry_i_5__5),
        .\count[4]_i_3__2 (\count[4]_i_3__2_0 ),
        .\count_reg_reg[0]_0 (\count_reg_reg[0] ),
        .\count_reg_reg[0]_1 (\count_reg_reg[0]_2 ),
        .\count_reg_reg[2]_0 (\count_reg_reg[2] ),
        .valid(valid));
  design_1_top_nqueens_0_0_ctrl_logic__parameterized6 logic
       (.AR(reset_control),
        .CO(CO),
        .D({u_i,Q[2],Q[0]}),
        .E(logic_n_14),
        .\FSM_onehot_state_reg[1] (logic_n_15),
        .Q(\j_reg[1] ),
        .S(S),
        .a_in_2(a_in_2[9]),
        .a_in_3(a_in_3[9:0]),
        .clk(clk),
        .count1_carry_0(count1_carry),
        .count1_carry_1(\count_reg_reg[0] ),
        .count1_carry_2(count1_carry_0),
        .count1_carry__0_0(count1_carry__0),
        .count1_carry__1_0(count1_carry__1),
        .count1_carry__1_i_3__3(count1_carry__1_i_3__3),
        .count1_carry_i_10__7(count1_carry_i_10__7),
        .count1_carry_i_12__4_0(D),
        .count1_carry_i_13__4_0(count1_carry_i_13__4),
        .count1_carry_i_13__4_1(count1_carry_i_13__4_0),
        .count1_carry_i_14__4_0(a_in_3[14:10]),
        .count1_carry_i_4__6_0(count1_carry_i_5__5),
        .count1_carry_i_4__6_1(count1_carry_i_4__6),
        .count1_carry_i_4__6_2(\count[4]_i_3__2_0 ),
        .\count[4]_i_3__2 (\count[4]_i_3__2 ),
        .\count[4]_i_5__4 (\count[4]_i_5__4 ),
        .\count_reg_reg[0] (\count_reg_reg[0]_0 ),
        .\count_reg_reg[0]_0 (\count_reg_reg[0]_1 ),
        .\count_reg_reg[0]_1 ({nexts_out,\asout_array[2]_7 ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .\count_reg_reg[1] (\count_reg_reg[1] ),
        .done_aux_reg_0(done_aux_reg),
        .\j_reg[0]_0 (\j_reg[0] ),
        .\j_reg[0]_1 (\j_reg[0]_0 ),
        .\j_reg[0]_2 (\j_reg[0]_1 ),
        .\j_reg[0]_3 (\j_reg[0]_2 ),
        .\j_reg[0]_4 (\j_reg[0]_3 ),
        .\j_reg[0]_5 (\j_reg[0]_4 ),
        .\j_reg[1]_0 (\j_reg[1]_0 ),
        .next_out_3(next_out_3),
        .valid(valid),
        .valid_aux_reg_0(logic_n_16));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    nexts_out_reg
       (.CLR(1'b0),
        .D(nexts_out),
        .G(acks_out_reg_i_1__1_n_0),
        .GE(1'b1),
        .Q(next_out_2));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    reset_control_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(reset_control_reg_i_1__6_n_0),
        .GE(1'b1),
        .Q(reset_control));
  LUT2 #(
    .INIT(4'hE)) 
    reset_control_reg_i_1__6
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .O(reset_control_reg_i_1__6_n_0));
endmodule

(* ORIG_REF_NAME = "fsm" *) 
module design_1_top_nqueens_0_0_fsm__parameterized7
   (AR,
    next_out_1,
    \count_reg_reg[1] ,
    \FSM_onehot_state_reg[4]_0 ,
    S,
    \j_reg[1] ,
    \count_reg_reg[2] ,
    \count_reg_reg[2]_0 ,
    \count_reg_reg[2]_1 ,
    \count_reg_reg[0] ,
    \j_reg[1]_0 ,
    a_in_2,
    \j_reg[0] ,
    \count_reg_reg[3] ,
    SR,
    done_s,
    ack_in_1__0,
    clk,
    \count[4]_i_3__2 ,
    ack_in_1,
    \count_reg_reg[0]_0 ,
    Q,
    done_aux_reg,
    count1_carry__1,
    done_aux_reg_0,
    count1_carry_i_19__1,
    CO,
    done_aux_reg_1,
    next_out_2,
    nRst);
  output [0:0]AR;
  output next_out_1;
  output \count_reg_reg[1] ;
  output \FSM_onehot_state_reg[4]_0 ;
  output [2:0]S;
  output \j_reg[1] ;
  output \count_reg_reg[2] ;
  output [3:0]\count_reg_reg[2]_0 ;
  output [2:0]\count_reg_reg[2]_1 ;
  output \count_reg_reg[0] ;
  output \j_reg[1]_0 ;
  output [9:0]a_in_2;
  output \j_reg[0] ;
  output \count_reg_reg[3] ;
  output [0:0]SR;
  output done_s;
  output ack_in_1__0;
  input clk;
  input \count[4]_i_3__2 ;
  input ack_in_1;
  input \count_reg_reg[0]_0 ;
  input [4:0]Q;
  input [3:0]done_aux_reg;
  input count1_carry__1;
  input done_aux_reg_0;
  input [1:0]count1_carry_i_19__1;
  input [0:0]CO;
  input done_aux_reg_1;
  input next_out_2;
  input nRst;

  wire [0:0]AR;
  wire [0:0]CO;
  wire \FSM_onehot_state[4]_i_1__7_n_0 ;
  wire \FSM_onehot_state_reg[4]_0 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[2] ;
  wire [4:0]Q;
  wire [2:0]S;
  wire [0:0]SR;
  wire [9:0]a_in_2;
  wire ack_in_1;
  wire ack_in_1__0;
  wire acks_out_reg_i_1_n_0;
  wire \asout_array[1]_8 ;
  wire ce;
  wire ce__0;
  wire ce_reg_i_1_n_0;
  wire clk;
  wire count1;
  wire count1_carry__1;
  wire [1:0]count1_carry_i_19__1;
  wire \count[4]_i_3__2 ;
  wire \count_reg_reg[0] ;
  wire \count_reg_reg[0]_0 ;
  wire \count_reg_reg[1] ;
  wire \count_reg_reg[2] ;
  wire [3:0]\count_reg_reg[2]_0 ;
  wire [2:0]\count_reg_reg[2]_1 ;
  wire \count_reg_reg[3] ;
  wire [3:0]done_aux_reg;
  wire done_aux_reg_0;
  wire done_aux_reg_1;
  wire done_s;
  wire dut_n_10;
  wire dut_n_11;
  wire dut_n_12;
  wire dut_n_13;
  wire dut_n_14;
  wire dut_n_15;
  wire dut_n_16;
  wire dut_n_17;
  wire dut_n_18;
  wire dut_n_19;
  wire dut_n_5;
  wire dut_n_6;
  wire dut_n_7;
  wire dut_n_8;
  wire dut_n_9;
  wire [0:0]j_reg;
  wire \j_reg[1] ;
  wire \j_reg[1]_0 ;
  wire j_reg_0_sn_1;
  wire logic_n_20;
  wire logic_n_21;
  wire logic_n_22;
  wire nRst;
  wire next_out_1;
  wire next_out_2;
  wire nexts_out;
  wire reset_control;
  wire reset_control_reg_i_1__7_n_0;
  wire [4:0]u_i;
  wire valid;

  assign \j_reg[0]  = j_reg_0_sn_1;
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_state[4]_i_1__6 
       (.I0(AR),
        .I1(nRst),
        .O(SR));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_state[4]_i_1__7 
       (.I0(ack_in_1),
        .I1(nRst),
        .O(\FSM_onehot_state[4]_i_1__7_n_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(clk),
        .CE(logic_n_20),
        .D(1'b0),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(\FSM_onehot_state[4]_i_1__7_n_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(clk),
        .CE(logic_n_20),
        .D(dut_n_19),
        .Q(ce__0),
        .R(\FSM_onehot_state[4]_i_1__7_n_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(clk),
        .CE(logic_n_20),
        .D(dut_n_18),
        .Q(\FSM_onehot_state_reg_n_0_[2] ),
        .R(\FSM_onehot_state[4]_i_1__7_n_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(clk),
        .CE(logic_n_20),
        .D(logic_n_22),
        .Q(\asout_array[1]_8 ),
        .R(\FSM_onehot_state[4]_i_1__7_n_0 ));
  (* FSM_ENCODED_STATES = "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(clk),
        .CE(logic_n_20),
        .D(dut_n_17),
        .Q(nexts_out),
        .R(\FSM_onehot_state[4]_i_1__7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    ack_in_1_reg_i_1
       (.I0(next_out_1),
        .I1(ack_in_1),
        .O(ack_in_1__0));
  LUT3 #(
    .INIT(8'h0E)) 
    ack_in_1_reg_i_2
       (.I0(next_out_1),
        .I1(ack_in_1),
        .I2(\count_reg_reg[0]_0 ),
        .O(\FSM_onehot_state_reg[4]_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    acks_out_reg
       (.CLR(1'b0),
        .D(acks_out_reg_i_1_n_0),
        .G(logic_n_21),
        .GE(1'b1),
        .Q(AR));
  LUT3 #(
    .INIT(8'hFE)) 
    acks_out_reg_i_1
       (.I0(nexts_out),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(ce__0),
        .O(acks_out_reg_i_1_n_0));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][0] 
       (.CLR(1'b0),
        .D(u_i[0]),
        .G(\asout_array[1]_8 ),
        .GE(1'b1),
        .Q(a_in_2[0]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][1] 
       (.CLR(1'b0),
        .D(u_i[1]),
        .G(\asout_array[1]_8 ),
        .GE(1'b1),
        .Q(a_in_2[1]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][2] 
       (.CLR(1'b0),
        .D(u_i[2]),
        .G(\asout_array[1]_8 ),
        .GE(1'b1),
        .Q(a_in_2[2]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][3] 
       (.CLR(1'b0),
        .D(u_i[3]),
        .G(\asout_array[1]_8 ),
        .GE(1'b1),
        .Q(a_in_2[3]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[0][4] 
       (.CLR(1'b0),
        .D(u_i[4]),
        .G(\asout_array[1]_8 ),
        .GE(1'b1),
        .Q(a_in_2[4]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][0] 
       (.CLR(1'b0),
        .D(Q[0]),
        .G(\asout_array[1]_8 ),
        .GE(1'b1),
        .Q(a_in_2[5]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][1] 
       (.CLR(1'b0),
        .D(Q[1]),
        .G(\asout_array[1]_8 ),
        .GE(1'b1),
        .Q(a_in_2[6]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][2] 
       (.CLR(1'b0),
        .D(Q[2]),
        .G(\asout_array[1]_8 ),
        .GE(1'b1),
        .Q(a_in_2[7]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][3] 
       (.CLR(1'b0),
        .D(Q[3]),
        .G(\asout_array[1]_8 ),
        .GE(1'b1),
        .Q(a_in_2[8]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \asout_array_reg[1][4] 
       (.CLR(1'b0),
        .D(Q[4]),
        .G(\asout_array[1]_8 ),
        .GE(1'b1),
        .Q(a_in_2[9]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    ce_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(ce_reg_i_1_n_0),
        .GE(1'b1),
        .Q(ce));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ce_reg_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(nexts_out),
        .O(ce_reg_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    done_s_reg_i_1
       (.I0(\count_reg_reg[0]_0 ),
        .I1(next_out_1),
        .O(done_s));
  design_1_top_nqueens_0_0_up_counter_7 dut
       (.CO(count1),
        .D({dut_n_17,dut_n_18,dut_n_19}),
        .E(ce),
        .\FSM_onehot_state_reg[4] ({\asout_array[1]_8 ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .Q(u_i),
        .S({dut_n_5,dut_n_6,dut_n_7}),
        .ack_in_1(ack_in_1),
        .clk(clk),
        .\count_reg_reg[3]_0 (dut_n_16),
        .\count_reg_reg[4]_0 ({dut_n_8,dut_n_9,dut_n_10,dut_n_11}),
        .\count_reg_reg[4]_1 ({dut_n_12,dut_n_13,dut_n_14,dut_n_15}),
        .done_aux_reg(Q),
        .j_reg(j_reg),
        .valid(valid));
  design_1_top_nqueens_0_0_ctrl_logic__parameterized7 logic
       (.AR(reset_control),
        .CO(count1),
        .D(logic_n_22),
        .E(logic_n_20),
        .\FSM_onehot_state_reg[1] (logic_n_21),
        .Q(a_in_2[9:5]),
        .S({dut_n_5,dut_n_6,dut_n_7}),
        .a_in_2(a_in_2[4:0]),
        .clk(clk),
        .count1_carry__0_0({dut_n_12,dut_n_13,dut_n_14,dut_n_15}),
        .count1_carry__1_0({dut_n_8,dut_n_9,dut_n_10,dut_n_11}),
        .count1_carry__1_1(count1_carry__1),
        .count1_carry_i_19__1_0(count1_carry_i_19__1),
        .\count[4]_i_3__2_0 (\count[4]_i_3__2 ),
        .\count_reg_reg[0] (\count_reg_reg[0] ),
        .\count_reg_reg[0]_0 ({nexts_out,\asout_array[1]_8 ,\FSM_onehot_state_reg_n_0_[2] ,ce__0,\FSM_onehot_state_reg_n_0_[0] }),
        .\count_reg_reg[1] (\count_reg_reg[1] ),
        .\count_reg_reg[2] (S),
        .\count_reg_reg[2]_0 (\count_reg_reg[2] ),
        .\count_reg_reg[2]_1 (\count_reg_reg[2]_0 ),
        .\count_reg_reg[2]_2 (\count_reg_reg[2]_1 ),
        .\count_reg_reg[3] (\count_reg_reg[3] ),
        .done_aux_reg_0(done_aux_reg),
        .done_aux_reg_1(done_aux_reg_0),
        .done_aux_reg_2(dut_n_16),
        .done_aux_reg_3(CO),
        .done_aux_reg_4(done_aux_reg_1),
        .j_reg(j_reg),
        .\j_reg[0]_0 (j_reg_0_sn_1),
        .\j_reg[1] (\j_reg[1] ),
        .\j_reg[1]_0 (\j_reg[1]_0 ),
        .next_out_2(next_out_2),
        .valid(valid));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    nexts_out_reg
       (.CLR(1'b0),
        .D(nexts_out),
        .G(acks_out_reg_i_1_n_0),
        .GE(1'b1),
        .Q(next_out_1));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    reset_control_reg
       (.CLR(1'b0),
        .D(ce__0),
        .G(reset_control_reg_i_1__7_n_0),
        .GE(1'b1),
        .Q(reset_control));
  LUT2 #(
    .INIT(4'hE)) 
    reset_control_reg_i_1__7
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(ce__0),
        .O(reset_control_reg_i_1__7_n_0));
endmodule

(* ORIG_REF_NAME = "top_nqueens" *) 
module design_1_top_nqueens_0_0_top_nqueens
   (flag,
    done,
    counter,
    clk,
    nRst);
  output flag;
  output done;
  output [9:0]counter;
  input clk;
  input nRst;

  wire [4:0]a_in_1;
  wire \a_in_1_reg[0]_i_1_n_0 ;
  wire \a_in_1_reg[1]_i_1_n_0 ;
  wire \a_in_1_reg[2]_i_1_n_0 ;
  wire \a_in_1_reg[3]_i_1_n_0 ;
  wire \a_in_1_reg[4]_i_1_n_0 ;
  wire \a_in_1_reg[4]_i_2_n_0 ;
  wire [9:0]a_in_2;
  wire [14:0]a_in_3;
  wire [19:0]a_in_4;
  wire [24:0]a_in_5;
  wire [29:0]a_in_6;
  wire [34:0]a_in_7;
  wire [39:0]a_in_8;
  wire [44:43]a_in_9;
  wire ack_in_1;
  wire ack_in_1__0;
  wire ack_in_2;
  wire ack_in_3;
  wire ack_in_4;
  wire ack_in_5;
  wire ack_in_6;
  wire ack_in_7;
  wire ack_in_8;
  wire ack_in_9;
  wire clk;
  wire [9:0]counter;
  wire \counter_s_reg[10]_i_3_n_0 ;
  wire done;
  wire done_s;
  wire \^flag ;
  wire flag_s_reg_i_1_n_0;
  wire fsm_1_n_10;
  wire fsm_1_n_11;
  wire fsm_1_n_12;
  wire fsm_1_n_13;
  wire fsm_1_n_14;
  wire fsm_1_n_15;
  wire fsm_1_n_16;
  wire fsm_1_n_17;
  wire fsm_1_n_2;
  wire fsm_1_n_28;
  wire fsm_1_n_29;
  wire fsm_1_n_3;
  wire fsm_1_n_30;
  wire fsm_1_n_4;
  wire fsm_1_n_5;
  wire fsm_1_n_6;
  wire fsm_1_n_7;
  wire fsm_1_n_8;
  wire fsm_1_n_9;
  wire fsm_2_n_11;
  wire fsm_2_n_12;
  wire fsm_2_n_13;
  wire fsm_2_n_14;
  wire fsm_2_n_15;
  wire fsm_2_n_16;
  wire fsm_2_n_3;
  wire fsm_2_n_32;
  wire fsm_2_n_33;
  wire fsm_2_n_34;
  wire fsm_2_n_35;
  wire fsm_2_n_36;
  wire fsm_2_n_8;
  wire fsm_3_n_28;
  wire fsm_3_n_29;
  wire fsm_3_n_30;
  wire fsm_3_n_31;
  wire fsm_3_n_32;
  wire fsm_3_n_33;
  wire fsm_3_n_34;
  wire fsm_3_n_35;
  wire fsm_3_n_36;
  wire fsm_3_n_37;
  wire fsm_3_n_38;
  wire fsm_3_n_40;
  wire fsm_3_n_41;
  wire fsm_3_n_42;
  wire fsm_3_n_7;
  wire fsm_4_n_31;
  wire fsm_4_n_32;
  wire fsm_4_n_33;
  wire fsm_4_n_34;
  wire fsm_4_n_35;
  wire fsm_4_n_36;
  wire fsm_4_n_37;
  wire fsm_4_n_38;
  wire fsm_4_n_39;
  wire fsm_4_n_40;
  wire fsm_4_n_41;
  wire fsm_4_n_42;
  wire fsm_4_n_43;
  wire fsm_4_n_44;
  wire fsm_4_n_45;
  wire fsm_4_n_5;
  wire fsm_5_n_2;
  wire fsm_5_n_3;
  wire fsm_5_n_34;
  wire fsm_5_n_35;
  wire fsm_5_n_36;
  wire fsm_5_n_37;
  wire fsm_5_n_38;
  wire fsm_5_n_39;
  wire fsm_5_n_40;
  wire fsm_5_n_41;
  wire fsm_5_n_42;
  wire fsm_5_n_43;
  wire fsm_5_n_44;
  wire fsm_5_n_45;
  wire fsm_5_n_46;
  wire fsm_5_n_47;
  wire fsm_6_n_2;
  wire fsm_6_n_38;
  wire fsm_6_n_39;
  wire fsm_6_n_40;
  wire fsm_6_n_41;
  wire fsm_6_n_42;
  wire fsm_6_n_43;
  wire fsm_6_n_44;
  wire fsm_6_n_45;
  wire fsm_6_n_46;
  wire fsm_6_n_47;
  wire fsm_6_n_48;
  wire fsm_6_n_49;
  wire fsm_6_n_50;
  wire fsm_7_n_10;
  wire fsm_7_n_11;
  wire fsm_7_n_12;
  wire fsm_7_n_13;
  wire fsm_7_n_14;
  wire fsm_7_n_15;
  wire fsm_7_n_16;
  wire fsm_7_n_2;
  wire fsm_7_n_57;
  wire fsm_7_n_58;
  wire fsm_7_n_59;
  wire fsm_7_n_6;
  wire fsm_7_n_60;
  wire fsm_7_n_61;
  wire fsm_7_n_62;
  wire fsm_7_n_63;
  wire fsm_7_n_64;
  wire fsm_7_n_7;
  wire fsm_7_n_8;
  wire fsm_7_n_9;
  wire fsm_8_n_12;
  wire fsm_8_n_13;
  wire fsm_8_n_14;
  wire fsm_8_n_15;
  wire fsm_8_n_16;
  wire fsm_8_n_17;
  wire fsm_8_n_18;
  wire fsm_8_n_19;
  wire fsm_8_n_20;
  wire fsm_8_n_21;
  wire fsm_8_n_22;
  wire fsm_8_n_23;
  wire fsm_8_n_24;
  wire fsm_8_n_25;
  wire fsm_8_n_26;
  wire fsm_8_n_27;
  wire fsm_8_n_28;
  wire fsm_8_n_29;
  wire fsm_8_n_30;
  wire fsm_8_n_31;
  wire fsm_8_n_32;
  wire fsm_8_n_33;
  wire fsm_8_n_34;
  wire fsm_8_n_7;
  wire fsm_9_n_1;
  wire fsm_9_n_10;
  wire fsm_9_n_4;
  wire fsm_9_n_5;
  wire fsm_9_n_6;
  wire fsm_9_n_7;
  wire fsm_9_n_8;
  wire fsm_9_n_9;
  wire \logic/count1 ;
  wire [1:0]\logic/j_reg ;
  wire [1:0]\logic/j_reg_1 ;
  wire [2:0]\logic/j_reg_2 ;
  wire [2:0]\logic/j_reg_3 ;
  wire [3:0]\logic/j_reg_4 ;
  wire [1:0]\logic/j_reg_6 ;
  wire nRst;
  wire next_out_1;
  wire next_out_2;
  wire next_out_3;
  wire next_out_4;
  wire next_out_5;
  wire next_out_6;
  wire next_out_7;
  wire next_out_8;
  wire next_out_9;
  wire [1:1]p_0_in__5;
  wire [10:1]plusOp_9;
  wire [3:0]u_i;
  wire [2:0]u_i_0;
  wire [2:0]u_i_5;

  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_in_1_reg[0] 
       (.CLR(1'b0),
        .D(\a_in_1_reg[0]_i_1_n_0 ),
        .G(\a_in_1_reg[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(a_in_1[0]));
  LUT1 #(
    .INIT(2'h1)) 
    \a_in_1_reg[0]_i_1 
       (.I0(a_in_1[0]),
        .O(\a_in_1_reg[0]_i_1_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_in_1_reg[1] 
       (.CLR(1'b0),
        .D(\a_in_1_reg[1]_i_1_n_0 ),
        .G(\a_in_1_reg[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(a_in_1[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \a_in_1_reg[1]_i_1 
       (.I0(a_in_1[0]),
        .I1(a_in_1[1]),
        .O(\a_in_1_reg[1]_i_1_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_in_1_reg[2] 
       (.CLR(1'b0),
        .D(\a_in_1_reg[2]_i_1_n_0 ),
        .G(\a_in_1_reg[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(a_in_1[2]));
  LUT3 #(
    .INIT(8'h6A)) 
    \a_in_1_reg[2]_i_1 
       (.I0(a_in_1[2]),
        .I1(a_in_1[1]),
        .I2(a_in_1[0]),
        .O(\a_in_1_reg[2]_i_1_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_in_1_reg[3] 
       (.CLR(1'b0),
        .D(\a_in_1_reg[3]_i_1_n_0 ),
        .G(\a_in_1_reg[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(a_in_1[3]));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \a_in_1_reg[3]_i_1 
       (.I0(a_in_1[3]),
        .I1(a_in_1[2]),
        .I2(a_in_1[0]),
        .I3(a_in_1[1]),
        .O(\a_in_1_reg[3]_i_1_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_in_1_reg[4] 
       (.CLR(1'b0),
        .D(\a_in_1_reg[4]_i_1_n_0 ),
        .G(\a_in_1_reg[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(a_in_1[4]));
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \a_in_1_reg[4]_i_1 
       (.I0(a_in_1[4]),
        .I1(a_in_1[1]),
        .I2(a_in_1[0]),
        .I3(a_in_1[2]),
        .I4(a_in_1[3]),
        .O(\a_in_1_reg[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \a_in_1_reg[4]_i_2 
       (.I0(ack_in_1),
        .I1(\^flag ),
        .O(\a_in_1_reg[4]_i_2_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b1)) 
    ack_in_1_reg
       (.CLR(1'b0),
        .D(ack_in_1__0),
        .G(fsm_1_n_3),
        .GE(1'b1),
        .Q(ack_in_1));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_G_INVERTED(1'b1)) 
    \counter_s_reg[10] 
       (.CLR(1'b0),
        .D(plusOp_9[10]),
        .G(fsm_9_n_10),
        .GE(1'b1),
        .Q(counter[9]));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \counter_s_reg[10]_i_1 
       (.I0(counter[7]),
        .I1(\counter_s_reg[10]_i_3_n_0 ),
        .I2(counter[6]),
        .I3(counter[8]),
        .I4(counter[9]),
        .O(plusOp_9[10]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \counter_s_reg[10]_i_3 
       (.I0(counter[5]),
        .I1(counter[3]),
        .I2(counter[1]),
        .I3(counter[0]),
        .I4(counter[2]),
        .I5(counter[4]),
        .O(\counter_s_reg[10]_i_3_n_0 ));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_G_INVERTED(1'b1)) 
    \counter_s_reg[1] 
       (.CLR(1'b0),
        .D(plusOp_9[1]),
        .G(fsm_9_n_10),
        .GE(1'b1),
        .Q(counter[0]));
  LUT1 #(
    .INIT(2'h1)) 
    \counter_s_reg[1]_i_1 
       (.I0(counter[0]),
        .O(plusOp_9[1]));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_G_INVERTED(1'b1)) 
    \counter_s_reg[2] 
       (.CLR(1'b0),
        .D(plusOp_9[2]),
        .G(fsm_9_n_10),
        .GE(1'b1),
        .Q(counter[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \counter_s_reg[2]_i_1 
       (.I0(counter[0]),
        .I1(counter[1]),
        .O(plusOp_9[2]));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_G_INVERTED(1'b1)) 
    \counter_s_reg[3] 
       (.CLR(1'b0),
        .D(plusOp_9[3]),
        .G(fsm_9_n_10),
        .GE(1'b1),
        .Q(counter[2]));
  LUT3 #(
    .INIT(8'h78)) 
    \counter_s_reg[3]_i_1 
       (.I0(counter[0]),
        .I1(counter[1]),
        .I2(counter[2]),
        .O(plusOp_9[3]));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_G_INVERTED(1'b1)) 
    \counter_s_reg[4] 
       (.CLR(1'b0),
        .D(plusOp_9[4]),
        .G(fsm_9_n_10),
        .GE(1'b1),
        .Q(counter[3]));
  LUT4 #(
    .INIT(16'h7F80)) 
    \counter_s_reg[4]_i_1 
       (.I0(counter[1]),
        .I1(counter[0]),
        .I2(counter[2]),
        .I3(counter[3]),
        .O(plusOp_9[4]));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_G_INVERTED(1'b1)) 
    \counter_s_reg[5] 
       (.CLR(1'b0),
        .D(plusOp_9[5]),
        .G(fsm_9_n_10),
        .GE(1'b1),
        .Q(counter[4]));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \counter_s_reg[5]_i_1 
       (.I0(counter[2]),
        .I1(counter[0]),
        .I2(counter[1]),
        .I3(counter[3]),
        .I4(counter[4]),
        .O(plusOp_9[5]));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_G_INVERTED(1'b1)) 
    \counter_s_reg[6] 
       (.CLR(1'b0),
        .D(plusOp_9[6]),
        .G(fsm_9_n_10),
        .GE(1'b1),
        .Q(counter[5]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \counter_s_reg[6]_i_1 
       (.I0(counter[3]),
        .I1(counter[1]),
        .I2(counter[0]),
        .I3(counter[2]),
        .I4(counter[4]),
        .I5(counter[5]),
        .O(plusOp_9[6]));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_G_INVERTED(1'b1)) 
    \counter_s_reg[7] 
       (.CLR(1'b0),
        .D(plusOp_9[7]),
        .G(fsm_9_n_10),
        .GE(1'b1),
        .Q(counter[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \counter_s_reg[7]_i_1 
       (.I0(\counter_s_reg[10]_i_3_n_0 ),
        .I1(counter[6]),
        .O(plusOp_9[7]));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_G_INVERTED(1'b1)) 
    \counter_s_reg[8] 
       (.CLR(1'b0),
        .D(plusOp_9[8]),
        .G(fsm_9_n_10),
        .GE(1'b1),
        .Q(counter[7]));
  LUT3 #(
    .INIT(8'h78)) 
    \counter_s_reg[8]_i_1 
       (.I0(\counter_s_reg[10]_i_3_n_0 ),
        .I1(counter[6]),
        .I2(counter[7]),
        .O(plusOp_9[8]));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_G_INVERTED(1'b1)) 
    \counter_s_reg[9] 
       (.CLR(1'b0),
        .D(plusOp_9[9]),
        .G(fsm_9_n_10),
        .GE(1'b1),
        .Q(counter[8]));
  LUT4 #(
    .INIT(16'h7F80)) 
    \counter_s_reg[9]_i_1 
       (.I0(counter[6]),
        .I1(\counter_s_reg[10]_i_3_n_0 ),
        .I2(counter[7]),
        .I3(counter[8]),
        .O(plusOp_9[9]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    done_s_reg
       (.CLR(1'b0),
        .D(next_out_1),
        .G(done_s),
        .GE(1'b1),
        .Q(done));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    flag_s_reg
       (.CLR(1'b0),
        .D(1'b1),
        .G(flag_s_reg_i_1_n_0),
        .GE(1'b1),
        .Q(\^flag ));
  LUT5 #(
    .INIT(32'h00000040)) 
    flag_s_reg_i_1
       (.I0(a_in_1[1]),
        .I1(a_in_1[0]),
        .I2(a_in_1[2]),
        .I3(a_in_1[4]),
        .I4(a_in_1[3]),
        .O(flag_s_reg_i_1_n_0));
  design_1_top_nqueens_0_0_fsm__parameterized7 fsm_1
       (.AR(ack_in_2),
        .CO(\logic/count1 ),
        .\FSM_onehot_state_reg[4]_0 (fsm_1_n_3),
        .Q(a_in_1),
        .S({fsm_1_n_4,fsm_1_n_5,fsm_1_n_6}),
        .SR(fsm_1_n_30),
        .a_in_2(a_in_2),
        .ack_in_1(ack_in_1),
        .ack_in_1__0(ack_in_1__0),
        .clk(clk),
        .count1_carry__1(fsm_2_n_8),
        .count1_carry_i_19__1(\logic/j_reg ),
        .\count[4]_i_3__2 (fsm_2_n_3),
        .\count_reg_reg[0] (fsm_1_n_16),
        .\count_reg_reg[0]_0 (\^flag ),
        .\count_reg_reg[1] (fsm_1_n_2),
        .\count_reg_reg[2] (fsm_1_n_8),
        .\count_reg_reg[2]_0 ({fsm_1_n_9,fsm_1_n_10,fsm_1_n_11,fsm_1_n_12}),
        .\count_reg_reg[2]_1 ({fsm_1_n_13,fsm_1_n_14,fsm_1_n_15}),
        .\count_reg_reg[3] (fsm_1_n_29),
        .done_aux_reg(u_i),
        .done_aux_reg_0(fsm_2_n_16),
        .done_aux_reg_1(fsm_2_n_35),
        .done_s(done_s),
        .\j_reg[0] (fsm_1_n_28),
        .\j_reg[1] (fsm_1_n_7),
        .\j_reg[1]_0 (fsm_1_n_17),
        .nRst(nRst),
        .next_out_1(next_out_1),
        .next_out_2(next_out_2));
  design_1_top_nqueens_0_0_fsm__parameterized6 fsm_2
       (.AR(ack_in_3),
        .CO(\logic/count1 ),
        .D(p_0_in__5),
        .\FSM_onehot_state_reg[0]_0 (fsm_1_n_30),
        .Q(u_i),
        .S({fsm_1_n_4,fsm_1_n_5,fsm_1_n_6}),
        .SR(fsm_2_n_36),
        .a_in_2(a_in_2),
        .a_in_3(a_in_3),
        .clk(clk),
        .count1_carry(fsm_1_n_8),
        .count1_carry_0(fsm_1_n_2),
        .count1_carry__0({fsm_1_n_13,fsm_1_n_14,fsm_1_n_15}),
        .count1_carry__1({fsm_1_n_9,fsm_1_n_10,fsm_1_n_11,fsm_1_n_12}),
        .count1_carry__1_i_3__3(u_i_0),
        .count1_carry_i_10__7(fsm_3_n_38),
        .count1_carry_i_13__4(fsm_3_n_40),
        .count1_carry_i_13__4_0(fsm_3_n_41),
        .count1_carry_i_4__6(fsm_1_n_16),
        .count1_carry_i_5__5(fsm_1_n_17),
        .\count[4]_i_3__2 (fsm_1_n_28),
        .\count[4]_i_3__2_0 (fsm_1_n_7),
        .\count[4]_i_5__4 (\logic/j_reg_1 ),
        .\count_reg_reg[0] (fsm_2_n_3),
        .\count_reg_reg[0]_0 (fsm_2_n_11),
        .\count_reg_reg[0]_1 (fsm_2_n_14),
        .\count_reg_reg[0]_2 (ack_in_2),
        .\count_reg_reg[1] (fsm_2_n_34),
        .\count_reg_reg[2] (fsm_2_n_35),
        .done_aux_reg(fsm_1_n_29),
        .\j_reg[0] (fsm_2_n_8),
        .\j_reg[0]_0 (fsm_2_n_12),
        .\j_reg[0]_1 (fsm_2_n_13),
        .\j_reg[0]_2 (fsm_2_n_15),
        .\j_reg[0]_3 (fsm_2_n_16),
        .\j_reg[0]_4 (fsm_2_n_32),
        .\j_reg[1] (\logic/j_reg ),
        .\j_reg[1]_0 (fsm_2_n_33),
        .nRst(nRst),
        .next_out_2(next_out_2),
        .next_out_3(next_out_3));
  design_1_top_nqueens_0_0_fsm__parameterized5 fsm_3
       (.AR(ack_in_4),
        .D(p_0_in__5),
        .\FSM_onehot_state_reg[0]_0 (fsm_2_n_36),
        .\FSM_onehot_state_reg[3]_0 (fsm_3_n_30),
        .\FSM_onehot_state_reg[3]_1 (fsm_3_n_31),
        .\FSM_onehot_state_reg[3]_2 (fsm_3_n_34),
        .\FSM_onehot_state_reg[3]_3 (fsm_3_n_35),
        .\FSM_onehot_state_reg[3]_4 (fsm_3_n_37),
        .Q(\logic/j_reg_1 ),
        .SR(fsm_3_n_42),
        .a_in_3(a_in_3),
        .a_in_4(a_in_4),
        .clk(clk),
        .count1_carry__1(fsm_2_n_14),
        .count1_carry_i_15__1(fsm_4_n_44),
        .count1_carry_i_15__1_0(fsm_4_n_43),
        .count1_carry_i_28__0(fsm_4_n_42),
        .count1_carry_i_4__5(fsm_2_n_13),
        .count1_carry_i_4__5_0(fsm_2_n_12),
        .\count[4]_i_5__3 (\logic/j_reg_2 ),
        .\count[4]_i_5__4 (fsm_2_n_34),
        .\count_reg[0] (fsm_2_n_32),
        .\count_reg[0]_0 (fsm_2_n_33),
        .\count_reg_reg[0] (ack_in_3),
        .\count_reg_reg[2] (u_i_0),
        .done_aux_reg(fsm_2_n_11),
        .done_aux_reg_0(fsm_2_n_15),
        .\j_reg[0] (fsm_3_n_32),
        .\j_reg[0]_0 (fsm_3_n_33),
        .\j_reg[0]_1 (fsm_3_n_36),
        .\j_reg[1] (fsm_3_n_28),
        .\j_reg[1]_0 (fsm_3_n_29),
        .\j_reg[2] (fsm_3_n_7),
        .\j_reg[2]_0 (fsm_3_n_38),
        .\j_reg[2]_1 (fsm_3_n_40),
        .\j_reg[2]_2 (fsm_3_n_41),
        .nRst(nRst),
        .next_out_3(next_out_3),
        .next_out_4(next_out_4));
  design_1_top_nqueens_0_0_fsm__parameterized4 fsm_4
       (.AR(ack_in_5),
        .\FSM_onehot_state_reg[0]_0 (fsm_3_n_42),
        .\FSM_onehot_state_reg[3]_0 (fsm_4_n_5),
        .\FSM_onehot_state_reg[3]_1 (fsm_4_n_31),
        .\FSM_onehot_state_reg[3]_10 (fsm_4_n_41),
        .\FSM_onehot_state_reg[3]_2 (fsm_4_n_32),
        .\FSM_onehot_state_reg[3]_3 (fsm_4_n_33),
        .\FSM_onehot_state_reg[3]_4 (fsm_4_n_34),
        .\FSM_onehot_state_reg[3]_5 (fsm_4_n_35),
        .\FSM_onehot_state_reg[3]_6 (fsm_4_n_36),
        .\FSM_onehot_state_reg[3]_7 (fsm_4_n_38),
        .\FSM_onehot_state_reg[3]_8 (fsm_4_n_39),
        .\FSM_onehot_state_reg[3]_9 (fsm_4_n_40),
        .Q(\logic/j_reg_2 ),
        .SR(fsm_4_n_45),
        .a_in_4(a_in_4),
        .a_in_5(a_in_5),
        .clk(clk),
        .count1_carry__1_i_3__2(fsm_3_n_29),
        .count1_carry_i_13__6(fsm_3_n_28),
        .count1_carry_i_19__0(fsm_3_n_37),
        .count1_carry_i_19__0_0(fsm_3_n_34),
        .count1_carry_i_19__0_1(fsm_3_n_35),
        .count1_carry_i_19__0_2(fsm_3_n_33),
        .count1_carry_i_5__7(fsm_3_n_30),
        .count1_carry_i_5__7_0(fsm_3_n_36),
        .count1_carry_i_9__2(fsm_3_n_7),
        .\count[4]_i_15__2 (fsm_5_n_45),
        .\count[4]_i_19__2 (fsm_5_n_46),
        .\count[4]_i_19__2_0 (fsm_5_n_2),
        .\count[4]_i_4__6 (fsm_3_n_32),
        .\count[4]_i_4__6_0 (fsm_3_n_31),
        .\count_reg_reg[0] (ack_in_4),
        .\count_reg_reg[1] (fsm_4_n_37),
        .\j_reg[0] (fsm_4_n_42),
        .\j_reg[1] (fsm_4_n_44),
        .\j_reg[2] (fsm_4_n_43),
        .nRst(nRst),
        .next_out_4(next_out_4),
        .next_out_5(next_out_5));
  design_1_top_nqueens_0_0_fsm__parameterized3 fsm_5
       (.AR(ack_in_6),
        .\FSM_onehot_state_reg[0]_0 (fsm_4_n_45),
        .\FSM_onehot_state_reg[3]_0 (fsm_5_n_3),
        .\FSM_onehot_state_reg[3]_1 (fsm_5_n_34),
        .\FSM_onehot_state_reg[3]_2 (fsm_5_n_35),
        .\FSM_onehot_state_reg[3]_3 (fsm_5_n_36),
        .\FSM_onehot_state_reg[3]_4 (fsm_5_n_37),
        .\FSM_onehot_state_reg[3]_5 (fsm_5_n_40),
        .\FSM_onehot_state_reg[3]_6 (fsm_5_n_41),
        .SR(fsm_5_n_47),
        .a_in_5(a_in_5),
        .a_in_6(a_in_6),
        .clk(clk),
        .count1_carry_i_13__3(fsm_4_n_41),
        .count1_carry_i_13__3_0(fsm_4_n_40),
        .\count[4]_i_10__1 (fsm_4_n_37),
        .\count[4]_i_10__1_0 (fsm_4_n_5),
        .\count[4]_i_12__2 (fsm_4_n_32),
        .\count[4]_i_12__2_0 (fsm_4_n_33),
        .\count[4]_i_19__2 (fsm_4_n_38),
        .\count[4]_i_21__2 (fsm_4_n_39),
        .\count[4]_i_3__1 (fsm_4_n_34),
        .\count[4]_i_3__1_0 (fsm_4_n_31),
        .\count[4]_i_6__0 (fsm_4_n_35),
        .\count[4]_i_7__2 (fsm_4_n_36),
        .\count[4]_i_8__2 (fsm_6_n_48),
        .\count[4]_i_8__2_0 (fsm_6_n_49),
        .\count_reg_reg[0] (fsm_5_n_44),
        .\count_reg_reg[0]_0 (ack_in_5),
        .\count_reg_reg[1] (fsm_5_n_39),
        .\count_reg_reg[2] (fsm_5_n_42),
        .\count_reg_reg[3] (fsm_5_n_38),
        .\count_reg_reg[4] (fsm_5_n_43),
        .\j_reg[1] (fsm_5_n_45),
        .\j_reg[2] (fsm_5_n_2),
        .\j_reg[2]_0 (fsm_5_n_46),
        .nRst(nRst),
        .next_out_5(next_out_5),
        .next_out_6(next_out_6));
  design_1_top_nqueens_0_0_fsm__parameterized2 fsm_6
       (.AR(ack_in_7),
        .\FSM_onehot_state_reg[0]_0 (fsm_5_n_47),
        .\FSM_onehot_state_reg[3]_0 (fsm_6_n_43),
        .\FSM_onehot_state_reg[3]_1 (fsm_6_n_44),
        .\FSM_onehot_state_reg[3]_2 (fsm_6_n_47),
        .Q(\logic/j_reg_3 ),
        .SR(fsm_6_n_50),
        .a_in_6(a_in_6),
        .a_in_7(a_in_7),
        .clk(clk),
        .count1_carry__1_i_3__6(fsm_7_n_6),
        .count1_carry_i_12__1(fsm_5_n_44),
        .count1_carry_i_12__1_0(fsm_5_n_39),
        .count1_carry_i_19(fsm_7_n_63),
        .count1_carry_i_25(fsm_7_n_7),
        .count1_carry_i_41(fsm_7_n_62),
        .\count[4]_i_21__1 (fsm_5_n_42),
        .\count[4]_i_22__0 (fsm_5_n_38),
        .\count[4]_i_3__0 (fsm_5_n_37),
        .\count[4]_i_3__0_0 (fsm_5_n_34),
        .\count[4]_i_3__0_1 (fsm_5_n_3),
        .\count[4]_i_3__0_2 (fsm_5_n_41),
        .\count[4]_i_6__4 (fsm_7_n_60),
        .\count[4]_i_6__4_0 (fsm_7_n_61),
        .\count[4]_i_7__4 (fsm_5_n_35),
        .\count[4]_i_7__4_0 (fsm_5_n_40),
        .\count[4]_i_8__2 (fsm_5_n_43),
        .\count[4]_i_8__2_0 (fsm_5_n_36),
        .\count_reg_reg[0] (ack_in_6),
        .\j_reg[0] (fsm_6_n_2),
        .\j_reg[0]_0 (fsm_6_n_39),
        .\j_reg[1] (fsm_6_n_38),
        .\j_reg[1]_0 (fsm_6_n_40),
        .\j_reg[2] (fsm_6_n_45),
        .\j_reg[3] (fsm_6_n_41),
        .\j_reg[3]_0 (fsm_6_n_42),
        .\j_reg[3]_1 (fsm_6_n_46),
        .\j_reg[3]_2 (fsm_6_n_48),
        .\j_reg[3]_3 (fsm_6_n_49),
        .nRst(nRst),
        .next_out_6(next_out_6),
        .next_out_7(next_out_7));
  design_1_top_nqueens_0_0_fsm__parameterized1 fsm_7
       (.AR(ack_in_8),
        .\FSM_onehot_state_reg[0]_0 (fsm_6_n_50),
        .\FSM_onehot_state_reg[3]_0 (fsm_7_n_58),
        .\FSM_onehot_state_reg[3]_1 (fsm_7_n_59),
        .Q(\logic/j_reg_4 ),
        .SR(fsm_7_n_64),
        .a_in_7(a_in_7),
        .a_in_8(a_in_8),
        .clk(clk),
        .count1_carry_i_12__0(fsm_6_n_40),
        .count1_carry_i_16__1(fsm_6_n_43),
        .count1_carry_i_16__1_0(fsm_6_n_46),
        .count1_carry_i_16__1_1(fsm_6_n_41),
        .count1_carry_i_3__6(fsm_6_n_39),
        .count1_carry_i_8__1(fsm_6_n_45),
        .\count[4]_i_14__0 (fsm_8_n_32),
        .\count[4]_i_17__0 (fsm_8_n_33),
        .\count[4]_i_17__0_0 (fsm_8_n_12),
        .\count[4]_i_19__0 (fsm_8_n_30),
        .\count[4]_i_4__5 (fsm_6_n_38),
        .\count[4]_i_5__0 (fsm_6_n_42),
        .\count[4]_i_5__0_0 (fsm_6_n_44),
        .\count[4]_i_5__0_1 (fsm_6_n_47),
        .\count[4]_i_6__3 (fsm_8_n_31),
        .\count[4]_i_7__0 (fsm_8_n_7),
        .\count[4]_i_7__0_0 (fsm_8_n_29),
        .\count_reg[0] (fsm_6_n_2),
        .\count_reg_reg[0] (fsm_7_n_8),
        .\count_reg_reg[0]_0 (fsm_7_n_13),
        .\count_reg_reg[0]_1 (fsm_7_n_15),
        .\count_reg_reg[0]_2 (ack_in_7),
        .\count_reg_reg[1] (fsm_7_n_14),
        .\count_reg_reg[2] (fsm_7_n_12),
        .done_aux_reg(u_i_5),
        .done_aux_reg_0(fsm_8_n_28),
        .done_aux_reg_1(fsm_8_n_13),
        .\j_reg[0] (fsm_7_n_6),
        .\j_reg[0]_0 (fsm_7_n_11),
        .\j_reg[0]_1 (fsm_7_n_16),
        .\j_reg[0]_2 (fsm_7_n_61),
        .\j_reg[1] (fsm_7_n_57),
        .\j_reg[1]_0 (fsm_7_n_62),
        .\j_reg[1]_1 (fsm_7_n_63),
        .\j_reg[2] (fsm_7_n_2),
        .\j_reg[2]_0 (\logic/j_reg_3 ),
        .\j_reg[3] (fsm_7_n_7),
        .\j_reg[3]_0 (fsm_7_n_9),
        .\j_reg[3]_1 (fsm_7_n_10),
        .\j_reg[3]_2 (fsm_7_n_60),
        .nRst(nRst),
        .next_out_7(next_out_7),
        .next_out_8(next_out_8));
  design_1_top_nqueens_0_0_fsm__parameterized0 fsm_8
       (.AR(ack_in_9),
        .\FSM_onehot_state_reg[0]_0 (fsm_7_n_64),
        .\FSM_onehot_state_reg[3]_0 (fsm_8_n_19),
        .\FSM_onehot_state_reg[3]_1 (fsm_8_n_21),
        .\FSM_onehot_state_reg[3]_2 (fsm_8_n_22),
        .\FSM_onehot_state_reg[3]_3 (fsm_8_n_23),
        .\FSM_onehot_state_reg[3]_4 (fsm_8_n_26),
        .\FSM_onehot_state_reg[3]_5 (fsm_8_n_27),
        .Q(a_in_9),
        .SR(fsm_8_n_34),
        .a_in_8(a_in_8),
        .clk(clk),
        .count1_carry(fsm_7_n_14),
        .count1_carry_i_13(fsm_9_n_4),
        .count1_carry_i_13_0(fsm_9_n_7),
        .count1_carry_i_13_1(fsm_9_n_6),
        .count1_carry_i_14(fsm_9_n_9),
        .count1_carry_i_4__0(fsm_7_n_8),
        .count1_carry_i_4__0_0(fsm_7_n_13),
        .\count[4]_i_11 (\logic/j_reg_6 ),
        .\count[4]_i_11__3 (fsm_7_n_59),
        .\count[4]_i_11__3_0 (fsm_7_n_16),
        .\count[4]_i_17 (fsm_9_n_5),
        .\count[4]_i_17_0 (fsm_9_n_8),
        .\count[4]_i_4 (fsm_9_n_1),
        .\count[4]_i_5__5 (fsm_7_n_57),
        .\count[4]_i_7__0 (fsm_7_n_58),
        .\count_reg[0] (fsm_7_n_2),
        .\count_reg[0]_0 (fsm_7_n_11),
        .\count_reg[0]_1 (fsm_7_n_15),
        .\count_reg[0]_2 (fsm_7_n_10),
        .\count_reg_reg[0] (fsm_8_n_28),
        .\count_reg_reg[0]_0 (ack_in_8),
        .\count_reg_reg[2] (u_i_5),
        .\count_reg_reg[2]_0 (fsm_8_n_25),
        .\count_reg_reg[3] (fsm_8_n_24),
        .done_aux_i_2__0(fsm_7_n_9),
        .done_aux_reg(fsm_7_n_12),
        .\j_reg[0] (fsm_8_n_7),
        .\j_reg[0]_0 (fsm_8_n_14),
        .\j_reg[0]_1 (fsm_8_n_15),
        .\j_reg[0]_2 (fsm_8_n_16),
        .\j_reg[1] (fsm_8_n_17),
        .\j_reg[1]_0 (fsm_8_n_18),
        .\j_reg[1]_1 (fsm_8_n_20),
        .\j_reg[2] (fsm_8_n_29),
        .\j_reg[2]_0 (fsm_8_n_31),
        .\j_reg[2]_1 (fsm_8_n_32),
        .\j_reg[2]_2 (fsm_8_n_33),
        .\j_reg[3] (\logic/j_reg_4 ),
        .\j_reg[3]_0 (fsm_8_n_12),
        .\j_reg[3]_1 (fsm_8_n_13),
        .\j_reg[3]_2 (fsm_8_n_30),
        .nRst(nRst),
        .next_out_8(next_out_8),
        .next_out_9(next_out_9));
  design_1_top_nqueens_0_0_fsm fsm_9
       (.AR(ack_in_9),
        .E(fsm_9_n_10),
        .Q(a_in_9),
        .SR(fsm_8_n_34),
        .clk(clk),
        .count1_carry_i_14(fsm_8_n_22),
        .count1_carry_i_14_0(fsm_8_n_23),
        .\count[4]_i_12 (fsm_8_n_24),
        .\count[4]_i_12_0 (fsm_8_n_21),
        .\count[4]_i_5 (fsm_8_n_26),
        .\count[4]_i_5_0 (fsm_8_n_18),
        .\count[4]_i_5_1 (fsm_8_n_27),
        .\count[4]_i_5_2 (fsm_8_n_20),
        .\count[4]_i_7 (fsm_8_n_25),
        .\count[4]_i_7_0 (fsm_8_n_19),
        .\count_reg[0] (fsm_8_n_14),
        .\count_reg[0]_0 (fsm_8_n_17),
        .\count_reg[0]_1 (fsm_8_n_16),
        .done_aux_i_4(fsm_8_n_15),
        .\j_reg[1] (\logic/j_reg_6 ),
        .\j_reg[1]_0 (fsm_9_n_4),
        .\j_reg[1]_1 (fsm_9_n_5),
        .\j_reg[1]_2 (fsm_9_n_6),
        .\j_reg[1]_3 (fsm_9_n_7),
        .\j_reg[1]_4 (fsm_9_n_8),
        .\j_reg[1]_5 (fsm_9_n_9),
        .\j_reg[2] (fsm_9_n_1),
        .next_out_9(next_out_9));
endmodule

(* ORIG_REF_NAME = "up_counter" *) 
module design_1_top_nqueens_0_0_up_counter
   (Q,
    S,
    \count_reg_reg[2]_0 ,
    \count_reg_reg[2]_1 ,
    \count_reg_reg[2]_2 ,
    \count_reg_reg[0]_0 ,
    \count_reg_reg[3]_0 ,
    D,
    \count_reg[0] ,
    count1_carry_i_4_0,
    count1_carry,
    done_aux_reg,
    \count_reg[0]_0 ,
    count1_carry__1_i_3,
    done_aux_i_4_0,
    \FSM_onehot_state_reg[4] ,
    valid,
    E,
    clk,
    AR);
  output [1:0]Q;
  output [0:0]S;
  output \count_reg_reg[2]_0 ;
  output \count_reg_reg[2]_1 ;
  output \count_reg_reg[2]_2 ;
  output \count_reg_reg[0]_0 ;
  output \count_reg_reg[3]_0 ;
  output [2:0]D;
  input \count_reg[0] ;
  input [2:0]count1_carry_i_4_0;
  input count1_carry;
  input done_aux_reg;
  input \count_reg[0]_0 ;
  input count1_carry__1_i_3;
  input done_aux_i_4_0;
  input [3:0]\FSM_onehot_state_reg[4] ;
  input valid;
  input [0:0]E;
  input clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state[4]_i_4_n_0 ;
  wire [3:0]\FSM_onehot_state_reg[4] ;
  wire [1:0]Q;
  wire [0:0]S;
  wire clk;
  wire count1_carry;
  wire count1_carry__1_i_3;
  wire count1_carry_i_10_n_0;
  wire count1_carry_i_12_n_0;
  wire [2:0]count1_carry_i_4_0;
  wire count1_carry_i_8_n_0;
  wire count1_carry_i_9__3_n_0;
  wire [4:0]count_next;
  wire \count_reg[0] ;
  wire \count_reg[0]_0 ;
  wire \count_reg_reg[0]_0 ;
  wire \count_reg_reg[2]_0 ;
  wire \count_reg_reg[2]_1 ;
  wire \count_reg_reg[2]_2 ;
  wire \count_reg_reg[3]_0 ;
  wire done_aux_i_4_0;
  wire done_aux_reg;
  wire [2:0]u_i;
  wire valid;

  LUT5 #(
    .INIT(32'hFFFF44F4)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(\FSM_onehot_state[4]_i_4_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [2]),
        .I3(valid),
        .I4(\FSM_onehot_state_reg[4] [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAA8AAA)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(\FSM_onehot_state_reg[4] [1]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(u_i[1]),
        .I4(u_i[2]),
        .I5(u_i[0]),
        .O(D[1]));
  LUT3 #(
    .INIT(8'hE0)) 
    \FSM_onehot_state[4]_i_3 
       (.I0(\FSM_onehot_state_reg[4] [3]),
        .I1(\FSM_onehot_state_reg[4] [1]),
        .I2(\FSM_onehot_state[4]_i_4_n_0 ),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00001000)) 
    \FSM_onehot_state[4]_i_4 
       (.I0(u_i[0]),
        .I1(u_i[2]),
        .I2(u_i[1]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\FSM_onehot_state[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    count1_carry_i_10
       (.I0(count1_carry_i_12_n_0),
        .I1(u_i[2]),
        .I2(\count_reg[0]_0 ),
        .I3(count1_carry_i_4_0[2]),
        .I4(count1_carry_i_4_0[1]),
        .O(count1_carry_i_10_n_0));
  LUT4 #(
    .INIT(16'h1117)) 
    count1_carry_i_12
       (.I0(u_i[1]),
        .I1(\count_reg[0] ),
        .I2(u_i[0]),
        .I3(done_aux_i_4_0),
        .O(count1_carry_i_12_n_0));
  LUT6 #(
    .INIT(64'h00A4010084002001)) 
    count1_carry_i_4
       (.I0(count1_carry_i_4_0[0]),
        .I1(\count_reg_reg[2]_0 ),
        .I2(count1_carry_i_8_n_0),
        .I3(count1_carry_i_9__3_n_0),
        .I4(count1_carry_i_10_n_0),
        .I5(count1_carry),
        .O(S));
  LUT5 #(
    .INIT(32'h96669996)) 
    count1_carry_i_6
       (.I0(count1_carry__1_i_3),
        .I1(Q[0]),
        .I2(\count_reg[0]_0 ),
        .I3(u_i[2]),
        .I4(count1_carry_i_12_n_0),
        .O(\count_reg_reg[3]_0 ));
  LUT6 #(
    .INIT(64'h6A565555AAAA6A56)) 
    count1_carry_i_7
       (.I0(done_aux_reg),
        .I1(\count_reg[0]_0 ),
        .I2(u_i[2]),
        .I3(count1_carry_i_12_n_0),
        .I4(count1_carry__1_i_3),
        .I5(Q[0]),
        .O(\count_reg_reg[2]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    count1_carry_i_8
       (.I0(u_i[0]),
        .I1(done_aux_i_4_0),
        .O(count1_carry_i_8_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    count1_carry_i_9__3
       (.I0(u_i[1]),
        .I1(\count_reg[0] ),
        .O(count1_carry_i_9__3_n_0));
  LUT6 #(
    .INIT(64'hFF9696FFFFFFFFFF)) 
    \count[4]_i_4 
       (.I0(\count_reg_reg[0]_0 ),
        .I1(u_i[2]),
        .I2(\count_reg[0]_0 ),
        .I3(u_i[1]),
        .I4(\count_reg[0] ),
        .I5(count1_carry_i_8_n_0),
        .O(\count_reg_reg[2]_2 ));
  LUT2 #(
    .INIT(4'hE)) 
    \count[4]_i_9 
       (.I0(u_i[0]),
        .I1(done_aux_i_4_0),
        .O(\count_reg_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT5 #(
    .INIT(32'h0000FFBF)) 
    \count_reg[0]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(u_i[1]),
        .I3(u_i[2]),
        .I4(u_i[0]),
        .O(count_next[0]));
  LUT5 #(
    .INIT(32'h0F0FF0B0)) 
    \count_reg[1]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(u_i[1]),
        .I3(u_i[2]),
        .I4(u_i[0]),
        .O(count_next[1]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \count_reg[2]_i_1 
       (.I0(u_i[2]),
        .I1(u_i[1]),
        .I2(u_i[0]),
        .O(count_next[2]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT5 #(
    .INIT(32'h3CCCCC8C)) 
    \count_reg[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(u_i[1]),
        .I3(u_i[2]),
        .I4(u_i[0]),
        .O(count_next[3]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count_reg[4]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(u_i[1]),
        .I3(u_i[0]),
        .I4(u_i[2]),
        .O(count_next[4]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[0] 
       (.C(clk),
        .CE(E),
        .CLR(AR),
        .D(count_next[0]),
        .Q(u_i[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[1] 
       (.C(clk),
        .CE(E),
        .CLR(AR),
        .D(count_next[1]),
        .Q(u_i[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[2] 
       (.C(clk),
        .CE(E),
        .CLR(AR),
        .D(count_next[2]),
        .Q(u_i[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[3] 
       (.C(clk),
        .CE(E),
        .CLR(AR),
        .D(count_next[3]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[4] 
       (.C(clk),
        .CE(E),
        .CLR(AR),
        .D(count_next[4]),
        .Q(Q[1]));
  LUT6 #(
    .INIT(64'hFBFFFFFBFFFBFBFF)) 
    done_aux_i_4
       (.I0(done_aux_reg),
        .I1(count1_carry_i_8_n_0),
        .I2(count1_carry_i_9__3_n_0),
        .I3(\count_reg[0]_0 ),
        .I4(u_i[2]),
        .I5(count1_carry_i_12_n_0),
        .O(\count_reg_reg[2]_1 ));
endmodule

(* ORIG_REF_NAME = "up_counter" *) 
module design_1_top_nqueens_0_0_up_counter_0
   (\count_reg_reg[3]_0 ,
    Q,
    \count_reg_reg[1]_0 ,
    \count_reg_reg[0]_0 ,
    D,
    \count_reg[0] ,
    \count_reg[0]_0 ,
    \count_reg[0]_1 ,
    \count_reg[0]_2 ,
    done_aux_i_2__0,
    \FSM_onehot_state_reg[4] ,
    valid,
    E,
    clk,
    \count_reg_reg[0]_1 );
  output \count_reg_reg[3]_0 ;
  output [4:0]Q;
  output \count_reg_reg[1]_0 ;
  output \count_reg_reg[0]_0 ;
  output [2:0]D;
  input \count_reg[0] ;
  input \count_reg[0]_0 ;
  input \count_reg[0]_1 ;
  input \count_reg[0]_2 ;
  input done_aux_i_2__0;
  input [3:0]\FSM_onehot_state_reg[4] ;
  input valid;
  input [0:0]E;
  input clk;
  input [0:0]\count_reg_reg[0]_1 ;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state[4]_i_4__0_n_0 ;
  wire [3:0]\FSM_onehot_state_reg[4] ;
  wire [4:0]Q;
  wire clk;
  wire [4:0]count_next;
  wire \count_reg[0] ;
  wire \count_reg[0]_0 ;
  wire \count_reg[0]_1 ;
  wire \count_reg[0]_2 ;
  wire \count_reg_reg[0]_0 ;
  wire [0:0]\count_reg_reg[0]_1 ;
  wire \count_reg_reg[1]_0 ;
  wire \count_reg_reg[3]_0 ;
  wire done_aux_i_2__0;
  wire valid;

  LUT5 #(
    .INIT(32'hFFFF44F4)) 
    \FSM_onehot_state[1]_i_1__0 
       (.I0(\FSM_onehot_state[4]_i_4__0_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [2]),
        .I3(valid),
        .I4(\FSM_onehot_state_reg[4] [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAA8AAA)) 
    \FSM_onehot_state[2]_i_1__0 
       (.I0(\FSM_onehot_state_reg[4] [1]),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(D[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_state[4]_i_3__0 
       (.I0(\FSM_onehot_state[4]_i_4__0_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [1]),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00001000)) 
    \FSM_onehot_state[4]_i_4__0 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\FSM_onehot_state[4]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    count1_carry_i_8__0
       (.I0(Q[0]),
        .I1(done_aux_i_2__0),
        .O(\count_reg_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0440011001100440)) 
    \count[4]_i_4__0 
       (.I0(\count_reg_reg[0]_0 ),
        .I1(\count_reg[0]_0 ),
        .I2(Q[1]),
        .I3(\count_reg[0]_1 ),
        .I4(Q[2]),
        .I5(\count_reg[0]_2 ),
        .O(\count_reg_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \count[4]_i_5__5 
       (.I0(Q[3]),
        .I1(\count_reg[0] ),
        .O(\count_reg_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT5 #(
    .INIT(32'h0000FFBF)) 
    \count_reg[0]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[0]));
  LUT5 #(
    .INIT(32'h0F0FF0B0)) 
    \count_reg[1]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[1]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \count_reg[2]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(count_next[2]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT5 #(
    .INIT(32'h3CCCCC8C)) 
    \count_reg[3]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[3]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count_reg[4]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(count_next[4]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[0] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[1] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[2] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[3] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[4] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "up_counter" *) 
module design_1_top_nqueens_0_0_up_counter_1
   (\count_reg_reg[0]_0 ,
    Q,
    S,
    \count_reg_reg[0]_1 ,
    \count_reg_reg[3]_0 ,
    \count_reg_reg[3]_1 ,
    \count_reg_reg[3]_2 ,
    \count_reg_reg[1]_0 ,
    D,
    count1_carry_i_4__1,
    \count_reg[0] ,
    count1_carry__1,
    count1_carry__1_0,
    CO,
    \count_reg[0]_0 ,
    count1_carry_i_4__1_0,
    count1_carry_i_3__6,
    \FSM_onehot_state_reg[4] ,
    valid,
    E,
    clk,
    \count_reg_reg[0]_2 );
  output \count_reg_reg[0]_0 ;
  output [4:0]Q;
  output [2:0]S;
  output \count_reg_reg[0]_1 ;
  output [3:0]\count_reg_reg[3]_0 ;
  output [1:0]\count_reg_reg[3]_1 ;
  output \count_reg_reg[3]_2 ;
  output \count_reg_reg[1]_0 ;
  output [2:0]D;
  input count1_carry_i_4__1;
  input \count_reg[0] ;
  input [0:0]count1_carry__1;
  input count1_carry__1_0;
  input [0:0]CO;
  input \count_reg[0]_0 ;
  input count1_carry_i_4__1_0;
  input count1_carry_i_3__6;
  input [3:0]\FSM_onehot_state_reg[4] ;
  input valid;
  input [0:0]E;
  input clk;
  input [0:0]\count_reg_reg[0]_2 ;

  wire [0:0]CO;
  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state[4]_i_4__1_n_0 ;
  wire [3:0]\FSM_onehot_state_reg[4] ;
  wire [4:0]Q;
  wire [2:0]S;
  wire clk;
  wire [0:0]count1_carry__1;
  wire count1_carry__1_0;
  wire count1_carry_i_3__6;
  wire count1_carry_i_4__1;
  wire count1_carry_i_4__1_0;
  wire [4:1]count_next;
  wire \count_reg[0] ;
  wire \count_reg[0]_0 ;
  wire \count_reg[0]_i_1__4_n_0 ;
  wire \count_reg_reg[0]_0 ;
  wire \count_reg_reg[0]_1 ;
  wire [0:0]\count_reg_reg[0]_2 ;
  wire \count_reg_reg[1]_0 ;
  wire [3:0]\count_reg_reg[3]_0 ;
  wire [1:0]\count_reg_reg[3]_1 ;
  wire \count_reg_reg[3]_2 ;
  wire valid;

  LUT5 #(
    .INIT(32'hFFFF44F4)) 
    \FSM_onehot_state[1]_i_1__1 
       (.I0(\FSM_onehot_state[4]_i_4__1_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [2]),
        .I3(valid),
        .I4(\FSM_onehot_state_reg[4] [0]),
        .O(D[0]));
  (* \PinAttr:I5:HOLD_DETOUR  = "177" *) 
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAA8AAA)) 
    \FSM_onehot_state[2]_i_1__1 
       (.I0(\FSM_onehot_state_reg[4] [1]),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(D[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_state[4]_i_3__1 
       (.I0(\FSM_onehot_state[4]_i_4__1_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [1]),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00001000)) 
    \FSM_onehot_state[4]_i_4__1 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\FSM_onehot_state[4]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'h0F0F0F69)) 
    count1_carry__0_i_1__6
       (.I0(Q[3]),
        .I1(\count_reg[0] ),
        .I2(count1_carry__1),
        .I3(\count_reg_reg[0]_1 ),
        .I4(count1_carry__1_0),
        .O(\count_reg_reg[3]_0 [3]));
  LUT5 #(
    .INIT(32'h0F0F0F69)) 
    count1_carry__0_i_2__6
       (.I0(Q[3]),
        .I1(\count_reg[0] ),
        .I2(count1_carry__1),
        .I3(\count_reg_reg[0]_1 ),
        .I4(count1_carry__1_0),
        .O(\count_reg_reg[3]_0 [2]));
  LUT5 #(
    .INIT(32'h0F0F0F69)) 
    count1_carry__0_i_3__6
       (.I0(Q[3]),
        .I1(\count_reg[0] ),
        .I2(count1_carry__1),
        .I3(\count_reg_reg[0]_1 ),
        .I4(count1_carry__1_0),
        .O(\count_reg_reg[3]_0 [1]));
  LUT5 #(
    .INIT(32'h0F0F0F69)) 
    count1_carry__0_i_4__6
       (.I0(Q[3]),
        .I1(\count_reg[0] ),
        .I2(count1_carry__1),
        .I3(\count_reg_reg[0]_1 ),
        .I4(count1_carry__1_0),
        .O(\count_reg_reg[3]_0 [0]));
  LUT5 #(
    .INIT(32'h0F0F0F09)) 
    count1_carry__1_i_1__6
       (.I0(Q[3]),
        .I1(\count_reg[0] ),
        .I2(count1_carry__1),
        .I3(\count_reg_reg[0]_1 ),
        .I4(count1_carry__1_0),
        .O(S[2]));
  LUT5 #(
    .INIT(32'h0F0F0F69)) 
    count1_carry__1_i_2__6
       (.I0(Q[3]),
        .I1(\count_reg[0] ),
        .I2(count1_carry__1),
        .I3(\count_reg_reg[0]_1 ),
        .I4(count1_carry__1_0),
        .O(S[1]));
  LUT5 #(
    .INIT(32'h0F0F0F69)) 
    count1_carry__1_i_3__6
       (.I0(Q[3]),
        .I1(\count_reg[0] ),
        .I2(count1_carry__1),
        .I3(\count_reg_reg[0]_1 ),
        .I4(count1_carry__1_0),
        .O(S[0]));
  LUT2 #(
    .INIT(4'h9)) 
    count1_carry_i_10__6
       (.I0(Q[0]),
        .I1(count1_carry_i_4__1),
        .O(\count_reg_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    count1_carry_i_12__0
       (.I0(Q[1]),
        .I1(count1_carry_i_4__1_0),
        .O(\count_reg_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h0F0F0F69)) 
    count1_carry_i_1__6
       (.I0(Q[3]),
        .I1(\count_reg[0] ),
        .I2(count1_carry__1),
        .I3(\count_reg_reg[0]_1 ),
        .I4(count1_carry__1_0),
        .O(\count_reg_reg[3]_1 [1]));
  LUT5 #(
    .INIT(32'h0F0F0F69)) 
    count1_carry_i_2__6
       (.I0(Q[3]),
        .I1(\count_reg[0] ),
        .I2(count1_carry__1),
        .I3(\count_reg_reg[0]_1 ),
        .I4(count1_carry__1_0),
        .O(\count_reg_reg[3]_1 [0]));
  LUT6 #(
    .INIT(64'hFFFF6FF66FF6FFFF)) 
    count1_carry_i_6__1
       (.I0(count1_carry_i_4__1),
        .I1(Q[0]),
        .I2(count1_carry_i_4__1_0),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(count1_carry_i_3__6),
        .O(\count_reg_reg[0]_1 ));
  LUT5 #(
    .INIT(32'hF0F0F090)) 
    \count[4]_i_4__5 
       (.I0(Q[3]),
        .I1(\count_reg[0] ),
        .I2(CO),
        .I3(\count_reg[0]_0 ),
        .I4(\count_reg_reg[0]_1 ),
        .O(\count_reg_reg[3]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT5 #(
    .INIT(32'h0000FFBF)) 
    \count_reg[0]_i_1__4 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(\count_reg[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT5 #(
    .INIT(32'h0F0FF0B0)) 
    \count_reg[1]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \count_reg[2]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(count_next[2]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT5 #(
    .INIT(32'h3CCCCC8C)) 
    \count_reg[3]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[3]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count_reg[4]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(count_next[4]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[0] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_2 ),
        .D(\count_reg[0]_i_1__4_n_0 ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[1] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_2 ),
        .D(count_next[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[2] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_2 ),
        .D(count_next[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[3] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_2 ),
        .D(count_next[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[4] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_2 ),
        .D(count_next[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "up_counter" *) 
module design_1_top_nqueens_0_0_up_counter_2
   (\count_reg_reg[0]_0 ,
    Q,
    \count_reg_reg[3]_0 ,
    D,
    count1_carry_i_4__2,
    \count_reg[0] ,
    \FSM_onehot_state_reg[4] ,
    valid,
    E,
    clk,
    \count_reg_reg[0]_1 );
  output \count_reg_reg[0]_0 ;
  output [4:0]Q;
  output \count_reg_reg[3]_0 ;
  output [2:0]D;
  input count1_carry_i_4__2;
  input \count_reg[0] ;
  input [3:0]\FSM_onehot_state_reg[4] ;
  input valid;
  input [0:0]E;
  input clk;
  input [0:0]\count_reg_reg[0]_1 ;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state[4]_i_4__2_n_0 ;
  wire [3:0]\FSM_onehot_state_reg[4] ;
  wire [4:0]Q;
  wire clk;
  wire count1_carry_i_4__2;
  wire [4:0]count_next;
  wire \count_reg[0] ;
  wire \count_reg_reg[0]_0 ;
  wire [0:0]\count_reg_reg[0]_1 ;
  wire \count_reg_reg[3]_0 ;
  wire valid;

  LUT5 #(
    .INIT(32'hFFFF44F4)) 
    \FSM_onehot_state[1]_i_1__2 
       (.I0(\FSM_onehot_state[4]_i_4__2_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [2]),
        .I3(valid),
        .I4(\FSM_onehot_state_reg[4] [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAA8AAA)) 
    \FSM_onehot_state[2]_i_1__2 
       (.I0(\FSM_onehot_state_reg[4] [1]),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(D[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_state[4]_i_3__2 
       (.I0(\FSM_onehot_state[4]_i_4__2_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [1]),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00001000)) 
    \FSM_onehot_state[4]_i_4__2 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\FSM_onehot_state[4]_i_4__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    count1_carry_i_8__2
       (.I0(Q[0]),
        .I1(count1_carry_i_4__2),
        .O(\count_reg_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count[4]_i_5__1 
       (.I0(Q[3]),
        .I1(\count_reg[0] ),
        .O(\count_reg_reg[3]_0 ));
  (* \PinAttr:I3:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT5 #(
    .INIT(32'h0000FFBF)) 
    \count_reg[0]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[0]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT5 #(
    .INIT(32'h0F0FF0B0)) 
    \count_reg[1]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \count_reg[2]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(count_next[2]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT5 #(
    .INIT(32'h3CCCCC8C)) 
    \count_reg[3]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[3]));
  (* \PinAttr:I4:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count_reg[4]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(count_next[4]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[0] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[1] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[2] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[3] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[4] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "up_counter" *) 
module design_1_top_nqueens_0_0_up_counter_3
   (\count_reg_reg[3]_0 ,
    Q,
    \count_reg_reg[1]_0 ,
    \count_reg_reg[0]_0 ,
    D,
    \count_reg[0] ,
    count1_carry_i_4__3,
    count1_carry_i_4__3_0,
    \FSM_onehot_state_reg[4] ,
    valid,
    E,
    clk,
    \count_reg_reg[0]_1 );
  output \count_reg_reg[3]_0 ;
  output [4:0]Q;
  output \count_reg_reg[1]_0 ;
  output \count_reg_reg[0]_0 ;
  output [2:0]D;
  input \count_reg[0] ;
  input count1_carry_i_4__3;
  input count1_carry_i_4__3_0;
  input [3:0]\FSM_onehot_state_reg[4] ;
  input valid;
  input [0:0]E;
  input clk;
  input [0:0]\count_reg_reg[0]_1 ;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state[4]_i_4__3_n_0 ;
  wire [3:0]\FSM_onehot_state_reg[4] ;
  wire [4:0]Q;
  wire clk;
  wire count1_carry_i_4__3;
  wire count1_carry_i_4__3_0;
  wire [4:0]count_next;
  wire \count_reg[0] ;
  wire \count_reg_reg[0]_0 ;
  wire [0:0]\count_reg_reg[0]_1 ;
  wire \count_reg_reg[1]_0 ;
  wire \count_reg_reg[3]_0 ;
  wire valid;

  LUT5 #(
    .INIT(32'hFFFF44F4)) 
    \FSM_onehot_state[1]_i_1__3 
       (.I0(\FSM_onehot_state[4]_i_4__3_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [2]),
        .I3(valid),
        .I4(\FSM_onehot_state_reg[4] [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAA8AAA)) 
    \FSM_onehot_state[2]_i_1__3 
       (.I0(\FSM_onehot_state_reg[4] [1]),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(D[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_state[4]_i_3__3 
       (.I0(\FSM_onehot_state[4]_i_4__3_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [1]),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00001000)) 
    \FSM_onehot_state[4]_i_4__3 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\FSM_onehot_state[4]_i_4__3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    count1_carry_i_10__2
       (.I0(Q[1]),
        .I1(count1_carry_i_4__3),
        .O(\count_reg_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    count1_carry_i_11__3
       (.I0(Q[0]),
        .I1(count1_carry_i_4__3_0),
        .O(\count_reg_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count[4]_i_5__2 
       (.I0(Q[3]),
        .I1(\count_reg[0] ),
        .O(\count_reg_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT5 #(
    .INIT(32'h0000FFBF)) 
    \count_reg[0]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[0]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT5 #(
    .INIT(32'h0F0FF0B0)) 
    \count_reg[1]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \count_reg[2]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(count_next[2]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT5 #(
    .INIT(32'h3CCCCC8C)) 
    \count_reg[3]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[3]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count_reg[4]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[3]),
        .O(count_next[4]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[0] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[1] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[2] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[3] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[4] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "up_counter" *) 
module design_1_top_nqueens_0_0_up_counter_4
   (\count_reg_reg[1]_0 ,
    Q,
    S,
    \count_reg_reg[1]_1 ,
    \count_reg_reg[1]_2 ,
    \count_reg_reg[3]_0 ,
    \count_reg_reg[3]_1 ,
    \count_reg_reg[0]_0 ,
    D,
    count1_carry_i_4__4,
    count1_carry__1,
    count1_carry__1_0,
    count1_carry__1_1,
    count1_carry_i_9__2,
    count1_carry_i_9__2_0,
    count1_carry_i_4__4_0,
    \FSM_onehot_state_reg[4] ,
    valid,
    E,
    clk,
    \count_reg_reg[0]_1 );
  output \count_reg_reg[1]_0 ;
  output [4:0]Q;
  output [2:0]S;
  output \count_reg_reg[1]_1 ;
  output \count_reg_reg[1]_2 ;
  output [2:0]\count_reg_reg[3]_0 ;
  output [3:0]\count_reg_reg[3]_1 ;
  output \count_reg_reg[0]_0 ;
  output [2:0]D;
  input count1_carry_i_4__4;
  input count1_carry__1;
  input count1_carry__1_0;
  input count1_carry__1_1;
  input count1_carry_i_9__2;
  input count1_carry_i_9__2_0;
  input count1_carry_i_4__4_0;
  input [3:0]\FSM_onehot_state_reg[4] ;
  input valid;
  input [0:0]E;
  input clk;
  input [0:0]\count_reg_reg[0]_1 ;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state[4]_i_4__4_n_0 ;
  wire [3:0]\FSM_onehot_state_reg[4] ;
  wire [4:0]Q;
  wire [2:0]S;
  wire clk;
  wire count1_carry__1;
  wire count1_carry__1_0;
  wire count1_carry__1_1;
  wire count1_carry_i_4__4;
  wire count1_carry_i_4__4_0;
  wire count1_carry_i_9__2;
  wire count1_carry_i_9__2_0;
  wire [4:0]count_next;
  wire \count_reg_reg[0]_0 ;
  wire [0:0]\count_reg_reg[0]_1 ;
  wire \count_reg_reg[1]_0 ;
  wire \count_reg_reg[1]_1 ;
  wire \count_reg_reg[1]_2 ;
  wire [2:0]\count_reg_reg[3]_0 ;
  wire [3:0]\count_reg_reg[3]_1 ;
  wire valid;

  LUT5 #(
    .INIT(32'hFFFF44F4)) 
    \FSM_onehot_state[1]_i_1__4 
       (.I0(\FSM_onehot_state[4]_i_4__4_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [2]),
        .I3(valid),
        .I4(\FSM_onehot_state_reg[4] [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAA8AAA)) 
    \FSM_onehot_state[2]_i_1__4 
       (.I0(\FSM_onehot_state_reg[4] [1]),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(D[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_state[4]_i_3__4 
       (.I0(\FSM_onehot_state[4]_i_4__4_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [1]),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00001000)) 
    \FSM_onehot_state[4]_i_4__4 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\FSM_onehot_state[4]_i_4__4_n_0 ));
  LUT6 #(
    .INIT(64'h00FF00FF699600FF)) 
    count1_carry__0_i_1__2
       (.I0(Q[3]),
        .I1(count1_carry__1),
        .I2(\count_reg_reg[1]_1 ),
        .I3(count1_carry__1_0),
        .I4(\count_reg_reg[1]_2 ),
        .I5(count1_carry__1_1),
        .O(\count_reg_reg[3]_1 [3]));
  LUT6 #(
    .INIT(64'h00FF00FF699600FF)) 
    count1_carry__0_i_2__2
       (.I0(Q[3]),
        .I1(count1_carry__1),
        .I2(\count_reg_reg[1]_1 ),
        .I3(count1_carry__1_0),
        .I4(\count_reg_reg[1]_2 ),
        .I5(count1_carry__1_1),
        .O(\count_reg_reg[3]_1 [2]));
  LUT6 #(
    .INIT(64'h00FF00FF699600FF)) 
    count1_carry__0_i_3__2
       (.I0(Q[3]),
        .I1(count1_carry__1),
        .I2(\count_reg_reg[1]_1 ),
        .I3(count1_carry__1_0),
        .I4(\count_reg_reg[1]_2 ),
        .I5(count1_carry__1_1),
        .O(\count_reg_reg[3]_1 [1]));
  LUT6 #(
    .INIT(64'h00FF00FF699600FF)) 
    count1_carry__0_i_4__2
       (.I0(Q[3]),
        .I1(count1_carry__1),
        .I2(\count_reg_reg[1]_1 ),
        .I3(count1_carry__1_0),
        .I4(\count_reg_reg[1]_2 ),
        .I5(count1_carry__1_1),
        .O(\count_reg_reg[3]_1 [0]));
  LUT6 #(
    .INIT(64'h00FF00FF009600FF)) 
    count1_carry__1_i_1__2
       (.I0(Q[3]),
        .I1(count1_carry__1),
        .I2(\count_reg_reg[1]_1 ),
        .I3(count1_carry__1_0),
        .I4(\count_reg_reg[1]_2 ),
        .I5(count1_carry__1_1),
        .O(S[2]));
  LUT6 #(
    .INIT(64'h00FF00FF699600FF)) 
    count1_carry__1_i_2__2
       (.I0(Q[3]),
        .I1(count1_carry__1),
        .I2(\count_reg_reg[1]_1 ),
        .I3(count1_carry__1_0),
        .I4(\count_reg_reg[1]_2 ),
        .I5(count1_carry__1_1),
        .O(S[1]));
  LUT6 #(
    .INIT(64'h00FF00FF699600FF)) 
    count1_carry__1_i_3__2
       (.I0(Q[3]),
        .I1(count1_carry__1),
        .I2(\count_reg_reg[1]_1 ),
        .I3(count1_carry__1_0),
        .I4(\count_reg_reg[1]_2 ),
        .I5(count1_carry__1_1),
        .O(S[0]));
  LUT2 #(
    .INIT(4'h6)) 
    count1_carry_i_11__4
       (.I0(Q[0]),
        .I1(count1_carry_i_4__4_0),
        .O(\count_reg_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    count1_carry_i_13__6
       (.I0(Q[1]),
        .I1(count1_carry_i_4__4),
        .O(\count_reg_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h00FF00FF699600FF)) 
    count1_carry_i_1__2
       (.I0(Q[3]),
        .I1(count1_carry__1),
        .I2(\count_reg_reg[1]_1 ),
        .I3(count1_carry__1_0),
        .I4(\count_reg_reg[1]_2 ),
        .I5(count1_carry__1_1),
        .O(\count_reg_reg[3]_0 [2]));
  LUT6 #(
    .INIT(64'h00FF00FF699600FF)) 
    count1_carry_i_2__2
       (.I0(Q[3]),
        .I1(count1_carry__1),
        .I2(\count_reg_reg[1]_1 ),
        .I3(count1_carry__1_0),
        .I4(\count_reg_reg[1]_2 ),
        .I5(count1_carry__1_1),
        .O(\count_reg_reg[3]_0 [1]));
  LUT6 #(
    .INIT(64'h0069006900000096)) 
    count1_carry_i_3__2
       (.I0(Q[3]),
        .I1(count1_carry__1),
        .I2(\count_reg_reg[1]_1 ),
        .I3(count1_carry__1_0),
        .I4(\count_reg_reg[1]_2 ),
        .I5(count1_carry__1_1),
        .O(\count_reg_reg[3]_0 [0]));
  LUT5 #(
    .INIT(32'hFFE8E800)) 
    count1_carry_i_6__3
       (.I0(Q[1]),
        .I1(count1_carry_i_4__4),
        .I2(count1_carry_i_9__2),
        .I3(Q[2]),
        .I4(count1_carry_i_9__2_0),
        .O(\count_reg_reg[1]_1 ));
  LUT6 #(
    .INIT(64'h0000066006600000)) 
    count1_carry_i_8__4
       (.I0(Q[1]),
        .I1(count1_carry_i_4__4),
        .I2(Q[0]),
        .I3(count1_carry_i_4__4_0),
        .I4(Q[2]),
        .I5(count1_carry_i_9__2_0),
        .O(\count_reg_reg[1]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'h0000FFBF)) 
    \count_reg[0]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[0]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'h0F0FF0B0)) 
    \count_reg[1]_i_1__4 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \count_reg[2]_i_1__4 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(count_next[2]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h3CCCCC8C)) 
    \count_reg[3]_i_1__4 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[3]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count_reg[4]_i_1__4 
       (.I0(Q[4]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[3]),
        .O(count_next[4]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[0] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[1] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[2] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[3] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[4] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "up_counter" *) 
module design_1_top_nqueens_0_0_up_counter_5
   (\count_reg_reg[1]_0 ,
    Q,
    \count_reg_reg[0]_0 ,
    \count_reg_reg[3]_0 ,
    S,
    \count_reg_reg[2]_0 ,
    \j_reg[2] ,
    \j_reg[2]_0 ,
    \count_reg_reg[2]_1 ,
    \count_reg_reg[0]_1 ,
    D,
    count1_carry_i_4__5,
    count1_carry_i_4__5_0,
    \count_reg[0] ,
    count1_carry__1,
    count1_carry__1_0,
    count1_carry__1_1,
    done_aux_reg,
    done_aux_reg_0,
    done_aux_reg_1,
    \FSM_onehot_state_reg[4] ,
    valid,
    E,
    clk,
    \count_reg_reg[0]_2 );
  output \count_reg_reg[1]_0 ;
  output [4:0]Q;
  output \count_reg_reg[0]_0 ;
  output \count_reg_reg[3]_0 ;
  output [2:0]S;
  output \count_reg_reg[2]_0 ;
  output [3:0]\j_reg[2] ;
  output [2:0]\j_reg[2]_0 ;
  output \count_reg_reg[2]_1 ;
  output \count_reg_reg[0]_1 ;
  output [2:0]D;
  input count1_carry_i_4__5;
  input count1_carry_i_4__5_0;
  input \count_reg[0] ;
  input count1_carry__1;
  input [1:0]count1_carry__1_0;
  input count1_carry__1_1;
  input done_aux_reg;
  input done_aux_reg_0;
  input done_aux_reg_1;
  input [3:0]\FSM_onehot_state_reg[4] ;
  input valid;
  input [0:0]E;
  input clk;
  input [0:0]\count_reg_reg[0]_2 ;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state[4]_i_4__5_n_0 ;
  wire [3:0]\FSM_onehot_state_reg[4] ;
  wire [4:0]Q;
  wire [2:0]S;
  wire clk;
  wire count1_carry__1;
  wire [1:0]count1_carry__1_0;
  wire count1_carry__1_1;
  wire count1_carry_i_4__5;
  wire count1_carry_i_4__5_0;
  wire [4:1]count_next;
  wire \count_reg[0] ;
  wire \count_reg[0]_i_1__5_n_0 ;
  wire \count_reg_reg[0]_0 ;
  wire \count_reg_reg[0]_1 ;
  wire [0:0]\count_reg_reg[0]_2 ;
  wire \count_reg_reg[1]_0 ;
  wire \count_reg_reg[2]_0 ;
  wire \count_reg_reg[2]_1 ;
  wire \count_reg_reg[3]_0 ;
  wire done_aux_reg;
  wire done_aux_reg_0;
  wire done_aux_reg_1;
  wire [3:0]\j_reg[2] ;
  wire [2:0]\j_reg[2]_0 ;
  wire valid;

  LUT5 #(
    .INIT(32'hFFFF44F4)) 
    \FSM_onehot_state[1]_i_1__5 
       (.I0(\FSM_onehot_state[4]_i_4__5_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [2]),
        .I3(valid),
        .I4(\FSM_onehot_state_reg[4] [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAA8AAA)) 
    \FSM_onehot_state[2]_i_1__5 
       (.I0(\FSM_onehot_state_reg[4] [1]),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(D[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_state[4]_i_3__5 
       (.I0(\FSM_onehot_state[4]_i_4__5_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [1]),
        .O(D[2]));
  (* \PinAttr:I1:HOLD_DETOUR  = "192" *) 
  LUT5 #(
    .INIT(32'h00001000)) 
    \FSM_onehot_state[4]_i_4__5 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\FSM_onehot_state[4]_i_4__5_n_0 ));
  LUT5 #(
    .INIT(32'h0F0F0F96)) 
    count1_carry__0_i_1__3
       (.I0(\count_reg_reg[3]_0 ),
        .I1(count1_carry__1),
        .I2(count1_carry__1_0[1]),
        .I3(\count_reg_reg[2]_0 ),
        .I4(count1_carry__1_1),
        .O(\j_reg[2] [3]));
  LUT5 #(
    .INIT(32'h0F0F0F96)) 
    count1_carry__0_i_2__3
       (.I0(\count_reg_reg[3]_0 ),
        .I1(count1_carry__1),
        .I2(count1_carry__1_0[1]),
        .I3(\count_reg_reg[2]_0 ),
        .I4(count1_carry__1_1),
        .O(\j_reg[2] [2]));
  LUT5 #(
    .INIT(32'h0F0F0F96)) 
    count1_carry__0_i_3__3
       (.I0(\count_reg_reg[3]_0 ),
        .I1(count1_carry__1),
        .I2(count1_carry__1_0[1]),
        .I3(\count_reg_reg[2]_0 ),
        .I4(count1_carry__1_1),
        .O(\j_reg[2] [1]));
  LUT5 #(
    .INIT(32'h0F0F0F96)) 
    count1_carry__0_i_4__3
       (.I0(\count_reg_reg[3]_0 ),
        .I1(count1_carry__1),
        .I2(count1_carry__1_0[1]),
        .I3(\count_reg_reg[2]_0 ),
        .I4(count1_carry__1_1),
        .O(\j_reg[2] [0]));
  LUT5 #(
    .INIT(32'h0F0F0F06)) 
    count1_carry__1_i_1__3
       (.I0(\count_reg_reg[3]_0 ),
        .I1(count1_carry__1),
        .I2(count1_carry__1_0[1]),
        .I3(\count_reg_reg[2]_0 ),
        .I4(count1_carry__1_1),
        .O(S[2]));
  LUT5 #(
    .INIT(32'h0F0F0F96)) 
    count1_carry__1_i_2__3
       (.I0(\count_reg_reg[3]_0 ),
        .I1(count1_carry__1),
        .I2(count1_carry__1_0[1]),
        .I3(\count_reg_reg[2]_0 ),
        .I4(count1_carry__1_1),
        .O(S[1]));
  LUT5 #(
    .INIT(32'h0F0F0F96)) 
    count1_carry__1_i_3__3
       (.I0(\count_reg_reg[3]_0 ),
        .I1(count1_carry__1),
        .I2(count1_carry__1_0[1]),
        .I3(\count_reg_reg[2]_0 ),
        .I4(count1_carry__1_1),
        .O(S[0]));
  LUT2 #(
    .INIT(4'h9)) 
    count1_carry_i_10__7
       (.I0(Q[1]),
        .I1(count1_carry_i_4__5),
        .O(\count_reg_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h0F0F0F96)) 
    count1_carry_i_1__3
       (.I0(\count_reg_reg[3]_0 ),
        .I1(count1_carry__1),
        .I2(count1_carry__1_0[1]),
        .I3(\count_reg_reg[2]_0 ),
        .I4(count1_carry__1_1),
        .O(\j_reg[2]_0 [2]));
  LUT5 #(
    .INIT(32'h0F0F0F96)) 
    count1_carry_i_2__3
       (.I0(\count_reg_reg[3]_0 ),
        .I1(count1_carry__1),
        .I2(count1_carry__1_0[1]),
        .I3(\count_reg_reg[2]_0 ),
        .I4(count1_carry__1_1),
        .O(\j_reg[2]_0 [1]));
  LUT5 #(
    .INIT(32'h00009960)) 
    count1_carry_i_3__3
       (.I0(\count_reg_reg[3]_0 ),
        .I1(count1_carry__1),
        .I2(\count_reg_reg[2]_0 ),
        .I3(count1_carry__1_1),
        .I4(count1_carry__1_0[1]),
        .O(\j_reg[2]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    count1_carry_i_8__6
       (.I0(Q[0]),
        .I1(count1_carry_i_4__5_0),
        .O(\count_reg_reg[0]_0 ));
  LUT3 #(
    .INIT(8'hD2)) 
    count1_carry_i_9__5
       (.I0(count1_carry_i_4__5_0),
        .I1(Q[0]),
        .I2(count1_carry__1_0[0]),
        .O(\count_reg_reg[0]_1 ));
  LUT5 #(
    .INIT(32'hF77F7FF7)) 
    \count[4]_i_4__4 
       (.I0(\count_reg_reg[0]_0 ),
        .I1(\count_reg_reg[1]_0 ),
        .I2(done_aux_reg),
        .I3(Q[2]),
        .I4(done_aux_reg_0),
        .O(\count_reg_reg[2]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \count[4]_i_6__5 
       (.I0(Q[3]),
        .I1(\count_reg[0] ),
        .O(\count_reg_reg[3]_0 ));
  (* \PinAttr:I3:HOLD_DETOUR  = "192" *) 
  LUT5 #(
    .INIT(32'h0000FFBF)) 
    \count_reg[0]_i_1__5 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(\count_reg[0]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'h0F0FF0B0)) 
    \count_reg[1]_i_1__5 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[1]));
  (* \PinAttr:I1:HOLD_DETOUR  = "194" *) 
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \count_reg[2]_i_1__5 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(count_next[2]));
  (* \PinAttr:I2:HOLD_DETOUR  = "194" *) 
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT5 #(
    .INIT(32'h3CCCCC8C)) 
    \count_reg[3]_i_1__5 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[3]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count_reg[4]_i_1__5 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(count_next[4]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[0] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_2 ),
        .D(\count_reg[0]_i_1__5_n_0 ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[1] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_2 ),
        .D(count_next[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[2] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_2 ),
        .D(count_next[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[3] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_2 ),
        .D(count_next[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[4] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_2 ),
        .D(count_next[4]),
        .Q(Q[4]));
  LUT6 #(
    .INIT(64'h0008080008000008)) 
    done_aux_i_2__2
       (.I0(\count_reg_reg[0]_0 ),
        .I1(\count_reg_reg[1]_0 ),
        .I2(done_aux_reg_1),
        .I3(done_aux_reg_0),
        .I4(Q[2]),
        .I5(done_aux_reg),
        .O(\count_reg_reg[2]_1 ));
endmodule

(* ORIG_REF_NAME = "up_counter" *) 
module design_1_top_nqueens_0_0_up_counter_6
   (\count_reg_reg[0]_0 ,
    Q,
    \count_reg_reg[2]_0 ,
    D,
    count1_carry_i_5__5,
    \count[4]_i_3__2 ,
    \FSM_onehot_state_reg[4] ,
    valid,
    E,
    clk,
    \count_reg_reg[0]_1 );
  output \count_reg_reg[0]_0 ;
  output [4:0]Q;
  output \count_reg_reg[2]_0 ;
  output [2:0]D;
  input count1_carry_i_5__5;
  input \count[4]_i_3__2 ;
  input [3:0]\FSM_onehot_state_reg[4] ;
  input valid;
  input [0:0]E;
  input clk;
  input [0:0]\count_reg_reg[0]_1 ;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state[4]_i_4__6_n_0 ;
  wire [3:0]\FSM_onehot_state_reg[4] ;
  wire [4:0]Q;
  wire clk;
  wire count1_carry_i_5__5;
  wire \count[4]_i_3__2 ;
  wire [4:1]count_next;
  wire \count_reg[0]_i_1__6_n_0 ;
  wire \count_reg_reg[0]_0 ;
  wire [0:0]\count_reg_reg[0]_1 ;
  wire \count_reg_reg[2]_0 ;
  wire valid;

  LUT5 #(
    .INIT(32'hFFFF44F4)) 
    \FSM_onehot_state[1]_i_1__6 
       (.I0(\FSM_onehot_state[4]_i_4__6_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [2]),
        .I3(valid),
        .I4(\FSM_onehot_state_reg[4] [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAA8AAA)) 
    \FSM_onehot_state[2]_i_1__6 
       (.I0(\FSM_onehot_state_reg[4] [1]),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(D[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_state[4]_i_3__6 
       (.I0(\FSM_onehot_state[4]_i_4__6_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [1]),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00001000)) 
    \FSM_onehot_state[4]_i_4__6 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\FSM_onehot_state[4]_i_4__6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    count1_carry_i_11__6
       (.I0(Q[0]),
        .I1(count1_carry_i_5__5),
        .O(\count_reg_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count[4]_i_4__3 
       (.I0(Q[2]),
        .I1(\count[4]_i_3__2 ),
        .O(\count_reg_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h0000FFBF)) 
    \count_reg[0]_i_1__6 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(\count_reg[0]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h0F0FF0B0)) 
    \count_reg[1]_i_1__6 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \count_reg[2]_i_1__6 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(count_next[2]));
  (* \PinAttr:I4:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h3CCCCC8C)) 
    \count_reg[3]_i_1__6 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[3]));
  (* \PinAttr:I3:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count_reg[4]_i_1__6 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(count_next[4]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[0] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(\count_reg[0]_i_1__6_n_0 ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[1] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[2] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[3] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[4] 
       (.C(clk),
        .CE(E),
        .CLR(\count_reg_reg[0]_1 ),
        .D(count_next[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "up_counter" *) 
module design_1_top_nqueens_0_0_up_counter_7
   (Q,
    S,
    \count_reg_reg[4]_0 ,
    \count_reg_reg[4]_1 ,
    \count_reg_reg[3]_0 ,
    D,
    done_aux_reg,
    CO,
    j_reg,
    \FSM_onehot_state_reg[4] ,
    valid,
    E,
    clk,
    ack_in_1);
  output [4:0]Q;
  output [2:0]S;
  output [3:0]\count_reg_reg[4]_0 ;
  output [3:0]\count_reg_reg[4]_1 ;
  output \count_reg_reg[3]_0 ;
  output [2:0]D;
  input [4:0]done_aux_reg;
  input [0:0]CO;
  input [0:0]j_reg;
  input [3:0]\FSM_onehot_state_reg[4] ;
  input valid;
  input [0:0]E;
  input clk;
  input ack_in_1;

  wire [0:0]CO;
  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state[4]_i_4__7_n_0 ;
  wire [3:0]\FSM_onehot_state_reg[4] ;
  wire [4:0]Q;
  wire [2:0]S;
  wire ack_in_1;
  wire clk;
  wire count1_carry_i_10__5_n_0;
  wire count1_carry_i_11__7_n_0;
  wire count1_carry_i_5__4_n_0;
  wire count1_carry_i_6__5_n_0;
  wire count1_carry_i_7__4_n_0;
  wire count1_carry_i_8__5_n_0;
  wire count1_carry_i_9__7_n_0;
  wire [4:1]count_next;
  wire \count_reg[0]_i_1__7_n_0 ;
  wire \count_reg_reg[3]_0 ;
  wire [3:0]\count_reg_reg[4]_0 ;
  wire [3:0]\count_reg_reg[4]_1 ;
  wire [4:0]done_aux_reg;
  wire [0:0]j_reg;
  wire valid;

  LUT5 #(
    .INIT(32'hFFFF44F4)) 
    \FSM_onehot_state[1]_i_1__7 
       (.I0(\FSM_onehot_state[4]_i_4__7_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [2]),
        .I3(valid),
        .I4(\FSM_onehot_state_reg[4] [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAA8AAA)) 
    \FSM_onehot_state[2]_i_1__7 
       (.I0(\FSM_onehot_state_reg[4] [1]),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(D[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_state[4]_i_3__7 
       (.I0(\FSM_onehot_state[4]_i_4__7_n_0 ),
        .I1(\FSM_onehot_state_reg[4] [3]),
        .I2(\FSM_onehot_state_reg[4] [1]),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00001000)) 
    \FSM_onehot_state[4]_i_4__7 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\FSM_onehot_state[4]_i_4__7_n_0 ));
  LUT6 #(
    .INIT(64'hFF9F6FFF9FFFFF9F)) 
    count1_carry__0_i_1__5
       (.I0(Q[4]),
        .I1(done_aux_reg[4]),
        .I2(count1_carry_i_5__4_n_0),
        .I3(done_aux_reg[3]),
        .I4(Q[3]),
        .I5(count1_carry_i_6__5_n_0),
        .O(\count_reg_reg[4]_0 [3]));
  LUT6 #(
    .INIT(64'hFF9F6FFF9FFFFF9F)) 
    count1_carry__0_i_2__5
       (.I0(Q[4]),
        .I1(done_aux_reg[4]),
        .I2(count1_carry_i_5__4_n_0),
        .I3(done_aux_reg[3]),
        .I4(Q[3]),
        .I5(count1_carry_i_6__5_n_0),
        .O(\count_reg_reg[4]_0 [2]));
  LUT6 #(
    .INIT(64'hFF9F6FFF9FFFFF9F)) 
    count1_carry__0_i_3__5
       (.I0(Q[4]),
        .I1(done_aux_reg[4]),
        .I2(count1_carry_i_5__4_n_0),
        .I3(done_aux_reg[3]),
        .I4(Q[3]),
        .I5(count1_carry_i_6__5_n_0),
        .O(\count_reg_reg[4]_0 [1]));
  LUT6 #(
    .INIT(64'hFF9F6FFF9FFFFF9F)) 
    count1_carry__0_i_4__5
       (.I0(Q[4]),
        .I1(done_aux_reg[4]),
        .I2(count1_carry_i_5__4_n_0),
        .I3(done_aux_reg[3]),
        .I4(Q[3]),
        .I5(count1_carry_i_6__5_n_0),
        .O(\count_reg_reg[4]_0 [0]));
  LUT6 #(
    .INIT(64'hFF9F6FFF9FFFFF9F)) 
    count1_carry__1_i_1__5
       (.I0(Q[4]),
        .I1(done_aux_reg[4]),
        .I2(count1_carry_i_5__4_n_0),
        .I3(done_aux_reg[3]),
        .I4(Q[3]),
        .I5(count1_carry_i_6__5_n_0),
        .O(S[2]));
  LUT6 #(
    .INIT(64'hFF9F6FFF9FFFFF9F)) 
    count1_carry__1_i_2__5
       (.I0(Q[4]),
        .I1(done_aux_reg[4]),
        .I2(count1_carry_i_5__4_n_0),
        .I3(done_aux_reg[3]),
        .I4(Q[3]),
        .I5(count1_carry_i_6__5_n_0),
        .O(S[1]));
  LUT6 #(
    .INIT(64'hFF9F6FFF9FFFFF9F)) 
    count1_carry__1_i_3__5
       (.I0(Q[4]),
        .I1(done_aux_reg[4]),
        .I2(count1_carry_i_5__4_n_0),
        .I3(done_aux_reg[3]),
        .I4(Q[3]),
        .I5(count1_carry_i_6__5_n_0),
        .O(S[0]));
  LUT4 #(
    .INIT(16'h4BB4)) 
    count1_carry_i_10__5
       (.I0(Q[0]),
        .I1(done_aux_reg[0]),
        .I2(Q[1]),
        .I3(done_aux_reg[1]),
        .O(count1_carry_i_10__5_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    count1_carry_i_11__7
       (.I0(Q[0]),
        .I1(done_aux_reg[0]),
        .O(count1_carry_i_11__7_n_0));
  LUT6 #(
    .INIT(64'hFF9F6FFF9FFFFF9F)) 
    count1_carry_i_1__5
       (.I0(Q[4]),
        .I1(done_aux_reg[4]),
        .I2(count1_carry_i_5__4_n_0),
        .I3(done_aux_reg[3]),
        .I4(Q[3]),
        .I5(count1_carry_i_6__5_n_0),
        .O(\count_reg_reg[4]_1 [3]));
  LUT6 #(
    .INIT(64'hFF9F6FFF9FFFFF9F)) 
    count1_carry_i_2__5
       (.I0(Q[4]),
        .I1(done_aux_reg[4]),
        .I2(count1_carry_i_5__4_n_0),
        .I3(done_aux_reg[3]),
        .I4(Q[3]),
        .I5(count1_carry_i_6__5_n_0),
        .O(\count_reg_reg[4]_1 [2]));
  LUT5 #(
    .INIT(32'h00966969)) 
    count1_carry_i_3__5
       (.I0(done_aux_reg[3]),
        .I1(Q[3]),
        .I2(count1_carry_i_6__5_n_0),
        .I3(count1_carry_i_5__4_n_0),
        .I4(count1_carry_i_7__4_n_0),
        .O(\count_reg_reg[4]_1 [1]));
  LUT6 #(
    .INIT(64'h0028000A14000005)) 
    count1_carry_i_4__7
       (.I0(j_reg),
        .I1(count1_carry_i_8__5_n_0),
        .I2(count1_carry_i_9__7_n_0),
        .I3(count1_carry_i_10__5_n_0),
        .I4(count1_carry_i_7__4_n_0),
        .I5(count1_carry_i_11__7_n_0),
        .O(\count_reg_reg[4]_1 [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    count1_carry_i_5__4
       (.I0(done_aux_reg[0]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(done_aux_reg[1]),
        .I4(Q[2]),
        .I5(done_aux_reg[2]),
        .O(count1_carry_i_5__4_n_0));
  LUT6 #(
    .INIT(64'h2F02FFFF00002F02)) 
    count1_carry_i_6__5
       (.I0(done_aux_reg[0]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(done_aux_reg[1]),
        .I4(Q[2]),
        .I5(done_aux_reg[2]),
        .O(count1_carry_i_6__5_n_0));
  LUT5 #(
    .INIT(32'h96996696)) 
    count1_carry_i_7__4
       (.I0(done_aux_reg[4]),
        .I1(Q[4]),
        .I2(done_aux_reg[3]),
        .I3(Q[3]),
        .I4(count1_carry_i_6__5_n_0),
        .O(count1_carry_i_7__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    count1_carry_i_8__5
       (.I0(done_aux_reg[0]),
        .I1(Q[0]),
        .I2(done_aux_reg[1]),
        .I3(Q[1]),
        .O(count1_carry_i_8__5_n_0));
  LUT6 #(
    .INIT(64'h6696969966966696)) 
    count1_carry_i_9__7
       (.I0(done_aux_reg[2]),
        .I1(Q[2]),
        .I2(done_aux_reg[1]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(done_aux_reg[0]),
        .O(count1_carry_i_9__7_n_0));
  LUT6 #(
    .INIT(64'h28AAAAAAAAAA28AA)) 
    \count[4]_i_3__3 
       (.I0(CO),
        .I1(Q[3]),
        .I2(done_aux_reg[3]),
        .I3(count1_carry_i_5__4_n_0),
        .I4(done_aux_reg[4]),
        .I5(Q[4]),
        .O(\count_reg_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h0000FFBF)) 
    \count_reg[0]_i_1__7 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(\count_reg[0]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h0F0FF0B0)) 
    \count_reg[1]_i_1__7 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \count_reg[2]_i_1__7 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(count_next[2]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h3CCCCC8C)) 
    \count_reg[3]_i_1__7 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(count_next[3]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \count_reg[4]_i_1__7 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[3]),
        .O(count_next[4]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[0] 
       (.C(clk),
        .CE(E),
        .CLR(ack_in_1),
        .D(\count_reg[0]_i_1__7_n_0 ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[1] 
       (.C(clk),
        .CE(E),
        .CLR(ack_in_1),
        .D(count_next[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[2] 
       (.C(clk),
        .CE(E),
        .CLR(ack_in_1),
        .D(count_next[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[3] 
       (.C(clk),
        .CE(E),
        .CLR(ack_in_1),
        .D(count_next[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \count_reg_reg[4] 
       (.C(clk),
        .CE(E),
        .CLR(ack_in_1),
        .D(count_next[4]),
        .Q(Q[4]));
endmodule

(* ECO_CHECKSUM = "ea6b790b" *) 
(* NotValidForBitStream *)
module design_1_wrapper
   (DDR_addr,
    DDR_ba,
    DDR_cas_n,
    DDR_ck_n,
    DDR_ck_p,
    DDR_cke,
    DDR_cs_n,
    DDR_dm,
    DDR_dq,
    DDR_dqs_n,
    DDR_dqs_p,
    DDR_odt,
    DDR_ras_n,
    DDR_reset_n,
    DDR_we_n,
    FIXED_IO_ddr_vrn,
    FIXED_IO_ddr_vrp,
    FIXED_IO_mio,
    FIXED_IO_ps_clk,
    FIXED_IO_ps_porb,
    FIXED_IO_ps_srstb);
  inout [14:0]DDR_addr;
  inout [2:0]DDR_ba;
  inout DDR_cas_n;
  inout DDR_ck_n;
  inout DDR_ck_p;
  inout DDR_cke;
  inout DDR_cs_n;
  inout [3:0]DDR_dm;
  inout [31:0]DDR_dq;
  inout [3:0]DDR_dqs_n;
  inout [3:0]DDR_dqs_p;
  inout DDR_odt;
  inout DDR_ras_n;
  inout DDR_reset_n;
  inout DDR_we_n;
  inout FIXED_IO_ddr_vrn;
  inout FIXED_IO_ddr_vrp;
  inout [53:0]FIXED_IO_mio;
  inout FIXED_IO_ps_clk;
  inout FIXED_IO_ps_porb;
  inout FIXED_IO_ps_srstb;

  wire [14:0]DDR_addr;
  wire [2:0]DDR_ba;
  wire DDR_cas_n;
  wire DDR_ck_n;
  wire DDR_ck_p;
  wire DDR_cke;
  wire DDR_cs_n;
  wire [3:0]DDR_dm;
  wire [31:0]DDR_dq;
  wire [3:0]DDR_dqs_n;
  wire [3:0]DDR_dqs_p;
  wire DDR_odt;
  wire DDR_ras_n;
  wire DDR_reset_n;
  wire DDR_we_n;
  wire FIXED_IO_ddr_vrn;
  wire FIXED_IO_ddr_vrp;
  wire [53:0]FIXED_IO_mio;
  wire FIXED_IO_ps_clk;
  wire FIXED_IO_ps_porb;
  wire FIXED_IO_ps_srstb;

initial begin
 $sdf_annotate("top_nqueens_tb_time_impl.sdf",,,,"tool_control");
end
  (* hw_handoff = "design_1.hwdef" *) 
  design_1 design_1_i
       (.DDR_addr(DDR_addr),
        .DDR_ba(DDR_ba),
        .DDR_cas_n(DDR_cas_n),
        .DDR_ck_n(DDR_ck_n),
        .DDR_ck_p(DDR_ck_p),
        .DDR_cke(DDR_cke),
        .DDR_cs_n(DDR_cs_n),
        .DDR_dm(DDR_dm),
        .DDR_dq(DDR_dq),
        .DDR_dqs_n(DDR_dqs_n),
        .DDR_dqs_p(DDR_dqs_p),
        .DDR_odt(DDR_odt),
        .DDR_ras_n(DDR_ras_n),
        .DDR_reset_n(DDR_reset_n),
        .DDR_we_n(DDR_we_n),
        .FIXED_IO_ddr_vrn(FIXED_IO_ddr_vrn),
        .FIXED_IO_ddr_vrp(FIXED_IO_ddr_vrp),
        .FIXED_IO_mio(FIXED_IO_mio),
        .FIXED_IO_ps_clk(FIXED_IO_ps_clk),
        .FIXED_IO_ps_porb(FIXED_IO_ps_porb),
        .FIXED_IO_ps_srstb(FIXED_IO_ps_srstb));
endmodule

(* ORIG_REF_NAME = "sc_exit_v1_0_9_exit" *) 
module design_1_axi_smc_0_sc_exit_v1_0_9_exit
   (m_axi_awvalid,
    m_axi_arvalid,
    s_axi_awready,
    s_axi_arready,
    aclk,
    m_axi_rvalid,
    s_axi_rready,
    m_axi_bvalid,
    s_axi_bready,
    s_axi_awvalid,
    areset,
    m_axi_awready,
    s_axi_arvalid,
    m_axi_arready);
  output m_axi_awvalid;
  output m_axi_arvalid;
  output s_axi_awready;
  output s_axi_arready;
  input aclk;
  input m_axi_rvalid;
  input s_axi_rready;
  input m_axi_bvalid;
  input s_axi_bready;
  input s_axi_awvalid;
  input areset;
  input m_axi_awready;
  input s_axi_arvalid;
  input m_axi_arready;

  wire aclk;
  wire areset;
  wire \gen_r_cmd_reg.aresetn_d[0]_i_1_n_0 ;
  wire \gen_r_cmd_reg.aresetn_d_reg_n_0_[0] ;
  wire \gen_r_cmd_reg.s_read_cmd_vacancy_i_i_1_n_0 ;
  wire \gen_r_cmd_reg.s_read_cmd_vacancy_i_i_2_n_0 ;
  wire \gen_r_cmd_reg.s_read_cmd_vacancy_i_reg_n_0 ;
  wire [1:1]\gen_w_cmd_reg.aresetn_d ;
  wire \gen_w_cmd_reg.aresetn_d[1]_i_1_n_0 ;
  wire \gen_w_cmd_reg.s_write_cmd_vacancy_i_i_1_n_0 ;
  wire \gen_w_cmd_reg.s_write_cmd_vacancy_i_i_2_n_0 ;
  wire \gen_w_cmd_reg.s_write_cmd_vacancy_i_reg_n_0 ;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire m_axi_bvalid;
  wire m_axi_rvalid;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_rready;

  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gen_r_cmd_reg.aresetn_d[0]_i_1 
       (.I0(areset),
        .O(\gen_r_cmd_reg.aresetn_d[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_r_cmd_reg.aresetn_d_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_r_cmd_reg.aresetn_d[0]_i_1_n_0 ),
        .Q(\gen_r_cmd_reg.aresetn_d_reg_n_0_[0] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hEE2E2E2E00000000)) 
    \gen_r_cmd_reg.s_read_cmd_vacancy_i_i_1 
       (.I0(\gen_r_cmd_reg.s_read_cmd_vacancy_i_reg_n_0 ),
        .I1(\gen_r_cmd_reg.s_read_cmd_vacancy_i_i_2_n_0 ),
        .I2(\gen_w_cmd_reg.aresetn_d ),
        .I3(m_axi_rvalid),
        .I4(s_axi_rready),
        .I5(\gen_r_cmd_reg.aresetn_d_reg_n_0_[0] ),
        .O(\gen_r_cmd_reg.s_read_cmd_vacancy_i_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF202020FFFFFFFF)) 
    \gen_r_cmd_reg.s_read_cmd_vacancy_i_i_2 
       (.I0(s_axi_arvalid),
        .I1(areset),
        .I2(m_axi_arready),
        .I3(m_axi_rvalid),
        .I4(s_axi_rready),
        .I5(\gen_w_cmd_reg.aresetn_d ),
        .O(\gen_r_cmd_reg.s_read_cmd_vacancy_i_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_r_cmd_reg.s_read_cmd_vacancy_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_r_cmd_reg.s_read_cmd_vacancy_i_i_1_n_0 ),
        .Q(\gen_r_cmd_reg.s_read_cmd_vacancy_i_reg_n_0 ),
        .R(1'b0));
  (* \PinAttr:I0:HOLD_DETOUR  = "192" *) 
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gen_w_cmd_reg.aresetn_d[1]_i_1 
       (.I0(\gen_r_cmd_reg.aresetn_d_reg_n_0_[0] ),
        .I1(areset),
        .O(\gen_w_cmd_reg.aresetn_d[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_w_cmd_reg.aresetn_d_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_w_cmd_reg.aresetn_d[1]_i_1_n_0 ),
        .Q(\gen_w_cmd_reg.aresetn_d ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hEE2E2E2E00000000)) 
    \gen_w_cmd_reg.s_write_cmd_vacancy_i_i_1 
       (.I0(\gen_w_cmd_reg.s_write_cmd_vacancy_i_reg_n_0 ),
        .I1(\gen_w_cmd_reg.s_write_cmd_vacancy_i_i_2_n_0 ),
        .I2(\gen_w_cmd_reg.aresetn_d ),
        .I3(m_axi_bvalid),
        .I4(s_axi_bready),
        .I5(\gen_r_cmd_reg.aresetn_d_reg_n_0_[0] ),
        .O(\gen_w_cmd_reg.s_write_cmd_vacancy_i_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF202020FFFFFFFF)) 
    \gen_w_cmd_reg.s_write_cmd_vacancy_i_i_2 
       (.I0(s_axi_awvalid),
        .I1(areset),
        .I2(m_axi_awready),
        .I3(m_axi_bvalid),
        .I4(s_axi_bready),
        .I5(\gen_w_cmd_reg.aresetn_d ),
        .O(\gen_w_cmd_reg.s_write_cmd_vacancy_i_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_w_cmd_reg.s_write_cmd_vacancy_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_w_cmd_reg.s_write_cmd_vacancy_i_i_1_n_0 ),
        .Q(\gen_w_cmd_reg.s_write_cmd_vacancy_i_reg_n_0 ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h08)) 
    m_axi_arvalid_INST_0
       (.I0(\gen_r_cmd_reg.s_read_cmd_vacancy_i_reg_n_0 ),
        .I1(s_axi_arvalid),
        .I2(areset),
        .O(m_axi_arvalid));
  LUT3 #(
    .INIT(8'h08)) 
    m_axi_awvalid_INST_0
       (.I0(\gen_w_cmd_reg.s_write_cmd_vacancy_i_reg_n_0 ),
        .I1(s_axi_awvalid),
        .I2(areset),
        .O(m_axi_awvalid));
  LUT3 #(
    .INIT(8'h40)) 
    s_axi_arready_INST_0
       (.I0(areset),
        .I1(m_axi_arready),
        .I2(\gen_r_cmd_reg.s_read_cmd_vacancy_i_reg_n_0 ),
        .O(s_axi_arready));
  LUT3 #(
    .INIT(8'h40)) 
    s_axi_awready_INST_0
       (.I0(areset),
        .I1(m_axi_awready),
        .I2(\gen_w_cmd_reg.s_write_cmd_vacancy_i_reg_n_0 ),
        .O(s_axi_awready));
endmodule

(* C_ADDR_WIDTH = "8" *) (* C_ENABLE_PIPELINING = "1'b0" *) (* C_FAMILY = "zynq" *) 
(* C_HAS_LOCK = "0" *) (* C_IS_CASCADED = "0" *) (* C_MAX_RUSER_BITS_PER_BYTE = "0" *) 
(* C_MAX_WUSER_BITS_PER_BYTE = "0" *) (* C_MEP_IDENTIFIER_WIDTH = "1" *) (* C_M_ARUSER_WIDTH = "0" *) 
(* C_M_AWUSER_WIDTH = "0" *) (* C_M_BUSER_WIDTH = "0" *) (* C_M_ID_WIDTH = "0" *) 
(* C_M_LIMIT_READ_LENGTH = "0" *) (* C_M_LIMIT_WRITE_LENGTH = "0" *) (* C_M_PROTOCOL = "2" *) 
(* C_M_RUSER_BITS_PER_BYTE = "0" *) (* C_M_RUSER_WIDTH = "0" *) (* C_M_WUSER_BITS_PER_BYTE = "0" *) 
(* C_M_WUSER_WIDTH = "0" *) (* C_NUM_MSC = "2" *) (* C_NUM_READ_OUTSTANDING = "8" *) 
(* C_NUM_WRITE_OUTSTANDING = "8" *) (* C_RDATA_WIDTH = "32" *) (* C_READ_ACCEPTANCE = "32" *) 
(* C_SINGLE_ISSUING = "1" *) (* C_SSC_ROUTE_ARRAY = "6'b101111" *) (* C_SSC_ROUTE_WIDTH = "3" *) 
(* C_S_ID_WIDTH = "1" *) (* C_WDATA_WIDTH = "32" *) (* C_WRITE_ACCEPTANCE = "32" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "sc_exit_v1_0_9_top" *) (* P_BYPASS = "0" *) 
(* P_FULLY_PIPELINED = "2" *) (* P_NUM_READ_OUTSTANDING = "16" *) (* P_NUM_WRITE_OUTSTANDING = "16" *) 
(* P_ZERO_LATENCY = "1" *) 
module design_1_axi_smc_0_sc_exit_v1_0_9_top
   (aclk,
    aclken,
    aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready);
  input aclk;
  input aclken;
  input aresetn;
  input [0:0]s_axi_awid;
  input [7:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wlast;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  input [0:0]s_axi_arid;
  input [7:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_awid;
  output [7:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [31:0]m_axi_wdata;
  output [3:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  output [0:0]m_axi_arid;
  output [7:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [31:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;

  wire aclk;
  wire areset;
  wire areset_i_1_n_0;
  wire aresetn;
  wire \aresetn_d_reg_n_0_[0] ;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire m_axi_bvalid;
  wire m_axi_rvalid;
  wire m_axi_wready;
  wire m_axi_wvalid;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_rready;
  wire s_axi_wready;
  wire s_axi_wvalid;

  LUT1 #(
    .INIT(2'h1)) 
    areset_i_1
       (.I0(\aresetn_d_reg_n_0_[0] ),
        .O(areset_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    areset_reg
       (.C(aclk),
        .CE(1'b1),
        .D(areset_i_1_n_0),
        .Q(areset),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \aresetn_d_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(aresetn),
        .Q(\aresetn_d_reg_n_0_[0] ),
        .R(1'b0));
  design_1_axi_smc_0_sc_exit_v1_0_9_exit exit_inst
       (.aclk(aclk),
        .areset(areset),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rvalid(m_axi_rvalid),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_rready(s_axi_rready));
  LUT2 #(
    .INIT(4'h2)) 
    m_axi_wvalid_INST_0
       (.I0(s_axi_wvalid),
        .I1(areset),
        .O(m_axi_wvalid));
  LUT2 #(
    .INIT(4'h2)) 
    s_axi_wready_INST_0
       (.I0(m_axi_wready),
        .I1(areset),
        .O(s_axi_wready));
endmodule

(* ORIG_REF_NAME = "sc_mmu_v1_0_8_decerr_slave" *) 
module design_1_axi_smc_0_sc_mmu_v1_0_8_decerr_slave
   (\gen_endpoint.err_awready ,
    \gen_endpoint.err_arready ,
    \gen_endpoint.w_state_reg[1] ,
    \gen_endpoint.w_state_reg[0] ,
    \gen_endpoint.r_state_reg[1] ,
    sr_axi_arvalid,
    s_axi_wready_i_reg,
    \gen_endpoint.w_state_reg[1]_0 ,
    s_axi_bid,
    mr_axi_awready,
    s_axi_bvalid,
    s_axi_wready,
    mr_axi_arready,
    s_axi_rid,
    s_axi_rvalid,
    \gen_axi.gen_read.read_cs_reg[0]_0 ,
    s_axi_rlast,
    areset,
    aclk,
    \gen_endpoint.w_state_reg[0]_0 ,
    \gen_endpoint.w_state ,
    mr_axi_awvalid,
    \gen_endpoint.w_state_reg[0]_1 ,
    Q,
    s_axi_arlen,
    m_vector1,
    m_axi_arlen,
    s_axi_rready,
    mr_axi_arvalid,
    \gen_endpoint.r_trigger_decerr ,
    m_valid1,
    m_vector2,
    \gen_axi.gen_write.s_axi_bid_i_reg[0]_0 ,
    \gen_endpoint.w_trigger_decerr ,
    m_valid1_0,
    m_vector2_1,
    s_axi_wlast,
    s_axi_wvalid,
    m_axi_wready,
    S00_AXI_wready,
    m_axi_bid,
    m_axi_awready,
    m_axi_bvalid,
    s_axi_bready,
    \gen_endpoint.r_state ,
    m_axi_arready,
    m_axi_rid,
    m_axi_rvalid,
    m_axi_rlast,
    \gen_axi.gen_read.s_axi_rid_i_reg[0]_0 ,
    s_axi_arvalid,
    \gen_axi.gen_read.s_axi_rlast_i_reg_0 ,
    m_axi_awid,
    m_axi_arid);
  output \gen_endpoint.err_awready ;
  output \gen_endpoint.err_arready ;
  output \gen_endpoint.w_state_reg[1] ;
  output \gen_endpoint.w_state_reg[0] ;
  output \gen_endpoint.r_state_reg[1] ;
  output sr_axi_arvalid;
  output s_axi_wready_i_reg;
  output \gen_endpoint.w_state_reg[1]_0 ;
  output [11:0]s_axi_bid;
  output mr_axi_awready;
  output s_axi_bvalid;
  output s_axi_wready;
  output mr_axi_arready;
  output [11:0]s_axi_rid;
  output s_axi_rvalid;
  output \gen_axi.gen_read.read_cs_reg[0]_0 ;
  output s_axi_rlast;
  input areset;
  input aclk;
  input \gen_endpoint.w_state_reg[0]_0 ;
  input [1:0]\gen_endpoint.w_state ;
  input mr_axi_awvalid;
  input \gen_endpoint.w_state_reg[0]_1 ;
  input [1:0]Q;
  input [1:0]s_axi_arlen;
  input m_vector1;
  input [1:0]m_axi_arlen;
  input s_axi_rready;
  input mr_axi_arvalid;
  input \gen_endpoint.r_trigger_decerr ;
  input m_valid1;
  input m_vector2;
  input \gen_axi.gen_write.s_axi_bid_i_reg[0]_0 ;
  input \gen_endpoint.w_trigger_decerr ;
  input m_valid1_0;
  input m_vector2_1;
  input s_axi_wlast;
  input s_axi_wvalid;
  input m_axi_wready;
  input S00_AXI_wready;
  input [11:0]m_axi_bid;
  input m_axi_awready;
  input m_axi_bvalid;
  input s_axi_bready;
  input [1:0]\gen_endpoint.r_state ;
  input m_axi_arready;
  input [11:0]m_axi_rid;
  input m_axi_rvalid;
  input m_axi_rlast;
  input [0:0]\gen_axi.gen_read.s_axi_rid_i_reg[0]_0 ;
  input s_axi_arvalid;
  input \gen_axi.gen_read.s_axi_rlast_i_reg_0 ;
  input [11:0]m_axi_awid;
  input [11:0]m_axi_arid;

  wire \FSM_onehot_gen_axi.gen_write.write_cs[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_axi.gen_write.write_cs[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_axi.gen_write.write_cs[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_axi.gen_write.write_cs[2]_i_2_n_0 ;
  wire \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[0] ;
  wire \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[1] ;
  wire \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[2] ;
  wire [1:0]Q;
  wire S00_AXI_wready;
  wire aclk;
  wire areset;
  wire \gen_axi.gen_read.read_cnt[6]_i_2_n_0 ;
  wire \gen_axi.gen_read.read_cnt[7]_i_1_n_0 ;
  wire \gen_axi.gen_read.read_cnt[7]_i_3_n_0 ;
  wire \gen_axi.gen_read.read_cnt[7]_i_5_n_0 ;
  wire [0:0]\gen_axi.gen_read.read_cnt_reg ;
  wire [7:1]\gen_axi.gen_read.read_cnt_reg__0 ;
  wire \gen_axi.gen_read.read_cs[0]_i_1_n_0 ;
  wire \gen_axi.gen_read.read_cs_reg[0]_0 ;
  wire \gen_axi.gen_read.s_axi_arready_i_i_1_n_0 ;
  wire [11:0]\gen_axi.gen_read.s_axi_rid_i ;
  wire \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ;
  wire \gen_axi.gen_read.s_axi_rid_i[11]_i_2_n_0 ;
  wire [0:0]\gen_axi.gen_read.s_axi_rid_i_reg[0]_0 ;
  wire \gen_axi.gen_read.s_axi_rlast_i_i_1_n_0 ;
  wire \gen_axi.gen_read.s_axi_rlast_i_i_3_n_0 ;
  wire \gen_axi.gen_read.s_axi_rlast_i_reg_0 ;
  wire \gen_axi.gen_write.s_axi_awready_i_i_1_n_0 ;
  wire \gen_axi.gen_write.s_axi_awready_i_i_3_n_0 ;
  wire [11:0]\gen_axi.gen_write.s_axi_bid_i ;
  wire \gen_axi.gen_write.s_axi_bid_i[11]_i_2_n_0 ;
  wire \gen_axi.gen_write.s_axi_bid_i_0 ;
  wire \gen_axi.gen_write.s_axi_bid_i_reg[0]_0 ;
  wire \gen_axi.gen_write.s_axi_bvalid_i_i_1_n_0 ;
  wire \gen_axi.gen_write.s_axi_wready_i ;
  wire \gen_axi.gen_write.s_axi_wready_i_i_1_n_0 ;
  wire \gen_endpoint.err_arready ;
  wire \gen_endpoint.err_awready ;
  wire \gen_endpoint.err_bvalid ;
  wire \gen_endpoint.err_rlast ;
  wire \gen_endpoint.err_rvalid ;
  wire [1:0]\gen_endpoint.r_state ;
  wire \gen_endpoint.r_state_reg[1] ;
  wire \gen_endpoint.r_trigger_decerr ;
  wire [1:0]\gen_endpoint.w_state ;
  wire \gen_endpoint.w_state_reg[0] ;
  wire \gen_endpoint.w_state_reg[0]_0 ;
  wire \gen_endpoint.w_state_reg[0]_1 ;
  wire \gen_endpoint.w_state_reg[1] ;
  wire \gen_endpoint.w_state_reg[1]_0 ;
  wire \gen_endpoint.w_trigger_decerr ;
  wire [11:0]m_axi_arid;
  wire [1:0]m_axi_arlen;
  wire m_axi_arready;
  wire [11:0]m_axi_awid;
  wire m_axi_awready;
  wire [11:0]m_axi_bid;
  wire m_axi_bvalid;
  wire [11:0]m_axi_rid;
  wire m_axi_rlast;
  wire m_axi_rvalid;
  wire m_axi_wready;
  wire m_valid1;
  wire m_valid1_0;
  wire m_vector1;
  wire m_vector2;
  wire m_vector2_1;
  wire mr_axi_arready;
  wire mr_axi_arvalid;
  wire mr_axi_awready;
  wire mr_axi_awvalid;
  wire [7:0]p_0_in;
  wire [1:0]s_axi_arlen;
  wire s_axi_arvalid;
  wire [11:0]s_axi_bid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [11:0]s_axi_rid;
  wire s_axi_rlast;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire s_axi_wlast;
  wire s_axi_wready;
  wire s_axi_wready_i_reg;
  wire s_axi_wvalid;
  wire sr_axi_arvalid;

  LUT5 #(
    .INIT(32'hF0F5F0E0)) 
    \FSM_onehot_gen_axi.gen_write.write_cs[0]_i_1 
       (.I0(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .I1(s_axi_bready),
        .I2(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_axi.gen_write.write_cs[2]_i_2_n_0 ),
        .I4(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[0] ),
        .O(\FSM_onehot_gen_axi.gen_write.write_cs[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAABBBAAAAA888)) 
    \FSM_onehot_gen_axi.gen_write.write_cs[1]_i_1 
       (.I0(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[0] ),
        .I1(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .I2(s_axi_bready),
        .I3(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_axi.gen_write.write_cs[2]_i_2_n_0 ),
        .I5(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[1] ),
        .O(\FSM_onehot_gen_axi.gen_write.write_cs[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAAB88)) 
    \FSM_onehot_gen_axi.gen_write.write_cs[2]_i_1 
       (.I0(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[1] ),
        .I1(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .I2(s_axi_bready),
        .I3(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_axi.gen_write.write_cs[2]_i_2_n_0 ),
        .O(\FSM_onehot_gen_axi.gen_write.write_cs[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \FSM_onehot_gen_axi.gen_write.write_cs[2]_i_2 
       (.I0(\gen_endpoint.w_state [0]),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[1] ),
        .I3(s_axi_wlast),
        .I4(s_axi_wvalid),
        .O(\FSM_onehot_gen_axi.gen_write.write_cs[2]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "P_WRITE_IDLE:001,P_WRITE_DATA:010,P_WRITE_RESP:100," *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_axi.gen_write.write_cs_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_axi.gen_write.write_cs[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[0] ),
        .S(areset));
  (* FSM_ENCODED_STATES = "P_WRITE_IDLE:001,P_WRITE_DATA:010,P_WRITE_RESP:100," *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_axi.gen_write.write_cs_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_axi.gen_write.write_cs[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[1] ),
        .R(areset));
  (* FSM_ENCODED_STATES = "P_WRITE_IDLE:001,P_WRITE_DATA:010,P_WRITE_RESP:100," *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_axi.gen_write.write_cs_reg[2] 
       (.C(aclk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_axi.gen_write.write_cs[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[2] ),
        .R(areset));
  LUT5 #(
    .INIT(32'h74747744)) 
    \gen_axi.gen_read.read_cnt[0]_i_1 
       (.I0(\gen_axi.gen_read.read_cnt_reg ),
        .I1(\gen_endpoint.err_rvalid ),
        .I2(Q[0]),
        .I3(s_axi_arlen[0]),
        .I4(m_vector1),
        .O(p_0_in[0]));
  LUT6 #(
    .INIT(64'h9F909F909F9F9090)) 
    \gen_axi.gen_read.read_cnt[1]_i_1 
       (.I0(\gen_axi.gen_read.read_cnt_reg ),
        .I1(\gen_axi.gen_read.read_cnt_reg__0 [1]),
        .I2(\gen_endpoint.err_rvalid ),
        .I3(Q[1]),
        .I4(s_axi_arlen[1]),
        .I5(m_vector1),
        .O(p_0_in[1]));
  LUT5 #(
    .INIT(32'hA9FFA900)) 
    \gen_axi.gen_read.read_cnt[2]_i_1 
       (.I0(\gen_axi.gen_read.read_cnt_reg__0 [2]),
        .I1(\gen_axi.gen_read.read_cnt_reg__0 [1]),
        .I2(\gen_axi.gen_read.read_cnt_reg ),
        .I3(\gen_endpoint.err_rvalid ),
        .I4(m_axi_arlen[0]),
        .O(p_0_in[2]));
  LUT6 #(
    .INIT(64'hAAA9FFFFAAA90000)) 
    \gen_axi.gen_read.read_cnt[3]_i_1 
       (.I0(\gen_axi.gen_read.read_cnt_reg__0 [3]),
        .I1(\gen_axi.gen_read.read_cnt_reg__0 [2]),
        .I2(\gen_axi.gen_read.read_cnt_reg ),
        .I3(\gen_axi.gen_read.read_cnt_reg__0 [1]),
        .I4(\gen_endpoint.err_rvalid ),
        .I5(m_axi_arlen[1]),
        .O(p_0_in[3]));
  LUT6 #(
    .INIT(64'hAAAAAAA800000002)) 
    \gen_axi.gen_read.read_cnt[4]_i_1 
       (.I0(\gen_endpoint.err_rvalid ),
        .I1(\gen_axi.gen_read.read_cnt_reg__0 [3]),
        .I2(\gen_axi.gen_read.read_cnt_reg__0 [2]),
        .I3(\gen_axi.gen_read.read_cnt_reg ),
        .I4(\gen_axi.gen_read.read_cnt_reg__0 [1]),
        .I5(\gen_axi.gen_read.read_cnt_reg__0 [4]),
        .O(p_0_in[4]));
  LUT5 #(
    .INIT(32'hA8AA0200)) 
    \gen_axi.gen_read.read_cnt[5]_i_1 
       (.I0(\gen_endpoint.err_rvalid ),
        .I1(\gen_axi.gen_read.read_cnt_reg__0 [4]),
        .I2(\gen_axi.gen_read.read_cnt_reg__0 [3]),
        .I3(\gen_axi.gen_read.read_cnt[6]_i_2_n_0 ),
        .I4(\gen_axi.gen_read.read_cnt_reg__0 [5]),
        .O(p_0_in[5]));
  LUT6 #(
    .INIT(64'hAAAAAA8A00000020)) 
    \gen_axi.gen_read.read_cnt[6]_i_1 
       (.I0(\gen_endpoint.err_rvalid ),
        .I1(\gen_axi.gen_read.read_cnt_reg__0 [5]),
        .I2(\gen_axi.gen_read.read_cnt[6]_i_2_n_0 ),
        .I3(\gen_axi.gen_read.read_cnt_reg__0 [3]),
        .I4(\gen_axi.gen_read.read_cnt_reg__0 [4]),
        .I5(\gen_axi.gen_read.read_cnt_reg__0 [6]),
        .O(p_0_in[6]));
  LUT3 #(
    .INIT(8'h01)) 
    \gen_axi.gen_read.read_cnt[6]_i_2 
       (.I0(\gen_axi.gen_read.read_cnt_reg__0 [1]),
        .I1(\gen_axi.gen_read.read_cnt_reg ),
        .I2(\gen_axi.gen_read.read_cnt_reg__0 [2]),
        .O(\gen_axi.gen_read.read_cnt[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8F80808080808080)) 
    \gen_axi.gen_read.read_cnt[7]_i_1 
       (.I0(\gen_axi.gen_read.read_cnt[7]_i_3_n_0 ),
        .I1(s_axi_rready),
        .I2(\gen_endpoint.err_rvalid ),
        .I3(mr_axi_arvalid),
        .I4(\gen_endpoint.r_state_reg[1] ),
        .I5(\gen_endpoint.err_arready ),
        .O(\gen_axi.gen_read.read_cnt[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA8AA0200)) 
    \gen_axi.gen_read.read_cnt[7]_i_2 
       (.I0(\gen_endpoint.err_rvalid ),
        .I1(\gen_axi.gen_read.read_cnt_reg__0 [1]),
        .I2(\gen_axi.gen_read.read_cnt_reg ),
        .I3(\gen_axi.gen_read.read_cnt[7]_i_5_n_0 ),
        .I4(\gen_axi.gen_read.read_cnt_reg__0 [7]),
        .O(p_0_in[7]));
  LUT4 #(
    .INIT(16'hFFFB)) 
    \gen_axi.gen_read.read_cnt[7]_i_3 
       (.I0(\gen_axi.gen_read.read_cnt_reg__0 [7]),
        .I1(\gen_axi.gen_read.read_cnt[7]_i_5_n_0 ),
        .I2(\gen_axi.gen_read.read_cnt_reg ),
        .I3(\gen_axi.gen_read.read_cnt_reg__0 [1]),
        .O(\gen_axi.gen_read.read_cnt[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \gen_axi.gen_read.read_cnt[7]_i_4 
       (.I0(\gen_endpoint.r_state [1]),
        .I1(\gen_endpoint.r_state [0]),
        .O(\gen_endpoint.r_state_reg[1] ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \gen_axi.gen_read.read_cnt[7]_i_5 
       (.I0(\gen_axi.gen_read.read_cnt_reg__0 [4]),
        .I1(\gen_axi.gen_read.read_cnt_reg__0 [3]),
        .I2(\gen_axi.gen_read.read_cnt_reg__0 [2]),
        .I3(\gen_axi.gen_read.read_cnt_reg__0 [5]),
        .I4(\gen_axi.gen_read.read_cnt_reg__0 [6]),
        .O(\gen_axi.gen_read.read_cnt[7]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.read_cnt_reg[0] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.read_cnt[7]_i_1_n_0 ),
        .D(p_0_in[0]),
        .Q(\gen_axi.gen_read.read_cnt_reg ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.read_cnt_reg[1] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.read_cnt[7]_i_1_n_0 ),
        .D(p_0_in[1]),
        .Q(\gen_axi.gen_read.read_cnt_reg__0 [1]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.read_cnt_reg[2] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.read_cnt[7]_i_1_n_0 ),
        .D(p_0_in[2]),
        .Q(\gen_axi.gen_read.read_cnt_reg__0 [2]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.read_cnt_reg[3] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.read_cnt[7]_i_1_n_0 ),
        .D(p_0_in[3]),
        .Q(\gen_axi.gen_read.read_cnt_reg__0 [3]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.read_cnt_reg[4] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.read_cnt[7]_i_1_n_0 ),
        .D(p_0_in[4]),
        .Q(\gen_axi.gen_read.read_cnt_reg__0 [4]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.read_cnt_reg[5] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.read_cnt[7]_i_1_n_0 ),
        .D(p_0_in[5]),
        .Q(\gen_axi.gen_read.read_cnt_reg__0 [5]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.read_cnt_reg[6] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.read_cnt[7]_i_1_n_0 ),
        .D(p_0_in[6]),
        .Q(\gen_axi.gen_read.read_cnt_reg__0 [6]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.read_cnt_reg[7] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.read_cnt[7]_i_1_n_0 ),
        .D(p_0_in[7]),
        .Q(\gen_axi.gen_read.read_cnt_reg__0 [7]),
        .R(areset));
  LUT6 #(
    .INIT(64'hDFD0D0D0D0D0D0D0)) 
    \gen_axi.gen_read.read_cs[0]_i_1 
       (.I0(s_axi_rready),
        .I1(\gen_axi.gen_read.read_cnt[7]_i_3_n_0 ),
        .I2(\gen_endpoint.err_rvalid ),
        .I3(mr_axi_arvalid),
        .I4(\gen_endpoint.r_state_reg[1] ),
        .I5(\gen_endpoint.err_arready ),
        .O(\gen_axi.gen_read.read_cs[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.read_cs_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axi.gen_read.read_cs[0]_i_1_n_0 ),
        .Q(\gen_endpoint.err_rvalid ),
        .R(areset));
  LUT6 #(
    .INIT(64'h0000000055550455)) 
    \gen_axi.gen_read.s_axi_arready_i_i_1 
       (.I0(areset),
        .I1(s_axi_rready),
        .I2(\gen_axi.gen_read.read_cnt[7]_i_3_n_0 ),
        .I3(\gen_endpoint.err_rvalid ),
        .I4(\gen_endpoint.err_arready ),
        .I5(\gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ),
        .O(\gen_axi.gen_read.s_axi_arready_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.s_axi_arready_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axi.gen_read.s_axi_arready_i_i_1_n_0 ),
        .Q(\gen_endpoint.err_arready ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000055550400)) 
    \gen_axi.gen_read.s_axi_rid_i[11]_i_1 
       (.I0(\gen_axi.gen_read.s_axi_rid_i[11]_i_2_n_0 ),
        .I1(sr_axi_arvalid),
        .I2(\gen_endpoint.r_trigger_decerr ),
        .I3(m_valid1),
        .I4(m_vector2),
        .I5(\gen_endpoint.err_rvalid ),
        .O(\gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \gen_axi.gen_read.s_axi_rid_i[11]_i_2 
       (.I0(\gen_endpoint.err_arready ),
        .I1(\gen_endpoint.r_state [0]),
        .I2(\gen_endpoint.r_state [1]),
        .O(\gen_axi.gen_read.s_axi_rid_i[11]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.s_axi_rid_i_reg[0] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ),
        .D(m_axi_arid[0]),
        .Q(\gen_axi.gen_read.s_axi_rid_i [0]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.s_axi_rid_i_reg[10] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ),
        .D(m_axi_arid[10]),
        .Q(\gen_axi.gen_read.s_axi_rid_i [10]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.s_axi_rid_i_reg[11] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ),
        .D(m_axi_arid[11]),
        .Q(\gen_axi.gen_read.s_axi_rid_i [11]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.s_axi_rid_i_reg[1] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ),
        .D(m_axi_arid[1]),
        .Q(\gen_axi.gen_read.s_axi_rid_i [1]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.s_axi_rid_i_reg[2] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ),
        .D(m_axi_arid[2]),
        .Q(\gen_axi.gen_read.s_axi_rid_i [2]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.s_axi_rid_i_reg[3] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ),
        .D(m_axi_arid[3]),
        .Q(\gen_axi.gen_read.s_axi_rid_i [3]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.s_axi_rid_i_reg[4] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ),
        .D(m_axi_arid[4]),
        .Q(\gen_axi.gen_read.s_axi_rid_i [4]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.s_axi_rid_i_reg[5] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ),
        .D(m_axi_arid[5]),
        .Q(\gen_axi.gen_read.s_axi_rid_i [5]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.s_axi_rid_i_reg[6] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ),
        .D(m_axi_arid[6]),
        .Q(\gen_axi.gen_read.s_axi_rid_i [6]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.s_axi_rid_i_reg[7] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ),
        .D(m_axi_arid[7]),
        .Q(\gen_axi.gen_read.s_axi_rid_i [7]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.s_axi_rid_i_reg[8] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ),
        .D(m_axi_arid[8]),
        .Q(\gen_axi.gen_read.s_axi_rid_i [8]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.s_axi_rid_i_reg[9] 
       (.C(aclk),
        .CE(\gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ),
        .D(m_axi_arid[9]),
        .Q(\gen_axi.gen_read.s_axi_rid_i [9]),
        .R(areset));
  LUT6 #(
    .INIT(64'hB8B8B8FFB8B8B800)) 
    \gen_axi.gen_read.s_axi_rlast_i_i_1 
       (.I0(\gen_axi.gen_read.read_cnt[7]_i_3_n_0 ),
        .I1(\gen_endpoint.err_rvalid ),
        .I2(\gen_axi.gen_read.s_axi_rlast_i_reg_0 ),
        .I3(\gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0 ),
        .I4(\gen_axi.gen_read.s_axi_rlast_i_i_3_n_0 ),
        .I5(\gen_endpoint.err_rlast ),
        .O(\gen_axi.gen_read.s_axi_rlast_i_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h02000000)) 
    \gen_axi.gen_read.s_axi_rlast_i_i_3 
       (.I0(\gen_axi.gen_read.read_cnt[7]_i_5_n_0 ),
        .I1(\gen_axi.gen_read.read_cnt_reg__0 [1]),
        .I2(\gen_axi.gen_read.read_cnt_reg__0 [7]),
        .I3(s_axi_rready),
        .I4(\gen_endpoint.err_rvalid ),
        .O(\gen_axi.gen_read.s_axi_rlast_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_read.s_axi_rlast_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axi.gen_read.s_axi_rlast_i_i_1_n_0 ),
        .Q(\gen_endpoint.err_rlast ),
        .R(areset));
  LUT6 #(
    .INIT(64'hFFFFF7FFFFFFFF00)) 
    \gen_axi.gen_write.s_axi_awready_i_i_1 
       (.I0(mr_axi_awvalid),
        .I1(\gen_endpoint.w_state_reg[1]_0 ),
        .I2(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[0] ),
        .I4(\gen_axi.gen_write.s_axi_awready_i_i_3_n_0 ),
        .I5(\gen_endpoint.err_awready ),
        .O(\gen_axi.gen_write.s_axi_awready_i_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \gen_axi.gen_write.s_axi_awready_i_i_2 
       (.I0(\gen_endpoint.w_state [1]),
        .I1(\gen_endpoint.w_state [0]),
        .O(\gen_endpoint.w_state_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \gen_axi.gen_write.s_axi_awready_i_i_3 
       (.I0(s_axi_bready),
        .I1(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[2] ),
        .O(\gen_axi.gen_write.s_axi_awready_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_write.s_axi_awready_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axi.gen_write.s_axi_awready_i_i_1_n_0 ),
        .Q(\gen_endpoint.err_awready ),
        .R(areset));
  LUT6 #(
    .INIT(64'h2222222200200000)) 
    \gen_axi.gen_write.s_axi_bid_i[11]_i_1 
       (.I0(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[0] ),
        .I1(\gen_axi.gen_write.s_axi_bid_i[11]_i_2_n_0 ),
        .I2(\gen_axi.gen_write.s_axi_bid_i_reg[0]_0 ),
        .I3(\gen_endpoint.w_trigger_decerr ),
        .I4(m_valid1_0),
        .I5(m_vector2_1),
        .O(\gen_axi.gen_write.s_axi_bid_i_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \gen_axi.gen_write.s_axi_bid_i[11]_i_2 
       (.I0(\gen_endpoint.err_awready ),
        .I1(\gen_endpoint.w_state [0]),
        .I2(\gen_endpoint.w_state [1]),
        .O(\gen_axi.gen_write.s_axi_bid_i[11]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_write.s_axi_bid_i_reg[0] 
       (.C(aclk),
        .CE(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .D(m_axi_awid[0]),
        .Q(\gen_axi.gen_write.s_axi_bid_i [0]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_write.s_axi_bid_i_reg[10] 
       (.C(aclk),
        .CE(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .D(m_axi_awid[10]),
        .Q(\gen_axi.gen_write.s_axi_bid_i [10]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_write.s_axi_bid_i_reg[11] 
       (.C(aclk),
        .CE(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .D(m_axi_awid[11]),
        .Q(\gen_axi.gen_write.s_axi_bid_i [11]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_write.s_axi_bid_i_reg[1] 
       (.C(aclk),
        .CE(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .D(m_axi_awid[1]),
        .Q(\gen_axi.gen_write.s_axi_bid_i [1]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_write.s_axi_bid_i_reg[2] 
       (.C(aclk),
        .CE(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .D(m_axi_awid[2]),
        .Q(\gen_axi.gen_write.s_axi_bid_i [2]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_write.s_axi_bid_i_reg[3] 
       (.C(aclk),
        .CE(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .D(m_axi_awid[3]),
        .Q(\gen_axi.gen_write.s_axi_bid_i [3]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_write.s_axi_bid_i_reg[4] 
       (.C(aclk),
        .CE(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .D(m_axi_awid[4]),
        .Q(\gen_axi.gen_write.s_axi_bid_i [4]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_write.s_axi_bid_i_reg[5] 
       (.C(aclk),
        .CE(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .D(m_axi_awid[5]),
        .Q(\gen_axi.gen_write.s_axi_bid_i [5]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_write.s_axi_bid_i_reg[6] 
       (.C(aclk),
        .CE(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .D(m_axi_awid[6]),
        .Q(\gen_axi.gen_write.s_axi_bid_i [6]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_write.s_axi_bid_i_reg[7] 
       (.C(aclk),
        .CE(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .D(m_axi_awid[7]),
        .Q(\gen_axi.gen_write.s_axi_bid_i [7]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_write.s_axi_bid_i_reg[8] 
       (.C(aclk),
        .CE(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .D(m_axi_awid[8]),
        .Q(\gen_axi.gen_write.s_axi_bid_i [8]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_write.s_axi_bid_i_reg[9] 
       (.C(aclk),
        .CE(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .D(m_axi_awid[9]),
        .Q(\gen_axi.gen_write.s_axi_bid_i [9]),
        .R(areset));
  LUT4 #(
    .INIT(16'hBFAA)) 
    \gen_axi.gen_write.s_axi_bvalid_i_i_1 
       (.I0(\FSM_onehot_gen_axi.gen_write.write_cs[2]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[2] ),
        .I2(s_axi_bready),
        .I3(\gen_endpoint.err_bvalid ),
        .O(\gen_axi.gen_write.s_axi_bvalid_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_write.s_axi_bvalid_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axi.gen_write.s_axi_bvalid_i_i_1_n_0 ),
        .Q(\gen_endpoint.err_bvalid ),
        .R(areset));
  LUT6 #(
    .INIT(64'hBFFFFFFFAAAAAAAA)) 
    \gen_axi.gen_write.s_axi_wready_i_i_1 
       (.I0(\gen_axi.gen_write.s_axi_bid_i_0 ),
        .I1(s_axi_wvalid),
        .I2(s_axi_wlast),
        .I3(\FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[1] ),
        .I4(\gen_endpoint.w_state_reg[1]_0 ),
        .I5(\gen_axi.gen_write.s_axi_wready_i ),
        .O(\gen_axi.gen_write.s_axi_wready_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axi.gen_write.s_axi_wready_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axi.gen_write.s_axi_wready_i_i_1_n_0 ),
        .Q(\gen_axi.gen_write.s_axi_wready_i ),
        .R(areset));
  LUT5 #(
    .INIT(32'h80000000)) 
    \gen_endpoint.r_state[1]_i_3 
       (.I0(\gen_endpoint.err_rvalid ),
        .I1(s_axi_rready),
        .I2(\gen_endpoint.r_state [1]),
        .I3(\gen_endpoint.r_state [0]),
        .I4(\gen_endpoint.err_rlast ),
        .O(\gen_axi.gen_read.read_cs_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h00001110FFFFEEEE)) 
    \gen_endpoint.w_state[0]_i_1 
       (.I0(\gen_endpoint.w_state_reg[0]_0 ),
        .I1(\gen_endpoint.w_state_reg[0] ),
        .I2(\gen_endpoint.w_state [1]),
        .I3(mr_axi_awvalid),
        .I4(\gen_endpoint.w_state_reg[0]_1 ),
        .I5(\gen_endpoint.w_state [0]),
        .O(\gen_endpoint.w_state_reg[1] ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_endpoint.w_state[1]_i_3 
       (.I0(\gen_endpoint.w_state [0]),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.err_bvalid ),
        .I3(s_axi_bready),
        .O(\gen_endpoint.w_state_reg[0] ));
  LUT6 #(
    .INIT(64'hF808000000000000)) 
    \gen_pipelined.mesg_reg[2]_i_2 
       (.I0(m_axi_wready),
        .I1(S00_AXI_wready),
        .I2(\gen_endpoint.w_state_reg[1]_0 ),
        .I3(\gen_axi.gen_write.s_axi_wready_i ),
        .I4(s_axi_wvalid),
        .I5(s_axi_wlast),
        .O(s_axi_wready_i_reg));
  LUT4 #(
    .INIT(16'h0004)) 
    m_axi_arvalid_INST_0_i_2
       (.I0(\gen_axi.gen_read.s_axi_rid_i_reg[0]_0 ),
        .I1(s_axi_arvalid),
        .I2(\gen_endpoint.r_state [0]),
        .I3(\gen_endpoint.r_state [1]),
        .O(sr_axi_arvalid));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_bid[0]_INST_0 
       (.I0(\gen_axi.gen_write.s_axi_bid_i [0]),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.w_state [0]),
        .I3(m_axi_bid[0]),
        .O(s_axi_bid[0]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_bid[10]_INST_0 
       (.I0(\gen_axi.gen_write.s_axi_bid_i [10]),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.w_state [0]),
        .I3(m_axi_bid[10]),
        .O(s_axi_bid[10]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_bid[11]_INST_0 
       (.I0(\gen_axi.gen_write.s_axi_bid_i [11]),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.w_state [0]),
        .I3(m_axi_bid[11]),
        .O(s_axi_bid[11]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_bid[1]_INST_0 
       (.I0(\gen_axi.gen_write.s_axi_bid_i [1]),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.w_state [0]),
        .I3(m_axi_bid[1]),
        .O(s_axi_bid[1]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_bid[2]_INST_0 
       (.I0(\gen_axi.gen_write.s_axi_bid_i [2]),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.w_state [0]),
        .I3(m_axi_bid[2]),
        .O(s_axi_bid[2]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_bid[3]_INST_0 
       (.I0(\gen_axi.gen_write.s_axi_bid_i [3]),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.w_state [0]),
        .I3(m_axi_bid[3]),
        .O(s_axi_bid[3]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_bid[4]_INST_0 
       (.I0(\gen_axi.gen_write.s_axi_bid_i [4]),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.w_state [0]),
        .I3(m_axi_bid[4]),
        .O(s_axi_bid[4]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_bid[5]_INST_0 
       (.I0(\gen_axi.gen_write.s_axi_bid_i [5]),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.w_state [0]),
        .I3(m_axi_bid[5]),
        .O(s_axi_bid[5]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_bid[6]_INST_0 
       (.I0(\gen_axi.gen_write.s_axi_bid_i [6]),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.w_state [0]),
        .I3(m_axi_bid[6]),
        .O(s_axi_bid[6]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_bid[7]_INST_0 
       (.I0(\gen_axi.gen_write.s_axi_bid_i [7]),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.w_state [0]),
        .I3(m_axi_bid[7]),
        .O(s_axi_bid[7]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_bid[8]_INST_0 
       (.I0(\gen_axi.gen_write.s_axi_bid_i [8]),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.w_state [0]),
        .I3(m_axi_bid[8]),
        .O(s_axi_bid[8]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_bid[9]_INST_0 
       (.I0(\gen_axi.gen_write.s_axi_bid_i [9]),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.w_state [0]),
        .I3(m_axi_bid[9]),
        .O(s_axi_bid[9]));
  LUT4 #(
    .INIT(16'hBF80)) 
    s_axi_bvalid_INST_0
       (.I0(\gen_endpoint.err_bvalid ),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.w_state [0]),
        .I3(m_axi_bvalid),
        .O(s_axi_bvalid));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_rid[0]_INST_0 
       (.I0(\gen_axi.gen_read.s_axi_rid_i [0]),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(m_axi_rid[0]),
        .O(s_axi_rid[0]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_rid[10]_INST_0 
       (.I0(\gen_axi.gen_read.s_axi_rid_i [10]),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(m_axi_rid[10]),
        .O(s_axi_rid[10]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_rid[11]_INST_0 
       (.I0(\gen_axi.gen_read.s_axi_rid_i [11]),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(m_axi_rid[11]),
        .O(s_axi_rid[11]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_rid[1]_INST_0 
       (.I0(\gen_axi.gen_read.s_axi_rid_i [1]),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(m_axi_rid[1]),
        .O(s_axi_rid[1]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_rid[2]_INST_0 
       (.I0(\gen_axi.gen_read.s_axi_rid_i [2]),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(m_axi_rid[2]),
        .O(s_axi_rid[2]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_rid[3]_INST_0 
       (.I0(\gen_axi.gen_read.s_axi_rid_i [3]),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(m_axi_rid[3]),
        .O(s_axi_rid[3]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_rid[4]_INST_0 
       (.I0(\gen_axi.gen_read.s_axi_rid_i [4]),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(m_axi_rid[4]),
        .O(s_axi_rid[4]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_rid[5]_INST_0 
       (.I0(\gen_axi.gen_read.s_axi_rid_i [5]),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(m_axi_rid[5]),
        .O(s_axi_rid[5]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_rid[6]_INST_0 
       (.I0(\gen_axi.gen_read.s_axi_rid_i [6]),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(m_axi_rid[6]),
        .O(s_axi_rid[6]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_rid[7]_INST_0 
       (.I0(\gen_axi.gen_read.s_axi_rid_i [7]),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(m_axi_rid[7]),
        .O(s_axi_rid[7]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_rid[8]_INST_0 
       (.I0(\gen_axi.gen_read.s_axi_rid_i [8]),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(m_axi_rid[8]),
        .O(s_axi_rid[8]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \s_axi_rid[9]_INST_0 
       (.I0(\gen_axi.gen_read.s_axi_rid_i [9]),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(m_axi_rid[9]),
        .O(s_axi_rid[9]));
  LUT4 #(
    .INIT(16'hBF80)) 
    s_axi_rlast_INST_0
       (.I0(\gen_endpoint.err_rlast ),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(m_axi_rlast),
        .O(s_axi_rlast));
  LUT4 #(
    .INIT(16'hBF80)) 
    s_axi_rvalid_INST_0
       (.I0(\gen_endpoint.err_rvalid ),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(m_axi_rvalid),
        .O(s_axi_rvalid));
  LUT5 #(
    .INIT(32'hBF808080)) 
    s_axi_wready_INST_0
       (.I0(\gen_axi.gen_write.s_axi_wready_i ),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.w_state [0]),
        .I3(S00_AXI_wready),
        .I4(m_axi_wready),
        .O(s_axi_wready));
  LUT4 #(
    .INIT(16'hBF80)) 
    \state[s_stall_d]_i_3__0 
       (.I0(\gen_endpoint.err_awready ),
        .I1(\gen_endpoint.w_state [1]),
        .I2(\gen_endpoint.w_state [0]),
        .I3(m_axi_awready),
        .O(mr_axi_awready));
  LUT4 #(
    .INIT(16'hBF80)) 
    \state[s_stall_d]_i_4__0 
       (.I0(\gen_endpoint.err_arready ),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(m_axi_arready),
        .O(mr_axi_arready));
endmodule

(* C_ADDR_WIDTH = "32" *) (* C_ENABLE_PIPELINING = "1'b0" *) (* C_FAMILY = "zynq" *) 
(* C_ID_WIDTH = "12" *) (* C_IS_CASCADED = "0" *) (* C_MSC_ROUTE_ARRAY = "8'b11011011" *) 
(* C_MSC_ROUTE_WIDTH = "4" *) (* C_NUM_MSC = "2" *) (* C_NUM_READ_OUTSTANDING = "8" *) 
(* C_NUM_SEG = "1" *) (* C_NUM_WRITE_OUTSTANDING = "8" *) (* C_RDATA_WIDTH = "32" *) 
(* C_READ_ACCEPTANCE = "32" *) (* C_SEG_BASE_ADDR_ARRAY = "64'b0000000000000000000000000000000001000011110001000000000000000000" *) (* C_SEG_SECURE_READ_ARRAY = "1'b0" *) 
(* C_SEG_SECURE_WRITE_ARRAY = "1'b0" *) (* C_SEG_SEP_ROUTE_ARRAY = "64'b0000000000000000000000000000000000000000000000000000000000000001" *) (* C_SEG_SIZE_ARRAY = "16" *) 
(* C_SEG_SUPPORTS_READ_ARRAY = "1'b1" *) (* C_SEG_SUPPORTS_WRITE_ARRAY = "1'b1" *) (* C_SINGLE_ISSUING = "1" *) 
(* C_SUPPORTS_NARROW = "0" *) (* C_SUPPORTS_READ_DECERR = "1" *) (* C_SUPPORTS_WRAP = "0" *) 
(* C_SUPPORTS_WRITE_DECERR = "1" *) (* C_S_ARUSER_WIDTH = "0" *) (* C_S_AWUSER_WIDTH = "0" *) 
(* C_S_BUSER_WIDTH = "0" *) (* C_S_PROTOCOL = "1" *) (* C_S_RUSER_WIDTH = "0" *) 
(* C_S_WUSER_WIDTH = "0" *) (* C_WDATA_WIDTH = "32" *) (* C_WRITE_ACCEPTANCE = "32" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "sc_mmu_v1_0_8_top" *) (* P_AXI3 = "1" *) 
(* P_AXI4 = "0" *) (* P_AXILITE = "2" *) (* P_BYPASS = "0" *) 
(* P_DECERR = "2'b11" *) (* P_FIXED = "2'b00" *) (* P_FULLY_PIPELINED = "2" *) 
(* P_INCR = "2'b01" *) (* P_NUM_MSC_LOG = "1" *) (* P_NUM_SEG_LOG = "1" *) 
(* P_R_DWBYTES = "4" *) (* P_R_DWSIZE = "2" *) (* P_R_QUEUE_SIZE = "4" *) 
(* P_WRAP = "2'b10" *) (* P_W_DWBYTES = "4" *) (* P_W_DWSIZE = "2" *) 
(* P_W_QUEUE_SIZE = "4" *) (* P_ZERO_LATENCY = "1" *) 
module design_1_axi_smc_0_sc_mmu_v1_0_8_top
   (aclk,
    aresetn,
    aclken,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready);
  input aclk;
  input aresetn;
  input aclken;
  input [11:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [3:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [1:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [11:0]s_axi_wid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [11:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  input [11:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [3:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [1:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [11:0]s_axi_rid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [11:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [1023:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [31:0]m_axi_wdata;
  output [3:0]m_axi_wstrb;
  output m_axi_wlast;
  output [1023:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [11:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [1023:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  output [11:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [1023:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [11:0]m_axi_rid;
  input [31:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [1023:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;

  wire ZERO;
  wire aclk;
  wire ar_reg_stall_n_0;
  wire ar_reg_stall_n_12;
  wire ar_reg_stall_n_13;
  wire ar_reg_stall_n_14;
  wire ar_reg_stall_n_15;
  wire ar_reg_stall_n_16;
  wire ar_reg_stall_n_2;
  wire ar_reg_stall_n_3;
  wire ar_reg_stall_n_8;
  wire ar_reg_stall_n_9;
  wire areset;
  wire areset_d;
  wire areset_d_i_1_n_0;
  wire areset_i_1_n_0;
  wire aresetn;
  wire aresetn_d;
  wire aw_reg_stall_n_3;
  wire \gen_endpoint.b_cnt[0]_i_1_n_0 ;
  wire \gen_endpoint.b_cnt[1]_i_1_n_0 ;
  wire \gen_endpoint.b_cnt[2]_i_1_n_0 ;
  wire \gen_endpoint.b_cnt[3]_i_1_n_0 ;
  wire \gen_endpoint.b_cnt[3]_i_2_n_0 ;
  wire \gen_endpoint.b_cnt[4]_i_1_n_0 ;
  wire \gen_endpoint.b_cnt[4]_i_2_n_0 ;
  wire \gen_endpoint.b_cnt[4]_i_3_n_0 ;
  wire \gen_endpoint.b_cnt[4]_i_4_n_0 ;
  wire [4:0]\gen_endpoint.b_cnt_reg ;
  wire \gen_endpoint.decerr_slave_inst_n_2 ;
  wire \gen_endpoint.decerr_slave_inst_n_3 ;
  wire \gen_endpoint.decerr_slave_inst_n_37 ;
  wire \gen_endpoint.decerr_slave_inst_n_4 ;
  wire \gen_endpoint.decerr_slave_inst_n_6 ;
  wire \gen_endpoint.decerr_slave_inst_n_7 ;
  wire \gen_endpoint.err_arready ;
  wire \gen_endpoint.err_awready ;
  wire \gen_endpoint.r_cnt[0]_i_1_n_0 ;
  wire \gen_endpoint.r_cnt[4]_i_4_n_0 ;
  wire [4:0]\gen_endpoint.r_cnt_reg ;
  wire \gen_endpoint.r_resume_i_1_n_0 ;
  wire [1:0]\gen_endpoint.r_state ;
  wire \gen_endpoint.r_state[0]_i_2_n_0 ;
  wire \gen_endpoint.r_trigger_decerr ;
  wire \gen_endpoint.w_cnt1 ;
  wire \gen_endpoint.w_cnt[0]_i_1_n_0 ;
  wire \gen_endpoint.w_cnt[1]_i_1_n_0 ;
  wire \gen_endpoint.w_cnt[2]_i_1_n_0 ;
  wire \gen_endpoint.w_cnt[3]_i_1_n_0 ;
  wire \gen_endpoint.w_cnt[4]_i_1_n_0 ;
  wire \gen_endpoint.w_cnt[4]_i_2_n_0 ;
  wire [4:0]\gen_endpoint.w_cnt_reg ;
  wire \gen_endpoint.w_enable_i_1_n_0 ;
  wire \gen_endpoint.w_enable_i_3_n_0 ;
  wire \gen_endpoint.w_enable_i_4_n_0 ;
  wire \gen_endpoint.w_enable_i_5_n_0 ;
  wire \gen_endpoint.w_enable_reg_n_0 ;
  wire \gen_endpoint.w_push_done_reg_n_0 ;
  wire \gen_endpoint.w_resume_i_1_n_0 ;
  wire \gen_endpoint.w_resume_i_2_n_0 ;
  wire [1:0]\gen_endpoint.w_state ;
  wire \gen_endpoint.w_trigger_decerr ;
  wire \gen_wroute_fifo.wroute_split_n_0 ;
  wire \gen_wroute_fifo.wroute_split_n_1 ;
  wire \gen_wroute_fifo.wroute_split_n_2 ;
  wire \gen_wroute_fifo.wroute_split_n_3 ;
  wire \gen_wroute_fifo.wroute_split_n_4 ;
  wire \gen_wroute_fifo.wroute_split_n_6 ;
  wire [31:0]m_axi_araddr;
  wire [11:0]m_axi_arid;
  wire [7:0]m_axi_arlen;
  wire m_axi_arready;
  wire [2:0]m_axi_arsize;
  wire m_axi_arvalid;
  wire [31:0]m_axi_awaddr;
  wire [11:0]m_axi_awid;
  wire m_axi_awready;
  wire [2:0]m_axi_awsize;
  wire m_axi_awvalid;
  wire [11:0]m_axi_bid;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire [31:0]m_axi_rdata;
  wire [11:0]m_axi_rid;
  wire m_axi_rlast;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire m_axi_wready;
  wire [1023:0]m_axi_wuser;
  wire m_axi_wvalid;
  wire m_valid1;
  wire m_valid1_1;
  wire m_vector1;
  wire m_vector2;
  wire m_vector2_0;
  wire mr_axi_arready;
  wire mr_axi_arvalid;
  wire mr_axi_awready;
  wire mr_axi_awvalid;
  wire p_14_in;
  wire r_resume;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [11:0]s_axi_arid;
  wire [3:0]s_axi_arlen;
  wire s_axi_arready;
  wire [2:0]s_axi_arsize;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [11:0]s_axi_awid;
  wire [3:0]s_axi_awlen;
  wire s_axi_awready;
  wire [2:0]s_axi_awsize;
  wire s_axi_awvalid;
  wire [11:0]s_axi_bid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [31:0]\^s_axi_rdata ;
  wire [11:0]s_axi_rid;
  wire s_axi_rlast;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire s_axi_wlast;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire sr_axi_arvalid;
  wire w_resume;
  wire wroute_vacancy;
  wire [2:0]NLW_ar_reg_stall_m_axi_arprot_UNCONNECTED;
  wire [16:14]\NLW_ar_reg_stall_m_vector_i_reg[1136]_0_UNCONNECTED ;
  wire [0:0]NLW_ar_reg_stall_s_axi_arsize_UNCONNECTED;
  wire [17:2]NLW_aw_reg_stall_D_UNCONNECTED;
  wire [2:0]NLW_aw_reg_stall_m_axi_awprot_UNCONNECTED;
  wire [2:2]NLW_aw_reg_stall_m_axi_awsize_UNCONNECTED;

  assign s_axi_rdata[31:30] = \^s_axi_rdata [31:30];
  assign s_axi_rdata[29] = ZERO;
  assign s_axi_rdata[28:25] = \^s_axi_rdata [28:25];
  assign s_axi_rdata[24] = ZERO;
  assign s_axi_rdata[23:22] = \^s_axi_rdata [23:22];
  assign s_axi_rdata[21] = ZERO;
  assign s_axi_rdata[20] = ZERO;
  assign s_axi_rdata[19] = ZERO;
  assign s_axi_rdata[18] = ZERO;
  assign s_axi_rdata[17] = ZERO;
  assign s_axi_rdata[16] = ZERO;
  assign s_axi_rdata[15:14] = \^s_axi_rdata [15:14];
  assign s_axi_rdata[13] = ZERO;
  assign s_axi_rdata[12:0] = \^s_axi_rdata [12:0];
  (* OPT_MODIFIED = "PROPCONST" *) 
  GND GND_1
       (.G(ZERO));
  design_1_axi_smc_0_sc_util_v1_0_4_axi_reg_stall__parameterized0 ar_reg_stall
       (.D({ar_reg_stall_n_13,ar_reg_stall_n_14,ar_reg_stall_n_15,ar_reg_stall_n_16}),
        .E(ar_reg_stall_n_12),
        .Q({ar_reg_stall_n_8,ar_reg_stall_n_9}),
        .aclk(aclk),
        .areset(areset),
        .\gen_endpoint.err_arready (\gen_endpoint.err_arready ),
        .\gen_endpoint.r_cnt_reg[0] (\gen_endpoint.r_cnt[4]_i_4_n_0 ),
        .\gen_endpoint.r_cnt_reg[4] (\gen_endpoint.r_cnt_reg ),
        .\gen_endpoint.r_state (\gen_endpoint.r_state ),
        .\gen_endpoint.r_state_reg[0] (ar_reg_stall_n_2),
        .\gen_endpoint.r_state_reg[0]_0 (\gen_endpoint.r_state[0]_i_2_n_0 ),
        .\gen_endpoint.r_state_reg[0]_1 (\gen_endpoint.decerr_slave_inst_n_37 ),
        .\gen_endpoint.r_state_reg[1] (ar_reg_stall_n_0),
        .\gen_endpoint.r_trigger_decerr (\gen_endpoint.r_trigger_decerr ),
        .m_axi_araddr(m_axi_araddr[7:0]),
        .m_axi_arid(m_axi_arid),
        .m_axi_arlen(m_axi_arlen[3:0]),
        .m_axi_arprot(NLW_ar_reg_stall_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arready(m_axi_arready),
        .m_axi_arsize(m_axi_arsize[1:0]),
        .m_axi_arvalid(m_axi_arvalid),
        .m_valid1(m_valid1),
        .m_vector1(m_vector1),
        .m_vector2(m_vector2),
        .\m_vector_i_reg[1125]_0 (ar_reg_stall_n_3),
        .\m_vector_i_reg[1136]_0 ({\NLW_ar_reg_stall_m_vector_i_reg[1136]_0_UNCONNECTED [16:14],s_axi_arid,s_axi_arsize[1:0]}),
        .mr_axi_arready(mr_axi_arready),
        .mr_axi_arvalid(mr_axi_arvalid),
        .r_resume(r_resume),
        .s_axi_araddr({s_axi_araddr[31:16],s_axi_araddr[7:0]}),
        .s_axi_arburst(s_axi_arburst[0]),
        .s_axi_arlen(s_axi_arlen),
        .s_axi_arready(s_axi_arready),
        .s_axi_arsize(NLW_ar_reg_stall_s_axi_arsize_UNCONNECTED[0]),
        .s_axi_arvalid(s_axi_arvalid),
        .sr_axi_arvalid(sr_axi_arvalid),
        .\state_reg[storage]_0 (\gen_endpoint.decerr_slave_inst_n_4 ));
  LUT1 #(
    .INIT(2'h1)) 
    areset_d_i_1
       (.I0(aresetn_d),
        .O(areset_d_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    areset_d_reg
       (.C(aclk),
        .CE(1'b1),
        .D(areset_d_i_1_n_0),
        .Q(areset_d),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    areset_i_1
       (.I0(aresetn),
        .O(areset_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    areset_reg
       (.C(aclk),
        .CE(1'b1),
        .D(areset_i_1_n_0),
        .Q(areset),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    aresetn_d_reg
       (.C(aclk),
        .CE(1'b1),
        .D(aresetn),
        .Q(aresetn_d),
        .R(1'b0));
  design_1_axi_smc_0_sc_util_v1_0_4_axi_reg_stall__parameterized0_15 aw_reg_stall
       (.D({NLW_aw_reg_stall_D_UNCONNECTED[17:15],s_axi_awid,NLW_aw_reg_stall_D_UNCONNECTED[2],s_axi_awsize[1:0]}),
        .aclk(aclk),
        .areset(areset),
        .\gen_endpoint.err_awready (\gen_endpoint.err_awready ),
        .\gen_endpoint.w_state (\gen_endpoint.w_state ),
        .\gen_endpoint.w_trigger_decerr (\gen_endpoint.w_trigger_decerr ),
        .m_axi_awaddr(m_axi_awaddr[7:0]),
        .m_axi_awid(m_axi_awid),
        .m_axi_awprot(NLW_aw_reg_stall_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awready(m_axi_awready),
        .m_axi_awsize({NLW_aw_reg_stall_m_axi_awsize_UNCONNECTED[2],m_axi_awsize[1:0]}),
        .m_axi_awvalid(m_axi_awvalid),
        .m_valid1(m_valid1_1),
        .m_vector2(m_vector2_0),
        .mr_axi_awready(mr_axi_awready),
        .mr_axi_awvalid(mr_axi_awvalid),
        .s_axi_awaddr({s_axi_awaddr[31:16],s_axi_awaddr[7:0]}),
        .s_axi_awburst(s_axi_awburst[0]),
        .s_axi_awlen(s_axi_awlen),
        .\state_reg[s_ready_i]_0 (aw_reg_stall_n_3),
        .\state_reg[s_stall_d]_0 (\gen_wroute_fifo.wroute_split_n_6 ),
        .\state_reg[storage]_0 (\gen_endpoint.decerr_slave_inst_n_7 ),
        .w_resume(w_resume));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_endpoint.b_cnt[0]_i_1 
       (.I0(\gen_endpoint.b_cnt_reg [0]),
        .O(\gen_endpoint.b_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'hA659)) 
    \gen_endpoint.b_cnt[1]_i_1 
       (.I0(\gen_endpoint.b_cnt_reg [0]),
        .I1(p_14_in),
        .I2(\gen_endpoint.b_cnt[3]_i_2_n_0 ),
        .I3(\gen_endpoint.b_cnt_reg [1]),
        .O(\gen_endpoint.b_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'hBF40F40B)) 
    \gen_endpoint.b_cnt[2]_i_1 
       (.I0(\gen_endpoint.b_cnt[3]_i_2_n_0 ),
        .I1(p_14_in),
        .I2(\gen_endpoint.b_cnt_reg [0]),
        .I3(\gen_endpoint.b_cnt_reg [2]),
        .I4(\gen_endpoint.b_cnt_reg [1]),
        .O(\gen_endpoint.b_cnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF7F0080EEFE1101)) 
    \gen_endpoint.b_cnt[3]_i_1 
       (.I0(\gen_endpoint.b_cnt_reg [0]),
        .I1(\gen_endpoint.b_cnt_reg [1]),
        .I2(p_14_in),
        .I3(\gen_endpoint.b_cnt[3]_i_2_n_0 ),
        .I4(\gen_endpoint.b_cnt_reg [3]),
        .I5(\gen_endpoint.b_cnt_reg [2]),
        .O(\gen_endpoint.b_cnt[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h08880000)) 
    \gen_endpoint.b_cnt[3]_i_2 
       (.I0(\gen_endpoint.b_cnt[4]_i_3_n_0 ),
        .I1(m_axi_bvalid),
        .I2(\gen_endpoint.w_state [0]),
        .I3(\gen_endpoint.w_state [1]),
        .I4(s_axi_bready),
        .O(\gen_endpoint.b_cnt[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA666AAAAAAAAAAAA)) 
    \gen_endpoint.b_cnt[4]_i_1 
       (.I0(p_14_in),
        .I1(s_axi_bready),
        .I2(\gen_endpoint.w_state [1]),
        .I3(\gen_endpoint.w_state [0]),
        .I4(m_axi_bvalid),
        .I5(\gen_endpoint.b_cnt[4]_i_3_n_0 ),
        .O(\gen_endpoint.b_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAA9)) 
    \gen_endpoint.b_cnt[4]_i_2 
       (.I0(\gen_endpoint.b_cnt_reg [4]),
        .I1(\gen_endpoint.b_cnt_reg [3]),
        .I2(\gen_endpoint.b_cnt_reg [0]),
        .I3(\gen_endpoint.b_cnt_reg [1]),
        .I4(\gen_endpoint.b_cnt[4]_i_4_n_0 ),
        .I5(\gen_endpoint.b_cnt_reg [2]),
        .O(\gen_endpoint.b_cnt[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_endpoint.b_cnt[4]_i_3 
       (.I0(\gen_endpoint.b_cnt_reg [3]),
        .I1(\gen_endpoint.b_cnt_reg [2]),
        .I2(\gen_endpoint.b_cnt_reg [4]),
        .I3(\gen_endpoint.b_cnt_reg [0]),
        .I4(\gen_endpoint.b_cnt_reg [1]),
        .O(\gen_endpoint.b_cnt[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \gen_endpoint.b_cnt[4]_i_4 
       (.I0(\gen_endpoint.w_push_done_reg_n_0 ),
        .I1(\gen_endpoint.w_enable_i_5_n_0 ),
        .I2(\gen_endpoint.w_trigger_decerr ),
        .I3(\gen_endpoint.b_cnt[3]_i_2_n_0 ),
        .O(\gen_endpoint.b_cnt[4]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.b_cnt_reg[0] 
       (.C(aclk),
        .CE(\gen_endpoint.b_cnt[4]_i_1_n_0 ),
        .D(\gen_endpoint.b_cnt[0]_i_1_n_0 ),
        .Q(\gen_endpoint.b_cnt_reg [0]),
        .R(areset_d));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.b_cnt_reg[1] 
       (.C(aclk),
        .CE(\gen_endpoint.b_cnt[4]_i_1_n_0 ),
        .D(\gen_endpoint.b_cnt[1]_i_1_n_0 ),
        .Q(\gen_endpoint.b_cnt_reg [1]),
        .R(areset_d));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.b_cnt_reg[2] 
       (.C(aclk),
        .CE(\gen_endpoint.b_cnt[4]_i_1_n_0 ),
        .D(\gen_endpoint.b_cnt[2]_i_1_n_0 ),
        .Q(\gen_endpoint.b_cnt_reg [2]),
        .R(areset_d));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.b_cnt_reg[3] 
       (.C(aclk),
        .CE(\gen_endpoint.b_cnt[4]_i_1_n_0 ),
        .D(\gen_endpoint.b_cnt[3]_i_1_n_0 ),
        .Q(\gen_endpoint.b_cnt_reg [3]),
        .R(areset_d));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.b_cnt_reg[4] 
       (.C(aclk),
        .CE(\gen_endpoint.b_cnt[4]_i_1_n_0 ),
        .D(\gen_endpoint.b_cnt[4]_i_2_n_0 ),
        .Q(\gen_endpoint.b_cnt_reg [4]),
        .R(areset_d));
  design_1_axi_smc_0_sc_mmu_v1_0_8_decerr_slave \gen_endpoint.decerr_slave_inst 
       (.Q({ar_reg_stall_n_8,ar_reg_stall_n_9}),
        .S00_AXI_wready(\gen_endpoint.w_enable_reg_n_0 ),
        .aclk(aclk),
        .areset(areset),
        .\gen_axi.gen_read.read_cs_reg[0]_0 (\gen_endpoint.decerr_slave_inst_n_37 ),
        .\gen_axi.gen_read.s_axi_rid_i_reg[0]_0 (\gen_endpoint.r_cnt_reg [4]),
        .\gen_axi.gen_read.s_axi_rlast_i_reg_0 (ar_reg_stall_n_3),
        .\gen_axi.gen_write.s_axi_bid_i_reg[0]_0 (\gen_wroute_fifo.wroute_split_n_6 ),
        .\gen_endpoint.err_arready (\gen_endpoint.err_arready ),
        .\gen_endpoint.err_awready (\gen_endpoint.err_awready ),
        .\gen_endpoint.r_state (\gen_endpoint.r_state ),
        .\gen_endpoint.r_state_reg[1] (\gen_endpoint.decerr_slave_inst_n_4 ),
        .\gen_endpoint.r_trigger_decerr (\gen_endpoint.r_trigger_decerr ),
        .\gen_endpoint.w_state (\gen_endpoint.w_state ),
        .\gen_endpoint.w_state_reg[0] (\gen_endpoint.decerr_slave_inst_n_3 ),
        .\gen_endpoint.w_state_reg[0]_0 (\gen_endpoint.w_resume_i_1_n_0 ),
        .\gen_endpoint.w_state_reg[0]_1 (\gen_wroute_fifo.wroute_split_n_1 ),
        .\gen_endpoint.w_state_reg[1] (\gen_endpoint.decerr_slave_inst_n_2 ),
        .\gen_endpoint.w_state_reg[1]_0 (\gen_endpoint.decerr_slave_inst_n_7 ),
        .\gen_endpoint.w_trigger_decerr (\gen_endpoint.w_trigger_decerr ),
        .m_axi_arid(m_axi_arid),
        .m_axi_arlen(m_axi_arlen[3:2]),
        .m_axi_arready(m_axi_arready),
        .m_axi_awid(m_axi_awid),
        .m_axi_awready(m_axi_awready),
        .m_axi_bid(m_axi_bid),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rid(m_axi_rid),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wready(m_axi_wready),
        .m_valid1(m_valid1),
        .m_valid1_0(m_valid1_1),
        .m_vector1(m_vector1),
        .m_vector2(m_vector2),
        .m_vector2_1(m_vector2_0),
        .mr_axi_arready(mr_axi_arready),
        .mr_axi_arvalid(mr_axi_arvalid),
        .mr_axi_awready(mr_axi_awready),
        .mr_axi_awvalid(mr_axi_awvalid),
        .s_axi_arlen(s_axi_arlen[1:0]),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_bid(s_axi_bid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rid(s_axi_rid),
        .s_axi_rlast(s_axi_rlast),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wlast(s_axi_wlast),
        .s_axi_wready(s_axi_wready),
        .s_axi_wready_i_reg(\gen_endpoint.decerr_slave_inst_n_6 ),
        .s_axi_wvalid(s_axi_wvalid),
        .sr_axi_arvalid(sr_axi_arvalid));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_endpoint.r_cnt[0]_i_1 
       (.I0(\gen_endpoint.r_cnt_reg [0]),
        .O(\gen_endpoint.r_cnt[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000800)) 
    \gen_endpoint.r_cnt[4]_i_4 
       (.I0(m_axi_rlast),
        .I1(m_axi_rvalid),
        .I2(\gen_endpoint.decerr_slave_inst_n_4 ),
        .I3(s_axi_rready),
        .I4(\gen_endpoint.r_state[0]_i_2_n_0 ),
        .O(\gen_endpoint.r_cnt[4]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.r_cnt_reg[0] 
       (.C(aclk),
        .CE(ar_reg_stall_n_12),
        .D(\gen_endpoint.r_cnt[0]_i_1_n_0 ),
        .Q(\gen_endpoint.r_cnt_reg [0]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.r_cnt_reg[1] 
       (.C(aclk),
        .CE(ar_reg_stall_n_12),
        .D(ar_reg_stall_n_16),
        .Q(\gen_endpoint.r_cnt_reg [1]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.r_cnt_reg[2] 
       (.C(aclk),
        .CE(ar_reg_stall_n_12),
        .D(ar_reg_stall_n_15),
        .Q(\gen_endpoint.r_cnt_reg [2]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.r_cnt_reg[3] 
       (.C(aclk),
        .CE(ar_reg_stall_n_12),
        .D(ar_reg_stall_n_14),
        .Q(\gen_endpoint.r_cnt_reg [3]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.r_cnt_reg[4] 
       (.C(aclk),
        .CE(ar_reg_stall_n_12),
        .D(ar_reg_stall_n_13),
        .Q(\gen_endpoint.r_cnt_reg [4]),
        .R(areset));
  LUT3 #(
    .INIT(8'h08)) 
    \gen_endpoint.r_resume_i_1 
       (.I0(\gen_endpoint.r_state[0]_i_2_n_0 ),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .O(\gen_endpoint.r_resume_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.r_resume_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_endpoint.r_resume_i_1_n_0 ),
        .Q(r_resume),
        .R(areset));
  LUT5 #(
    .INIT(32'h00000001)) 
    \gen_endpoint.r_state[0]_i_2 
       (.I0(\gen_endpoint.r_cnt_reg [3]),
        .I1(\gen_endpoint.r_cnt_reg [2]),
        .I2(\gen_endpoint.r_cnt_reg [1]),
        .I3(\gen_endpoint.r_cnt_reg [0]),
        .I4(\gen_endpoint.r_cnt_reg [4]),
        .O(\gen_endpoint.r_state[0]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.r_state_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(ar_reg_stall_n_0),
        .Q(\gen_endpoint.r_state [0]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.r_state_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(ar_reg_stall_n_2),
        .Q(\gen_endpoint.r_state [1]),
        .R(areset));
  (* \PinAttr:I0:HOLD_DETOUR  = "195" *) 
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gen_endpoint.w_cnt[0]_i_1 
       (.I0(\gen_endpoint.w_cnt_reg [0]),
        .O(\gen_endpoint.w_cnt[0]_i_1_n_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "195" *) 
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gen_endpoint.w_cnt[1]_i_1 
       (.I0(\gen_endpoint.w_cnt_reg [0]),
        .I1(\gen_endpoint.w_cnt1 ),
        .I2(\gen_endpoint.w_cnt_reg [1]),
        .O(\gen_endpoint.w_cnt[1]_i_1_n_0 ));
  (* \PinAttr:I1:HOLD_DETOUR  = "199" *) 
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'h78E1)) 
    \gen_endpoint.w_cnt[2]_i_1 
       (.I0(\gen_endpoint.w_cnt1 ),
        .I1(\gen_endpoint.w_cnt_reg [0]),
        .I2(\gen_endpoint.w_cnt_reg [2]),
        .I3(\gen_endpoint.w_cnt_reg [1]),
        .O(\gen_endpoint.w_cnt[2]_i_1_n_0 ));
  (* \PinAttr:I2:HOLD_DETOUR  = "199" *) 
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h7F80FE01)) 
    \gen_endpoint.w_cnt[3]_i_1 
       (.I0(\gen_endpoint.w_cnt_reg [1]),
        .I1(\gen_endpoint.w_cnt1 ),
        .I2(\gen_endpoint.w_cnt_reg [0]),
        .I3(\gen_endpoint.w_cnt_reg [3]),
        .I4(\gen_endpoint.w_cnt_reg [2]),
        .O(\gen_endpoint.w_cnt[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_endpoint.w_cnt[4]_i_1 
       (.I0(p_14_in),
        .I1(\gen_endpoint.w_enable_i_3_n_0 ),
        .O(\gen_endpoint.w_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAA9)) 
    \gen_endpoint.w_cnt[4]_i_2 
       (.I0(\gen_endpoint.w_cnt_reg [4]),
        .I1(\gen_endpoint.w_cnt_reg [3]),
        .I2(\gen_endpoint.w_cnt_reg [2]),
        .I3(\gen_endpoint.w_cnt_reg [1]),
        .I4(\gen_endpoint.w_cnt1 ),
        .I5(\gen_endpoint.w_cnt_reg [0]),
        .O(\gen_endpoint.w_cnt[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \gen_endpoint.w_cnt[4]_i_3 
       (.I0(\gen_endpoint.w_push_done_reg_n_0 ),
        .I1(\gen_endpoint.w_enable_i_5_n_0 ),
        .I2(\gen_endpoint.w_trigger_decerr ),
        .I3(\gen_endpoint.w_enable_i_3_n_0 ),
        .O(\gen_endpoint.w_cnt1 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.w_cnt_reg[0] 
       (.C(aclk),
        .CE(\gen_endpoint.w_cnt[4]_i_1_n_0 ),
        .D(\gen_endpoint.w_cnt[0]_i_1_n_0 ),
        .Q(\gen_endpoint.w_cnt_reg [0]),
        .R(areset_d));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.w_cnt_reg[1] 
       (.C(aclk),
        .CE(\gen_endpoint.w_cnt[4]_i_1_n_0 ),
        .D(\gen_endpoint.w_cnt[1]_i_1_n_0 ),
        .Q(\gen_endpoint.w_cnt_reg [1]),
        .R(areset_d));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.w_cnt_reg[2] 
       (.C(aclk),
        .CE(\gen_endpoint.w_cnt[4]_i_1_n_0 ),
        .D(\gen_endpoint.w_cnt[2]_i_1_n_0 ),
        .Q(\gen_endpoint.w_cnt_reg [2]),
        .R(areset_d));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.w_cnt_reg[3] 
       (.C(aclk),
        .CE(\gen_endpoint.w_cnt[4]_i_1_n_0 ),
        .D(\gen_endpoint.w_cnt[3]_i_1_n_0 ),
        .Q(\gen_endpoint.w_cnt_reg [3]),
        .R(areset_d));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.w_cnt_reg[4] 
       (.C(aclk),
        .CE(\gen_endpoint.w_cnt[4]_i_1_n_0 ),
        .D(\gen_endpoint.w_cnt[4]_i_2_n_0 ),
        .Q(\gen_endpoint.w_cnt_reg [4]),
        .R(areset_d));
  LUT6 #(
    .INIT(64'h00000000BE8EBEBE)) 
    \gen_endpoint.w_enable_i_1 
       (.I0(\gen_endpoint.w_enable_reg_n_0 ),
        .I1(p_14_in),
        .I2(\gen_endpoint.w_enable_i_3_n_0 ),
        .I3(\gen_endpoint.w_enable_i_4_n_0 ),
        .I4(\gen_endpoint.w_cnt_reg [0]),
        .I5(areset_d),
        .O(\gen_endpoint.w_enable_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \gen_endpoint.w_enable_i_2 
       (.I0(\gen_endpoint.w_trigger_decerr ),
        .I1(\gen_endpoint.w_enable_i_5_n_0 ),
        .I2(\gen_endpoint.w_push_done_reg_n_0 ),
        .O(p_14_in));
  LUT4 #(
    .INIT(16'h4000)) 
    \gen_endpoint.w_enable_i_3 
       (.I0(\gen_endpoint.w_resume_i_2_n_0 ),
        .I1(m_axi_wready),
        .I2(s_axi_wlast),
        .I3(s_axi_wvalid),
        .O(\gen_endpoint.w_enable_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_endpoint.w_enable_i_4 
       (.I0(\gen_endpoint.w_cnt_reg [3]),
        .I1(\gen_endpoint.w_cnt_reg [2]),
        .I2(\gen_endpoint.w_cnt_reg [1]),
        .I3(\gen_endpoint.w_cnt_reg [4]),
        .O(\gen_endpoint.w_enable_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \gen_endpoint.w_enable_i_5 
       (.I0(\gen_endpoint.w_cnt_reg [4]),
        .I1(\gen_endpoint.b_cnt_reg [4]),
        .I2(\gen_endpoint.w_state [1]),
        .I3(\gen_endpoint.w_state [0]),
        .I4(s_axi_awvalid),
        .O(\gen_endpoint.w_enable_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.w_enable_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_endpoint.w_enable_i_1_n_0 ),
        .Q(\gen_endpoint.w_enable_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.w_push_done_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_wroute_fifo.wroute_split_n_4 ),
        .Q(\gen_endpoint.w_push_done_reg_n_0 ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0200)) 
    \gen_endpoint.w_resume_i_1 
       (.I0(\gen_endpoint.w_resume_i_2_n_0 ),
        .I1(\gen_endpoint.b_cnt[4]_i_3_n_0 ),
        .I2(\gen_endpoint.w_state [0]),
        .I3(\gen_endpoint.w_state [1]),
        .O(\gen_endpoint.w_resume_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \gen_endpoint.w_resume_i_2 
       (.I0(\gen_endpoint.w_cnt_reg [0]),
        .I1(\gen_endpoint.w_cnt_reg [4]),
        .I2(\gen_endpoint.w_cnt_reg [1]),
        .I3(\gen_endpoint.w_cnt_reg [2]),
        .I4(\gen_endpoint.w_cnt_reg [3]),
        .O(\gen_endpoint.w_resume_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.w_resume_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_endpoint.w_resume_i_1_n_0 ),
        .Q(w_resume),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.w_state_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_endpoint.decerr_slave_inst_n_2 ),
        .Q(\gen_endpoint.w_state [0]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \gen_endpoint.w_state_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_wroute_fifo.wroute_split_n_0 ),
        .Q(\gen_endpoint.w_state [1]),
        .R(areset));
  design_1_axi_smc_0_sc_util_v1_0_4_axic_reg_srl_fifo \gen_wroute_fifo.wroute_fifo 
       (.aclk(aclk),
        .areset(areset),
        .\gen_pipelined.state_reg[1]_0 (\gen_wroute_fifo.wroute_split_n_3 ),
        .\gen_pipelined.state_reg[2]_0 (\gen_endpoint.decerr_slave_inst_n_6 ),
        .\gen_pipelined.state_reg[2]_1 (\gen_wroute_fifo.wroute_split_n_2 ),
        .m_axi_wuser(m_axi_wuser[2]),
        .s_axi_awvalid(s_axi_awvalid),
        .wroute_vacancy(wroute_vacancy));
  design_1_axi_smc_0_sc_util_v1_0_4_axi_splitter \gen_wroute_fifo.wroute_split 
       (.Q(\gen_endpoint.b_cnt_reg [4]),
        .S00_AXI_awready(aw_reg_stall_n_3),
        .S00_AXI_awvalid(\gen_wroute_fifo.wroute_split_n_1 ),
        .S00_AXI_awvalid_0(\gen_wroute_fifo.wroute_split_n_2 ),
        .SR(areset_d),
        .aclk(aclk),
        .areset(areset),
        .areset_d_reg(\gen_wroute_fifo.wroute_split_n_4 ),
        .\gen_axi.gen_write.s_axi_bid_i_reg[0] (\gen_endpoint.w_cnt_reg [4]),
        .\gen_endpoint.w_push_done_reg (\gen_endpoint.w_push_done_reg_n_0 ),
        .\gen_endpoint.w_state (\gen_endpoint.w_state ),
        .\gen_endpoint.w_state_reg[0] (\gen_wroute_fifo.wroute_split_n_0 ),
        .\gen_endpoint.w_state_reg[1] (\gen_endpoint.decerr_slave_inst_n_3 ),
        .\gen_endpoint.w_state_reg[1]_0 (\gen_endpoint.w_resume_i_1_n_0 ),
        .\gen_endpoint.w_trigger_decerr (\gen_endpoint.w_trigger_decerr ),
        .\m_ready_d_reg[0]_0 (\gen_wroute_fifo.wroute_split_n_3 ),
        .\m_ready_d_reg[0]_1 (s_axi_awready),
        .\m_ready_d_reg[1]_0 (\gen_wroute_fifo.wroute_split_n_6 ),
        .mr_axi_awvalid(mr_axi_awvalid),
        .p_14_in(p_14_in),
        .s_axi_awvalid(s_axi_awvalid),
        .wroute_vacancy(wroute_vacancy));
  LUT4 #(
    .INIT(16'h0888)) 
    m_axi_wvalid_INST_0
       (.I0(\gen_endpoint.w_enable_reg_n_0 ),
        .I1(s_axi_wvalid),
        .I2(\gen_endpoint.w_state [0]),
        .I3(\gen_endpoint.w_state [1]),
        .O(m_axi_wvalid));
  LUT3 #(
    .INIT(8'hEA)) 
    \s_axi_bresp[0]_INST_0 
       (.I0(m_axi_bresp[0]),
        .I1(\gen_endpoint.w_state [0]),
        .I2(\gen_endpoint.w_state [1]),
        .O(s_axi_bresp[0]));
  LUT3 #(
    .INIT(8'hEA)) 
    \s_axi_bresp[1]_INST_0 
       (.I0(m_axi_bresp[1]),
        .I1(\gen_endpoint.w_state [0]),
        .I2(\gen_endpoint.w_state [1]),
        .O(s_axi_bresp[1]));
  LUT3 #(
    .INIT(8'hEA)) 
    \s_axi_rdata[0]_INST_0 
       (.I0(m_axi_rdata[0]),
        .I1(\gen_endpoint.r_state [0]),
        .I2(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [0]));
  LUT3 #(
    .INIT(8'hEA)) 
    \s_axi_rdata[10]_INST_0 
       (.I0(m_axi_rdata[10]),
        .I1(\gen_endpoint.r_state [0]),
        .I2(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [10]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[11]_INST_0 
       (.I0(\gen_endpoint.r_state [0]),
        .I1(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [11]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[12]_INST_0 
       (.I0(\gen_endpoint.r_state [0]),
        .I1(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [12]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[14]_INST_0 
       (.I0(\gen_endpoint.r_state [0]),
        .I1(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [14]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[15]_INST_0 
       (.I0(\gen_endpoint.r_state [0]),
        .I1(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [15]));
  LUT3 #(
    .INIT(8'hEA)) 
    \s_axi_rdata[1]_INST_0 
       (.I0(m_axi_rdata[1]),
        .I1(\gen_endpoint.r_state [0]),
        .I2(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [1]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[22]_INST_0 
       (.I0(\gen_endpoint.r_state [0]),
        .I1(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [22]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[23]_INST_0 
       (.I0(\gen_endpoint.r_state [0]),
        .I1(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [23]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[25]_INST_0 
       (.I0(\gen_endpoint.r_state [0]),
        .I1(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [25]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[26]_INST_0 
       (.I0(\gen_endpoint.r_state [0]),
        .I1(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [26]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[27]_INST_0 
       (.I0(\gen_endpoint.r_state [0]),
        .I1(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [27]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[28]_INST_0 
       (.I0(\gen_endpoint.r_state [0]),
        .I1(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [28]));
  LUT3 #(
    .INIT(8'h2A)) 
    \s_axi_rdata[2]_INST_0 
       (.I0(m_axi_rdata[2]),
        .I1(\gen_endpoint.r_state [0]),
        .I2(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [2]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[30]_INST_0 
       (.I0(\gen_endpoint.r_state [0]),
        .I1(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [30]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[31]_INST_0 
       (.I0(\gen_endpoint.r_state [0]),
        .I1(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [31]));
  LUT3 #(
    .INIT(8'h2A)) 
    \s_axi_rdata[3]_INST_0 
       (.I0(m_axi_rdata[3]),
        .I1(\gen_endpoint.r_state [0]),
        .I2(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [3]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h2A)) 
    \s_axi_rdata[4]_INST_0 
       (.I0(m_axi_rdata[4]),
        .I1(\gen_endpoint.r_state [0]),
        .I2(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [4]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \s_axi_rdata[5]_INST_0 
       (.I0(m_axi_rdata[5]),
        .I1(\gen_endpoint.r_state [0]),
        .I2(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [5]));
  LUT3 #(
    .INIT(8'hEA)) 
    \s_axi_rdata[6]_INST_0 
       (.I0(m_axi_rdata[6]),
        .I1(\gen_endpoint.r_state [0]),
        .I2(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [6]));
  LUT3 #(
    .INIT(8'hEA)) 
    \s_axi_rdata[7]_INST_0 
       (.I0(m_axi_rdata[7]),
        .I1(\gen_endpoint.r_state [0]),
        .I2(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [7]));
  LUT3 #(
    .INIT(8'h2A)) 
    \s_axi_rdata[8]_INST_0 
       (.I0(m_axi_rdata[8]),
        .I1(\gen_endpoint.r_state [0]),
        .I2(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [8]));
  LUT3 #(
    .INIT(8'hEA)) 
    \s_axi_rdata[9]_INST_0 
       (.I0(m_axi_rdata[9]),
        .I1(\gen_endpoint.r_state [0]),
        .I2(\gen_endpoint.r_state [1]),
        .O(\^s_axi_rdata [9]));
  LUT3 #(
    .INIT(8'hEA)) 
    \s_axi_rresp[0]_INST_0 
       (.I0(m_axi_rresp[0]),
        .I1(\gen_endpoint.r_state [0]),
        .I2(\gen_endpoint.r_state [1]),
        .O(s_axi_rresp[0]));
  LUT3 #(
    .INIT(8'hEA)) 
    \s_axi_rresp[1]_INST_0 
       (.I0(m_axi_rresp[1]),
        .I1(\gen_endpoint.r_state [0]),
        .I2(\gen_endpoint.r_state [1]),
        .O(s_axi_rresp[1]));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_arb_alg_rr" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_arb_alg_rr
   (\grant_i_reg[1]_0 ,
    E,
    s_sc_aclk,
    \grant_i_reg[1]_1 ,
    \grant_i_reg[1]_2 ,
    areset_r,
    s_sc_send);
  output \grant_i_reg[1]_0 ;
  output [0:0]E;
  input s_sc_aclk;
  input [0:0]\grant_i_reg[1]_1 ;
  input \grant_i_reg[1]_2 ;
  input areset_r;
  input [0:0]s_sc_send;

  wire [0:0]E;
  wire areset_r;
  wire \grant_i[1]_i_1_n_0 ;
  wire \grant_i_reg[1]_0 ;
  wire [0:0]\grant_i_reg[1]_1 ;
  wire \grant_i_reg[1]_2 ;
  wire p_2_in;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  LUT2 #(
    .INIT(4'h8)) 
    \gen_single_rank.data[52]_i_1 
       (.I0(s_sc_send),
        .I1(\grant_i_reg[1]_0 ),
        .O(E));
  LUT4 #(
    .INIT(16'h0008)) 
    \grant_i[1]_i_1 
       (.I0(p_2_in),
        .I1(\grant_i_reg[1]_1 ),
        .I2(\grant_i_reg[1]_2 ),
        .I3(areset_r),
        .O(\grant_i[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \grant_i_reg[1] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\grant_i[1]_i_1_n_0 ),
        .Q(\grant_i_reg[1]_0 ),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    \last_grant_reg[1] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(p_2_in),
        .Q(p_2_in),
        .S(areset_r));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_arb_alg_rr" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_arb_alg_rr_2
   (\grant_i_reg[1]_0 ,
    s_sc_handshake,
    s_sc_aclk,
    \grant_i_reg[1]_1 ,
    \grant_i_reg[1]_2 ,
    areset_r,
    s_sc_send);
  output \grant_i_reg[1]_0 ;
  output [0:0]s_sc_handshake;
  input s_sc_aclk;
  input [0:0]\grant_i_reg[1]_1 ;
  input \grant_i_reg[1]_2 ;
  input areset_r;
  input [0:0]s_sc_send;

  wire areset_r;
  wire \grant_i[1]_i_1_n_0 ;
  wire \grant_i_reg[1]_0 ;
  wire [0:0]\grant_i_reg[1]_1 ;
  wire \grant_i_reg[1]_2 ;
  wire p_2_in;
  wire s_sc_aclk;
  wire [0:0]s_sc_handshake;
  wire [0:0]s_sc_send;

  LUT4 #(
    .INIT(16'h0008)) 
    \grant_i[1]_i_1 
       (.I0(p_2_in),
        .I1(\grant_i_reg[1]_1 ),
        .I2(\grant_i_reg[1]_2 ),
        .I3(areset_r),
        .O(\grant_i[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \grant_i_reg[1] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\grant_i[1]_i_1_n_0 ),
        .Q(\grant_i_reg[1]_0 ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    is_zero_r_i_2
       (.I0(s_sc_send),
        .I1(\grant_i_reg[1]_0 ),
        .O(s_sc_handshake));
  FDSE #(
    .INIT(1'b1)) 
    \last_grant_reg[1] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(p_2_in),
        .Q(p_2_in),
        .S(areset_r));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_fi_regulator" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator
   (arb_stall,
    s_sc_aclk,
    \gen_normal_area.fifo_node_payld_full_i );
  output arb_stall;
  input s_sc_aclk;
  input \gen_normal_area.fifo_node_payld_full_i ;

  wire allow_transfer_r_i_1_n_0;
  wire arb_stall;
  wire [1:0]delay;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire s_sc_aclk;

  (* \PinAttr:I2:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'h01)) 
    allow_transfer_r_i_1
       (.I0(\gen_normal_area.fifo_node_payld_full_i ),
        .I1(delay[1]),
        .I2(delay[0]),
        .O(allow_transfer_r_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    allow_transfer_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(allow_transfer_r_i_1_n_0),
        .Q(delay[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_delay.delay_reg[1] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(delay[0]),
        .Q(delay[1]),
        .R(1'b0));
  (* \PinAttr:I0:HOLD_DETOUR  = "190" *) 
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pipe[1].pipe[1][0]_i_1 
       (.I0(delay[0]),
        .O(arb_stall));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_fi_regulator" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_0
   (allow_transfer_r_reg_0,
    s_sc_aclk,
    \gen_normal_area.fifo_node_payld_full_i );
  output [0:0]allow_transfer_r_reg_0;
  input s_sc_aclk;
  input \gen_normal_area.fifo_node_payld_full_i ;

  wire allow_transfer_r_i_1_n_0;
  wire [0:0]allow_transfer_r_reg_0;
  wire [1:1]delay;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire s_sc_aclk;

  LUT3 #(
    .INIT(8'h01)) 
    allow_transfer_r_i_1
       (.I0(\gen_normal_area.fifo_node_payld_full_i ),
        .I1(delay),
        .I2(allow_transfer_r_reg_0),
        .O(allow_transfer_r_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    allow_transfer_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(allow_transfer_r_i_1_n_0),
        .Q(allow_transfer_r_reg_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_delay.delay_reg[1] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(allow_transfer_r_reg_0),
        .Q(delay),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_fi_regulator" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_10
   (arb_stall,
    s_sc_aclk,
    \gen_normal_area.fifo_node_payld_full_i );
  output arb_stall;
  input s_sc_aclk;
  input \gen_normal_area.fifo_node_payld_full_i ;

  wire allow_transfer_r_i_1_n_0;
  wire arb_stall;
  wire [1:0]delay;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire s_sc_aclk;

  (* \PinAttr:I2:HOLD_DETOUR  = "189" *) 
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'h01)) 
    allow_transfer_r_i_1
       (.I0(\gen_normal_area.fifo_node_payld_full_i ),
        .I1(delay[1]),
        .I2(delay[0]),
        .O(allow_transfer_r_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    allow_transfer_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(allow_transfer_r_i_1_n_0),
        .Q(delay[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_delay.delay_reg[1] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(delay[0]),
        .Q(delay[1]),
        .R(1'b0));
  (* \PinAttr:I0:HOLD_DETOUR  = "189" *) 
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pipe[1].pipe[1][0]_i_1 
       (.I0(delay[0]),
        .O(arb_stall));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_fi_regulator" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_4
   (allow_transfer_r_reg_0,
    s_sc_aclk,
    \gen_normal_area.fifo_node_payld_full_i );
  output [0:0]allow_transfer_r_reg_0;
  input s_sc_aclk;
  input \gen_normal_area.fifo_node_payld_full_i ;

  wire allow_transfer_r_i_1_n_0;
  wire [0:0]allow_transfer_r_reg_0;
  wire [1:1]delay;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire s_sc_aclk;

  LUT3 #(
    .INIT(8'h01)) 
    allow_transfer_r_i_1
       (.I0(\gen_normal_area.fifo_node_payld_full_i ),
        .I1(delay),
        .I2(allow_transfer_r_reg_0),
        .O(allow_transfer_r_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    allow_transfer_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(allow_transfer_r_i_1_n_0),
        .Q(allow_transfer_r_reg_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_delay.delay_reg[1] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(allow_transfer_r_reg_0),
        .Q(delay),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_fi_regulator" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_7
   (arb_stall,
    s_sc_aclk,
    \gen_normal_area.fifo_node_payld_full_i );
  output arb_stall;
  input s_sc_aclk;
  input \gen_normal_area.fifo_node_payld_full_i ;

  wire allow_transfer_r_i_1_n_0;
  wire arb_stall;
  wire [1:0]delay;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire s_sc_aclk;

  (* \PinAttr:I2:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'h01)) 
    allow_transfer_r_i_1
       (.I0(\gen_normal_area.fifo_node_payld_full_i ),
        .I1(delay[1]),
        .I2(delay[0]),
        .O(allow_transfer_r_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    allow_transfer_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(allow_transfer_r_i_1_n_0),
        .Q(delay[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_delay.delay_reg[1] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(delay[0]),
        .Q(delay[1]),
        .R(1'b0));
  (* \PinAttr:I0:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pipe[1].pipe[1][0]_i_1 
       (.I0(delay[0]),
        .O(arb_stall));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_fifo" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_fifo
   (\gen_normal_area.fifo_node_payld_full_i ,
    m_sc_send,
    m_sc_payld,
    s_sc_aclk,
    m_sc_recv,
    E,
    areset_r,
    arb_stall_late,
    s_sc_send,
    m_sc_areset_r,
    s_sc_payld);
  output \gen_normal_area.fifo_node_payld_full_i ;
  output [0:0]m_sc_send;
  output [10:0]m_sc_payld;
  input s_sc_aclk;
  input [0:0]m_sc_recv;
  input [0:0]E;
  input areset_r;
  input arb_stall_late;
  input [0:0]s_sc_send;
  input m_sc_areset_r;
  input [10:0]s_sc_payld;

  wire [0:0]E;
  wire arb_stall_late;
  wire areset_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire m_sc_areset_r;
  wire [10:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_send;
  wire s_sc_aclk;
  wire [10:0]s_sc_payld;
  wire [0:0]s_sc_send;
  wire [10:0]\NLW_gen_reg_fifo.inst_reg_fifo_m_sc_payld_UNCONNECTED ;
  wire [10:0]\NLW_gen_reg_fifo.inst_reg_fifo_s_sc_payld_UNCONNECTED ;

  design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo \gen_reg_fifo.inst_reg_fifo 
       (.E(E),
        .arb_stall_late(arb_stall_late),
        .areset_r(areset_r),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .m_sc_areset_r(m_sc_areset_r),
        .m_sc_payld({\NLW_gen_reg_fifo.inst_reg_fifo_m_sc_payld_UNCONNECTED [10:8],m_sc_payld[7:2],\NLW_gen_reg_fifo.inst_reg_fifo_m_sc_payld_UNCONNECTED [1:0]}),
        .m_sc_recv(m_sc_recv),
        .m_sc_send(m_sc_send),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_payld({\NLW_gen_reg_fifo.inst_reg_fifo_s_sc_payld_UNCONNECTED [10:8],s_sc_payld[7:2],\NLW_gen_reg_fifo.inst_reg_fifo_s_sc_payld_UNCONNECTED [1:0]}),
        .s_sc_send(s_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_fifo" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_fifo_11
   (\gen_normal_area.fifo_node_payld_full_i ,
    m_sc_send,
    m_sc_payld,
    s_sc_aclk,
    s_sc_send,
    arb_stall_late,
    areset_r,
    E,
    m_sc_recv,
    m_sc_areset_r,
    s_sc_payld);
  output \gen_normal_area.fifo_node_payld_full_i ;
  output [0:0]m_sc_send;
  output [10:0]m_sc_payld;
  input s_sc_aclk;
  input [0:0]s_sc_send;
  input arb_stall_late;
  input areset_r;
  input [0:0]E;
  input [0:0]m_sc_recv;
  input m_sc_areset_r;
  input [11:0]s_sc_payld;

  wire [0:0]E;
  wire arb_stall_late;
  wire areset_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire m_sc_areset_r;
  wire [10:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_send;
  wire s_sc_aclk;
  wire [11:0]s_sc_payld;
  wire [0:0]s_sc_send;
  wire [10:0]\NLW_gen_reg_fifo.inst_reg_fifo_m_sc_payld_UNCONNECTED ;
  wire [11:1]\NLW_gen_reg_fifo.inst_reg_fifo_s_sc_payld_UNCONNECTED ;

  design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo_12 \gen_reg_fifo.inst_reg_fifo 
       (.E(E),
        .arb_stall_late(arb_stall_late),
        .areset_r(areset_r),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .m_sc_areset_r(m_sc_areset_r),
        .m_sc_payld({\NLW_gen_reg_fifo.inst_reg_fifo_m_sc_payld_UNCONNECTED [10:8],m_sc_payld[7:2],\NLW_gen_reg_fifo.inst_reg_fifo_m_sc_payld_UNCONNECTED [1:0]}),
        .m_sc_recv(m_sc_recv),
        .m_sc_send(m_sc_send),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_payld({\NLW_gen_reg_fifo.inst_reg_fifo_s_sc_payld_UNCONNECTED [11:9],s_sc_payld[8:3],\NLW_gen_reg_fifo.inst_reg_fifo_s_sc_payld_UNCONNECTED [2:1],s_sc_payld[0]}),
        .s_sc_send(s_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_fifo" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized0
   (\gen_normal_area.fifo_node_payld_full_i ,
    m_sc_send,
    m_sc_payld,
    s_sc_aclk,
    m_sc_recv,
    s_sc_handshake,
    areset_r,
    \gen_single_rank.empty_r_reg ,
    s_sc_send,
    m_sc_areset_r,
    s_sc_payld);
  output \gen_normal_area.fifo_node_payld_full_i ;
  output [0:0]m_sc_send;
  output [1:0]m_sc_payld;
  input s_sc_aclk;
  input [0:0]m_sc_recv;
  input [0:0]s_sc_handshake;
  input areset_r;
  input \gen_single_rank.empty_r_reg ;
  input [0:0]s_sc_send;
  input m_sc_areset_r;
  input [1:0]s_sc_payld;

  wire areset_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire \gen_single_rank.empty_r_reg ;
  wire m_sc_areset_r;
  wire [1:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_send;
  wire s_sc_aclk;
  wire [0:0]s_sc_handshake;
  wire [0:0]s_sc_send;
  wire [1:0]\NLW_gen_reg_fifo.inst_reg_fifo_s_sc_payld_UNCONNECTED ;

  design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized0 \gen_reg_fifo.inst_reg_fifo 
       (.areset_r(areset_r),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .\gen_single_rank.empty_r_reg_0 (\gen_single_rank.empty_r_reg ),
        .m_sc_areset_r(m_sc_areset_r),
        .m_sc_payld(m_sc_payld),
        .m_sc_recv(m_sc_recv),
        .m_sc_send(m_sc_send),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_handshake(s_sc_handshake),
        .s_sc_payld(\NLW_gen_reg_fifo.inst_reg_fifo_s_sc_payld_UNCONNECTED [1:0]),
        .s_sc_send(s_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_fifo" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized1
   (\gen_normal_area.fifo_node_payld_full_i ,
    m_sc_send,
    m_sc_payld,
    s_sc_aclk,
    m_sc_recv,
    E,
    areset_r,
    \gen_single_rank.empty_r_reg ,
    s_sc_send,
    m_sc_areset_r,
    s_sc_payld);
  output \gen_normal_area.fifo_node_payld_full_i ;
  output [0:0]m_sc_send;
  output [33:0]m_sc_payld;
  input s_sc_aclk;
  input [0:0]m_sc_recv;
  input [0:0]E;
  input areset_r;
  input \gen_single_rank.empty_r_reg ;
  input [0:0]s_sc_send;
  input m_sc_areset_r;
  input [33:0]s_sc_payld;

  wire [0:0]E;
  wire areset_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire \gen_single_rank.empty_r_reg ;
  wire m_sc_areset_r;
  wire [33:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_send;
  wire s_sc_aclk;
  wire [33:0]s_sc_payld;
  wire [0:0]s_sc_send;
  wire [33:0]\NLW_gen_reg_fifo.inst_reg_fifo_m_sc_payld_UNCONNECTED ;
  wire [33:0]\NLW_gen_reg_fifo.inst_reg_fifo_s_sc_payld_UNCONNECTED ;

  design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized1 \gen_reg_fifo.inst_reg_fifo 
       (.E(E),
        .areset_r(areset_r),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .\gen_single_rank.empty_r_reg_0 (\gen_single_rank.empty_r_reg ),
        .m_sc_areset_r(m_sc_areset_r),
        .m_sc_payld({\NLW_gen_reg_fifo.inst_reg_fifo_m_sc_payld_UNCONNECTED [33:13],m_sc_payld[12:2],\NLW_gen_reg_fifo.inst_reg_fifo_m_sc_payld_UNCONNECTED [1:0]}),
        .m_sc_recv(m_sc_recv),
        .m_sc_send(m_sc_send),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_payld({\NLW_gen_reg_fifo.inst_reg_fifo_s_sc_payld_UNCONNECTED [33:13],s_sc_payld[12:2],\NLW_gen_reg_fifo.inst_reg_fifo_s_sc_payld_UNCONNECTED [1:0]}),
        .s_sc_send(s_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_fifo" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized2
   (\gen_normal_area.fifo_node_payld_full_i ,
    m_sc_send,
    m_sc_payld,
    s_sc_aclk,
    s_sc_send,
    arb_stall_late,
    areset_r,
    E,
    m_sc_recv,
    m_sc_areset_r,
    s_sc_payld);
  output \gen_normal_area.fifo_node_payld_full_i ;
  output [0:0]m_sc_send;
  output [35:0]m_sc_payld;
  input s_sc_aclk;
  input [0:0]s_sc_send;
  input arb_stall_late;
  input areset_r;
  input [0:0]E;
  input [0:0]m_sc_recv;
  input m_sc_areset_r;
  input [36:0]s_sc_payld;

  wire [0:0]E;
  wire arb_stall_late;
  wire areset_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire m_sc_areset_r;
  wire [35:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_send;
  wire s_sc_aclk;
  wire [36:0]s_sc_payld;
  wire [0:0]s_sc_send;
  wire [35:0]\NLW_gen_reg_fifo.inst_reg_fifo_m_sc_payld_UNCONNECTED ;
  wire [36:1]\NLW_gen_reg_fifo.inst_reg_fifo_s_sc_payld_UNCONNECTED ;

  design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized2 \gen_reg_fifo.inst_reg_fifo 
       (.E(E),
        .arb_stall_late(arb_stall_late),
        .areset_r(areset_r),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .m_sc_areset_r(m_sc_areset_r),
        .m_sc_payld({\NLW_gen_reg_fifo.inst_reg_fifo_m_sc_payld_UNCONNECTED [35:2],m_sc_payld[1],\NLW_gen_reg_fifo.inst_reg_fifo_m_sc_payld_UNCONNECTED [0]}),
        .m_sc_recv(m_sc_recv),
        .m_sc_send(m_sc_send),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_payld({\NLW_gen_reg_fifo.inst_reg_fifo_s_sc_payld_UNCONNECTED [36:3],s_sc_payld[2],\NLW_gen_reg_fifo.inst_reg_fifo_s_sc_payld_UNCONNECTED [1],s_sc_payld[0]}),
        .s_sc_send(s_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_mi_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_mi_handler
   (m_sc_send,
    out,
    s_sc_aclk,
    s_sc_send);
  output [0:0]m_sc_send;
  input out;
  input s_sc_aclk;
  input [0:0]s_sc_send;

  wire areset_r;
  wire [0:0]m_sc_send;
  wire out;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \m_sc_send[0]_INST_0 
       (.I0(s_sc_send),
        .I1(areset_r),
        .O(m_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_mi_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized0
   (m_sc_send,
    out,
    s_sc_aclk,
    s_sc_send);
  output [0:0]m_sc_send;
  input out;
  input s_sc_aclk;
  input [0:0]s_sc_send;

  wire areset_r;
  wire [0:0]m_sc_send;
  wire out;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \m_sc_send[0]_INST_0 
       (.I0(s_sc_send),
        .I1(areset_r),
        .O(m_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_mi_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized1
   (m_sc_send,
    m_sc_req,
    out,
    s_sc_aclk,
    s_sc_send,
    m_sc_recv);
  output [0:0]m_sc_send;
  output [0:0]m_sc_req;
  input out;
  input s_sc_aclk;
  input [0:0]s_sc_send;
  input [0:0]m_sc_recv;

  wire areset_r;
  wire \gen_minimal_area.req_mask ;
  wire \gen_minimal_area.req_mask[0]_i_1_n_0 ;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_req;
  wire [0:0]m_sc_send;
  wire out;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hEF)) 
    \gen_minimal_area.req_mask[0]_i_1 
       (.I0(m_sc_recv),
        .I1(areset_r),
        .I2(s_sc_send),
        .O(\gen_minimal_area.req_mask[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_minimal_area.req_mask_reg[0] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\gen_minimal_area.req_mask[0]_i_1_n_0 ),
        .Q(\gen_minimal_area.req_mask ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h20)) 
    \m_sc_req[0]_INST_0 
       (.I0(\gen_minimal_area.req_mask ),
        .I1(areset_r),
        .I2(s_sc_send),
        .O(m_sc_req));
  LUT2 #(
    .INIT(4'h2)) 
    \m_sc_send[0]_INST_0 
       (.I0(s_sc_send),
        .I1(areset_r),
        .O(m_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_mi_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized10
   (m_sc_send,
    arb_stall,
    m_sc_payld,
    out,
    s_sc_aclk,
    m_sc_areset_r_reg_0,
    m_sc_recv,
    E,
    arb_stall_late,
    s_sc_send,
    s_sc_payld);
  output [0:0]m_sc_send;
  output arb_stall;
  output [10:0]m_sc_payld;
  input out;
  input s_sc_aclk;
  input m_sc_areset_r_reg_0;
  input [0:0]m_sc_recv;
  input [0:0]E;
  input arb_stall_late;
  input [0:0]s_sc_send;
  input [10:0]s_sc_payld;

  wire [0:0]E;
  wire arb_stall;
  wire arb_stall_late;
  wire areset_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire m_sc_areset_r;
  wire m_sc_areset_r_reg_0;
  wire [10:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_send;
  wire out;
  wire s_sc_aclk;
  wire [10:0]s_sc_payld;
  wire [0:0]s_sc_send;
  wire [10:0]\NLW_gen_normal_area.inst_fifo_node_payld_m_sc_payld_UNCONNECTED ;
  wire [10:0]\NLW_gen_normal_area.inst_fifo_node_payld_s_sc_payld_UNCONNECTED ;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_7 \gen_normal_area.gen_fi_regulator.inst_fi_regulator 
       (.arb_stall(arb_stall),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .s_sc_aclk(s_sc_aclk));
  design_1_axi_smc_0_sc_node_v1_0_10_fifo \gen_normal_area.inst_fifo_node_payld 
       (.E(E),
        .arb_stall_late(arb_stall_late),
        .areset_r(areset_r),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .m_sc_areset_r(m_sc_areset_r),
        .m_sc_payld({\NLW_gen_normal_area.inst_fifo_node_payld_m_sc_payld_UNCONNECTED [10:8],m_sc_payld[7:2],\NLW_gen_normal_area.inst_fifo_node_payld_m_sc_payld_UNCONNECTED [1:0]}),
        .m_sc_recv(m_sc_recv),
        .m_sc_send(m_sc_send),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_payld({\NLW_gen_normal_area.inst_fifo_node_payld_s_sc_payld_UNCONNECTED [10:8],s_sc_payld[7:2],\NLW_gen_normal_area.inst_fifo_node_payld_s_sc_payld_UNCONNECTED [1:0]}),
        .s_sc_send(s_sc_send));
  FDRE #(
    .INIT(1'b0)) 
    m_sc_areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(m_sc_areset_r_reg_0),
        .Q(m_sc_areset_r),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_mi_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized11
   (allow_transfer_r_reg,
    m_sc_send,
    m_sc_payld,
    out,
    s_sc_aclk,
    m_sc_areset_r_reg_0,
    m_sc_recv,
    s_sc_handshake,
    \gen_single_rank.empty_r_reg ,
    s_sc_send,
    s_sc_payld);
  output [0:0]allow_transfer_r_reg;
  output [0:0]m_sc_send;
  output [1:0]m_sc_payld;
  input out;
  input s_sc_aclk;
  input m_sc_areset_r_reg_0;
  input [0:0]m_sc_recv;
  input [0:0]s_sc_handshake;
  input \gen_single_rank.empty_r_reg ;
  input [0:0]s_sc_send;
  input [1:0]s_sc_payld;

  wire [0:0]allow_transfer_r_reg;
  wire areset_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire \gen_single_rank.empty_r_reg ;
  wire m_sc_areset_r;
  wire m_sc_areset_r_reg_0;
  wire [1:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_send;
  wire out;
  wire s_sc_aclk;
  wire [0:0]s_sc_handshake;
  wire [0:0]s_sc_send;
  wire [1:0]\NLW_gen_normal_area.inst_fifo_node_payld_s_sc_payld_UNCONNECTED ;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_4 \gen_normal_area.gen_fi_regulator.inst_fi_regulator 
       (.allow_transfer_r_reg_0(allow_transfer_r_reg),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .s_sc_aclk(s_sc_aclk));
  design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized0 \gen_normal_area.inst_fifo_node_payld 
       (.areset_r(areset_r),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .\gen_single_rank.empty_r_reg (\gen_single_rank.empty_r_reg ),
        .m_sc_areset_r(m_sc_areset_r),
        .m_sc_payld(m_sc_payld),
        .m_sc_recv(m_sc_recv),
        .m_sc_send(m_sc_send),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_handshake(s_sc_handshake),
        .s_sc_payld(\NLW_gen_normal_area.inst_fifo_node_payld_s_sc_payld_UNCONNECTED [1:0]),
        .s_sc_send(s_sc_send));
  FDRE #(
    .INIT(1'b0)) 
    m_sc_areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(m_sc_areset_r_reg_0),
        .Q(m_sc_areset_r),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_mi_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized12
   (allow_transfer_r_reg,
    m_sc_send,
    m_sc_payld,
    out,
    s_sc_aclk,
    m_sc_areset_r_reg_0,
    m_sc_recv,
    E,
    \gen_single_rank.empty_r_reg ,
    s_sc_send,
    s_sc_payld);
  output [0:0]allow_transfer_r_reg;
  output [0:0]m_sc_send;
  output [33:0]m_sc_payld;
  input out;
  input s_sc_aclk;
  input m_sc_areset_r_reg_0;
  input [0:0]m_sc_recv;
  input [0:0]E;
  input \gen_single_rank.empty_r_reg ;
  input [0:0]s_sc_send;
  input [33:0]s_sc_payld;

  wire [0:0]E;
  wire [0:0]allow_transfer_r_reg;
  wire areset_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire \gen_single_rank.empty_r_reg ;
  wire m_sc_areset_r;
  wire m_sc_areset_r_reg_0;
  wire [33:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_send;
  wire out;
  wire s_sc_aclk;
  wire [33:0]s_sc_payld;
  wire [0:0]s_sc_send;
  wire [33:0]\NLW_gen_normal_area.inst_fifo_node_payld_m_sc_payld_UNCONNECTED ;
  wire [33:0]\NLW_gen_normal_area.inst_fifo_node_payld_s_sc_payld_UNCONNECTED ;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_0 \gen_normal_area.gen_fi_regulator.inst_fi_regulator 
       (.allow_transfer_r_reg_0(allow_transfer_r_reg),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .s_sc_aclk(s_sc_aclk));
  design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized1 \gen_normal_area.inst_fifo_node_payld 
       (.E(E),
        .areset_r(areset_r),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .\gen_single_rank.empty_r_reg (\gen_single_rank.empty_r_reg ),
        .m_sc_areset_r(m_sc_areset_r),
        .m_sc_payld({\NLW_gen_normal_area.inst_fifo_node_payld_m_sc_payld_UNCONNECTED [33:13],m_sc_payld[12:2],\NLW_gen_normal_area.inst_fifo_node_payld_m_sc_payld_UNCONNECTED [1:0]}),
        .m_sc_recv(m_sc_recv),
        .m_sc_send(m_sc_send),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_payld({\NLW_gen_normal_area.inst_fifo_node_payld_s_sc_payld_UNCONNECTED [33:13],s_sc_payld[12:2],\NLW_gen_normal_area.inst_fifo_node_payld_s_sc_payld_UNCONNECTED [1:0]}),
        .s_sc_send(s_sc_send));
  FDRE #(
    .INIT(1'b0)) 
    m_sc_areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(m_sc_areset_r_reg_0),
        .Q(m_sc_areset_r),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_mi_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized13
   (arb_stall,
    m_sc_send,
    m_sc_payld,
    out,
    s_sc_aclk,
    m_sc_areset_r_reg_0,
    s_sc_send,
    arb_stall_late,
    E,
    m_sc_recv,
    s_sc_payld);
  output arb_stall;
  output [0:0]m_sc_send;
  output [35:0]m_sc_payld;
  input out;
  input s_sc_aclk;
  input m_sc_areset_r_reg_0;
  input [0:0]s_sc_send;
  input arb_stall_late;
  input [0:0]E;
  input [0:0]m_sc_recv;
  input [36:0]s_sc_payld;

  wire [0:0]E;
  wire arb_stall;
  wire arb_stall_late;
  wire areset_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire m_sc_areset_r;
  wire m_sc_areset_r_reg_0;
  wire [35:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_send;
  wire out;
  wire s_sc_aclk;
  wire [36:0]s_sc_payld;
  wire [0:0]s_sc_send;
  wire [35:0]\NLW_gen_normal_area.inst_fifo_node_payld_m_sc_payld_UNCONNECTED ;
  wire [36:1]\NLW_gen_normal_area.inst_fifo_node_payld_s_sc_payld_UNCONNECTED ;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator \gen_normal_area.gen_fi_regulator.inst_fi_regulator 
       (.arb_stall(arb_stall),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .s_sc_aclk(s_sc_aclk));
  design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized2 \gen_normal_area.inst_fifo_node_payld 
       (.E(E),
        .arb_stall_late(arb_stall_late),
        .areset_r(areset_r),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .m_sc_areset_r(m_sc_areset_r),
        .m_sc_payld({\NLW_gen_normal_area.inst_fifo_node_payld_m_sc_payld_UNCONNECTED [35:2],m_sc_payld[1],\NLW_gen_normal_area.inst_fifo_node_payld_m_sc_payld_UNCONNECTED [0]}),
        .m_sc_recv(m_sc_recv),
        .m_sc_send(m_sc_send),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_payld({\NLW_gen_normal_area.inst_fifo_node_payld_s_sc_payld_UNCONNECTED [36:3],s_sc_payld[2],\NLW_gen_normal_area.inst_fifo_node_payld_s_sc_payld_UNCONNECTED [1],s_sc_payld[0]}),
        .s_sc_send(s_sc_send));
  FDRE #(
    .INIT(1'b0)) 
    m_sc_areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(m_sc_areset_r_reg_0),
        .Q(m_sc_areset_r),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_mi_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized2
   (m_sc_send,
    m_sc_req,
    out,
    s_sc_aclk,
    s_sc_send,
    m_sc_recv);
  output [0:0]m_sc_send;
  output [0:0]m_sc_req;
  input out;
  input s_sc_aclk;
  input [0:0]s_sc_send;
  input [0:0]m_sc_recv;

  wire areset_r;
  wire \gen_minimal_area.req_mask ;
  wire \gen_minimal_area.req_mask[0]_i_1_n_0 ;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_req;
  wire [0:0]m_sc_send;
  wire out;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hEF)) 
    \gen_minimal_area.req_mask[0]_i_1 
       (.I0(m_sc_recv),
        .I1(areset_r),
        .I2(s_sc_send),
        .O(\gen_minimal_area.req_mask[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_minimal_area.req_mask_reg[0] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\gen_minimal_area.req_mask[0]_i_1_n_0 ),
        .Q(\gen_minimal_area.req_mask ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h20)) 
    \m_sc_req[0]_INST_0 
       (.I0(\gen_minimal_area.req_mask ),
        .I1(areset_r),
        .I2(s_sc_send),
        .O(m_sc_req));
  LUT2 #(
    .INIT(4'h2)) 
    \m_sc_send[0]_INST_0 
       (.I0(s_sc_send),
        .I1(areset_r),
        .O(m_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_mi_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized3
   (m_sc_send,
    out,
    s_sc_aclk,
    s_sc_send);
  output [0:0]m_sc_send;
  input out;
  input s_sc_aclk;
  input [0:0]s_sc_send;

  wire areset_r;
  wire [0:0]m_sc_send;
  wire out;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \m_sc_send[0]_INST_0 
       (.I0(s_sc_send),
        .I1(areset_r),
        .O(m_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_mi_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized4
   (m_sc_send,
    out,
    s_sc_aclk,
    s_sc_send);
  output [0:0]m_sc_send;
  input out;
  input s_sc_aclk;
  input [0:0]s_sc_send;

  wire areset_r;
  wire [0:0]m_sc_send;
  wire out;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \m_sc_send[0]_INST_0 
       (.I0(s_sc_send),
        .I1(areset_r),
        .O(m_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_mi_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized5
   (m_sc_send,
    out,
    s_sc_aclk,
    s_sc_send);
  output [0:0]m_sc_send;
  input out;
  input s_sc_aclk;
  input [0:0]s_sc_send;

  wire areset_r;
  wire [0:0]m_sc_send;
  wire out;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \m_sc_send[0]_INST_0 
       (.I0(s_sc_send),
        .I1(areset_r),
        .O(m_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_mi_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized6
   (m_sc_send,
    out,
    s_sc_aclk,
    s_sc_send);
  output [0:0]m_sc_send;
  input out;
  input s_sc_aclk;
  input [0:0]s_sc_send;

  wire areset_r;
  wire [0:0]m_sc_send;
  wire out;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \m_sc_send[0]_INST_0 
       (.I0(s_sc_send),
        .I1(areset_r),
        .O(m_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_mi_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized7
   (m_sc_send,
    out,
    s_sc_aclk,
    s_sc_send);
  output [0:0]m_sc_send;
  input out;
  input s_sc_aclk;
  input [0:0]s_sc_send;

  wire areset_r;
  wire [0:0]m_sc_send;
  wire out;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \m_sc_send[0]_INST_0 
       (.I0(s_sc_send),
        .I1(areset_r),
        .O(m_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_mi_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized8
   (m_sc_send,
    out,
    s_sc_aclk,
    s_sc_send);
  output [0:0]m_sc_send;
  input out;
  input s_sc_aclk;
  input [0:0]s_sc_send;

  wire areset_r;
  wire [0:0]m_sc_send;
  wire out;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \m_sc_send[0]_INST_0 
       (.I0(s_sc_send),
        .I1(areset_r),
        .O(m_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_mi_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized9
   (arb_stall,
    m_sc_send,
    m_sc_payld,
    out,
    s_sc_aclk,
    m_sc_areset_r_reg_0,
    s_sc_send,
    arb_stall_late,
    E,
    m_sc_recv,
    s_sc_payld);
  output arb_stall;
  output [0:0]m_sc_send;
  output [10:0]m_sc_payld;
  input out;
  input s_sc_aclk;
  input m_sc_areset_r_reg_0;
  input [0:0]s_sc_send;
  input arb_stall_late;
  input [0:0]E;
  input [0:0]m_sc_recv;
  input [11:0]s_sc_payld;

  wire [0:0]E;
  wire arb_stall;
  wire arb_stall_late;
  wire areset_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire m_sc_areset_r;
  wire m_sc_areset_r_reg_0;
  wire [10:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_send;
  wire out;
  wire s_sc_aclk;
  wire [11:0]s_sc_payld;
  wire [0:0]s_sc_send;
  wire [10:0]\NLW_gen_normal_area.inst_fifo_node_payld_m_sc_payld_UNCONNECTED ;
  wire [11:1]\NLW_gen_normal_area.inst_fifo_node_payld_s_sc_payld_UNCONNECTED ;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_10 \gen_normal_area.gen_fi_regulator.inst_fi_regulator 
       (.arb_stall(arb_stall),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .s_sc_aclk(s_sc_aclk));
  design_1_axi_smc_0_sc_node_v1_0_10_fifo_11 \gen_normal_area.inst_fifo_node_payld 
       (.E(E),
        .arb_stall_late(arb_stall_late),
        .areset_r(areset_r),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .m_sc_areset_r(m_sc_areset_r),
        .m_sc_payld({\NLW_gen_normal_area.inst_fifo_node_payld_m_sc_payld_UNCONNECTED [10:8],m_sc_payld[7:2],\NLW_gen_normal_area.inst_fifo_node_payld_m_sc_payld_UNCONNECTED [1:0]}),
        .m_sc_recv(m_sc_recv),
        .m_sc_send(m_sc_send),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_payld({\NLW_gen_normal_area.inst_fifo_node_payld_s_sc_payld_UNCONNECTED [11:9],s_sc_payld[8:3],\NLW_gen_normal_area.inst_fifo_node_payld_s_sc_payld_UNCONNECTED [2:1],s_sc_payld[0]}),
        .s_sc_send(s_sc_send));
  FDRE #(
    .INIT(1'b0)) 
    m_sc_areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(m_sc_areset_r_reg_0),
        .Q(m_sc_areset_r),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_reg_fifo" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo
   (\gen_normal_area.fifo_node_payld_full_i ,
    m_sc_send,
    m_sc_payld,
    s_sc_aclk,
    m_sc_recv,
    E,
    areset_r,
    arb_stall_late,
    s_sc_send,
    m_sc_areset_r,
    s_sc_payld);
  output \gen_normal_area.fifo_node_payld_full_i ;
  output [0:0]m_sc_send;
  output [10:0]m_sc_payld;
  input s_sc_aclk;
  input [0:0]m_sc_recv;
  input [0:0]E;
  input areset_r;
  input arb_stall_late;
  input [0:0]s_sc_send;
  input m_sc_areset_r;
  input [10:0]s_sc_payld;

  wire [0:0]E;
  wire arb_stall_late;
  wire areset_r;
  wire empty_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire \gen_single_rank.inst_cntr_n_0 ;
  wire \gen_single_rank.inst_cntr_n_1 ;
  wire m_sc_areset_r;
  wire [10:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire s_sc_aclk;
  wire [10:0]s_sc_payld;
  wire [0:0]s_sc_send;

  assign m_sc_send[0] = empty_r;
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[100] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[3]),
        .Q(m_sc_payld[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[101] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[4]),
        .Q(m_sc_payld[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[102] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[5]),
        .Q(m_sc_payld[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[103] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[6]),
        .Q(m_sc_payld[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[104] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[7]),
        .Q(m_sc_payld[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[99] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[2]),
        .Q(m_sc_payld[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \gen_single_rank.empty_r_reg 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\gen_single_rank.inst_cntr_n_1 ),
        .Q(empty_r),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.full_r_reg 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\gen_single_rank.inst_cntr_n_0 ),
        .Q(\gen_normal_area.fifo_node_payld_full_i ),
        .R(1'b0));
  design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_8 \gen_single_rank.inst_cntr 
       (.E(E),
        .arb_stall_late(arb_stall_late),
        .areset_r(areset_r),
        .empty_r(empty_r),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .\gen_pipe[1].pipe_reg[1][0] (\gen_single_rank.inst_cntr_n_1 ),
        .\gen_single_rank.empty_r_reg (\gen_single_rank.inst_cntr_n_0 ),
        .m_sc_areset_r(m_sc_areset_r),
        .m_sc_recv(m_sc_recv),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_send(s_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_reg_fifo" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo_12
   (\gen_normal_area.fifo_node_payld_full_i ,
    m_sc_send,
    m_sc_payld,
    s_sc_aclk,
    s_sc_send,
    arb_stall_late,
    areset_r,
    E,
    m_sc_recv,
    m_sc_areset_r,
    s_sc_payld);
  output \gen_normal_area.fifo_node_payld_full_i ;
  output [0:0]m_sc_send;
  output [10:0]m_sc_payld;
  input s_sc_aclk;
  input [0:0]s_sc_send;
  input arb_stall_late;
  input areset_r;
  input [0:0]E;
  input [0:0]m_sc_recv;
  input m_sc_areset_r;
  input [11:0]s_sc_payld;

  wire [0:0]E;
  wire arb_stall_late;
  wire areset_r;
  wire empty_r;
  wire [143:143]\gen_normal_area.fifo_node_payld_dout ;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire \gen_single_rank.inst_cntr_n_0 ;
  wire \gen_single_rank.inst_cntr_n_1 ;
  wire m_sc_areset_r;
  wire [10:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_send;
  wire s_sc_aclk;
  wire [11:0]s_sc_payld;
  wire [0:0]s_sc_send;

  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[100] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[4]),
        .Q(m_sc_payld[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[101] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[5]),
        .Q(m_sc_payld[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[102] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[6]),
        .Q(m_sc_payld[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[103] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[7]),
        .Q(m_sc_payld[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[104] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[8]),
        .Q(m_sc_payld[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[143] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[0]),
        .Q(\gen_normal_area.fifo_node_payld_dout ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[99] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[3]),
        .Q(m_sc_payld[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \gen_single_rank.empty_r_reg 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\gen_single_rank.inst_cntr_n_1 ),
        .Q(empty_r),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.full_r_reg 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\gen_single_rank.inst_cntr_n_0 ),
        .Q(\gen_normal_area.fifo_node_payld_full_i ),
        .R(1'b0));
  design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_13 \gen_single_rank.inst_cntr 
       (.E(E),
        .Q(\gen_normal_area.fifo_node_payld_dout ),
        .arb_stall_late(arb_stall_late),
        .areset_r(areset_r),
        .empty_r(empty_r),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .is_zero_r_reg_0(\gen_single_rank.inst_cntr_n_0 ),
        .is_zero_r_reg_1(\gen_single_rank.inst_cntr_n_1 ),
        .m_sc_areset_r(m_sc_areset_r),
        .m_sc_recv(m_sc_recv),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_send(s_sc_send));
  LUT2 #(
    .INIT(4'h2)) 
    \m_sc_send[1]_INST_0 
       (.I0(\gen_normal_area.fifo_node_payld_dout ),
        .I1(empty_r),
        .O(m_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_reg_fifo" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized0
   (\gen_normal_area.fifo_node_payld_full_i ,
    m_sc_send,
    m_sc_payld,
    s_sc_aclk,
    m_sc_recv,
    s_sc_handshake,
    areset_r,
    \gen_single_rank.empty_r_reg_0 ,
    s_sc_send,
    m_sc_areset_r,
    s_sc_payld);
  output \gen_normal_area.fifo_node_payld_full_i ;
  output [0:0]m_sc_send;
  output [1:0]m_sc_payld;
  input s_sc_aclk;
  input [0:0]m_sc_recv;
  input [0:0]s_sc_handshake;
  input areset_r;
  input \gen_single_rank.empty_r_reg_0 ;
  input [0:0]s_sc_send;
  input m_sc_areset_r;
  input [1:0]s_sc_payld;

  wire areset_r;
  wire empty_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire \gen_single_rank.data[5]_i_1_n_0 ;
  wire \gen_single_rank.data[6]_i_1_n_0 ;
  wire \gen_single_rank.empty_r_reg_0 ;
  wire \gen_single_rank.inst_cntr_n_0 ;
  wire \gen_single_rank.inst_cntr_n_1 ;
  wire m_sc_areset_r;
  wire [1:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire s_sc_aclk;
  wire [0:0]s_sc_handshake;
  wire [0:0]s_sc_send;

  assign m_sc_send[0] = empty_r;
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \gen_single_rank.data[5]_i_1 
       (.I0(s_sc_send),
        .I1(\gen_single_rank.empty_r_reg_0 ),
        .I2(m_sc_payld[0]),
        .O(\gen_single_rank.data[5]_i_1_n_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \gen_single_rank.data[6]_i_1 
       (.I0(s_sc_send),
        .I1(\gen_single_rank.empty_r_reg_0 ),
        .I2(m_sc_payld[1]),
        .O(\gen_single_rank.data[6]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[5] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\gen_single_rank.data[5]_i_1_n_0 ),
        .Q(m_sc_payld[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[6] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\gen_single_rank.data[6]_i_1_n_0 ),
        .Q(m_sc_payld[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \gen_single_rank.empty_r_reg 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\gen_single_rank.inst_cntr_n_1 ),
        .Q(empty_r),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.full_r_reg 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\gen_single_rank.inst_cntr_n_0 ),
        .Q(\gen_normal_area.fifo_node_payld_full_i ),
        .R(1'b0));
  design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_5 \gen_single_rank.inst_cntr 
       (.areset_r(areset_r),
        .empty_r(empty_r),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .\gen_single_rank.empty_r_reg (\gen_single_rank.inst_cntr_n_0 ),
        .\gen_single_rank.empty_r_reg_0 (\gen_single_rank.empty_r_reg_0 ),
        .\grant_i_reg[1] (\gen_single_rank.inst_cntr_n_1 ),
        .m_sc_areset_r(m_sc_areset_r),
        .m_sc_recv(m_sc_recv),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_handshake(s_sc_handshake),
        .s_sc_send(s_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_reg_fifo" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized1
   (\gen_normal_area.fifo_node_payld_full_i ,
    m_sc_send,
    m_sc_payld,
    s_sc_aclk,
    m_sc_recv,
    E,
    areset_r,
    \gen_single_rank.empty_r_reg_0 ,
    s_sc_send,
    m_sc_areset_r,
    s_sc_payld);
  output \gen_normal_area.fifo_node_payld_full_i ;
  output [0:0]m_sc_send;
  output [33:0]m_sc_payld;
  input s_sc_aclk;
  input [0:0]m_sc_recv;
  input [0:0]E;
  input areset_r;
  input \gen_single_rank.empty_r_reg_0 ;
  input [0:0]s_sc_send;
  input m_sc_areset_r;
  input [33:0]s_sc_payld;

  wire [0:0]E;
  wire areset_r;
  wire empty_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire \gen_single_rank.empty_r_reg_0 ;
  wire \gen_single_rank.inst_cntr_n_0 ;
  wire \gen_single_rank.inst_cntr_n_1 ;
  wire m_sc_areset_r;
  wire [33:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire s_sc_aclk;
  wire [33:0]s_sc_payld;
  wire [0:0]s_sc_send;

  assign m_sc_send[0] = empty_r;
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[21] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[2]),
        .Q(m_sc_payld[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[22] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[3]),
        .Q(m_sc_payld[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[23] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[4]),
        .Q(m_sc_payld[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[24] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[5]),
        .Q(m_sc_payld[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[25] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[6]),
        .Q(m_sc_payld[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[26] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[7]),
        .Q(m_sc_payld[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[27] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[8]),
        .Q(m_sc_payld[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[28] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[9]),
        .Q(m_sc_payld[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[29] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[10]),
        .Q(m_sc_payld[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[30] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[11]),
        .Q(m_sc_payld[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[31] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[12]),
        .Q(m_sc_payld[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \gen_single_rank.empty_r_reg 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\gen_single_rank.inst_cntr_n_1 ),
        .Q(empty_r),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.full_r_reg 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\gen_single_rank.inst_cntr_n_0 ),
        .Q(\gen_normal_area.fifo_node_payld_full_i ),
        .R(1'b0));
  design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_1 \gen_single_rank.inst_cntr 
       (.E(E),
        .areset_r(areset_r),
        .empty_r(empty_r),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .\gen_single_rank.empty_r_reg (\gen_single_rank.inst_cntr_n_0 ),
        .\gen_single_rank.empty_r_reg_0 (\gen_single_rank.empty_r_reg_0 ),
        .\grant_i_reg[1] (\gen_single_rank.inst_cntr_n_1 ),
        .m_sc_areset_r(m_sc_areset_r),
        .m_sc_recv(m_sc_recv),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_send(s_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_reg_fifo" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized2
   (\gen_normal_area.fifo_node_payld_full_i ,
    m_sc_send,
    m_sc_payld,
    s_sc_aclk,
    s_sc_send,
    arb_stall_late,
    areset_r,
    E,
    m_sc_recv,
    m_sc_areset_r,
    s_sc_payld);
  output \gen_normal_area.fifo_node_payld_full_i ;
  output [0:0]m_sc_send;
  output [35:0]m_sc_payld;
  input s_sc_aclk;
  input [0:0]s_sc_send;
  input arb_stall_late;
  input areset_r;
  input [0:0]E;
  input [0:0]m_sc_recv;
  input m_sc_areset_r;
  input [36:0]s_sc_payld;

  wire [0:0]E;
  wire arb_stall_late;
  wire areset_r;
  wire empty_r;
  wire [57:57]\gen_normal_area.fifo_node_payld_dout ;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire \gen_single_rank.inst_cntr_n_0 ;
  wire \gen_single_rank.inst_cntr_n_1 ;
  wire m_sc_areset_r;
  wire [35:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_send;
  wire s_sc_aclk;
  wire [36:0]s_sc_payld;
  wire [0:0]s_sc_send;

  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[20] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[2]),
        .Q(m_sc_payld[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.data_reg[57] 
       (.C(s_sc_aclk),
        .CE(E),
        .D(s_sc_payld[0]),
        .Q(\gen_normal_area.fifo_node_payld_dout ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \gen_single_rank.empty_r_reg 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\gen_single_rank.inst_cntr_n_1 ),
        .Q(empty_r),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_single_rank.full_r_reg 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\gen_single_rank.inst_cntr_n_0 ),
        .Q(\gen_normal_area.fifo_node_payld_full_i ),
        .R(1'b0));
  design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0 \gen_single_rank.inst_cntr 
       (.E(E),
        .Q(\gen_normal_area.fifo_node_payld_dout ),
        .arb_stall_late(arb_stall_late),
        .areset_r(areset_r),
        .empty_r(empty_r),
        .\gen_normal_area.fifo_node_payld_full_i (\gen_normal_area.fifo_node_payld_full_i ),
        .is_zero_r_reg_0(\gen_single_rank.inst_cntr_n_0 ),
        .is_zero_r_reg_1(\gen_single_rank.inst_cntr_n_1 ),
        .m_sc_areset_r(m_sc_areset_r),
        .m_sc_recv(m_sc_recv),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_send(s_sc_send));
  LUT2 #(
    .INIT(4'h2)) 
    \m_sc_send[1]_INST_0 
       (.I0(\gen_normal_area.fifo_node_payld_dout ),
        .I1(empty_r),
        .O(m_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_si_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized4
   (arb_stall_late,
    s_sc_recv,
    E,
    arb_stall,
    s_sc_aclk,
    s_sc_send);
  output arb_stall_late;
  output [0:0]s_sc_recv;
  output [0:0]E;
  input arb_stall;
  input s_sc_aclk;
  input [0:0]s_sc_send;

  wire [0:0]E;
  wire arb_stall;
  wire arb_stall_late;
  wire s_sc_aclk;
  wire [0:0]s_sc_recv;
  wire [0:0]s_sc_send;

  design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7_9 inst_arb_stall_late
       (.E(E),
        .arb_stall(arb_stall),
        .arb_stall_late(arb_stall_late),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_recv(s_sc_recv),
        .s_sc_send(s_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_si_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized5
   (arb_stall_late,
    s_sc_recv,
    E,
    arb_stall,
    s_sc_aclk,
    s_sc_send);
  output arb_stall_late;
  output [0:0]s_sc_recv;
  output [0:0]E;
  input arb_stall;
  input s_sc_aclk;
  input [0:0]s_sc_send;

  wire [0:0]E;
  wire arb_stall;
  wire arb_stall_late;
  wire s_sc_aclk;
  wire [0:0]s_sc_recv;
  wire [0:0]s_sc_send;

  design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7_6 inst_arb_stall_late
       (.E(E),
        .arb_stall(arb_stall),
        .arb_stall_late(arb_stall_late),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_recv(s_sc_recv),
        .s_sc_send(s_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_si_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized6
   (\grant_i_reg[1] ,
    s_sc_handshake,
    out,
    s_sc_aclk,
    \grant_i_reg[1]_0 ,
    s_sc_send,
    s_sc_req);
  output \grant_i_reg[1] ;
  output [0:0]s_sc_handshake;
  input out;
  input s_sc_aclk;
  input [0:0]\grant_i_reg[1]_0 ;
  input [0:0]s_sc_send;
  input [0:0]s_sc_req;

  wire areset_r;
  wire \gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter_n_0 ;
  wire \grant_i_reg[1] ;
  wire [0:0]\grant_i_reg[1]_0 ;
  wire out;
  wire s_sc_aclk;
  wire [0:0]s_sc_handshake;
  wire [0:0]s_sc_req;
  wire [0:0]s_sc_send;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  design_1_axi_smc_0_sc_node_v1_0_10_arb_alg_rr_2 \gen_si_handler.gen_arbiter_rr_normal_area.inst_arbiter 
       (.areset_r(areset_r),
        .\grant_i_reg[1]_0 (\grant_i_reg[1] ),
        .\grant_i_reg[1]_1 (\grant_i_reg[1]_0 ),
        .\grant_i_reg[1]_2 (\gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter_n_0 ),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_handshake(s_sc_handshake),
        .s_sc_send(s_sc_send));
  design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized1_3 \gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter 
       (.areset_r(areset_r),
        .is_zero_r_reg_0(\gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter_n_0 ),
        .is_zero_r_reg_1(\grant_i_reg[1] ),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_req(s_sc_req),
        .s_sc_send(s_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_si_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized7
   (\grant_i_reg[1] ,
    E,
    out,
    s_sc_aclk,
    \grant_i_reg[1]_0 ,
    s_sc_send,
    s_sc_req);
  output \grant_i_reg[1] ;
  output [0:0]E;
  input out;
  input s_sc_aclk;
  input [0:0]\grant_i_reg[1]_0 ;
  input [0:0]s_sc_send;
  input [0:0]s_sc_req;

  wire [0:0]E;
  wire areset_r;
  wire \gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter_n_0 ;
  wire \grant_i_reg[1] ;
  wire [0:0]\grant_i_reg[1]_0 ;
  wire out;
  wire s_sc_aclk;
  wire [0:0]s_sc_req;
  wire [0:0]s_sc_send;

  FDRE #(
    .INIT(1'b0)) 
    areset_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(out),
        .Q(areset_r),
        .R(1'b0));
  design_1_axi_smc_0_sc_node_v1_0_10_arb_alg_rr \gen_si_handler.gen_arbiter_rr_normal_area.inst_arbiter 
       (.E(E),
        .areset_r(areset_r),
        .\grant_i_reg[1]_0 (\grant_i_reg[1] ),
        .\grant_i_reg[1]_1 (\grant_i_reg[1]_0 ),
        .\grant_i_reg[1]_2 (\gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter_n_0 ),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_send(s_sc_send));
  design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized1 \gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter 
       (.areset_r(areset_r),
        .is_zero_r_reg_0(\gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter_n_0 ),
        .is_zero_r_reg_1(\grant_i_reg[1] ),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_req(s_sc_req),
        .s_sc_send(s_sc_send));
endmodule

(* ORIG_REF_NAME = "sc_node_v1_0_10_si_handler" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized8
   (arb_stall_late,
    s_sc_recv,
    E,
    arb_stall,
    s_sc_aclk,
    s_sc_send);
  output arb_stall_late;
  output [0:0]s_sc_recv;
  output [0:0]E;
  input arb_stall;
  input s_sc_aclk;
  input [0:0]s_sc_send;

  wire [0:0]E;
  wire arb_stall;
  wire arb_stall_late;
  wire s_sc_aclk;
  wire [0:0]s_sc_recv;
  wire [0:0]s_sc_send;

  design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7 inst_arb_stall_late
       (.E(E),
        .arb_stall(arb_stall),
        .arb_stall_late(arb_stall_late),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_recv(s_sc_recv),
        .s_sc_send(s_sc_send));
endmodule

(* C_ACLKEN_CONVERSION = "0" *) (* C_ACLK_RELATIONSHIP = "1" *) (* C_ADDR_WIDTH = "32" *) 
(* C_ARBITER_MODE = "1" *) (* C_CHANNEL = "2" *) (* C_DISABLE_IP = "0" *) 
(* C_ENABLE_PIPELINING = "8'b00000001" *) (* C_FAMILY = "zynq" *) (* C_FIFO_IP = "0" *) 
(* C_FIFO_OUTPUT_REG = "1" *) (* C_FIFO_SIZE = "5" *) (* C_FIFO_TYPE = "2" *) 
(* C_ID_WIDTH = "1" *) (* C_MAX_PAYLD_BYTES = "4" *) (* C_M_NUM_BYTES_ARRAY = "4" *) 
(* C_M_PIPELINE = "0" *) (* C_M_SEND_PIPELINE = "0" *) (* C_NUM_MI = "1" *) 
(* C_NUM_OUTSTANDING = "8" *) (* C_NUM_SI = "1" *) (* C_PAYLD_WIDTH = "141" *) 
(* C_SC_ROUTE_WIDTH = "4" *) (* C_SYNCHRONIZATION_STAGES = "3" *) (* C_S_LATENCY = "0" *) 
(* C_S_NUM_BYTES_ARRAY = "4" *) (* C_S_PIPELINE = "0" *) (* C_USER_BITS_PER_BYTE = "0" *) 
(* C_USER_WIDTH = "0" *) (* LP_ACLK_RELATIONSHIP = "1" *) (* LP_ARBITER_MODE = "1" *) 
(* LP_DT_REG = "true" *) (* LP_FIFO_OUTPUT_REG = "1" *) (* LP_FIFO_TYPE = "2" *) 
(* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) (* LP_LOG_NUM_MI = "1" *) 
(* LP_LOG_NUM_SI = "1" *) (* LP_MAX_DOWNSIZER_RATIO = "1" *) (* LP_MAX_NUM_BYTES = "4" *) 
(* LP_MAX_UPSIZER_RATIO = "1" *) (* LP_M_MAX_NUM_BYTES = "4" *) (* LP_M_MIN_NUM_BYTES = "4" *) 
(* LP_M_STATIC_DWIDTH = "1" *) (* LP_NODE_ADDR_WIDTH = "32" *) (* LP_NODE_ID_WIDTH = "1" *) 
(* LP_NODE_ROUTE_WIDTH = "4" *) (* LP_NODE_USER_WIDTH = "0" *) (* LP_SYNCHRONIZATION_STAGES = "2" *) 
(* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) (* LP_S_MAX_NUM_BYTES = "4" *) (* LP_S_MIN_NUM_BYTES = "4" *) 
(* LP_S_PIPELINE = "0" *) (* LP_S_STATIC_DWIDTH = "1" *) (* LP_ZERO_ROUTE_WIDTH = "0" *) 
(* ORIG_REF_NAME = "sc_node_v1_0_10_top" *) (* P_NUM_OUTSTANDING = "16" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_top
   (s_sc_aclk,
    s_sc_aclken,
    s_sc_aresetn,
    s_sc_req,
    s_sc_info,
    s_sc_send,
    s_sc_recv,
    s_sc_payld,
    m_sc_aclk,
    m_sc_aclken,
    m_sc_aresetn,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld,
    m_axis_arb_tvalid,
    m_axis_arb_tready,
    m_axis_arb_tdata,
    s_axis_arb_tvalid,
    s_axis_arb_tready,
    s_axis_arb_tdata);
  input s_sc_aclk;
  input s_sc_aclken;
  input s_sc_aresetn;
  input [0:0]s_sc_req;
  input [0:0]s_sc_info;
  input [0:0]s_sc_send;
  output [0:0]s_sc_recv;
  input [140:0]s_sc_payld;
  input m_sc_aclk;
  input m_sc_aclken;
  input m_sc_aresetn;
  input [0:0]m_sc_recv;
  output [0:0]m_sc_send;
  output [0:0]m_sc_req;
  output [0:0]m_sc_info;
  output [140:0]m_sc_payld;
  output m_axis_arb_tvalid;
  input m_axis_arb_tready;
  output [15:0]m_axis_arb_tdata;
  input s_axis_arb_tvalid;
  output s_axis_arb_tready;
  input [15:0]s_axis_arb_tdata;

  wire [0:0]m_sc_send;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset_pipe;
  wire s_sc_aclk;
  (* DONT_TOUCH *) wire s_sc_areset;
  (* DONT_TOUCH *) wire s_sc_areset_pipe;
  wire s_sc_aresetn;
  wire [0:0]s_sc_send;

  design_1_axi_smc_0_sc_node_v1_0_10_mi_handler inst_mi_handler
       (.m_sc_send(m_sc_send),
        .out(s_sc_areset_pipe),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_send(s_sc_send));
  LUT1 #(
    .INIT(2'h2)) 
    mi_handler_m_sc_areset_pipe_inst
       (.I0(mi_handler_m_sc_areset),
        .O(mi_handler_m_sc_areset_pipe));
  LUT1 #(
    .INIT(2'h2)) 
    s_sc_areset_inst
       (.I0(s_sc_areset),
        .O(mi_handler_m_sc_areset));
  LUT1 #(
    .INIT(2'h1)) 
    s_sc_areset_pipe_inferred_i_1
       (.I0(s_sc_aresetn),
        .O(s_sc_areset_pipe));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    s_sc_areset_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_sc_areset),
        .S(s_sc_areset_pipe));
endmodule

(* C_ACLKEN_CONVERSION = "0" *) (* C_ACLK_RELATIONSHIP = "1" *) (* C_ADDR_WIDTH = "32" *) 
(* C_ARBITER_MODE = "1" *) (* C_CHANNEL = "3" *) (* C_DISABLE_IP = "0" *) 
(* C_ENABLE_PIPELINING = "8'b00000001" *) (* C_FAMILY = "zynq" *) (* C_FIFO_IP = "0" *) 
(* C_FIFO_OUTPUT_REG = "1" *) (* C_FIFO_SIZE = "5" *) (* C_FIFO_TYPE = "2" *) 
(* C_ID_WIDTH = "1" *) (* C_MAX_PAYLD_BYTES = "4" *) (* C_M_NUM_BYTES_ARRAY = "4" *) 
(* C_M_PIPELINE = "0" *) (* C_M_SEND_PIPELINE = "0" *) (* C_NUM_MI = "1" *) 
(* C_NUM_OUTSTANDING = "8" *) (* C_NUM_SI = "1" *) (* C_PAYLD_WIDTH = "141" *) 
(* C_SC_ROUTE_WIDTH = "4" *) (* C_SYNCHRONIZATION_STAGES = "3" *) (* C_S_LATENCY = "0" *) 
(* C_S_NUM_BYTES_ARRAY = "4" *) (* C_S_PIPELINE = "0" *) (* C_USER_BITS_PER_BYTE = "0" *) 
(* C_USER_WIDTH = "0" *) (* LP_ACLK_RELATIONSHIP = "1" *) (* LP_ARBITER_MODE = "1" *) 
(* LP_DT_REG = "true" *) (* LP_FIFO_OUTPUT_REG = "1" *) (* LP_FIFO_TYPE = "2" *) 
(* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) (* LP_LOG_NUM_MI = "1" *) 
(* LP_LOG_NUM_SI = "1" *) (* LP_MAX_DOWNSIZER_RATIO = "1" *) (* LP_MAX_NUM_BYTES = "4" *) 
(* LP_MAX_UPSIZER_RATIO = "1" *) (* LP_M_MAX_NUM_BYTES = "4" *) (* LP_M_MIN_NUM_BYTES = "4" *) 
(* LP_M_STATIC_DWIDTH = "1" *) (* LP_NODE_ADDR_WIDTH = "32" *) (* LP_NODE_ID_WIDTH = "1" *) 
(* LP_NODE_ROUTE_WIDTH = "4" *) (* LP_NODE_USER_WIDTH = "0" *) (* LP_SYNCHRONIZATION_STAGES = "2" *) 
(* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) (* LP_S_MAX_NUM_BYTES = "4" *) (* LP_S_MIN_NUM_BYTES = "4" *) 
(* LP_S_PIPELINE = "0" *) (* LP_S_STATIC_DWIDTH = "1" *) (* LP_ZERO_ROUTE_WIDTH = "0" *) 
(* ORIG_REF_NAME = "sc_node_v1_0_10_top" *) (* P_NUM_OUTSTANDING = "16" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0
   (s_sc_aclk,
    s_sc_aclken,
    s_sc_aresetn,
    s_sc_req,
    s_sc_info,
    s_sc_send,
    s_sc_recv,
    s_sc_payld,
    m_sc_aclk,
    m_sc_aclken,
    m_sc_aresetn,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld,
    m_axis_arb_tvalid,
    m_axis_arb_tready,
    m_axis_arb_tdata,
    s_axis_arb_tvalid,
    s_axis_arb_tready,
    s_axis_arb_tdata);
  input s_sc_aclk;
  input s_sc_aclken;
  input s_sc_aresetn;
  input [0:0]s_sc_req;
  input [0:0]s_sc_info;
  input [0:0]s_sc_send;
  output [0:0]s_sc_recv;
  input [140:0]s_sc_payld;
  input m_sc_aclk;
  input m_sc_aclken;
  input m_sc_aresetn;
  input [0:0]m_sc_recv;
  output [0:0]m_sc_send;
  output [0:0]m_sc_req;
  output [0:0]m_sc_info;
  output [140:0]m_sc_payld;
  output m_axis_arb_tvalid;
  input m_axis_arb_tready;
  output [15:0]m_axis_arb_tdata;
  input s_axis_arb_tvalid;
  output s_axis_arb_tready;
  input [15:0]s_axis_arb_tdata;

  wire [0:0]m_sc_send;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset_pipe;
  wire s_sc_aclk;
  (* DONT_TOUCH *) wire s_sc_areset;
  (* DONT_TOUCH *) wire s_sc_areset_pipe;
  wire s_sc_aresetn;
  wire [0:0]s_sc_send;

  design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized0 inst_mi_handler
       (.m_sc_send(m_sc_send),
        .out(s_sc_areset_pipe),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_send(s_sc_send));
  LUT1 #(
    .INIT(2'h2)) 
    mi_handler_m_sc_areset_pipe_inst
       (.I0(mi_handler_m_sc_areset),
        .O(mi_handler_m_sc_areset_pipe));
  LUT1 #(
    .INIT(2'h2)) 
    s_sc_areset_inst
       (.I0(s_sc_areset),
        .O(mi_handler_m_sc_areset));
  LUT1 #(
    .INIT(2'h1)) 
    s_sc_areset_pipe_inferred_i_1
       (.I0(s_sc_aresetn),
        .O(s_sc_areset_pipe));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    s_sc_areset_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_sc_areset),
        .S(s_sc_areset_pipe));
endmodule

(* C_ACLKEN_CONVERSION = "0" *) (* C_ACLK_RELATIONSHIP = "1" *) (* C_ADDR_WIDTH = "32" *) 
(* C_ARBITER_MODE = "1" *) (* C_CHANNEL = "4" *) (* C_DISABLE_IP = "0" *) 
(* C_ENABLE_PIPELINING = "8'b00000001" *) (* C_FAMILY = "zynq" *) (* C_FIFO_IP = "0" *) 
(* C_FIFO_OUTPUT_REG = "1" *) (* C_FIFO_SIZE = "5" *) (* C_FIFO_TYPE = "2" *) 
(* C_ID_WIDTH = "1" *) (* C_MAX_PAYLD_BYTES = "4" *) (* C_M_NUM_BYTES_ARRAY = "4" *) 
(* C_M_PIPELINE = "0" *) (* C_M_SEND_PIPELINE = "1" *) (* C_NUM_MI = "1" *) 
(* C_NUM_OUTSTANDING = "8" *) (* C_NUM_SI = "1" *) (* C_PAYLD_WIDTH = "7" *) 
(* C_SC_ROUTE_WIDTH = "3" *) (* C_SYNCHRONIZATION_STAGES = "3" *) (* C_S_LATENCY = "0" *) 
(* C_S_NUM_BYTES_ARRAY = "4" *) (* C_S_PIPELINE = "0" *) (* C_USER_BITS_PER_BYTE = "0" *) 
(* C_USER_WIDTH = "0" *) (* LP_ACLK_RELATIONSHIP = "1" *) (* LP_ARBITER_MODE = "1" *) 
(* LP_DT_REG = "true" *) (* LP_FIFO_OUTPUT_REG = "1" *) (* LP_FIFO_TYPE = "2" *) 
(* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) (* LP_LOG_NUM_MI = "1" *) 
(* LP_LOG_NUM_SI = "1" *) (* LP_MAX_DOWNSIZER_RATIO = "1" *) (* LP_MAX_NUM_BYTES = "4" *) 
(* LP_MAX_UPSIZER_RATIO = "1" *) (* LP_M_MAX_NUM_BYTES = "4" *) (* LP_M_MIN_NUM_BYTES = "4" *) 
(* LP_M_STATIC_DWIDTH = "1" *) (* LP_NODE_ADDR_WIDTH = "32" *) (* LP_NODE_ID_WIDTH = "1" *) 
(* LP_NODE_ROUTE_WIDTH = "3" *) (* LP_NODE_USER_WIDTH = "0" *) (* LP_SYNCHRONIZATION_STAGES = "2" *) 
(* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) (* LP_S_MAX_NUM_BYTES = "4" *) (* LP_S_MIN_NUM_BYTES = "4" *) 
(* LP_S_PIPELINE = "0" *) (* LP_S_STATIC_DWIDTH = "1" *) (* LP_ZERO_ROUTE_WIDTH = "0" *) 
(* ORIG_REF_NAME = "sc_node_v1_0_10_top" *) (* P_NUM_OUTSTANDING = "16" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1
   (s_sc_aclk,
    s_sc_aclken,
    s_sc_aresetn,
    s_sc_req,
    s_sc_info,
    s_sc_send,
    s_sc_recv,
    s_sc_payld,
    m_sc_aclk,
    m_sc_aclken,
    m_sc_aresetn,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld,
    m_axis_arb_tvalid,
    m_axis_arb_tready,
    m_axis_arb_tdata,
    s_axis_arb_tvalid,
    s_axis_arb_tready,
    s_axis_arb_tdata);
  input s_sc_aclk;
  input s_sc_aclken;
  input s_sc_aresetn;
  input [0:0]s_sc_req;
  input [0:0]s_sc_info;
  input [0:0]s_sc_send;
  output [0:0]s_sc_recv;
  input [6:0]s_sc_payld;
  input m_sc_aclk;
  input m_sc_aclken;
  input m_sc_aresetn;
  input [0:0]m_sc_recv;
  output [0:0]m_sc_send;
  output [0:0]m_sc_req;
  output [0:0]m_sc_info;
  output [6:0]m_sc_payld;
  output m_axis_arb_tvalid;
  input m_axis_arb_tready;
  output [15:0]m_axis_arb_tdata;
  input s_axis_arb_tvalid;
  output s_axis_arb_tready;
  input [15:0]s_axis_arb_tdata;

  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_req;
  wire [0:0]m_sc_send;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset_pipe;
  wire s_sc_aclk;
  (* DONT_TOUCH *) wire s_sc_areset;
  (* DONT_TOUCH *) wire s_sc_areset_pipe;
  wire s_sc_aresetn;
  wire [0:0]s_sc_send;

  design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized1 inst_mi_handler
       (.m_sc_recv(m_sc_recv),
        .m_sc_req(m_sc_req),
        .m_sc_send(m_sc_send),
        .out(s_sc_areset_pipe),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_send(s_sc_send));
  LUT1 #(
    .INIT(2'h2)) 
    mi_handler_m_sc_areset_pipe_inst
       (.I0(mi_handler_m_sc_areset),
        .O(mi_handler_m_sc_areset_pipe));
  LUT1 #(
    .INIT(2'h2)) 
    s_sc_areset_inst
       (.I0(s_sc_areset),
        .O(mi_handler_m_sc_areset));
  LUT1 #(
    .INIT(2'h1)) 
    s_sc_areset_pipe_inferred_i_1
       (.I0(s_sc_aresetn),
        .O(s_sc_areset_pipe));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    s_sc_areset_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_sc_areset),
        .S(s_sc_areset_pipe));
endmodule

(* C_ACLKEN_CONVERSION = "0" *) (* C_ACLK_RELATIONSHIP = "1" *) (* C_ADDR_WIDTH = "32" *) 
(* C_ARBITER_MODE = "1" *) (* C_CHANNEL = "3" *) (* C_DISABLE_IP = "0" *) 
(* C_ENABLE_PIPELINING = "8'b00000001" *) (* C_FAMILY = "zynq" *) (* C_FIFO_IP = "0" *) 
(* C_FIFO_OUTPUT_REG = "1" *) (* C_FIFO_SIZE = "0" *) (* C_FIFO_TYPE = "0" *) 
(* C_ID_WIDTH = "1" *) (* C_MAX_PAYLD_BYTES = "4" *) (* C_M_NUM_BYTES_ARRAY = "64'b0000000000000000000000000000010000000000000000000000000000000100" *) 
(* C_M_PIPELINE = "0" *) (* C_M_SEND_PIPELINE = "0" *) (* C_NUM_MI = "2" *) 
(* C_NUM_OUTSTANDING = "8" *) (* C_NUM_SI = "1" *) (* C_PAYLD_WIDTH = "141" *) 
(* C_SC_ROUTE_WIDTH = "4" *) (* C_SYNCHRONIZATION_STAGES = "3" *) (* C_S_LATENCY = "0" *) 
(* C_S_NUM_BYTES_ARRAY = "4" *) (* C_S_PIPELINE = "0" *) (* C_USER_BITS_PER_BYTE = "0" *) 
(* C_USER_WIDTH = "0" *) (* LP_ACLK_RELATIONSHIP = "1" *) (* LP_ARBITER_MODE = "1" *) 
(* LP_DT_REG = "true" *) (* LP_FIFO_OUTPUT_REG = "1" *) (* LP_FIFO_TYPE = "0" *) 
(* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) (* LP_LOG_NUM_MI = "1" *) 
(* LP_LOG_NUM_SI = "1" *) (* LP_MAX_DOWNSIZER_RATIO = "1" *) (* LP_MAX_NUM_BYTES = "4" *) 
(* LP_MAX_UPSIZER_RATIO = "1" *) (* LP_M_MAX_NUM_BYTES = "4" *) (* LP_M_MIN_NUM_BYTES = "4" *) 
(* LP_M_STATIC_DWIDTH = "1" *) (* LP_NODE_ADDR_WIDTH = "32" *) (* LP_NODE_ID_WIDTH = "1" *) 
(* LP_NODE_ROUTE_WIDTH = "4" *) (* LP_NODE_USER_WIDTH = "0" *) (* LP_SYNCHRONIZATION_STAGES = "2" *) 
(* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) (* LP_S_MAX_NUM_BYTES = "4" *) (* LP_S_MIN_NUM_BYTES = "4" *) 
(* LP_S_PIPELINE = "0" *) (* LP_S_STATIC_DWIDTH = "1" *) (* LP_ZERO_ROUTE_WIDTH = "0" *) 
(* ORIG_REF_NAME = "sc_node_v1_0_10_top" *) (* P_NUM_OUTSTANDING = "16" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10
   (s_sc_aclk,
    s_sc_aclken,
    s_sc_aresetn,
    s_sc_req,
    s_sc_info,
    s_sc_send,
    s_sc_recv,
    s_sc_payld,
    m_sc_aclk,
    m_sc_aclken,
    m_sc_aresetn,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld,
    m_axis_arb_tvalid,
    m_axis_arb_tready,
    m_axis_arb_tdata,
    s_axis_arb_tvalid,
    s_axis_arb_tready,
    s_axis_arb_tdata);
  input s_sc_aclk;
  input s_sc_aclken;
  input s_sc_aresetn;
  input [0:0]s_sc_req;
  input [0:0]s_sc_info;
  input [0:0]s_sc_send;
  output [0:0]s_sc_recv;
  input [140:0]s_sc_payld;
  input m_sc_aclk;
  input m_sc_aclken;
  input m_sc_aresetn;
  input [1:0]m_sc_recv;
  output [1:0]m_sc_send;
  output [1:0]m_sc_req;
  output [1:0]m_sc_info;
  output [140:0]m_sc_payld;
  output m_axis_arb_tvalid;
  input m_axis_arb_tready;
  output [15:0]m_axis_arb_tdata;
  input s_axis_arb_tvalid;
  output s_axis_arb_tready;
  input [15:0]s_axis_arb_tdata;

  wire arb_stall;
  wire arb_stall_late;
  wire inst_si_handler_n_2;
  wire [140:0]m_sc_payld;
  wire [1:0]m_sc_recv;
  wire [1:0]m_sc_send;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset_pipe;
  wire s_sc_aclk;
  (* DONT_TOUCH *) wire s_sc_areset;
  (* DONT_TOUCH *) wire s_sc_areset_pipe;
  wire s_sc_aresetn;
  wire [140:0]s_sc_payld;
  wire [0:0]s_sc_recv;
  wire [0:0]s_sc_send;
  wire [10:0]NLW_inst_mi_handler_m_sc_payld_UNCONNECTED;
  wire [10:0]NLW_inst_mi_handler_s_sc_payld_UNCONNECTED;

  design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized10 inst_mi_handler
       (.E(inst_si_handler_n_2),
        .arb_stall(arb_stall),
        .arb_stall_late(arb_stall_late),
        .m_sc_areset_r_reg_0(mi_handler_m_sc_areset_pipe),
        .m_sc_payld({NLW_inst_mi_handler_m_sc_payld_UNCONNECTED[10:8],m_sc_payld[104:99],NLW_inst_mi_handler_m_sc_payld_UNCONNECTED[1:0]}),
        .m_sc_recv(m_sc_recv[1]),
        .m_sc_send(m_sc_send[1]),
        .out(s_sc_areset_pipe),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_payld({NLW_inst_mi_handler_s_sc_payld_UNCONNECTED[10:8],s_sc_payld[104:99],NLW_inst_mi_handler_s_sc_payld_UNCONNECTED[1:0]}),
        .s_sc_send(s_sc_send));
  design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized5 inst_si_handler
       (.E(inst_si_handler_n_2),
        .arb_stall(arb_stall),
        .arb_stall_late(arb_stall_late),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_recv(s_sc_recv),
        .s_sc_send(s_sc_send));
  LUT1 #(
    .INIT(2'h2)) 
    mi_handler_m_sc_areset_pipe_inst
       (.I0(mi_handler_m_sc_areset),
        .O(mi_handler_m_sc_areset_pipe));
  LUT1 #(
    .INIT(2'h2)) 
    s_sc_areset_inst
       (.I0(s_sc_areset),
        .O(mi_handler_m_sc_areset));
  LUT1 #(
    .INIT(2'h1)) 
    s_sc_areset_pipe_inferred_i_1
       (.I0(s_sc_aresetn),
        .O(s_sc_areset_pipe));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    s_sc_areset_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_sc_areset),
        .S(s_sc_areset_pipe));
endmodule

(* C_ACLKEN_CONVERSION = "0" *) (* C_ACLK_RELATIONSHIP = "1" *) (* C_ADDR_WIDTH = "32" *) 
(* C_ARBITER_MODE = "1" *) (* C_CHANNEL = "4" *) (* C_DISABLE_IP = "0" *) 
(* C_ENABLE_PIPELINING = "8'b00000001" *) (* C_FAMILY = "zynq" *) (* C_FIFO_IP = "0" *) 
(* C_FIFO_OUTPUT_REG = "1" *) (* C_FIFO_SIZE = "0" *) (* C_FIFO_TYPE = "0" *) 
(* C_ID_WIDTH = "1" *) (* C_MAX_PAYLD_BYTES = "4" *) (* C_M_NUM_BYTES_ARRAY = "4" *) 
(* C_M_PIPELINE = "0" *) (* C_M_SEND_PIPELINE = "0" *) (* C_NUM_MI = "1" *) 
(* C_NUM_OUTSTANDING = "8" *) (* C_NUM_SI = "2" *) (* C_PAYLD_WIDTH = "7" *) 
(* C_SC_ROUTE_WIDTH = "3" *) (* C_SYNCHRONIZATION_STAGES = "3" *) (* C_S_LATENCY = "0" *) 
(* C_S_NUM_BYTES_ARRAY = "64'b0000000000000000000000000000010000000000000000000000000000000100" *) (* C_S_PIPELINE = "0" *) (* C_USER_BITS_PER_BYTE = "0" *) 
(* C_USER_WIDTH = "0" *) (* LP_ACLK_RELATIONSHIP = "1" *) (* LP_ARBITER_MODE = "1" *) 
(* LP_DT_REG = "true" *) (* LP_FIFO_OUTPUT_REG = "1" *) (* LP_FIFO_TYPE = "0" *) 
(* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) (* LP_LOG_NUM_MI = "1" *) 
(* LP_LOG_NUM_SI = "1" *) (* LP_MAX_DOWNSIZER_RATIO = "1" *) (* LP_MAX_NUM_BYTES = "4" *) 
(* LP_MAX_UPSIZER_RATIO = "1" *) (* LP_M_MAX_NUM_BYTES = "4" *) (* LP_M_MIN_NUM_BYTES = "4" *) 
(* LP_M_STATIC_DWIDTH = "1" *) (* LP_NODE_ADDR_WIDTH = "32" *) (* LP_NODE_ID_WIDTH = "1" *) 
(* LP_NODE_ROUTE_WIDTH = "3" *) (* LP_NODE_USER_WIDTH = "0" *) (* LP_SYNCHRONIZATION_STAGES = "2" *) 
(* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) (* LP_S_MAX_NUM_BYTES = "4" *) (* LP_S_MIN_NUM_BYTES = "4" *) 
(* LP_S_PIPELINE = "0" *) (* LP_S_STATIC_DWIDTH = "1" *) (* LP_ZERO_ROUTE_WIDTH = "0" *) 
(* ORIG_REF_NAME = "sc_node_v1_0_10_top" *) (* P_NUM_OUTSTANDING = "16" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11
   (s_sc_aclk,
    s_sc_aclken,
    s_sc_aresetn,
    s_sc_req,
    s_sc_info,
    s_sc_send,
    s_sc_recv,
    s_sc_payld,
    m_sc_aclk,
    m_sc_aclken,
    m_sc_aresetn,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld,
    m_axis_arb_tvalid,
    m_axis_arb_tready,
    m_axis_arb_tdata,
    s_axis_arb_tvalid,
    s_axis_arb_tready,
    s_axis_arb_tdata);
  input s_sc_aclk;
  input s_sc_aclken;
  input s_sc_aresetn;
  input [1:0]s_sc_req;
  input [1:0]s_sc_info;
  input [1:0]s_sc_send;
  output [1:0]s_sc_recv;
  input [6:0]s_sc_payld;
  input m_sc_aclk;
  input m_sc_aclken;
  input m_sc_aresetn;
  input [0:0]m_sc_recv;
  output [0:0]m_sc_send;
  output [0:0]m_sc_req;
  output [0:0]m_sc_info;
  output [6:0]m_sc_payld;
  output m_axis_arb_tvalid;
  input m_axis_arb_tready;
  output [15:0]m_axis_arb_tdata;
  input s_axis_arb_tvalid;
  output s_axis_arb_tready;
  input [15:0]s_axis_arb_tdata;

  wire [0:0]delay;
  wire [6:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_send;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset_pipe;
  wire s_sc_aclk;
  (* DONT_TOUCH *) wire s_sc_areset;
  (* DONT_TOUCH *) wire s_sc_areset_pipe;
  wire s_sc_aresetn;
  wire [1:1]s_sc_handshake;
  wire [1:0]s_sc_recv;
  wire [1:0]s_sc_req;
  wire [1:0]s_sc_send;
  wire [1:0]NLW_inst_mi_handler_s_sc_payld_UNCONNECTED;

  design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized11 inst_mi_handler
       (.allow_transfer_r_reg(delay),
        .\gen_single_rank.empty_r_reg (s_sc_recv[1]),
        .m_sc_areset_r_reg_0(mi_handler_m_sc_areset_pipe),
        .m_sc_payld(m_sc_payld[6:5]),
        .m_sc_recv(m_sc_recv),
        .m_sc_send(m_sc_send),
        .out(s_sc_areset_pipe),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_handshake(s_sc_handshake),
        .s_sc_payld(NLW_inst_mi_handler_s_sc_payld_UNCONNECTED[1:0]),
        .s_sc_send(s_sc_send[1]));
  design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized6 inst_si_handler
       (.\grant_i_reg[1] (s_sc_recv[1]),
        .\grant_i_reg[1]_0 (delay),
        .out(mi_handler_m_sc_areset),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_handshake(s_sc_handshake),
        .s_sc_req(s_sc_req[1]),
        .s_sc_send(s_sc_send[1]));
  LUT1 #(
    .INIT(2'h2)) 
    mi_handler_m_sc_areset_pipe_inst
       (.I0(mi_handler_m_sc_areset),
        .O(mi_handler_m_sc_areset_pipe));
  LUT1 #(
    .INIT(2'h2)) 
    s_sc_areset_inst
       (.I0(s_sc_areset),
        .O(mi_handler_m_sc_areset));
  LUT1 #(
    .INIT(2'h1)) 
    s_sc_areset_pipe_inferred_i_1
       (.I0(s_sc_aresetn),
        .O(s_sc_areset_pipe));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    s_sc_areset_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_sc_areset),
        .S(s_sc_areset_pipe));
endmodule

(* C_ACLKEN_CONVERSION = "0" *) (* C_ACLK_RELATIONSHIP = "1" *) (* C_ADDR_WIDTH = "32" *) 
(* C_ARBITER_MODE = "1" *) (* C_CHANNEL = "0" *) (* C_DISABLE_IP = "0" *) 
(* C_ENABLE_PIPELINING = "8'b00000001" *) (* C_FAMILY = "zynq" *) (* C_FIFO_IP = "0" *) 
(* C_FIFO_OUTPUT_REG = "1" *) (* C_FIFO_SIZE = "0" *) (* C_FIFO_TYPE = "0" *) 
(* C_ID_WIDTH = "1" *) (* C_MAX_PAYLD_BYTES = "4" *) (* C_M_NUM_BYTES_ARRAY = "4" *) 
(* C_M_PIPELINE = "0" *) (* C_M_SEND_PIPELINE = "0" *) (* C_NUM_MI = "1" *) 
(* C_NUM_OUTSTANDING = "8" *) (* C_NUM_SI = "2" *) (* C_PAYLD_WIDTH = "53" *) 
(* C_SC_ROUTE_WIDTH = "3" *) (* C_SYNCHRONIZATION_STAGES = "3" *) (* C_S_LATENCY = "0" *) 
(* C_S_NUM_BYTES_ARRAY = "64'b0000000000000000000000000000010000000000000000000000000000000100" *) (* C_S_PIPELINE = "0" *) (* C_USER_BITS_PER_BYTE = "0" *) 
(* C_USER_WIDTH = "512" *) (* LP_ACLK_RELATIONSHIP = "1" *) (* LP_ARBITER_MODE = "1" *) 
(* LP_DT_REG = "true" *) (* LP_FIFO_OUTPUT_REG = "1" *) (* LP_FIFO_TYPE = "0" *) 
(* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) (* LP_LOG_NUM_MI = "1" *) 
(* LP_LOG_NUM_SI = "1" *) (* LP_MAX_DOWNSIZER_RATIO = "1" *) (* LP_MAX_NUM_BYTES = "4" *) 
(* LP_MAX_UPSIZER_RATIO = "1" *) (* LP_M_MAX_NUM_BYTES = "4" *) (* LP_M_MIN_NUM_BYTES = "4" *) 
(* LP_M_STATIC_DWIDTH = "1" *) (* LP_NODE_ADDR_WIDTH = "32" *) (* LP_NODE_ID_WIDTH = "1" *) 
(* LP_NODE_ROUTE_WIDTH = "3" *) (* LP_NODE_USER_WIDTH = "1" *) (* LP_SYNCHRONIZATION_STAGES = "2" *) 
(* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) (* LP_S_MAX_NUM_BYTES = "4" *) (* LP_S_MIN_NUM_BYTES = "4" *) 
(* LP_S_PIPELINE = "0" *) (* LP_S_STATIC_DWIDTH = "1" *) (* LP_ZERO_ROUTE_WIDTH = "0" *) 
(* ORIG_REF_NAME = "sc_node_v1_0_10_top" *) (* P_NUM_OUTSTANDING = "16" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12
   (s_sc_aclk,
    s_sc_aclken,
    s_sc_aresetn,
    s_sc_req,
    s_sc_info,
    s_sc_send,
    s_sc_recv,
    s_sc_payld,
    m_sc_aclk,
    m_sc_aclken,
    m_sc_aresetn,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld,
    m_axis_arb_tvalid,
    m_axis_arb_tready,
    m_axis_arb_tdata,
    s_axis_arb_tvalid,
    s_axis_arb_tready,
    s_axis_arb_tdata);
  input s_sc_aclk;
  input s_sc_aclken;
  input s_sc_aresetn;
  input [1:0]s_sc_req;
  input [1:0]s_sc_info;
  input [1:0]s_sc_send;
  output [1:0]s_sc_recv;
  input [52:0]s_sc_payld;
  input m_sc_aclk;
  input m_sc_aclken;
  input m_sc_aresetn;
  input [0:0]m_sc_recv;
  output [0:0]m_sc_send;
  output [0:0]m_sc_req;
  output [0:0]m_sc_info;
  output [52:0]m_sc_payld;
  output m_axis_arb_tvalid;
  input m_axis_arb_tready;
  output [15:0]m_axis_arb_tdata;
  input s_axis_arb_tvalid;
  output s_axis_arb_tready;
  input [15:0]s_axis_arb_tdata;

  wire [0:0]delay;
  wire [52:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_send;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset_pipe;
  wire s_sc_aclk;
  (* DONT_TOUCH *) wire s_sc_areset;
  (* DONT_TOUCH *) wire s_sc_areset_pipe;
  wire s_sc_aresetn;
  wire [1:1]s_sc_handshake;
  wire [52:0]s_sc_payld;
  wire [1:0]s_sc_recv;
  wire [1:0]s_sc_req;
  wire [1:0]s_sc_send;
  wire [33:0]NLW_inst_mi_handler_m_sc_payld_UNCONNECTED;
  wire [33:0]NLW_inst_mi_handler_s_sc_payld_UNCONNECTED;

  design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized12 inst_mi_handler
       (.E(s_sc_handshake),
        .allow_transfer_r_reg(delay),
        .\gen_single_rank.empty_r_reg (s_sc_recv[1]),
        .m_sc_areset_r_reg_0(mi_handler_m_sc_areset_pipe),
        .m_sc_payld({NLW_inst_mi_handler_m_sc_payld_UNCONNECTED[33:13],m_sc_payld[31:20],NLW_inst_mi_handler_m_sc_payld_UNCONNECTED[0]}),
        .m_sc_recv(m_sc_recv),
        .m_sc_send(m_sc_send),
        .out(s_sc_areset_pipe),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_payld({NLW_inst_mi_handler_s_sc_payld_UNCONNECTED[33:13],s_sc_payld[31:20],NLW_inst_mi_handler_s_sc_payld_UNCONNECTED[0]}),
        .s_sc_send(s_sc_send[1]));
  design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized7 inst_si_handler
       (.E(s_sc_handshake),
        .\grant_i_reg[1] (s_sc_recv[1]),
        .\grant_i_reg[1]_0 (delay),
        .out(mi_handler_m_sc_areset),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_req(s_sc_req[1]),
        .s_sc_send(s_sc_send[1]));
  LUT1 #(
    .INIT(2'h2)) 
    mi_handler_m_sc_areset_pipe_inst
       (.I0(mi_handler_m_sc_areset),
        .O(mi_handler_m_sc_areset_pipe));
  LUT1 #(
    .INIT(2'h2)) 
    s_sc_areset_inst
       (.I0(s_sc_areset),
        .O(mi_handler_m_sc_areset));
  LUT1 #(
    .INIT(2'h1)) 
    s_sc_areset_pipe_inferred_i_1
       (.I0(s_sc_aresetn),
        .O(s_sc_areset_pipe));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    s_sc_areset_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_sc_areset),
        .S(s_sc_areset_pipe));
endmodule

(* C_ACLKEN_CONVERSION = "0" *) (* C_ACLK_RELATIONSHIP = "1" *) (* C_ADDR_WIDTH = "32" *) 
(* C_ARBITER_MODE = "1" *) (* C_CHANNEL = "1" *) (* C_DISABLE_IP = "0" *) 
(* C_ENABLE_PIPELINING = "8'b00000001" *) (* C_FAMILY = "zynq" *) (* C_FIFO_IP = "0" *) 
(* C_FIFO_OUTPUT_REG = "1" *) (* C_FIFO_SIZE = "0" *) (* C_FIFO_TYPE = "0" *) 
(* C_ID_WIDTH = "1" *) (* C_MAX_PAYLD_BYTES = "4" *) (* C_M_NUM_BYTES_ARRAY = "64'b0000000000000000000000000000010000000000000000000000000000000100" *) 
(* C_M_PIPELINE = "0" *) (* C_M_SEND_PIPELINE = "0" *) (* C_NUM_MI = "2" *) 
(* C_NUM_OUTSTANDING = "8" *) (* C_NUM_SI = "1" *) (* C_PAYLD_WIDTH = "55" *) 
(* C_SC_ROUTE_WIDTH = "4" *) (* C_SYNCHRONIZATION_STAGES = "3" *) (* C_S_LATENCY = "0" *) 
(* C_S_NUM_BYTES_ARRAY = "4" *) (* C_S_PIPELINE = "0" *) (* C_USER_BITS_PER_BYTE = "0" *) 
(* C_USER_WIDTH = "512" *) (* LP_ACLK_RELATIONSHIP = "1" *) (* LP_ARBITER_MODE = "2" *) 
(* LP_DT_REG = "true" *) (* LP_FIFO_OUTPUT_REG = "1" *) (* LP_FIFO_TYPE = "0" *) 
(* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) (* LP_LOG_NUM_MI = "1" *) 
(* LP_LOG_NUM_SI = "1" *) (* LP_MAX_DOWNSIZER_RATIO = "1" *) (* LP_MAX_NUM_BYTES = "4" *) 
(* LP_MAX_UPSIZER_RATIO = "1" *) (* LP_M_MAX_NUM_BYTES = "4" *) (* LP_M_MIN_NUM_BYTES = "4" *) 
(* LP_M_STATIC_DWIDTH = "1" *) (* LP_NODE_ADDR_WIDTH = "32" *) (* LP_NODE_ID_WIDTH = "1" *) 
(* LP_NODE_ROUTE_WIDTH = "4" *) (* LP_NODE_USER_WIDTH = "1" *) (* LP_SYNCHRONIZATION_STAGES = "2" *) 
(* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) (* LP_S_MAX_NUM_BYTES = "4" *) (* LP_S_MIN_NUM_BYTES = "4" *) 
(* LP_S_PIPELINE = "0" *) (* LP_S_STATIC_DWIDTH = "1" *) (* LP_ZERO_ROUTE_WIDTH = "0" *) 
(* ORIG_REF_NAME = "sc_node_v1_0_10_top" *) (* P_NUM_OUTSTANDING = "16" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13
   (s_sc_aclk,
    s_sc_aclken,
    s_sc_aresetn,
    s_sc_req,
    s_sc_info,
    s_sc_send,
    s_sc_recv,
    s_sc_payld,
    m_sc_aclk,
    m_sc_aclken,
    m_sc_aresetn,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld,
    m_axis_arb_tvalid,
    m_axis_arb_tready,
    m_axis_arb_tdata,
    s_axis_arb_tvalid,
    s_axis_arb_tready,
    s_axis_arb_tdata);
  input s_sc_aclk;
  input s_sc_aclken;
  input s_sc_aresetn;
  input [0:0]s_sc_req;
  input [0:0]s_sc_info;
  input [0:0]s_sc_send;
  output [0:0]s_sc_recv;
  input [54:0]s_sc_payld;
  input m_sc_aclk;
  input m_sc_aclken;
  input m_sc_aresetn;
  input [1:0]m_sc_recv;
  output [1:0]m_sc_send;
  output [1:0]m_sc_req;
  output [1:0]m_sc_info;
  output [54:0]m_sc_payld;
  output m_axis_arb_tvalid;
  input m_axis_arb_tready;
  output [15:0]m_axis_arb_tdata;
  input s_axis_arb_tvalid;
  output s_axis_arb_tready;
  input [15:0]s_axis_arb_tdata;

  wire arb_stall;
  wire arb_stall_late;
  wire inst_si_handler_n_2;
  wire [54:0]m_sc_payld;
  wire [1:0]m_sc_recv;
  wire [1:0]m_sc_send;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset_pipe;
  wire s_sc_aclk;
  (* DONT_TOUCH *) wire s_sc_areset;
  (* DONT_TOUCH *) wire s_sc_areset_pipe;
  wire s_sc_aresetn;
  wire [54:0]s_sc_payld;
  wire [0:0]s_sc_recv;
  wire [0:0]s_sc_send;
  wire [35:0]NLW_inst_mi_handler_m_sc_payld_UNCONNECTED;
  wire [36:1]NLW_inst_mi_handler_s_sc_payld_UNCONNECTED;

  design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized13 inst_mi_handler
       (.E(inst_si_handler_n_2),
        .arb_stall(arb_stall),
        .arb_stall_late(arb_stall_late),
        .m_sc_areset_r_reg_0(mi_handler_m_sc_areset_pipe),
        .m_sc_payld({NLW_inst_mi_handler_m_sc_payld_UNCONNECTED[35:2],m_sc_payld[20],NLW_inst_mi_handler_m_sc_payld_UNCONNECTED[0]}),
        .m_sc_recv(m_sc_recv[1]),
        .m_sc_send(m_sc_send[1]),
        .out(s_sc_areset_pipe),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_payld({NLW_inst_mi_handler_s_sc_payld_UNCONNECTED[36:3],s_sc_payld[20],NLW_inst_mi_handler_s_sc_payld_UNCONNECTED[1],s_sc_payld[1]}),
        .s_sc_send(s_sc_send));
  design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized8 inst_si_handler
       (.E(inst_si_handler_n_2),
        .arb_stall(arb_stall),
        .arb_stall_late(arb_stall_late),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_recv(s_sc_recv),
        .s_sc_send(s_sc_send));
  LUT1 #(
    .INIT(2'h2)) 
    mi_handler_m_sc_areset_pipe_inst
       (.I0(mi_handler_m_sc_areset),
        .O(mi_handler_m_sc_areset_pipe));
  LUT1 #(
    .INIT(2'h2)) 
    s_sc_areset_inst
       (.I0(s_sc_areset),
        .O(mi_handler_m_sc_areset));
  LUT1 #(
    .INIT(2'h1)) 
    s_sc_areset_pipe_inferred_i_1
       (.I0(s_sc_aresetn),
        .O(s_sc_areset_pipe));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    s_sc_areset_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_sc_areset),
        .S(s_sc_areset_pipe));
endmodule

(* C_ACLKEN_CONVERSION = "0" *) (* C_ACLK_RELATIONSHIP = "1" *) (* C_ADDR_WIDTH = "32" *) 
(* C_ARBITER_MODE = "1" *) (* C_CHANNEL = "0" *) (* C_DISABLE_IP = "0" *) 
(* C_ENABLE_PIPELINING = "8'b00000001" *) (* C_FAMILY = "zynq" *) (* C_FIFO_IP = "0" *) 
(* C_FIFO_OUTPUT_REG = "1" *) (* C_FIFO_SIZE = "5" *) (* C_FIFO_TYPE = "2" *) 
(* C_ID_WIDTH = "1" *) (* C_MAX_PAYLD_BYTES = "4" *) (* C_M_NUM_BYTES_ARRAY = "4" *) 
(* C_M_PIPELINE = "0" *) (* C_M_SEND_PIPELINE = "1" *) (* C_NUM_MI = "1" *) 
(* C_NUM_OUTSTANDING = "8" *) (* C_NUM_SI = "1" *) (* C_PAYLD_WIDTH = "53" *) 
(* C_SC_ROUTE_WIDTH = "3" *) (* C_SYNCHRONIZATION_STAGES = "3" *) (* C_S_LATENCY = "0" *) 
(* C_S_NUM_BYTES_ARRAY = "4" *) (* C_S_PIPELINE = "0" *) (* C_USER_BITS_PER_BYTE = "0" *) 
(* C_USER_WIDTH = "0" *) (* LP_ACLK_RELATIONSHIP = "1" *) (* LP_ARBITER_MODE = "1" *) 
(* LP_DT_REG = "true" *) (* LP_FIFO_OUTPUT_REG = "1" *) (* LP_FIFO_TYPE = "2" *) 
(* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) (* LP_LOG_NUM_MI = "1" *) 
(* LP_LOG_NUM_SI = "1" *) (* LP_MAX_DOWNSIZER_RATIO = "1" *) (* LP_MAX_NUM_BYTES = "4" *) 
(* LP_MAX_UPSIZER_RATIO = "1" *) (* LP_M_MAX_NUM_BYTES = "4" *) (* LP_M_MIN_NUM_BYTES = "4" *) 
(* LP_M_STATIC_DWIDTH = "1" *) (* LP_NODE_ADDR_WIDTH = "32" *) (* LP_NODE_ID_WIDTH = "1" *) 
(* LP_NODE_ROUTE_WIDTH = "3" *) (* LP_NODE_USER_WIDTH = "1" *) (* LP_SYNCHRONIZATION_STAGES = "2" *) 
(* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) (* LP_S_MAX_NUM_BYTES = "4" *) (* LP_S_MIN_NUM_BYTES = "4" *) 
(* LP_S_PIPELINE = "0" *) (* LP_S_STATIC_DWIDTH = "1" *) (* LP_ZERO_ROUTE_WIDTH = "0" *) 
(* ORIG_REF_NAME = "sc_node_v1_0_10_top" *) (* P_NUM_OUTSTANDING = "16" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2
   (s_sc_aclk,
    s_sc_aclken,
    s_sc_aresetn,
    s_sc_req,
    s_sc_info,
    s_sc_send,
    s_sc_recv,
    s_sc_payld,
    m_sc_aclk,
    m_sc_aclken,
    m_sc_aresetn,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld,
    m_axis_arb_tvalid,
    m_axis_arb_tready,
    m_axis_arb_tdata,
    s_axis_arb_tvalid,
    s_axis_arb_tready,
    s_axis_arb_tdata);
  input s_sc_aclk;
  input s_sc_aclken;
  input s_sc_aresetn;
  input [0:0]s_sc_req;
  input [0:0]s_sc_info;
  input [0:0]s_sc_send;
  output [0:0]s_sc_recv;
  input [52:0]s_sc_payld;
  input m_sc_aclk;
  input m_sc_aclken;
  input m_sc_aresetn;
  input [0:0]m_sc_recv;
  output [0:0]m_sc_send;
  output [0:0]m_sc_req;
  output [0:0]m_sc_info;
  output [52:0]m_sc_payld;
  output m_axis_arb_tvalid;
  input m_axis_arb_tready;
  output [15:0]m_axis_arb_tdata;
  input s_axis_arb_tvalid;
  output s_axis_arb_tready;
  input [15:0]s_axis_arb_tdata;

  wire [0:0]m_sc_recv;
  wire [0:0]m_sc_req;
  wire [0:0]m_sc_send;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset_pipe;
  wire s_sc_aclk;
  (* DONT_TOUCH *) wire s_sc_areset;
  (* DONT_TOUCH *) wire s_sc_areset_pipe;
  wire s_sc_aresetn;
  wire [0:0]s_sc_send;

  design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized2 inst_mi_handler
       (.m_sc_recv(m_sc_recv),
        .m_sc_req(m_sc_req),
        .m_sc_send(m_sc_send),
        .out(s_sc_areset_pipe),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_send(s_sc_send));
  LUT1 #(
    .INIT(2'h2)) 
    mi_handler_m_sc_areset_pipe_inst
       (.I0(mi_handler_m_sc_areset),
        .O(mi_handler_m_sc_areset_pipe));
  LUT1 #(
    .INIT(2'h2)) 
    s_sc_areset_inst
       (.I0(s_sc_areset),
        .O(mi_handler_m_sc_areset));
  LUT1 #(
    .INIT(2'h1)) 
    s_sc_areset_pipe_inferred_i_1
       (.I0(s_sc_aresetn),
        .O(s_sc_areset_pipe));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    s_sc_areset_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_sc_areset),
        .S(s_sc_areset_pipe));
endmodule

(* C_ACLKEN_CONVERSION = "0" *) (* C_ACLK_RELATIONSHIP = "1" *) (* C_ADDR_WIDTH = "32" *) 
(* C_ARBITER_MODE = "1" *) (* C_CHANNEL = "1" *) (* C_DISABLE_IP = "0" *) 
(* C_ENABLE_PIPELINING = "8'b00000001" *) (* C_FAMILY = "zynq" *) (* C_FIFO_IP = "0" *) 
(* C_FIFO_OUTPUT_REG = "1" *) (* C_FIFO_SIZE = "5" *) (* C_FIFO_TYPE = "2" *) 
(* C_ID_WIDTH = "1" *) (* C_MAX_PAYLD_BYTES = "4" *) (* C_M_NUM_BYTES_ARRAY = "4" *) 
(* C_M_PIPELINE = "0" *) (* C_M_SEND_PIPELINE = "0" *) (* C_NUM_MI = "1" *) 
(* C_NUM_OUTSTANDING = "8" *) (* C_NUM_SI = "1" *) (* C_PAYLD_WIDTH = "55" *) 
(* C_SC_ROUTE_WIDTH = "4" *) (* C_SYNCHRONIZATION_STAGES = "3" *) (* C_S_LATENCY = "0" *) 
(* C_S_NUM_BYTES_ARRAY = "4" *) (* C_S_PIPELINE = "0" *) (* C_USER_BITS_PER_BYTE = "0" *) 
(* C_USER_WIDTH = "0" *) (* LP_ACLK_RELATIONSHIP = "1" *) (* LP_ARBITER_MODE = "2" *) 
(* LP_DT_REG = "true" *) (* LP_FIFO_OUTPUT_REG = "1" *) (* LP_FIFO_TYPE = "2" *) 
(* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) (* LP_LOG_NUM_MI = "1" *) 
(* LP_LOG_NUM_SI = "1" *) (* LP_MAX_DOWNSIZER_RATIO = "1" *) (* LP_MAX_NUM_BYTES = "4" *) 
(* LP_MAX_UPSIZER_RATIO = "1" *) (* LP_M_MAX_NUM_BYTES = "4" *) (* LP_M_MIN_NUM_BYTES = "4" *) 
(* LP_M_STATIC_DWIDTH = "1" *) (* LP_NODE_ADDR_WIDTH = "32" *) (* LP_NODE_ID_WIDTH = "1" *) 
(* LP_NODE_ROUTE_WIDTH = "4" *) (* LP_NODE_USER_WIDTH = "1" *) (* LP_SYNCHRONIZATION_STAGES = "2" *) 
(* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) (* LP_S_MAX_NUM_BYTES = "4" *) (* LP_S_MIN_NUM_BYTES = "4" *) 
(* LP_S_PIPELINE = "0" *) (* LP_S_STATIC_DWIDTH = "1" *) (* LP_ZERO_ROUTE_WIDTH = "0" *) 
(* ORIG_REF_NAME = "sc_node_v1_0_10_top" *) (* P_NUM_OUTSTANDING = "16" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3
   (s_sc_aclk,
    s_sc_aclken,
    s_sc_aresetn,
    s_sc_req,
    s_sc_info,
    s_sc_send,
    s_sc_recv,
    s_sc_payld,
    m_sc_aclk,
    m_sc_aclken,
    m_sc_aresetn,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld,
    m_axis_arb_tvalid,
    m_axis_arb_tready,
    m_axis_arb_tdata,
    s_axis_arb_tvalid,
    s_axis_arb_tready,
    s_axis_arb_tdata);
  input s_sc_aclk;
  input s_sc_aclken;
  input s_sc_aresetn;
  input [0:0]s_sc_req;
  input [0:0]s_sc_info;
  input [0:0]s_sc_send;
  output [0:0]s_sc_recv;
  input [54:0]s_sc_payld;
  input m_sc_aclk;
  input m_sc_aclken;
  input m_sc_aresetn;
  input [0:0]m_sc_recv;
  output [0:0]m_sc_send;
  output [0:0]m_sc_req;
  output [0:0]m_sc_info;
  output [54:0]m_sc_payld;
  output m_axis_arb_tvalid;
  input m_axis_arb_tready;
  output [15:0]m_axis_arb_tdata;
  input s_axis_arb_tvalid;
  output s_axis_arb_tready;
  input [15:0]s_axis_arb_tdata;

  wire [0:0]m_sc_send;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset_pipe;
  wire s_sc_aclk;
  (* DONT_TOUCH *) wire s_sc_areset;
  (* DONT_TOUCH *) wire s_sc_areset_pipe;
  wire s_sc_aresetn;
  wire [0:0]s_sc_send;

  design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized3 inst_mi_handler
       (.m_sc_send(m_sc_send),
        .out(s_sc_areset_pipe),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_send(s_sc_send));
  LUT1 #(
    .INIT(2'h2)) 
    mi_handler_m_sc_areset_pipe_inst
       (.I0(mi_handler_m_sc_areset),
        .O(mi_handler_m_sc_areset_pipe));
  LUT1 #(
    .INIT(2'h2)) 
    s_sc_areset_inst
       (.I0(s_sc_areset),
        .O(mi_handler_m_sc_areset));
  LUT1 #(
    .INIT(2'h1)) 
    s_sc_areset_pipe_inferred_i_1
       (.I0(s_sc_aresetn),
        .O(s_sc_areset_pipe));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    s_sc_areset_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_sc_areset),
        .S(s_sc_areset_pipe));
endmodule

(* C_ACLKEN_CONVERSION = "0" *) (* C_ACLK_RELATIONSHIP = "1" *) (* C_ADDR_WIDTH = "32" *) 
(* C_ARBITER_MODE = "1" *) (* C_CHANNEL = "2" *) (* C_DISABLE_IP = "0" *) 
(* C_ENABLE_PIPELINING = "8'b00000001" *) (* C_FAMILY = "zynq" *) (* C_FIFO_IP = "0" *) 
(* C_FIFO_OUTPUT_REG = "1" *) (* C_FIFO_SIZE = "5" *) (* C_FIFO_TYPE = "2" *) 
(* C_ID_WIDTH = "1" *) (* C_MAX_PAYLD_BYTES = "4" *) (* C_M_NUM_BYTES_ARRAY = "4" *) 
(* C_M_PIPELINE = "0" *) (* C_M_SEND_PIPELINE = "1" *) (* C_NUM_MI = "1" *) 
(* C_NUM_OUTSTANDING = "8" *) (* C_NUM_SI = "1" *) (* C_PAYLD_WIDTH = "141" *) 
(* C_SC_ROUTE_WIDTH = "4" *) (* C_SYNCHRONIZATION_STAGES = "3" *) (* C_S_LATENCY = "0" *) 
(* C_S_NUM_BYTES_ARRAY = "4" *) (* C_S_PIPELINE = "0" *) (* C_USER_BITS_PER_BYTE = "0" *) 
(* C_USER_WIDTH = "0" *) (* LP_ACLK_RELATIONSHIP = "1" *) (* LP_ARBITER_MODE = "1" *) 
(* LP_DT_REG = "true" *) (* LP_FIFO_OUTPUT_REG = "1" *) (* LP_FIFO_TYPE = "2" *) 
(* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) (* LP_LOG_NUM_MI = "1" *) 
(* LP_LOG_NUM_SI = "1" *) (* LP_MAX_DOWNSIZER_RATIO = "1" *) (* LP_MAX_NUM_BYTES = "4" *) 
(* LP_MAX_UPSIZER_RATIO = "1" *) (* LP_M_MAX_NUM_BYTES = "4" *) (* LP_M_MIN_NUM_BYTES = "4" *) 
(* LP_M_STATIC_DWIDTH = "1" *) (* LP_NODE_ADDR_WIDTH = "32" *) (* LP_NODE_ID_WIDTH = "1" *) 
(* LP_NODE_ROUTE_WIDTH = "4" *) (* LP_NODE_USER_WIDTH = "0" *) (* LP_SYNCHRONIZATION_STAGES = "2" *) 
(* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) (* LP_S_MAX_NUM_BYTES = "4" *) (* LP_S_MIN_NUM_BYTES = "4" *) 
(* LP_S_PIPELINE = "0" *) (* LP_S_STATIC_DWIDTH = "1" *) (* LP_ZERO_ROUTE_WIDTH = "0" *) 
(* ORIG_REF_NAME = "sc_node_v1_0_10_top" *) (* P_NUM_OUTSTANDING = "16" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4
   (s_sc_aclk,
    s_sc_aclken,
    s_sc_aresetn,
    s_sc_req,
    s_sc_info,
    s_sc_send,
    s_sc_recv,
    s_sc_payld,
    m_sc_aclk,
    m_sc_aclken,
    m_sc_aresetn,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld,
    m_axis_arb_tvalid,
    m_axis_arb_tready,
    m_axis_arb_tdata,
    s_axis_arb_tvalid,
    s_axis_arb_tready,
    s_axis_arb_tdata);
  input s_sc_aclk;
  input s_sc_aclken;
  input s_sc_aresetn;
  input [0:0]s_sc_req;
  input [0:0]s_sc_info;
  input [0:0]s_sc_send;
  output [0:0]s_sc_recv;
  input [140:0]s_sc_payld;
  input m_sc_aclk;
  input m_sc_aclken;
  input m_sc_aresetn;
  input [0:0]m_sc_recv;
  output [0:0]m_sc_send;
  output [0:0]m_sc_req;
  output [0:0]m_sc_info;
  output [140:0]m_sc_payld;
  output m_axis_arb_tvalid;
  input m_axis_arb_tready;
  output [15:0]m_axis_arb_tdata;
  input s_axis_arb_tvalid;
  output s_axis_arb_tready;
  input [15:0]s_axis_arb_tdata;

  wire [0:0]m_sc_send;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset_pipe;
  wire s_sc_aclk;
  (* DONT_TOUCH *) wire s_sc_areset;
  (* DONT_TOUCH *) wire s_sc_areset_pipe;
  wire s_sc_aresetn;
  wire [0:0]s_sc_send;

  design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized4 inst_mi_handler
       (.m_sc_send(m_sc_send),
        .out(s_sc_areset_pipe),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_send(s_sc_send));
  LUT1 #(
    .INIT(2'h2)) 
    mi_handler_m_sc_areset_pipe_inst
       (.I0(mi_handler_m_sc_areset),
        .O(mi_handler_m_sc_areset_pipe));
  LUT1 #(
    .INIT(2'h2)) 
    s_sc_areset_inst
       (.I0(s_sc_areset),
        .O(mi_handler_m_sc_areset));
  LUT1 #(
    .INIT(2'h1)) 
    s_sc_areset_pipe_inferred_i_1
       (.I0(s_sc_aresetn),
        .O(s_sc_areset_pipe));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    s_sc_areset_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_sc_areset),
        .S(s_sc_areset_pipe));
endmodule

(* C_ACLKEN_CONVERSION = "0" *) (* C_ACLK_RELATIONSHIP = "1" *) (* C_ADDR_WIDTH = "32" *) 
(* C_ARBITER_MODE = "1" *) (* C_CHANNEL = "3" *) (* C_DISABLE_IP = "0" *) 
(* C_ENABLE_PIPELINING = "8'b00000001" *) (* C_FAMILY = "zynq" *) (* C_FIFO_IP = "0" *) 
(* C_FIFO_OUTPUT_REG = "1" *) (* C_FIFO_SIZE = "5" *) (* C_FIFO_TYPE = "2" *) 
(* C_ID_WIDTH = "1" *) (* C_MAX_PAYLD_BYTES = "4" *) (* C_M_NUM_BYTES_ARRAY = "4" *) 
(* C_M_PIPELINE = "0" *) (* C_M_SEND_PIPELINE = "1" *) (* C_NUM_MI = "1" *) 
(* C_NUM_OUTSTANDING = "8" *) (* C_NUM_SI = "1" *) (* C_PAYLD_WIDTH = "141" *) 
(* C_SC_ROUTE_WIDTH = "4" *) (* C_SYNCHRONIZATION_STAGES = "3" *) (* C_S_LATENCY = "0" *) 
(* C_S_NUM_BYTES_ARRAY = "4" *) (* C_S_PIPELINE = "0" *) (* C_USER_BITS_PER_BYTE = "0" *) 
(* C_USER_WIDTH = "0" *) (* LP_ACLK_RELATIONSHIP = "1" *) (* LP_ARBITER_MODE = "1" *) 
(* LP_DT_REG = "true" *) (* LP_FIFO_OUTPUT_REG = "1" *) (* LP_FIFO_TYPE = "2" *) 
(* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) (* LP_LOG_NUM_MI = "1" *) 
(* LP_LOG_NUM_SI = "1" *) (* LP_MAX_DOWNSIZER_RATIO = "1" *) (* LP_MAX_NUM_BYTES = "4" *) 
(* LP_MAX_UPSIZER_RATIO = "1" *) (* LP_M_MAX_NUM_BYTES = "4" *) (* LP_M_MIN_NUM_BYTES = "4" *) 
(* LP_M_STATIC_DWIDTH = "1" *) (* LP_NODE_ADDR_WIDTH = "32" *) (* LP_NODE_ID_WIDTH = "1" *) 
(* LP_NODE_ROUTE_WIDTH = "4" *) (* LP_NODE_USER_WIDTH = "0" *) (* LP_SYNCHRONIZATION_STAGES = "2" *) 
(* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) (* LP_S_MAX_NUM_BYTES = "4" *) (* LP_S_MIN_NUM_BYTES = "4" *) 
(* LP_S_PIPELINE = "0" *) (* LP_S_STATIC_DWIDTH = "1" *) (* LP_ZERO_ROUTE_WIDTH = "0" *) 
(* ORIG_REF_NAME = "sc_node_v1_0_10_top" *) (* P_NUM_OUTSTANDING = "16" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5
   (s_sc_aclk,
    s_sc_aclken,
    s_sc_aresetn,
    s_sc_req,
    s_sc_info,
    s_sc_send,
    s_sc_recv,
    s_sc_payld,
    m_sc_aclk,
    m_sc_aclken,
    m_sc_aresetn,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld,
    m_axis_arb_tvalid,
    m_axis_arb_tready,
    m_axis_arb_tdata,
    s_axis_arb_tvalid,
    s_axis_arb_tready,
    s_axis_arb_tdata);
  input s_sc_aclk;
  input s_sc_aclken;
  input s_sc_aresetn;
  input [0:0]s_sc_req;
  input [0:0]s_sc_info;
  input [0:0]s_sc_send;
  output [0:0]s_sc_recv;
  input [140:0]s_sc_payld;
  input m_sc_aclk;
  input m_sc_aclken;
  input m_sc_aresetn;
  input [0:0]m_sc_recv;
  output [0:0]m_sc_send;
  output [0:0]m_sc_req;
  output [0:0]m_sc_info;
  output [140:0]m_sc_payld;
  output m_axis_arb_tvalid;
  input m_axis_arb_tready;
  output [15:0]m_axis_arb_tdata;
  input s_axis_arb_tvalid;
  output s_axis_arb_tready;
  input [15:0]s_axis_arb_tdata;

  wire [0:0]m_sc_send;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset_pipe;
  wire s_sc_aclk;
  (* DONT_TOUCH *) wire s_sc_areset;
  (* DONT_TOUCH *) wire s_sc_areset_pipe;
  wire s_sc_aresetn;
  wire [0:0]s_sc_send;

  design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized5 inst_mi_handler
       (.m_sc_send(m_sc_send),
        .out(s_sc_areset_pipe),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_send(s_sc_send));
  LUT1 #(
    .INIT(2'h2)) 
    mi_handler_m_sc_areset_pipe_inst
       (.I0(mi_handler_m_sc_areset),
        .O(mi_handler_m_sc_areset_pipe));
  LUT1 #(
    .INIT(2'h2)) 
    s_sc_areset_inst
       (.I0(s_sc_areset),
        .O(mi_handler_m_sc_areset));
  LUT1 #(
    .INIT(2'h1)) 
    s_sc_areset_pipe_inferred_i_1
       (.I0(s_sc_aresetn),
        .O(s_sc_areset_pipe));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    s_sc_areset_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_sc_areset),
        .S(s_sc_areset_pipe));
endmodule

(* C_ACLKEN_CONVERSION = "0" *) (* C_ACLK_RELATIONSHIP = "1" *) (* C_ADDR_WIDTH = "32" *) 
(* C_ARBITER_MODE = "1" *) (* C_CHANNEL = "4" *) (* C_DISABLE_IP = "0" *) 
(* C_ENABLE_PIPELINING = "8'b00000001" *) (* C_FAMILY = "zynq" *) (* C_FIFO_IP = "0" *) 
(* C_FIFO_OUTPUT_REG = "1" *) (* C_FIFO_SIZE = "5" *) (* C_FIFO_TYPE = "2" *) 
(* C_ID_WIDTH = "1" *) (* C_MAX_PAYLD_BYTES = "4" *) (* C_M_NUM_BYTES_ARRAY = "4" *) 
(* C_M_PIPELINE = "0" *) (* C_M_SEND_PIPELINE = "0" *) (* C_NUM_MI = "1" *) 
(* C_NUM_OUTSTANDING = "8" *) (* C_NUM_SI = "1" *) (* C_PAYLD_WIDTH = "7" *) 
(* C_SC_ROUTE_WIDTH = "3" *) (* C_SYNCHRONIZATION_STAGES = "3" *) (* C_S_LATENCY = "0" *) 
(* C_S_NUM_BYTES_ARRAY = "4" *) (* C_S_PIPELINE = "0" *) (* C_USER_BITS_PER_BYTE = "0" *) 
(* C_USER_WIDTH = "0" *) (* LP_ACLK_RELATIONSHIP = "1" *) (* LP_ARBITER_MODE = "1" *) 
(* LP_DT_REG = "true" *) (* LP_FIFO_OUTPUT_REG = "1" *) (* LP_FIFO_TYPE = "2" *) 
(* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) (* LP_LOG_NUM_MI = "1" *) 
(* LP_LOG_NUM_SI = "1" *) (* LP_MAX_DOWNSIZER_RATIO = "1" *) (* LP_MAX_NUM_BYTES = "4" *) 
(* LP_MAX_UPSIZER_RATIO = "1" *) (* LP_M_MAX_NUM_BYTES = "4" *) (* LP_M_MIN_NUM_BYTES = "4" *) 
(* LP_M_STATIC_DWIDTH = "1" *) (* LP_NODE_ADDR_WIDTH = "32" *) (* LP_NODE_ID_WIDTH = "1" *) 
(* LP_NODE_ROUTE_WIDTH = "3" *) (* LP_NODE_USER_WIDTH = "0" *) (* LP_SYNCHRONIZATION_STAGES = "2" *) 
(* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) (* LP_S_MAX_NUM_BYTES = "4" *) (* LP_S_MIN_NUM_BYTES = "4" *) 
(* LP_S_PIPELINE = "0" *) (* LP_S_STATIC_DWIDTH = "1" *) (* LP_ZERO_ROUTE_WIDTH = "0" *) 
(* ORIG_REF_NAME = "sc_node_v1_0_10_top" *) (* P_NUM_OUTSTANDING = "16" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6
   (s_sc_aclk,
    s_sc_aclken,
    s_sc_aresetn,
    s_sc_req,
    s_sc_info,
    s_sc_send,
    s_sc_recv,
    s_sc_payld,
    m_sc_aclk,
    m_sc_aclken,
    m_sc_aresetn,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld,
    m_axis_arb_tvalid,
    m_axis_arb_tready,
    m_axis_arb_tdata,
    s_axis_arb_tvalid,
    s_axis_arb_tready,
    s_axis_arb_tdata);
  input s_sc_aclk;
  input s_sc_aclken;
  input s_sc_aresetn;
  input [0:0]s_sc_req;
  input [0:0]s_sc_info;
  input [0:0]s_sc_send;
  output [0:0]s_sc_recv;
  input [6:0]s_sc_payld;
  input m_sc_aclk;
  input m_sc_aclken;
  input m_sc_aresetn;
  input [0:0]m_sc_recv;
  output [0:0]m_sc_send;
  output [0:0]m_sc_req;
  output [0:0]m_sc_info;
  output [6:0]m_sc_payld;
  output m_axis_arb_tvalid;
  input m_axis_arb_tready;
  output [15:0]m_axis_arb_tdata;
  input s_axis_arb_tvalid;
  output s_axis_arb_tready;
  input [15:0]s_axis_arb_tdata;

  wire [0:0]m_sc_send;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset_pipe;
  wire s_sc_aclk;
  (* DONT_TOUCH *) wire s_sc_areset;
  (* DONT_TOUCH *) wire s_sc_areset_pipe;
  wire s_sc_aresetn;
  wire [0:0]s_sc_send;

  design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized6 inst_mi_handler
       (.m_sc_send(m_sc_send),
        .out(s_sc_areset_pipe),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_send(s_sc_send));
  LUT1 #(
    .INIT(2'h2)) 
    mi_handler_m_sc_areset_pipe_inst
       (.I0(mi_handler_m_sc_areset),
        .O(mi_handler_m_sc_areset_pipe));
  LUT1 #(
    .INIT(2'h2)) 
    s_sc_areset_inst
       (.I0(s_sc_areset),
        .O(mi_handler_m_sc_areset));
  LUT1 #(
    .INIT(2'h1)) 
    s_sc_areset_pipe_inferred_i_1
       (.I0(s_sc_aresetn),
        .O(s_sc_areset_pipe));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    s_sc_areset_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_sc_areset),
        .S(s_sc_areset_pipe));
endmodule

(* C_ACLKEN_CONVERSION = "0" *) (* C_ACLK_RELATIONSHIP = "1" *) (* C_ADDR_WIDTH = "32" *) 
(* C_ARBITER_MODE = "1" *) (* C_CHANNEL = "0" *) (* C_DISABLE_IP = "0" *) 
(* C_ENABLE_PIPELINING = "8'b00000001" *) (* C_FAMILY = "zynq" *) (* C_FIFO_IP = "0" *) 
(* C_FIFO_OUTPUT_REG = "1" *) (* C_FIFO_SIZE = "5" *) (* C_FIFO_TYPE = "2" *) 
(* C_ID_WIDTH = "1" *) (* C_MAX_PAYLD_BYTES = "4" *) (* C_M_NUM_BYTES_ARRAY = "4" *) 
(* C_M_PIPELINE = "0" *) (* C_M_SEND_PIPELINE = "0" *) (* C_NUM_MI = "1" *) 
(* C_NUM_OUTSTANDING = "8" *) (* C_NUM_SI = "1" *) (* C_PAYLD_WIDTH = "53" *) 
(* C_SC_ROUTE_WIDTH = "3" *) (* C_SYNCHRONIZATION_STAGES = "3" *) (* C_S_LATENCY = "0" *) 
(* C_S_NUM_BYTES_ARRAY = "4" *) (* C_S_PIPELINE = "0" *) (* C_USER_BITS_PER_BYTE = "0" *) 
(* C_USER_WIDTH = "512" *) (* LP_ACLK_RELATIONSHIP = "1" *) (* LP_ARBITER_MODE = "1" *) 
(* LP_DT_REG = "true" *) (* LP_FIFO_OUTPUT_REG = "1" *) (* LP_FIFO_TYPE = "2" *) 
(* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) (* LP_LOG_NUM_MI = "1" *) 
(* LP_LOG_NUM_SI = "1" *) (* LP_MAX_DOWNSIZER_RATIO = "1" *) (* LP_MAX_NUM_BYTES = "4" *) 
(* LP_MAX_UPSIZER_RATIO = "1" *) (* LP_M_MAX_NUM_BYTES = "4" *) (* LP_M_MIN_NUM_BYTES = "4" *) 
(* LP_M_STATIC_DWIDTH = "1" *) (* LP_NODE_ADDR_WIDTH = "32" *) (* LP_NODE_ID_WIDTH = "1" *) 
(* LP_NODE_ROUTE_WIDTH = "3" *) (* LP_NODE_USER_WIDTH = "1" *) (* LP_SYNCHRONIZATION_STAGES = "2" *) 
(* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) (* LP_S_MAX_NUM_BYTES = "4" *) (* LP_S_MIN_NUM_BYTES = "4" *) 
(* LP_S_PIPELINE = "0" *) (* LP_S_STATIC_DWIDTH = "1" *) (* LP_ZERO_ROUTE_WIDTH = "0" *) 
(* ORIG_REF_NAME = "sc_node_v1_0_10_top" *) (* P_NUM_OUTSTANDING = "16" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7
   (s_sc_aclk,
    s_sc_aclken,
    s_sc_aresetn,
    s_sc_req,
    s_sc_info,
    s_sc_send,
    s_sc_recv,
    s_sc_payld,
    m_sc_aclk,
    m_sc_aclken,
    m_sc_aresetn,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld,
    m_axis_arb_tvalid,
    m_axis_arb_tready,
    m_axis_arb_tdata,
    s_axis_arb_tvalid,
    s_axis_arb_tready,
    s_axis_arb_tdata);
  input s_sc_aclk;
  input s_sc_aclken;
  input s_sc_aresetn;
  input [0:0]s_sc_req;
  input [0:0]s_sc_info;
  input [0:0]s_sc_send;
  output [0:0]s_sc_recv;
  input [52:0]s_sc_payld;
  input m_sc_aclk;
  input m_sc_aclken;
  input m_sc_aresetn;
  input [0:0]m_sc_recv;
  output [0:0]m_sc_send;
  output [0:0]m_sc_req;
  output [0:0]m_sc_info;
  output [52:0]m_sc_payld;
  output m_axis_arb_tvalid;
  input m_axis_arb_tready;
  output [15:0]m_axis_arb_tdata;
  input s_axis_arb_tvalid;
  output s_axis_arb_tready;
  input [15:0]s_axis_arb_tdata;

  wire [0:0]m_sc_send;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset_pipe;
  wire s_sc_aclk;
  (* DONT_TOUCH *) wire s_sc_areset;
  (* DONT_TOUCH *) wire s_sc_areset_pipe;
  wire s_sc_aresetn;
  wire [0:0]s_sc_send;

  design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized7 inst_mi_handler
       (.m_sc_send(m_sc_send),
        .out(s_sc_areset_pipe),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_send(s_sc_send));
  LUT1 #(
    .INIT(2'h2)) 
    mi_handler_m_sc_areset_pipe_inst
       (.I0(mi_handler_m_sc_areset),
        .O(mi_handler_m_sc_areset_pipe));
  LUT1 #(
    .INIT(2'h2)) 
    s_sc_areset_inst
       (.I0(s_sc_areset),
        .O(mi_handler_m_sc_areset));
  LUT1 #(
    .INIT(2'h1)) 
    s_sc_areset_pipe_inferred_i_1
       (.I0(s_sc_aresetn),
        .O(s_sc_areset_pipe));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    s_sc_areset_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_sc_areset),
        .S(s_sc_areset_pipe));
endmodule

(* C_ACLKEN_CONVERSION = "0" *) (* C_ACLK_RELATIONSHIP = "1" *) (* C_ADDR_WIDTH = "32" *) 
(* C_ARBITER_MODE = "1" *) (* C_CHANNEL = "1" *) (* C_DISABLE_IP = "0" *) 
(* C_ENABLE_PIPELINING = "8'b00000001" *) (* C_FAMILY = "zynq" *) (* C_FIFO_IP = "0" *) 
(* C_FIFO_OUTPUT_REG = "1" *) (* C_FIFO_SIZE = "5" *) (* C_FIFO_TYPE = "2" *) 
(* C_ID_WIDTH = "1" *) (* C_MAX_PAYLD_BYTES = "4" *) (* C_M_NUM_BYTES_ARRAY = "4" *) 
(* C_M_PIPELINE = "0" *) (* C_M_SEND_PIPELINE = "1" *) (* C_NUM_MI = "1" *) 
(* C_NUM_OUTSTANDING = "8" *) (* C_NUM_SI = "1" *) (* C_PAYLD_WIDTH = "55" *) 
(* C_SC_ROUTE_WIDTH = "4" *) (* C_SYNCHRONIZATION_STAGES = "3" *) (* C_S_LATENCY = "0" *) 
(* C_S_NUM_BYTES_ARRAY = "4" *) (* C_S_PIPELINE = "0" *) (* C_USER_BITS_PER_BYTE = "0" *) 
(* C_USER_WIDTH = "512" *) (* LP_ACLK_RELATIONSHIP = "1" *) (* LP_ARBITER_MODE = "2" *) 
(* LP_DT_REG = "true" *) (* LP_FIFO_OUTPUT_REG = "1" *) (* LP_FIFO_TYPE = "2" *) 
(* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) (* LP_LOG_NUM_MI = "1" *) 
(* LP_LOG_NUM_SI = "1" *) (* LP_MAX_DOWNSIZER_RATIO = "1" *) (* LP_MAX_NUM_BYTES = "4" *) 
(* LP_MAX_UPSIZER_RATIO = "1" *) (* LP_M_MAX_NUM_BYTES = "4" *) (* LP_M_MIN_NUM_BYTES = "4" *) 
(* LP_M_STATIC_DWIDTH = "1" *) (* LP_NODE_ADDR_WIDTH = "32" *) (* LP_NODE_ID_WIDTH = "1" *) 
(* LP_NODE_ROUTE_WIDTH = "4" *) (* LP_NODE_USER_WIDTH = "1" *) (* LP_SYNCHRONIZATION_STAGES = "2" *) 
(* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) (* LP_S_MAX_NUM_BYTES = "4" *) (* LP_S_MIN_NUM_BYTES = "4" *) 
(* LP_S_PIPELINE = "0" *) (* LP_S_STATIC_DWIDTH = "1" *) (* LP_ZERO_ROUTE_WIDTH = "0" *) 
(* ORIG_REF_NAME = "sc_node_v1_0_10_top" *) (* P_NUM_OUTSTANDING = "16" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8
   (s_sc_aclk,
    s_sc_aclken,
    s_sc_aresetn,
    s_sc_req,
    s_sc_info,
    s_sc_send,
    s_sc_recv,
    s_sc_payld,
    m_sc_aclk,
    m_sc_aclken,
    m_sc_aresetn,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld,
    m_axis_arb_tvalid,
    m_axis_arb_tready,
    m_axis_arb_tdata,
    s_axis_arb_tvalid,
    s_axis_arb_tready,
    s_axis_arb_tdata);
  input s_sc_aclk;
  input s_sc_aclken;
  input s_sc_aresetn;
  input [0:0]s_sc_req;
  input [0:0]s_sc_info;
  input [0:0]s_sc_send;
  output [0:0]s_sc_recv;
  input [54:0]s_sc_payld;
  input m_sc_aclk;
  input m_sc_aclken;
  input m_sc_aresetn;
  input [0:0]m_sc_recv;
  output [0:0]m_sc_send;
  output [0:0]m_sc_req;
  output [0:0]m_sc_info;
  output [54:0]m_sc_payld;
  output m_axis_arb_tvalid;
  input m_axis_arb_tready;
  output [15:0]m_axis_arb_tdata;
  input s_axis_arb_tvalid;
  output s_axis_arb_tready;
  input [15:0]s_axis_arb_tdata;

  wire [0:0]m_sc_send;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset_pipe;
  wire s_sc_aclk;
  (* DONT_TOUCH *) wire s_sc_areset;
  (* DONT_TOUCH *) wire s_sc_areset_pipe;
  wire s_sc_aresetn;
  wire [0:0]s_sc_send;

  design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized8 inst_mi_handler
       (.m_sc_send(m_sc_send),
        .out(s_sc_areset_pipe),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_send(s_sc_send));
  LUT1 #(
    .INIT(2'h2)) 
    mi_handler_m_sc_areset_pipe_inst
       (.I0(mi_handler_m_sc_areset),
        .O(mi_handler_m_sc_areset_pipe));
  LUT1 #(
    .INIT(2'h2)) 
    s_sc_areset_inst
       (.I0(s_sc_areset),
        .O(mi_handler_m_sc_areset));
  LUT1 #(
    .INIT(2'h1)) 
    s_sc_areset_pipe_inferred_i_1
       (.I0(s_sc_aresetn),
        .O(s_sc_areset_pipe));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    s_sc_areset_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_sc_areset),
        .S(s_sc_areset_pipe));
endmodule

(* C_ACLKEN_CONVERSION = "0" *) (* C_ACLK_RELATIONSHIP = "1" *) (* C_ADDR_WIDTH = "32" *) 
(* C_ARBITER_MODE = "1" *) (* C_CHANNEL = "2" *) (* C_DISABLE_IP = "0" *) 
(* C_ENABLE_PIPELINING = "8'b00000001" *) (* C_FAMILY = "zynq" *) (* C_FIFO_IP = "0" *) 
(* C_FIFO_OUTPUT_REG = "1" *) (* C_FIFO_SIZE = "0" *) (* C_FIFO_TYPE = "0" *) 
(* C_ID_WIDTH = "1" *) (* C_MAX_PAYLD_BYTES = "4" *) (* C_M_NUM_BYTES_ARRAY = "64'b0000000000000000000000000000010000000000000000000000000000000100" *) 
(* C_M_PIPELINE = "0" *) (* C_M_SEND_PIPELINE = "0" *) (* C_NUM_MI = "2" *) 
(* C_NUM_OUTSTANDING = "8" *) (* C_NUM_SI = "1" *) (* C_PAYLD_WIDTH = "141" *) 
(* C_SC_ROUTE_WIDTH = "4" *) (* C_SYNCHRONIZATION_STAGES = "3" *) (* C_S_LATENCY = "0" *) 
(* C_S_NUM_BYTES_ARRAY = "4" *) (* C_S_PIPELINE = "0" *) (* C_USER_BITS_PER_BYTE = "0" *) 
(* C_USER_WIDTH = "0" *) (* LP_ACLK_RELATIONSHIP = "1" *) (* LP_ARBITER_MODE = "1" *) 
(* LP_DT_REG = "true" *) (* LP_FIFO_OUTPUT_REG = "1" *) (* LP_FIFO_TYPE = "0" *) 
(* LP_LOG_MAX_DOWNSIZER_RATIO = "1" *) (* LP_LOG_MAX_UPSIZER_RATIO = "1" *) (* LP_LOG_NUM_MI = "1" *) 
(* LP_LOG_NUM_SI = "1" *) (* LP_MAX_DOWNSIZER_RATIO = "1" *) (* LP_MAX_NUM_BYTES = "4" *) 
(* LP_MAX_UPSIZER_RATIO = "1" *) (* LP_M_MAX_NUM_BYTES = "4" *) (* LP_M_MIN_NUM_BYTES = "4" *) 
(* LP_M_STATIC_DWIDTH = "1" *) (* LP_NODE_ADDR_WIDTH = "32" *) (* LP_NODE_ID_WIDTH = "1" *) 
(* LP_NODE_ROUTE_WIDTH = "4" *) (* LP_NODE_USER_WIDTH = "0" *) (* LP_SYNCHRONIZATION_STAGES = "2" *) 
(* LP_S_AXIS_REG_SLICE_CONFIG = "0" *) (* LP_S_MAX_NUM_BYTES = "4" *) (* LP_S_MIN_NUM_BYTES = "4" *) 
(* LP_S_PIPELINE = "0" *) (* LP_S_STATIC_DWIDTH = "1" *) (* LP_ZERO_ROUTE_WIDTH = "0" *) 
(* ORIG_REF_NAME = "sc_node_v1_0_10_top" *) (* P_NUM_OUTSTANDING = "16" *) 
module design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9
   (s_sc_aclk,
    s_sc_aclken,
    s_sc_aresetn,
    s_sc_req,
    s_sc_info,
    s_sc_send,
    s_sc_recv,
    s_sc_payld,
    m_sc_aclk,
    m_sc_aclken,
    m_sc_aresetn,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld,
    m_axis_arb_tvalid,
    m_axis_arb_tready,
    m_axis_arb_tdata,
    s_axis_arb_tvalid,
    s_axis_arb_tready,
    s_axis_arb_tdata);
  input s_sc_aclk;
  input s_sc_aclken;
  input s_sc_aresetn;
  input [0:0]s_sc_req;
  input [0:0]s_sc_info;
  input [0:0]s_sc_send;
  output [0:0]s_sc_recv;
  input [140:0]s_sc_payld;
  input m_sc_aclk;
  input m_sc_aclken;
  input m_sc_aresetn;
  input [1:0]m_sc_recv;
  output [1:0]m_sc_send;
  output [1:0]m_sc_req;
  output [1:0]m_sc_info;
  output [140:0]m_sc_payld;
  output m_axis_arb_tvalid;
  input m_axis_arb_tready;
  output [15:0]m_axis_arb_tdata;
  input s_axis_arb_tvalid;
  output s_axis_arb_tready;
  input [15:0]s_axis_arb_tdata;

  wire arb_stall;
  wire arb_stall_late;
  wire inst_si_handler_n_2;
  wire [140:0]m_sc_payld;
  wire [1:0]m_sc_recv;
  wire [1:0]m_sc_send;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset;
  (* DONT_TOUCH *) wire mi_handler_m_sc_areset_pipe;
  wire s_sc_aclk;
  (* DONT_TOUCH *) wire s_sc_areset;
  (* DONT_TOUCH *) wire s_sc_areset_pipe;
  wire s_sc_aresetn;
  wire [140:0]s_sc_payld;
  wire [0:0]s_sc_recv;
  wire [0:0]s_sc_send;
  wire [10:0]NLW_inst_mi_handler_m_sc_payld_UNCONNECTED;
  wire [11:1]NLW_inst_mi_handler_s_sc_payld_UNCONNECTED;

  design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized9 inst_mi_handler
       (.E(inst_si_handler_n_2),
        .arb_stall(arb_stall),
        .arb_stall_late(arb_stall_late),
        .m_sc_areset_r_reg_0(mi_handler_m_sc_areset_pipe),
        .m_sc_payld({NLW_inst_mi_handler_m_sc_payld_UNCONNECTED[10:8],m_sc_payld[104:99],NLW_inst_mi_handler_m_sc_payld_UNCONNECTED[1:0]}),
        .m_sc_recv(m_sc_recv[1]),
        .m_sc_send(m_sc_send[1]),
        .out(s_sc_areset_pipe),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_payld({NLW_inst_mi_handler_s_sc_payld_UNCONNECTED[11:9],s_sc_payld[104:99],NLW_inst_mi_handler_s_sc_payld_UNCONNECTED[2:1],s_sc_payld[1]}),
        .s_sc_send(s_sc_send));
  design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized4 inst_si_handler
       (.E(inst_si_handler_n_2),
        .arb_stall(arb_stall),
        .arb_stall_late(arb_stall_late),
        .s_sc_aclk(s_sc_aclk),
        .s_sc_recv(s_sc_recv),
        .s_sc_send(s_sc_send));
  LUT1 #(
    .INIT(2'h2)) 
    mi_handler_m_sc_areset_pipe_inst
       (.I0(mi_handler_m_sc_areset),
        .O(mi_handler_m_sc_areset_pipe));
  LUT1 #(
    .INIT(2'h2)) 
    s_sc_areset_inst
       (.I0(s_sc_areset),
        .O(mi_handler_m_sc_areset));
  LUT1 #(
    .INIT(2'h1)) 
    s_sc_areset_pipe_inferred_i_1
       (.I0(s_sc_aresetn),
        .O(s_sc_areset_pipe));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    s_sc_areset_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_sc_areset),
        .S(s_sc_areset_pipe));
endmodule

(* ORIG_REF_NAME = "sc_si_converter_v1_0_9_axilite_conv" *) 
module design_1_axi_smc_0_sc_si_converter_v1_0_9_axilite_conv
   (m_axi_aruser,
    m_axi_bready_i_reg_0,
    s_axi_bvalid_i_reg_0,
    s_axi_awready,
    s_axi_wready,
    s_axi_arready,
    s_axi_rvalid,
    m_axi_awvalid,
    m_axi_wvalid,
    m_axi_arvalid_i_reg_0,
    m_axi_rready,
    s_axi_rlast,
    m_axi_awaddr,
    s_axi_bresp,
    s_axi_rresp,
    s_axi_rdata,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_araddr,
    m_axi_arprot,
    areset,
    aclk,
    m_axi_wready,
    m_axi_awready,
    s_axi_bready,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_arvalid,
    s_axi_rready,
    m_axi_rvalid,
    m_axi_arready,
    s_axi_wstrb,
    s_axi_arlen,
    s_axi_araddr,
    s_axi_arsize,
    s_axi_awsize,
    s_axi_awvalid,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rresp,
    s_axi_wdata,
    s_axi_arprot,
    m_axi_rdata,
    s_axi_awaddr);
  output [0:0]m_axi_aruser;
  output m_axi_bready_i_reg_0;
  output s_axi_bvalid_i_reg_0;
  output s_axi_awready;
  output s_axi_wready;
  output s_axi_arready;
  output s_axi_rvalid;
  output m_axi_awvalid;
  output m_axi_wvalid;
  output m_axi_arvalid_i_reg_0;
  output m_axi_rready;
  output s_axi_rlast;
  output [7:0]m_axi_awaddr;
  output [1:0]s_axi_bresp;
  output [1:0]s_axi_rresp;
  output [31:0]s_axi_rdata;
  output [31:0]m_axi_wdata;
  output [3:0]m_axi_wstrb;
  output [7:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input areset;
  input aclk;
  input m_axi_wready;
  input m_axi_awready;
  input s_axi_bready;
  input s_axi_wlast;
  input s_axi_wvalid;
  input s_axi_arvalid;
  input s_axi_rready;
  input m_axi_rvalid;
  input m_axi_arready;
  input [3:0]s_axi_wstrb;
  input [3:0]s_axi_arlen;
  input [7:0]s_axi_araddr;
  input [1:0]s_axi_arsize;
  input [2:0]s_axi_awsize;
  input s_axi_awvalid;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [1:0]m_axi_rresp;
  input [31:0]s_axi_wdata;
  input [2:0]s_axi_arprot;
  input [31:0]m_axi_rdata;
  input [7:0]s_axi_awaddr;

  wire \FSM_sequential_r_state[0]_i_1_n_0 ;
  wire \FSM_sequential_r_state[1]_i_1_n_0 ;
  wire \FSM_sequential_w_state[0]_i_1_n_0 ;
  wire \FSM_sequential_w_state[1]_i_1_n_0 ;
  wire \FSM_sequential_w_state[2]_i_1_n_0 ;
  wire \FSM_sequential_w_state[2]_i_2_n_0 ;
  wire \FSM_sequential_w_state[2]_i_4_n_0 ;
  wire aclk;
  wire [7:0]ar_addr_d;
  wire \ar_addr_d[7]_i_1_n_0 ;
  wire \ar_addr_d[7]_i_3_n_0 ;
  wire \ar_addr_d[7]_i_4_n_0 ;
  wire [6:0]ar_cnt;
  wire \ar_cnt[0]_i_1_n_0 ;
  wire \ar_cnt[0]_i_2_n_0 ;
  wire \ar_cnt[1]_i_1_n_0 ;
  wire \ar_cnt[1]_i_2_n_0 ;
  wire \ar_cnt[1]_i_3_n_0 ;
  wire \ar_cnt[2]_i_1_n_0 ;
  wire \ar_cnt[2]_i_2_n_0 ;
  wire \ar_cnt[2]_i_3_n_0 ;
  wire \ar_cnt[2]_i_4_n_0 ;
  wire \ar_cnt[3]_i_1_n_0 ;
  wire \ar_cnt[3]_i_2_n_0 ;
  wire \ar_cnt[3]_i_3_n_0 ;
  wire \ar_cnt[4]_i_1_n_0 ;
  wire \ar_cnt[5]_i_1_n_0 ;
  wire \ar_cnt[6]_i_1_n_0 ;
  wire \ar_cnt[6]_i_2_n_0 ;
  wire \ar_cnt[6]_i_3_n_0 ;
  wire areset;
  wire [7:0]aw_addr;
  wire \aw_addr[3]_i_3_n_0 ;
  wire \aw_addr[3]_i_4_n_0 ;
  wire \aw_addr[3]_i_5_n_0 ;
  wire \aw_addr[7]_i_1_n_0 ;
  wire \aw_addr[7]_i_3_n_0 ;
  wire \aw_addr[7]_i_5_n_0 ;
  wire \aw_addr[7]_i_6_n_0 ;
  wire \aw_addr[7]_i_7_n_0 ;
  wire \aw_addr_reg[3]_i_2_n_0 ;
  wire aw_done;
  wire aw_done_i_1_n_0;
  wire aw_done_reg_n_0;
  wire [2:0]aw_incr;
  wire \aw_incr[0]_i_1_n_0 ;
  wire \aw_incr[1]_i_1_n_0 ;
  wire \aw_incr[2]_i_1_n_0 ;
  wire aw_incr_1;
  wire b_cnt;
  wire \b_cnt[2]_i_1_n_0 ;
  wire \b_cnt[3]_i_1_n_0 ;
  wire \b_cnt[4]_i_1_n_0 ;
  wire \b_cnt[5]_i_1_n_0 ;
  wire \b_cnt[6]_i_1_n_0 ;
  wire \b_cnt[7]_i_1_n_0 ;
  wire \b_cnt[8]_i_1_n_0 ;
  wire \b_cnt[8]_i_4_n_0 ;
  wire [8:0]b_cnt_reg;
  wire i__carry_i_1_n_0;
  wire i__carry_i_2_n_0;
  wire i__carry_i_3_n_0;
  wire [7:0]in22;
  wire m_aruser;
  wire [7:0]m_axi_araddr;
  wire m_axi_arready;
  wire [0:0]m_axi_aruser;
  wire m_axi_arvalid_i_i_1_n_0;
  wire m_axi_arvalid_i_i_2_n_0;
  wire m_axi_arvalid_i_i_3_n_0;
  wire m_axi_arvalid_i_reg_0;
  wire [7:0]\^m_axi_awaddr ;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire m_axi_awvalid_i_i_1_n_0;
  wire m_axi_awvalid_i_i_2_n_0;
  wire m_axi_awvalid_i_i_3_n_0;
  wire m_axi_bready_i1;
  wire m_axi_bready_i142_in;
  wire m_axi_bready_i1_carry_i_1_n_0;
  wire m_axi_bready_i1_carry_i_2_n_0;
  wire m_axi_bready_i1_carry_i_3_n_0;
  wire m_axi_bready_i1_carry_i_4_n_0;
  wire m_axi_bready_i1_carry_i_5_n_0;
  wire m_axi_bready_i1_carry_i_6_n_0;
  wire m_axi_bready_i1_carry_i_7_n_0;
  wire [8:8]m_axi_bready_i2;
  wire m_axi_bready_i_i_1_n_0;
  wire m_axi_bready_i_reg_0;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire [31:0]m_axi_rdata;
  wire m_axi_rready;
  wire m_axi_rready_i;
  wire m_axi_rready_i_i_1_n_0;
  wire m_axi_rready_i_i_3_n_0;
  wire m_axi_rvalid;
  wire [31:0]m_axi_wdata;
  wire m_axi_wready;
  wire m_axi_wvalid;
  wire m_axi_wvalid_i_i_1_n_0;
  wire [1:0]p_0_in;
  wire [1:0]p_0_in_0;
  wire [7:0]r_beats;
  wire \r_beats[4]_i_2_n_0 ;
  wire \r_beats[5]_i_2_n_0 ;
  wire \r_beats[7]_i_1_n_0 ;
  wire \r_beats_reg_n_0_[0] ;
  wire \r_beats_reg_n_0_[1] ;
  wire \r_beats_reg_n_0_[2] ;
  wire \r_beats_reg_n_0_[3] ;
  wire \r_beats_reg_n_0_[4] ;
  wire \r_beats_reg_n_0_[5] ;
  wire \r_beats_reg_n_0_[6] ;
  wire \r_beats_reg_n_0_[7] ;
  wire [1:0]r_state__0;
  wire [1:1]r_state__1;
  wire [7:0]s_axi_araddr;
  wire [3:0]s_axi_arlen;
  wire s_axi_arready;
  wire s_axi_arready_i_i_1_n_0;
  wire [1:0]s_axi_arsize;
  wire s_axi_arvalid;
  wire [7:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awready_i_i_1_n_0;
  wire s_axi_awready_i_i_2_n_0;
  wire s_axi_awready_i_i_3_n_0;
  wire s_axi_awready_i_i_4_n_0;
  wire s_axi_awready_i_i_5_n_0;
  wire s_axi_awready_i_i_6_n_0;
  wire s_axi_awready_i_i_7_n_0;
  wire s_axi_awready_i_i_8_n_0;
  wire [2:0]s_axi_awsize;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bresp_i;
  wire \s_axi_bresp_i[0]_i_1_n_0 ;
  wire \s_axi_bresp_i[0]_i_3_n_0 ;
  wire \s_axi_bresp_i[1]_i_1_n_0 ;
  wire \s_axi_bresp_i[1]_i_2_n_0 ;
  wire s_axi_bvalid_i_i_1_n_0;
  wire s_axi_bvalid_i_i_2_n_0;
  wire s_axi_bvalid_i_reg_0;
  wire [31:0]s_axi_rdata;
  wire [31:0]s_axi_rdata_i0_in;
  wire \s_axi_rdata_i[31]_i_1_n_0 ;
  wire s_axi_rlast;
  wire s_axi_rlast_INST_0_i_1_n_0;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire \s_axi_rresp_i[0]_i_1_n_0 ;
  wire \s_axi_rresp_i[0]_i_3_n_0 ;
  wire \s_axi_rresp_i[1]_i_1_n_0 ;
  wire s_axi_rvalid;
  wire s_axi_rvalid_i_i_1_n_0;
  wire [31:0]s_axi_wdata;
  wire s_axi_wlast;
  wire s_axi_wready;
  wire s_axi_wready_i_i_1_n_0;
  wire s_axi_wready_i_i_2_n_0;
  wire s_axi_wready_i_i_3_n_0;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire [8:0]w_cnt;
  wire \w_cnt[4]_i_2_n_0 ;
  wire \w_cnt[5]_i_2_n_0 ;
  wire \w_cnt[8]_i_1_n_0 ;
  wire \w_cnt[8]_i_3_n_0 ;
  wire \w_cnt[8]_i_4_n_0 ;
  wire \w_cnt_reg_n_0_[0] ;
  wire \w_cnt_reg_n_0_[1] ;
  wire \w_cnt_reg_n_0_[2] ;
  wire \w_cnt_reg_n_0_[3] ;
  wire \w_cnt_reg_n_0_[4] ;
  wire \w_cnt_reg_n_0_[5] ;
  wire \w_cnt_reg_n_0_[6] ;
  wire \w_cnt_reg_n_0_[7] ;
  wire \w_cnt_reg_n_0_[8] ;
  wire w_done;
  wire w_done_i_1_n_0;
  wire w_done_reg_n_0;
  wire w_null;
  wire w_null_i_1_n_0;
  wire w_null_reg_n_0;
  wire \w_size_mask[0]_i_1_n_0 ;
  wire \w_size_mask[1]_i_1_n_0 ;
  wire w_state;
  wire [2:0]w_state__0;
  wire [2:0]\NLW_aw_addr_reg[3]_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_aw_addr_reg[7]_i_8_CO_UNCONNECTED ;
  wire [2:0]NLW_m_axi_bready_i1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_m_axi_bready_i1_carry_O_UNCONNECTED;
  wire [3:0]\NLW_m_axi_bready_i1_inferred__0/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_m_axi_bready_i1_inferred__0/i__carry_O_UNCONNECTED ;

  assign m_axi_awaddr[7:2] = \^m_axi_awaddr [7:2];
  LUT6 #(
    .INIT(64'hF5F03F3FF5F03030)) 
    \FSM_sequential_r_state[0]_i_1 
       (.I0(s_axi_rlast),
        .I1(m_axi_rvalid),
        .I2(r_state__0[0]),
        .I3(s_axi_rready),
        .I4(r_state__0[1]),
        .I5(s_axi_arvalid),
        .O(\FSM_sequential_r_state[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hCF88)) 
    \FSM_sequential_r_state[1]_i_1 
       (.I0(m_axi_rvalid),
        .I1(r_state__0[0]),
        .I2(s_axi_rready),
        .I3(r_state__0[1]),
        .O(\FSM_sequential_r_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "R_TX:10,R_RX:01,R_IDLE:00" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_r_state_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\FSM_sequential_r_state[0]_i_1_n_0 ),
        .Q(r_state__0[0]),
        .R(areset));
  (* FSM_ENCODED_STATES = "R_TX:10,R_RX:01,R_IDLE:00" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_r_state_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\FSM_sequential_r_state[1]_i_1_n_0 ),
        .Q(r_state__0[1]),
        .R(areset));
  LUT6 #(
    .INIT(64'hFF44FFFFFF4F0000)) 
    \FSM_sequential_w_state[0]_i_1 
       (.I0(m_axi_awvalid_i_i_3_n_0),
        .I1(w_null),
        .I2(w_state__0[1]),
        .I3(s_axi_awready_i_i_3_n_0),
        .I4(w_state),
        .I5(w_state__0[0]),
        .O(\FSM_sequential_w_state[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \FSM_sequential_w_state[0]_i_2 
       (.I0(s_axi_wlast),
        .I1(w_state__0[2]),
        .I2(w_state__0[1]),
        .O(w_null));
  LUT6 #(
    .INIT(64'h4744FFFF44440000)) 
    \FSM_sequential_w_state[1]_i_1 
       (.I0(m_axi_awvalid_i_i_2_n_0),
        .I1(w_state__0[0]),
        .I2(w_state__0[2]),
        .I3(\aw_addr[7]_i_5_n_0 ),
        .I4(w_state),
        .I5(w_state__0[1]),
        .O(\FSM_sequential_w_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FFFF1F100000)) 
    \FSM_sequential_w_state[2]_i_1 
       (.I0(w_state__0[0]),
        .I1(\aw_addr[7]_i_5_n_0 ),
        .I2(w_state__0[1]),
        .I3(\FSM_sequential_w_state[2]_i_2_n_0 ),
        .I4(w_state),
        .I5(w_state__0[2]),
        .O(\FSM_sequential_w_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \FSM_sequential_w_state[2]_i_2 
       (.I0(s_axi_wstrb[0]),
        .I1(s_axi_wstrb[2]),
        .I2(s_axi_wstrb[1]),
        .I3(s_axi_wstrb[3]),
        .I4(s_axi_wlast),
        .I5(w_state__0[0]),
        .O(\FSM_sequential_w_state[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF0388)) 
    \FSM_sequential_w_state[2]_i_3 
       (.I0(s_axi_wvalid),
        .I1(w_state__0[0]),
        .I2(\w_cnt[8]_i_3_n_0 ),
        .I3(w_state__0[1]),
        .I4(\FSM_sequential_w_state[2]_i_4_n_0 ),
        .O(w_state));
  LUT6 #(
    .INIT(64'hFFFFFFFFC00000AA)) 
    \FSM_sequential_w_state[2]_i_4 
       (.I0(s_axi_awvalid),
        .I1(s_axi_bready),
        .I2(s_axi_bvalid_i_reg_0),
        .I3(w_state__0[0]),
        .I4(w_state__0[1]),
        .I5(w_state__0[2]),
        .O(\FSM_sequential_w_state[2]_i_4_n_0 ));
  (* FSM_ENCODED_STATES = "W_IDLE:000,W_RX:001,W_TX:010,W_RECOVER:100,W_COMPLETE:011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_w_state_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\FSM_sequential_w_state[0]_i_1_n_0 ),
        .Q(w_state__0[0]),
        .R(areset));
  (* FSM_ENCODED_STATES = "W_IDLE:000,W_RX:001,W_TX:010,W_RECOVER:100,W_COMPLETE:011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_w_state_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\FSM_sequential_w_state[1]_i_1_n_0 ),
        .Q(w_state__0[1]),
        .R(areset));
  (* FSM_ENCODED_STATES = "W_IDLE:000,W_RX:001,W_TX:010,W_RECOVER:100,W_COMPLETE:011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_w_state_reg[2] 
       (.C(aclk),
        .CE(1'b1),
        .D(\FSM_sequential_w_state[2]_i_1_n_0 ),
        .Q(w_state__0[2]),
        .R(areset));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h2E)) 
    \ar_addr_d[2]_i_1 
       (.I0(s_axi_araddr[2]),
        .I1(\ar_addr_d[7]_i_3_n_0 ),
        .I2(m_axi_araddr[2]),
        .O(ar_addr_d[2]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT4 #(
    .INIT(16'h6F60)) 
    \ar_addr_d[3]_i_1 
       (.I0(m_axi_araddr[2]),
        .I1(m_axi_araddr[3]),
        .I2(\ar_addr_d[7]_i_3_n_0 ),
        .I3(s_axi_araddr[3]),
        .O(ar_addr_d[3]));
  LUT5 #(
    .INIT(32'h6AFF6A00)) 
    \ar_addr_d[4]_i_1 
       (.I0(m_axi_araddr[4]),
        .I1(m_axi_araddr[2]),
        .I2(m_axi_araddr[3]),
        .I3(\ar_addr_d[7]_i_3_n_0 ),
        .I4(s_axi_araddr[4]),
        .O(ar_addr_d[4]));
  LUT6 #(
    .INIT(64'h6AAAFFFF6AAA0000)) 
    \ar_addr_d[5]_i_1 
       (.I0(m_axi_araddr[5]),
        .I1(m_axi_araddr[3]),
        .I2(m_axi_araddr[2]),
        .I3(m_axi_araddr[4]),
        .I4(\ar_addr_d[7]_i_3_n_0 ),
        .I5(s_axi_araddr[5]),
        .O(ar_addr_d[5]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'h9F90)) 
    \ar_addr_d[6]_i_1 
       (.I0(\ar_addr_d[7]_i_4_n_0 ),
        .I1(m_axi_araddr[6]),
        .I2(\ar_addr_d[7]_i_3_n_0 ),
        .I3(s_axi_araddr[6]),
        .O(ar_addr_d[6]));
  LUT4 #(
    .INIT(16'hFF04)) 
    \ar_addr_d[7]_i_1 
       (.I0(r_state__0[1]),
        .I1(s_axi_arvalid),
        .I2(r_state__0[0]),
        .I3(\ar_addr_d[7]_i_3_n_0 ),
        .O(\ar_addr_d[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h9AFF9A00)) 
    \ar_addr_d[7]_i_2 
       (.I0(m_axi_araddr[7]),
        .I1(\ar_addr_d[7]_i_4_n_0 ),
        .I2(m_axi_araddr[6]),
        .I3(\ar_addr_d[7]_i_3_n_0 ),
        .I4(s_axi_araddr[7]),
        .O(ar_addr_d[7]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'h00000000FFFE0000)) 
    \ar_addr_d[7]_i_3 
       (.I0(\ar_cnt[6]_i_3_n_0 ),
        .I1(ar_cnt[5]),
        .I2(ar_cnt[4]),
        .I3(ar_cnt[6]),
        .I4(m_axi_arvalid_i_reg_0),
        .I5(m_axi_arready),
        .O(\ar_addr_d[7]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \ar_addr_d[7]_i_4 
       (.I0(m_axi_araddr[4]),
        .I1(m_axi_araddr[2]),
        .I2(m_axi_araddr[3]),
        .I3(m_axi_araddr[5]),
        .O(\ar_addr_d[7]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ar_addr_d_reg[2] 
       (.C(aclk),
        .CE(\ar_addr_d[7]_i_1_n_0 ),
        .D(ar_addr_d[2]),
        .Q(m_axi_araddr[2]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \ar_addr_d_reg[3] 
       (.C(aclk),
        .CE(\ar_addr_d[7]_i_1_n_0 ),
        .D(ar_addr_d[3]),
        .Q(m_axi_araddr[3]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \ar_addr_d_reg[4] 
       (.C(aclk),
        .CE(\ar_addr_d[7]_i_1_n_0 ),
        .D(ar_addr_d[4]),
        .Q(m_axi_araddr[4]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \ar_addr_d_reg[5] 
       (.C(aclk),
        .CE(\ar_addr_d[7]_i_1_n_0 ),
        .D(ar_addr_d[5]),
        .Q(m_axi_araddr[5]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \ar_addr_d_reg[6] 
       (.C(aclk),
        .CE(\ar_addr_d[7]_i_1_n_0 ),
        .D(ar_addr_d[6]),
        .Q(m_axi_araddr[6]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \ar_addr_d_reg[7] 
       (.C(aclk),
        .CE(\ar_addr_d[7]_i_1_n_0 ),
        .D(ar_addr_d[7]),
        .Q(m_axi_araddr[7]),
        .R(areset));
  LUT6 #(
    .INIT(64'h55555555C0CF0000)) 
    \ar_cnt[0]_i_1 
       (.I0(ar_cnt[0]),
        .I1(s_axi_arlen[0]),
        .I2(s_axi_arsize[1]),
        .I3(\ar_cnt[0]_i_2_n_0 ),
        .I4(s_axi_arvalid),
        .I5(\ar_addr_d[7]_i_3_n_0 ),
        .O(\ar_cnt[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hE44BE11B4B1B4B1B)) 
    \ar_cnt[0]_i_2 
       (.I0(s_axi_arsize[0]),
        .I1(s_axi_arlen[2]),
        .I2(s_axi_arlen[1]),
        .I3(s_axi_araddr[1]),
        .I4(s_axi_araddr[0]),
        .I5(s_axi_arlen[0]),
        .O(\ar_cnt[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF00F4444)) 
    \ar_cnt[1]_i_1 
       (.I0(\ar_cnt[1]_i_2_n_0 ),
        .I1(s_axi_arvalid),
        .I2(ar_cnt[0]),
        .I3(ar_cnt[1]),
        .I4(\ar_addr_d[7]_i_3_n_0 ),
        .O(\ar_cnt[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h4F4F4F444F444F4F)) 
    \ar_cnt[1]_i_2 
       (.I0(s_axi_arlen[1]),
        .I1(s_axi_arsize[1]),
        .I2(\ar_cnt[1]_i_3_n_0 ),
        .I3(s_axi_arsize[0]),
        .I4(\ar_cnt[2]_i_4_n_0 ),
        .I5(s_axi_arlen[3]),
        .O(\ar_cnt[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBEEEEEEEAAAAAAAA)) 
    \ar_cnt[1]_i_3 
       (.I0(s_axi_arsize[1]),
        .I1(s_axi_arlen[2]),
        .I2(s_axi_araddr[1]),
        .I3(s_axi_arlen[1]),
        .I4(s_axi_arlen[0]),
        .I5(s_axi_arsize[0]),
        .O(\ar_cnt[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7474447444444444)) 
    \ar_cnt[2]_i_1 
       (.I0(\ar_cnt[2]_i_2_n_0 ),
        .I1(\ar_addr_d[7]_i_3_n_0 ),
        .I2(s_axi_arvalid),
        .I3(s_axi_arsize[1]),
        .I4(s_axi_arlen[2]),
        .I5(\ar_cnt[2]_i_3_n_0 ),
        .O(\ar_cnt[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h56)) 
    \ar_cnt[2]_i_2 
       (.I0(ar_cnt[2]),
        .I1(ar_cnt[1]),
        .I2(ar_cnt[0]),
        .O(\ar_cnt[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFE00F)) 
    \ar_cnt[2]_i_3 
       (.I0(\ar_cnt[2]_i_4_n_0 ),
        .I1(s_axi_arsize[0]),
        .I2(s_axi_arlen[3]),
        .I3(\ar_cnt[3]_i_3_n_0 ),
        .I4(s_axi_arsize[1]),
        .O(\ar_cnt[2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hE8880000)) 
    \ar_cnt[2]_i_4 
       (.I0(s_axi_arlen[1]),
        .I1(s_axi_araddr[1]),
        .I2(s_axi_araddr[0]),
        .I3(s_axi_arlen[0]),
        .I4(s_axi_arlen[2]),
        .O(\ar_cnt[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAA9FFFFAAA90000)) 
    \ar_cnt[3]_i_1 
       (.I0(ar_cnt[3]),
        .I1(ar_cnt[0]),
        .I2(ar_cnt[1]),
        .I3(ar_cnt[2]),
        .I4(\ar_addr_d[7]_i_3_n_0 ),
        .I5(\ar_cnt[3]_i_2_n_0 ),
        .O(\ar_cnt[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hD000)) 
    \ar_cnt[3]_i_2 
       (.I0(\ar_cnt[3]_i_3_n_0 ),
        .I1(s_axi_arsize[1]),
        .I2(s_axi_arlen[3]),
        .I3(s_axi_arvalid),
        .O(\ar_cnt[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \ar_cnt[3]_i_3 
       (.I0(s_axi_arlen[0]),
        .I1(s_axi_arlen[1]),
        .I2(s_axi_araddr[1]),
        .I3(s_axi_arlen[2]),
        .I4(s_axi_arsize[0]),
        .O(\ar_cnt[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAA800000002)) 
    \ar_cnt[4]_i_1 
       (.I0(\ar_addr_d[7]_i_3_n_0 ),
        .I1(ar_cnt[1]),
        .I2(ar_cnt[0]),
        .I3(ar_cnt[3]),
        .I4(ar_cnt[2]),
        .I5(ar_cnt[4]),
        .O(\ar_cnt[4]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'h4444440000000040)) 
    \ar_cnt[5]_i_1 
       (.I0(m_axi_arready),
        .I1(m_axi_arvalid_i_reg_0),
        .I2(ar_cnt[6]),
        .I3(ar_cnt[4]),
        .I4(\ar_cnt[6]_i_3_n_0 ),
        .I5(ar_cnt[5]),
        .O(\ar_cnt[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hF1)) 
    \ar_cnt[6]_i_1 
       (.I0(r_state__0[0]),
        .I1(r_state__0[1]),
        .I2(\ar_addr_d[7]_i_3_n_0 ),
        .O(\ar_cnt[6]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'h4444444000000000)) 
    \ar_cnt[6]_i_2 
       (.I0(m_axi_arready),
        .I1(m_axi_arvalid_i_reg_0),
        .I2(\ar_cnt[6]_i_3_n_0 ),
        .I3(ar_cnt[5]),
        .I4(ar_cnt[4]),
        .I5(ar_cnt[6]),
        .O(\ar_cnt[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \ar_cnt[6]_i_3 
       (.I0(ar_cnt[1]),
        .I1(ar_cnt[0]),
        .I2(ar_cnt[3]),
        .I3(ar_cnt[2]),
        .O(\ar_cnt[6]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ar_cnt_reg[0] 
       (.C(aclk),
        .CE(\ar_cnt[6]_i_1_n_0 ),
        .D(\ar_cnt[0]_i_1_n_0 ),
        .Q(ar_cnt[0]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \ar_cnt_reg[1] 
       (.C(aclk),
        .CE(\ar_cnt[6]_i_1_n_0 ),
        .D(\ar_cnt[1]_i_1_n_0 ),
        .Q(ar_cnt[1]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \ar_cnt_reg[2] 
       (.C(aclk),
        .CE(\ar_cnt[6]_i_1_n_0 ),
        .D(\ar_cnt[2]_i_1_n_0 ),
        .Q(ar_cnt[2]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \ar_cnt_reg[3] 
       (.C(aclk),
        .CE(\ar_cnt[6]_i_1_n_0 ),
        .D(\ar_cnt[3]_i_1_n_0 ),
        .Q(ar_cnt[3]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \ar_cnt_reg[4] 
       (.C(aclk),
        .CE(\ar_cnt[6]_i_1_n_0 ),
        .D(\ar_cnt[4]_i_1_n_0 ),
        .Q(ar_cnt[4]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \ar_cnt_reg[5] 
       (.C(aclk),
        .CE(\ar_cnt[6]_i_1_n_0 ),
        .D(\ar_cnt[5]_i_1_n_0 ),
        .Q(ar_cnt[5]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \ar_cnt_reg[6] 
       (.C(aclk),
        .CE(\ar_cnt[6]_i_1_n_0 ),
        .D(\ar_cnt[6]_i_2_n_0 ),
        .Q(ar_cnt[6]),
        .R(areset));
  LUT6 #(
    .INIT(64'h3333223200002202)) 
    \aw_addr[0]_i_1 
       (.I0(s_axi_awaddr[0]),
        .I1(w_state__0[2]),
        .I2(w_state__0[0]),
        .I3(s_axi_wlast),
        .I4(w_state__0[1]),
        .I5(in22[0]),
        .O(aw_addr[0]));
  LUT6 #(
    .INIT(64'h3333223200002202)) 
    \aw_addr[1]_i_1 
       (.I0(s_axi_awaddr[1]),
        .I1(w_state__0[2]),
        .I2(w_state__0[0]),
        .I3(s_axi_wlast),
        .I4(w_state__0[1]),
        .I5(in22[1]),
        .O(aw_addr[1]));
  LUT6 #(
    .INIT(64'h3333223200002202)) 
    \aw_addr[2]_i_1 
       (.I0(s_axi_awaddr[2]),
        .I1(w_state__0[2]),
        .I2(w_state__0[0]),
        .I3(s_axi_wlast),
        .I4(w_state__0[1]),
        .I5(in22[2]),
        .O(aw_addr[2]));
  LUT6 #(
    .INIT(64'h3333223200002202)) 
    \aw_addr[3]_i_1 
       (.I0(s_axi_awaddr[3]),
        .I1(w_state__0[2]),
        .I2(w_state__0[0]),
        .I3(s_axi_wlast),
        .I4(w_state__0[1]),
        .I5(in22[3]),
        .O(aw_addr[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \aw_addr[3]_i_3 
       (.I0(\^m_axi_awaddr [2]),
        .I1(aw_incr[2]),
        .O(\aw_addr[3]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \aw_addr[3]_i_4 
       (.I0(\^m_axi_awaddr [1]),
        .I1(p_0_in_0[1]),
        .I2(aw_incr[1]),
        .O(\aw_addr[3]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \aw_addr[3]_i_5 
       (.I0(\^m_axi_awaddr [0]),
        .I1(p_0_in_0[0]),
        .I2(aw_incr[0]),
        .O(\aw_addr[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h3333223200002202)) 
    \aw_addr[4]_i_1 
       (.I0(s_axi_awaddr[4]),
        .I1(w_state__0[2]),
        .I2(w_state__0[0]),
        .I3(s_axi_wlast),
        .I4(w_state__0[1]),
        .I5(in22[4]),
        .O(aw_addr[4]));
  LUT6 #(
    .INIT(64'h3333223200002202)) 
    \aw_addr[5]_i_1 
       (.I0(s_axi_awaddr[5]),
        .I1(w_state__0[2]),
        .I2(w_state__0[0]),
        .I3(s_axi_wlast),
        .I4(w_state__0[1]),
        .I5(in22[5]),
        .O(aw_addr[5]));
  LUT6 #(
    .INIT(64'h3333223200002202)) 
    \aw_addr[6]_i_1 
       (.I0(s_axi_awaddr[6]),
        .I1(w_state__0[2]),
        .I2(w_state__0[0]),
        .I3(s_axi_wlast),
        .I4(w_state__0[1]),
        .I5(in22[6]),
        .O(aw_addr[6]));
  LUT6 #(
    .INIT(64'hEFEEEFEEEFEEFFFF)) 
    \aw_addr[7]_i_1 
       (.I0(\aw_addr[7]_i_3_n_0 ),
        .I1(aw_incr_1),
        .I2(\aw_addr[7]_i_5_n_0 ),
        .I3(\aw_addr[7]_i_6_n_0 ),
        .I4(w_state__0[1]),
        .I5(\aw_addr[7]_i_7_n_0 ),
        .O(\aw_addr[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3333223200002202)) 
    \aw_addr[7]_i_2 
       (.I0(s_axi_awaddr[7]),
        .I1(w_state__0[2]),
        .I2(w_state__0[0]),
        .I3(s_axi_wlast),
        .I4(w_state__0[1]),
        .I5(in22[7]),
        .O(aw_addr[7]));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \aw_addr[7]_i_3 
       (.I0(s_axi_awready_i_i_7_n_0),
        .I1(s_axi_wvalid),
        .I2(w_state__0[0]),
        .I3(s_axi_awready_i_i_6_n_0),
        .I4(w_state__0[1]),
        .I5(w_state__0[2]),
        .O(\aw_addr[7]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \aw_addr[7]_i_4 
       (.I0(s_axi_awvalid),
        .I1(w_state__0[1]),
        .I2(w_state__0[2]),
        .I3(w_state__0[0]),
        .O(aw_incr_1));
  LUT2 #(
    .INIT(4'hE)) 
    \aw_addr[7]_i_5 
       (.I0(s_axi_wlast),
        .I1(w_null_reg_n_0),
        .O(\aw_addr[7]_i_5_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'h000000000000B0BB)) 
    \aw_addr[7]_i_6 
       (.I0(aw_done_reg_n_0),
        .I1(m_axi_awready),
        .I2(w_done_reg_n_0),
        .I3(m_axi_wready),
        .I4(\w_cnt[4]_i_2_n_0 ),
        .I5(w_state__0[0]),
        .O(\aw_addr[7]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFBFFFFF)) 
    \aw_addr[7]_i_7 
       (.I0(w_state__0[2]),
        .I1(s_axi_wvalid),
        .I2(w_state__0[0]),
        .I3(s_axi_wlast),
        .I4(s_axi_awready_i_i_6_n_0),
        .O(\aw_addr[7]_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \aw_addr_reg[0] 
       (.C(aclk),
        .CE(\aw_addr[7]_i_1_n_0 ),
        .D(aw_addr[0]),
        .Q(\^m_axi_awaddr [0]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \aw_addr_reg[1] 
       (.C(aclk),
        .CE(\aw_addr[7]_i_1_n_0 ),
        .D(aw_addr[1]),
        .Q(\^m_axi_awaddr [1]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \aw_addr_reg[2] 
       (.C(aclk),
        .CE(\aw_addr[7]_i_1_n_0 ),
        .D(aw_addr[2]),
        .Q(\^m_axi_awaddr [2]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \aw_addr_reg[3] 
       (.C(aclk),
        .CE(\aw_addr[7]_i_1_n_0 ),
        .D(aw_addr[3]),
        .Q(\^m_axi_awaddr [3]),
        .R(areset));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \aw_addr_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\aw_addr_reg[3]_i_2_n_0 ,\NLW_aw_addr_reg[3]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,\^m_axi_awaddr [2],aw_incr[1:0]}),
        .O(in22[3:0]),
        .S({\^m_axi_awaddr [3],\aw_addr[3]_i_3_n_0 ,\aw_addr[3]_i_4_n_0 ,\aw_addr[3]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \aw_addr_reg[4] 
       (.C(aclk),
        .CE(\aw_addr[7]_i_1_n_0 ),
        .D(aw_addr[4]),
        .Q(\^m_axi_awaddr [4]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \aw_addr_reg[5] 
       (.C(aclk),
        .CE(\aw_addr[7]_i_1_n_0 ),
        .D(aw_addr[5]),
        .Q(\^m_axi_awaddr [5]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \aw_addr_reg[6] 
       (.C(aclk),
        .CE(\aw_addr[7]_i_1_n_0 ),
        .D(aw_addr[6]),
        .Q(\^m_axi_awaddr [6]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \aw_addr_reg[7] 
       (.C(aclk),
        .CE(\aw_addr[7]_i_1_n_0 ),
        .D(aw_addr[7]),
        .Q(\^m_axi_awaddr [7]),
        .R(areset));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \aw_addr_reg[7]_i_8 
       (.CI(\aw_addr_reg[3]_i_2_n_0 ),
        .CO(\NLW_aw_addr_reg[7]_i_8_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(in22[7:4]),
        .S(\^m_axi_awaddr [7:4]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'hF0F0F020F0F0F022)) 
    aw_done_i_1
       (.I0(m_axi_wready),
        .I1(w_done_reg_n_0),
        .I2(aw_done_reg_n_0),
        .I3(w_state__0[0]),
        .I4(\w_cnt[4]_i_2_n_0 ),
        .I5(m_axi_awready),
        .O(aw_done_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    aw_done_reg
       (.C(aclk),
        .CE(1'b1),
        .D(aw_done_i_1_n_0),
        .Q(aw_done_reg_n_0),
        .R(areset));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT4 #(
    .INIT(16'h1F10)) 
    \aw_incr[0]_i_1 
       (.I0(s_axi_awsize[0]),
        .I1(s_axi_awsize[1]),
        .I2(aw_incr_1),
        .I3(aw_incr[0]),
        .O(\aw_incr[0]_i_1_n_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT4 #(
    .INIT(16'h2F20)) 
    \aw_incr[1]_i_1 
       (.I0(s_axi_awsize[0]),
        .I1(s_axi_awsize[1]),
        .I2(aw_incr_1),
        .I3(aw_incr[1]),
        .O(\aw_incr[1]_i_1_n_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT5 #(
    .INIT(32'hFFFB0008)) 
    \aw_incr[2]_i_1 
       (.I0(s_axi_awsize[1]),
        .I1(s_axi_awvalid),
        .I2(s_axi_awready_i_i_2_n_0),
        .I3(w_state__0[0]),
        .I4(aw_incr[2]),
        .O(\aw_incr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \aw_incr_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\aw_incr[0]_i_1_n_0 ),
        .Q(aw_incr[0]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \aw_incr_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\aw_incr[1]_i_1_n_0 ),
        .Q(aw_incr[1]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \aw_incr_reg[2] 
       (.C(aclk),
        .CE(1'b1),
        .D(\aw_incr[2]_i_1_n_0 ),
        .Q(aw_incr[2]),
        .R(areset));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \b_cnt[0]_i_1 
       (.I0(b_cnt_reg[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \b_cnt[1]_i_1 
       (.I0(b_cnt_reg[0]),
        .I1(b_cnt_reg[1]),
        .O(p_0_in[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \b_cnt[2]_i_1 
       (.I0(b_cnt_reg[2]),
        .I1(b_cnt_reg[1]),
        .I2(b_cnt_reg[0]),
        .O(\b_cnt[2]_i_1_n_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "193" *) 
  (* \PinAttr:I1:HOLD_DETOUR  = "173" *) 
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \b_cnt[3]_i_1 
       (.I0(b_cnt_reg[3]),
        .I1(b_cnt_reg[2]),
        .I2(b_cnt_reg[0]),
        .I3(b_cnt_reg[1]),
        .O(\b_cnt[3]_i_1_n_0 ));
  (* \PinAttr:I1:HOLD_DETOUR  = "193" *) 
  (* \PinAttr:I4:HOLD_DETOUR  = "173" *) 
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \b_cnt[4]_i_1 
       (.I0(b_cnt_reg[4]),
        .I1(b_cnt_reg[3]),
        .I2(b_cnt_reg[1]),
        .I3(b_cnt_reg[0]),
        .I4(b_cnt_reg[2]),
        .O(\b_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \b_cnt[5]_i_1 
       (.I0(b_cnt_reg[5]),
        .I1(b_cnt_reg[4]),
        .I2(b_cnt_reg[2]),
        .I3(b_cnt_reg[0]),
        .I4(b_cnt_reg[1]),
        .I5(b_cnt_reg[3]),
        .O(\b_cnt[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \b_cnt[6]_i_1 
       (.I0(b_cnt_reg[6]),
        .I1(\b_cnt[8]_i_4_n_0 ),
        .O(\b_cnt[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hA6)) 
    \b_cnt[7]_i_1 
       (.I0(b_cnt_reg[7]),
        .I1(b_cnt_reg[6]),
        .I2(\b_cnt[8]_i_4_n_0 ),
        .O(\b_cnt[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABBB)) 
    \b_cnt[8]_i_1 
       (.I0(areset),
        .I1(s_axi_bvalid_i_i_2_n_0),
        .I2(s_axi_bvalid_i_reg_0),
        .I3(s_axi_bready),
        .O(\b_cnt[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0888)) 
    \b_cnt[8]_i_2 
       (.I0(m_axi_bvalid),
        .I1(m_axi_bready_i_reg_0),
        .I2(s_axi_bready),
        .I3(s_axi_bvalid_i_reg_0),
        .O(b_cnt));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT4 #(
    .INIT(16'h9AAA)) 
    \b_cnt[8]_i_3 
       (.I0(b_cnt_reg[8]),
        .I1(\b_cnt[8]_i_4_n_0 ),
        .I2(b_cnt_reg[6]),
        .I3(b_cnt_reg[7]),
        .O(m_axi_bready_i2));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \b_cnt[8]_i_4 
       (.I0(b_cnt_reg[4]),
        .I1(b_cnt_reg[2]),
        .I2(b_cnt_reg[0]),
        .I3(b_cnt_reg[1]),
        .I4(b_cnt_reg[3]),
        .I5(b_cnt_reg[5]),
        .O(\b_cnt[8]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \b_cnt_reg[0] 
       (.C(aclk),
        .CE(b_cnt),
        .D(p_0_in[0]),
        .Q(b_cnt_reg[0]),
        .R(\b_cnt[8]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \b_cnt_reg[1] 
       (.C(aclk),
        .CE(b_cnt),
        .D(p_0_in[1]),
        .Q(b_cnt_reg[1]),
        .R(\b_cnt[8]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \b_cnt_reg[2] 
       (.C(aclk),
        .CE(b_cnt),
        .D(\b_cnt[2]_i_1_n_0 ),
        .Q(b_cnt_reg[2]),
        .R(\b_cnt[8]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \b_cnt_reg[3] 
       (.C(aclk),
        .CE(b_cnt),
        .D(\b_cnt[3]_i_1_n_0 ),
        .Q(b_cnt_reg[3]),
        .R(\b_cnt[8]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \b_cnt_reg[4] 
       (.C(aclk),
        .CE(b_cnt),
        .D(\b_cnt[4]_i_1_n_0 ),
        .Q(b_cnt_reg[4]),
        .R(\b_cnt[8]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \b_cnt_reg[5] 
       (.C(aclk),
        .CE(b_cnt),
        .D(\b_cnt[5]_i_1_n_0 ),
        .Q(b_cnt_reg[5]),
        .R(\b_cnt[8]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \b_cnt_reg[6] 
       (.C(aclk),
        .CE(b_cnt),
        .D(\b_cnt[6]_i_1_n_0 ),
        .Q(b_cnt_reg[6]),
        .R(\b_cnt[8]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \b_cnt_reg[7] 
       (.C(aclk),
        .CE(b_cnt),
        .D(\b_cnt[7]_i_1_n_0 ),
        .Q(b_cnt_reg[7]),
        .R(\b_cnt[8]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \b_cnt_reg[8] 
       (.C(aclk),
        .CE(b_cnt),
        .D(m_axi_bready_i2),
        .Q(b_cnt_reg[8]),
        .R(\b_cnt[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1
       (.I0(\w_cnt_reg_n_0_[7] ),
        .I1(b_cnt_reg[7]),
        .I2(b_cnt_reg[6]),
        .I3(\w_cnt_reg_n_0_[6] ),
        .I4(b_cnt_reg[8]),
        .I5(\w_cnt_reg_n_0_[8] ),
        .O(i__carry_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2
       (.I0(\w_cnt_reg_n_0_[5] ),
        .I1(b_cnt_reg[5]),
        .I2(b_cnt_reg[3]),
        .I3(\w_cnt_reg_n_0_[3] ),
        .I4(b_cnt_reg[4]),
        .I5(\w_cnt_reg_n_0_[4] ),
        .O(i__carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3
       (.I0(\w_cnt_reg_n_0_[2] ),
        .I1(b_cnt_reg[2]),
        .I2(b_cnt_reg[0]),
        .I3(\w_cnt_reg_n_0_[0] ),
        .I4(b_cnt_reg[1]),
        .I5(\w_cnt_reg_n_0_[1] ),
        .O(i__carry_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \m_aruser_reg[sc_route][2] 
       (.C(aclk),
        .CE(m_aruser),
        .D(1'b1),
        .Q(m_axi_aruser),
        .R(areset));
  LUT3 #(
    .INIT(8'h04)) 
    \m_axi_arprot_i[2]_i_1 
       (.I0(r_state__0[0]),
        .I1(s_axi_arvalid),
        .I2(r_state__0[1]),
        .O(m_aruser));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'hBB88BB88BB88B088)) 
    m_axi_arvalid_i_i_1
       (.I0(s_axi_arvalid),
        .I1(m_axi_arvalid_i_i_2_n_0),
        .I2(m_axi_arready),
        .I3(m_axi_arvalid_i_reg_0),
        .I4(ar_cnt[6]),
        .I5(m_axi_arvalid_i_i_3_n_0),
        .O(m_axi_arvalid_i_i_1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    m_axi_arvalid_i_i_2
       (.I0(r_state__0[1]),
        .I1(r_state__0[0]),
        .O(m_axi_arvalid_i_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    m_axi_arvalid_i_i_3
       (.I0(ar_cnt[2]),
        .I1(ar_cnt[3]),
        .I2(ar_cnt[0]),
        .I3(ar_cnt[1]),
        .I4(ar_cnt[5]),
        .I5(ar_cnt[4]),
        .O(m_axi_arvalid_i_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    m_axi_arvalid_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(m_axi_arvalid_i_i_1_n_0),
        .Q(m_axi_arvalid_i_reg_0),
        .R(areset));
  LUT6 #(
    .INIT(64'h5555FFFF55554000)) 
    m_axi_awvalid_i_i_1
       (.I0(m_axi_awvalid_i_i_2_n_0),
        .I1(s_axi_wvalid),
        .I2(w_state__0[0]),
        .I3(m_axi_awvalid_i_i_3_n_0),
        .I4(aw_done),
        .I5(m_axi_awvalid),
        .O(m_axi_awvalid_i_i_1_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAB)) 
    m_axi_awvalid_i_i_2
       (.I0(s_axi_awready_i_i_2_n_0),
        .I1(s_axi_wlast),
        .I2(s_axi_wstrb[3]),
        .I3(s_axi_wstrb[1]),
        .I4(s_axi_wstrb[2]),
        .I5(s_axi_wstrb[0]),
        .O(m_axi_awvalid_i_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    m_axi_awvalid_i_i_3
       (.I0(s_axi_awready_i_i_7_n_0),
        .I1(s_axi_wstrb[0]),
        .I2(s_axi_wstrb[2]),
        .I3(s_axi_wstrb[1]),
        .I4(s_axi_wstrb[3]),
        .O(m_axi_awvalid_i_i_3_n_0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'h000000D0000000FF)) 
    m_axi_awvalid_i_i_4
       (.I0(m_axi_wready),
        .I1(w_done_reg_n_0),
        .I2(aw_done_reg_n_0),
        .I3(w_state__0[0]),
        .I4(\w_cnt[4]_i_2_n_0 ),
        .I5(m_axi_awready),
        .O(aw_done));
  FDRE #(
    .INIT(1'b0)) 
    m_axi_awvalid_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(m_axi_awvalid_i_i_1_n_0),
        .Q(m_axi_awvalid),
        .R(areset));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 m_axi_bready_i1_carry
       (.CI(1'b0),
        .CO({m_axi_bready_i142_in,NLW_m_axi_bready_i1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_m_axi_bready_i1_carry_O_UNCONNECTED[3:0]),
        .S({m_axi_bready_i1_carry_i_1_n_0,m_axi_bready_i1_carry_i_2_n_0,m_axi_bready_i1_carry_i_3_n_0,m_axi_bready_i1_carry_i_4_n_0}));
  LUT4 #(
    .INIT(16'hDFFF)) 
    m_axi_bready_i1_carry_i_1
       (.I0(b_cnt_reg[8]),
        .I1(\b_cnt[8]_i_4_n_0 ),
        .I2(b_cnt_reg[6]),
        .I3(b_cnt_reg[7]),
        .O(m_axi_bready_i1_carry_i_1_n_0));
  LUT6 #(
    .INIT(64'h8028010002008028)) 
    m_axi_bready_i1_carry_i_2
       (.I0(m_axi_bready_i1_carry_i_5_n_0),
        .I1(\b_cnt[8]_i_4_n_0 ),
        .I2(\w_cnt_reg_n_0_[6] ),
        .I3(b_cnt_reg[6]),
        .I4(\w_cnt_reg_n_0_[7] ),
        .I5(b_cnt_reg[7]),
        .O(m_axi_bready_i1_carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h8020018040102040)) 
    m_axi_bready_i1_carry_i_3
       (.I0(\w_cnt_reg_n_0_[4] ),
        .I1(\w_cnt_reg_n_0_[3] ),
        .I2(m_axi_bready_i1_carry_i_6_n_0),
        .I3(b_cnt_reg[3]),
        .I4(m_axi_bready_i1_carry_i_7_n_0),
        .I5(b_cnt_reg[4]),
        .O(m_axi_bready_i1_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000900906900000)) 
    m_axi_bready_i1_carry_i_4
       (.I0(b_cnt_reg[2]),
        .I1(\w_cnt_reg_n_0_[2] ),
        .I2(\w_cnt_reg_n_0_[1] ),
        .I3(b_cnt_reg[1]),
        .I4(b_cnt_reg[0]),
        .I5(\w_cnt_reg_n_0_[0] ),
        .O(m_axi_bready_i1_carry_i_4_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    m_axi_bready_i1_carry_i_5
       (.I0(b_cnt_reg[8]),
        .I1(\w_cnt_reg_n_0_[8] ),
        .O(m_axi_bready_i1_carry_i_5_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    m_axi_bready_i1_carry_i_6
       (.I0(b_cnt_reg[5]),
        .I1(\w_cnt_reg_n_0_[5] ),
        .O(m_axi_bready_i1_carry_i_6_n_0));
  LUT3 #(
    .INIT(8'h7F)) 
    m_axi_bready_i1_carry_i_7
       (.I0(b_cnt_reg[1]),
        .I1(b_cnt_reg[0]),
        .I2(b_cnt_reg[2]),
        .O(m_axi_bready_i1_carry_i_7_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \m_axi_bready_i1_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\NLW_m_axi_bready_i1_inferred__0/i__carry_CO_UNCONNECTED [3],m_axi_bready_i1,\NLW_m_axi_bready_i1_inferred__0/i__carry_CO_UNCONNECTED [1:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_m_axi_bready_i1_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({1'b0,i__carry_i_1_n_0,i__carry_i_2_n_0,i__carry_i_3_n_0}));
  LUT6 #(
    .INIT(64'hFFFF777088887770)) 
    m_axi_bready_i_i_1
       (.I0(s_axi_bready),
        .I1(s_axi_bvalid_i_reg_0),
        .I2(s_axi_awready_i_i_2_n_0),
        .I3(w_state__0[0]),
        .I4(m_axi_bready_i_reg_0),
        .I5(s_axi_bvalid_i_i_2_n_0),
        .O(m_axi_bready_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    m_axi_bready_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(m_axi_bready_i_i_1_n_0),
        .Q(m_axi_bready_i_reg_0),
        .R(areset));
  LUT6 #(
    .INIT(64'hAAAAEEFEAAAA2202)) 
    m_axi_rready_i_i_1
       (.I0(m_axi_rready_i),
        .I1(r_state__0[1]),
        .I2(r_state__0[0]),
        .I3(m_axi_rvalid),
        .I4(m_axi_rready_i_i_3_n_0),
        .I5(m_axi_rready),
        .O(m_axi_rready_i_i_1_n_0));
  LUT4 #(
    .INIT(16'h00E2)) 
    m_axi_rready_i_i_2
       (.I0(s_axi_arvalid),
        .I1(r_state__0[1]),
        .I2(s_axi_rready),
        .I3(r_state__0[0]),
        .O(m_axi_rready_i));
  LUT5 #(
    .INIT(32'h44444440)) 
    m_axi_rready_i_i_3
       (.I0(r_state__0[0]),
        .I1(s_axi_rready),
        .I2(\r_beats_reg_n_0_[7] ),
        .I3(\r_beats_reg_n_0_[6] ),
        .I4(s_axi_rlast_INST_0_i_1_n_0),
        .O(m_axi_rready_i_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    m_axi_rready_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(m_axi_rready_i_i_1_n_0),
        .Q(m_axi_rready),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \m_axi_wdata_i_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(s_axi_wdata[0]),
        .Q(m_axi_wdata[0]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h5555FFFF55554000)) 
    m_axi_wvalid_i_i_1
       (.I0(m_axi_awvalid_i_i_2_n_0),
        .I1(s_axi_wvalid),
        .I2(w_state__0[0]),
        .I3(m_axi_awvalid_i_i_3_n_0),
        .I4(w_done),
        .I5(m_axi_wvalid),
        .O(m_axi_wvalid_i_i_1_n_0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'h000000A2000000FF)) 
    m_axi_wvalid_i_i_2
       (.I0(w_done_reg_n_0),
        .I1(m_axi_awready),
        .I2(aw_done_reg_n_0),
        .I3(w_state__0[0]),
        .I4(\w_cnt[4]_i_2_n_0 ),
        .I5(m_axi_wready),
        .O(w_done));
  FDRE #(
    .INIT(1'b0)) 
    m_axi_wvalid_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(m_axi_wvalid_i_i_1_n_0),
        .Q(m_axi_wvalid),
        .R(areset));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h3A)) 
    \r_beats[0]_i_1 
       (.I0(s_axi_arlen[0]),
        .I1(\r_beats_reg_n_0_[0] ),
        .I2(r_state__0[1]),
        .O(r_beats[0]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT4 #(
    .INIT(16'hC3AA)) 
    \r_beats[1]_i_1 
       (.I0(s_axi_arlen[1]),
        .I1(\r_beats_reg_n_0_[0] ),
        .I2(\r_beats_reg_n_0_[1] ),
        .I3(r_state__0[1]),
        .O(r_beats[1]));
  LUT5 #(
    .INIT(32'hCCC3AAAA)) 
    \r_beats[2]_i_1 
       (.I0(s_axi_arlen[2]),
        .I1(\r_beats_reg_n_0_[2] ),
        .I2(\r_beats_reg_n_0_[1] ),
        .I3(\r_beats_reg_n_0_[0] ),
        .I4(r_state__0[1]),
        .O(r_beats[2]));
  LUT6 #(
    .INIT(64'hFEFE0101FF00FF00)) 
    \r_beats[3]_i_1 
       (.I0(\r_beats_reg_n_0_[2] ),
        .I1(\r_beats_reg_n_0_[1] ),
        .I2(\r_beats_reg_n_0_[0] ),
        .I3(s_axi_arlen[3]),
        .I4(\r_beats_reg_n_0_[3] ),
        .I5(r_state__0[1]),
        .O(r_beats[3]));
  (* \PinAttr:I4:HOLD_DETOUR  = "207" *) 
  LUT6 #(
    .INIT(64'hAAAAAAA800000002)) 
    \r_beats[4]_i_1 
       (.I0(\r_beats[4]_i_2_n_0 ),
        .I1(\r_beats_reg_n_0_[3] ),
        .I2(\r_beats_reg_n_0_[0] ),
        .I3(\r_beats_reg_n_0_[1] ),
        .I4(\r_beats_reg_n_0_[2] ),
        .I5(\r_beats_reg_n_0_[4] ),
        .O(r_beats[4]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \r_beats[4]_i_2 
       (.I0(r_state__0[1]),
        .I1(r_state__0[0]),
        .O(\r_beats[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h82)) 
    \r_beats[5]_i_1 
       (.I0(r_state__0[1]),
        .I1(\r_beats[5]_i_2_n_0 ),
        .I2(\r_beats_reg_n_0_[5] ),
        .O(r_beats[5]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \r_beats[5]_i_2 
       (.I0(\r_beats_reg_n_0_[4] ),
        .I1(\r_beats_reg_n_0_[2] ),
        .I2(\r_beats_reg_n_0_[1] ),
        .I3(\r_beats_reg_n_0_[0] ),
        .I4(\r_beats_reg_n_0_[3] ),
        .O(\r_beats[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'h82)) 
    \r_beats[6]_i_1 
       (.I0(r_state__0[1]),
        .I1(s_axi_rlast_INST_0_i_1_n_0),
        .I2(\r_beats_reg_n_0_[6] ),
        .O(r_beats[6]));
  LUT5 #(
    .INIT(32'h04040E04)) 
    \r_beats[7]_i_1 
       (.I0(r_state__0[1]),
        .I1(s_axi_arvalid),
        .I2(r_state__0[0]),
        .I3(s_axi_rready),
        .I4(s_axi_rlast),
        .O(\r_beats[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT4 #(
    .INIT(16'hA802)) 
    \r_beats[7]_i_2 
       (.I0(r_state__0[1]),
        .I1(\r_beats_reg_n_0_[6] ),
        .I2(s_axi_rlast_INST_0_i_1_n_0),
        .I3(\r_beats_reg_n_0_[7] ),
        .O(r_beats[7]));
  FDRE #(
    .INIT(1'b0)) 
    \r_beats_reg[0] 
       (.C(aclk),
        .CE(\r_beats[7]_i_1_n_0 ),
        .D(r_beats[0]),
        .Q(\r_beats_reg_n_0_[0] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \r_beats_reg[1] 
       (.C(aclk),
        .CE(\r_beats[7]_i_1_n_0 ),
        .D(r_beats[1]),
        .Q(\r_beats_reg_n_0_[1] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \r_beats_reg[2] 
       (.C(aclk),
        .CE(\r_beats[7]_i_1_n_0 ),
        .D(r_beats[2]),
        .Q(\r_beats_reg_n_0_[2] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \r_beats_reg[3] 
       (.C(aclk),
        .CE(\r_beats[7]_i_1_n_0 ),
        .D(r_beats[3]),
        .Q(\r_beats_reg_n_0_[3] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \r_beats_reg[4] 
       (.C(aclk),
        .CE(\r_beats[7]_i_1_n_0 ),
        .D(r_beats[4]),
        .Q(\r_beats_reg_n_0_[4] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \r_beats_reg[5] 
       (.C(aclk),
        .CE(\r_beats[7]_i_1_n_0 ),
        .D(r_beats[5]),
        .Q(\r_beats_reg_n_0_[5] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \r_beats_reg[6] 
       (.C(aclk),
        .CE(\r_beats[7]_i_1_n_0 ),
        .D(r_beats[6]),
        .Q(\r_beats_reg_n_0_[6] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \r_beats_reg[7] 
       (.C(aclk),
        .CE(\r_beats[7]_i_1_n_0 ),
        .D(r_beats[7]),
        .Q(\r_beats_reg_n_0_[7] ),
        .R(areset));
  LUT4 #(
    .INIT(16'hAF04)) 
    s_axi_arready_i_i_1
       (.I0(r_state__0[1]),
        .I1(s_axi_arvalid),
        .I2(r_state__0[0]),
        .I3(s_axi_arready),
        .O(s_axi_arready_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_arready_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(s_axi_arready_i_i_1_n_0),
        .Q(s_axi_arready),
        .R(areset));
  LUT6 #(
    .INIT(64'hDDCCDFFFDDCCD000)) 
    s_axi_awready_i_i_1
       (.I0(s_axi_awready_i_i_2_n_0),
        .I1(s_axi_awready_i_i_3_n_0),
        .I2(s_axi_awready_i_i_4_n_0),
        .I3(s_axi_wlast),
        .I4(s_axi_awready_i_i_5_n_0),
        .I5(s_axi_awready),
        .O(s_axi_awready_i_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    s_axi_awready_i_i_2
       (.I0(w_state__0[1]),
        .I1(w_state__0[2]),
        .O(s_axi_awready_i_i_2_n_0));
  LUT4 #(
    .INIT(16'h1110)) 
    s_axi_awready_i_i_3
       (.I0(w_state__0[0]),
        .I1(w_state__0[2]),
        .I2(w_null_reg_n_0),
        .I3(s_axi_wlast),
        .O(s_axi_awready_i_i_3_n_0));
  LUT5 #(
    .INIT(32'h00000080)) 
    s_axi_awready_i_i_4
       (.I0(s_axi_wvalid),
        .I1(w_state__0[0]),
        .I2(s_axi_awready_i_i_6_n_0),
        .I3(w_state__0[2]),
        .I4(s_axi_awready_i_i_7_n_0),
        .O(s_axi_awready_i_i_4_n_0));
  LUT6 #(
    .INIT(64'h00000000AAFE0000)) 
    s_axi_awready_i_i_5
       (.I0(w_state__0[0]),
        .I1(s_axi_wlast),
        .I2(w_null_reg_n_0),
        .I3(\w_cnt[8]_i_3_n_0 ),
        .I4(w_state__0[1]),
        .I5(w_state__0[2]),
        .O(s_axi_awready_i_i_5_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    s_axi_awready_i_i_6
       (.I0(s_axi_wstrb[3]),
        .I1(s_axi_wstrb[1]),
        .I2(s_axi_wstrb[2]),
        .I3(s_axi_wstrb[0]),
        .O(s_axi_awready_i_i_6_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    s_axi_awready_i_i_7
       (.I0(\w_cnt_reg_n_0_[2] ),
        .I1(\w_cnt_reg_n_0_[7] ),
        .I2(\w_cnt_reg_n_0_[6] ),
        .I3(s_axi_awready_i_i_8_n_0),
        .O(s_axi_awready_i_i_7_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    s_axi_awready_i_i_8
       (.I0(\w_cnt_reg_n_0_[0] ),
        .I1(\w_cnt_reg_n_0_[1] ),
        .I2(\w_cnt_reg_n_0_[3] ),
        .I3(\w_cnt_reg_n_0_[8] ),
        .I4(\w_cnt_reg_n_0_[5] ),
        .I5(\w_cnt_reg_n_0_[4] ),
        .O(s_axi_awready_i_i_8_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_awready_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(s_axi_awready_i_i_1_n_0),
        .Q(s_axi_awready),
        .R(areset));
  LUT6 #(
    .INIT(64'h00000000EAAAE2A2)) 
    \s_axi_bresp_i[0]_i_1 
       (.I0(s_axi_bresp[0]),
        .I1(s_axi_bresp_i),
        .I2(m_axi_bresp[0]),
        .I3(m_axi_bresp[1]),
        .I4(s_axi_bresp[1]),
        .I5(\s_axi_bresp_i[0]_i_3_n_0 ),
        .O(\s_axi_bresp_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_bresp_i[0]_i_2 
       (.I0(m_axi_bready_i_reg_0),
        .I1(m_axi_bvalid),
        .O(s_axi_bresp_i));
  LUT3 #(
    .INIT(8'hEA)) 
    \s_axi_bresp_i[0]_i_3 
       (.I0(areset),
        .I1(s_axi_bready),
        .I2(s_axi_bvalid_i_reg_0),
        .O(\s_axi_bresp_i[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000EAAA)) 
    \s_axi_bresp_i[1]_i_1 
       (.I0(s_axi_bresp[1]),
        .I1(m_axi_bvalid),
        .I2(m_axi_bready_i_reg_0),
        .I3(m_axi_bresp[1]),
        .I4(\s_axi_bresp_i[1]_i_2_n_0 ),
        .I5(areset),
        .O(\s_axi_bresp_i[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_bresp_i[1]_i_2 
       (.I0(s_axi_bvalid_i_reg_0),
        .I1(s_axi_bready),
        .O(\s_axi_bresp_i[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_bresp_i_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\s_axi_bresp_i[0]_i_1_n_0 ),
        .Q(s_axi_bresp[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_bresp_i_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\s_axi_bresp_i[1]_i_1_n_0 ),
        .Q(s_axi_bresp[1]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h001D)) 
    s_axi_bvalid_i_i_1
       (.I0(s_axi_bvalid_i_i_2_n_0),
        .I1(s_axi_bvalid_i_reg_0),
        .I2(s_axi_bready),
        .I3(areset),
        .O(s_axi_bvalid_i_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFF47FFFFFFFFFF)) 
    s_axi_bvalid_i_i_2
       (.I0(m_axi_bready_i142_in),
        .I1(m_axi_bvalid),
        .I2(m_axi_bready_i1),
        .I3(m_axi_bready_i_reg_0),
        .I4(\w_cnt[4]_i_2_n_0 ),
        .I5(w_state__0[0]),
        .O(s_axi_bvalid_i_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_bvalid_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(s_axi_bvalid_i_i_1_n_0),
        .Q(s_axi_bvalid_i_reg_0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata_i[0]_i_1 
       (.I0(m_axi_rdata[0]),
        .I1(r_state__0[1]),
        .O(s_axi_rdata_i0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata_i[10]_i_1 
       (.I0(m_axi_rdata[10]),
        .I1(r_state__0[1]),
        .O(s_axi_rdata_i0_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata_i[1]_i_1 
       (.I0(m_axi_rdata[1]),
        .I1(r_state__0[1]),
        .O(s_axi_rdata_i0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata_i[2]_i_1 
       (.I0(m_axi_rdata[2]),
        .I1(r_state__0[1]),
        .O(s_axi_rdata_i0_in[2]));
  LUT3 #(
    .INIT(8'h58)) 
    \s_axi_rdata_i[31]_i_1 
       (.I0(r_state__0[1]),
        .I1(s_axi_rready),
        .I2(r_state__0[0]),
        .O(\s_axi_rdata_i[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata_i[3]_i_1 
       (.I0(m_axi_rdata[3]),
        .I1(r_state__0[1]),
        .O(s_axi_rdata_i0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata_i[4]_i_1 
       (.I0(m_axi_rdata[4]),
        .I1(r_state__0[1]),
        .O(s_axi_rdata_i0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata_i[5]_i_1 
       (.I0(m_axi_rdata[5]),
        .I1(r_state__0[1]),
        .O(s_axi_rdata_i0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata_i[6]_i_1 
       (.I0(m_axi_rdata[6]),
        .I1(r_state__0[1]),
        .O(s_axi_rdata_i0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata_i[7]_i_1 
       (.I0(m_axi_rdata[7]),
        .I1(r_state__0[1]),
        .O(s_axi_rdata_i0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata_i[8]_i_1 
       (.I0(m_axi_rdata[8]),
        .I1(r_state__0[1]),
        .O(s_axi_rdata_i0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata_i[9]_i_1 
       (.I0(m_axi_rdata[9]),
        .I1(r_state__0[1]),
        .O(s_axi_rdata_i0_in[9]));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[0] 
       (.C(aclk),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(s_axi_rdata_i0_in[0]),
        .Q(s_axi_rdata[0]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[10] 
       (.C(aclk),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(s_axi_rdata_i0_in[10]),
        .Q(s_axi_rdata[10]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[1] 
       (.C(aclk),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(s_axi_rdata_i0_in[1]),
        .Q(s_axi_rdata[1]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[2] 
       (.C(aclk),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(s_axi_rdata_i0_in[2]),
        .Q(s_axi_rdata[2]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[3] 
       (.C(aclk),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(s_axi_rdata_i0_in[3]),
        .Q(s_axi_rdata[3]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[4] 
       (.C(aclk),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(s_axi_rdata_i0_in[4]),
        .Q(s_axi_rdata[4]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[5] 
       (.C(aclk),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(s_axi_rdata_i0_in[5]),
        .Q(s_axi_rdata[5]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[6] 
       (.C(aclk),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(s_axi_rdata_i0_in[6]),
        .Q(s_axi_rdata[6]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[7] 
       (.C(aclk),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(s_axi_rdata_i0_in[7]),
        .Q(s_axi_rdata[7]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[8] 
       (.C(aclk),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(s_axi_rdata_i0_in[8]),
        .Q(s_axi_rdata[8]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[9] 
       (.C(aclk),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(s_axi_rdata_i0_in[9]),
        .Q(s_axi_rdata[9]),
        .R(areset));
  LUT3 #(
    .INIT(8'h01)) 
    s_axi_rlast_INST_0
       (.I0(s_axi_rlast_INST_0_i_1_n_0),
        .I1(\r_beats_reg_n_0_[6] ),
        .I2(\r_beats_reg_n_0_[7] ),
        .O(s_axi_rlast));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    s_axi_rlast_INST_0_i_1
       (.I0(\r_beats_reg_n_0_[5] ),
        .I1(\r_beats_reg_n_0_[3] ),
        .I2(\r_beats_reg_n_0_[0] ),
        .I3(\r_beats_reg_n_0_[1] ),
        .I4(\r_beats_reg_n_0_[2] ),
        .I5(\r_beats_reg_n_0_[4] ),
        .O(s_axi_rlast_INST_0_i_1_n_0));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT4 #(
    .INIT(16'h8F00)) 
    \s_axi_rresp_i[0]_i_1 
       (.I0(s_axi_rresp[1]),
        .I1(r_state__1),
        .I2(\s_axi_rresp_i[0]_i_3_n_0 ),
        .I3(s_axi_rresp[0]),
        .O(\s_axi_rresp_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rresp_i[0]_i_2 
       (.I0(r_state__0[0]),
        .I1(r_state__0[1]),
        .O(r_state__1));
  LUT4 #(
    .INIT(16'h3B0B)) 
    \s_axi_rresp_i[0]_i_3 
       (.I0(s_axi_rready),
        .I1(r_state__0[1]),
        .I2(r_state__0[0]),
        .I3(m_axi_rvalid),
        .O(\s_axi_rresp_i[0]_i_3_n_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT4 #(
    .INIT(16'hF400)) 
    \s_axi_rresp_i[1]_i_1 
       (.I0(s_axi_rready),
        .I1(r_state__0[1]),
        .I2(r_state__0[0]),
        .I3(s_axi_rresp[1]),
        .O(\s_axi_rresp_i[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rresp_i_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\s_axi_rresp_i[0]_i_1_n_0 ),
        .Q(s_axi_rresp[0]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rresp_i_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\s_axi_rresp_i[1]_i_1_n_0 ),
        .Q(s_axi_rresp[1]),
        .R(areset));
  LUT5 #(
    .INIT(32'hF4F43000)) 
    s_axi_rvalid_i_i_1
       (.I0(s_axi_rready),
        .I1(r_state__0[1]),
        .I2(r_state__0[0]),
        .I3(m_axi_rvalid),
        .I4(s_axi_rvalid),
        .O(s_axi_rvalid_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_rvalid_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(s_axi_rvalid_i_i_1_n_0),
        .Q(s_axi_rvalid),
        .R(areset));
  LUT6 #(
    .INIT(64'hF4F4F4FFF4F4F400)) 
    s_axi_wready_i_i_1
       (.I0(s_axi_awready_i_i_2_n_0),
        .I1(s_axi_wvalid),
        .I2(s_axi_wready_i_i_2_n_0),
        .I3(s_axi_awready_i_i_4_n_0),
        .I4(s_axi_wready_i_i_3_n_0),
        .I5(s_axi_wready),
        .O(s_axi_wready_i_i_1_n_0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'h1011000010111011)) 
    s_axi_wready_i_i_2
       (.I0(w_state__0[0]),
        .I1(w_state__0[2]),
        .I2(aw_done_reg_n_0),
        .I3(m_axi_awready),
        .I4(w_done_reg_n_0),
        .I5(m_axi_wready),
        .O(s_axi_wready_i_i_2_n_0));
  LUT6 #(
    .INIT(64'h11111111FF8A8A8A)) 
    s_axi_wready_i_i_3
       (.I0(w_state__0[1]),
        .I1(w_state__0[0]),
        .I2(\w_cnt[8]_i_3_n_0 ),
        .I3(\FSM_sequential_w_state[2]_i_2_n_0 ),
        .I4(s_axi_wvalid),
        .I5(w_state__0[2]),
        .O(s_axi_wready_i_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_wready_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(s_axi_wready_i_i_1_n_0),
        .Q(s_axi_wready),
        .R(areset));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \w_cnt[0]_i_1 
       (.I0(\w_cnt_reg_n_0_[0] ),
        .I1(w_state__0[1]),
        .O(w_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \w_cnt[1]_i_1 
       (.I0(\w_cnt_reg_n_0_[1] ),
        .I1(\w_cnt_reg_n_0_[0] ),
        .I2(w_state__0[1]),
        .O(w_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT4 #(
    .INIT(16'h7800)) 
    \w_cnt[2]_i_1 
       (.I0(\w_cnt_reg_n_0_[0] ),
        .I1(\w_cnt_reg_n_0_[1] ),
        .I2(\w_cnt_reg_n_0_[2] ),
        .I3(w_state__0[1]),
        .O(w_cnt[2]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT5 #(
    .INIT(32'h7F800000)) 
    \w_cnt[3]_i_1 
       (.I0(\w_cnt_reg_n_0_[2] ),
        .I1(\w_cnt_reg_n_0_[1] ),
        .I2(\w_cnt_reg_n_0_[0] ),
        .I3(\w_cnt_reg_n_0_[3] ),
        .I4(w_state__0[1]),
        .O(w_cnt[3]));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \w_cnt[4]_i_1 
       (.I0(\w_cnt_reg_n_0_[3] ),
        .I1(\w_cnt_reg_n_0_[0] ),
        .I2(\w_cnt_reg_n_0_[1] ),
        .I3(\w_cnt_reg_n_0_[2] ),
        .I4(\w_cnt_reg_n_0_[4] ),
        .I5(\w_cnt[4]_i_2_n_0 ),
        .O(w_cnt[4]));
  LUT2 #(
    .INIT(4'hB)) 
    \w_cnt[4]_i_2 
       (.I0(w_state__0[2]),
        .I1(w_state__0[1]),
        .O(\w_cnt[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'h90)) 
    \w_cnt[5]_i_1 
       (.I0(\w_cnt[5]_i_2_n_0 ),
        .I1(\w_cnt_reg_n_0_[5] ),
        .I2(w_state__0[1]),
        .O(w_cnt[5]));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \w_cnt[5]_i_2 
       (.I0(\w_cnt_reg_n_0_[3] ),
        .I1(\w_cnt_reg_n_0_[0] ),
        .I2(\w_cnt_reg_n_0_[1] ),
        .I3(\w_cnt_reg_n_0_[2] ),
        .I4(\w_cnt_reg_n_0_[4] ),
        .O(\w_cnt[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'h82)) 
    \w_cnt[6]_i_1 
       (.I0(w_state__0[1]),
        .I1(\w_cnt[8]_i_4_n_0 ),
        .I2(\w_cnt_reg_n_0_[6] ),
        .O(w_cnt[6]));
  (* \PinAttr:I3:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'hA208)) 
    \w_cnt[7]_i_1 
       (.I0(w_state__0[1]),
        .I1(\w_cnt_reg_n_0_[6] ),
        .I2(\w_cnt[8]_i_4_n_0 ),
        .I3(\w_cnt_reg_n_0_[7] ),
        .O(w_cnt[7]));
  LUT4 #(
    .INIT(16'h0007)) 
    \w_cnt[8]_i_1 
       (.I0(\w_cnt[8]_i_3_n_0 ),
        .I1(w_state__0[1]),
        .I2(w_state__0[2]),
        .I3(w_state__0[0]),
        .O(\w_cnt[8]_i_1_n_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT5 #(
    .INIT(32'hDF200000)) 
    \w_cnt[8]_i_2 
       (.I0(\w_cnt_reg_n_0_[7] ),
        .I1(\w_cnt[8]_i_4_n_0 ),
        .I2(\w_cnt_reg_n_0_[6] ),
        .I3(\w_cnt_reg_n_0_[8] ),
        .I4(w_state__0[1]),
        .O(w_cnt[8]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h22F2)) 
    \w_cnt[8]_i_3 
       (.I0(m_axi_wready),
        .I1(w_done_reg_n_0),
        .I2(m_axi_awready),
        .I3(aw_done_reg_n_0),
        .O(\w_cnt[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \w_cnt[8]_i_4 
       (.I0(\w_cnt_reg_n_0_[4] ),
        .I1(\w_cnt_reg_n_0_[2] ),
        .I2(\w_cnt_reg_n_0_[1] ),
        .I3(\w_cnt_reg_n_0_[0] ),
        .I4(\w_cnt_reg_n_0_[3] ),
        .I5(\w_cnt_reg_n_0_[5] ),
        .O(\w_cnt[8]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \w_cnt_reg[0] 
       (.C(aclk),
        .CE(\w_cnt[8]_i_1_n_0 ),
        .D(w_cnt[0]),
        .Q(\w_cnt_reg_n_0_[0] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \w_cnt_reg[1] 
       (.C(aclk),
        .CE(\w_cnt[8]_i_1_n_0 ),
        .D(w_cnt[1]),
        .Q(\w_cnt_reg_n_0_[1] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \w_cnt_reg[2] 
       (.C(aclk),
        .CE(\w_cnt[8]_i_1_n_0 ),
        .D(w_cnt[2]),
        .Q(\w_cnt_reg_n_0_[2] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \w_cnt_reg[3] 
       (.C(aclk),
        .CE(\w_cnt[8]_i_1_n_0 ),
        .D(w_cnt[3]),
        .Q(\w_cnt_reg_n_0_[3] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \w_cnt_reg[4] 
       (.C(aclk),
        .CE(\w_cnt[8]_i_1_n_0 ),
        .D(w_cnt[4]),
        .Q(\w_cnt_reg_n_0_[4] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \w_cnt_reg[5] 
       (.C(aclk),
        .CE(\w_cnt[8]_i_1_n_0 ),
        .D(w_cnt[5]),
        .Q(\w_cnt_reg_n_0_[5] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \w_cnt_reg[6] 
       (.C(aclk),
        .CE(\w_cnt[8]_i_1_n_0 ),
        .D(w_cnt[6]),
        .Q(\w_cnt_reg_n_0_[6] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \w_cnt_reg[7] 
       (.C(aclk),
        .CE(\w_cnt[8]_i_1_n_0 ),
        .D(w_cnt[7]),
        .Q(\w_cnt_reg_n_0_[7] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \w_cnt_reg[8] 
       (.C(aclk),
        .CE(\w_cnt[8]_i_1_n_0 ),
        .D(w_cnt[8]),
        .Q(\w_cnt_reg_n_0_[8] ),
        .R(areset));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'hAAAAAA08AAAAAA0C)) 
    w_done_i_1
       (.I0(w_done_reg_n_0),
        .I1(m_axi_awready),
        .I2(aw_done_reg_n_0),
        .I3(w_state__0[0]),
        .I4(\w_cnt[4]_i_2_n_0 ),
        .I5(m_axi_wready),
        .O(w_done_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    w_done_reg
       (.C(aclk),
        .CE(1'b1),
        .D(w_done_i_1_n_0),
        .Q(w_done_reg_n_0),
        .R(areset));
  LUT6 #(
    .INIT(64'h111111F000F000F0)) 
    w_null_i_1
       (.I0(w_state__0[2]),
        .I1(w_state__0[1]),
        .I2(w_null_reg_n_0),
        .I3(\aw_addr[7]_i_6_n_0 ),
        .I4(\aw_addr[7]_i_3_n_0 ),
        .I5(s_axi_wlast),
        .O(w_null_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    w_null_reg
       (.C(aclk),
        .CE(1'b1),
        .D(w_null_i_1_n_0),
        .Q(w_null_reg_n_0),
        .R(areset));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT5 #(
    .INIT(32'h010F0100)) 
    \w_size_mask[0]_i_1 
       (.I0(s_axi_awsize[1]),
        .I1(s_axi_awsize[0]),
        .I2(areset),
        .I3(aw_incr_1),
        .I4(p_0_in_0[0]),
        .O(\w_size_mask[0]_i_1_n_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT4 #(
    .INIT(16'h1310)) 
    \w_size_mask[1]_i_1 
       (.I0(s_axi_awsize[1]),
        .I1(areset),
        .I2(aw_incr_1),
        .I3(p_0_in_0[1]),
        .O(\w_size_mask[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \w_size_mask_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\w_size_mask[0]_i_1_n_0 ),
        .Q(p_0_in_0[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \w_size_mask_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\w_size_mask[1]_i_1_n_0 ),
        .Q(p_0_in_0[1]),
        .R(1'b0));
endmodule

(* C_ADDR_WIDTH = "32" *) (* C_AXILITE_CONV = "1" *) (* C_ENABLE_PIPELINING = "1'b1" *) 
(* C_HAS_BURST = "1" *) (* C_ID_WIDTH = "1" *) (* C_IS_CASCADED = "0" *) 
(* C_LIMIT_READ_LENGTH = "0" *) (* C_LIMIT_WRITE_LENGTH = "0" *) (* C_MAX_RUSER_BITS_PER_BYTE = "0" *) 
(* C_MAX_WUSER_BITS_PER_BYTE = "0" *) (* C_MEP_IDENTIFIER_WIDTH = "1" *) (* C_MSC_RDATA_WIDTH_ARRAY = "64'b0000000000000000000000000010000000000000000000000000000000100000" *) 
(* C_MSC_WDATA_WIDTH_ARRAY = "64'b0000000000000000000000000010000000000000000000000000000000100000" *) (* C_NUM_MSC = "2" *) (* C_NUM_READ_OUTSTANDING = "8" *) 
(* C_NUM_READ_THREADS = "1" *) (* C_NUM_SEG = "1" *) (* C_NUM_WRITE_OUTSTANDING = "8" *) 
(* C_NUM_WRITE_THREADS = "1" *) (* C_RDATA_WIDTH = "32" *) (* C_READ_ACCEPTANCE = "32" *) 
(* C_READ_WATERMARK = "0" *) (* C_SEP_PROTOCOL_ARRAY = "2" *) (* C_SEP_RDATA_WIDTH_ARRAY = "32" *) 
(* C_SEP_WDATA_WIDTH_ARRAY = "32" *) (* C_SINGLE_ISSUING = "1" *) (* C_SUPPORTS_NARROW = "0" *) 
(* C_S_RUSER_BITS_PER_BYTE = "0" *) (* C_S_WUSER_BITS_PER_BYTE = "0" *) (* C_WDATA_WIDTH = "32" *) 
(* C_WRITE_ACCEPTANCE = "32" *) (* C_WRITE_WATERMARK = "0" *) (* ORIG_REF_NAME = "sc_si_converter_v1_0_9_top" *) 
(* P_EXOK = "2'b01" *) (* P_FULLY_PIPELINED = "2" *) (* P_ID_WIDTH = "1" *) 
(* P_MAX_RUSER_BITS_PER_BYTE = "1" *) (* P_MAX_WUSER_BITS_PER_BYTE = "1" *) (* P_NUM_READ_OUTSTANDING = "16" *) 
(* P_NUM_WRITE_OUTSTANDING = "16" *) (* P_R_DWBYTES = "4" *) (* P_R_DWSIZE = "2" *) 
(* P_S_RUSER_BITS_PER_BYTE = "1" *) (* P_S_WUSER_BITS_PER_BYTE = "1" *) (* P_W_DWBYTES = "4" *) 
(* P_W_DWSIZE = "2" *) (* P_ZERO_LATENCY = "1" *) 
module design_1_axi_smc_0_sc_si_converter_v1_0_9_top
   (aclk,
    aclken,
    aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready);
  input aclk;
  input aclken;
  input aresetn;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wlast;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [1023:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [31:0]m_axi_wdata;
  output [3:0]m_axi_wstrb;
  output m_axi_wlast;
  output [1023:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [1023:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [1023:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [31:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [1023:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;

  wire aclk;
  wire areset;
  wire areset_i_1_n_0;
  wire aresetn;
  wire [31:0]m_axi_araddr;
  wire m_axi_arready;
  wire [1023:0]m_axi_aruser;
  wire m_axi_arvalid;
  wire [31:0]m_axi_awaddr;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire [31:0]m_axi_rdata;
  wire m_axi_rready;
  wire m_axi_rvalid;
  wire [31:0]m_axi_wdata;
  wire m_axi_wready;
  wire m_axi_wvalid;
  wire [31:0]s_axi_araddr;
  wire [7:0]s_axi_arlen;
  wire s_axi_arready;
  wire [2:0]s_axi_arsize;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire s_axi_awready;
  wire [2:0]s_axi_awsize;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rlast;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wlast;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire [1:0]\NLW_gen_axilite_conv.axilite_conv_inst_m_axi_araddr_UNCONNECTED ;
  wire [2:0]\NLW_gen_axilite_conv.axilite_conv_inst_m_axi_arprot_UNCONNECTED ;
  wire [1:0]\NLW_gen_axilite_conv.axilite_conv_inst_m_axi_awaddr_UNCONNECTED ;
  wire [31:11]\NLW_gen_axilite_conv.axilite_conv_inst_m_axi_rdata_UNCONNECTED ;
  wire [1:0]\NLW_gen_axilite_conv.axilite_conv_inst_m_axi_rresp_UNCONNECTED ;
  wire [31:1]\NLW_gen_axilite_conv.axilite_conv_inst_m_axi_wdata_UNCONNECTED ;
  wire [3:0]\NLW_gen_axilite_conv.axilite_conv_inst_m_axi_wstrb_UNCONNECTED ;
  wire [2:0]\NLW_gen_axilite_conv.axilite_conv_inst_s_axi_arprot_UNCONNECTED ;
  wire [2:2]\NLW_gen_axilite_conv.axilite_conv_inst_s_axi_awsize_UNCONNECTED ;
  wire [31:11]\NLW_gen_axilite_conv.axilite_conv_inst_s_axi_rdata_UNCONNECTED ;
  wire [31:1]\NLW_gen_axilite_conv.axilite_conv_inst_s_axi_wdata_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    areset_i_1
       (.I0(aresetn),
        .O(areset_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    areset_reg
       (.C(aclk),
        .CE(1'b1),
        .D(areset_i_1_n_0),
        .Q(areset),
        .R(1'b0));
  design_1_axi_smc_0_sc_si_converter_v1_0_9_axilite_conv \gen_axilite_conv.axilite_conv_inst 
       (.aclk(aclk),
        .areset(areset),
        .m_axi_araddr({m_axi_araddr[7:2],\NLW_gen_axilite_conv.axilite_conv_inst_m_axi_araddr_UNCONNECTED [1:0]}),
        .m_axi_arprot(\NLW_gen_axilite_conv.axilite_conv_inst_m_axi_arprot_UNCONNECTED [2:0]),
        .m_axi_arready(m_axi_arready),
        .m_axi_aruser(m_axi_aruser[2]),
        .m_axi_arvalid_i_reg_0(m_axi_arvalid),
        .m_axi_awaddr({m_axi_awaddr[7:2],\NLW_gen_axilite_conv.axilite_conv_inst_m_axi_awaddr_UNCONNECTED [1:0]}),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bready_i_reg_0(m_axi_bready),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rdata({\NLW_gen_axilite_conv.axilite_conv_inst_m_axi_rdata_UNCONNECTED [31:11],m_axi_rdata[10:0]}),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(\NLW_gen_axilite_conv.axilite_conv_inst_m_axi_rresp_UNCONNECTED [1:0]),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wdata({\NLW_gen_axilite_conv.axilite_conv_inst_m_axi_wdata_UNCONNECTED [31:1],m_axi_wdata[0]}),
        .m_axi_wready(m_axi_wready),
        .m_axi_wstrb(\NLW_gen_axilite_conv.axilite_conv_inst_m_axi_wstrb_UNCONNECTED [3:0]),
        .m_axi_wvalid(m_axi_wvalid),
        .s_axi_araddr(s_axi_araddr[7:0]),
        .s_axi_arlen(s_axi_arlen[3:0]),
        .s_axi_arprot(\NLW_gen_axilite_conv.axilite_conv_inst_s_axi_arprot_UNCONNECTED [2:0]),
        .s_axi_arready(s_axi_arready),
        .s_axi_arsize(s_axi_arsize[1:0]),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr[7:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awsize({\NLW_gen_axilite_conv.axilite_conv_inst_s_axi_awsize_UNCONNECTED [2],s_axi_awsize[1:0]}),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid_i_reg_0(s_axi_bvalid),
        .s_axi_rdata({\NLW_gen_axilite_conv.axilite_conv_inst_s_axi_rdata_UNCONNECTED [31:11],s_axi_rdata[10:0]}),
        .s_axi_rlast(s_axi_rlast),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata({\NLW_gen_axilite_conv.axilite_conv_inst_s_axi_wdata_UNCONNECTED [31:1],s_axi_wdata[0]}),
        .s_axi_wlast(s_axi_wlast),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* C_CONNECTIVITY = "2'b11" *) (* C_M_PIPELINES = "32'b00000000000000000000000000000000" *) (* C_NUM_MI = "1" *) 
(* C_NUM_SI = "2" *) (* C_PAYLD_WIDTH = "53" *) (* C_S_LATENCY = "32'b00000000000000000000000000000000" *) 
(* C_S_PIPELINES = "32'b00000000000000000000000000000000" *) (* C_TESTING_MODE = "0" *) (* K_MAX_INFO_WIDTH = "1" *) 
(* LP_LOG_NUM_SI = "32'b00000000000000000000000000000001" *) (* LP_MUX_IMPL = "32'b00000000000000000000000000000000" *) (* LP_M_SC_SEL_MI_PIPELINE_DEPTH = "32'b00000000000000000000000000000000" *) 
(* ORIG_REF_NAME = "sc_switchboard_v1_0_6_top" *) 
module design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4
   (aclk,
    aclken,
    connectivity,
    s_sc_send,
    s_sc_req,
    s_sc_info,
    s_sc_payld,
    s_sc_recv,
    m_sc_recv,
    m_sc_send,
    m_sc_req,
    m_sc_info,
    m_sc_payld);
  input aclk;
  input aclken;
  input [1:0]connectivity;
  input [1:0]s_sc_send;
  input [1:0]s_sc_req;
  input [1:0]s_sc_info;
  input [105:0]s_sc_payld;
  output [1:0]s_sc_recv;
  input [1:0]m_sc_recv;
  output [1:0]m_sc_send;
  output [1:0]m_sc_req;
  output [1:0]m_sc_info;
  output [52:0]m_sc_payld;

  wire [52:0]m_sc_payld;
  wire [1:0]m_sc_recv;
  wire [105:0]s_sc_payld;
  wire [33:0]\NLW_gen_mi[0].inst_mux_payld_m_sc_payld_UNCONNECTED ;
  wire [33:0]\NLW_gen_mi[0].inst_mux_payld_s_sc_payld_UNCONNECTED ;

  design_1_axi_smc_0_sc_util_v1_0_4_mux__parameterized3 \gen_mi[0].inst_mux_payld 
       (.m_sc_payld({\NLW_gen_mi[0].inst_mux_payld_m_sc_payld_UNCONNECTED [33:13],m_sc_payld[31:20],\NLW_gen_mi[0].inst_mux_payld_m_sc_payld_UNCONNECTED [0]}),
        .m_sc_recv(m_sc_recv[1]),
        .s_sc_payld({\NLW_gen_mi[0].inst_mux_payld_s_sc_payld_UNCONNECTED [33:13],s_sc_payld[84:73],\NLW_gen_mi[0].inst_mux_payld_s_sc_payld_UNCONNECTED [0]}));
endmodule

(* ORIG_REF_NAME = "sc_transaction_regulator_v1_0_8_singleorder" *) 
module design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_singleorder
   (\gen_id_reg.aresetn_d_reg[0]_0 ,
    \gen_id_reg.aresetn_d_reg[0]_1 ,
    s_axi_arready,
    m_axi_arvalid,
    s_axi_rid,
    aclk,
    m_axi_rvalid,
    m_axi_rlast,
    s_axi_rready,
    p_0_in,
    m_axi_arready,
    s_axi_arvalid,
    areset,
    s_axi_arid);
  output \gen_id_reg.aresetn_d_reg[0]_0 ;
  output \gen_id_reg.aresetn_d_reg[0]_1 ;
  output s_axi_arready;
  output m_axi_arvalid;
  output [11:0]s_axi_rid;
  input aclk;
  input m_axi_rvalid;
  input m_axi_rlast;
  input s_axi_rready;
  input p_0_in;
  input m_axi_arready;
  input s_axi_arvalid;
  input areset;
  input [11:0]s_axi_arid;

  wire aclk;
  wire areset;
  wire \gen_id_reg.aresetn_d[0]_i_1_n_0 ;
  wire \gen_id_reg.aresetn_d_reg[0]_0 ;
  wire \gen_id_reg.aresetn_d_reg[0]_1 ;
  wire \gen_id_reg.s_rid_i0 ;
  wire \gen_id_reg.s_single_aready_i_i_1_n_0 ;
  wire \gen_id_reg.s_single_aready_i_reg_n_0 ;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire m_axi_rlast;
  wire m_axi_rvalid;
  wire m_single_rready__0;
  wire p_0_in;
  wire [11:0]s_axi_arid;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [11:0]s_axi_rid;
  wire s_axi_rready;

  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gen_id_reg.aresetn_d[0]_i_1 
       (.I0(areset),
        .O(\gen_id_reg.aresetn_d[0]_i_1_n_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "192" *) 
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gen_id_reg.aresetn_d[1]_i_1 
       (.I0(\gen_id_reg.aresetn_d_reg[0]_0 ),
        .I1(areset),
        .O(\gen_id_reg.aresetn_d_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.aresetn_d_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_id_reg.aresetn_d[0]_i_1_n_0 ),
        .Q(\gen_id_reg.aresetn_d_reg[0]_0 ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h80)) 
    \gen_id_reg.s_rid_i[11]_i_1__0 
       (.I0(m_axi_arready),
        .I1(s_axi_arvalid),
        .I2(\gen_id_reg.s_single_aready_i_reg_n_0 ),
        .O(\gen_id_reg.s_rid_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[0] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_arid[0]),
        .Q(s_axi_rid[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[10] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_arid[10]),
        .Q(s_axi_rid[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[11] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_arid[11]),
        .Q(s_axi_rid[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[1] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_arid[1]),
        .Q(s_axi_rid[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[2] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_arid[2]),
        .Q(s_axi_rid[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[3] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_arid[3]),
        .Q(s_axi_rid[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[4] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_arid[4]),
        .Q(s_axi_rid[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[5] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_arid[5]),
        .Q(s_axi_rid[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[6] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_arid[6]),
        .Q(s_axi_rid[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[7] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_arid[7]),
        .Q(s_axi_rid[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[8] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_arid[8]),
        .Q(s_axi_rid[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[9] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_arid[9]),
        .Q(s_axi_rid[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hF3FBFBFB00000000)) 
    \gen_id_reg.s_single_aready_i_i_1 
       (.I0(\gen_id_reg.s_single_aready_i_reg_n_0 ),
        .I1(p_0_in),
        .I2(m_single_rready__0),
        .I3(m_axi_arready),
        .I4(s_axi_arvalid),
        .I5(\gen_id_reg.aresetn_d_reg[0]_0 ),
        .O(\gen_id_reg.s_single_aready_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_single_aready_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_id_reg.s_single_aready_i_i_1_n_0 ),
        .Q(\gen_id_reg.s_single_aready_i_reg_n_0 ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    m_axi_arvalid_INST_0
       (.I0(s_axi_arvalid),
        .I1(\gen_id_reg.s_single_aready_i_reg_n_0 ),
        .O(m_axi_arvalid));
  LUT3 #(
    .INIT(8'h80)) 
    m_single_rready
       (.I0(m_axi_rvalid),
        .I1(m_axi_rlast),
        .I2(s_axi_rready),
        .O(m_single_rready__0));
  LUT2 #(
    .INIT(4'h8)) 
    s_axi_arready_INST_0
       (.I0(m_axi_arready),
        .I1(\gen_id_reg.s_single_aready_i_reg_n_0 ),
        .O(s_axi_arready));
endmodule

(* ORIG_REF_NAME = "sc_transaction_regulator_v1_0_8_singleorder" *) 
module design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_singleorder_14
   (p_0_in,
    s_axi_awready,
    m_axi_awvalid,
    s_axi_bid,
    aclk,
    \gen_id_reg.aresetn_d_reg[1]_0 ,
    s_axi_bready,
    m_axi_bvalid,
    \gen_id_reg.s_single_aready_i_reg_0 ,
    m_axi_awready,
    s_axi_awvalid,
    s_axi_awid);
  output p_0_in;
  output s_axi_awready;
  output m_axi_awvalid;
  output [11:0]s_axi_bid;
  input aclk;
  input \gen_id_reg.aresetn_d_reg[1]_0 ;
  input s_axi_bready;
  input m_axi_bvalid;
  input \gen_id_reg.s_single_aready_i_reg_0 ;
  input m_axi_awready;
  input s_axi_awvalid;
  input [11:0]s_axi_awid;

  wire aclk;
  wire \gen_id_reg.aresetn_d_reg[1]_0 ;
  wire \gen_id_reg.s_rid_i0 ;
  wire \gen_id_reg.s_single_aready_i_i_1__0_n_0 ;
  wire \gen_id_reg.s_single_aready_i_reg_0 ;
  wire \gen_id_reg.s_single_aready_i_reg_n_0 ;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire m_axi_bvalid;
  wire p_0_in;
  wire p_2_in;
  wire [11:0]s_axi_awid;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire [11:0]s_axi_bid;
  wire s_axi_bready;

  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.aresetn_d_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_id_reg.aresetn_d_reg[1]_0 ),
        .Q(p_0_in),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h80)) 
    \gen_id_reg.s_rid_i[11]_i_1 
       (.I0(m_axi_awready),
        .I1(s_axi_awvalid),
        .I2(\gen_id_reg.s_single_aready_i_reg_n_0 ),
        .O(\gen_id_reg.s_rid_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[0] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_awid[0]),
        .Q(s_axi_bid[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[10] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_awid[10]),
        .Q(s_axi_bid[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[11] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_awid[11]),
        .Q(s_axi_bid[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[1] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_awid[1]),
        .Q(s_axi_bid[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[2] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_awid[2]),
        .Q(s_axi_bid[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[3] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_awid[3]),
        .Q(s_axi_bid[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[4] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_awid[4]),
        .Q(s_axi_bid[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[5] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_awid[5]),
        .Q(s_axi_bid[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[6] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_awid[6]),
        .Q(s_axi_bid[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[7] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_awid[7]),
        .Q(s_axi_bid[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[8] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_awid[8]),
        .Q(s_axi_bid[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_rid_i_reg[9] 
       (.C(aclk),
        .CE(\gen_id_reg.s_rid_i0 ),
        .D(s_axi_awid[9]),
        .Q(s_axi_bid[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hF333FBBB00000000)) 
    \gen_id_reg.s_single_aready_i_i_1__0 
       (.I0(\gen_id_reg.s_single_aready_i_reg_n_0 ),
        .I1(p_0_in),
        .I2(s_axi_bready),
        .I3(m_axi_bvalid),
        .I4(p_2_in),
        .I5(\gen_id_reg.s_single_aready_i_reg_0 ),
        .O(\gen_id_reg.s_single_aready_i_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \gen_id_reg.s_single_aready_i_i_2 
       (.I0(s_axi_awvalid),
        .I1(m_axi_awready),
        .O(p_2_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_id_reg.s_single_aready_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_id_reg.s_single_aready_i_i_1__0_n_0 ),
        .Q(\gen_id_reg.s_single_aready_i_reg_n_0 ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    m_axi_awvalid_INST_0
       (.I0(s_axi_awvalid),
        .I1(\gen_id_reg.s_single_aready_i_reg_n_0 ),
        .O(m_axi_awvalid));
  LUT2 #(
    .INIT(4'h8)) 
    s_axi_awready_INST_0
       (.I0(m_axi_awready),
        .I1(\gen_id_reg.s_single_aready_i_reg_n_0 ),
        .O(s_axi_awready));
endmodule

(* C_ADDR_WIDTH = "32" *) (* C_ENABLE_PIPELINING = "1'b1" *) (* C_FAMILY = "zynq" *) 
(* C_IS_CASCADED = "0" *) (* C_MEP_IDENTIFIER = "1'b0" *) (* C_MEP_IDENTIFIER_WIDTH = "1" *) 
(* C_M_ID_WIDTH = "1" *) (* C_NUM_READ_OUTSTANDING = "8" *) (* C_NUM_READ_THREADS = "1" *) 
(* C_NUM_WRITE_OUTSTANDING = "8" *) (* C_NUM_WRITE_THREADS = "1" *) (* C_RDATA_WIDTH = "32" *) 
(* C_READ_ACCEPTANCE = "32" *) (* C_SEP_ROUTE_WIDTH = "1" *) (* C_SINGLE_ISSUING = "1" *) 
(* C_SUPPORTS_READ_DEADLOCK = "0" *) (* C_SUPPORTS_WRITE_DEADLOCK = "0" *) (* C_S_ID_WIDTH = "12" *) 
(* C_WDATA_WIDTH = "32" *) (* C_WRITE_ACCEPTANCE = "32" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
(* ORIG_REF_NAME = "sc_transaction_regulator_v1_0_8_top" *) (* P_FULLY_PIPELINED = "2" *) (* P_ID_BUFFER_WIDTH = "12" *) 
(* P_M_THREAD_ID_WIDTH = "1" *) (* P_NUM_READ_OUTSTANDING = "16" *) (* P_NUM_WRITE_OUTSTANDING = "16" *) 
(* P_R_QUEUE_SIZE = "4" *) (* P_S_ID_WIDTH = "12" *) (* P_W_QUEUE_SIZE = "4" *) 
(* P_ZERO_LATENCY = "1" *) 
module design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top
   (mep_identifier,
    aclk,
    aclken,
    aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready);
  input [0:0]mep_identifier;
  input aclk;
  input aclken;
  input aresetn;
  input [11:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wlast;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [11:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  input [11:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [11:0]s_axi_rid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [1023:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [31:0]m_axi_wdata;
  output [3:0]m_axi_wstrb;
  output m_axi_wlast;
  output [1023:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [1023:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [1023:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [31:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [1023:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;

  wire aclk;
  wire areset;
  wire areset_i_1_n_0;
  wire aresetn;
  wire \gen_endpoint.gen_r_singleorder.r_singleorder_n_0 ;
  wire \gen_endpoint.gen_r_singleorder.r_singleorder_n_1 ;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire m_axi_bvalid;
  wire m_axi_rlast;
  wire m_axi_rvalid;
  wire p_0_in;
  wire [11:0]s_axi_arid;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [11:0]s_axi_awid;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire [11:0]s_axi_bid;
  wire s_axi_bready;
  wire [11:0]s_axi_rid;
  wire s_axi_rready;

  LUT1 #(
    .INIT(2'h1)) 
    areset_i_1
       (.I0(aresetn),
        .O(areset_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    areset_reg
       (.C(aclk),
        .CE(1'b1),
        .D(areset_i_1_n_0),
        .Q(areset),
        .R(1'b0));
  design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_singleorder \gen_endpoint.gen_r_singleorder.r_singleorder 
       (.aclk(aclk),
        .areset(areset),
        .\gen_id_reg.aresetn_d_reg[0]_0 (\gen_endpoint.gen_r_singleorder.r_singleorder_n_0 ),
        .\gen_id_reg.aresetn_d_reg[0]_1 (\gen_endpoint.gen_r_singleorder.r_singleorder_n_1 ),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rvalid(m_axi_rvalid),
        .p_0_in(p_0_in),
        .s_axi_arid(s_axi_arid),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_rid(s_axi_rid),
        .s_axi_rready(s_axi_rready));
  design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_singleorder_14 \gen_endpoint.gen_w_singleorder.w_singleorder 
       (.aclk(aclk),
        .\gen_id_reg.aresetn_d_reg[1]_0 (\gen_endpoint.gen_r_singleorder.r_singleorder_n_1 ),
        .\gen_id_reg.s_single_aready_i_reg_0 (\gen_endpoint.gen_r_singleorder.r_singleorder_n_0 ),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bvalid(m_axi_bvalid),
        .p_0_in(p_0_in),
        .s_axi_awid(s_axi_awid),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bid(s_axi_bid),
        .s_axi_bready(s_axi_bready));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_axi_reg_stall" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_axi_reg_stall__parameterized0
   (\gen_endpoint.r_state_reg[1] ,
    mr_axi_arvalid,
    \gen_endpoint.r_state_reg[0] ,
    \m_vector_i_reg[1125]_0 ,
    m_axi_arlen,
    Q,
    m_vector1,
    m_axi_arvalid,
    E,
    D,
    \gen_endpoint.r_trigger_decerr ,
    s_axi_arready,
    m_valid1,
    m_vector2,
    m_axi_arsize,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arprot,
    \gen_endpoint.r_state_reg[0]_0 ,
    \gen_endpoint.r_state_reg[0]_1 ,
    \gen_endpoint.r_state ,
    s_axi_arlen,
    \gen_endpoint.r_cnt_reg[0] ,
    \gen_endpoint.r_cnt_reg[4] ,
    s_axi_arvalid,
    s_axi_araddr,
    \m_vector_i_reg[1136]_0 ,
    s_axi_arsize,
    s_axi_arburst,
    aclk,
    sr_axi_arvalid,
    mr_axi_arready,
    m_axi_arready,
    \state_reg[storage]_0 ,
    \gen_endpoint.err_arready ,
    r_resume,
    areset);
  output \gen_endpoint.r_state_reg[1] ;
  output mr_axi_arvalid;
  output \gen_endpoint.r_state_reg[0] ;
  output \m_vector_i_reg[1125]_0 ;
  output [3:0]m_axi_arlen;
  output [1:0]Q;
  output m_vector1;
  output m_axi_arvalid;
  output [0:0]E;
  output [3:0]D;
  output \gen_endpoint.r_trigger_decerr ;
  output s_axi_arready;
  output m_valid1;
  output m_vector2;
  output [1:0]m_axi_arsize;
  output [11:0]m_axi_arid;
  output [7:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input \gen_endpoint.r_state_reg[0]_0 ;
  input \gen_endpoint.r_state_reg[0]_1 ;
  input [1:0]\gen_endpoint.r_state ;
  input [3:0]s_axi_arlen;
  input \gen_endpoint.r_cnt_reg[0] ;
  input [4:0]\gen_endpoint.r_cnt_reg[4] ;
  input s_axi_arvalid;
  input [23:0]s_axi_araddr;
  input [16:0]\m_vector_i_reg[1136]_0 ;
  input [0:0]s_axi_arsize;
  input [0:0]s_axi_arburst;
  input aclk;
  input sr_axi_arvalid;
  input mr_axi_arready;
  input m_axi_arready;
  input \state_reg[storage]_0 ;
  input \gen_endpoint.err_arready ;
  input r_resume;
  input areset;

  wire [3:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire aclk;
  wire areset;
  wire \gen_endpoint.err_arready ;
  wire \gen_endpoint.r_cnt[4]_i_3_n_0 ;
  wire \gen_endpoint.r_cnt[4]_i_5_n_0 ;
  wire \gen_endpoint.r_cnt[4]_i_6_n_0 ;
  wire \gen_endpoint.r_cnt_reg[0] ;
  wire [4:0]\gen_endpoint.r_cnt_reg[4] ;
  wire [1:0]\gen_endpoint.r_state ;
  wire \gen_endpoint.r_state[1]_i_2_n_0 ;
  wire \gen_endpoint.r_state_reg[0] ;
  wire \gen_endpoint.r_state_reg[0]_0 ;
  wire \gen_endpoint.r_state_reg[0]_1 ;
  wire \gen_endpoint.r_state_reg[1] ;
  wire \gen_endpoint.r_trigger_decerr ;
  wire [7:0]m_axi_araddr;
  wire [11:0]m_axi_arid;
  wire [3:0]m_axi_arlen;
  wire m_axi_arready;
  wire [1:0]m_axi_arsize;
  wire m_axi_arvalid;
  wire m_axi_arvalid_INST_0_i_4_n_0;
  wire m_axi_arvalid_INST_0_i_5_n_0;
  wire m_axi_arvalid_INST_0_i_6_n_0;
  wire m_axi_arvalid_INST_0_i_7_n_0;
  wire m_axi_arvalid_INST_0_i_8_n_0;
  wire m_axi_arvalid_INST_0_i_9_n_0;
  wire m_valid1;
  wire m_vector1;
  wire m_vector2;
  wire \m_vector_i[1136]_i_1_n_0 ;
  wire \m_vector_i_reg[1125]_0 ;
  wire [16:0]\m_vector_i_reg[1136]_0 ;
  wire \m_vector_i_reg_n_0_[1026] ;
  wire \m_vector_i_reg_n_0_[1027] ;
  wire \m_vector_i_reg_n_0_[1029] ;
  wire \m_vector_i_reg_n_0_[1030] ;
  wire \m_vector_i_reg_n_0_[1031] ;
  wire \m_vector_i_reg_n_0_[1032] ;
  wire \m_vector_i_reg_n_0_[1033] ;
  wire \m_vector_i_reg_n_0_[1034] ;
  wire \m_vector_i_reg_n_0_[1035] ;
  wire \m_vector_i_reg_n_0_[1036] ;
  wire \m_vector_i_reg_n_0_[1037] ;
  wire \m_vector_i_reg_n_0_[1038] ;
  wire \m_vector_i_reg_n_0_[1039] ;
  wire \m_vector_i_reg_n_0_[1040] ;
  wire \m_vector_i_reg_n_0_[1061] ;
  wire \m_vector_i_reg_n_0_[1062] ;
  wire \m_vector_i_reg_n_0_[1063] ;
  wire \m_vector_i_reg_n_0_[1064] ;
  wire \m_vector_i_reg_n_0_[1065] ;
  wire \m_vector_i_reg_n_0_[1066] ;
  wire \m_vector_i_reg_n_0_[1067] ;
  wire \m_vector_i_reg_n_0_[1068] ;
  wire \m_vector_i_reg_n_0_[1127] ;
  wire \m_vector_i_reg_n_0_[1128] ;
  wire mr_axi_arready;
  wire mr_axi_arvalid;
  wire [1:0]p_0_in;
  wire p_2_out;
  wire r_resume;
  wire [23:0]s_axi_araddr;
  wire [0:0]s_axi_arburst;
  wire [3:0]s_axi_arlen;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire sr_axi_arvalid;
  wire state;
  wire \state[s_ready_i]_i_1_n_0 ;
  wire \state[s_stall_d]_i_1_n_0 ;
  wire \state[s_stall_d]_i_5_n_0 ;
  wire \state[storage]_i_1_n_0 ;
  wire \state[storage]_i_2_n_0 ;
  wire \state[storage]_i_3_n_0 ;
  wire \state_reg[s_ready_i_n_0_] ;
  wire \state_reg[storage]_0 ;

  LUT2 #(
    .INIT(4'h2)) 
    \gen_axi.gen_read.read_cnt[1]_i_2 
       (.I0(p_0_in[1]),
        .I1(\state_reg[s_ready_i_n_0_] ),
        .O(m_vector1));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_axi.gen_read.s_axi_rid_i[11]_i_3 
       (.I0(\state_reg[s_ready_i_n_0_] ),
        .I1(p_0_in[0]),
        .I2(p_0_in[1]),
        .O(m_valid1));
  LUT3 #(
    .INIT(8'h04)) 
    \gen_axi.gen_read.s_axi_rid_i[11]_i_4 
       (.I0(p_0_in[0]),
        .I1(p_0_in[1]),
        .I2(\state_reg[s_ready_i_n_0_] ),
        .O(m_vector2));
  LUT6 #(
    .INIT(64'h0000000000001105)) 
    \gen_axi.gen_read.s_axi_rlast_i_i_2 
       (.I0(m_axi_arlen[1]),
        .I1(Q[0]),
        .I2(s_axi_arlen[0]),
        .I3(m_vector1),
        .I4(m_axi_arlen[3]),
        .I5(m_axi_arlen[2]),
        .O(\m_vector_i_reg[1125]_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \gen_endpoint.r_cnt[1]_i_1 
       (.I0(\gen_endpoint.r_cnt_reg[4] [0]),
        .I1(\gen_endpoint.r_cnt[4]_i_5_n_0 ),
        .I2(\gen_endpoint.r_cnt_reg[4] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h78E1)) 
    \gen_endpoint.r_cnt[2]_i_1 
       (.I0(\gen_endpoint.r_cnt[4]_i_5_n_0 ),
        .I1(\gen_endpoint.r_cnt_reg[4] [0]),
        .I2(\gen_endpoint.r_cnt_reg[4] [2]),
        .I3(\gen_endpoint.r_cnt_reg[4] [1]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'h7F80FE01)) 
    \gen_endpoint.r_cnt[3]_i_1 
       (.I0(\gen_endpoint.r_cnt_reg[4] [1]),
        .I1(\gen_endpoint.r_cnt[4]_i_5_n_0 ),
        .I2(\gen_endpoint.r_cnt_reg[4] [0]),
        .I3(\gen_endpoint.r_cnt_reg[4] [3]),
        .I4(\gen_endpoint.r_cnt_reg[4] [2]),
        .O(D[2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_endpoint.r_cnt[4]_i_1 
       (.I0(\gen_endpoint.r_cnt[4]_i_3_n_0 ),
        .I1(\gen_endpoint.r_cnt_reg[0] ),
        .O(E));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAA9)) 
    \gen_endpoint.r_cnt[4]_i_2 
       (.I0(\gen_endpoint.r_cnt_reg[4] [4]),
        .I1(\gen_endpoint.r_cnt_reg[4] [3]),
        .I2(\gen_endpoint.r_cnt_reg[4] [2]),
        .I3(\gen_endpoint.r_cnt_reg[4] [1]),
        .I4(\gen_endpoint.r_cnt[4]_i_5_n_0 ),
        .I5(\gen_endpoint.r_cnt_reg[4] [0]),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFFFFFFEFFFFFFFFF)) 
    \gen_endpoint.r_cnt[4]_i_3 
       (.I0(\gen_endpoint.r_trigger_decerr ),
        .I1(\gen_endpoint.r_cnt_reg[4] [4]),
        .I2(\state_reg[s_ready_i_n_0_] ),
        .I3(\gen_endpoint.r_state [0]),
        .I4(\gen_endpoint.r_state [1]),
        .I5(s_axi_arvalid),
        .O(\gen_endpoint.r_cnt[4]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \gen_endpoint.r_cnt[4]_i_5 
       (.I0(\gen_endpoint.r_cnt_reg[0] ),
        .I1(\gen_endpoint.r_cnt[4]_i_6_n_0 ),
        .I2(\gen_endpoint.r_trigger_decerr ),
        .O(\gen_endpoint.r_cnt[4]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h00000200)) 
    \gen_endpoint.r_cnt[4]_i_6 
       (.I0(s_axi_arvalid),
        .I1(\gen_endpoint.r_state [1]),
        .I2(\gen_endpoint.r_state [0]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .I4(\gen_endpoint.r_cnt_reg[4] [4]),
        .O(\gen_endpoint.r_cnt[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h00003330FFFFECEC)) 
    \gen_endpoint.r_state[0]_i_1 
       (.I0(\gen_endpoint.r_state_reg[0]_0 ),
        .I1(\gen_endpoint.r_state_reg[0]_1 ),
        .I2(\gen_endpoint.r_state [1]),
        .I3(mr_axi_arvalid),
        .I4(\gen_endpoint.r_state[1]_i_2_n_0 ),
        .I5(\gen_endpoint.r_state [0]),
        .O(\gen_endpoint.r_state_reg[1] ));
  LUT5 #(
    .INIT(32'h0FF05FB0)) 
    \gen_endpoint.r_state[1]_i_1 
       (.I0(\gen_endpoint.r_state[1]_i_2_n_0 ),
        .I1(mr_axi_arvalid),
        .I2(\gen_endpoint.r_state [0]),
        .I3(\gen_endpoint.r_state [1]),
        .I4(\gen_endpoint.r_state_reg[0]_1 ),
        .O(\gen_endpoint.r_state_reg[0] ));
  LUT6 #(
    .INIT(64'h0004000000000000)) 
    \gen_endpoint.r_state[1]_i_2 
       (.I0(\gen_endpoint.r_cnt_reg[4] [4]),
        .I1(\state_reg[s_ready_i_n_0_] ),
        .I2(\gen_endpoint.r_state [0]),
        .I3(\gen_endpoint.r_state [1]),
        .I4(s_axi_arvalid),
        .I5(\gen_endpoint.r_trigger_decerr ),
        .O(\gen_endpoint.r_state[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_araddr[0]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1061] ),
        .I1(s_axi_araddr[0]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_araddr[0]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_araddr[1]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1062] ),
        .I1(s_axi_araddr[1]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_araddr[1]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_araddr[2]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1063] ),
        .I1(s_axi_araddr[2]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_araddr[2]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_araddr[3]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1064] ),
        .I1(s_axi_araddr[3]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_araddr[3]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_araddr[4]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1065] ),
        .I1(s_axi_araddr[4]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_araddr[4]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_araddr[5]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1066] ),
        .I1(s_axi_araddr[5]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_araddr[5]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_araddr[6]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1067] ),
        .I1(s_axi_araddr[6]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_araddr[6]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_araddr[7]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1068] ),
        .I1(s_axi_araddr[7]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_araddr[7]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arid[0]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1029] ),
        .I1(\m_vector_i_reg[1136]_0 [2]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arid[0]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arid[10]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1039] ),
        .I1(\m_vector_i_reg[1136]_0 [12]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arid[10]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arid[11]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1040] ),
        .I1(\m_vector_i_reg[1136]_0 [13]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arid[11]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arid[1]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1030] ),
        .I1(\m_vector_i_reg[1136]_0 [3]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arid[1]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arid[2]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1031] ),
        .I1(\m_vector_i_reg[1136]_0 [4]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arid[2]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arid[3]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1032] ),
        .I1(\m_vector_i_reg[1136]_0 [5]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arid[3]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arid[4]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1033] ),
        .I1(\m_vector_i_reg[1136]_0 [6]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arid[4]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arid[5]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1034] ),
        .I1(\m_vector_i_reg[1136]_0 [7]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arid[5]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arid[6]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1035] ),
        .I1(\m_vector_i_reg[1136]_0 [8]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arid[6]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arid[7]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1036] ),
        .I1(\m_vector_i_reg[1136]_0 [9]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arid[7]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arid[8]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1037] ),
        .I1(\m_vector_i_reg[1136]_0 [10]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arid[8]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arid[9]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1038] ),
        .I1(\m_vector_i_reg[1136]_0 [11]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arid[9]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arlen[0]_INST_0 
       (.I0(Q[0]),
        .I1(s_axi_arlen[0]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arlen[0]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arlen[1]_INST_0 
       (.I0(Q[1]),
        .I1(s_axi_arlen[1]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arlen[1]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arlen[2]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1127] ),
        .I1(s_axi_arlen[2]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arlen[2]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arlen[3]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1128] ),
        .I1(s_axi_arlen[3]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arlen[3]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arsize[0]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1026] ),
        .I1(\m_vector_i_reg[1136]_0 [0]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arsize[0]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_arsize[1]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1027] ),
        .I1(\m_vector_i_reg[1136]_0 [1]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i_n_0_] ),
        .O(m_axi_arsize[1]));
  LUT2 #(
    .INIT(4'h2)) 
    m_axi_arvalid_INST_0
       (.I0(mr_axi_arvalid),
        .I1(\gen_endpoint.r_state [1]),
        .O(m_axi_arvalid));
  LUT5 #(
    .INIT(32'h00000F20)) 
    m_axi_arvalid_INST_0_i_1
       (.I0(sr_axi_arvalid),
        .I1(\gen_endpoint.r_trigger_decerr ),
        .I2(\state_reg[s_ready_i_n_0_] ),
        .I3(p_0_in[1]),
        .I4(p_0_in[0]),
        .O(mr_axi_arvalid));
  LUT6 #(
    .INIT(64'hFFFEFFFEFFFFFFFE)) 
    m_axi_arvalid_INST_0_i_3
       (.I0(m_axi_arvalid_INST_0_i_4_n_0),
        .I1(m_axi_arvalid_INST_0_i_5_n_0),
        .I2(m_axi_arvalid_INST_0_i_6_n_0),
        .I3(m_axi_arvalid_INST_0_i_7_n_0),
        .I4(m_axi_arvalid_INST_0_i_8_n_0),
        .I5(m_axi_arvalid_INST_0_i_9_n_0),
        .O(\gen_endpoint.r_trigger_decerr ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    m_axi_arvalid_INST_0_i_4
       (.I0(s_axi_araddr[17]),
        .I1(s_axi_araddr[19]),
        .I2(s_axi_araddr[10]),
        .I3(s_axi_araddr[13]),
        .O(m_axi_arvalid_INST_0_i_4_n_0));
  LUT4 #(
    .INIT(16'hEFFF)) 
    m_axi_arvalid_INST_0_i_5
       (.I0(s_axi_araddr[21]),
        .I1(s_axi_araddr[20]),
        .I2(s_axi_arburst),
        .I3(s_axi_araddr[15]),
        .O(m_axi_arvalid_INST_0_i_5_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    m_axi_arvalid_INST_0_i_6
       (.I0(s_axi_araddr[12]),
        .I1(s_axi_araddr[8]),
        .I2(s_axi_araddr[9]),
        .O(m_axi_arvalid_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'hFFFFFDFFFFFFFFFF)) 
    m_axi_arvalid_INST_0_i_7
       (.I0(s_axi_araddr[16]),
        .I1(s_axi_araddr[18]),
        .I2(s_axi_araddr[11]),
        .I3(s_axi_araddr[14]),
        .I4(s_axi_araddr[23]),
        .I5(s_axi_araddr[22]),
        .O(m_axi_arvalid_INST_0_i_7_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    m_axi_arvalid_INST_0_i_8
       (.I0(s_axi_arlen[3]),
        .I1(s_axi_arlen[0]),
        .I2(s_axi_arlen[2]),
        .I3(s_axi_arlen[1]),
        .O(m_axi_arvalid_INST_0_i_8_n_0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'h4)) 
    m_axi_arvalid_INST_0_i_9
       (.I0(\m_vector_i_reg[1136]_0 [0]),
        .I1(\m_vector_i_reg[1136]_0 [1]),
        .O(m_axi_arvalid_INST_0_i_9_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    \m_vector_i[1136]_i_1 
       (.I0(\state_reg[s_ready_i_n_0_] ),
        .I1(p_0_in[1]),
        .O(\m_vector_i[1136]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1026] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(\m_vector_i_reg[1136]_0 [0]),
        .Q(\m_vector_i_reg_n_0_[1026] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1027] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(\m_vector_i_reg[1136]_0 [1]),
        .Q(\m_vector_i_reg_n_0_[1027] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1029] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(\m_vector_i_reg[1136]_0 [2]),
        .Q(\m_vector_i_reg_n_0_[1029] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1030] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(\m_vector_i_reg[1136]_0 [3]),
        .Q(\m_vector_i_reg_n_0_[1030] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1031] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(\m_vector_i_reg[1136]_0 [4]),
        .Q(\m_vector_i_reg_n_0_[1031] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1032] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(\m_vector_i_reg[1136]_0 [5]),
        .Q(\m_vector_i_reg_n_0_[1032] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1033] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(\m_vector_i_reg[1136]_0 [6]),
        .Q(\m_vector_i_reg_n_0_[1033] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1034] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(\m_vector_i_reg[1136]_0 [7]),
        .Q(\m_vector_i_reg_n_0_[1034] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1035] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(\m_vector_i_reg[1136]_0 [8]),
        .Q(\m_vector_i_reg_n_0_[1035] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1036] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(\m_vector_i_reg[1136]_0 [9]),
        .Q(\m_vector_i_reg_n_0_[1036] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1037] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(\m_vector_i_reg[1136]_0 [10]),
        .Q(\m_vector_i_reg_n_0_[1037] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1038] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(\m_vector_i_reg[1136]_0 [11]),
        .Q(\m_vector_i_reg_n_0_[1038] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1039] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(\m_vector_i_reg[1136]_0 [12]),
        .Q(\m_vector_i_reg_n_0_[1039] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1040] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(\m_vector_i_reg[1136]_0 [13]),
        .Q(\m_vector_i_reg_n_0_[1040] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1061] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(s_axi_araddr[0]),
        .Q(\m_vector_i_reg_n_0_[1061] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1062] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(s_axi_araddr[1]),
        .Q(\m_vector_i_reg_n_0_[1062] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1063] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(s_axi_araddr[2]),
        .Q(\m_vector_i_reg_n_0_[1063] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1064] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(s_axi_araddr[3]),
        .Q(\m_vector_i_reg_n_0_[1064] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1065] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(s_axi_araddr[4]),
        .Q(\m_vector_i_reg_n_0_[1065] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1066] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(s_axi_araddr[5]),
        .Q(\m_vector_i_reg_n_0_[1066] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1067] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(s_axi_araddr[6]),
        .Q(\m_vector_i_reg_n_0_[1067] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1068] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(s_axi_araddr[7]),
        .Q(\m_vector_i_reg_n_0_[1068] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1125] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(s_axi_arlen[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1126] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(s_axi_arlen[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1127] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(s_axi_arlen[2]),
        .Q(\m_vector_i_reg_n_0_[1127] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1128] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1_n_0 ),
        .D(s_axi_arlen[3]),
        .Q(\m_vector_i_reg_n_0_[1128] ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0004)) 
    s_axi_arready_INST_0
       (.I0(\gen_endpoint.r_cnt_reg[4] [4]),
        .I1(\state_reg[s_ready_i_n_0_] ),
        .I2(\gen_endpoint.r_state [0]),
        .I3(\gen_endpoint.r_state [1]),
        .O(s_axi_arready));
  LUT5 #(
    .INIT(32'hFEFF2F00)) 
    \state[s_ready_i]_i_1 
       (.I0(\state[storage]_i_3_n_0 ),
        .I1(p_0_in[0]),
        .I2(p_0_in[1]),
        .I3(state),
        .I4(\state_reg[s_ready_i_n_0_] ),
        .O(\state[s_ready_i]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00FF4000)) 
    \state[s_stall_d]_i_1 
       (.I0(p_0_in[1]),
        .I1(p_2_out),
        .I2(\state_reg[s_ready_i_n_0_] ),
        .I3(state),
        .I4(p_0_in[0]),
        .O(\state[s_stall_d]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00100000)) 
    \state[s_stall_d]_i_2 
       (.I0(\gen_endpoint.r_state [1]),
        .I1(\gen_endpoint.r_state [0]),
        .I2(s_axi_arvalid),
        .I3(\gen_endpoint.r_cnt_reg[4] [4]),
        .I4(\gen_endpoint.r_trigger_decerr ),
        .O(p_2_out));
  LUT6 #(
    .INIT(64'hFFFFFFFFD9D999D9)) 
    \state[s_stall_d]_i_3 
       (.I0(p_0_in[1]),
        .I1(\state_reg[s_ready_i_n_0_] ),
        .I2(sr_axi_arvalid),
        .I3(mr_axi_arready),
        .I4(\gen_endpoint.r_trigger_decerr ),
        .I5(\state[s_stall_d]_i_5_n_0 ),
        .O(state));
  LUT6 #(
    .INIT(64'hBCBCBC8C8C8CBC8C)) 
    \state[s_stall_d]_i_5 
       (.I0(r_resume),
        .I1(p_0_in[0]),
        .I2(p_0_in[1]),
        .I3(m_axi_arready),
        .I4(\state_reg[storage]_0 ),
        .I5(\gen_endpoint.err_arready ),
        .O(\state[s_stall_d]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5504003344040033)) 
    \state[storage]_i_1 
       (.I0(\state_reg[s_ready_i_n_0_] ),
        .I1(\state[storage]_i_2_n_0 ),
        .I2(\state[storage]_i_3_n_0 ),
        .I3(p_0_in[0]),
        .I4(p_0_in[1]),
        .I5(r_resume),
        .O(\state[storage]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h77777777FFF777F7)) 
    \state[storage]_i_2 
       (.I0(\state_reg[s_ready_i_n_0_] ),
        .I1(sr_axi_arvalid),
        .I2(m_axi_arready),
        .I3(\state_reg[storage]_0 ),
        .I4(\gen_endpoint.err_arready ),
        .I5(\gen_endpoint.r_trigger_decerr ),
        .O(\state[storage]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \state[storage]_i_3 
       (.I0(p_0_in[1]),
        .I1(m_axi_arready),
        .I2(\gen_endpoint.r_state [0]),
        .I3(\gen_endpoint.r_state [1]),
        .I4(\gen_endpoint.err_arready ),
        .O(\state[storage]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[s_ready_i] 
       (.C(aclk),
        .CE(1'b1),
        .D(\state[s_ready_i]_i_1_n_0 ),
        .Q(\state_reg[s_ready_i_n_0_] ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[s_stall_d] 
       (.C(aclk),
        .CE(1'b1),
        .D(\state[s_stall_d]_i_1_n_0 ),
        .Q(p_0_in[0]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[storage] 
       (.C(aclk),
        .CE(1'b1),
        .D(\state[storage]_i_1_n_0 ),
        .Q(p_0_in[1]),
        .R(areset));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_axi_reg_stall" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_axi_reg_stall__parameterized0_15
   (m_axi_awvalid,
    mr_axi_awvalid,
    \gen_endpoint.w_trigger_decerr ,
    \state_reg[s_ready_i]_0 ,
    m_valid1,
    m_vector2,
    m_axi_awsize,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awprot,
    \gen_endpoint.w_state ,
    s_axi_awaddr,
    D,
    s_axi_awlen,
    s_axi_awburst,
    \state_reg[s_stall_d]_0 ,
    aclk,
    mr_axi_awready,
    m_axi_awready,
    \state_reg[storage]_0 ,
    \gen_endpoint.err_awready ,
    w_resume,
    areset);
  output m_axi_awvalid;
  output mr_axi_awvalid;
  output \gen_endpoint.w_trigger_decerr ;
  output \state_reg[s_ready_i]_0 ;
  output m_valid1;
  output m_vector2;
  output [2:0]m_axi_awsize;
  output [11:0]m_axi_awid;
  output [7:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input [1:0]\gen_endpoint.w_state ;
  input [23:0]s_axi_awaddr;
  input [17:0]D;
  input [3:0]s_axi_awlen;
  input [0:0]s_axi_awburst;
  input \state_reg[s_stall_d]_0 ;
  input aclk;
  input mr_axi_awready;
  input m_axi_awready;
  input \state_reg[storage]_0 ;
  input \gen_endpoint.err_awready ;
  input w_resume;
  input areset;

  wire [17:0]D;
  wire aclk;
  wire areset;
  wire \gen_endpoint.err_awready ;
  wire [1:0]\gen_endpoint.w_state ;
  wire \gen_endpoint.w_trigger_decerr ;
  wire [7:0]m_axi_awaddr;
  wire [11:0]m_axi_awid;
  wire m_axi_awready;
  wire [2:0]m_axi_awsize;
  wire m_axi_awvalid;
  wire m_axi_awvalid_INST_0_i_4_n_0;
  wire m_axi_awvalid_INST_0_i_5_n_0;
  wire m_axi_awvalid_INST_0_i_6_n_0;
  wire m_axi_awvalid_INST_0_i_7_n_0;
  wire m_axi_awvalid_INST_0_i_8_n_0;
  wire m_axi_awvalid_INST_0_i_9_n_0;
  wire m_valid1;
  wire m_vector2;
  wire \m_vector_i[1136]_i_1__0_n_0 ;
  wire \m_vector_i_reg_n_0_[1026] ;
  wire \m_vector_i_reg_n_0_[1027] ;
  wire \m_vector_i_reg_n_0_[1029] ;
  wire \m_vector_i_reg_n_0_[1030] ;
  wire \m_vector_i_reg_n_0_[1031] ;
  wire \m_vector_i_reg_n_0_[1032] ;
  wire \m_vector_i_reg_n_0_[1033] ;
  wire \m_vector_i_reg_n_0_[1034] ;
  wire \m_vector_i_reg_n_0_[1035] ;
  wire \m_vector_i_reg_n_0_[1036] ;
  wire \m_vector_i_reg_n_0_[1037] ;
  wire \m_vector_i_reg_n_0_[1038] ;
  wire \m_vector_i_reg_n_0_[1039] ;
  wire \m_vector_i_reg_n_0_[1040] ;
  wire \m_vector_i_reg_n_0_[1061] ;
  wire \m_vector_i_reg_n_0_[1062] ;
  wire \m_vector_i_reg_n_0_[1063] ;
  wire \m_vector_i_reg_n_0_[1064] ;
  wire \m_vector_i_reg_n_0_[1065] ;
  wire \m_vector_i_reg_n_0_[1066] ;
  wire \m_vector_i_reg_n_0_[1067] ;
  wire \m_vector_i_reg_n_0_[1068] ;
  wire mr_axi_awready;
  wire mr_axi_awvalid;
  wire [1:0]p_0_in;
  wire [23:0]s_axi_awaddr;
  wire [0:0]s_axi_awburst;
  wire [3:0]s_axi_awlen;
  wire state;
  wire \state[s_ready_i]_i_1__0_n_0 ;
  wire \state[s_stall_d]_i_1__0_n_0 ;
  wire \state[s_stall_d]_i_4_n_0 ;
  wire \state[storage]_i_1__0_n_0 ;
  wire \state[storage]_i_2__0_n_0 ;
  wire \state[storage]_i_3__0_n_0 ;
  wire \state_reg[s_ready_i]_0 ;
  wire \state_reg[s_stall_d]_0 ;
  wire \state_reg[storage]_0 ;
  wire w_resume;

  LUT3 #(
    .INIT(8'h02)) 
    \gen_axi.gen_write.s_axi_bid_i[11]_i_3 
       (.I0(\state_reg[s_ready_i]_0 ),
        .I1(p_0_in[0]),
        .I2(p_0_in[1]),
        .O(m_valid1));
  LUT3 #(
    .INIT(8'h04)) 
    \gen_axi.gen_write.s_axi_bid_i[11]_i_4 
       (.I0(p_0_in[0]),
        .I1(p_0_in[1]),
        .I2(\state_reg[s_ready_i]_0 ),
        .O(m_vector2));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awaddr[0]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1061] ),
        .I1(s_axi_awaddr[0]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awaddr[0]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awaddr[1]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1062] ),
        .I1(s_axi_awaddr[1]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awaddr[1]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awaddr[2]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1063] ),
        .I1(s_axi_awaddr[2]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awaddr[2]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awaddr[3]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1064] ),
        .I1(s_axi_awaddr[3]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awaddr[3]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awaddr[4]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1065] ),
        .I1(s_axi_awaddr[4]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awaddr[4]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awaddr[5]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1066] ),
        .I1(s_axi_awaddr[5]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awaddr[5]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awaddr[6]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1067] ),
        .I1(s_axi_awaddr[6]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awaddr[6]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awaddr[7]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1068] ),
        .I1(s_axi_awaddr[7]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awaddr[7]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awid[0]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1029] ),
        .I1(D[3]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awid[0]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awid[10]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1039] ),
        .I1(D[13]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awid[10]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awid[11]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1040] ),
        .I1(D[14]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awid[11]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awid[1]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1030] ),
        .I1(D[4]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awid[1]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awid[2]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1031] ),
        .I1(D[5]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awid[2]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awid[3]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1032] ),
        .I1(D[6]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awid[3]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awid[4]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1033] ),
        .I1(D[7]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awid[4]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awid[5]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1034] ),
        .I1(D[8]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awid[5]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awid[6]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1035] ),
        .I1(D[9]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awid[6]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awid[7]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1036] ),
        .I1(D[10]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awid[7]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awid[8]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1037] ),
        .I1(D[11]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awid[8]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awid[9]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1038] ),
        .I1(D[12]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awid[9]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awsize[0]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1026] ),
        .I1(D[0]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awsize[0]));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \m_axi_awsize[1]_INST_0 
       (.I0(\m_vector_i_reg_n_0_[1027] ),
        .I1(D[1]),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .O(m_axi_awsize[1]));
  LUT2 #(
    .INIT(4'h2)) 
    m_axi_awvalid_INST_0
       (.I0(mr_axi_awvalid),
        .I1(\gen_endpoint.w_state [1]),
        .O(m_axi_awvalid));
  LUT5 #(
    .INIT(32'h00000F20)) 
    m_axi_awvalid_INST_0_i_1
       (.I0(\state_reg[s_stall_d]_0 ),
        .I1(\gen_endpoint.w_trigger_decerr ),
        .I2(\state_reg[s_ready_i]_0 ),
        .I3(p_0_in[1]),
        .I4(p_0_in[0]),
        .O(mr_axi_awvalid));
  LUT6 #(
    .INIT(64'hFFFEFFFEFFFFFFFE)) 
    m_axi_awvalid_INST_0_i_3
       (.I0(m_axi_awvalid_INST_0_i_4_n_0),
        .I1(m_axi_awvalid_INST_0_i_5_n_0),
        .I2(m_axi_awvalid_INST_0_i_6_n_0),
        .I3(m_axi_awvalid_INST_0_i_7_n_0),
        .I4(m_axi_awvalid_INST_0_i_8_n_0),
        .I5(m_axi_awvalid_INST_0_i_9_n_0),
        .O(\gen_endpoint.w_trigger_decerr ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    m_axi_awvalid_INST_0_i_4
       (.I0(s_axi_awaddr[17]),
        .I1(s_axi_awaddr[19]),
        .I2(s_axi_awaddr[10]),
        .I3(s_axi_awaddr[13]),
        .O(m_axi_awvalid_INST_0_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFF7)) 
    m_axi_awvalid_INST_0_i_5
       (.I0(s_axi_awburst),
        .I1(s_axi_awaddr[15]),
        .I2(s_axi_awaddr[21]),
        .I3(s_axi_awaddr[20]),
        .O(m_axi_awvalid_INST_0_i_5_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    m_axi_awvalid_INST_0_i_6
       (.I0(s_axi_awaddr[12]),
        .I1(s_axi_awaddr[8]),
        .I2(s_axi_awaddr[9]),
        .O(m_axi_awvalid_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'hFFFFFDFFFFFFFFFF)) 
    m_axi_awvalid_INST_0_i_7
       (.I0(s_axi_awaddr[16]),
        .I1(s_axi_awaddr[18]),
        .I2(s_axi_awaddr[23]),
        .I3(s_axi_awaddr[22]),
        .I4(s_axi_awaddr[11]),
        .I5(s_axi_awaddr[14]),
        .O(m_axi_awvalid_INST_0_i_7_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    m_axi_awvalid_INST_0_i_8
       (.I0(s_axi_awlen[3]),
        .I1(s_axi_awlen[0]),
        .I2(s_axi_awlen[2]),
        .I3(s_axi_awlen[1]),
        .O(m_axi_awvalid_INST_0_i_8_n_0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'h2)) 
    m_axi_awvalid_INST_0_i_9
       (.I0(D[1]),
        .I1(D[0]),
        .O(m_axi_awvalid_INST_0_i_9_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    \m_vector_i[1136]_i_1__0 
       (.I0(\state_reg[s_ready_i]_0 ),
        .I1(p_0_in[1]),
        .O(\m_vector_i[1136]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1026] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(D[0]),
        .Q(\m_vector_i_reg_n_0_[1026] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1027] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(D[1]),
        .Q(\m_vector_i_reg_n_0_[1027] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1029] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(D[3]),
        .Q(\m_vector_i_reg_n_0_[1029] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1030] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(D[4]),
        .Q(\m_vector_i_reg_n_0_[1030] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1031] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(D[5]),
        .Q(\m_vector_i_reg_n_0_[1031] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1032] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(D[6]),
        .Q(\m_vector_i_reg_n_0_[1032] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1033] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(D[7]),
        .Q(\m_vector_i_reg_n_0_[1033] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1034] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(D[8]),
        .Q(\m_vector_i_reg_n_0_[1034] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1035] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(D[9]),
        .Q(\m_vector_i_reg_n_0_[1035] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1036] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(D[10]),
        .Q(\m_vector_i_reg_n_0_[1036] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1037] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(D[11]),
        .Q(\m_vector_i_reg_n_0_[1037] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1038] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(D[12]),
        .Q(\m_vector_i_reg_n_0_[1038] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1039] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(D[13]),
        .Q(\m_vector_i_reg_n_0_[1039] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1040] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(D[14]),
        .Q(\m_vector_i_reg_n_0_[1040] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1061] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(s_axi_awaddr[0]),
        .Q(\m_vector_i_reg_n_0_[1061] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1062] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(s_axi_awaddr[1]),
        .Q(\m_vector_i_reg_n_0_[1062] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1063] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(s_axi_awaddr[2]),
        .Q(\m_vector_i_reg_n_0_[1063] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1064] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(s_axi_awaddr[3]),
        .Q(\m_vector_i_reg_n_0_[1064] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1065] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(s_axi_awaddr[4]),
        .Q(\m_vector_i_reg_n_0_[1065] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1066] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(s_axi_awaddr[5]),
        .Q(\m_vector_i_reg_n_0_[1066] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1067] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(s_axi_awaddr[6]),
        .Q(\m_vector_i_reg_n_0_[1067] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_vector_i_reg[1068] 
       (.C(aclk),
        .CE(\m_vector_i[1136]_i_1__0_n_0 ),
        .D(s_axi_awaddr[7]),
        .Q(\m_vector_i_reg_n_0_[1068] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFEFF2F00)) 
    \state[s_ready_i]_i_1__0 
       (.I0(\state[storage]_i_3__0_n_0 ),
        .I1(p_0_in[0]),
        .I2(p_0_in[1]),
        .I3(state),
        .I4(\state_reg[s_ready_i]_0 ),
        .O(\state[s_ready_i]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000FFFF08000000)) 
    \state[s_stall_d]_i_1__0 
       (.I0(\state_reg[s_stall_d]_0 ),
        .I1(\gen_endpoint.w_trigger_decerr ),
        .I2(p_0_in[1]),
        .I3(\state_reg[s_ready_i]_0 ),
        .I4(state),
        .I5(p_0_in[0]),
        .O(\state[s_stall_d]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFD9D999D9)) 
    \state[s_stall_d]_i_2__0 
       (.I0(p_0_in[1]),
        .I1(\state_reg[s_ready_i]_0 ),
        .I2(\state_reg[s_stall_d]_0 ),
        .I3(mr_axi_awready),
        .I4(\gen_endpoint.w_trigger_decerr ),
        .I5(\state[s_stall_d]_i_4_n_0 ),
        .O(state));
  LUT6 #(
    .INIT(64'hBCBCBC8C8C8CBC8C)) 
    \state[s_stall_d]_i_4 
       (.I0(w_resume),
        .I1(p_0_in[0]),
        .I2(p_0_in[1]),
        .I3(m_axi_awready),
        .I4(\state_reg[storage]_0 ),
        .I5(\gen_endpoint.err_awready ),
        .O(\state[s_stall_d]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h5504003344040033)) 
    \state[storage]_i_1__0 
       (.I0(\state_reg[s_ready_i]_0 ),
        .I1(\state[storage]_i_2__0_n_0 ),
        .I2(\state[storage]_i_3__0_n_0 ),
        .I3(p_0_in[0]),
        .I4(p_0_in[1]),
        .I5(w_resume),
        .O(\state[storage]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h77777777FFF777F7)) 
    \state[storage]_i_2__0 
       (.I0(\state_reg[s_ready_i]_0 ),
        .I1(\state_reg[s_stall_d]_0 ),
        .I2(m_axi_awready),
        .I3(\state_reg[storage]_0 ),
        .I4(\gen_endpoint.err_awready ),
        .I5(\gen_endpoint.w_trigger_decerr ),
        .O(\state[storage]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \state[storage]_i_3__0 
       (.I0(p_0_in[1]),
        .I1(m_axi_awready),
        .I2(\gen_endpoint.w_state [0]),
        .I3(\gen_endpoint.w_state [1]),
        .I4(\gen_endpoint.err_awready ),
        .O(\state[storage]_i_3__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[s_ready_i] 
       (.C(aclk),
        .CE(1'b1),
        .D(\state[s_ready_i]_i_1__0_n_0 ),
        .Q(\state_reg[s_ready_i]_0 ),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[s_stall_d] 
       (.C(aclk),
        .CE(1'b1),
        .D(\state[s_stall_d]_i_1__0_n_0 ),
        .Q(p_0_in[0]),
        .R(areset));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[storage] 
       (.C(aclk),
        .CE(1'b1),
        .D(\state[storage]_i_1__0_n_0 ),
        .Q(p_0_in[1]),
        .R(areset));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_axi_splitter" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_axi_splitter
   (\gen_endpoint.w_state_reg[0] ,
    S00_AXI_awvalid,
    S00_AXI_awvalid_0,
    \m_ready_d_reg[0]_0 ,
    areset_d_reg,
    \m_ready_d_reg[0]_1 ,
    \m_ready_d_reg[1]_0 ,
    mr_axi_awvalid,
    \gen_endpoint.w_state ,
    \gen_endpoint.w_state_reg[1] ,
    \gen_endpoint.w_state_reg[1]_0 ,
    s_axi_awvalid,
    SR,
    p_14_in,
    \gen_endpoint.w_push_done_reg ,
    \gen_endpoint.w_trigger_decerr ,
    wroute_vacancy,
    Q,
    \gen_axi.gen_write.s_axi_bid_i_reg[0] ,
    S00_AXI_awready,
    areset,
    aclk);
  output \gen_endpoint.w_state_reg[0] ;
  output S00_AXI_awvalid;
  output S00_AXI_awvalid_0;
  output \m_ready_d_reg[0]_0 ;
  output areset_d_reg;
  output \m_ready_d_reg[0]_1 ;
  output \m_ready_d_reg[1]_0 ;
  input mr_axi_awvalid;
  input [1:0]\gen_endpoint.w_state ;
  input \gen_endpoint.w_state_reg[1] ;
  input \gen_endpoint.w_state_reg[1]_0 ;
  input s_axi_awvalid;
  input [0:0]SR;
  input p_14_in;
  input \gen_endpoint.w_push_done_reg ;
  input \gen_endpoint.w_trigger_decerr ;
  input wroute_vacancy;
  input [0:0]Q;
  input [0:0]\gen_axi.gen_write.s_axi_bid_i_reg[0] ;
  input S00_AXI_awready;
  input areset;
  input aclk;

  wire [0:0]Q;
  wire S00_AXI_awready;
  wire S00_AXI_awvalid;
  wire S00_AXI_awvalid_0;
  wire [0:0]SR;
  wire aclk;
  wire areset;
  wire areset_d_reg;
  wire [0:0]\gen_axi.gen_write.s_axi_bid_i_reg[0] ;
  wire \gen_endpoint.w_push_done_reg ;
  wire [1:0]\gen_endpoint.w_state ;
  wire \gen_endpoint.w_state_reg[0] ;
  wire \gen_endpoint.w_state_reg[1] ;
  wire \gen_endpoint.w_state_reg[1]_0 ;
  wire \gen_endpoint.w_trigger_decerr ;
  wire \m_ready_d[0]_i_1_n_0 ;
  wire \m_ready_d[1]_i_1_n_0 ;
  wire \m_ready_d_reg[0]_0 ;
  wire \m_ready_d_reg[0]_1 ;
  wire \m_ready_d_reg[1]_0 ;
  wire \m_ready_d_reg_n_0_[1] ;
  wire mr_axi_awvalid;
  wire p_14_in;
  wire s_axi_awready_INST_0_i_1_n_0;
  wire s_axi_awvalid;
  wire wroute_vacancy;

  LUT4 #(
    .INIT(16'h0054)) 
    \gen_endpoint.w_push_done_i_1 
       (.I0(SR),
        .I1(p_14_in),
        .I2(\gen_endpoint.w_push_done_reg ),
        .I3(\m_ready_d_reg[0]_1 ),
        .O(areset_d_reg));
  LUT6 #(
    .INIT(64'h0FF00FF00FF05FB0)) 
    \gen_endpoint.w_state[1]_i_1 
       (.I0(S00_AXI_awvalid),
        .I1(mr_axi_awvalid),
        .I2(\gen_endpoint.w_state [0]),
        .I3(\gen_endpoint.w_state [1]),
        .I4(\gen_endpoint.w_state_reg[1] ),
        .I5(\gen_endpoint.w_state_reg[1]_0 ),
        .O(\gen_endpoint.w_state_reg[0] ));
  LUT5 #(
    .INIT(32'h00080000)) 
    \gen_endpoint.w_state[1]_i_2 
       (.I0(\gen_endpoint.w_trigger_decerr ),
        .I1(s_axi_awvalid),
        .I2(\gen_endpoint.w_state [0]),
        .I3(\gen_endpoint.w_state [1]),
        .I4(\m_ready_d_reg[0]_1 ),
        .O(S00_AXI_awvalid));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_pipelined.state[2]_i_2 
       (.I0(s_axi_awvalid),
        .I1(\m_ready_d_reg[0]_0 ),
        .O(S00_AXI_awvalid_0));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    m_axi_awvalid_INST_0_i_2
       (.I0(\m_ready_d_reg_n_0_[1] ),
        .I1(s_axi_awvalid),
        .I2(\gen_endpoint.w_state [0]),
        .I3(\gen_endpoint.w_state [1]),
        .I4(Q),
        .I5(\gen_axi.gen_write.s_axi_bid_i_reg[0] ),
        .O(\m_ready_d_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h000000EC)) 
    \m_ready_d[0]_i_1 
       (.I0(wroute_vacancy),
        .I1(\m_ready_d_reg[0]_0 ),
        .I2(s_axi_awvalid),
        .I3(\m_ready_d_reg[0]_1 ),
        .I4(areset),
        .O(\m_ready_d[0]_i_1_n_0 ));
  (* \PinAttr:I2:HOLD_DETOUR  = "81" *) 
  (* \PinAttr:I3:HOLD_DETOUR  = "264" *) 
  LUT6 #(
    .INIT(64'h000000000000000E)) 
    \m_ready_d[1]_i_1 
       (.I0(s_axi_awvalid),
        .I1(\m_ready_d_reg_n_0_[1] ),
        .I2(s_axi_awready_INST_0_i_1_n_0),
        .I3(\m_ready_d_reg[0]_0 ),
        .I4(wroute_vacancy),
        .I5(areset),
        .O(\m_ready_d[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[0]_i_1_n_0 ),
        .Q(\m_ready_d_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[1]_i_1_n_0 ),
        .Q(\m_ready_d_reg_n_0_[1] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h54)) 
    s_axi_awready_INST_0
       (.I0(s_axi_awready_INST_0_i_1_n_0),
        .I1(\m_ready_d_reg[0]_0 ),
        .I2(wroute_vacancy),
        .O(\m_ready_d_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h5555555455555555)) 
    s_axi_awready_INST_0_i_1
       (.I0(\m_ready_d_reg_n_0_[1] ),
        .I1(\gen_endpoint.w_state [0]),
        .I2(\gen_endpoint.w_state [1]),
        .I3(Q),
        .I4(\gen_axi.gen_write.s_axi_bid_i_reg[0] ),
        .I5(S00_AXI_awready),
        .O(s_axi_awready_INST_0_i_1_n_0));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_axic_reg_srl_fifo" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_axic_reg_srl_fifo
   (wroute_vacancy,
    m_axi_wuser,
    aclk,
    areset,
    \gen_pipelined.state_reg[2]_0 ,
    \gen_pipelined.state_reg[1]_0 ,
    s_axi_awvalid,
    \gen_pipelined.state_reg[2]_1 );
  output wroute_vacancy;
  output [0:0]m_axi_wuser;
  input aclk;
  input areset;
  input \gen_pipelined.state_reg[2]_0 ;
  input \gen_pipelined.state_reg[1]_0 ;
  input s_axi_awvalid;
  input \gen_pipelined.state_reg[2]_1 ;

  wire aclk;
  wire areset;
  wire \fifoaddr[0]_i_1_n_0 ;
  wire \fifoaddr[1]_i_1_n_0 ;
  wire \fifoaddr[2]_i_1_n_0 ;
  wire \fifoaddr[3]_i_1_n_0 ;
  wire \fifoaddr[3]_i_2_n_0 ;
  wire \fifoaddr[3]_i_3_n_0 ;
  wire fifoaddr_afull_i_1_n_0;
  wire fifoaddr_afull_i_2_n_0;
  wire fifoaddr_afull_i_3_n_0;
  wire [3:0]fifoaddr_reg;
  wire \gen_pipelined.mesg_reg[2]_i_1_n_0 ;
  wire \gen_pipelined.state[0]_i_1_n_0 ;
  wire \gen_pipelined.state[0]_i_2_n_0 ;
  wire \gen_pipelined.state[1]_i_1_n_0 ;
  wire \gen_pipelined.state[2]_i_1_n_0 ;
  wire \gen_pipelined.state_reg[1]_0 ;
  wire \gen_pipelined.state_reg[2]_0 ;
  wire \gen_pipelined.state_reg[2]_1 ;
  wire \gen_pipelined.state_reg_n_0_[0] ;
  wire \gen_pipelined.state_reg_n_0_[1] ;
  wire [0:0]m_axi_wuser;
  wire p_1_out;
  wire s_axi_awvalid;
  wire [4:4]sel0;
  wire wroute_vacancy;

  (* \PinAttr:I0:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \fifoaddr[0]_i_1 
       (.I0(fifoaddr_reg[0]),
        .O(\fifoaddr[0]_i_1_n_0 ));
  (* \PinAttr:I1:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \fifoaddr[1]_i_1 
       (.I0(\fifoaddr[3]_i_3_n_0 ),
        .I1(fifoaddr_reg[0]),
        .I2(fifoaddr_reg[1]),
        .O(\fifoaddr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'h78E1)) 
    \fifoaddr[2]_i_1 
       (.I0(fifoaddr_reg[0]),
        .I1(\fifoaddr[3]_i_3_n_0 ),
        .I2(fifoaddr_reg[2]),
        .I3(fifoaddr_reg[1]),
        .O(\fifoaddr[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA6AA040000000000)) 
    \fifoaddr[3]_i_1 
       (.I0(\gen_pipelined.state_reg[2]_0 ),
        .I1(wroute_vacancy),
        .I2(\gen_pipelined.state_reg[1]_0 ),
        .I3(s_axi_awvalid),
        .I4(\gen_pipelined.state_reg_n_0_[0] ),
        .I5(\gen_pipelined.state_reg_n_0_[1] ),
        .O(\fifoaddr[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT5 #(
    .INIT(32'h6AAAAAA9)) 
    \fifoaddr[3]_i_2 
       (.I0(fifoaddr_reg[3]),
        .I1(fifoaddr_reg[1]),
        .I2(fifoaddr_reg[0]),
        .I3(\fifoaddr[3]_i_3_n_0 ),
        .I4(fifoaddr_reg[2]),
        .O(\fifoaddr[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \fifoaddr[3]_i_3 
       (.I0(\gen_pipelined.state_reg[1]_0 ),
        .I1(s_axi_awvalid),
        .I2(wroute_vacancy),
        .I3(\gen_pipelined.state_reg_n_0_[1] ),
        .I4(\gen_pipelined.state_reg[2]_0 ),
        .O(\fifoaddr[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFCFFFFF02000200)) 
    fifoaddr_afull_i_1
       (.I0(\fifoaddr[3]_i_3_n_0 ),
        .I1(fifoaddr_afull_i_2_n_0),
        .I2(fifoaddr_reg[1]),
        .I3(fifoaddr_reg[0]),
        .I4(fifoaddr_afull_i_3_n_0),
        .I5(sel0),
        .O(fifoaddr_afull_i_1_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    fifoaddr_afull_i_2
       (.I0(fifoaddr_reg[2]),
        .I1(fifoaddr_reg[3]),
        .O(fifoaddr_afull_i_2_n_0));
  LUT6 #(
    .INIT(64'h8808888800000000)) 
    fifoaddr_afull_i_3
       (.I0(\gen_pipelined.state_reg_n_0_[1] ),
        .I1(\gen_pipelined.state_reg_n_0_[0] ),
        .I2(s_axi_awvalid),
        .I3(\gen_pipelined.state_reg[1]_0 ),
        .I4(wroute_vacancy),
        .I5(\gen_pipelined.state_reg[2]_0 ),
        .O(fifoaddr_afull_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    fifoaddr_afull_reg
       (.C(aclk),
        .CE(1'b1),
        .D(fifoaddr_afull_i_1_n_0),
        .Q(sel0),
        .R(areset));
  FDSE #(
    .INIT(1'b1)) 
    \fifoaddr_reg[0] 
       (.C(aclk),
        .CE(\fifoaddr[3]_i_1_n_0 ),
        .D(\fifoaddr[0]_i_1_n_0 ),
        .Q(fifoaddr_reg[0]),
        .S(areset));
  FDSE #(
    .INIT(1'b1)) 
    \fifoaddr_reg[1] 
       (.C(aclk),
        .CE(\fifoaddr[3]_i_1_n_0 ),
        .D(\fifoaddr[1]_i_1_n_0 ),
        .Q(fifoaddr_reg[1]),
        .S(areset));
  FDSE #(
    .INIT(1'b1)) 
    \fifoaddr_reg[2] 
       (.C(aclk),
        .CE(\fifoaddr[3]_i_1_n_0 ),
        .D(\fifoaddr[2]_i_1_n_0 ),
        .Q(fifoaddr_reg[2]),
        .S(areset));
  FDSE #(
    .INIT(1'b1)) 
    \fifoaddr_reg[3] 
       (.C(aclk),
        .CE(\fifoaddr[3]_i_1_n_0 ),
        .D(\fifoaddr[3]_i_2_n_0 ),
        .Q(fifoaddr_reg[3]),
        .S(areset));
  LUT6 #(
    .INIT(64'hAFFFFFFFAFFF0F3F)) 
    \gen_pipelined.mesg_reg[2]_i_1 
       (.I0(p_1_out),
        .I1(wroute_vacancy),
        .I2(\gen_pipelined.state_reg_n_0_[1] ),
        .I3(\gen_pipelined.state_reg_n_0_[0] ),
        .I4(\gen_pipelined.state_reg[2]_0 ),
        .I5(m_axi_wuser),
        .O(\gen_pipelined.mesg_reg[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pipelined.mesg_reg_reg[2] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_pipelined.mesg_reg[2]_i_1_n_0 ),
        .Q(m_axi_wuser),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFBFB300000000000)) 
    \gen_pipelined.state[0]_i_1 
       (.I0(\gen_pipelined.state[0]_i_2_n_0 ),
        .I1(\gen_pipelined.state_reg[2]_0 ),
        .I2(\gen_pipelined.state_reg[2]_1 ),
        .I3(wroute_vacancy),
        .I4(\gen_pipelined.state_reg_n_0_[0] ),
        .I5(\gen_pipelined.state_reg_n_0_[1] ),
        .O(\gen_pipelined.state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFFF)) 
    \gen_pipelined.state[0]_i_2 
       (.I0(fifoaddr_reg[0]),
        .I1(fifoaddr_reg[1]),
        .I2(wroute_vacancy),
        .I3(\gen_pipelined.state_reg_n_0_[0] ),
        .I4(fifoaddr_reg[2]),
        .I5(fifoaddr_reg[3]),
        .O(\gen_pipelined.state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF750000003000)) 
    \gen_pipelined.state[1]_i_1 
       (.I0(\gen_pipelined.state_reg[2]_0 ),
        .I1(\gen_pipelined.state_reg[1]_0 ),
        .I2(s_axi_awvalid),
        .I3(wroute_vacancy),
        .I4(\gen_pipelined.state_reg_n_0_[0] ),
        .I5(\gen_pipelined.state_reg_n_0_[1] ),
        .O(\gen_pipelined.state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDFCCFFFFFFFFFFFF)) 
    \gen_pipelined.state[2]_i_1 
       (.I0(sel0),
        .I1(\gen_pipelined.state_reg[2]_0 ),
        .I2(\gen_pipelined.state_reg[2]_1 ),
        .I3(wroute_vacancy),
        .I4(\gen_pipelined.state_reg_n_0_[0] ),
        .I5(\gen_pipelined.state_reg_n_0_[1] ),
        .O(\gen_pipelined.state[2]_i_1_n_0 ));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_pipelined.state_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_pipelined.state[0]_i_1_n_0 ),
        .Q(\gen_pipelined.state_reg_n_0_[0] ),
        .R(areset));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_pipelined.state_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_pipelined.state[1]_i_1_n_0 ),
        .Q(\gen_pipelined.state_reg_n_0_[1] ),
        .R(areset));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_pipelined.state_reg[2] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_pipelined.state[2]_i_1_n_0 ),
        .Q(wroute_vacancy),
        .R(areset));
  design_1_axi_smc_0_sc_util_v1_0_4_srl_rtl \gen_srls[2].srl_nx1 
       (.Q(fifoaddr_reg),
        .aclk(aclk),
        .p_1_out(p_1_out),
        .s_axi_awvalid(s_axi_awvalid),
        .\shift_reg_reg[0]_srl16_0 (\gen_pipelined.state_reg_n_0_[1] ),
        .\shift_reg_reg[0]_srl16_1 (wroute_vacancy),
        .\shift_reg_reg[0]_srl16_2 (\gen_pipelined.state_reg_n_0_[0] ),
        .\shift_reg_reg[0]_srl16_3 (\gen_pipelined.state_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_counter" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0
   (is_zero_r_reg_0,
    is_zero_r_reg_1,
    s_sc_aclk,
    \gen_normal_area.fifo_node_payld_full_i ,
    s_sc_send,
    arb_stall_late,
    areset_r,
    E,
    empty_r,
    Q,
    m_sc_recv,
    m_sc_areset_r);
  output is_zero_r_reg_0;
  output is_zero_r_reg_1;
  input s_sc_aclk;
  input \gen_normal_area.fifo_node_payld_full_i ;
  input [0:0]s_sc_send;
  input arb_stall_late;
  input areset_r;
  input [0:0]E;
  input empty_r;
  input [0:0]Q;
  input [0:0]m_sc_recv;
  input m_sc_areset_r;

  wire [0:0]E;
  wire [0:0]Q;
  wire arb_stall_late;
  wire areset_r;
  wire cnt_is_zero;
  wire \count_r[0]_i_1_n_0 ;
  wire \count_r_reg_n_0_[0] ;
  wire empty_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire is_zero_r_i_1_n_0;
  wire is_zero_r_i_2_n_0;
  wire is_zero_r_reg_0;
  wire is_zero_r_reg_1;
  wire m_sc_areset_r;
  wire [0:0]m_sc_recv;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  LUT6 #(
    .INIT(64'h0000000069666666)) 
    \count_r[0]_i_1 
       (.I0(\count_r_reg_n_0_[0] ),
        .I1(E),
        .I2(empty_r),
        .I3(Q),
        .I4(m_sc_recv),
        .I5(areset_r),
        .O(\count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_r_reg[0] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\count_r[0]_i_1_n_0 ),
        .Q(\count_r_reg_n_0_[0] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFF4F404040)) 
    \gen_single_rank.empty_r_i_1 
       (.I0(E),
        .I1(cnt_is_zero),
        .I2(empty_r),
        .I3(Q),
        .I4(m_sc_recv),
        .I5(m_sc_areset_r),
        .O(is_zero_r_reg_1));
  LUT6 #(
    .INIT(64'hFFFFFFFF1010FF10)) 
    \gen_single_rank.full_r_i_1 
       (.I0(is_zero_r_i_2_n_0),
        .I1(cnt_is_zero),
        .I2(\gen_normal_area.fifo_node_payld_full_i ),
        .I3(s_sc_send),
        .I4(arb_stall_late),
        .I5(areset_r),
        .O(is_zero_r_reg_0));
  (* \PinAttr:I4:HOLD_DETOUR  = "155" *) 
  LUT6 #(
    .INIT(64'hFFFFFFFFFBAE08A2)) 
    is_zero_r_i_1
       (.I0(cnt_is_zero),
        .I1(s_sc_send),
        .I2(arb_stall_late),
        .I3(is_zero_r_i_2_n_0),
        .I4(\count_r_reg_n_0_[0] ),
        .I5(areset_r),
        .O(is_zero_r_i_1_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    is_zero_r_i_2
       (.I0(empty_r),
        .I1(Q),
        .I2(m_sc_recv),
        .O(is_zero_r_i_2_n_0));
  FDRE #(
    .INIT(1'b1)) 
    is_zero_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(is_zero_r_i_1_n_0),
        .Q(cnt_is_zero),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_counter" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_1
   (\gen_single_rank.empty_r_reg ,
    \grant_i_reg[1] ,
    s_sc_aclk,
    empty_r,
    m_sc_recv,
    \gen_normal_area.fifo_node_payld_full_i ,
    E,
    areset_r,
    \gen_single_rank.empty_r_reg_0 ,
    s_sc_send,
    m_sc_areset_r);
  output \gen_single_rank.empty_r_reg ;
  output \grant_i_reg[1] ;
  input s_sc_aclk;
  input empty_r;
  input [0:0]m_sc_recv;
  input \gen_normal_area.fifo_node_payld_full_i ;
  input [0:0]E;
  input areset_r;
  input \gen_single_rank.empty_r_reg_0 ;
  input [0:0]s_sc_send;
  input m_sc_areset_r;

  wire [0:0]E;
  wire areset_r;
  wire cnt_is_zero;
  wire \count_r[0]_i_1_n_0 ;
  wire \count_r_reg_n_0_[0] ;
  wire empty_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire \gen_single_rank.empty_r_reg ;
  wire \gen_single_rank.empty_r_reg_0 ;
  wire \grant_i_reg[1] ;
  wire is_zero_r_i_1__0_n_0;
  wire m_sc_areset_r;
  wire [0:0]m_sc_recv;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  LUT6 #(
    .INIT(64'h000000006A6A956A)) 
    \count_r[0]_i_1 
       (.I0(\count_r_reg_n_0_[0] ),
        .I1(s_sc_send),
        .I2(\gen_single_rank.empty_r_reg_0 ),
        .I3(m_sc_recv),
        .I4(empty_r),
        .I5(areset_r),
        .O(\count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_r_reg[0] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\count_r[0]_i_1_n_0 ),
        .Q(\count_r_reg_n_0_[0] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFF7070FF00)) 
    \gen_single_rank.empty_r_i_1 
       (.I0(\gen_single_rank.empty_r_reg_0 ),
        .I1(s_sc_send),
        .I2(cnt_is_zero),
        .I3(m_sc_recv),
        .I4(empty_r),
        .I5(m_sc_areset_r),
        .O(\grant_i_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0B00)) 
    \gen_single_rank.full_r_i_1 
       (.I0(empty_r),
        .I1(m_sc_recv),
        .I2(cnt_is_zero),
        .I3(\gen_normal_area.fifo_node_payld_full_i ),
        .I4(E),
        .I5(areset_r),
        .O(\gen_single_rank.empty_r_reg ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEEBE2282)) 
    is_zero_r_i_1__0
       (.I0(cnt_is_zero),
        .I1(E),
        .I2(m_sc_recv),
        .I3(empty_r),
        .I4(\count_r_reg_n_0_[0] ),
        .I5(areset_r),
        .O(is_zero_r_i_1__0_n_0));
  FDRE #(
    .INIT(1'b1)) 
    is_zero_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(is_zero_r_i_1__0_n_0),
        .Q(cnt_is_zero),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_counter" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_13
   (is_zero_r_reg_0,
    is_zero_r_reg_1,
    s_sc_aclk,
    \gen_normal_area.fifo_node_payld_full_i ,
    s_sc_send,
    arb_stall_late,
    areset_r,
    E,
    empty_r,
    Q,
    m_sc_recv,
    m_sc_areset_r);
  output is_zero_r_reg_0;
  output is_zero_r_reg_1;
  input s_sc_aclk;
  input \gen_normal_area.fifo_node_payld_full_i ;
  input [0:0]s_sc_send;
  input arb_stall_late;
  input areset_r;
  input [0:0]E;
  input empty_r;
  input [0:0]Q;
  input [0:0]m_sc_recv;
  input m_sc_areset_r;

  wire [0:0]E;
  wire [0:0]Q;
  wire arb_stall_late;
  wire areset_r;
  wire cnt_is_zero;
  wire \count_r[0]_i_1_n_0 ;
  wire \count_r_reg_n_0_[0] ;
  wire empty_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire is_zero_r_i_1_n_0;
  wire is_zero_r_i_2_n_0;
  wire is_zero_r_reg_0;
  wire is_zero_r_reg_1;
  wire m_sc_areset_r;
  wire [0:0]m_sc_recv;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  LUT6 #(
    .INIT(64'h0000000069666666)) 
    \count_r[0]_i_1 
       (.I0(\count_r_reg_n_0_[0] ),
        .I1(E),
        .I2(empty_r),
        .I3(Q),
        .I4(m_sc_recv),
        .I5(areset_r),
        .O(\count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_r_reg[0] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\count_r[0]_i_1_n_0 ),
        .Q(\count_r_reg_n_0_[0] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFF4F404040)) 
    \gen_single_rank.empty_r_i_1 
       (.I0(E),
        .I1(cnt_is_zero),
        .I2(empty_r),
        .I3(Q),
        .I4(m_sc_recv),
        .I5(m_sc_areset_r),
        .O(is_zero_r_reg_1));
  LUT6 #(
    .INIT(64'hFFFFFFFF1010FF10)) 
    \gen_single_rank.full_r_i_1 
       (.I0(is_zero_r_i_2_n_0),
        .I1(cnt_is_zero),
        .I2(\gen_normal_area.fifo_node_payld_full_i ),
        .I3(s_sc_send),
        .I4(arb_stall_late),
        .I5(areset_r),
        .O(is_zero_r_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBAE08A2)) 
    is_zero_r_i_1
       (.I0(cnt_is_zero),
        .I1(s_sc_send),
        .I2(arb_stall_late),
        .I3(is_zero_r_i_2_n_0),
        .I4(\count_r_reg_n_0_[0] ),
        .I5(areset_r),
        .O(is_zero_r_i_1_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    is_zero_r_i_2
       (.I0(empty_r),
        .I1(Q),
        .I2(m_sc_recv),
        .O(is_zero_r_i_2_n_0));
  FDRE #(
    .INIT(1'b1)) 
    is_zero_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(is_zero_r_i_1_n_0),
        .Q(cnt_is_zero),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_counter" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_5
   (\gen_single_rank.empty_r_reg ,
    \grant_i_reg[1] ,
    s_sc_aclk,
    empty_r,
    m_sc_recv,
    \gen_normal_area.fifo_node_payld_full_i ,
    s_sc_handshake,
    areset_r,
    \gen_single_rank.empty_r_reg_0 ,
    s_sc_send,
    m_sc_areset_r);
  output \gen_single_rank.empty_r_reg ;
  output \grant_i_reg[1] ;
  input s_sc_aclk;
  input empty_r;
  input [0:0]m_sc_recv;
  input \gen_normal_area.fifo_node_payld_full_i ;
  input [0:0]s_sc_handshake;
  input areset_r;
  input \gen_single_rank.empty_r_reg_0 ;
  input [0:0]s_sc_send;
  input m_sc_areset_r;

  wire areset_r;
  wire cnt_is_zero;
  wire \count_r[0]_i_1_n_0 ;
  wire \count_r_reg_n_0_[0] ;
  wire empty_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire \gen_single_rank.empty_r_reg ;
  wire \gen_single_rank.empty_r_reg_0 ;
  wire \grant_i_reg[1] ;
  wire is_zero_r_i_1__0_n_0;
  wire m_sc_areset_r;
  wire [0:0]m_sc_recv;
  wire s_sc_aclk;
  wire [0:0]s_sc_handshake;
  wire [0:0]s_sc_send;

  LUT6 #(
    .INIT(64'h000000006A6A956A)) 
    \count_r[0]_i_1 
       (.I0(\count_r_reg_n_0_[0] ),
        .I1(s_sc_send),
        .I2(\gen_single_rank.empty_r_reg_0 ),
        .I3(m_sc_recv),
        .I4(empty_r),
        .I5(areset_r),
        .O(\count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_r_reg[0] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\count_r[0]_i_1_n_0 ),
        .Q(\count_r_reg_n_0_[0] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFF7070FF00)) 
    \gen_single_rank.empty_r_i_1 
       (.I0(\gen_single_rank.empty_r_reg_0 ),
        .I1(s_sc_send),
        .I2(cnt_is_zero),
        .I3(m_sc_recv),
        .I4(empty_r),
        .I5(m_sc_areset_r),
        .O(\grant_i_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0B00)) 
    \gen_single_rank.full_r_i_1 
       (.I0(empty_r),
        .I1(m_sc_recv),
        .I2(cnt_is_zero),
        .I3(\gen_normal_area.fifo_node_payld_full_i ),
        .I4(s_sc_handshake),
        .I5(areset_r),
        .O(\gen_single_rank.empty_r_reg ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEEBE2282)) 
    is_zero_r_i_1__0
       (.I0(cnt_is_zero),
        .I1(s_sc_handshake),
        .I2(m_sc_recv),
        .I3(empty_r),
        .I4(\count_r_reg_n_0_[0] ),
        .I5(areset_r),
        .O(is_zero_r_i_1__0_n_0));
  FDRE #(
    .INIT(1'b1)) 
    is_zero_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(is_zero_r_i_1__0_n_0),
        .Q(cnt_is_zero),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_counter" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_8
   (\gen_single_rank.empty_r_reg ,
    \gen_pipe[1].pipe_reg[1][0] ,
    s_sc_aclk,
    empty_r,
    m_sc_recv,
    \gen_normal_area.fifo_node_payld_full_i ,
    E,
    areset_r,
    arb_stall_late,
    s_sc_send,
    m_sc_areset_r);
  output \gen_single_rank.empty_r_reg ;
  output \gen_pipe[1].pipe_reg[1][0] ;
  input s_sc_aclk;
  input empty_r;
  input [0:0]m_sc_recv;
  input \gen_normal_area.fifo_node_payld_full_i ;
  input [0:0]E;
  input areset_r;
  input arb_stall_late;
  input [0:0]s_sc_send;
  input m_sc_areset_r;

  wire [0:0]E;
  wire arb_stall_late;
  wire areset_r;
  wire cnt_is_zero;
  wire \count_r[0]_i_1_n_0 ;
  wire \count_r_reg_n_0_[0] ;
  wire empty_r;
  wire \gen_normal_area.fifo_node_payld_full_i ;
  wire \gen_pipe[1].pipe_reg[1][0] ;
  wire \gen_single_rank.empty_r_reg ;
  wire is_zero_r_i_1_n_0;
  wire m_sc_areset_r;
  wire [0:0]m_sc_recv;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  LUT6 #(
    .INIT(64'h00000000A6A659A6)) 
    \count_r[0]_i_1 
       (.I0(\count_r_reg_n_0_[0] ),
        .I1(s_sc_send),
        .I2(arb_stall_late),
        .I3(m_sc_recv),
        .I4(empty_r),
        .I5(areset_r),
        .O(\count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_r_reg[0] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\count_r[0]_i_1_n_0 ),
        .Q(\count_r_reg_n_0_[0] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFB0B0FF00)) 
    \gen_single_rank.empty_r_i_1 
       (.I0(arb_stall_late),
        .I1(s_sc_send),
        .I2(cnt_is_zero),
        .I3(m_sc_recv),
        .I4(empty_r),
        .I5(m_sc_areset_r),
        .O(\gen_pipe[1].pipe_reg[1][0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0B00)) 
    \gen_single_rank.full_r_i_1 
       (.I0(empty_r),
        .I1(m_sc_recv),
        .I2(cnt_is_zero),
        .I3(\gen_normal_area.fifo_node_payld_full_i ),
        .I4(E),
        .I5(areset_r),
        .O(\gen_single_rank.empty_r_reg ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEEBE2282)) 
    is_zero_r_i_1
       (.I0(cnt_is_zero),
        .I1(E),
        .I2(m_sc_recv),
        .I3(empty_r),
        .I4(\count_r_reg_n_0_[0] ),
        .I5(areset_r),
        .O(is_zero_r_i_1_n_0));
  FDRE #(
    .INIT(1'b1)) 
    is_zero_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(is_zero_r_i_1_n_0),
        .Q(cnt_is_zero),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_counter" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized1
   (is_zero_r_reg_0,
    areset_r,
    s_sc_aclk,
    is_zero_r_reg_1,
    s_sc_send,
    s_sc_req);
  output is_zero_r_reg_0;
  input areset_r;
  input s_sc_aclk;
  input is_zero_r_reg_1;
  input [0:0]s_sc_send;
  input [0:0]s_sc_req;

  wire areset_r;
  wire \count_r[0]_i_1_n_0 ;
  wire \count_r[1]_i_1_n_0 ;
  wire \count_r_reg_n_0_[0] ;
  wire \count_r_reg_n_0_[1] ;
  wire is_zero_r_i_1_n_0;
  wire is_zero_r_reg_0;
  wire is_zero_r_reg_1;
  wire s_sc_aclk;
  wire [0:0]s_sc_req;
  wire [0:0]s_sc_send;

  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT4 #(
    .INIT(16'h8778)) 
    \count_r[0]_i_1 
       (.I0(is_zero_r_reg_1),
        .I1(s_sc_send),
        .I2(s_sc_req),
        .I3(\count_r_reg_n_0_[0] ),
        .O(\count_r[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT5 #(
    .INIT(32'hE7771888)) 
    \count_r[1]_i_1 
       (.I0(\count_r_reg_n_0_[0] ),
        .I1(s_sc_req),
        .I2(s_sc_send),
        .I3(is_zero_r_reg_1),
        .I4(\count_r_reg_n_0_[1] ),
        .O(\count_r[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_r_reg[0] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\count_r[0]_i_1_n_0 ),
        .Q(\count_r_reg_n_0_[0] ),
        .R(areset_r));
  FDRE #(
    .INIT(1'b0)) 
    \count_r_reg[1] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\count_r[1]_i_1_n_0 ),
        .Q(\count_r_reg_n_0_[1] ),
        .R(areset_r));
  LUT6 #(
    .INIT(64'hF8882FFF08882000)) 
    is_zero_r_i_1
       (.I0(\count_r_reg_n_0_[0] ),
        .I1(\count_r_reg_n_0_[1] ),
        .I2(is_zero_r_reg_1),
        .I3(s_sc_send),
        .I4(s_sc_req),
        .I5(is_zero_r_reg_0),
        .O(is_zero_r_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    is_zero_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(is_zero_r_i_1_n_0),
        .Q(is_zero_r_reg_0),
        .S(areset_r));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_counter" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized1_3
   (is_zero_r_reg_0,
    areset_r,
    s_sc_aclk,
    is_zero_r_reg_1,
    s_sc_send,
    s_sc_req);
  output is_zero_r_reg_0;
  input areset_r;
  input s_sc_aclk;
  input is_zero_r_reg_1;
  input [0:0]s_sc_send;
  input [0:0]s_sc_req;

  wire areset_r;
  wire \count_r[0]_i_1_n_0 ;
  wire \count_r[1]_i_1_n_0 ;
  wire \count_r_reg_n_0_[0] ;
  wire \count_r_reg_n_0_[1] ;
  wire is_zero_r_i_1_n_0;
  wire is_zero_r_reg_0;
  wire is_zero_r_reg_1;
  wire s_sc_aclk;
  wire [0:0]s_sc_req;
  wire [0:0]s_sc_send;

  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT4 #(
    .INIT(16'h8778)) 
    \count_r[0]_i_1 
       (.I0(is_zero_r_reg_1),
        .I1(s_sc_send),
        .I2(s_sc_req),
        .I3(\count_r_reg_n_0_[0] ),
        .O(\count_r[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'hE7771888)) 
    \count_r[1]_i_1 
       (.I0(\count_r_reg_n_0_[0] ),
        .I1(s_sc_req),
        .I2(s_sc_send),
        .I3(is_zero_r_reg_1),
        .I4(\count_r_reg_n_0_[1] ),
        .O(\count_r[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_r_reg[0] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\count_r[0]_i_1_n_0 ),
        .Q(\count_r_reg_n_0_[0] ),
        .R(areset_r));
  FDRE #(
    .INIT(1'b0)) 
    \count_r_reg[1] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(\count_r[1]_i_1_n_0 ),
        .Q(\count_r_reg_n_0_[1] ),
        .R(areset_r));
  LUT6 #(
    .INIT(64'hF8882FFF08882000)) 
    is_zero_r_i_1
       (.I0(\count_r_reg_n_0_[0] ),
        .I1(\count_r_reg_n_0_[1] ),
        .I2(is_zero_r_reg_1),
        .I3(s_sc_send),
        .I4(s_sc_req),
        .I5(is_zero_r_reg_0),
        .O(is_zero_r_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    is_zero_r_reg
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(is_zero_r_i_1_n_0),
        .Q(is_zero_r_reg_0),
        .S(areset_r));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_mux" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_mux__parameterized3
   (m_sc_payld,
    m_sc_recv,
    s_sc_payld);
  output [33:0]m_sc_payld;
  input [0:0]m_sc_recv;
  input [33:0]s_sc_payld;

  wire [33:0]m_sc_payld;
  wire [0:0]m_sc_recv;
  wire [33:0]s_sc_payld;

  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_sc_payld[21]_INST_0 
       (.I0(m_sc_recv),
        .I1(s_sc_payld[2]),
        .O(m_sc_payld[2]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_sc_payld[22]_INST_0 
       (.I0(m_sc_recv),
        .I1(s_sc_payld[3]),
        .O(m_sc_payld[3]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_sc_payld[23]_INST_0 
       (.I0(m_sc_recv),
        .I1(s_sc_payld[4]),
        .O(m_sc_payld[4]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_sc_payld[24]_INST_0 
       (.I0(m_sc_recv),
        .I1(s_sc_payld[5]),
        .O(m_sc_payld[5]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_sc_payld[25]_INST_0 
       (.I0(m_sc_recv),
        .I1(s_sc_payld[6]),
        .O(m_sc_payld[6]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_sc_payld[26]_INST_0 
       (.I0(m_sc_recv),
        .I1(s_sc_payld[7]),
        .O(m_sc_payld[7]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_sc_payld[27]_INST_0 
       (.I0(m_sc_recv),
        .I1(s_sc_payld[8]),
        .O(m_sc_payld[8]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_sc_payld[28]_INST_0 
       (.I0(m_sc_recv),
        .I1(s_sc_payld[9]),
        .O(m_sc_payld[9]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_sc_payld[29]_INST_0 
       (.I0(m_sc_recv),
        .I1(s_sc_payld[10]),
        .O(m_sc_payld[10]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_sc_payld[30]_INST_0 
       (.I0(m_sc_recv),
        .I1(s_sc_payld[11]),
        .O(m_sc_payld[11]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_sc_payld[31]_INST_0 
       (.I0(m_sc_recv),
        .I1(s_sc_payld[12]),
        .O(m_sc_payld[12]));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_pipeline" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7
   (arb_stall_late,
    s_sc_recv,
    E,
    arb_stall,
    s_sc_aclk,
    s_sc_send);
  output arb_stall_late;
  output [0:0]s_sc_recv;
  output [0:0]E;
  input arb_stall;
  input s_sc_aclk;
  input [0:0]s_sc_send;

  wire [0:0]E;
  wire arb_stall;
  wire arb_stall_late;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  assign s_sc_recv[0] = arb_stall_late;
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_pipe[1].pipe_reg[1][0] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(arb_stall),
        .Q(arb_stall_late),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gen_single_rank.data[54]_i_1 
       (.I0(s_sc_send),
        .I1(arb_stall_late),
        .O(E));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_pipeline" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7_6
   (arb_stall_late,
    s_sc_recv,
    E,
    arb_stall,
    s_sc_aclk,
    s_sc_send);
  output arb_stall_late;
  output [0:0]s_sc_recv;
  output [0:0]E;
  input arb_stall;
  input s_sc_aclk;
  input [0:0]s_sc_send;

  wire [0:0]E;
  wire arb_stall;
  wire arb_stall_late;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  assign s_sc_recv[0] = arb_stall_late;
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_pipe[1].pipe_reg[1][0] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(arb_stall),
        .Q(arb_stall_late),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gen_single_rank.data[132]_i_1 
       (.I0(s_sc_send),
        .I1(arb_stall_late),
        .O(E));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_pipeline" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7_9
   (arb_stall_late,
    s_sc_recv,
    E,
    arb_stall,
    s_sc_aclk,
    s_sc_send);
  output arb_stall_late;
  output [0:0]s_sc_recv;
  output [0:0]E;
  input arb_stall;
  input s_sc_aclk;
  input [0:0]s_sc_send;

  wire [0:0]E;
  wire arb_stall;
  wire arb_stall_late;
  wire s_sc_aclk;
  wire [0:0]s_sc_send;

  assign s_sc_recv[0] = arb_stall_late;
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_pipe[1].pipe_reg[1][0] 
       (.C(s_sc_aclk),
        .CE(1'b1),
        .D(arb_stall),
        .Q(arb_stall_late),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gen_single_rank.data[132]_i_1 
       (.I0(s_sc_send),
        .I1(arb_stall_late),
        .O(E));
endmodule

(* ORIG_REF_NAME = "sc_util_v1_0_4_srl_rtl" *) 
module design_1_axi_smc_0_sc_util_v1_0_4_srl_rtl
   (p_1_out,
    Q,
    aclk,
    \shift_reg_reg[0]_srl16_0 ,
    \shift_reg_reg[0]_srl16_1 ,
    \shift_reg_reg[0]_srl16_2 ,
    \shift_reg_reg[0]_srl16_3 ,
    s_axi_awvalid);
  output p_1_out;
  input [3:0]Q;
  input aclk;
  input \shift_reg_reg[0]_srl16_0 ;
  input \shift_reg_reg[0]_srl16_1 ;
  input \shift_reg_reg[0]_srl16_2 ;
  input \shift_reg_reg[0]_srl16_3 ;
  input s_axi_awvalid;

  wire [3:0]Q;
  wire aclk;
  wire p_1_out;
  wire s_axi_awvalid;
  wire shift;
  wire \shift_reg_reg[0]_srl16_0 ;
  wire \shift_reg_reg[0]_srl16_1 ;
  wire \shift_reg_reg[0]_srl16_2 ;
  wire \shift_reg_reg[0]_srl16_3 ;

  (* srl_bus_name = "inst/\s00_entry_pipeline/s00_mmu/inst /\gen_wroute_fifo.wroute_fifo/gen_srls[2].srl_nx1/shift_reg_reg " *) 
  (* srl_name = "inst/\s00_entry_pipeline/s00_mmu/inst /\gen_wroute_fifo.wroute_fifo/gen_srls[2].srl_nx1/shift_reg_reg[0]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \shift_reg_reg[0]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(shift),
        .CLK(aclk),
        .D(1'b1),
        .Q(p_1_out));
  LUT5 #(
    .INIT(32'h08880808)) 
    \shift_reg_reg[0]_srl16_i_1 
       (.I0(\shift_reg_reg[0]_srl16_0 ),
        .I1(\shift_reg_reg[0]_srl16_1 ),
        .I2(\shift_reg_reg[0]_srl16_2 ),
        .I3(\shift_reg_reg[0]_srl16_3 ),
        .I4(s_axi_awvalid),
        .O(shift));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
