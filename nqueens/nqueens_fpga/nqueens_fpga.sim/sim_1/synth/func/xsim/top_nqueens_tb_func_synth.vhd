-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2019.2 (win64) Build 2708876 Wed Nov  6 21:40:23 MST 2019
-- Date        : Tue Oct  5 11:58:23 2021
-- Host        : hp6g4-mlab-2 running 64-bit major release  (build 9200)
-- Command     : write_vhdl -mode funcsim -nolib -force -file
--               C:/Users/mlabadm/Desktop/Github/FPGA/nqueens/nqueens_fpga/nqueens_fpga.sim/sim_1/synth/func/xsim/top_nqueens_tb_func_synth.vhd
-- Design      : design_1_wrapper
-- Purpose     : This VHDL netlist is a functional simulation representation of the design and should not be modified or
--               synthesized. This netlist cannot be used for SDF annotated simulation.
-- Device      : xc7z020clg484-1
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_cdc_sync is
  port (
    scndry_out : out STD_LOGIC;
    aresetn : in STD_LOGIC;
    aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_cdc_sync : entity is "cdc_sync";
end design_1_axi_smc_0_cdc_sync;

architecture STRUCTURE of design_1_axi_smc_0_cdc_sync is
  signal asr_d1 : STD_LOGIC;
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => asr_d1,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => aresetn,
      O => asr_d1
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => scndry_out,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_upcnt_n is
  port (
    Q : out STD_LOGIC_VECTOR ( 5 downto 0 );
    seq_clr : in STD_LOGIC;
    seq_cnt_en : in STD_LOGIC;
    aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_upcnt_n : entity is "upcnt_n";
end design_1_axi_smc_0_upcnt_n;

architecture STRUCTURE of design_1_axi_smc_0_upcnt_n is
  signal \^q\ : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal clear : STD_LOGIC;
  signal q_int0 : STD_LOGIC_VECTOR ( 5 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \q_int[1]_i_1\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of \q_int[2]_i_1\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of \q_int[3]_i_1\ : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \q_int[4]_i_1\ : label is "soft_lutpair0";
begin
  Q(5 downto 0) <= \^q\(5 downto 0);
\q_int[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(0),
      O => q_int0(0)
    );
\q_int[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      O => q_int0(1)
    );
\q_int[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"78"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      I2 => \^q\(2),
      O => q_int0(2)
    );
\q_int[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F80"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => \^q\(2),
      I3 => \^q\(3),
      O => q_int0(3)
    );
\q_int[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFF8000"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(0),
      I2 => \^q\(1),
      I3 => \^q\(3),
      I4 => \^q\(4),
      O => q_int0(4)
    );
\q_int[5]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => seq_clr,
      O => clear
    );
\q_int[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7FFFFFFF80000000"
    )
        port map (
      I0 => \^q\(3),
      I1 => \^q\(1),
      I2 => \^q\(0),
      I3 => \^q\(2),
      I4 => \^q\(4),
      I5 => \^q\(5),
      O => q_int0(5)
    );
\q_int_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk,
      CE => seq_cnt_en,
      D => q_int0(0),
      Q => \^q\(0),
      R => clear
    );
\q_int_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk,
      CE => seq_cnt_en,
      D => q_int0(1),
      Q => \^q\(1),
      R => clear
    );
\q_int_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk,
      CE => seq_cnt_en,
      D => q_int0(2),
      Q => \^q\(2),
      R => clear
    );
\q_int_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk,
      CE => seq_cnt_en,
      D => q_int0(3),
      Q => \^q\(3),
      R => clear
    );
\q_int_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk,
      CE => seq_cnt_en,
      D => q_int0(4),
      Q => \^q\(4),
      R => clear
    );
\q_int_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk,
      CE => seq_cnt_en,
      D => q_int0(5),
      Q => \^q\(5),
      R => clear
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_comblock_0_0_AXIL is
  port (
    axil_awready : out STD_LOGIC;
    axil_wready : out STD_LOGIC;
    axil_arready : out STD_LOGIC;
    axil_bvalid : out STD_LOGIC;
    axil_rvalid : out STD_LOGIC;
    axil_wdata_0_sp_1 : out STD_LOGIC;
    axil_rdata : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axil_aclk : in STD_LOGIC;
    axil_arvalid : in STD_LOGIC;
    axil_aresetn : in STD_LOGIC;
    axil_bready : in STD_LOGIC;
    axil_awvalid : in STD_LOGIC;
    axil_wvalid : in STD_LOGIC;
    axil_rready : in STD_LOGIC;
    axil_wdata : in STD_LOGIC_VECTOR ( 0 to 0 );
    reg0_o : in STD_LOGIC_VECTOR ( 0 to 0 );
    axil_awaddr : in STD_LOGIC_VECTOR ( 5 downto 0 );
    axil_araddr : in STD_LOGIC_VECTOR ( 5 downto 0 );
    reg1_i : in STD_LOGIC_VECTOR ( 10 downto 0 );
    reg0_i : in STD_LOGIC_VECTOR ( 10 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_comblock_0_0_AXIL : entity is "AXIL";
end design_1_comblock_0_0_AXIL;

architecture STRUCTURE of design_1_comblock_0_0_AXIL is
  signal aw_en_i_1_n_0 : STD_LOGIC;
  signal aw_en_reg_n_0 : STD_LOGIC;
  signal axi_arready0 : STD_LOGIC;
  signal axi_awready0 : STD_LOGIC;
  signal axi_bvalid_i_1_n_0 : STD_LOGIC;
  signal \axi_rdata[0]_i_2_n_0\ : STD_LOGIC;
  signal \axi_rdata[10]_i_1_n_0\ : STD_LOGIC;
  signal \axi_rdata[10]_i_3_n_0\ : STD_LOGIC;
  signal \axi_rdata[10]_i_4_n_0\ : STD_LOGIC;
  signal axi_rvalid_i_1_n_0 : STD_LOGIC;
  signal axi_wready0 : STD_LOGIC;
  signal \^axil_arready\ : STD_LOGIC;
  signal \^axil_awready\ : STD_LOGIC;
  signal \^axil_bvalid\ : STD_LOGIC;
  signal \^axil_rvalid\ : STD_LOGIC;
  signal axil_wdata_0_sn_1 : STD_LOGIC;
  signal \^axil_wready\ : STD_LOGIC;
  signal p_0_in : STD_LOGIC;
  signal reg_rd_adr : STD_LOGIC_VECTOR ( 7 downto 2 );
  signal reg_rd_dat : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal reg_wr_adr : STD_LOGIC_VECTOR ( 7 downto 2 );
  signal \regs_out[0][0]_i_2_n_0\ : STD_LOGIC;
  signal \regs_out[0][0]_i_3_n_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of axi_wready_i_1 : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \regs_out[0][0]_i_3\ : label is "soft_lutpair0";
begin
  axil_arready <= \^axil_arready\;
  axil_awready <= \^axil_awready\;
  axil_bvalid <= \^axil_bvalid\;
  axil_rvalid <= \^axil_rvalid\;
  axil_wdata_0_sp_1 <= axil_wdata_0_sn_1;
  axil_wready <= \^axil_wready\;
aw_en_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F8F8F8F808F8F8F8"
    )
        port map (
      I0 => \^axil_bvalid\,
      I1 => axil_bready,
      I2 => aw_en_reg_n_0,
      I3 => axil_wvalid,
      I4 => axil_awvalid,
      I5 => \^axil_awready\,
      O => aw_en_i_1_n_0
    );
aw_en_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => aw_en_i_1_n_0,
      Q => aw_en_reg_n_0,
      S => p_0_in
    );
\axi_araddr_reg[2]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => axil_aclk,
      CE => axi_arready0,
      D => axil_araddr(0),
      Q => reg_rd_adr(2),
      S => p_0_in
    );
\axi_araddr_reg[3]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => axil_aclk,
      CE => axi_arready0,
      D => axil_araddr(1),
      Q => reg_rd_adr(3),
      S => p_0_in
    );
\axi_araddr_reg[4]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => axil_aclk,
      CE => axi_arready0,
      D => axil_araddr(2),
      Q => reg_rd_adr(4),
      S => p_0_in
    );
\axi_araddr_reg[5]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => axil_aclk,
      CE => axi_arready0,
      D => axil_araddr(3),
      Q => reg_rd_adr(5),
      S => p_0_in
    );
\axi_araddr_reg[6]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => axil_aclk,
      CE => axi_arready0,
      D => axil_araddr(4),
      Q => reg_rd_adr(6),
      S => p_0_in
    );
\axi_araddr_reg[7]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => axil_aclk,
      CE => axi_arready0,
      D => axil_araddr(5),
      Q => reg_rd_adr(7),
      S => p_0_in
    );
axi_arready_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => axil_arvalid,
      I1 => \^axil_arready\,
      O => axi_arready0
    );
axi_arready_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => axi_arready0,
      Q => \^axil_arready\,
      R => p_0_in
    );
\axi_awaddr_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => axi_awready0,
      D => axil_awaddr(0),
      Q => reg_wr_adr(2),
      R => p_0_in
    );
\axi_awaddr_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => axi_awready0,
      D => axil_awaddr(1),
      Q => reg_wr_adr(3),
      R => p_0_in
    );
\axi_awaddr_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => axi_awready0,
      D => axil_awaddr(2),
      Q => reg_wr_adr(4),
      R => p_0_in
    );
\axi_awaddr_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => axi_awready0,
      D => axil_awaddr(3),
      Q => reg_wr_adr(5),
      R => p_0_in
    );
\axi_awaddr_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => axi_awready0,
      D => axil_awaddr(4),
      Q => reg_wr_adr(6),
      R => p_0_in
    );
\axi_awaddr_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => axi_awready0,
      D => axil_awaddr(5),
      Q => reg_wr_adr(7),
      R => p_0_in
    );
axi_awready_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => axil_aresetn,
      O => p_0_in
    );
axi_awready_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => aw_en_reg_n_0,
      I1 => axil_wvalid,
      I2 => axil_awvalid,
      I3 => \^axil_awready\,
      O => axi_awready0
    );
axi_awready_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => axi_awready0,
      Q => \^axil_awready\,
      R => p_0_in
    );
axi_bvalid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55555555C0000000"
    )
        port map (
      I0 => axil_bready,
      I1 => \^axil_wready\,
      I2 => axil_awvalid,
      I3 => axil_wvalid,
      I4 => \^axil_awready\,
      I5 => \^axil_bvalid\,
      O => axi_bvalid_i_1_n_0
    );
axi_bvalid_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => axi_bvalid_i_1_n_0,
      Q => \^axil_bvalid\,
      R => p_0_in
    );
\axi_rdata[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0ACF00000AC00000"
    )
        port map (
      I0 => reg1_i(0),
      I1 => reg0_o(0),
      I2 => reg_rd_adr(6),
      I3 => reg_rd_adr(2),
      I4 => \axi_rdata[0]_i_2_n_0\,
      I5 => reg0_i(0),
      O => reg_rd_dat(0)
    );
\axi_rdata[0]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => reg_rd_adr(7),
      I1 => reg_rd_adr(5),
      I2 => reg_rd_adr(4),
      I3 => reg_rd_adr(3),
      O => \axi_rdata[0]_i_2_n_0\
    );
\axi_rdata[10]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BF"
    )
        port map (
      I0 => \^axil_rvalid\,
      I1 => axil_arvalid,
      I2 => \^axil_arready\,
      O => \axi_rdata[10]_i_1_n_0\
    );
\axi_rdata[10]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => reg1_i(10),
      I1 => \axi_rdata[10]_i_3_n_0\,
      I2 => reg0_i(10),
      I3 => \axi_rdata[10]_i_4_n_0\,
      O => reg_rd_dat(10)
    );
\axi_rdata[10]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000100000000"
    )
        port map (
      I0 => reg_rd_adr(6),
      I1 => reg_rd_adr(7),
      I2 => reg_rd_adr(5),
      I3 => reg_rd_adr(4),
      I4 => reg_rd_adr(3),
      I5 => reg_rd_adr(2),
      O => \axi_rdata[10]_i_3_n_0\
    );
\axi_rdata[10]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => reg_rd_adr(6),
      I1 => reg_rd_adr(7),
      I2 => reg_rd_adr(5),
      I3 => reg_rd_adr(4),
      I4 => reg_rd_adr(3),
      I5 => reg_rd_adr(2),
      O => \axi_rdata[10]_i_4_n_0\
    );
\axi_rdata[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => reg1_i(1),
      I1 => \axi_rdata[10]_i_3_n_0\,
      I2 => reg0_i(1),
      I3 => \axi_rdata[10]_i_4_n_0\,
      O => reg_rd_dat(1)
    );
\axi_rdata[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => reg1_i(2),
      I1 => \axi_rdata[10]_i_3_n_0\,
      I2 => reg0_i(2),
      I3 => \axi_rdata[10]_i_4_n_0\,
      O => reg_rd_dat(2)
    );
\axi_rdata[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => reg1_i(3),
      I1 => \axi_rdata[10]_i_3_n_0\,
      I2 => reg0_i(3),
      I3 => \axi_rdata[10]_i_4_n_0\,
      O => reg_rd_dat(3)
    );
\axi_rdata[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => reg1_i(4),
      I1 => \axi_rdata[10]_i_3_n_0\,
      I2 => reg0_i(4),
      I3 => \axi_rdata[10]_i_4_n_0\,
      O => reg_rd_dat(4)
    );
\axi_rdata[5]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => reg1_i(5),
      I1 => \axi_rdata[10]_i_3_n_0\,
      I2 => reg0_i(5),
      I3 => \axi_rdata[10]_i_4_n_0\,
      O => reg_rd_dat(5)
    );
\axi_rdata[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => reg1_i(6),
      I1 => \axi_rdata[10]_i_3_n_0\,
      I2 => reg0_i(6),
      I3 => \axi_rdata[10]_i_4_n_0\,
      O => reg_rd_dat(6)
    );
\axi_rdata[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => reg1_i(7),
      I1 => \axi_rdata[10]_i_3_n_0\,
      I2 => reg0_i(7),
      I3 => \axi_rdata[10]_i_4_n_0\,
      O => reg_rd_dat(7)
    );
\axi_rdata[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => reg1_i(8),
      I1 => \axi_rdata[10]_i_3_n_0\,
      I2 => reg0_i(8),
      I3 => \axi_rdata[10]_i_4_n_0\,
      O => reg_rd_dat(8)
    );
\axi_rdata[9]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => reg1_i(9),
      I1 => \axi_rdata[10]_i_3_n_0\,
      I2 => reg0_i(9),
      I3 => \axi_rdata[10]_i_4_n_0\,
      O => reg_rd_dat(9)
    );
\axi_rdata_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => reg_rd_dat(0),
      Q => axil_rdata(0),
      R => \axi_rdata[10]_i_1_n_0\
    );
\axi_rdata_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => reg_rd_dat(10),
      Q => axil_rdata(10),
      R => \axi_rdata[10]_i_1_n_0\
    );
\axi_rdata_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => reg_rd_dat(1),
      Q => axil_rdata(1),
      R => \axi_rdata[10]_i_1_n_0\
    );
\axi_rdata_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => reg_rd_dat(2),
      Q => axil_rdata(2),
      R => \axi_rdata[10]_i_1_n_0\
    );
\axi_rdata_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => reg_rd_dat(3),
      Q => axil_rdata(3),
      R => \axi_rdata[10]_i_1_n_0\
    );
\axi_rdata_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => reg_rd_dat(4),
      Q => axil_rdata(4),
      R => \axi_rdata[10]_i_1_n_0\
    );
\axi_rdata_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => reg_rd_dat(5),
      Q => axil_rdata(5),
      R => \axi_rdata[10]_i_1_n_0\
    );
\axi_rdata_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => reg_rd_dat(6),
      Q => axil_rdata(6),
      R => \axi_rdata[10]_i_1_n_0\
    );
\axi_rdata_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => reg_rd_dat(7),
      Q => axil_rdata(7),
      R => \axi_rdata[10]_i_1_n_0\
    );
\axi_rdata_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => reg_rd_dat(8),
      Q => axil_rdata(8),
      R => \axi_rdata[10]_i_1_n_0\
    );
\axi_rdata_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => reg_rd_dat(9),
      Q => axil_rdata(9),
      R => \axi_rdata[10]_i_1_n_0\
    );
axi_rvalid_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"08F8"
    )
        port map (
      I0 => axil_arvalid,
      I1 => \^axil_arready\,
      I2 => \^axil_rvalid\,
      I3 => axil_rready,
      O => axi_rvalid_i_1_n_0
    );
axi_rvalid_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => axi_rvalid_i_1_n_0,
      Q => \^axil_rvalid\,
      R => p_0_in
    );
axi_wready_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => aw_en_reg_n_0,
      I1 => axil_wvalid,
      I2 => axil_awvalid,
      I3 => \^axil_wready\,
      O => axi_wready0
    );
axi_wready_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => axi_wready0,
      Q => \^axil_wready\,
      R => p_0_in
    );
\regs_out[0][0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => axil_wdata(0),
      I1 => \regs_out[0][0]_i_2_n_0\,
      I2 => reg_wr_adr(7),
      I3 => reg0_o(0),
      O => axil_wdata_0_sn_1
    );
\regs_out[0][0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000001000000000"
    )
        port map (
      I0 => reg_wr_adr(2),
      I1 => reg_wr_adr(4),
      I2 => \regs_out[0][0]_i_3_n_0\,
      I3 => reg_wr_adr(3),
      I4 => reg_wr_adr(5),
      I5 => reg_wr_adr(6),
      O => \regs_out[0][0]_i_2_n_0\
    );
\regs_out[0][0]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => \^axil_awready\,
      I1 => axil_wvalid,
      I2 => axil_awvalid,
      I3 => \^axil_wready\,
      O => \regs_out[0][0]_i_3_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_comblock_0_0_ComBlock is
  port (
    reg0_o : out STD_LOGIC_VECTOR ( 0 to 0 );
    \regs_out_reg[0][0]_0\ : in STD_LOGIC;
    axil_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_comblock_0_0_ComBlock : entity is "ComBlock";
end design_1_comblock_0_0_ComBlock;

architecture STRUCTURE of design_1_comblock_0_0_ComBlock is
begin
\regs_out_reg[0][0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => axil_aclk,
      CE => '1',
      D => \regs_out_reg[0][0]_0\,
      Q => reg0_o(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 is
  port (
    CAN0_PHY_TX : out STD_LOGIC;
    CAN0_PHY_RX : in STD_LOGIC;
    CAN1_PHY_TX : out STD_LOGIC;
    CAN1_PHY_RX : in STD_LOGIC;
    ENET0_GMII_TX_EN : out STD_LOGIC;
    ENET0_GMII_TX_ER : out STD_LOGIC;
    ENET0_MDIO_MDC : out STD_LOGIC;
    ENET0_MDIO_O : out STD_LOGIC;
    ENET0_MDIO_T : out STD_LOGIC;
    ENET0_PTP_DELAY_REQ_RX : out STD_LOGIC;
    ENET0_PTP_DELAY_REQ_TX : out STD_LOGIC;
    ENET0_PTP_PDELAY_REQ_RX : out STD_LOGIC;
    ENET0_PTP_PDELAY_REQ_TX : out STD_LOGIC;
    ENET0_PTP_PDELAY_RESP_RX : out STD_LOGIC;
    ENET0_PTP_PDELAY_RESP_TX : out STD_LOGIC;
    ENET0_PTP_SYNC_FRAME_RX : out STD_LOGIC;
    ENET0_PTP_SYNC_FRAME_TX : out STD_LOGIC;
    ENET0_SOF_RX : out STD_LOGIC;
    ENET0_SOF_TX : out STD_LOGIC;
    ENET0_GMII_TXD : out STD_LOGIC_VECTOR ( 7 downto 0 );
    ENET0_GMII_COL : in STD_LOGIC;
    ENET0_GMII_CRS : in STD_LOGIC;
    ENET0_GMII_RX_CLK : in STD_LOGIC;
    ENET0_GMII_RX_DV : in STD_LOGIC;
    ENET0_GMII_RX_ER : in STD_LOGIC;
    ENET0_GMII_TX_CLK : in STD_LOGIC;
    ENET0_MDIO_I : in STD_LOGIC;
    ENET0_EXT_INTIN : in STD_LOGIC;
    ENET0_GMII_RXD : in STD_LOGIC_VECTOR ( 7 downto 0 );
    ENET1_GMII_TX_EN : out STD_LOGIC;
    ENET1_GMII_TX_ER : out STD_LOGIC;
    ENET1_MDIO_MDC : out STD_LOGIC;
    ENET1_MDIO_O : out STD_LOGIC;
    ENET1_MDIO_T : out STD_LOGIC;
    ENET1_PTP_DELAY_REQ_RX : out STD_LOGIC;
    ENET1_PTP_DELAY_REQ_TX : out STD_LOGIC;
    ENET1_PTP_PDELAY_REQ_RX : out STD_LOGIC;
    ENET1_PTP_PDELAY_REQ_TX : out STD_LOGIC;
    ENET1_PTP_PDELAY_RESP_RX : out STD_LOGIC;
    ENET1_PTP_PDELAY_RESP_TX : out STD_LOGIC;
    ENET1_PTP_SYNC_FRAME_RX : out STD_LOGIC;
    ENET1_PTP_SYNC_FRAME_TX : out STD_LOGIC;
    ENET1_SOF_RX : out STD_LOGIC;
    ENET1_SOF_TX : out STD_LOGIC;
    ENET1_GMII_TXD : out STD_LOGIC_VECTOR ( 7 downto 0 );
    ENET1_GMII_COL : in STD_LOGIC;
    ENET1_GMII_CRS : in STD_LOGIC;
    ENET1_GMII_RX_CLK : in STD_LOGIC;
    ENET1_GMII_RX_DV : in STD_LOGIC;
    ENET1_GMII_RX_ER : in STD_LOGIC;
    ENET1_GMII_TX_CLK : in STD_LOGIC;
    ENET1_MDIO_I : in STD_LOGIC;
    ENET1_EXT_INTIN : in STD_LOGIC;
    ENET1_GMII_RXD : in STD_LOGIC_VECTOR ( 7 downto 0 );
    GPIO_I : in STD_LOGIC_VECTOR ( 63 downto 0 );
    GPIO_O : out STD_LOGIC_VECTOR ( 63 downto 0 );
    GPIO_T : out STD_LOGIC_VECTOR ( 63 downto 0 );
    I2C0_SDA_I : in STD_LOGIC;
    I2C0_SDA_O : out STD_LOGIC;
    I2C0_SDA_T : out STD_LOGIC;
    I2C0_SCL_I : in STD_LOGIC;
    I2C0_SCL_O : out STD_LOGIC;
    I2C0_SCL_T : out STD_LOGIC;
    I2C1_SDA_I : in STD_LOGIC;
    I2C1_SDA_O : out STD_LOGIC;
    I2C1_SDA_T : out STD_LOGIC;
    I2C1_SCL_I : in STD_LOGIC;
    I2C1_SCL_O : out STD_LOGIC;
    I2C1_SCL_T : out STD_LOGIC;
    PJTAG_TCK : in STD_LOGIC;
    PJTAG_TMS : in STD_LOGIC;
    PJTAG_TDI : in STD_LOGIC;
    PJTAG_TDO : out STD_LOGIC;
    SDIO0_CLK : out STD_LOGIC;
    SDIO0_CLK_FB : in STD_LOGIC;
    SDIO0_CMD_O : out STD_LOGIC;
    SDIO0_CMD_I : in STD_LOGIC;
    SDIO0_CMD_T : out STD_LOGIC;
    SDIO0_DATA_I : in STD_LOGIC_VECTOR ( 3 downto 0 );
    SDIO0_DATA_O : out STD_LOGIC_VECTOR ( 3 downto 0 );
    SDIO0_DATA_T : out STD_LOGIC_VECTOR ( 3 downto 0 );
    SDIO0_LED : out STD_LOGIC;
    SDIO0_CDN : in STD_LOGIC;
    SDIO0_WP : in STD_LOGIC;
    SDIO0_BUSPOW : out STD_LOGIC;
    SDIO0_BUSVOLT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    SDIO1_CLK : out STD_LOGIC;
    SDIO1_CLK_FB : in STD_LOGIC;
    SDIO1_CMD_O : out STD_LOGIC;
    SDIO1_CMD_I : in STD_LOGIC;
    SDIO1_CMD_T : out STD_LOGIC;
    SDIO1_DATA_I : in STD_LOGIC_VECTOR ( 3 downto 0 );
    SDIO1_DATA_O : out STD_LOGIC_VECTOR ( 3 downto 0 );
    SDIO1_DATA_T : out STD_LOGIC_VECTOR ( 3 downto 0 );
    SDIO1_LED : out STD_LOGIC;
    SDIO1_CDN : in STD_LOGIC;
    SDIO1_WP : in STD_LOGIC;
    SDIO1_BUSPOW : out STD_LOGIC;
    SDIO1_BUSVOLT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    SPI0_SCLK_I : in STD_LOGIC;
    SPI0_SCLK_O : out STD_LOGIC;
    SPI0_SCLK_T : out STD_LOGIC;
    SPI0_MOSI_I : in STD_LOGIC;
    SPI0_MOSI_O : out STD_LOGIC;
    SPI0_MOSI_T : out STD_LOGIC;
    SPI0_MISO_I : in STD_LOGIC;
    SPI0_MISO_O : out STD_LOGIC;
    SPI0_MISO_T : out STD_LOGIC;
    SPI0_SS_I : in STD_LOGIC;
    SPI0_SS_O : out STD_LOGIC;
    SPI0_SS1_O : out STD_LOGIC;
    SPI0_SS2_O : out STD_LOGIC;
    SPI0_SS_T : out STD_LOGIC;
    SPI1_SCLK_I : in STD_LOGIC;
    SPI1_SCLK_O : out STD_LOGIC;
    SPI1_SCLK_T : out STD_LOGIC;
    SPI1_MOSI_I : in STD_LOGIC;
    SPI1_MOSI_O : out STD_LOGIC;
    SPI1_MOSI_T : out STD_LOGIC;
    SPI1_MISO_I : in STD_LOGIC;
    SPI1_MISO_O : out STD_LOGIC;
    SPI1_MISO_T : out STD_LOGIC;
    SPI1_SS_I : in STD_LOGIC;
    SPI1_SS_O : out STD_LOGIC;
    SPI1_SS1_O : out STD_LOGIC;
    SPI1_SS2_O : out STD_LOGIC;
    SPI1_SS_T : out STD_LOGIC;
    UART0_DTRN : out STD_LOGIC;
    UART0_RTSN : out STD_LOGIC;
    UART0_TX : out STD_LOGIC;
    UART0_CTSN : in STD_LOGIC;
    UART0_DCDN : in STD_LOGIC;
    UART0_DSRN : in STD_LOGIC;
    UART0_RIN : in STD_LOGIC;
    UART0_RX : in STD_LOGIC;
    UART1_DTRN : out STD_LOGIC;
    UART1_RTSN : out STD_LOGIC;
    UART1_TX : out STD_LOGIC;
    UART1_CTSN : in STD_LOGIC;
    UART1_DCDN : in STD_LOGIC;
    UART1_DSRN : in STD_LOGIC;
    UART1_RIN : in STD_LOGIC;
    UART1_RX : in STD_LOGIC;
    TTC0_WAVE0_OUT : out STD_LOGIC;
    TTC0_WAVE1_OUT : out STD_LOGIC;
    TTC0_WAVE2_OUT : out STD_LOGIC;
    TTC0_CLK0_IN : in STD_LOGIC;
    TTC0_CLK1_IN : in STD_LOGIC;
    TTC0_CLK2_IN : in STD_LOGIC;
    TTC1_WAVE0_OUT : out STD_LOGIC;
    TTC1_WAVE1_OUT : out STD_LOGIC;
    TTC1_WAVE2_OUT : out STD_LOGIC;
    TTC1_CLK0_IN : in STD_LOGIC;
    TTC1_CLK1_IN : in STD_LOGIC;
    TTC1_CLK2_IN : in STD_LOGIC;
    WDT_CLK_IN : in STD_LOGIC;
    WDT_RST_OUT : out STD_LOGIC;
    TRACE_CLK : in STD_LOGIC;
    TRACE_CTL : out STD_LOGIC;
    TRACE_DATA : out STD_LOGIC_VECTOR ( 1 downto 0 );
    TRACE_CLK_OUT : out STD_LOGIC;
    USB0_PORT_INDCTL : out STD_LOGIC_VECTOR ( 1 downto 0 );
    USB0_VBUS_PWRSELECT : out STD_LOGIC;
    USB0_VBUS_PWRFAULT : in STD_LOGIC;
    USB1_PORT_INDCTL : out STD_LOGIC_VECTOR ( 1 downto 0 );
    USB1_VBUS_PWRSELECT : out STD_LOGIC;
    USB1_VBUS_PWRFAULT : in STD_LOGIC;
    SRAM_INTIN : in STD_LOGIC;
    M_AXI_GP0_ARESETN : out STD_LOGIC;
    M_AXI_GP0_ARVALID : out STD_LOGIC;
    M_AXI_GP0_AWVALID : out STD_LOGIC;
    M_AXI_GP0_BREADY : out STD_LOGIC;
    M_AXI_GP0_RREADY : out STD_LOGIC;
    M_AXI_GP0_WLAST : out STD_LOGIC;
    M_AXI_GP0_WVALID : out STD_LOGIC;
    M_AXI_GP0_ARID : out STD_LOGIC_VECTOR ( 11 downto 0 );
    M_AXI_GP0_AWID : out STD_LOGIC_VECTOR ( 11 downto 0 );
    M_AXI_GP0_WID : out STD_LOGIC_VECTOR ( 11 downto 0 );
    M_AXI_GP0_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP0_ARLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP0_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_GP0_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP0_AWLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP0_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_GP0_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_GP0_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_GP0_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_GP0_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_GP0_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_GP0_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP0_ARLEN : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP0_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP0_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP0_AWLEN : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP0_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP0_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP0_ACLK : in STD_LOGIC;
    M_AXI_GP0_ARREADY : in STD_LOGIC;
    M_AXI_GP0_AWREADY : in STD_LOGIC;
    M_AXI_GP0_BVALID : in STD_LOGIC;
    M_AXI_GP0_RLAST : in STD_LOGIC;
    M_AXI_GP0_RVALID : in STD_LOGIC;
    M_AXI_GP0_WREADY : in STD_LOGIC;
    M_AXI_GP0_BID : in STD_LOGIC_VECTOR ( 11 downto 0 );
    M_AXI_GP0_RID : in STD_LOGIC_VECTOR ( 11 downto 0 );
    M_AXI_GP0_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP0_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP0_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_GP1_ARESETN : out STD_LOGIC;
    M_AXI_GP1_ARVALID : out STD_LOGIC;
    M_AXI_GP1_AWVALID : out STD_LOGIC;
    M_AXI_GP1_BREADY : out STD_LOGIC;
    M_AXI_GP1_RREADY : out STD_LOGIC;
    M_AXI_GP1_WLAST : out STD_LOGIC;
    M_AXI_GP1_WVALID : out STD_LOGIC;
    M_AXI_GP1_ARID : out STD_LOGIC_VECTOR ( 11 downto 0 );
    M_AXI_GP1_AWID : out STD_LOGIC_VECTOR ( 11 downto 0 );
    M_AXI_GP1_WID : out STD_LOGIC_VECTOR ( 11 downto 0 );
    M_AXI_GP1_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP1_ARLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP1_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_GP1_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP1_AWLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP1_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_GP1_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_GP1_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_GP1_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_GP1_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_GP1_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_GP1_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP1_ARLEN : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP1_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP1_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP1_AWLEN : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP1_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP1_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP1_ACLK : in STD_LOGIC;
    M_AXI_GP1_ARREADY : in STD_LOGIC;
    M_AXI_GP1_AWREADY : in STD_LOGIC;
    M_AXI_GP1_BVALID : in STD_LOGIC;
    M_AXI_GP1_RLAST : in STD_LOGIC;
    M_AXI_GP1_RVALID : in STD_LOGIC;
    M_AXI_GP1_WREADY : in STD_LOGIC;
    M_AXI_GP1_BID : in STD_LOGIC_VECTOR ( 11 downto 0 );
    M_AXI_GP1_RID : in STD_LOGIC_VECTOR ( 11 downto 0 );
    M_AXI_GP1_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP1_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP1_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_GP0_ARESETN : out STD_LOGIC;
    S_AXI_GP0_ARREADY : out STD_LOGIC;
    S_AXI_GP0_AWREADY : out STD_LOGIC;
    S_AXI_GP0_BVALID : out STD_LOGIC;
    S_AXI_GP0_RLAST : out STD_LOGIC;
    S_AXI_GP0_RVALID : out STD_LOGIC;
    S_AXI_GP0_WREADY : out STD_LOGIC;
    S_AXI_GP0_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_GP0_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_GP0_RDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_GP0_BID : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_GP0_RID : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_GP0_ACLK : in STD_LOGIC;
    S_AXI_GP0_ARVALID : in STD_LOGIC;
    S_AXI_GP0_AWVALID : in STD_LOGIC;
    S_AXI_GP0_BREADY : in STD_LOGIC;
    S_AXI_GP0_RREADY : in STD_LOGIC;
    S_AXI_GP0_WLAST : in STD_LOGIC;
    S_AXI_GP0_WVALID : in STD_LOGIC;
    S_AXI_GP0_ARBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_GP0_ARLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_GP0_ARSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_GP0_AWBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_GP0_AWLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_GP0_AWSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_GP0_ARPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_GP0_AWPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_GP0_ARADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_GP0_AWADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_GP0_WDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_GP0_ARCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_GP0_ARLEN : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_GP0_ARQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_GP0_AWCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_GP0_AWLEN : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_GP0_AWQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_GP0_WSTRB : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_GP0_ARID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_GP0_AWID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_GP0_WID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_GP1_ARESETN : out STD_LOGIC;
    S_AXI_GP1_ARREADY : out STD_LOGIC;
    S_AXI_GP1_AWREADY : out STD_LOGIC;
    S_AXI_GP1_BVALID : out STD_LOGIC;
    S_AXI_GP1_RLAST : out STD_LOGIC;
    S_AXI_GP1_RVALID : out STD_LOGIC;
    S_AXI_GP1_WREADY : out STD_LOGIC;
    S_AXI_GP1_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_GP1_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_GP1_RDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_GP1_BID : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_GP1_RID : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_GP1_ACLK : in STD_LOGIC;
    S_AXI_GP1_ARVALID : in STD_LOGIC;
    S_AXI_GP1_AWVALID : in STD_LOGIC;
    S_AXI_GP1_BREADY : in STD_LOGIC;
    S_AXI_GP1_RREADY : in STD_LOGIC;
    S_AXI_GP1_WLAST : in STD_LOGIC;
    S_AXI_GP1_WVALID : in STD_LOGIC;
    S_AXI_GP1_ARBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_GP1_ARLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_GP1_ARSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_GP1_AWBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_GP1_AWLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_GP1_AWSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_GP1_ARPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_GP1_AWPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_GP1_ARADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_GP1_AWADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_GP1_WDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_GP1_ARCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_GP1_ARLEN : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_GP1_ARQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_GP1_AWCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_GP1_AWLEN : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_GP1_AWQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_GP1_WSTRB : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_GP1_ARID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_GP1_AWID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_GP1_WID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_ACP_ARESETN : out STD_LOGIC;
    S_AXI_ACP_ARREADY : out STD_LOGIC;
    S_AXI_ACP_AWREADY : out STD_LOGIC;
    S_AXI_ACP_BVALID : out STD_LOGIC;
    S_AXI_ACP_RLAST : out STD_LOGIC;
    S_AXI_ACP_RVALID : out STD_LOGIC;
    S_AXI_ACP_WREADY : out STD_LOGIC;
    S_AXI_ACP_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_ACP_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_ACP_BID : out STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_ACP_RID : out STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_ACP_RDATA : out STD_LOGIC_VECTOR ( 63 downto 0 );
    S_AXI_ACP_ACLK : in STD_LOGIC;
    S_AXI_ACP_ARVALID : in STD_LOGIC;
    S_AXI_ACP_AWVALID : in STD_LOGIC;
    S_AXI_ACP_BREADY : in STD_LOGIC;
    S_AXI_ACP_RREADY : in STD_LOGIC;
    S_AXI_ACP_WLAST : in STD_LOGIC;
    S_AXI_ACP_WVALID : in STD_LOGIC;
    S_AXI_ACP_ARID : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_ACP_ARPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_ACP_AWID : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_ACP_AWPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_ACP_WID : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_ACP_ARADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_ACP_AWADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_ACP_ARCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_ACP_ARLEN : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_ACP_ARQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_ACP_AWCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_ACP_AWLEN : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_ACP_AWQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_ACP_ARBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_ACP_ARLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_ACP_ARSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_ACP_AWBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_ACP_AWLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_ACP_AWSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_ACP_ARUSER : in STD_LOGIC_VECTOR ( 4 downto 0 );
    S_AXI_ACP_AWUSER : in STD_LOGIC_VECTOR ( 4 downto 0 );
    S_AXI_ACP_WDATA : in STD_LOGIC_VECTOR ( 63 downto 0 );
    S_AXI_ACP_WSTRB : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_HP0_ARESETN : out STD_LOGIC;
    S_AXI_HP0_ARREADY : out STD_LOGIC;
    S_AXI_HP0_AWREADY : out STD_LOGIC;
    S_AXI_HP0_BVALID : out STD_LOGIC;
    S_AXI_HP0_RLAST : out STD_LOGIC;
    S_AXI_HP0_RVALID : out STD_LOGIC;
    S_AXI_HP0_WREADY : out STD_LOGIC;
    S_AXI_HP0_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP0_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP0_BID : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP0_RID : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP0_RDATA : out STD_LOGIC_VECTOR ( 63 downto 0 );
    S_AXI_HP0_RCOUNT : out STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_HP0_WCOUNT : out STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_HP0_RACOUNT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP0_WACOUNT : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP0_ACLK : in STD_LOGIC;
    S_AXI_HP0_ARVALID : in STD_LOGIC;
    S_AXI_HP0_AWVALID : in STD_LOGIC;
    S_AXI_HP0_BREADY : in STD_LOGIC;
    S_AXI_HP0_RDISSUECAP1_EN : in STD_LOGIC;
    S_AXI_HP0_RREADY : in STD_LOGIC;
    S_AXI_HP0_WLAST : in STD_LOGIC;
    S_AXI_HP0_WRISSUECAP1_EN : in STD_LOGIC;
    S_AXI_HP0_WVALID : in STD_LOGIC;
    S_AXI_HP0_ARBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP0_ARLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP0_ARSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP0_AWBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP0_AWLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP0_AWSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP0_ARPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP0_AWPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP0_ARADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_HP0_AWADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_HP0_ARCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP0_ARLEN : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP0_ARQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP0_AWCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP0_AWLEN : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP0_AWQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP0_ARID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP0_AWID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP0_WID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP0_WDATA : in STD_LOGIC_VECTOR ( 63 downto 0 );
    S_AXI_HP0_WSTRB : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_HP1_ARESETN : out STD_LOGIC;
    S_AXI_HP1_ARREADY : out STD_LOGIC;
    S_AXI_HP1_AWREADY : out STD_LOGIC;
    S_AXI_HP1_BVALID : out STD_LOGIC;
    S_AXI_HP1_RLAST : out STD_LOGIC;
    S_AXI_HP1_RVALID : out STD_LOGIC;
    S_AXI_HP1_WREADY : out STD_LOGIC;
    S_AXI_HP1_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP1_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP1_BID : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP1_RID : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP1_RDATA : out STD_LOGIC_VECTOR ( 63 downto 0 );
    S_AXI_HP1_RCOUNT : out STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_HP1_WCOUNT : out STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_HP1_RACOUNT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP1_WACOUNT : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP1_ACLK : in STD_LOGIC;
    S_AXI_HP1_ARVALID : in STD_LOGIC;
    S_AXI_HP1_AWVALID : in STD_LOGIC;
    S_AXI_HP1_BREADY : in STD_LOGIC;
    S_AXI_HP1_RDISSUECAP1_EN : in STD_LOGIC;
    S_AXI_HP1_RREADY : in STD_LOGIC;
    S_AXI_HP1_WLAST : in STD_LOGIC;
    S_AXI_HP1_WRISSUECAP1_EN : in STD_LOGIC;
    S_AXI_HP1_WVALID : in STD_LOGIC;
    S_AXI_HP1_ARBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP1_ARLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP1_ARSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP1_AWBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP1_AWLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP1_AWSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP1_ARPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP1_AWPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP1_ARADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_HP1_AWADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_HP1_ARCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP1_ARLEN : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP1_ARQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP1_AWCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP1_AWLEN : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP1_AWQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP1_ARID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP1_AWID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP1_WID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP1_WDATA : in STD_LOGIC_VECTOR ( 63 downto 0 );
    S_AXI_HP1_WSTRB : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_HP2_ARESETN : out STD_LOGIC;
    S_AXI_HP2_ARREADY : out STD_LOGIC;
    S_AXI_HP2_AWREADY : out STD_LOGIC;
    S_AXI_HP2_BVALID : out STD_LOGIC;
    S_AXI_HP2_RLAST : out STD_LOGIC;
    S_AXI_HP2_RVALID : out STD_LOGIC;
    S_AXI_HP2_WREADY : out STD_LOGIC;
    S_AXI_HP2_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP2_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP2_BID : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP2_RID : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP2_RDATA : out STD_LOGIC_VECTOR ( 63 downto 0 );
    S_AXI_HP2_RCOUNT : out STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_HP2_WCOUNT : out STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_HP2_RACOUNT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP2_WACOUNT : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP2_ACLK : in STD_LOGIC;
    S_AXI_HP2_ARVALID : in STD_LOGIC;
    S_AXI_HP2_AWVALID : in STD_LOGIC;
    S_AXI_HP2_BREADY : in STD_LOGIC;
    S_AXI_HP2_RDISSUECAP1_EN : in STD_LOGIC;
    S_AXI_HP2_RREADY : in STD_LOGIC;
    S_AXI_HP2_WLAST : in STD_LOGIC;
    S_AXI_HP2_WRISSUECAP1_EN : in STD_LOGIC;
    S_AXI_HP2_WVALID : in STD_LOGIC;
    S_AXI_HP2_ARBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP2_ARLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP2_ARSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP2_AWBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP2_AWLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP2_AWSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP2_ARPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP2_AWPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP2_ARADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_HP2_AWADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_HP2_ARCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP2_ARLEN : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP2_ARQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP2_AWCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP2_AWLEN : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP2_AWQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP2_ARID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP2_AWID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP2_WID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP2_WDATA : in STD_LOGIC_VECTOR ( 63 downto 0 );
    S_AXI_HP2_WSTRB : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_HP3_ARESETN : out STD_LOGIC;
    S_AXI_HP3_ARREADY : out STD_LOGIC;
    S_AXI_HP3_AWREADY : out STD_LOGIC;
    S_AXI_HP3_BVALID : out STD_LOGIC;
    S_AXI_HP3_RLAST : out STD_LOGIC;
    S_AXI_HP3_RVALID : out STD_LOGIC;
    S_AXI_HP3_WREADY : out STD_LOGIC;
    S_AXI_HP3_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP3_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP3_BID : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP3_RID : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP3_RDATA : out STD_LOGIC_VECTOR ( 63 downto 0 );
    S_AXI_HP3_RCOUNT : out STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_HP3_WCOUNT : out STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_HP3_RACOUNT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP3_WACOUNT : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP3_ACLK : in STD_LOGIC;
    S_AXI_HP3_ARVALID : in STD_LOGIC;
    S_AXI_HP3_AWVALID : in STD_LOGIC;
    S_AXI_HP3_BREADY : in STD_LOGIC;
    S_AXI_HP3_RDISSUECAP1_EN : in STD_LOGIC;
    S_AXI_HP3_RREADY : in STD_LOGIC;
    S_AXI_HP3_WLAST : in STD_LOGIC;
    S_AXI_HP3_WRISSUECAP1_EN : in STD_LOGIC;
    S_AXI_HP3_WVALID : in STD_LOGIC;
    S_AXI_HP3_ARBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP3_ARLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP3_ARSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP3_AWBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP3_AWLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_HP3_AWSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP3_ARPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP3_AWPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_HP3_ARADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_HP3_AWADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_HP3_ARCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP3_ARLEN : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP3_ARQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP3_AWCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP3_AWLEN : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP3_AWQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_HP3_ARID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP3_AWID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP3_WID : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_AXI_HP3_WDATA : in STD_LOGIC_VECTOR ( 63 downto 0 );
    S_AXI_HP3_WSTRB : in STD_LOGIC_VECTOR ( 7 downto 0 );
    IRQ_P2F_DMAC_ABORT : out STD_LOGIC;
    IRQ_P2F_DMAC0 : out STD_LOGIC;
    IRQ_P2F_DMAC1 : out STD_LOGIC;
    IRQ_P2F_DMAC2 : out STD_LOGIC;
    IRQ_P2F_DMAC3 : out STD_LOGIC;
    IRQ_P2F_DMAC4 : out STD_LOGIC;
    IRQ_P2F_DMAC5 : out STD_LOGIC;
    IRQ_P2F_DMAC6 : out STD_LOGIC;
    IRQ_P2F_DMAC7 : out STD_LOGIC;
    IRQ_P2F_SMC : out STD_LOGIC;
    IRQ_P2F_QSPI : out STD_LOGIC;
    IRQ_P2F_CTI : out STD_LOGIC;
    IRQ_P2F_GPIO : out STD_LOGIC;
    IRQ_P2F_USB0 : out STD_LOGIC;
    IRQ_P2F_ENET0 : out STD_LOGIC;
    IRQ_P2F_ENET_WAKE0 : out STD_LOGIC;
    IRQ_P2F_SDIO0 : out STD_LOGIC;
    IRQ_P2F_I2C0 : out STD_LOGIC;
    IRQ_P2F_SPI0 : out STD_LOGIC;
    IRQ_P2F_UART0 : out STD_LOGIC;
    IRQ_P2F_CAN0 : out STD_LOGIC;
    IRQ_P2F_USB1 : out STD_LOGIC;
    IRQ_P2F_ENET1 : out STD_LOGIC;
    IRQ_P2F_ENET_WAKE1 : out STD_LOGIC;
    IRQ_P2F_SDIO1 : out STD_LOGIC;
    IRQ_P2F_I2C1 : out STD_LOGIC;
    IRQ_P2F_SPI1 : out STD_LOGIC;
    IRQ_P2F_UART1 : out STD_LOGIC;
    IRQ_P2F_CAN1 : out STD_LOGIC;
    IRQ_F2P : in STD_LOGIC_VECTOR ( 0 to 0 );
    Core0_nFIQ : in STD_LOGIC;
    Core0_nIRQ : in STD_LOGIC;
    Core1_nFIQ : in STD_LOGIC;
    Core1_nIRQ : in STD_LOGIC;
    DMA0_DATYPE : out STD_LOGIC_VECTOR ( 1 downto 0 );
    DMA0_DAVALID : out STD_LOGIC;
    DMA0_DRREADY : out STD_LOGIC;
    DMA0_RSTN : out STD_LOGIC;
    DMA1_DATYPE : out STD_LOGIC_VECTOR ( 1 downto 0 );
    DMA1_DAVALID : out STD_LOGIC;
    DMA1_DRREADY : out STD_LOGIC;
    DMA1_RSTN : out STD_LOGIC;
    DMA2_DATYPE : out STD_LOGIC_VECTOR ( 1 downto 0 );
    DMA2_DAVALID : out STD_LOGIC;
    DMA2_DRREADY : out STD_LOGIC;
    DMA2_RSTN : out STD_LOGIC;
    DMA3_DATYPE : out STD_LOGIC_VECTOR ( 1 downto 0 );
    DMA3_DAVALID : out STD_LOGIC;
    DMA3_DRREADY : out STD_LOGIC;
    DMA3_RSTN : out STD_LOGIC;
    DMA0_ACLK : in STD_LOGIC;
    DMA0_DAREADY : in STD_LOGIC;
    DMA0_DRLAST : in STD_LOGIC;
    DMA0_DRVALID : in STD_LOGIC;
    DMA1_ACLK : in STD_LOGIC;
    DMA1_DAREADY : in STD_LOGIC;
    DMA1_DRLAST : in STD_LOGIC;
    DMA1_DRVALID : in STD_LOGIC;
    DMA2_ACLK : in STD_LOGIC;
    DMA2_DAREADY : in STD_LOGIC;
    DMA2_DRLAST : in STD_LOGIC;
    DMA2_DRVALID : in STD_LOGIC;
    DMA3_ACLK : in STD_LOGIC;
    DMA3_DAREADY : in STD_LOGIC;
    DMA3_DRLAST : in STD_LOGIC;
    DMA3_DRVALID : in STD_LOGIC;
    DMA0_DRTYPE : in STD_LOGIC_VECTOR ( 1 downto 0 );
    DMA1_DRTYPE : in STD_LOGIC_VECTOR ( 1 downto 0 );
    DMA2_DRTYPE : in STD_LOGIC_VECTOR ( 1 downto 0 );
    DMA3_DRTYPE : in STD_LOGIC_VECTOR ( 1 downto 0 );
    FCLK_CLK3 : out STD_LOGIC;
    FCLK_CLK2 : out STD_LOGIC;
    FCLK_CLK1 : out STD_LOGIC;
    FCLK_CLK0 : out STD_LOGIC;
    FCLK_CLKTRIG3_N : in STD_LOGIC;
    FCLK_CLKTRIG2_N : in STD_LOGIC;
    FCLK_CLKTRIG1_N : in STD_LOGIC;
    FCLK_CLKTRIG0_N : in STD_LOGIC;
    FCLK_RESET3_N : out STD_LOGIC;
    FCLK_RESET2_N : out STD_LOGIC;
    FCLK_RESET1_N : out STD_LOGIC;
    FCLK_RESET0_N : out STD_LOGIC;
    FTMD_TRACEIN_DATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    FTMD_TRACEIN_VALID : in STD_LOGIC;
    FTMD_TRACEIN_CLK : in STD_LOGIC;
    FTMD_TRACEIN_ATID : in STD_LOGIC_VECTOR ( 3 downto 0 );
    FTMT_F2P_TRIG_0 : in STD_LOGIC;
    FTMT_F2P_TRIGACK_0 : out STD_LOGIC;
    FTMT_F2P_TRIG_1 : in STD_LOGIC;
    FTMT_F2P_TRIGACK_1 : out STD_LOGIC;
    FTMT_F2P_TRIG_2 : in STD_LOGIC;
    FTMT_F2P_TRIGACK_2 : out STD_LOGIC;
    FTMT_F2P_TRIG_3 : in STD_LOGIC;
    FTMT_F2P_TRIGACK_3 : out STD_LOGIC;
    FTMT_F2P_DEBUG : in STD_LOGIC_VECTOR ( 31 downto 0 );
    FTMT_P2F_TRIGACK_0 : in STD_LOGIC;
    FTMT_P2F_TRIG_0 : out STD_LOGIC;
    FTMT_P2F_TRIGACK_1 : in STD_LOGIC;
    FTMT_P2F_TRIG_1 : out STD_LOGIC;
    FTMT_P2F_TRIGACK_2 : in STD_LOGIC;
    FTMT_P2F_TRIG_2 : out STD_LOGIC;
    FTMT_P2F_TRIGACK_3 : in STD_LOGIC;
    FTMT_P2F_TRIG_3 : out STD_LOGIC;
    FTMT_P2F_DEBUG : out STD_LOGIC_VECTOR ( 31 downto 0 );
    FPGA_IDLE_N : in STD_LOGIC;
    EVENT_EVENTO : out STD_LOGIC;
    EVENT_STANDBYWFE : out STD_LOGIC_VECTOR ( 1 downto 0 );
    EVENT_STANDBYWFI : out STD_LOGIC_VECTOR ( 1 downto 0 );
    EVENT_EVENTI : in STD_LOGIC;
    DDR_ARB : in STD_LOGIC_VECTOR ( 3 downto 0 );
    MIO : inout STD_LOGIC_VECTOR ( 53 downto 0 );
    DDR_CAS_n : inout STD_LOGIC;
    DDR_CKE : inout STD_LOGIC;
    DDR_Clk_n : inout STD_LOGIC;
    DDR_Clk : inout STD_LOGIC;
    DDR_CS_n : inout STD_LOGIC;
    DDR_DRSTB : inout STD_LOGIC;
    DDR_ODT : inout STD_LOGIC;
    DDR_RAS_n : inout STD_LOGIC;
    DDR_WEB : inout STD_LOGIC;
    DDR_BankAddr : inout STD_LOGIC_VECTOR ( 2 downto 0 );
    DDR_Addr : inout STD_LOGIC_VECTOR ( 14 downto 0 );
    DDR_VRN : inout STD_LOGIC;
    DDR_VRP : inout STD_LOGIC;
    DDR_DM : inout STD_LOGIC_VECTOR ( 3 downto 0 );
    DDR_DQ : inout STD_LOGIC_VECTOR ( 31 downto 0 );
    DDR_DQS_n : inout STD_LOGIC_VECTOR ( 3 downto 0 );
    DDR_DQS : inout STD_LOGIC_VECTOR ( 3 downto 0 );
    PS_SRSTB : inout STD_LOGIC;
    PS_CLK : inout STD_LOGIC;
    PS_PORB : inout STD_LOGIC
  );
  attribute C_DM_WIDTH : integer;
  attribute C_DM_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 4;
  attribute C_DQS_WIDTH : integer;
  attribute C_DQS_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 4;
  attribute C_DQ_WIDTH : integer;
  attribute C_DQ_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 32;
  attribute C_EMIO_GPIO_WIDTH : integer;
  attribute C_EMIO_GPIO_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 64;
  attribute C_EN_EMIO_ENET0 : integer;
  attribute C_EN_EMIO_ENET0 of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_EN_EMIO_ENET1 : integer;
  attribute C_EN_EMIO_ENET1 of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_EN_EMIO_PJTAG : integer;
  attribute C_EN_EMIO_PJTAG of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_EN_EMIO_TRACE : integer;
  attribute C_EN_EMIO_TRACE of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_FCLK_CLK0_BUF : string;
  attribute C_FCLK_CLK0_BUF of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is "TRUE";
  attribute C_FCLK_CLK1_BUF : string;
  attribute C_FCLK_CLK1_BUF of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is "FALSE";
  attribute C_FCLK_CLK2_BUF : string;
  attribute C_FCLK_CLK2_BUF of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is "FALSE";
  attribute C_FCLK_CLK3_BUF : string;
  attribute C_FCLK_CLK3_BUF of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is "FALSE";
  attribute C_GP0_EN_MODIFIABLE_TXN : integer;
  attribute C_GP0_EN_MODIFIABLE_TXN of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 1;
  attribute C_GP1_EN_MODIFIABLE_TXN : integer;
  attribute C_GP1_EN_MODIFIABLE_TXN of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 1;
  attribute C_INCLUDE_ACP_TRANS_CHECK : integer;
  attribute C_INCLUDE_ACP_TRANS_CHECK of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_INCLUDE_TRACE_BUFFER : integer;
  attribute C_INCLUDE_TRACE_BUFFER of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_IRQ_F2P_MODE : string;
  attribute C_IRQ_F2P_MODE of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is "DIRECT";
  attribute C_MIO_PRIMITIVE : integer;
  attribute C_MIO_PRIMITIVE of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 54;
  attribute C_M_AXI_GP0_ENABLE_STATIC_REMAP : integer;
  attribute C_M_AXI_GP0_ENABLE_STATIC_REMAP of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_M_AXI_GP0_ID_WIDTH : integer;
  attribute C_M_AXI_GP0_ID_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 12;
  attribute C_M_AXI_GP0_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_GP0_THREAD_ID_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 12;
  attribute C_M_AXI_GP1_ENABLE_STATIC_REMAP : integer;
  attribute C_M_AXI_GP1_ENABLE_STATIC_REMAP of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_M_AXI_GP1_ID_WIDTH : integer;
  attribute C_M_AXI_GP1_ID_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 12;
  attribute C_M_AXI_GP1_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_GP1_THREAD_ID_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 12;
  attribute C_NUM_F2P_INTR_INPUTS : integer;
  attribute C_NUM_F2P_INTR_INPUTS of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 1;
  attribute C_PACKAGE_NAME : string;
  attribute C_PACKAGE_NAME of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is "clg484";
  attribute C_PS7_SI_REV : string;
  attribute C_PS7_SI_REV of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is "PRODUCTION";
  attribute C_S_AXI_ACP_ARUSER_VAL : integer;
  attribute C_S_AXI_ACP_ARUSER_VAL of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 31;
  attribute C_S_AXI_ACP_AWUSER_VAL : integer;
  attribute C_S_AXI_ACP_AWUSER_VAL of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 31;
  attribute C_S_AXI_ACP_ID_WIDTH : integer;
  attribute C_S_AXI_ACP_ID_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 3;
  attribute C_S_AXI_GP0_ID_WIDTH : integer;
  attribute C_S_AXI_GP0_ID_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 6;
  attribute C_S_AXI_GP1_ID_WIDTH : integer;
  attribute C_S_AXI_GP1_ID_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 6;
  attribute C_S_AXI_HP0_DATA_WIDTH : integer;
  attribute C_S_AXI_HP0_DATA_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 64;
  attribute C_S_AXI_HP0_ID_WIDTH : integer;
  attribute C_S_AXI_HP0_ID_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 6;
  attribute C_S_AXI_HP1_DATA_WIDTH : integer;
  attribute C_S_AXI_HP1_DATA_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 64;
  attribute C_S_AXI_HP1_ID_WIDTH : integer;
  attribute C_S_AXI_HP1_ID_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 6;
  attribute C_S_AXI_HP2_DATA_WIDTH : integer;
  attribute C_S_AXI_HP2_DATA_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 64;
  attribute C_S_AXI_HP2_ID_WIDTH : integer;
  attribute C_S_AXI_HP2_ID_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 6;
  attribute C_S_AXI_HP3_DATA_WIDTH : integer;
  attribute C_S_AXI_HP3_DATA_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 64;
  attribute C_S_AXI_HP3_ID_WIDTH : integer;
  attribute C_S_AXI_HP3_ID_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 6;
  attribute C_TRACE_BUFFER_CLOCK_DELAY : integer;
  attribute C_TRACE_BUFFER_CLOCK_DELAY of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 12;
  attribute C_TRACE_BUFFER_FIFO_SIZE : integer;
  attribute C_TRACE_BUFFER_FIFO_SIZE of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 128;
  attribute C_TRACE_INTERNAL_WIDTH : integer;
  attribute C_TRACE_INTERNAL_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 2;
  attribute C_TRACE_PIPELINE_WIDTH : integer;
  attribute C_TRACE_PIPELINE_WIDTH of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 8;
  attribute C_USE_AXI_NONSECURE : integer;
  attribute C_USE_AXI_NONSECURE of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_USE_DEFAULT_ACP_USER_VAL : integer;
  attribute C_USE_DEFAULT_ACP_USER_VAL of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_USE_M_AXI_GP0 : integer;
  attribute C_USE_M_AXI_GP0 of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 1;
  attribute C_USE_M_AXI_GP1 : integer;
  attribute C_USE_M_AXI_GP1 of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_USE_S_AXI_ACP : integer;
  attribute C_USE_S_AXI_ACP of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_USE_S_AXI_GP0 : integer;
  attribute C_USE_S_AXI_GP0 of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_USE_S_AXI_GP1 : integer;
  attribute C_USE_S_AXI_GP1 of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_USE_S_AXI_HP0 : integer;
  attribute C_USE_S_AXI_HP0 of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_USE_S_AXI_HP1 : integer;
  attribute C_USE_S_AXI_HP1 of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_USE_S_AXI_HP2 : integer;
  attribute C_USE_S_AXI_HP2 of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute C_USE_S_AXI_HP3 : integer;
  attribute C_USE_S_AXI_HP3 of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is "processing_system7_v5_5_processing_system7";
  attribute POWER : string;
  attribute POWER of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is "<PROCESSOR name={system} numA9Cores={2} clockFreq={666.666667} load={0.5} /><MEMORY name={code} memType={DDR3} dataWidth={32} clockFreq={533.333313} readRate={0.5} writeRate={0.5} /><IO interface={GPIO_Bank_1} ioStandard={LVCMOS18} bidis={2} ioBank={Vcco_p1} clockFreq={1} usageRate={0.5} /><IO interface={GPIO_Bank_0} ioStandard={LVCMOS33} bidis={10} ioBank={Vcco_p0} clockFreq={1} usageRate={0.5} /><IO interface={Timer} ioStandard={} bidis={0} ioBank={} clockFreq={111.111115} usageRate={0.5} /><IO interface={UART} ioStandard={LVCMOS18} bidis={2} ioBank={Vcco_p1} clockFreq={50.000000} usageRate={0.5} /><IO interface={SD} ioStandard={LVCMOS18} bidis={8} ioBank={Vcco_p1} clockFreq={50.000000} usageRate={0.5} /><IO interface={USB} ioStandard={LVCMOS18} bidis={12} ioBank={Vcco_p1} clockFreq={60} usageRate={0.5} /><IO interface={GigE} ioStandard={LVCMOS18} bidis={14} ioBank={Vcco_p1} clockFreq={125.000000} usageRate={0.5} /><IO interface={QSPI} ioStandard={LVCMOS33} bidis={6} ioBank={Vcco_p0} clockFreq={200.000000} usageRate={0.5} /><PLL domain={Processor} vco={1333.333} /><PLL domain={Memory} vco={1066.667} /><PLL domain={IO} vco={1000.000} /><AXI interface={M_AXI_GP0} dataWidth={32} clockFreq={100} usageRate={0.5} />/>";
  attribute USE_TRACE_DATA_EDGE_DETECTOR : integer;
  attribute USE_TRACE_DATA_EDGE_DETECTOR of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is 0;
  attribute hw_handoff : string;
  attribute hw_handoff of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 : entity is "design_1_processing_system7_0_0.hwdef";
end design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7;

architecture STRUCTURE of design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal ENET0_MDIO_T_n : STD_LOGIC;
  signal ENET1_MDIO_T_n : STD_LOGIC;
  signal FCLK_CLK_unbuffered : STD_LOGIC_VECTOR ( 0 to 0 );
  signal I2C0_SCL_T_n : STD_LOGIC;
  signal I2C0_SDA_T_n : STD_LOGIC;
  signal I2C1_SCL_T_n : STD_LOGIC;
  signal I2C1_SDA_T_n : STD_LOGIC;
  signal \^m_axi_gp0_arcache\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^m_axi_gp0_arsize\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^m_axi_gp0_awcache\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^m_axi_gp0_awsize\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^m_axi_gp1_arcache\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^m_axi_gp1_arsize\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^m_axi_gp1_awcache\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^m_axi_gp1_awsize\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal SDIO0_CMD_T_n : STD_LOGIC;
  signal SDIO0_DATA_T_n : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal SDIO1_CMD_T_n : STD_LOGIC;
  signal SDIO1_DATA_T_n : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal SPI0_MISO_T_n : STD_LOGIC;
  signal SPI0_MOSI_T_n : STD_LOGIC;
  signal SPI0_SCLK_T_n : STD_LOGIC;
  signal SPI0_SS_T_n : STD_LOGIC;
  signal SPI1_MISO_T_n : STD_LOGIC;
  signal SPI1_MOSI_T_n : STD_LOGIC;
  signal SPI1_SCLK_T_n : STD_LOGIC;
  signal SPI1_SS_T_n : STD_LOGIC;
  signal \TRACE_CTL_PIPE[0]\ : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \TRACE_CTL_PIPE[0]\ : signal is "true";
  signal \TRACE_CTL_PIPE[1]\ : STD_LOGIC;
  attribute RTL_KEEP of \TRACE_CTL_PIPE[1]\ : signal is "true";
  signal \TRACE_CTL_PIPE[2]\ : STD_LOGIC;
  attribute RTL_KEEP of \TRACE_CTL_PIPE[2]\ : signal is "true";
  signal \TRACE_CTL_PIPE[3]\ : STD_LOGIC;
  attribute RTL_KEEP of \TRACE_CTL_PIPE[3]\ : signal is "true";
  signal \TRACE_CTL_PIPE[4]\ : STD_LOGIC;
  attribute RTL_KEEP of \TRACE_CTL_PIPE[4]\ : signal is "true";
  signal \TRACE_CTL_PIPE[5]\ : STD_LOGIC;
  attribute RTL_KEEP of \TRACE_CTL_PIPE[5]\ : signal is "true";
  signal \TRACE_CTL_PIPE[6]\ : STD_LOGIC;
  attribute RTL_KEEP of \TRACE_CTL_PIPE[6]\ : signal is "true";
  signal \TRACE_CTL_PIPE[7]\ : STD_LOGIC;
  attribute RTL_KEEP of \TRACE_CTL_PIPE[7]\ : signal is "true";
  signal \TRACE_DATA_PIPE[0]\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute RTL_KEEP of \TRACE_DATA_PIPE[0]\ : signal is "true";
  signal \TRACE_DATA_PIPE[1]\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute RTL_KEEP of \TRACE_DATA_PIPE[1]\ : signal is "true";
  signal \TRACE_DATA_PIPE[2]\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute RTL_KEEP of \TRACE_DATA_PIPE[2]\ : signal is "true";
  signal \TRACE_DATA_PIPE[3]\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute RTL_KEEP of \TRACE_DATA_PIPE[3]\ : signal is "true";
  signal \TRACE_DATA_PIPE[4]\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute RTL_KEEP of \TRACE_DATA_PIPE[4]\ : signal is "true";
  signal \TRACE_DATA_PIPE[5]\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute RTL_KEEP of \TRACE_DATA_PIPE[5]\ : signal is "true";
  signal \TRACE_DATA_PIPE[6]\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute RTL_KEEP of \TRACE_DATA_PIPE[6]\ : signal is "true";
  signal \TRACE_DATA_PIPE[7]\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute RTL_KEEP of \TRACE_DATA_PIPE[7]\ : signal is "true";
  signal buffered_DDR_Addr : STD_LOGIC_VECTOR ( 14 downto 0 );
  signal buffered_DDR_BankAddr : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal buffered_DDR_CAS_n : STD_LOGIC;
  signal buffered_DDR_CKE : STD_LOGIC;
  signal buffered_DDR_CS_n : STD_LOGIC;
  signal buffered_DDR_Clk : STD_LOGIC;
  signal buffered_DDR_Clk_n : STD_LOGIC;
  signal buffered_DDR_DM : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal buffered_DDR_DQ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal buffered_DDR_DQS : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal buffered_DDR_DQS_n : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal buffered_DDR_DRSTB : STD_LOGIC;
  signal buffered_DDR_ODT : STD_LOGIC;
  signal buffered_DDR_RAS_n : STD_LOGIC;
  signal buffered_DDR_VRN : STD_LOGIC;
  signal buffered_DDR_VRP : STD_LOGIC;
  signal buffered_DDR_WEB : STD_LOGIC;
  signal buffered_MIO : STD_LOGIC_VECTOR ( 53 downto 0 );
  signal buffered_PS_CLK : STD_LOGIC;
  signal buffered_PS_PORB : STD_LOGIC;
  signal buffered_PS_SRSTB : STD_LOGIC;
  signal gpio_out_t_n : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_PS7_i_EMIOENET0GMIITXEN_UNCONNECTED : STD_LOGIC;
  signal NLW_PS7_i_EMIOENET0GMIITXER_UNCONNECTED : STD_LOGIC;
  signal NLW_PS7_i_EMIOENET1GMIITXEN_UNCONNECTED : STD_LOGIC;
  signal NLW_PS7_i_EMIOENET1GMIITXER_UNCONNECTED : STD_LOGIC;
  signal NLW_PS7_i_EMIOPJTAGTDO_UNCONNECTED : STD_LOGIC;
  signal NLW_PS7_i_EMIOPJTAGTDTN_UNCONNECTED : STD_LOGIC;
  signal NLW_PS7_i_EMIOTRACECTL_UNCONNECTED : STD_LOGIC;
  signal NLW_PS7_i_EMIOENET0GMIITXD_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_PS7_i_EMIOENET1GMIITXD_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_PS7_i_EMIOTRACEDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_PS7_i_MAXIGP0ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 1 to 1 );
  signal NLW_PS7_i_MAXIGP0AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 1 to 1 );
  signal NLW_PS7_i_MAXIGP1ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 1 to 1 );
  signal NLW_PS7_i_MAXIGP1AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 1 to 1 );
  attribute box_type : string;
  attribute box_type of DDR_CAS_n_BIBUF : label is "PRIMITIVE";
  attribute box_type of DDR_CKE_BIBUF : label is "PRIMITIVE";
  attribute box_type of DDR_CS_n_BIBUF : label is "PRIMITIVE";
  attribute box_type of DDR_Clk_BIBUF : label is "PRIMITIVE";
  attribute box_type of DDR_Clk_n_BIBUF : label is "PRIMITIVE";
  attribute box_type of DDR_DRSTB_BIBUF : label is "PRIMITIVE";
  attribute box_type of DDR_ODT_BIBUF : label is "PRIMITIVE";
  attribute box_type of DDR_RAS_n_BIBUF : label is "PRIMITIVE";
  attribute box_type of DDR_VRN_BIBUF : label is "PRIMITIVE";
  attribute box_type of DDR_VRP_BIBUF : label is "PRIMITIVE";
  attribute box_type of DDR_WEB_BIBUF : label is "PRIMITIVE";
  attribute box_type of PS7_i : label is "PRIMITIVE";
  attribute box_type of PS_CLK_BIBUF : label is "PRIMITIVE";
  attribute box_type of PS_PORB_BIBUF : label is "PRIMITIVE";
  attribute box_type of PS_SRSTB_BIBUF : label is "PRIMITIVE";
  attribute box_type of \buffer_fclk_clk_0.FCLK_CLK_0_BUFG\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[0].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[10].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[11].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[12].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[13].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[14].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[15].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[16].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[17].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[18].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[19].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[1].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[20].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[21].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[22].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[23].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[24].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[25].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[26].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[27].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[28].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[29].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[2].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[30].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[31].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[32].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[33].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[34].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[35].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[36].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[37].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[38].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[39].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[3].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[40].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[41].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[42].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[43].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[44].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[45].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[46].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[47].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[48].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[49].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[4].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[50].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[51].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[52].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[53].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[5].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[6].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[7].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[8].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk13[9].MIO_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk14[0].DDR_BankAddr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk14[1].DDR_BankAddr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk14[2].DDR_BankAddr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk15[0].DDR_Addr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk15[10].DDR_Addr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk15[11].DDR_Addr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk15[12].DDR_Addr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk15[13].DDR_Addr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk15[14].DDR_Addr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk15[1].DDR_Addr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk15[2].DDR_Addr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk15[3].DDR_Addr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk15[4].DDR_Addr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk15[5].DDR_Addr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk15[6].DDR_Addr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk15[7].DDR_Addr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk15[8].DDR_Addr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk15[9].DDR_Addr_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk16[0].DDR_DM_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk16[1].DDR_DM_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk16[2].DDR_DM_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk16[3].DDR_DM_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[0].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[10].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[11].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[12].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[13].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[14].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[15].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[16].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[17].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[18].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[19].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[1].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[20].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[21].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[22].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[23].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[24].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[25].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[26].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[27].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[28].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[29].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[2].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[30].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[31].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[3].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[4].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[5].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[6].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[7].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[8].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk17[9].DDR_DQ_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk18[0].DDR_DQS_n_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk18[1].DDR_DQS_n_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk18[2].DDR_DQS_n_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk18[3].DDR_DQS_n_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk19[0].DDR_DQS_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk19[1].DDR_DQS_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk19[2].DDR_DQS_BIBUF\ : label is "PRIMITIVE";
  attribute box_type of \genblk19[3].DDR_DQS_BIBUF\ : label is "PRIMITIVE";
begin
  ENET0_GMII_TXD(7) <= \<const0>\;
  ENET0_GMII_TXD(6) <= \<const0>\;
  ENET0_GMII_TXD(5) <= \<const0>\;
  ENET0_GMII_TXD(4) <= \<const0>\;
  ENET0_GMII_TXD(3) <= \<const0>\;
  ENET0_GMII_TXD(2) <= \<const0>\;
  ENET0_GMII_TXD(1) <= \<const0>\;
  ENET0_GMII_TXD(0) <= \<const0>\;
  ENET0_GMII_TX_EN <= \<const0>\;
  ENET0_GMII_TX_ER <= \<const0>\;
  ENET1_GMII_TXD(7) <= \<const0>\;
  ENET1_GMII_TXD(6) <= \<const0>\;
  ENET1_GMII_TXD(5) <= \<const0>\;
  ENET1_GMII_TXD(4) <= \<const0>\;
  ENET1_GMII_TXD(3) <= \<const0>\;
  ENET1_GMII_TXD(2) <= \<const0>\;
  ENET1_GMII_TXD(1) <= \<const0>\;
  ENET1_GMII_TXD(0) <= \<const0>\;
  ENET1_GMII_TX_EN <= \<const0>\;
  ENET1_GMII_TX_ER <= \<const0>\;
  M_AXI_GP0_ARCACHE(3 downto 2) <= \^m_axi_gp0_arcache\(3 downto 2);
  M_AXI_GP0_ARCACHE(1) <= \<const1>\;
  M_AXI_GP0_ARCACHE(0) <= \^m_axi_gp0_arcache\(0);
  M_AXI_GP0_ARSIZE(2) <= \<const0>\;
  M_AXI_GP0_ARSIZE(1 downto 0) <= \^m_axi_gp0_arsize\(1 downto 0);
  M_AXI_GP0_AWCACHE(3 downto 2) <= \^m_axi_gp0_awcache\(3 downto 2);
  M_AXI_GP0_AWCACHE(1) <= \<const1>\;
  M_AXI_GP0_AWCACHE(0) <= \^m_axi_gp0_awcache\(0);
  M_AXI_GP0_AWSIZE(2) <= \<const0>\;
  M_AXI_GP0_AWSIZE(1 downto 0) <= \^m_axi_gp0_awsize\(1 downto 0);
  M_AXI_GP1_ARCACHE(3 downto 2) <= \^m_axi_gp1_arcache\(3 downto 2);
  M_AXI_GP1_ARCACHE(1) <= \<const1>\;
  M_AXI_GP1_ARCACHE(0) <= \^m_axi_gp1_arcache\(0);
  M_AXI_GP1_ARSIZE(2) <= \<const0>\;
  M_AXI_GP1_ARSIZE(1 downto 0) <= \^m_axi_gp1_arsize\(1 downto 0);
  M_AXI_GP1_AWCACHE(3 downto 2) <= \^m_axi_gp1_awcache\(3 downto 2);
  M_AXI_GP1_AWCACHE(1) <= \<const1>\;
  M_AXI_GP1_AWCACHE(0) <= \^m_axi_gp1_awcache\(0);
  M_AXI_GP1_AWSIZE(2) <= \<const0>\;
  M_AXI_GP1_AWSIZE(1 downto 0) <= \^m_axi_gp1_awsize\(1 downto 0);
  PJTAG_TDO <= \<const0>\;
  TRACE_CLK_OUT <= \<const0>\;
  TRACE_CTL <= \TRACE_CTL_PIPE[0]\;
  TRACE_DATA(1 downto 0) <= \TRACE_DATA_PIPE[0]\(1 downto 0);
DDR_CAS_n_BIBUF: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_CAS_n,
      PAD => DDR_CAS_n
    );
DDR_CKE_BIBUF: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_CKE,
      PAD => DDR_CKE
    );
DDR_CS_n_BIBUF: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_CS_n,
      PAD => DDR_CS_n
    );
DDR_Clk_BIBUF: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Clk,
      PAD => DDR_Clk
    );
DDR_Clk_n_BIBUF: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Clk_n,
      PAD => DDR_Clk_n
    );
DDR_DRSTB_BIBUF: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DRSTB,
      PAD => DDR_DRSTB
    );
DDR_ODT_BIBUF: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_ODT,
      PAD => DDR_ODT
    );
DDR_RAS_n_BIBUF: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_RAS_n,
      PAD => DDR_RAS_n
    );
DDR_VRN_BIBUF: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_VRN,
      PAD => DDR_VRN
    );
DDR_VRP_BIBUF: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_VRP,
      PAD => DDR_VRP
    );
DDR_WEB_BIBUF: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_WEB,
      PAD => DDR_WEB
    );
ENET0_MDIO_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => ENET0_MDIO_T_n,
      O => ENET0_MDIO_T
    );
ENET1_MDIO_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => ENET1_MDIO_T_n,
      O => ENET1_MDIO_T
    );
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\GPIO_T[0]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(0),
      O => GPIO_T(0)
    );
\GPIO_T[10]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(10),
      O => GPIO_T(10)
    );
\GPIO_T[11]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(11),
      O => GPIO_T(11)
    );
\GPIO_T[12]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(12),
      O => GPIO_T(12)
    );
\GPIO_T[13]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(13),
      O => GPIO_T(13)
    );
\GPIO_T[14]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(14),
      O => GPIO_T(14)
    );
\GPIO_T[15]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(15),
      O => GPIO_T(15)
    );
\GPIO_T[16]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(16),
      O => GPIO_T(16)
    );
\GPIO_T[17]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(17),
      O => GPIO_T(17)
    );
\GPIO_T[18]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(18),
      O => GPIO_T(18)
    );
\GPIO_T[19]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(19),
      O => GPIO_T(19)
    );
\GPIO_T[1]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(1),
      O => GPIO_T(1)
    );
\GPIO_T[20]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(20),
      O => GPIO_T(20)
    );
\GPIO_T[21]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(21),
      O => GPIO_T(21)
    );
\GPIO_T[22]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(22),
      O => GPIO_T(22)
    );
\GPIO_T[23]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(23),
      O => GPIO_T(23)
    );
\GPIO_T[24]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(24),
      O => GPIO_T(24)
    );
\GPIO_T[25]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(25),
      O => GPIO_T(25)
    );
\GPIO_T[26]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(26),
      O => GPIO_T(26)
    );
\GPIO_T[27]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(27),
      O => GPIO_T(27)
    );
\GPIO_T[28]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(28),
      O => GPIO_T(28)
    );
\GPIO_T[29]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(29),
      O => GPIO_T(29)
    );
\GPIO_T[2]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(2),
      O => GPIO_T(2)
    );
\GPIO_T[30]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(30),
      O => GPIO_T(30)
    );
\GPIO_T[31]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(31),
      O => GPIO_T(31)
    );
\GPIO_T[32]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(32),
      O => GPIO_T(32)
    );
\GPIO_T[33]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(33),
      O => GPIO_T(33)
    );
\GPIO_T[34]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(34),
      O => GPIO_T(34)
    );
\GPIO_T[35]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(35),
      O => GPIO_T(35)
    );
\GPIO_T[36]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(36),
      O => GPIO_T(36)
    );
\GPIO_T[37]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(37),
      O => GPIO_T(37)
    );
\GPIO_T[38]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(38),
      O => GPIO_T(38)
    );
\GPIO_T[39]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(39),
      O => GPIO_T(39)
    );
\GPIO_T[3]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(3),
      O => GPIO_T(3)
    );
\GPIO_T[40]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(40),
      O => GPIO_T(40)
    );
\GPIO_T[41]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(41),
      O => GPIO_T(41)
    );
\GPIO_T[42]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(42),
      O => GPIO_T(42)
    );
\GPIO_T[43]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(43),
      O => GPIO_T(43)
    );
\GPIO_T[44]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(44),
      O => GPIO_T(44)
    );
\GPIO_T[45]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(45),
      O => GPIO_T(45)
    );
\GPIO_T[46]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(46),
      O => GPIO_T(46)
    );
\GPIO_T[47]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(47),
      O => GPIO_T(47)
    );
\GPIO_T[48]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(48),
      O => GPIO_T(48)
    );
\GPIO_T[49]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(49),
      O => GPIO_T(49)
    );
\GPIO_T[4]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(4),
      O => GPIO_T(4)
    );
\GPIO_T[50]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(50),
      O => GPIO_T(50)
    );
\GPIO_T[51]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(51),
      O => GPIO_T(51)
    );
\GPIO_T[52]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(52),
      O => GPIO_T(52)
    );
\GPIO_T[53]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(53),
      O => GPIO_T(53)
    );
\GPIO_T[54]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(54),
      O => GPIO_T(54)
    );
\GPIO_T[55]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(55),
      O => GPIO_T(55)
    );
\GPIO_T[56]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(56),
      O => GPIO_T(56)
    );
\GPIO_T[57]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(57),
      O => GPIO_T(57)
    );
\GPIO_T[58]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(58),
      O => GPIO_T(58)
    );
\GPIO_T[59]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(59),
      O => GPIO_T(59)
    );
\GPIO_T[5]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(5),
      O => GPIO_T(5)
    );
\GPIO_T[60]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(60),
      O => GPIO_T(60)
    );
\GPIO_T[61]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(61),
      O => GPIO_T(61)
    );
\GPIO_T[62]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(62),
      O => GPIO_T(62)
    );
\GPIO_T[63]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(63),
      O => GPIO_T(63)
    );
\GPIO_T[6]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(6),
      O => GPIO_T(6)
    );
\GPIO_T[7]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(7),
      O => GPIO_T(7)
    );
\GPIO_T[8]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(8),
      O => GPIO_T(8)
    );
\GPIO_T[9]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => gpio_out_t_n(9),
      O => GPIO_T(9)
    );
I2C0_SCL_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => I2C0_SCL_T_n,
      O => I2C0_SCL_T
    );
I2C0_SDA_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => I2C0_SDA_T_n,
      O => I2C0_SDA_T
    );
I2C1_SCL_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => I2C1_SCL_T_n,
      O => I2C1_SCL_T
    );
I2C1_SDA_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => I2C1_SDA_T_n,
      O => I2C1_SDA_T
    );
PS7_i: unisim.vcomponents.PS7
     port map (
      DDRA(14 downto 0) => buffered_DDR_Addr(14 downto 0),
      DDRARB(3 downto 0) => DDR_ARB(3 downto 0),
      DDRBA(2 downto 0) => buffered_DDR_BankAddr(2 downto 0),
      DDRCASB => buffered_DDR_CAS_n,
      DDRCKE => buffered_DDR_CKE,
      DDRCKN => buffered_DDR_Clk_n,
      DDRCKP => buffered_DDR_Clk,
      DDRCSB => buffered_DDR_CS_n,
      DDRDM(3 downto 0) => buffered_DDR_DM(3 downto 0),
      DDRDQ(31 downto 0) => buffered_DDR_DQ(31 downto 0),
      DDRDQSN(3 downto 0) => buffered_DDR_DQS_n(3 downto 0),
      DDRDQSP(3 downto 0) => buffered_DDR_DQS(3 downto 0),
      DDRDRSTB => buffered_DDR_DRSTB,
      DDRODT => buffered_DDR_ODT,
      DDRRASB => buffered_DDR_RAS_n,
      DDRVRN => buffered_DDR_VRN,
      DDRVRP => buffered_DDR_VRP,
      DDRWEB => buffered_DDR_WEB,
      DMA0ACLK => DMA0_ACLK,
      DMA0DAREADY => DMA0_DAREADY,
      DMA0DATYPE(1 downto 0) => DMA0_DATYPE(1 downto 0),
      DMA0DAVALID => DMA0_DAVALID,
      DMA0DRLAST => DMA0_DRLAST,
      DMA0DRREADY => DMA0_DRREADY,
      DMA0DRTYPE(1 downto 0) => DMA0_DRTYPE(1 downto 0),
      DMA0DRVALID => DMA0_DRVALID,
      DMA0RSTN => DMA0_RSTN,
      DMA1ACLK => DMA1_ACLK,
      DMA1DAREADY => DMA1_DAREADY,
      DMA1DATYPE(1 downto 0) => DMA1_DATYPE(1 downto 0),
      DMA1DAVALID => DMA1_DAVALID,
      DMA1DRLAST => DMA1_DRLAST,
      DMA1DRREADY => DMA1_DRREADY,
      DMA1DRTYPE(1 downto 0) => DMA1_DRTYPE(1 downto 0),
      DMA1DRVALID => DMA1_DRVALID,
      DMA1RSTN => DMA1_RSTN,
      DMA2ACLK => DMA2_ACLK,
      DMA2DAREADY => DMA2_DAREADY,
      DMA2DATYPE(1 downto 0) => DMA2_DATYPE(1 downto 0),
      DMA2DAVALID => DMA2_DAVALID,
      DMA2DRLAST => DMA2_DRLAST,
      DMA2DRREADY => DMA2_DRREADY,
      DMA2DRTYPE(1 downto 0) => DMA2_DRTYPE(1 downto 0),
      DMA2DRVALID => DMA2_DRVALID,
      DMA2RSTN => DMA2_RSTN,
      DMA3ACLK => DMA3_ACLK,
      DMA3DAREADY => DMA3_DAREADY,
      DMA3DATYPE(1 downto 0) => DMA3_DATYPE(1 downto 0),
      DMA3DAVALID => DMA3_DAVALID,
      DMA3DRLAST => DMA3_DRLAST,
      DMA3DRREADY => DMA3_DRREADY,
      DMA3DRTYPE(1 downto 0) => DMA3_DRTYPE(1 downto 0),
      DMA3DRVALID => DMA3_DRVALID,
      DMA3RSTN => DMA3_RSTN,
      EMIOCAN0PHYRX => CAN0_PHY_RX,
      EMIOCAN0PHYTX => CAN0_PHY_TX,
      EMIOCAN1PHYRX => CAN1_PHY_RX,
      EMIOCAN1PHYTX => CAN1_PHY_TX,
      EMIOENET0EXTINTIN => ENET0_EXT_INTIN,
      EMIOENET0GMIICOL => '0',
      EMIOENET0GMIICRS => '0',
      EMIOENET0GMIIRXCLK => ENET0_GMII_RX_CLK,
      EMIOENET0GMIIRXD(7 downto 0) => B"00000000",
      EMIOENET0GMIIRXDV => '0',
      EMIOENET0GMIIRXER => '0',
      EMIOENET0GMIITXCLK => ENET0_GMII_TX_CLK,
      EMIOENET0GMIITXD(7 downto 0) => NLW_PS7_i_EMIOENET0GMIITXD_UNCONNECTED(7 downto 0),
      EMIOENET0GMIITXEN => NLW_PS7_i_EMIOENET0GMIITXEN_UNCONNECTED,
      EMIOENET0GMIITXER => NLW_PS7_i_EMIOENET0GMIITXER_UNCONNECTED,
      EMIOENET0MDIOI => ENET0_MDIO_I,
      EMIOENET0MDIOMDC => ENET0_MDIO_MDC,
      EMIOENET0MDIOO => ENET0_MDIO_O,
      EMIOENET0MDIOTN => ENET0_MDIO_T_n,
      EMIOENET0PTPDELAYREQRX => ENET0_PTP_DELAY_REQ_RX,
      EMIOENET0PTPDELAYREQTX => ENET0_PTP_DELAY_REQ_TX,
      EMIOENET0PTPPDELAYREQRX => ENET0_PTP_PDELAY_REQ_RX,
      EMIOENET0PTPPDELAYREQTX => ENET0_PTP_PDELAY_REQ_TX,
      EMIOENET0PTPPDELAYRESPRX => ENET0_PTP_PDELAY_RESP_RX,
      EMIOENET0PTPPDELAYRESPTX => ENET0_PTP_PDELAY_RESP_TX,
      EMIOENET0PTPSYNCFRAMERX => ENET0_PTP_SYNC_FRAME_RX,
      EMIOENET0PTPSYNCFRAMETX => ENET0_PTP_SYNC_FRAME_TX,
      EMIOENET0SOFRX => ENET0_SOF_RX,
      EMIOENET0SOFTX => ENET0_SOF_TX,
      EMIOENET1EXTINTIN => ENET1_EXT_INTIN,
      EMIOENET1GMIICOL => '0',
      EMIOENET1GMIICRS => '0',
      EMIOENET1GMIIRXCLK => ENET1_GMII_RX_CLK,
      EMIOENET1GMIIRXD(7 downto 0) => B"00000000",
      EMIOENET1GMIIRXDV => '0',
      EMIOENET1GMIIRXER => '0',
      EMIOENET1GMIITXCLK => ENET1_GMII_TX_CLK,
      EMIOENET1GMIITXD(7 downto 0) => NLW_PS7_i_EMIOENET1GMIITXD_UNCONNECTED(7 downto 0),
      EMIOENET1GMIITXEN => NLW_PS7_i_EMIOENET1GMIITXEN_UNCONNECTED,
      EMIOENET1GMIITXER => NLW_PS7_i_EMIOENET1GMIITXER_UNCONNECTED,
      EMIOENET1MDIOI => ENET1_MDIO_I,
      EMIOENET1MDIOMDC => ENET1_MDIO_MDC,
      EMIOENET1MDIOO => ENET1_MDIO_O,
      EMIOENET1MDIOTN => ENET1_MDIO_T_n,
      EMIOENET1PTPDELAYREQRX => ENET1_PTP_DELAY_REQ_RX,
      EMIOENET1PTPDELAYREQTX => ENET1_PTP_DELAY_REQ_TX,
      EMIOENET1PTPPDELAYREQRX => ENET1_PTP_PDELAY_REQ_RX,
      EMIOENET1PTPPDELAYREQTX => ENET1_PTP_PDELAY_REQ_TX,
      EMIOENET1PTPPDELAYRESPRX => ENET1_PTP_PDELAY_RESP_RX,
      EMIOENET1PTPPDELAYRESPTX => ENET1_PTP_PDELAY_RESP_TX,
      EMIOENET1PTPSYNCFRAMERX => ENET1_PTP_SYNC_FRAME_RX,
      EMIOENET1PTPSYNCFRAMETX => ENET1_PTP_SYNC_FRAME_TX,
      EMIOENET1SOFRX => ENET1_SOF_RX,
      EMIOENET1SOFTX => ENET1_SOF_TX,
      EMIOGPIOI(63 downto 0) => GPIO_I(63 downto 0),
      EMIOGPIOO(63 downto 0) => GPIO_O(63 downto 0),
      EMIOGPIOTN(63 downto 0) => gpio_out_t_n(63 downto 0),
      EMIOI2C0SCLI => I2C0_SCL_I,
      EMIOI2C0SCLO => I2C0_SCL_O,
      EMIOI2C0SCLTN => I2C0_SCL_T_n,
      EMIOI2C0SDAI => I2C0_SDA_I,
      EMIOI2C0SDAO => I2C0_SDA_O,
      EMIOI2C0SDATN => I2C0_SDA_T_n,
      EMIOI2C1SCLI => I2C1_SCL_I,
      EMIOI2C1SCLO => I2C1_SCL_O,
      EMIOI2C1SCLTN => I2C1_SCL_T_n,
      EMIOI2C1SDAI => I2C1_SDA_I,
      EMIOI2C1SDAO => I2C1_SDA_O,
      EMIOI2C1SDATN => I2C1_SDA_T_n,
      EMIOPJTAGTCK => PJTAG_TCK,
      EMIOPJTAGTDI => PJTAG_TDI,
      EMIOPJTAGTDO => NLW_PS7_i_EMIOPJTAGTDO_UNCONNECTED,
      EMIOPJTAGTDTN => NLW_PS7_i_EMIOPJTAGTDTN_UNCONNECTED,
      EMIOPJTAGTMS => PJTAG_TMS,
      EMIOSDIO0BUSPOW => SDIO0_BUSPOW,
      EMIOSDIO0BUSVOLT(2 downto 0) => SDIO0_BUSVOLT(2 downto 0),
      EMIOSDIO0CDN => SDIO0_CDN,
      EMIOSDIO0CLK => SDIO0_CLK,
      EMIOSDIO0CLKFB => SDIO0_CLK_FB,
      EMIOSDIO0CMDI => SDIO0_CMD_I,
      EMIOSDIO0CMDO => SDIO0_CMD_O,
      EMIOSDIO0CMDTN => SDIO0_CMD_T_n,
      EMIOSDIO0DATAI(3 downto 0) => SDIO0_DATA_I(3 downto 0),
      EMIOSDIO0DATAO(3 downto 0) => SDIO0_DATA_O(3 downto 0),
      EMIOSDIO0DATATN(3 downto 0) => SDIO0_DATA_T_n(3 downto 0),
      EMIOSDIO0LED => SDIO0_LED,
      EMIOSDIO0WP => SDIO0_WP,
      EMIOSDIO1BUSPOW => SDIO1_BUSPOW,
      EMIOSDIO1BUSVOLT(2 downto 0) => SDIO1_BUSVOLT(2 downto 0),
      EMIOSDIO1CDN => SDIO1_CDN,
      EMIOSDIO1CLK => SDIO1_CLK,
      EMIOSDIO1CLKFB => SDIO1_CLK_FB,
      EMIOSDIO1CMDI => SDIO1_CMD_I,
      EMIOSDIO1CMDO => SDIO1_CMD_O,
      EMIOSDIO1CMDTN => SDIO1_CMD_T_n,
      EMIOSDIO1DATAI(3 downto 0) => SDIO1_DATA_I(3 downto 0),
      EMIOSDIO1DATAO(3 downto 0) => SDIO1_DATA_O(3 downto 0),
      EMIOSDIO1DATATN(3 downto 0) => SDIO1_DATA_T_n(3 downto 0),
      EMIOSDIO1LED => SDIO1_LED,
      EMIOSDIO1WP => SDIO1_WP,
      EMIOSPI0MI => SPI0_MISO_I,
      EMIOSPI0MO => SPI0_MOSI_O,
      EMIOSPI0MOTN => SPI0_MOSI_T_n,
      EMIOSPI0SCLKI => SPI0_SCLK_I,
      EMIOSPI0SCLKO => SPI0_SCLK_O,
      EMIOSPI0SCLKTN => SPI0_SCLK_T_n,
      EMIOSPI0SI => SPI0_MOSI_I,
      EMIOSPI0SO => SPI0_MISO_O,
      EMIOSPI0SSIN => SPI0_SS_I,
      EMIOSPI0SSNTN => SPI0_SS_T_n,
      EMIOSPI0SSON(2) => SPI0_SS2_O,
      EMIOSPI0SSON(1) => SPI0_SS1_O,
      EMIOSPI0SSON(0) => SPI0_SS_O,
      EMIOSPI0STN => SPI0_MISO_T_n,
      EMIOSPI1MI => SPI1_MISO_I,
      EMIOSPI1MO => SPI1_MOSI_O,
      EMIOSPI1MOTN => SPI1_MOSI_T_n,
      EMIOSPI1SCLKI => SPI1_SCLK_I,
      EMIOSPI1SCLKO => SPI1_SCLK_O,
      EMIOSPI1SCLKTN => SPI1_SCLK_T_n,
      EMIOSPI1SI => SPI1_MOSI_I,
      EMIOSPI1SO => SPI1_MISO_O,
      EMIOSPI1SSIN => SPI1_SS_I,
      EMIOSPI1SSNTN => SPI1_SS_T_n,
      EMIOSPI1SSON(2) => SPI1_SS2_O,
      EMIOSPI1SSON(1) => SPI1_SS1_O,
      EMIOSPI1SSON(0) => SPI1_SS_O,
      EMIOSPI1STN => SPI1_MISO_T_n,
      EMIOSRAMINTIN => SRAM_INTIN,
      EMIOTRACECLK => TRACE_CLK,
      EMIOTRACECTL => NLW_PS7_i_EMIOTRACECTL_UNCONNECTED,
      EMIOTRACEDATA(31 downto 0) => NLW_PS7_i_EMIOTRACEDATA_UNCONNECTED(31 downto 0),
      EMIOTTC0CLKI(2) => TTC0_CLK2_IN,
      EMIOTTC0CLKI(1) => TTC0_CLK1_IN,
      EMIOTTC0CLKI(0) => TTC0_CLK0_IN,
      EMIOTTC0WAVEO(2) => TTC0_WAVE2_OUT,
      EMIOTTC0WAVEO(1) => TTC0_WAVE1_OUT,
      EMIOTTC0WAVEO(0) => TTC0_WAVE0_OUT,
      EMIOTTC1CLKI(2) => TTC1_CLK2_IN,
      EMIOTTC1CLKI(1) => TTC1_CLK1_IN,
      EMIOTTC1CLKI(0) => TTC1_CLK0_IN,
      EMIOTTC1WAVEO(2) => TTC1_WAVE2_OUT,
      EMIOTTC1WAVEO(1) => TTC1_WAVE1_OUT,
      EMIOTTC1WAVEO(0) => TTC1_WAVE0_OUT,
      EMIOUART0CTSN => UART0_CTSN,
      EMIOUART0DCDN => UART0_DCDN,
      EMIOUART0DSRN => UART0_DSRN,
      EMIOUART0DTRN => UART0_DTRN,
      EMIOUART0RIN => UART0_RIN,
      EMIOUART0RTSN => UART0_RTSN,
      EMIOUART0RX => UART0_RX,
      EMIOUART0TX => UART0_TX,
      EMIOUART1CTSN => UART1_CTSN,
      EMIOUART1DCDN => UART1_DCDN,
      EMIOUART1DSRN => UART1_DSRN,
      EMIOUART1DTRN => UART1_DTRN,
      EMIOUART1RIN => UART1_RIN,
      EMIOUART1RTSN => UART1_RTSN,
      EMIOUART1RX => UART1_RX,
      EMIOUART1TX => UART1_TX,
      EMIOUSB0PORTINDCTL(1 downto 0) => USB0_PORT_INDCTL(1 downto 0),
      EMIOUSB0VBUSPWRFAULT => USB0_VBUS_PWRFAULT,
      EMIOUSB0VBUSPWRSELECT => USB0_VBUS_PWRSELECT,
      EMIOUSB1PORTINDCTL(1 downto 0) => USB1_PORT_INDCTL(1 downto 0),
      EMIOUSB1VBUSPWRFAULT => USB1_VBUS_PWRFAULT,
      EMIOUSB1VBUSPWRSELECT => USB1_VBUS_PWRSELECT,
      EMIOWDTCLKI => WDT_CLK_IN,
      EMIOWDTRSTO => WDT_RST_OUT,
      EVENTEVENTI => EVENT_EVENTI,
      EVENTEVENTO => EVENT_EVENTO,
      EVENTSTANDBYWFE(1 downto 0) => EVENT_STANDBYWFE(1 downto 0),
      EVENTSTANDBYWFI(1 downto 0) => EVENT_STANDBYWFI(1 downto 0),
      FCLKCLK(3) => FCLK_CLK3,
      FCLKCLK(2) => FCLK_CLK2,
      FCLKCLK(1) => FCLK_CLK1,
      FCLKCLK(0) => FCLK_CLK_unbuffered(0),
      FCLKCLKTRIGN(3 downto 0) => B"0000",
      FCLKRESETN(3) => FCLK_RESET3_N,
      FCLKRESETN(2) => FCLK_RESET2_N,
      FCLKRESETN(1) => FCLK_RESET1_N,
      FCLKRESETN(0) => FCLK_RESET0_N,
      FPGAIDLEN => FPGA_IDLE_N,
      FTMDTRACEINATID(3 downto 0) => B"0000",
      FTMDTRACEINCLOCK => FTMD_TRACEIN_CLK,
      FTMDTRACEINDATA(31 downto 0) => B"00000000000000000000000000000000",
      FTMDTRACEINVALID => '0',
      FTMTF2PDEBUG(31 downto 0) => FTMT_F2P_DEBUG(31 downto 0),
      FTMTF2PTRIG(3) => FTMT_F2P_TRIG_3,
      FTMTF2PTRIG(2) => FTMT_F2P_TRIG_2,
      FTMTF2PTRIG(1) => FTMT_F2P_TRIG_1,
      FTMTF2PTRIG(0) => FTMT_F2P_TRIG_0,
      FTMTF2PTRIGACK(3) => FTMT_F2P_TRIGACK_3,
      FTMTF2PTRIGACK(2) => FTMT_F2P_TRIGACK_2,
      FTMTF2PTRIGACK(1) => FTMT_F2P_TRIGACK_1,
      FTMTF2PTRIGACK(0) => FTMT_F2P_TRIGACK_0,
      FTMTP2FDEBUG(31 downto 0) => FTMT_P2F_DEBUG(31 downto 0),
      FTMTP2FTRIG(3) => FTMT_P2F_TRIG_3,
      FTMTP2FTRIG(2) => FTMT_P2F_TRIG_2,
      FTMTP2FTRIG(1) => FTMT_P2F_TRIG_1,
      FTMTP2FTRIG(0) => FTMT_P2F_TRIG_0,
      FTMTP2FTRIGACK(3) => FTMT_P2F_TRIGACK_3,
      FTMTP2FTRIGACK(2) => FTMT_P2F_TRIGACK_2,
      FTMTP2FTRIGACK(1) => FTMT_P2F_TRIGACK_1,
      FTMTP2FTRIGACK(0) => FTMT_P2F_TRIGACK_0,
      IRQF2P(19) => Core1_nFIQ,
      IRQF2P(18) => Core0_nFIQ,
      IRQF2P(17) => Core1_nIRQ,
      IRQF2P(16) => Core0_nIRQ,
      IRQF2P(15 downto 1) => B"000000000000000",
      IRQF2P(0) => IRQ_F2P(0),
      IRQP2F(28) => IRQ_P2F_DMAC_ABORT,
      IRQP2F(27) => IRQ_P2F_DMAC7,
      IRQP2F(26) => IRQ_P2F_DMAC6,
      IRQP2F(25) => IRQ_P2F_DMAC5,
      IRQP2F(24) => IRQ_P2F_DMAC4,
      IRQP2F(23) => IRQ_P2F_DMAC3,
      IRQP2F(22) => IRQ_P2F_DMAC2,
      IRQP2F(21) => IRQ_P2F_DMAC1,
      IRQP2F(20) => IRQ_P2F_DMAC0,
      IRQP2F(19) => IRQ_P2F_SMC,
      IRQP2F(18) => IRQ_P2F_QSPI,
      IRQP2F(17) => IRQ_P2F_CTI,
      IRQP2F(16) => IRQ_P2F_GPIO,
      IRQP2F(15) => IRQ_P2F_USB0,
      IRQP2F(14) => IRQ_P2F_ENET0,
      IRQP2F(13) => IRQ_P2F_ENET_WAKE0,
      IRQP2F(12) => IRQ_P2F_SDIO0,
      IRQP2F(11) => IRQ_P2F_I2C0,
      IRQP2F(10) => IRQ_P2F_SPI0,
      IRQP2F(9) => IRQ_P2F_UART0,
      IRQP2F(8) => IRQ_P2F_CAN0,
      IRQP2F(7) => IRQ_P2F_USB1,
      IRQP2F(6) => IRQ_P2F_ENET1,
      IRQP2F(5) => IRQ_P2F_ENET_WAKE1,
      IRQP2F(4) => IRQ_P2F_SDIO1,
      IRQP2F(3) => IRQ_P2F_I2C1,
      IRQP2F(2) => IRQ_P2F_SPI1,
      IRQP2F(1) => IRQ_P2F_UART1,
      IRQP2F(0) => IRQ_P2F_CAN1,
      MAXIGP0ACLK => M_AXI_GP0_ACLK,
      MAXIGP0ARADDR(31 downto 0) => M_AXI_GP0_ARADDR(31 downto 0),
      MAXIGP0ARBURST(1 downto 0) => M_AXI_GP0_ARBURST(1 downto 0),
      MAXIGP0ARCACHE(3 downto 2) => \^m_axi_gp0_arcache\(3 downto 2),
      MAXIGP0ARCACHE(1) => NLW_PS7_i_MAXIGP0ARCACHE_UNCONNECTED(1),
      MAXIGP0ARCACHE(0) => \^m_axi_gp0_arcache\(0),
      MAXIGP0ARESETN => M_AXI_GP0_ARESETN,
      MAXIGP0ARID(11 downto 0) => M_AXI_GP0_ARID(11 downto 0),
      MAXIGP0ARLEN(3 downto 0) => M_AXI_GP0_ARLEN(3 downto 0),
      MAXIGP0ARLOCK(1 downto 0) => M_AXI_GP0_ARLOCK(1 downto 0),
      MAXIGP0ARPROT(2 downto 0) => M_AXI_GP0_ARPROT(2 downto 0),
      MAXIGP0ARQOS(3 downto 0) => M_AXI_GP0_ARQOS(3 downto 0),
      MAXIGP0ARREADY => M_AXI_GP0_ARREADY,
      MAXIGP0ARSIZE(1 downto 0) => \^m_axi_gp0_arsize\(1 downto 0),
      MAXIGP0ARVALID => M_AXI_GP0_ARVALID,
      MAXIGP0AWADDR(31 downto 0) => M_AXI_GP0_AWADDR(31 downto 0),
      MAXIGP0AWBURST(1 downto 0) => M_AXI_GP0_AWBURST(1 downto 0),
      MAXIGP0AWCACHE(3 downto 2) => \^m_axi_gp0_awcache\(3 downto 2),
      MAXIGP0AWCACHE(1) => NLW_PS7_i_MAXIGP0AWCACHE_UNCONNECTED(1),
      MAXIGP0AWCACHE(0) => \^m_axi_gp0_awcache\(0),
      MAXIGP0AWID(11 downto 0) => M_AXI_GP0_AWID(11 downto 0),
      MAXIGP0AWLEN(3 downto 0) => M_AXI_GP0_AWLEN(3 downto 0),
      MAXIGP0AWLOCK(1 downto 0) => M_AXI_GP0_AWLOCK(1 downto 0),
      MAXIGP0AWPROT(2 downto 0) => M_AXI_GP0_AWPROT(2 downto 0),
      MAXIGP0AWQOS(3 downto 0) => M_AXI_GP0_AWQOS(3 downto 0),
      MAXIGP0AWREADY => M_AXI_GP0_AWREADY,
      MAXIGP0AWSIZE(1 downto 0) => \^m_axi_gp0_awsize\(1 downto 0),
      MAXIGP0AWVALID => M_AXI_GP0_AWVALID,
      MAXIGP0BID(11 downto 0) => M_AXI_GP0_BID(11 downto 0),
      MAXIGP0BREADY => M_AXI_GP0_BREADY,
      MAXIGP0BRESP(1 downto 0) => M_AXI_GP0_BRESP(1 downto 0),
      MAXIGP0BVALID => M_AXI_GP0_BVALID,
      MAXIGP0RDATA(31 downto 0) => M_AXI_GP0_RDATA(31 downto 0),
      MAXIGP0RID(11 downto 0) => M_AXI_GP0_RID(11 downto 0),
      MAXIGP0RLAST => M_AXI_GP0_RLAST,
      MAXIGP0RREADY => M_AXI_GP0_RREADY,
      MAXIGP0RRESP(1 downto 0) => M_AXI_GP0_RRESP(1 downto 0),
      MAXIGP0RVALID => M_AXI_GP0_RVALID,
      MAXIGP0WDATA(31 downto 0) => M_AXI_GP0_WDATA(31 downto 0),
      MAXIGP0WID(11 downto 0) => M_AXI_GP0_WID(11 downto 0),
      MAXIGP0WLAST => M_AXI_GP0_WLAST,
      MAXIGP0WREADY => M_AXI_GP0_WREADY,
      MAXIGP0WSTRB(3 downto 0) => M_AXI_GP0_WSTRB(3 downto 0),
      MAXIGP0WVALID => M_AXI_GP0_WVALID,
      MAXIGP1ACLK => M_AXI_GP1_ACLK,
      MAXIGP1ARADDR(31 downto 0) => M_AXI_GP1_ARADDR(31 downto 0),
      MAXIGP1ARBURST(1 downto 0) => M_AXI_GP1_ARBURST(1 downto 0),
      MAXIGP1ARCACHE(3 downto 2) => \^m_axi_gp1_arcache\(3 downto 2),
      MAXIGP1ARCACHE(1) => NLW_PS7_i_MAXIGP1ARCACHE_UNCONNECTED(1),
      MAXIGP1ARCACHE(0) => \^m_axi_gp1_arcache\(0),
      MAXIGP1ARESETN => M_AXI_GP1_ARESETN,
      MAXIGP1ARID(11 downto 0) => M_AXI_GP1_ARID(11 downto 0),
      MAXIGP1ARLEN(3 downto 0) => M_AXI_GP1_ARLEN(3 downto 0),
      MAXIGP1ARLOCK(1 downto 0) => M_AXI_GP1_ARLOCK(1 downto 0),
      MAXIGP1ARPROT(2 downto 0) => M_AXI_GP1_ARPROT(2 downto 0),
      MAXIGP1ARQOS(3 downto 0) => M_AXI_GP1_ARQOS(3 downto 0),
      MAXIGP1ARREADY => M_AXI_GP1_ARREADY,
      MAXIGP1ARSIZE(1 downto 0) => \^m_axi_gp1_arsize\(1 downto 0),
      MAXIGP1ARVALID => M_AXI_GP1_ARVALID,
      MAXIGP1AWADDR(31 downto 0) => M_AXI_GP1_AWADDR(31 downto 0),
      MAXIGP1AWBURST(1 downto 0) => M_AXI_GP1_AWBURST(1 downto 0),
      MAXIGP1AWCACHE(3 downto 2) => \^m_axi_gp1_awcache\(3 downto 2),
      MAXIGP1AWCACHE(1) => NLW_PS7_i_MAXIGP1AWCACHE_UNCONNECTED(1),
      MAXIGP1AWCACHE(0) => \^m_axi_gp1_awcache\(0),
      MAXIGP1AWID(11 downto 0) => M_AXI_GP1_AWID(11 downto 0),
      MAXIGP1AWLEN(3 downto 0) => M_AXI_GP1_AWLEN(3 downto 0),
      MAXIGP1AWLOCK(1 downto 0) => M_AXI_GP1_AWLOCK(1 downto 0),
      MAXIGP1AWPROT(2 downto 0) => M_AXI_GP1_AWPROT(2 downto 0),
      MAXIGP1AWQOS(3 downto 0) => M_AXI_GP1_AWQOS(3 downto 0),
      MAXIGP1AWREADY => M_AXI_GP1_AWREADY,
      MAXIGP1AWSIZE(1 downto 0) => \^m_axi_gp1_awsize\(1 downto 0),
      MAXIGP1AWVALID => M_AXI_GP1_AWVALID,
      MAXIGP1BID(11 downto 0) => M_AXI_GP1_BID(11 downto 0),
      MAXIGP1BREADY => M_AXI_GP1_BREADY,
      MAXIGP1BRESP(1 downto 0) => M_AXI_GP1_BRESP(1 downto 0),
      MAXIGP1BVALID => M_AXI_GP1_BVALID,
      MAXIGP1RDATA(31 downto 0) => M_AXI_GP1_RDATA(31 downto 0),
      MAXIGP1RID(11 downto 0) => M_AXI_GP1_RID(11 downto 0),
      MAXIGP1RLAST => M_AXI_GP1_RLAST,
      MAXIGP1RREADY => M_AXI_GP1_RREADY,
      MAXIGP1RRESP(1 downto 0) => M_AXI_GP1_RRESP(1 downto 0),
      MAXIGP1RVALID => M_AXI_GP1_RVALID,
      MAXIGP1WDATA(31 downto 0) => M_AXI_GP1_WDATA(31 downto 0),
      MAXIGP1WID(11 downto 0) => M_AXI_GP1_WID(11 downto 0),
      MAXIGP1WLAST => M_AXI_GP1_WLAST,
      MAXIGP1WREADY => M_AXI_GP1_WREADY,
      MAXIGP1WSTRB(3 downto 0) => M_AXI_GP1_WSTRB(3 downto 0),
      MAXIGP1WVALID => M_AXI_GP1_WVALID,
      MIO(53 downto 0) => buffered_MIO(53 downto 0),
      PSCLK => buffered_PS_CLK,
      PSPORB => buffered_PS_PORB,
      PSSRSTB => buffered_PS_SRSTB,
      SAXIACPACLK => S_AXI_ACP_ACLK,
      SAXIACPARADDR(31 downto 0) => S_AXI_ACP_ARADDR(31 downto 0),
      SAXIACPARBURST(1 downto 0) => S_AXI_ACP_ARBURST(1 downto 0),
      SAXIACPARCACHE(3 downto 0) => S_AXI_ACP_ARCACHE(3 downto 0),
      SAXIACPARESETN => S_AXI_ACP_ARESETN,
      SAXIACPARID(2 downto 0) => S_AXI_ACP_ARID(2 downto 0),
      SAXIACPARLEN(3 downto 0) => S_AXI_ACP_ARLEN(3 downto 0),
      SAXIACPARLOCK(1 downto 0) => S_AXI_ACP_ARLOCK(1 downto 0),
      SAXIACPARPROT(2 downto 0) => S_AXI_ACP_ARPROT(2 downto 0),
      SAXIACPARQOS(3 downto 0) => S_AXI_ACP_ARQOS(3 downto 0),
      SAXIACPARREADY => S_AXI_ACP_ARREADY,
      SAXIACPARSIZE(1 downto 0) => S_AXI_ACP_ARSIZE(1 downto 0),
      SAXIACPARUSER(4 downto 0) => S_AXI_ACP_ARUSER(4 downto 0),
      SAXIACPARVALID => S_AXI_ACP_ARVALID,
      SAXIACPAWADDR(31 downto 0) => S_AXI_ACP_AWADDR(31 downto 0),
      SAXIACPAWBURST(1 downto 0) => S_AXI_ACP_AWBURST(1 downto 0),
      SAXIACPAWCACHE(3 downto 0) => S_AXI_ACP_AWCACHE(3 downto 0),
      SAXIACPAWID(2 downto 0) => S_AXI_ACP_AWID(2 downto 0),
      SAXIACPAWLEN(3 downto 0) => S_AXI_ACP_AWLEN(3 downto 0),
      SAXIACPAWLOCK(1 downto 0) => S_AXI_ACP_AWLOCK(1 downto 0),
      SAXIACPAWPROT(2 downto 0) => S_AXI_ACP_AWPROT(2 downto 0),
      SAXIACPAWQOS(3 downto 0) => S_AXI_ACP_AWQOS(3 downto 0),
      SAXIACPAWREADY => S_AXI_ACP_AWREADY,
      SAXIACPAWSIZE(1 downto 0) => S_AXI_ACP_AWSIZE(1 downto 0),
      SAXIACPAWUSER(4 downto 0) => S_AXI_ACP_AWUSER(4 downto 0),
      SAXIACPAWVALID => S_AXI_ACP_AWVALID,
      SAXIACPBID(2 downto 0) => S_AXI_ACP_BID(2 downto 0),
      SAXIACPBREADY => S_AXI_ACP_BREADY,
      SAXIACPBRESP(1 downto 0) => S_AXI_ACP_BRESP(1 downto 0),
      SAXIACPBVALID => S_AXI_ACP_BVALID,
      SAXIACPRDATA(63 downto 0) => S_AXI_ACP_RDATA(63 downto 0),
      SAXIACPRID(2 downto 0) => S_AXI_ACP_RID(2 downto 0),
      SAXIACPRLAST => S_AXI_ACP_RLAST,
      SAXIACPRREADY => S_AXI_ACP_RREADY,
      SAXIACPRRESP(1 downto 0) => S_AXI_ACP_RRESP(1 downto 0),
      SAXIACPRVALID => S_AXI_ACP_RVALID,
      SAXIACPWDATA(63 downto 0) => S_AXI_ACP_WDATA(63 downto 0),
      SAXIACPWID(2 downto 0) => S_AXI_ACP_WID(2 downto 0),
      SAXIACPWLAST => S_AXI_ACP_WLAST,
      SAXIACPWREADY => S_AXI_ACP_WREADY,
      SAXIACPWSTRB(7 downto 0) => S_AXI_ACP_WSTRB(7 downto 0),
      SAXIACPWVALID => S_AXI_ACP_WVALID,
      SAXIGP0ACLK => S_AXI_GP0_ACLK,
      SAXIGP0ARADDR(31 downto 0) => S_AXI_GP0_ARADDR(31 downto 0),
      SAXIGP0ARBURST(1 downto 0) => S_AXI_GP0_ARBURST(1 downto 0),
      SAXIGP0ARCACHE(3 downto 0) => S_AXI_GP0_ARCACHE(3 downto 0),
      SAXIGP0ARESETN => S_AXI_GP0_ARESETN,
      SAXIGP0ARID(5 downto 0) => S_AXI_GP0_ARID(5 downto 0),
      SAXIGP0ARLEN(3 downto 0) => S_AXI_GP0_ARLEN(3 downto 0),
      SAXIGP0ARLOCK(1 downto 0) => S_AXI_GP0_ARLOCK(1 downto 0),
      SAXIGP0ARPROT(2 downto 0) => S_AXI_GP0_ARPROT(2 downto 0),
      SAXIGP0ARQOS(3 downto 0) => S_AXI_GP0_ARQOS(3 downto 0),
      SAXIGP0ARREADY => S_AXI_GP0_ARREADY,
      SAXIGP0ARSIZE(1 downto 0) => S_AXI_GP0_ARSIZE(1 downto 0),
      SAXIGP0ARVALID => S_AXI_GP0_ARVALID,
      SAXIGP0AWADDR(31 downto 0) => S_AXI_GP0_AWADDR(31 downto 0),
      SAXIGP0AWBURST(1 downto 0) => S_AXI_GP0_AWBURST(1 downto 0),
      SAXIGP0AWCACHE(3 downto 0) => S_AXI_GP0_AWCACHE(3 downto 0),
      SAXIGP0AWID(5 downto 0) => S_AXI_GP0_AWID(5 downto 0),
      SAXIGP0AWLEN(3 downto 0) => S_AXI_GP0_AWLEN(3 downto 0),
      SAXIGP0AWLOCK(1 downto 0) => S_AXI_GP0_AWLOCK(1 downto 0),
      SAXIGP0AWPROT(2 downto 0) => S_AXI_GP0_AWPROT(2 downto 0),
      SAXIGP0AWQOS(3 downto 0) => S_AXI_GP0_AWQOS(3 downto 0),
      SAXIGP0AWREADY => S_AXI_GP0_AWREADY,
      SAXIGP0AWSIZE(1 downto 0) => S_AXI_GP0_AWSIZE(1 downto 0),
      SAXIGP0AWVALID => S_AXI_GP0_AWVALID,
      SAXIGP0BID(5 downto 0) => S_AXI_GP0_BID(5 downto 0),
      SAXIGP0BREADY => S_AXI_GP0_BREADY,
      SAXIGP0BRESP(1 downto 0) => S_AXI_GP0_BRESP(1 downto 0),
      SAXIGP0BVALID => S_AXI_GP0_BVALID,
      SAXIGP0RDATA(31 downto 0) => S_AXI_GP0_RDATA(31 downto 0),
      SAXIGP0RID(5 downto 0) => S_AXI_GP0_RID(5 downto 0),
      SAXIGP0RLAST => S_AXI_GP0_RLAST,
      SAXIGP0RREADY => S_AXI_GP0_RREADY,
      SAXIGP0RRESP(1 downto 0) => S_AXI_GP0_RRESP(1 downto 0),
      SAXIGP0RVALID => S_AXI_GP0_RVALID,
      SAXIGP0WDATA(31 downto 0) => S_AXI_GP0_WDATA(31 downto 0),
      SAXIGP0WID(5 downto 0) => S_AXI_GP0_WID(5 downto 0),
      SAXIGP0WLAST => S_AXI_GP0_WLAST,
      SAXIGP0WREADY => S_AXI_GP0_WREADY,
      SAXIGP0WSTRB(3 downto 0) => S_AXI_GP0_WSTRB(3 downto 0),
      SAXIGP0WVALID => S_AXI_GP0_WVALID,
      SAXIGP1ACLK => S_AXI_GP1_ACLK,
      SAXIGP1ARADDR(31 downto 0) => S_AXI_GP1_ARADDR(31 downto 0),
      SAXIGP1ARBURST(1 downto 0) => S_AXI_GP1_ARBURST(1 downto 0),
      SAXIGP1ARCACHE(3 downto 0) => S_AXI_GP1_ARCACHE(3 downto 0),
      SAXIGP1ARESETN => S_AXI_GP1_ARESETN,
      SAXIGP1ARID(5 downto 0) => S_AXI_GP1_ARID(5 downto 0),
      SAXIGP1ARLEN(3 downto 0) => S_AXI_GP1_ARLEN(3 downto 0),
      SAXIGP1ARLOCK(1 downto 0) => S_AXI_GP1_ARLOCK(1 downto 0),
      SAXIGP1ARPROT(2 downto 0) => S_AXI_GP1_ARPROT(2 downto 0),
      SAXIGP1ARQOS(3 downto 0) => S_AXI_GP1_ARQOS(3 downto 0),
      SAXIGP1ARREADY => S_AXI_GP1_ARREADY,
      SAXIGP1ARSIZE(1 downto 0) => S_AXI_GP1_ARSIZE(1 downto 0),
      SAXIGP1ARVALID => S_AXI_GP1_ARVALID,
      SAXIGP1AWADDR(31 downto 0) => S_AXI_GP1_AWADDR(31 downto 0),
      SAXIGP1AWBURST(1 downto 0) => S_AXI_GP1_AWBURST(1 downto 0),
      SAXIGP1AWCACHE(3 downto 0) => S_AXI_GP1_AWCACHE(3 downto 0),
      SAXIGP1AWID(5 downto 0) => S_AXI_GP1_AWID(5 downto 0),
      SAXIGP1AWLEN(3 downto 0) => S_AXI_GP1_AWLEN(3 downto 0),
      SAXIGP1AWLOCK(1 downto 0) => S_AXI_GP1_AWLOCK(1 downto 0),
      SAXIGP1AWPROT(2 downto 0) => S_AXI_GP1_AWPROT(2 downto 0),
      SAXIGP1AWQOS(3 downto 0) => S_AXI_GP1_AWQOS(3 downto 0),
      SAXIGP1AWREADY => S_AXI_GP1_AWREADY,
      SAXIGP1AWSIZE(1 downto 0) => S_AXI_GP1_AWSIZE(1 downto 0),
      SAXIGP1AWVALID => S_AXI_GP1_AWVALID,
      SAXIGP1BID(5 downto 0) => S_AXI_GP1_BID(5 downto 0),
      SAXIGP1BREADY => S_AXI_GP1_BREADY,
      SAXIGP1BRESP(1 downto 0) => S_AXI_GP1_BRESP(1 downto 0),
      SAXIGP1BVALID => S_AXI_GP1_BVALID,
      SAXIGP1RDATA(31 downto 0) => S_AXI_GP1_RDATA(31 downto 0),
      SAXIGP1RID(5 downto 0) => S_AXI_GP1_RID(5 downto 0),
      SAXIGP1RLAST => S_AXI_GP1_RLAST,
      SAXIGP1RREADY => S_AXI_GP1_RREADY,
      SAXIGP1RRESP(1 downto 0) => S_AXI_GP1_RRESP(1 downto 0),
      SAXIGP1RVALID => S_AXI_GP1_RVALID,
      SAXIGP1WDATA(31 downto 0) => S_AXI_GP1_WDATA(31 downto 0),
      SAXIGP1WID(5 downto 0) => S_AXI_GP1_WID(5 downto 0),
      SAXIGP1WLAST => S_AXI_GP1_WLAST,
      SAXIGP1WREADY => S_AXI_GP1_WREADY,
      SAXIGP1WSTRB(3 downto 0) => S_AXI_GP1_WSTRB(3 downto 0),
      SAXIGP1WVALID => S_AXI_GP1_WVALID,
      SAXIHP0ACLK => S_AXI_HP0_ACLK,
      SAXIHP0ARADDR(31 downto 0) => S_AXI_HP0_ARADDR(31 downto 0),
      SAXIHP0ARBURST(1 downto 0) => S_AXI_HP0_ARBURST(1 downto 0),
      SAXIHP0ARCACHE(3 downto 0) => S_AXI_HP0_ARCACHE(3 downto 0),
      SAXIHP0ARESETN => S_AXI_HP0_ARESETN,
      SAXIHP0ARID(5 downto 0) => S_AXI_HP0_ARID(5 downto 0),
      SAXIHP0ARLEN(3 downto 0) => S_AXI_HP0_ARLEN(3 downto 0),
      SAXIHP0ARLOCK(1 downto 0) => S_AXI_HP0_ARLOCK(1 downto 0),
      SAXIHP0ARPROT(2 downto 0) => S_AXI_HP0_ARPROT(2 downto 0),
      SAXIHP0ARQOS(3 downto 0) => S_AXI_HP0_ARQOS(3 downto 0),
      SAXIHP0ARREADY => S_AXI_HP0_ARREADY,
      SAXIHP0ARSIZE(1 downto 0) => S_AXI_HP0_ARSIZE(1 downto 0),
      SAXIHP0ARVALID => S_AXI_HP0_ARVALID,
      SAXIHP0AWADDR(31 downto 0) => S_AXI_HP0_AWADDR(31 downto 0),
      SAXIHP0AWBURST(1 downto 0) => S_AXI_HP0_AWBURST(1 downto 0),
      SAXIHP0AWCACHE(3 downto 0) => S_AXI_HP0_AWCACHE(3 downto 0),
      SAXIHP0AWID(5 downto 0) => S_AXI_HP0_AWID(5 downto 0),
      SAXIHP0AWLEN(3 downto 0) => S_AXI_HP0_AWLEN(3 downto 0),
      SAXIHP0AWLOCK(1 downto 0) => S_AXI_HP0_AWLOCK(1 downto 0),
      SAXIHP0AWPROT(2 downto 0) => S_AXI_HP0_AWPROT(2 downto 0),
      SAXIHP0AWQOS(3 downto 0) => S_AXI_HP0_AWQOS(3 downto 0),
      SAXIHP0AWREADY => S_AXI_HP0_AWREADY,
      SAXIHP0AWSIZE(1 downto 0) => S_AXI_HP0_AWSIZE(1 downto 0),
      SAXIHP0AWVALID => S_AXI_HP0_AWVALID,
      SAXIHP0BID(5 downto 0) => S_AXI_HP0_BID(5 downto 0),
      SAXIHP0BREADY => S_AXI_HP0_BREADY,
      SAXIHP0BRESP(1 downto 0) => S_AXI_HP0_BRESP(1 downto 0),
      SAXIHP0BVALID => S_AXI_HP0_BVALID,
      SAXIHP0RACOUNT(2 downto 0) => S_AXI_HP0_RACOUNT(2 downto 0),
      SAXIHP0RCOUNT(7 downto 0) => S_AXI_HP0_RCOUNT(7 downto 0),
      SAXIHP0RDATA(63 downto 0) => S_AXI_HP0_RDATA(63 downto 0),
      SAXIHP0RDISSUECAP1EN => S_AXI_HP0_RDISSUECAP1_EN,
      SAXIHP0RID(5 downto 0) => S_AXI_HP0_RID(5 downto 0),
      SAXIHP0RLAST => S_AXI_HP0_RLAST,
      SAXIHP0RREADY => S_AXI_HP0_RREADY,
      SAXIHP0RRESP(1 downto 0) => S_AXI_HP0_RRESP(1 downto 0),
      SAXIHP0RVALID => S_AXI_HP0_RVALID,
      SAXIHP0WACOUNT(5 downto 0) => S_AXI_HP0_WACOUNT(5 downto 0),
      SAXIHP0WCOUNT(7 downto 0) => S_AXI_HP0_WCOUNT(7 downto 0),
      SAXIHP0WDATA(63 downto 0) => S_AXI_HP0_WDATA(63 downto 0),
      SAXIHP0WID(5 downto 0) => S_AXI_HP0_WID(5 downto 0),
      SAXIHP0WLAST => S_AXI_HP0_WLAST,
      SAXIHP0WREADY => S_AXI_HP0_WREADY,
      SAXIHP0WRISSUECAP1EN => S_AXI_HP0_WRISSUECAP1_EN,
      SAXIHP0WSTRB(7 downto 0) => S_AXI_HP0_WSTRB(7 downto 0),
      SAXIHP0WVALID => S_AXI_HP0_WVALID,
      SAXIHP1ACLK => S_AXI_HP1_ACLK,
      SAXIHP1ARADDR(31 downto 0) => S_AXI_HP1_ARADDR(31 downto 0),
      SAXIHP1ARBURST(1 downto 0) => S_AXI_HP1_ARBURST(1 downto 0),
      SAXIHP1ARCACHE(3 downto 0) => S_AXI_HP1_ARCACHE(3 downto 0),
      SAXIHP1ARESETN => S_AXI_HP1_ARESETN,
      SAXIHP1ARID(5 downto 0) => S_AXI_HP1_ARID(5 downto 0),
      SAXIHP1ARLEN(3 downto 0) => S_AXI_HP1_ARLEN(3 downto 0),
      SAXIHP1ARLOCK(1 downto 0) => S_AXI_HP1_ARLOCK(1 downto 0),
      SAXIHP1ARPROT(2 downto 0) => S_AXI_HP1_ARPROT(2 downto 0),
      SAXIHP1ARQOS(3 downto 0) => S_AXI_HP1_ARQOS(3 downto 0),
      SAXIHP1ARREADY => S_AXI_HP1_ARREADY,
      SAXIHP1ARSIZE(1 downto 0) => S_AXI_HP1_ARSIZE(1 downto 0),
      SAXIHP1ARVALID => S_AXI_HP1_ARVALID,
      SAXIHP1AWADDR(31 downto 0) => S_AXI_HP1_AWADDR(31 downto 0),
      SAXIHP1AWBURST(1 downto 0) => S_AXI_HP1_AWBURST(1 downto 0),
      SAXIHP1AWCACHE(3 downto 0) => S_AXI_HP1_AWCACHE(3 downto 0),
      SAXIHP1AWID(5 downto 0) => S_AXI_HP1_AWID(5 downto 0),
      SAXIHP1AWLEN(3 downto 0) => S_AXI_HP1_AWLEN(3 downto 0),
      SAXIHP1AWLOCK(1 downto 0) => S_AXI_HP1_AWLOCK(1 downto 0),
      SAXIHP1AWPROT(2 downto 0) => S_AXI_HP1_AWPROT(2 downto 0),
      SAXIHP1AWQOS(3 downto 0) => S_AXI_HP1_AWQOS(3 downto 0),
      SAXIHP1AWREADY => S_AXI_HP1_AWREADY,
      SAXIHP1AWSIZE(1 downto 0) => S_AXI_HP1_AWSIZE(1 downto 0),
      SAXIHP1AWVALID => S_AXI_HP1_AWVALID,
      SAXIHP1BID(5 downto 0) => S_AXI_HP1_BID(5 downto 0),
      SAXIHP1BREADY => S_AXI_HP1_BREADY,
      SAXIHP1BRESP(1 downto 0) => S_AXI_HP1_BRESP(1 downto 0),
      SAXIHP1BVALID => S_AXI_HP1_BVALID,
      SAXIHP1RACOUNT(2 downto 0) => S_AXI_HP1_RACOUNT(2 downto 0),
      SAXIHP1RCOUNT(7 downto 0) => S_AXI_HP1_RCOUNT(7 downto 0),
      SAXIHP1RDATA(63 downto 0) => S_AXI_HP1_RDATA(63 downto 0),
      SAXIHP1RDISSUECAP1EN => S_AXI_HP1_RDISSUECAP1_EN,
      SAXIHP1RID(5 downto 0) => S_AXI_HP1_RID(5 downto 0),
      SAXIHP1RLAST => S_AXI_HP1_RLAST,
      SAXIHP1RREADY => S_AXI_HP1_RREADY,
      SAXIHP1RRESP(1 downto 0) => S_AXI_HP1_RRESP(1 downto 0),
      SAXIHP1RVALID => S_AXI_HP1_RVALID,
      SAXIHP1WACOUNT(5 downto 0) => S_AXI_HP1_WACOUNT(5 downto 0),
      SAXIHP1WCOUNT(7 downto 0) => S_AXI_HP1_WCOUNT(7 downto 0),
      SAXIHP1WDATA(63 downto 0) => S_AXI_HP1_WDATA(63 downto 0),
      SAXIHP1WID(5 downto 0) => S_AXI_HP1_WID(5 downto 0),
      SAXIHP1WLAST => S_AXI_HP1_WLAST,
      SAXIHP1WREADY => S_AXI_HP1_WREADY,
      SAXIHP1WRISSUECAP1EN => S_AXI_HP1_WRISSUECAP1_EN,
      SAXIHP1WSTRB(7 downto 0) => S_AXI_HP1_WSTRB(7 downto 0),
      SAXIHP1WVALID => S_AXI_HP1_WVALID,
      SAXIHP2ACLK => S_AXI_HP2_ACLK,
      SAXIHP2ARADDR(31 downto 0) => S_AXI_HP2_ARADDR(31 downto 0),
      SAXIHP2ARBURST(1 downto 0) => S_AXI_HP2_ARBURST(1 downto 0),
      SAXIHP2ARCACHE(3 downto 0) => S_AXI_HP2_ARCACHE(3 downto 0),
      SAXIHP2ARESETN => S_AXI_HP2_ARESETN,
      SAXIHP2ARID(5 downto 0) => S_AXI_HP2_ARID(5 downto 0),
      SAXIHP2ARLEN(3 downto 0) => S_AXI_HP2_ARLEN(3 downto 0),
      SAXIHP2ARLOCK(1 downto 0) => S_AXI_HP2_ARLOCK(1 downto 0),
      SAXIHP2ARPROT(2 downto 0) => S_AXI_HP2_ARPROT(2 downto 0),
      SAXIHP2ARQOS(3 downto 0) => S_AXI_HP2_ARQOS(3 downto 0),
      SAXIHP2ARREADY => S_AXI_HP2_ARREADY,
      SAXIHP2ARSIZE(1 downto 0) => S_AXI_HP2_ARSIZE(1 downto 0),
      SAXIHP2ARVALID => S_AXI_HP2_ARVALID,
      SAXIHP2AWADDR(31 downto 0) => S_AXI_HP2_AWADDR(31 downto 0),
      SAXIHP2AWBURST(1 downto 0) => S_AXI_HP2_AWBURST(1 downto 0),
      SAXIHP2AWCACHE(3 downto 0) => S_AXI_HP2_AWCACHE(3 downto 0),
      SAXIHP2AWID(5 downto 0) => S_AXI_HP2_AWID(5 downto 0),
      SAXIHP2AWLEN(3 downto 0) => S_AXI_HP2_AWLEN(3 downto 0),
      SAXIHP2AWLOCK(1 downto 0) => S_AXI_HP2_AWLOCK(1 downto 0),
      SAXIHP2AWPROT(2 downto 0) => S_AXI_HP2_AWPROT(2 downto 0),
      SAXIHP2AWQOS(3 downto 0) => S_AXI_HP2_AWQOS(3 downto 0),
      SAXIHP2AWREADY => S_AXI_HP2_AWREADY,
      SAXIHP2AWSIZE(1 downto 0) => S_AXI_HP2_AWSIZE(1 downto 0),
      SAXIHP2AWVALID => S_AXI_HP2_AWVALID,
      SAXIHP2BID(5 downto 0) => S_AXI_HP2_BID(5 downto 0),
      SAXIHP2BREADY => S_AXI_HP2_BREADY,
      SAXIHP2BRESP(1 downto 0) => S_AXI_HP2_BRESP(1 downto 0),
      SAXIHP2BVALID => S_AXI_HP2_BVALID,
      SAXIHP2RACOUNT(2 downto 0) => S_AXI_HP2_RACOUNT(2 downto 0),
      SAXIHP2RCOUNT(7 downto 0) => S_AXI_HP2_RCOUNT(7 downto 0),
      SAXIHP2RDATA(63 downto 0) => S_AXI_HP2_RDATA(63 downto 0),
      SAXIHP2RDISSUECAP1EN => S_AXI_HP2_RDISSUECAP1_EN,
      SAXIHP2RID(5 downto 0) => S_AXI_HP2_RID(5 downto 0),
      SAXIHP2RLAST => S_AXI_HP2_RLAST,
      SAXIHP2RREADY => S_AXI_HP2_RREADY,
      SAXIHP2RRESP(1 downto 0) => S_AXI_HP2_RRESP(1 downto 0),
      SAXIHP2RVALID => S_AXI_HP2_RVALID,
      SAXIHP2WACOUNT(5 downto 0) => S_AXI_HP2_WACOUNT(5 downto 0),
      SAXIHP2WCOUNT(7 downto 0) => S_AXI_HP2_WCOUNT(7 downto 0),
      SAXIHP2WDATA(63 downto 0) => S_AXI_HP2_WDATA(63 downto 0),
      SAXIHP2WID(5 downto 0) => S_AXI_HP2_WID(5 downto 0),
      SAXIHP2WLAST => S_AXI_HP2_WLAST,
      SAXIHP2WREADY => S_AXI_HP2_WREADY,
      SAXIHP2WRISSUECAP1EN => S_AXI_HP2_WRISSUECAP1_EN,
      SAXIHP2WSTRB(7 downto 0) => S_AXI_HP2_WSTRB(7 downto 0),
      SAXIHP2WVALID => S_AXI_HP2_WVALID,
      SAXIHP3ACLK => S_AXI_HP3_ACLK,
      SAXIHP3ARADDR(31 downto 0) => S_AXI_HP3_ARADDR(31 downto 0),
      SAXIHP3ARBURST(1 downto 0) => S_AXI_HP3_ARBURST(1 downto 0),
      SAXIHP3ARCACHE(3 downto 0) => S_AXI_HP3_ARCACHE(3 downto 0),
      SAXIHP3ARESETN => S_AXI_HP3_ARESETN,
      SAXIHP3ARID(5 downto 0) => S_AXI_HP3_ARID(5 downto 0),
      SAXIHP3ARLEN(3 downto 0) => S_AXI_HP3_ARLEN(3 downto 0),
      SAXIHP3ARLOCK(1 downto 0) => S_AXI_HP3_ARLOCK(1 downto 0),
      SAXIHP3ARPROT(2 downto 0) => S_AXI_HP3_ARPROT(2 downto 0),
      SAXIHP3ARQOS(3 downto 0) => S_AXI_HP3_ARQOS(3 downto 0),
      SAXIHP3ARREADY => S_AXI_HP3_ARREADY,
      SAXIHP3ARSIZE(1 downto 0) => S_AXI_HP3_ARSIZE(1 downto 0),
      SAXIHP3ARVALID => S_AXI_HP3_ARVALID,
      SAXIHP3AWADDR(31 downto 0) => S_AXI_HP3_AWADDR(31 downto 0),
      SAXIHP3AWBURST(1 downto 0) => S_AXI_HP3_AWBURST(1 downto 0),
      SAXIHP3AWCACHE(3 downto 0) => S_AXI_HP3_AWCACHE(3 downto 0),
      SAXIHP3AWID(5 downto 0) => S_AXI_HP3_AWID(5 downto 0),
      SAXIHP3AWLEN(3 downto 0) => S_AXI_HP3_AWLEN(3 downto 0),
      SAXIHP3AWLOCK(1 downto 0) => S_AXI_HP3_AWLOCK(1 downto 0),
      SAXIHP3AWPROT(2 downto 0) => S_AXI_HP3_AWPROT(2 downto 0),
      SAXIHP3AWQOS(3 downto 0) => S_AXI_HP3_AWQOS(3 downto 0),
      SAXIHP3AWREADY => S_AXI_HP3_AWREADY,
      SAXIHP3AWSIZE(1 downto 0) => S_AXI_HP3_AWSIZE(1 downto 0),
      SAXIHP3AWVALID => S_AXI_HP3_AWVALID,
      SAXIHP3BID(5 downto 0) => S_AXI_HP3_BID(5 downto 0),
      SAXIHP3BREADY => S_AXI_HP3_BREADY,
      SAXIHP3BRESP(1 downto 0) => S_AXI_HP3_BRESP(1 downto 0),
      SAXIHP3BVALID => S_AXI_HP3_BVALID,
      SAXIHP3RACOUNT(2 downto 0) => S_AXI_HP3_RACOUNT(2 downto 0),
      SAXIHP3RCOUNT(7 downto 0) => S_AXI_HP3_RCOUNT(7 downto 0),
      SAXIHP3RDATA(63 downto 0) => S_AXI_HP3_RDATA(63 downto 0),
      SAXIHP3RDISSUECAP1EN => S_AXI_HP3_RDISSUECAP1_EN,
      SAXIHP3RID(5 downto 0) => S_AXI_HP3_RID(5 downto 0),
      SAXIHP3RLAST => S_AXI_HP3_RLAST,
      SAXIHP3RREADY => S_AXI_HP3_RREADY,
      SAXIHP3RRESP(1 downto 0) => S_AXI_HP3_RRESP(1 downto 0),
      SAXIHP3RVALID => S_AXI_HP3_RVALID,
      SAXIHP3WACOUNT(5 downto 0) => S_AXI_HP3_WACOUNT(5 downto 0),
      SAXIHP3WCOUNT(7 downto 0) => S_AXI_HP3_WCOUNT(7 downto 0),
      SAXIHP3WDATA(63 downto 0) => S_AXI_HP3_WDATA(63 downto 0),
      SAXIHP3WID(5 downto 0) => S_AXI_HP3_WID(5 downto 0),
      SAXIHP3WLAST => S_AXI_HP3_WLAST,
      SAXIHP3WREADY => S_AXI_HP3_WREADY,
      SAXIHP3WRISSUECAP1EN => S_AXI_HP3_WRISSUECAP1_EN,
      SAXIHP3WSTRB(7 downto 0) => S_AXI_HP3_WSTRB(7 downto 0),
      SAXIHP3WVALID => S_AXI_HP3_WVALID
    );
PS_CLK_BIBUF: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_PS_CLK,
      PAD => PS_CLK
    );
PS_PORB_BIBUF: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_PS_PORB,
      PAD => PS_PORB
    );
PS_SRSTB_BIBUF: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_PS_SRSTB,
      PAD => PS_SRSTB
    );
SDIO0_CMD_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SDIO0_CMD_T_n,
      O => SDIO0_CMD_T
    );
\SDIO0_DATA_T[0]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SDIO0_DATA_T_n(0),
      O => SDIO0_DATA_T(0)
    );
\SDIO0_DATA_T[1]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SDIO0_DATA_T_n(1),
      O => SDIO0_DATA_T(1)
    );
\SDIO0_DATA_T[2]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SDIO0_DATA_T_n(2),
      O => SDIO0_DATA_T(2)
    );
\SDIO0_DATA_T[3]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SDIO0_DATA_T_n(3),
      O => SDIO0_DATA_T(3)
    );
SDIO1_CMD_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SDIO1_CMD_T_n,
      O => SDIO1_CMD_T
    );
\SDIO1_DATA_T[0]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SDIO1_DATA_T_n(0),
      O => SDIO1_DATA_T(0)
    );
\SDIO1_DATA_T[1]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SDIO1_DATA_T_n(1),
      O => SDIO1_DATA_T(1)
    );
\SDIO1_DATA_T[2]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SDIO1_DATA_T_n(2),
      O => SDIO1_DATA_T(2)
    );
\SDIO1_DATA_T[3]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SDIO1_DATA_T_n(3),
      O => SDIO1_DATA_T(3)
    );
SPI0_MISO_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SPI0_MISO_T_n,
      O => SPI0_MISO_T
    );
SPI0_MOSI_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SPI0_MOSI_T_n,
      O => SPI0_MOSI_T
    );
SPI0_SCLK_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SPI0_SCLK_T_n,
      O => SPI0_SCLK_T
    );
SPI0_SS_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SPI0_SS_T_n,
      O => SPI0_SS_T
    );
SPI1_MISO_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SPI1_MISO_T_n,
      O => SPI1_MISO_T
    );
SPI1_MOSI_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SPI1_MOSI_T_n,
      O => SPI1_MOSI_T
    );
SPI1_SCLK_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SPI1_SCLK_T_n,
      O => SPI1_SCLK_T
    );
SPI1_SS_T_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => SPI1_SS_T_n,
      O => SPI1_SS_T
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
\buffer_fclk_clk_0.FCLK_CLK_0_BUFG\: unisim.vcomponents.BUFG
     port map (
      I => FCLK_CLK_unbuffered(0),
      O => FCLK_CLK0
    );
\genblk13[0].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(0),
      PAD => MIO(0)
    );
\genblk13[10].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(10),
      PAD => MIO(10)
    );
\genblk13[11].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(11),
      PAD => MIO(11)
    );
\genblk13[12].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(12),
      PAD => MIO(12)
    );
\genblk13[13].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(13),
      PAD => MIO(13)
    );
\genblk13[14].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(14),
      PAD => MIO(14)
    );
\genblk13[15].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(15),
      PAD => MIO(15)
    );
\genblk13[16].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(16),
      PAD => MIO(16)
    );
\genblk13[17].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(17),
      PAD => MIO(17)
    );
\genblk13[18].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(18),
      PAD => MIO(18)
    );
\genblk13[19].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(19),
      PAD => MIO(19)
    );
\genblk13[1].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(1),
      PAD => MIO(1)
    );
\genblk13[20].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(20),
      PAD => MIO(20)
    );
\genblk13[21].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(21),
      PAD => MIO(21)
    );
\genblk13[22].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(22),
      PAD => MIO(22)
    );
\genblk13[23].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(23),
      PAD => MIO(23)
    );
\genblk13[24].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(24),
      PAD => MIO(24)
    );
\genblk13[25].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(25),
      PAD => MIO(25)
    );
\genblk13[26].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(26),
      PAD => MIO(26)
    );
\genblk13[27].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(27),
      PAD => MIO(27)
    );
\genblk13[28].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(28),
      PAD => MIO(28)
    );
\genblk13[29].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(29),
      PAD => MIO(29)
    );
\genblk13[2].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(2),
      PAD => MIO(2)
    );
\genblk13[30].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(30),
      PAD => MIO(30)
    );
\genblk13[31].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(31),
      PAD => MIO(31)
    );
\genblk13[32].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(32),
      PAD => MIO(32)
    );
\genblk13[33].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(33),
      PAD => MIO(33)
    );
\genblk13[34].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(34),
      PAD => MIO(34)
    );
\genblk13[35].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(35),
      PAD => MIO(35)
    );
\genblk13[36].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(36),
      PAD => MIO(36)
    );
\genblk13[37].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(37),
      PAD => MIO(37)
    );
\genblk13[38].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(38),
      PAD => MIO(38)
    );
\genblk13[39].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(39),
      PAD => MIO(39)
    );
\genblk13[3].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(3),
      PAD => MIO(3)
    );
\genblk13[40].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(40),
      PAD => MIO(40)
    );
\genblk13[41].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(41),
      PAD => MIO(41)
    );
\genblk13[42].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(42),
      PAD => MIO(42)
    );
\genblk13[43].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(43),
      PAD => MIO(43)
    );
\genblk13[44].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(44),
      PAD => MIO(44)
    );
\genblk13[45].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(45),
      PAD => MIO(45)
    );
\genblk13[46].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(46),
      PAD => MIO(46)
    );
\genblk13[47].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(47),
      PAD => MIO(47)
    );
\genblk13[48].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(48),
      PAD => MIO(48)
    );
\genblk13[49].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(49),
      PAD => MIO(49)
    );
\genblk13[4].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(4),
      PAD => MIO(4)
    );
\genblk13[50].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(50),
      PAD => MIO(50)
    );
\genblk13[51].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(51),
      PAD => MIO(51)
    );
\genblk13[52].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(52),
      PAD => MIO(52)
    );
\genblk13[53].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(53),
      PAD => MIO(53)
    );
\genblk13[5].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(5),
      PAD => MIO(5)
    );
\genblk13[6].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(6),
      PAD => MIO(6)
    );
\genblk13[7].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(7),
      PAD => MIO(7)
    );
\genblk13[8].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(8),
      PAD => MIO(8)
    );
\genblk13[9].MIO_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_MIO(9),
      PAD => MIO(9)
    );
\genblk14[0].DDR_BankAddr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_BankAddr(0),
      PAD => DDR_BankAddr(0)
    );
\genblk14[1].DDR_BankAddr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_BankAddr(1),
      PAD => DDR_BankAddr(1)
    );
\genblk14[2].DDR_BankAddr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_BankAddr(2),
      PAD => DDR_BankAddr(2)
    );
\genblk15[0].DDR_Addr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Addr(0),
      PAD => DDR_Addr(0)
    );
\genblk15[10].DDR_Addr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Addr(10),
      PAD => DDR_Addr(10)
    );
\genblk15[11].DDR_Addr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Addr(11),
      PAD => DDR_Addr(11)
    );
\genblk15[12].DDR_Addr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Addr(12),
      PAD => DDR_Addr(12)
    );
\genblk15[13].DDR_Addr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Addr(13),
      PAD => DDR_Addr(13)
    );
\genblk15[14].DDR_Addr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Addr(14),
      PAD => DDR_Addr(14)
    );
\genblk15[1].DDR_Addr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Addr(1),
      PAD => DDR_Addr(1)
    );
\genblk15[2].DDR_Addr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Addr(2),
      PAD => DDR_Addr(2)
    );
\genblk15[3].DDR_Addr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Addr(3),
      PAD => DDR_Addr(3)
    );
\genblk15[4].DDR_Addr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Addr(4),
      PAD => DDR_Addr(4)
    );
\genblk15[5].DDR_Addr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Addr(5),
      PAD => DDR_Addr(5)
    );
\genblk15[6].DDR_Addr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Addr(6),
      PAD => DDR_Addr(6)
    );
\genblk15[7].DDR_Addr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Addr(7),
      PAD => DDR_Addr(7)
    );
\genblk15[8].DDR_Addr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Addr(8),
      PAD => DDR_Addr(8)
    );
\genblk15[9].DDR_Addr_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_Addr(9),
      PAD => DDR_Addr(9)
    );
\genblk16[0].DDR_DM_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DM(0),
      PAD => DDR_DM(0)
    );
\genblk16[1].DDR_DM_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DM(1),
      PAD => DDR_DM(1)
    );
\genblk16[2].DDR_DM_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DM(2),
      PAD => DDR_DM(2)
    );
\genblk16[3].DDR_DM_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DM(3),
      PAD => DDR_DM(3)
    );
\genblk17[0].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(0),
      PAD => DDR_DQ(0)
    );
\genblk17[10].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(10),
      PAD => DDR_DQ(10)
    );
\genblk17[11].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(11),
      PAD => DDR_DQ(11)
    );
\genblk17[12].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(12),
      PAD => DDR_DQ(12)
    );
\genblk17[13].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(13),
      PAD => DDR_DQ(13)
    );
\genblk17[14].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(14),
      PAD => DDR_DQ(14)
    );
\genblk17[15].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(15),
      PAD => DDR_DQ(15)
    );
\genblk17[16].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(16),
      PAD => DDR_DQ(16)
    );
\genblk17[17].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(17),
      PAD => DDR_DQ(17)
    );
\genblk17[18].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(18),
      PAD => DDR_DQ(18)
    );
\genblk17[19].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(19),
      PAD => DDR_DQ(19)
    );
\genblk17[1].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(1),
      PAD => DDR_DQ(1)
    );
\genblk17[20].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(20),
      PAD => DDR_DQ(20)
    );
\genblk17[21].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(21),
      PAD => DDR_DQ(21)
    );
\genblk17[22].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(22),
      PAD => DDR_DQ(22)
    );
\genblk17[23].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(23),
      PAD => DDR_DQ(23)
    );
\genblk17[24].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(24),
      PAD => DDR_DQ(24)
    );
\genblk17[25].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(25),
      PAD => DDR_DQ(25)
    );
\genblk17[26].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(26),
      PAD => DDR_DQ(26)
    );
\genblk17[27].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(27),
      PAD => DDR_DQ(27)
    );
\genblk17[28].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(28),
      PAD => DDR_DQ(28)
    );
\genblk17[29].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(29),
      PAD => DDR_DQ(29)
    );
\genblk17[2].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(2),
      PAD => DDR_DQ(2)
    );
\genblk17[30].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(30),
      PAD => DDR_DQ(30)
    );
\genblk17[31].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(31),
      PAD => DDR_DQ(31)
    );
\genblk17[3].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(3),
      PAD => DDR_DQ(3)
    );
\genblk17[4].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(4),
      PAD => DDR_DQ(4)
    );
\genblk17[5].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(5),
      PAD => DDR_DQ(5)
    );
\genblk17[6].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(6),
      PAD => DDR_DQ(6)
    );
\genblk17[7].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(7),
      PAD => DDR_DQ(7)
    );
\genblk17[8].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(8),
      PAD => DDR_DQ(8)
    );
\genblk17[9].DDR_DQ_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQ(9),
      PAD => DDR_DQ(9)
    );
\genblk18[0].DDR_DQS_n_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQS_n(0),
      PAD => DDR_DQS_n(0)
    );
\genblk18[1].DDR_DQS_n_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQS_n(1),
      PAD => DDR_DQS_n(1)
    );
\genblk18[2].DDR_DQS_n_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQS_n(2),
      PAD => DDR_DQS_n(2)
    );
\genblk18[3].DDR_DQS_n_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQS_n(3),
      PAD => DDR_DQS_n(3)
    );
\genblk19[0].DDR_DQS_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQS(0),
      PAD => DDR_DQS(0)
    );
\genblk19[1].DDR_DQS_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQS(1),
      PAD => DDR_DQS(1)
    );
\genblk19[2].DDR_DQS_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQS(2),
      PAD => DDR_DQS(2)
    );
\genblk19[3].DDR_DQS_BIBUF\: unisim.vcomponents.BIBUF
     port map (
      IO => buffered_DDR_DQS(3),
      PAD => DDR_DQS(3)
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_CTL_PIPE[0]\
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[0]\(1)
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[7]\(1)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[7]\(0)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[6]\(1)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[6]\(0)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[5]\(1)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[5]\(0)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[4]\(1)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[4]\(0)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[3]\(1)
    );
i_19: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[3]\(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[0]\(0)
    );
i_20: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[2]\(1)
    );
i_21: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[2]\(0)
    );
i_22: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[1]\(1)
    );
i_23: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_DATA_PIPE[1]\(0)
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_CTL_PIPE[7]\
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_CTL_PIPE[6]\
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_CTL_PIPE[5]\
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_CTL_PIPE[4]\
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_CTL_PIPE[3]\
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_CTL_PIPE[2]\
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => \TRACE_CTL_PIPE[1]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_rst_ps7_0_100M_0_cdc_sync is
  port (
    lpf_asr_reg : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    lpf_asr : in STD_LOGIC;
    p_1_in : in STD_LOGIC;
    p_2_in : in STD_LOGIC;
    asr_lpf : in STD_LOGIC_VECTOR ( 0 to 0 );
    aux_reset_in : in STD_LOGIC;
    slowest_sync_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_rst_ps7_0_100M_0_cdc_sync : entity is "cdc_sync";
end design_1_rst_ps7_0_100M_0_cdc_sync;

architecture STRUCTURE of design_1_rst_ps7_0_100M_0_cdc_sync is
  signal asr_d1 : STD_LOGIC;
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  signal \^scndry_out\ : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
  scndry_out <= \^scndry_out\;
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => asr_d1,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to_i_1__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => aux_reset_in,
      O => asr_d1
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => \^scndry_out\,
      R => '0'
    );
lpf_asr_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EAAAAAA8"
    )
        port map (
      I0 => lpf_asr,
      I1 => p_1_in,
      I2 => p_2_in,
      I3 => \^scndry_out\,
      I4 => asr_lpf(0),
      O => lpf_asr_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_rst_ps7_0_100M_0_cdc_sync_0 is
  port (
    lpf_exr_reg : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    lpf_exr : in STD_LOGIC;
    p_1_in4_in : in STD_LOGIC;
    p_2_in3_in : in STD_LOGIC;
    exr_lpf : in STD_LOGIC_VECTOR ( 0 to 0 );
    mb_debug_sys_rst : in STD_LOGIC;
    ext_reset_in : in STD_LOGIC;
    slowest_sync_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_rst_ps7_0_100M_0_cdc_sync_0 : entity is "cdc_sync";
end design_1_rst_ps7_0_100M_0_cdc_sync_0;

architecture STRUCTURE of design_1_rst_ps7_0_100M_0_cdc_sync_0 is
  signal exr_d1 : STD_LOGIC;
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  signal s_level_out_d2 : STD_LOGIC;
  signal s_level_out_d3 : STD_LOGIC;
  signal \^scndry_out\ : STD_LOGIC;
  attribute ASYNC_REG : boolean;
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\ : label is "PRIMITIVE";
  attribute ASYNC_REG of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is std.standard.true;
  attribute XILINX_LEGACY_PRIM of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "FDR";
  attribute box_type of \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\ : label is "PRIMITIVE";
begin
  scndry_out <= \^scndry_out\;
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => exr_d1,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => mb_debug_sys_rst,
      I1 => ext_reset_in,
      O => exr_d1
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => \^scndry_out\,
      R => '0'
    );
lpf_exr_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EAAAAAA8"
    )
        port map (
      I0 => lpf_exr,
      I1 => p_1_in4_in,
      I2 => p_2_in3_in,
      I3 => \^scndry_out\,
      I4 => exr_lpf(0),
      O => lpf_exr_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_rst_ps7_0_100M_0_upcnt_n is
  port (
    Q : out STD_LOGIC_VECTOR ( 5 downto 0 );
    seq_clr : in STD_LOGIC;
    seq_cnt_en : in STD_LOGIC;
    slowest_sync_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_rst_ps7_0_100M_0_upcnt_n : entity is "upcnt_n";
end design_1_rst_ps7_0_100M_0_upcnt_n;

architecture STRUCTURE of design_1_rst_ps7_0_100M_0_upcnt_n is
  signal \^q\ : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal clear : STD_LOGIC;
  signal q_int0 : STD_LOGIC_VECTOR ( 5 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \q_int[1]_i_1\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of \q_int[2]_i_1\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of \q_int[3]_i_1\ : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \q_int[4]_i_1\ : label is "soft_lutpair0";
begin
  Q(5 downto 0) <= \^q\(5 downto 0);
\q_int[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(0),
      O => q_int0(0)
    );
\q_int[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      O => q_int0(1)
    );
\q_int[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"78"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      I2 => \^q\(2),
      O => q_int0(2)
    );
\q_int[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F80"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => \^q\(2),
      I3 => \^q\(3),
      O => q_int0(3)
    );
\q_int[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFF8000"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(0),
      I2 => \^q\(1),
      I3 => \^q\(3),
      I4 => \^q\(4),
      O => q_int0(4)
    );
\q_int[5]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => seq_clr,
      O => clear
    );
\q_int[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7FFFFFFF80000000"
    )
        port map (
      I0 => \^q\(3),
      I1 => \^q\(1),
      I2 => \^q\(0),
      I3 => \^q\(2),
      I4 => \^q\(4),
      I5 => \^q\(5),
      O => q_int0(5)
    );
\q_int_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => seq_cnt_en,
      D => q_int0(0),
      Q => \^q\(0),
      R => clear
    );
\q_int_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => seq_cnt_en,
      D => q_int0(1),
      Q => \^q\(1),
      R => clear
    );
\q_int_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => seq_cnt_en,
      D => q_int0(2),
      Q => \^q\(2),
      R => clear
    );
\q_int_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => seq_cnt_en,
      D => q_int0(3),
      Q => \^q\(3),
      R => clear
    );
\q_int_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => seq_cnt_en,
      D => q_int0(4),
      Q => \^q\(4),
      R => clear
    );
\q_int_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => seq_cnt_en,
      D => q_int0(5),
      Q => \^q\(5),
      R => clear
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_top_nqueens_0_0_ctrl_logic is
  port (
    valid : out STD_LOGIC;
    \j_reg[2]_0\ : out STD_LOGIC;
    \j_reg[2]_1\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \j_reg[1]_0\ : out STD_LOGIC;
    \j_reg[1]_1\ : out STD_LOGIC;
    \j_reg[1]_2\ : out STD_LOGIC;
    \j_reg[0]_0\ : out STD_LOGIC;
    \count_reg_reg[4]\ : out STD_LOGIC;
    \j_reg[1]_3\ : out STD_LOGIC;
    \j_reg[1]_4\ : out STD_LOGIC;
    \j_reg[1]_5\ : out STD_LOGIC;
    \j_reg[1]_6\ : out STD_LOGIC;
    \FSM_onehot_state_reg[0]\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \count_reg[0]_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \count_reg[0]_1\ : in STD_LOGIC;
    \count_reg[0]_2\ : in STD_LOGIC;
    \count1_carry__1_0\ : in STD_LOGIC;
    \count1_carry__1_1\ : in STD_LOGIC;
    count1_carry_i_4 : in STD_LOGIC;
    \count[4]_i_5_0\ : in STD_LOGIC;
    \count[4]_i_5_1\ : in STD_LOGIC;
    \count[4]_i_5_2\ : in STD_LOGIC;
    \count[4]_i_5_3\ : in STD_LOGIC;
    \count[4]_i_12_0\ : in STD_LOGIC;
    \count[4]_i_12_1\ : in STD_LOGIC;
    \count[4]_i_7_0\ : in STD_LOGIC;
    \count[4]_i_7_1\ : in STD_LOGIC;
    count1_carry_i_14 : in STD_LOGIC;
    count1_carry_i_14_0 : in STD_LOGIC;
    acks_out_reg : in STD_LOGIC_VECTOR ( 4 downto 0 );
    done_aux_reg_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_top_nqueens_0_0_ctrl_logic : entity is "ctrl_logic";
end design_1_top_nqueens_0_0_ctrl_logic;

architecture STRUCTURE of design_1_top_nqueens_0_0_ctrl_logic is
  signal count : STD_LOGIC;
  signal count1 : STD_LOGIC;
  signal \count1_carry__0_i_1_n_0\ : STD_LOGIC;
  signal \count1_carry__0_i_2_n_0\ : STD_LOGIC;
  signal \count1_carry__0_i_3_n_0\ : STD_LOGIC;
  signal \count1_carry__0_i_4_n_0\ : STD_LOGIC;
  signal \count1_carry__0_n_0\ : STD_LOGIC;
  signal \count1_carry__0_n_1\ : STD_LOGIC;
  signal \count1_carry__0_n_2\ : STD_LOGIC;
  signal \count1_carry__0_n_3\ : STD_LOGIC;
  signal \count1_carry__1_i_1_n_0\ : STD_LOGIC;
  signal \count1_carry__1_i_2_n_0\ : STD_LOGIC;
  signal \count1_carry__1_i_3_n_0\ : STD_LOGIC;
  signal \count1_carry__1_n_2\ : STD_LOGIC;
  signal \count1_carry__1_n_3\ : STD_LOGIC;
  signal count1_carry_i_1_n_0 : STD_LOGIC;
  signal count1_carry_i_2_n_0 : STD_LOGIC;
  signal count1_carry_i_3_n_0 : STD_LOGIC;
  signal count1_carry_i_5_n_0 : STD_LOGIC;
  signal count1_carry_n_0 : STD_LOGIC;
  signal count1_carry_n_1 : STD_LOGIC;
  signal count1_carry_n_2 : STD_LOGIC;
  signal count1_carry_n_3 : STD_LOGIC;
  signal \count[0]_i_1_n_0\ : STD_LOGIC;
  signal \count[4]_i_12_n_0\ : STD_LOGIC;
  signal \count[4]_i_16_n_0\ : STD_LOGIC;
  signal \count[4]_i_20_n_0\ : STD_LOGIC;
  signal \count[4]_i_7_n_0\ : STD_LOGIC;
  signal count_reg : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^count_reg_reg[4]\ : STD_LOGIC;
  signal done : STD_LOGIC;
  signal done_aux_i_1_n_0 : STD_LOGIC;
  signal done_aux_i_2_n_0 : STD_LOGIC;
  signal \done_aux_i_3__0_n_0\ : STD_LOGIC;
  signal j0 : STD_LOGIC;
  signal \j[0]_i_1_n_0\ : STD_LOGIC;
  signal j_reg : STD_LOGIC_VECTOR ( 4 downto 3 );
  signal \^j_reg[0]_0\ : STD_LOGIC;
  signal \^j_reg[2]_0\ : STD_LOGIC;
  signal \^j_reg[2]_1\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal p_0_in : STD_LOGIC_VECTOR ( 4 downto 1 );
  signal plusOp : STD_LOGIC_VECTOR ( 4 downto 1 );
  signal \^valid\ : STD_LOGIC;
  signal valid_aux_i_1_n_0 : STD_LOGIC;
  signal valid_aux_i_2_n_0 : STD_LOGIC;
  signal NLW_count1_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__0_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_count1_carry__1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of count1_carry_i_11 : label is "soft_lutpair142";
  attribute SOFT_HLUTNM of \count[1]_i_1\ : label is "soft_lutpair141";
  attribute SOFT_HLUTNM of \count[2]_i_1\ : label is "soft_lutpair141";
  attribute SOFT_HLUTNM of \count[3]_i_1\ : label is "soft_lutpair136";
  attribute SOFT_HLUTNM of \count[4]_i_2\ : label is "soft_lutpair136";
  attribute SOFT_HLUTNM of \count[4]_i_23__1\ : label is "soft_lutpair139";
  attribute SOFT_HLUTNM of \count[4]_i_25\ : label is "soft_lutpair138";
  attribute SOFT_HLUTNM of \count[4]_i_3\ : label is "soft_lutpair134";
  attribute SOFT_HLUTNM of \count[4]_i_32__2\ : label is "soft_lutpair135";
  attribute SOFT_HLUTNM of \count[4]_i_42__0\ : label is "soft_lutpair140";
  attribute SOFT_HLUTNM of \count[4]_i_46\ : label is "soft_lutpair137";
  attribute SOFT_HLUTNM of \count[4]_i_8\ : label is "soft_lutpair135";
  attribute SOFT_HLUTNM of done_aux_i_2 : label is "soft_lutpair137";
  attribute SOFT_HLUTNM of \j[0]_i_1\ : label is "soft_lutpair134";
  attribute SOFT_HLUTNM of \j[1]_i_1\ : label is "soft_lutpair142";
  attribute SOFT_HLUTNM of \j[2]_i_1\ : label is "soft_lutpair140";
  attribute SOFT_HLUTNM of \j[3]_i_1\ : label is "soft_lutpair138";
  attribute SOFT_HLUTNM of \j[4]_i_2\ : label is "soft_lutpair139";
begin
  \count_reg_reg[4]\ <= \^count_reg_reg[4]\;
  \j_reg[0]_0\ <= \^j_reg[0]_0\;
  \j_reg[2]_0\ <= \^j_reg[2]_0\;
  \j_reg[2]_1\(2 downto 0) <= \^j_reg[2]_1\(2 downto 0);
  valid <= \^valid\;
\FSM_onehot_state[3]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^valid\,
      I1 => acks_out_reg(2),
      O => D(0)
    );
\FSM_onehot_state[4]_i_2__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFEEE"
    )
        port map (
      I0 => acks_out_reg(3),
      I1 => acks_out_reg(1),
      I2 => done,
      I3 => acks_out_reg(2),
      I4 => acks_out_reg(0),
      O => E(0)
    );
\acks_out_reg_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFEFEFEFEFEFE"
    )
        port map (
      I0 => acks_out_reg(0),
      I1 => acks_out_reg(4),
      I2 => acks_out_reg(1),
      I3 => done,
      I4 => acks_out_reg(2),
      I5 => \^valid\,
      O => \FSM_onehot_state_reg[0]\
    );
count1_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => count1_carry_n_0,
      CO(2) => count1_carry_n_1,
      CO(1) => count1_carry_n_2,
      CO(0) => count1_carry_n_3,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => NLW_count1_carry_O_UNCONNECTED(3 downto 0),
      S(3) => count1_carry_i_1_n_0,
      S(2) => count1_carry_i_2_n_0,
      S(1) => count1_carry_i_3_n_0,
      S(0) => S(0)
    );
\count1_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => count1_carry_n_0,
      CO(3) => \count1_carry__0_n_0\,
      CO(2) => \count1_carry__0_n_1\,
      CO(1) => \count1_carry__0_n_2\,
      CO(0) => \count1_carry__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => \NLW_count1_carry__0_O_UNCONNECTED\(3 downto 0),
      S(3) => \count1_carry__0_i_1_n_0\,
      S(2) => \count1_carry__0_i_2_n_0\,
      S(1) => \count1_carry__0_i_3_n_0\,
      S(0) => \count1_carry__0_i_4_n_0\
    );
\count1_carry__0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0D0D0D0D0DF20D0D"
    )
        port map (
      I0 => j_reg(3),
      I1 => count1_carry_i_5_n_0,
      I2 => j_reg(4),
      I3 => \count_reg[0]_2\,
      I4 => \count1_carry__1_0\,
      I5 => \count1_carry__1_1\,
      O => \count1_carry__0_i_1_n_0\
    );
\count1_carry__0_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0D0D0D0D0DF20D0D"
    )
        port map (
      I0 => j_reg(3),
      I1 => count1_carry_i_5_n_0,
      I2 => j_reg(4),
      I3 => \count_reg[0]_2\,
      I4 => \count1_carry__1_0\,
      I5 => \count1_carry__1_1\,
      O => \count1_carry__0_i_2_n_0\
    );
\count1_carry__0_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0D0D0D0D0DF20D0D"
    )
        port map (
      I0 => j_reg(3),
      I1 => count1_carry_i_5_n_0,
      I2 => j_reg(4),
      I3 => \count_reg[0]_2\,
      I4 => \count1_carry__1_0\,
      I5 => \count1_carry__1_1\,
      O => \count1_carry__0_i_3_n_0\
    );
\count1_carry__0_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0D0D0D0D0DF20D0D"
    )
        port map (
      I0 => j_reg(3),
      I1 => count1_carry_i_5_n_0,
      I2 => j_reg(4),
      I3 => \count_reg[0]_2\,
      I4 => \count1_carry__1_0\,
      I5 => \count1_carry__1_1\,
      O => \count1_carry__0_i_4_n_0\
    );
\count1_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \count1_carry__0_n_0\,
      CO(3) => \NLW_count1_carry__1_CO_UNCONNECTED\(3),
      CO(2) => count1,
      CO(1) => \count1_carry__1_n_2\,
      CO(0) => \count1_carry__1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0111",
      O(3 downto 0) => \NLW_count1_carry__1_O_UNCONNECTED\(3 downto 0),
      S(3) => '0',
      S(2) => \count1_carry__1_i_1_n_0\,
      S(1) => \count1_carry__1_i_2_n_0\,
      S(0) => \count1_carry__1_i_3_n_0\
    );
\count1_carry__1_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4545454545004545"
    )
        port map (
      I0 => j_reg(4),
      I1 => count1_carry_i_5_n_0,
      I2 => j_reg(3),
      I3 => \count_reg[0]_2\,
      I4 => \count1_carry__1_0\,
      I5 => \count1_carry__1_1\,
      O => \count1_carry__1_i_1_n_0\
    );
\count1_carry__1_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0D0D0D0D0DF20D0D"
    )
        port map (
      I0 => j_reg(3),
      I1 => count1_carry_i_5_n_0,
      I2 => j_reg(4),
      I3 => \count_reg[0]_2\,
      I4 => \count1_carry__1_0\,
      I5 => \count1_carry__1_1\,
      O => \count1_carry__1_i_2_n_0\
    );
\count1_carry__1_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0D0D0D0D0DF20D0D"
    )
        port map (
      I0 => j_reg(3),
      I1 => count1_carry_i_5_n_0,
      I2 => j_reg(4),
      I3 => \count_reg[0]_2\,
      I4 => \count1_carry__1_0\,
      I5 => \count1_carry__1_1\,
      O => \count1_carry__1_i_3_n_0\
    );
count1_carry_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0D0D0D0D0DF20D0D"
    )
        port map (
      I0 => j_reg(3),
      I1 => count1_carry_i_5_n_0,
      I2 => j_reg(4),
      I3 => \count_reg[0]_2\,
      I4 => \count1_carry__1_0\,
      I5 => \count1_carry__1_1\,
      O => count1_carry_i_1_n_0
    );
count1_carry_i_11: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^j_reg[2]_1\(1),
      I1 => count1_carry_i_4,
      O => \j_reg[1]_3\
    );
count1_carry_i_17: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ACCACAACCAACCCAA"
    )
        port map (
      I0 => count1_carry_i_14,
      I1 => count1_carry_i_14_0,
      I2 => \^j_reg[2]_1\(1),
      I3 => j_reg(3),
      I4 => \^j_reg[2]_1\(0),
      I5 => \^j_reg[2]_1\(2),
      O => \j_reg[1]_4\
    );
count1_carry_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0D0D0D0D0DF20D0D"
    )
        port map (
      I0 => j_reg(3),
      I1 => count1_carry_i_5_n_0,
      I2 => j_reg(4),
      I3 => \count_reg[0]_2\,
      I4 => \count1_carry__1_0\,
      I5 => \count1_carry__1_1\,
      O => count1_carry_i_2_n_0
    );
count1_carry_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4104044141820404"
    )
        port map (
      I0 => j_reg(4),
      I1 => count1_carry_i_5_n_0,
      I2 => j_reg(3),
      I3 => \count1_carry__1_1\,
      I4 => \count1_carry__1_0\,
      I5 => \count_reg[0]_2\,
      O => count1_carry_i_3_n_0
    );
count1_carry_i_5: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^j_reg[2]_1\(1),
      I1 => \^j_reg[2]_1\(2),
      O => count1_carry_i_5_n_0
    );
\count[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => count_reg(0),
      O => \count[0]_i_1_n_0\
    );
\count[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => count_reg(1),
      I1 => count_reg(0),
      O => plusOp(1)
    );
\count[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => count_reg(2),
      I1 => count_reg(0),
      I2 => count_reg(1),
      O => plusOp(2)
    );
\count[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => count_reg(3),
      I1 => count_reg(1),
      I2 => count_reg(0),
      I3 => count_reg(2),
      O => plusOp(3)
    );
\count[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888888888880880"
    )
        port map (
      I0 => j0,
      I1 => count1,
      I2 => \^j_reg[0]_0\,
      I3 => Q(0),
      I4 => \count_reg[0]_2\,
      I5 => \^count_reg_reg[4]\,
      O => count
    );
\count[4]_i_12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00004700FF004700"
    )
        port map (
      I0 => \count[4]_i_20_n_0\,
      I1 => \^j_reg[2]_1\(2),
      I2 => \count[4]_i_5_2\,
      I3 => \^j_reg[2]_1\(0),
      I4 => \^j_reg[2]_1\(1),
      I5 => \count[4]_i_5_3\,
      O => \count[4]_i_12_n_0\
    );
\count[4]_i_16\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BEEBEBFA8228280A"
    )
        port map (
      I0 => \count[4]_i_7_0\,
      I1 => \^j_reg[2]_1\(1),
      I2 => j_reg(3),
      I3 => \^j_reg[2]_1\(0),
      I4 => \^j_reg[2]_1\(2),
      I5 => \count[4]_i_7_1\,
      O => \count[4]_i_16_n_0\
    );
\count[4]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => count_reg(4),
      I1 => count_reg(2),
      I2 => count_reg(0),
      I3 => count_reg(1),
      I4 => count_reg(3),
      O => plusOp(4)
    );
\count[4]_i_20\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BEEBEBFA8228280A"
    )
        port map (
      I0 => \count[4]_i_12_0\,
      I1 => \^j_reg[2]_1\(1),
      I2 => j_reg(3),
      I3 => \^j_reg[2]_1\(0),
      I4 => \^j_reg[2]_1\(2),
      I5 => \count[4]_i_12_1\,
      O => \count[4]_i_20_n_0\
    );
\count[4]_i_23__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"39"
    )
        port map (
      I0 => \^j_reg[2]_1\(1),
      I1 => \^j_reg[2]_1\(2),
      I2 => \^j_reg[2]_1\(0),
      O => \j_reg[1]_0\
    );
\count[4]_i_25\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9663"
    )
        port map (
      I0 => \^j_reg[2]_1\(1),
      I1 => j_reg(3),
      I2 => \^j_reg[2]_1\(0),
      I3 => \^j_reg[2]_1\(2),
      O => \j_reg[1]_6\
    );
\count[4]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"D1FFD100"
    )
        port map (
      I0 => \count_reg[0]_1\,
      I1 => \^j_reg[2]_1\(0),
      I2 => \count[4]_i_7_n_0\,
      I3 => \^j_reg[2]_0\,
      I4 => \count_reg[0]_0\(0),
      O => \^j_reg[0]_0\
    );
\count[4]_i_32__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7E1581EA"
    )
        port map (
      I0 => \^j_reg[2]_1\(1),
      I1 => j_reg(3),
      I2 => \^j_reg[2]_1\(0),
      I3 => \^j_reg[2]_1\(2),
      I4 => j_reg(4),
      O => \j_reg[1]_1\
    );
\count[4]_i_42__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^j_reg[2]_1\(1),
      I1 => \^j_reg[2]_1\(0),
      O => \j_reg[1]_2\
    );
\count[4]_i_46\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CD33B326"
    )
        port map (
      I0 => \^j_reg[2]_1\(1),
      I1 => j_reg(3),
      I2 => \^j_reg[2]_1\(0),
      I3 => \^j_reg[2]_1\(2),
      I4 => j_reg(4),
      O => \j_reg[1]_5\
    );
\count[4]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"56A656A6565656A6"
    )
        port map (
      I0 => Q(1),
      I1 => \count_reg[0]_0\(1),
      I2 => \^j_reg[2]_0\,
      I3 => \count[4]_i_12_n_0\,
      I4 => \count[4]_i_7_n_0\,
      I5 => \^j_reg[2]_1\(0),
      O => \^count_reg_reg[4]\
    );
\count[4]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF001D1D4747FF00"
    )
        port map (
      I0 => \count[4]_i_5_0\,
      I1 => \^j_reg[2]_1\(2),
      I2 => \count[4]_i_16_n_0\,
      I3 => \count[4]_i_5_1\,
      I4 => \^j_reg[2]_1\(1),
      I5 => \^j_reg[2]_1\(0),
      O => \count[4]_i_7_n_0\
    );
\count[4]_i_8\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000F010F"
    )
        port map (
      I0 => \^j_reg[2]_1\(2),
      I1 => \^j_reg[2]_1\(1),
      I2 => j_reg(4),
      I3 => j_reg(3),
      I4 => \^j_reg[2]_1\(0),
      O => \^j_reg[2]_0\
    );
\count_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \count[0]_i_1_n_0\,
      Q => count_reg(0)
    );
\count_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => plusOp(1),
      Q => count_reg(1)
    );
\count_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => plusOp(2),
      Q => count_reg(2)
    );
\count_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => plusOp(3),
      Q => count_reg(3)
    );
\count_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => plusOp(4),
      Q => count_reg(4)
    );
done_aux_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF2E2EEE2E"
    )
        port map (
      I0 => done_aux_i_2_n_0,
      I1 => j0,
      I2 => count1,
      I3 => \done_aux_i_3__0_n_0\,
      I4 => done_aux_reg_0,
      I5 => done,
      O => done_aux_i_1_n_0
    );
done_aux_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000040"
    )
        port map (
      I0 => \^j_reg[2]_1\(1),
      I1 => \^j_reg[2]_1\(0),
      I2 => j_reg(3),
      I3 => \^j_reg[2]_1\(2),
      I4 => j_reg(4),
      O => done_aux_i_2_n_0
    );
\done_aux_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A9595959A959A9A9"
    )
        port map (
      I0 => Q(0),
      I1 => \count_reg[0]_0\(0),
      I2 => \^j_reg[2]_0\,
      I3 => \count[4]_i_7_n_0\,
      I4 => \^j_reg[2]_1\(0),
      I5 => \count_reg[0]_1\,
      O => \done_aux_i_3__0_n_0\
    );
done_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => done_aux_i_1_n_0,
      Q => done
    );
\j[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^j_reg[2]_1\(0),
      O => \j[0]_i_1_n_0\
    );
\j[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^j_reg[2]_1\(0),
      I1 => \^j_reg[2]_1\(1),
      O => p_0_in(1)
    );
\j[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^j_reg[2]_1\(2),
      I1 => \^j_reg[2]_1\(0),
      I2 => \^j_reg[2]_1\(1),
      O => p_0_in(2)
    );
\j[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => j_reg(3),
      I1 => \^j_reg[2]_1\(0),
      I2 => \^j_reg[2]_1\(2),
      I3 => \^j_reg[2]_1\(1),
      O => p_0_in(3)
    );
\j[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000003030307"
    )
        port map (
      I0 => \^j_reg[2]_1\(0),
      I1 => j_reg(3),
      I2 => j_reg(4),
      I3 => \^j_reg[2]_1\(1),
      I4 => \^j_reg[2]_1\(2),
      I5 => done,
      O => j0
    );
\j[4]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => \^j_reg[2]_1\(1),
      I1 => j_reg(3),
      I2 => \^j_reg[2]_1\(0),
      I3 => \^j_reg[2]_1\(2),
      O => p_0_in(4)
    );
\j_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \j[0]_i_1_n_0\,
      Q => \^j_reg[2]_1\(0)
    );
\j_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => p_0_in(1),
      Q => \^j_reg[2]_1\(1)
    );
\j_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => p_0_in(2),
      Q => \^j_reg[2]_1\(2)
    );
\j_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => p_0_in(3),
      Q => j_reg(3)
    );
\j_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => p_0_in(4),
      Q => j_reg(4)
    );
valid_aux_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF00001000"
    )
        port map (
      I0 => valid_aux_i_2_n_0,
      I1 => count_reg(2),
      I2 => count_reg(0),
      I3 => count_reg(3),
      I4 => count_reg(1),
      I5 => \^valid\,
      O => valid_aux_i_1_n_0
    );
valid_aux_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFFFFFFFFFF"
    )
        port map (
      I0 => \^j_reg[2]_1\(2),
      I1 => \^j_reg[2]_1\(1),
      I2 => j_reg(4),
      I3 => count_reg(4),
      I4 => \^j_reg[2]_1\(0),
      I5 => j_reg(3),
      O => valid_aux_i_2_n_0
    );
valid_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => valid_aux_i_1_n_0,
      Q => \^valid\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_ctrl_logic__parameterized0\ is
  port (
    valid : out STD_LOGIC;
    \j_reg[0]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \j_reg[3]_0\ : out STD_LOGIC;
    \j_reg[3]_1\ : out STD_LOGIC;
    \j_reg[0]_1\ : out STD_LOGIC;
    \j_reg[0]_2\ : out STD_LOGIC;
    \j_reg[0]_3\ : out STD_LOGIC;
    \j_reg[1]_0\ : out STD_LOGIC;
    \j_reg[1]_1\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]\ : out STD_LOGIC;
    \j_reg[1]_2\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_0\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_1\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_2\ : out STD_LOGIC;
    \count_reg_reg[3]\ : out STD_LOGIC;
    \count_reg_reg[2]\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_3\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_4\ : out STD_LOGIC;
    \j_reg[0]_4\ : out STD_LOGIC;
    \j_reg[2]_0\ : out STD_LOGIC;
    \j_reg[3]_2\ : out STD_LOGIC;
    \j_reg[2]_1\ : out STD_LOGIC;
    \j_reg[2]_2\ : out STD_LOGIC;
    \j_reg[2]_3\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \FSM_onehot_state_reg[1]\ : out STD_LOGIC;
    valid_aux_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 );
    a_in_9 : in STD_LOGIC_VECTOR ( 42 downto 0 );
    \count[4]_i_17_0\ : in STD_LOGIC;
    \count[4]_i_17_1\ : in STD_LOGIC;
    count1_carry_i_14_0 : in STD_LOGIC;
    \count_reg[0]_0\ : in STD_LOGIC;
    \count1_carry_i_4__0_0\ : in STD_LOGIC;
    \count_reg[0]_1\ : in STD_LOGIC;
    done_aux_reg_0 : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \count_reg[0]_2\ : in STD_LOGIC;
    a_in_8 : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \count[4]_i_11_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \count[4]_i_4\ : in STD_LOGIC;
    count1_carry_i_13_0 : in STD_LOGIC;
    count1_carry_i_13_1 : in STD_LOGIC;
    count1_carry_i_13_2 : in STD_LOGIC;
    count1_carry_i_17 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    count1_carry_0 : in STD_LOGIC;
    count1_carry_1 : in STD_LOGIC;
    \count1_carry_i_4__0_1\ : in STD_LOGIC;
    \count1_carry_i_4__0_2\ : in STD_LOGIC;
    \count1_carry_i_4__0_3\ : in STD_LOGIC;
    \count[4]_i_11__3_0\ : in STD_LOGIC;
    \count[4]_i_11__3_1\ : in STD_LOGIC;
    \count[4]_i_7__0_0\ : in STD_LOGIC;
    \count_reg_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    next_out_9 : in STD_LOGIC;
    \count[4]_i_5__5\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_ctrl_logic__parameterized0\ : entity is "ctrl_logic";
end \design_1_top_nqueens_0_0_ctrl_logic__parameterized0\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_ctrl_logic__parameterized0\ is
  signal \^fsm_onehot_state_reg[3]\ : STD_LOGIC;
  signal \^fsm_onehot_state_reg[3]_0\ : STD_LOGIC;
  signal \^fsm_onehot_state_reg[3]_1\ : STD_LOGIC;
  signal \^fsm_onehot_state_reg[3]_2\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal count : STD_LOGIC;
  signal count1 : STD_LOGIC;
  signal \count1_carry__0_i_1__0_n_0\ : STD_LOGIC;
  signal \count1_carry__0_i_2__0_n_0\ : STD_LOGIC;
  signal \count1_carry__0_i_3__0_n_0\ : STD_LOGIC;
  signal \count1_carry__0_i_4__0_n_0\ : STD_LOGIC;
  signal \count1_carry__0_n_0\ : STD_LOGIC;
  signal \count1_carry__0_n_1\ : STD_LOGIC;
  signal \count1_carry__0_n_2\ : STD_LOGIC;
  signal \count1_carry__0_n_3\ : STD_LOGIC;
  signal \count1_carry__1_i_1__0_n_0\ : STD_LOGIC;
  signal \count1_carry__1_i_2__0_n_0\ : STD_LOGIC;
  signal \count1_carry__1_i_3__0_n_0\ : STD_LOGIC;
  signal \count1_carry__1_n_2\ : STD_LOGIC;
  signal \count1_carry__1_n_3\ : STD_LOGIC;
  signal \count1_carry_i_11__0_n_0\ : STD_LOGIC;
  signal count1_carry_i_14_n_0 : STD_LOGIC;
  signal \count1_carry_i_15__3_n_0\ : STD_LOGIC;
  signal count1_carry_i_16_n_0 : STD_LOGIC;
  signal \count1_carry_i_1__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_2__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_3__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_4__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_6__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_7__0_n_0\ : STD_LOGIC;
  signal count1_carry_i_9_n_0 : STD_LOGIC;
  signal count1_carry_n_0 : STD_LOGIC;
  signal count1_carry_n_1 : STD_LOGIC;
  signal count1_carry_n_2 : STD_LOGIC;
  signal count1_carry_n_3 : STD_LOGIC;
  signal \count[4]_i_14_n_0\ : STD_LOGIC;
  signal \count[4]_i_15__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_18_n_0\ : STD_LOGIC;
  signal \count[4]_i_19_n_0\ : STD_LOGIC;
  signal \count[4]_i_22__2_n_0\ : STD_LOGIC;
  signal \count[4]_i_24_n_0\ : STD_LOGIC;
  signal \count[4]_i_26_n_0\ : STD_LOGIC;
  signal \count[4]_i_28_n_0\ : STD_LOGIC;
  signal \count[4]_i_29_n_0\ : STD_LOGIC;
  signal \count[4]_i_30__2_n_0\ : STD_LOGIC;
  signal \count[4]_i_30_n_0\ : STD_LOGIC;
  signal \count[4]_i_31_n_0\ : STD_LOGIC;
  signal \count[4]_i_37_n_0\ : STD_LOGIC;
  signal \count[4]_i_38_n_0\ : STD_LOGIC;
  signal \count[4]_i_39_n_0\ : STD_LOGIC;
  signal \count[4]_i_40__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_41_n_0\ : STD_LOGIC;
  signal \count[4]_i_44_n_0\ : STD_LOGIC;
  signal \count[4]_i_45_n_0\ : STD_LOGIC;
  signal \count[4]_i_47_n_0\ : STD_LOGIC;
  signal \count[4]_i_48_n_0\ : STD_LOGIC;
  signal \count[4]_i_49_n_0\ : STD_LOGIC;
  signal \count[4]_i_7__0_n_0\ : STD_LOGIC;
  signal count_reg : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal done : STD_LOGIC;
  signal \done_aux_i_1__5_n_0\ : STD_LOGIC;
  signal \done_aux_i_3__1_n_0\ : STD_LOGIC;
  signal j0 : STD_LOGIC;
  signal \j[0]_i_1__0_n_0\ : STD_LOGIC;
  signal \^j_reg[0]_4\ : STD_LOGIC;
  signal \^j_reg[1]_0\ : STD_LOGIC;
  signal \^j_reg[1]_1\ : STD_LOGIC;
  signal \^j_reg[1]_2\ : STD_LOGIC;
  signal \^j_reg[2]_0\ : STD_LOGIC;
  signal \^j_reg[2]_2\ : STD_LOGIC;
  signal \^j_reg[2]_3\ : STD_LOGIC;
  signal \^j_reg[3]_0\ : STD_LOGIC;
  signal \^j_reg[3]_1\ : STD_LOGIC;
  signal \p_0_in__0\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \plusOp__0\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^valid\ : STD_LOGIC;
  signal \valid_aux_i_1__2_n_0\ : STD_LOGIC;
  signal \valid_aux_i_2__0_n_0\ : STD_LOGIC;
  signal NLW_count1_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__0_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_count1_carry__1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_onehot_state[3]_i_1__0\ : label is "soft_lutpair118";
  attribute SOFT_HLUTNM of \count1_carry_i_6__0\ : label is "soft_lutpair123";
  attribute SOFT_HLUTNM of count1_carry_i_9 : label is "soft_lutpair125";
  attribute SOFT_HLUTNM of \count[0]_i_1__0\ : label is "soft_lutpair127";
  attribute SOFT_HLUTNM of \count[1]_i_1__0\ : label is "soft_lutpair127";
  attribute SOFT_HLUTNM of \count[2]_i_1__0\ : label is "soft_lutpair121";
  attribute SOFT_HLUTNM of \count[3]_i_1__0\ : label is "soft_lutpair121";
  attribute SOFT_HLUTNM of \count[4]_i_11__3\ : label is "soft_lutpair115";
  attribute SOFT_HLUTNM of \count[4]_i_21__0\ : label is "soft_lutpair119";
  attribute SOFT_HLUTNM of \count[4]_i_23__2\ : label is "soft_lutpair119";
  attribute SOFT_HLUTNM of \count[4]_i_27__2\ : label is "soft_lutpair126";
  attribute SOFT_HLUTNM of \count[4]_i_28\ : label is "soft_lutpair112";
  attribute SOFT_HLUTNM of \count[4]_i_29\ : label is "soft_lutpair117";
  attribute SOFT_HLUTNM of \count[4]_i_2__0\ : label is "soft_lutpair116";
  attribute SOFT_HLUTNM of \count[4]_i_30\ : label is "soft_lutpair124";
  attribute SOFT_HLUTNM of \count[4]_i_30__2\ : label is "soft_lutpair120";
  attribute SOFT_HLUTNM of \count[4]_i_31\ : label is "soft_lutpair114";
  attribute SOFT_HLUTNM of \count[4]_i_33\ : label is "soft_lutpair113";
  attribute SOFT_HLUTNM of \count[4]_i_41__0\ : label is "soft_lutpair122";
  attribute SOFT_HLUTNM of \count[4]_i_42\ : label is "soft_lutpair122";
  attribute SOFT_HLUTNM of \count[4]_i_43\ : label is "soft_lutpair112";
  attribute SOFT_HLUTNM of \count[4]_i_44\ : label is "soft_lutpair117";
  attribute SOFT_HLUTNM of \count[4]_i_47\ : label is "soft_lutpair113";
  attribute SOFT_HLUTNM of \count[4]_i_48\ : label is "soft_lutpair114";
  attribute SOFT_HLUTNM of \count[4]_i_49\ : label is "soft_lutpair124";
  attribute SOFT_HLUTNM of \done_aux_i_3__1\ : label is "soft_lutpair120";
  attribute SOFT_HLUTNM of \j[0]_i_1__0\ : label is "soft_lutpair115";
  attribute SOFT_HLUTNM of \j[1]_i_1__0\ : label is "soft_lutpair125";
  attribute SOFT_HLUTNM of \j[2]_i_1__0\ : label is "soft_lutpair123";
  attribute SOFT_HLUTNM of \j[3]_i_2\ : label is "soft_lutpair126";
  attribute SOFT_HLUTNM of \valid_aux_i_1__2\ : label is "soft_lutpair118";
  attribute SOFT_HLUTNM of \valid_aux_i_2__0\ : label is "soft_lutpair116";
begin
  \FSM_onehot_state_reg[3]\ <= \^fsm_onehot_state_reg[3]\;
  \FSM_onehot_state_reg[3]_0\ <= \^fsm_onehot_state_reg[3]_0\;
  \FSM_onehot_state_reg[3]_1\ <= \^fsm_onehot_state_reg[3]_1\;
  \FSM_onehot_state_reg[3]_2\ <= \^fsm_onehot_state_reg[3]_2\;
  Q(3 downto 0) <= \^q\(3 downto 0);
  \j_reg[0]_4\ <= \^j_reg[0]_4\;
  \j_reg[1]_0\ <= \^j_reg[1]_0\;
  \j_reg[1]_1\ <= \^j_reg[1]_1\;
  \j_reg[1]_2\ <= \^j_reg[1]_2\;
  \j_reg[2]_0\ <= \^j_reg[2]_0\;
  \j_reg[2]_2\ <= \^j_reg[2]_2\;
  \j_reg[2]_3\ <= \^j_reg[2]_3\;
  \j_reg[3]_0\ <= \^j_reg[3]_0\;
  \j_reg[3]_1\ <= \^j_reg[3]_1\;
  valid <= \^valid\;
\FSM_onehot_state[3]_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^valid\,
      I1 => \count_reg_reg[0]\(2),
      O => valid_aux_reg_0(0)
    );
\FSM_onehot_state[4]_i_2__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFF888"
    )
        port map (
      I0 => \count_reg_reg[0]\(3),
      I1 => next_out_9,
      I2 => done,
      I3 => \count_reg_reg[0]\(2),
      I4 => \count_reg_reg[0]\(1),
      I5 => \count_reg_reg[0]\(0),
      O => E(0)
    );
\acks_out_reg_i_2__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFEFEFEFEFEFE"
    )
        port map (
      I0 => \count_reg_reg[0]\(1),
      I1 => \count_reg_reg[0]\(0),
      I2 => \count_reg_reg[0]\(4),
      I3 => done,
      I4 => \count_reg_reg[0]\(2),
      I5 => \^valid\,
      O => \FSM_onehot_state_reg[1]\
    );
count1_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => count1_carry_n_0,
      CO(2) => count1_carry_n_1,
      CO(1) => count1_carry_n_2,
      CO(0) => count1_carry_n_3,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => NLW_count1_carry_O_UNCONNECTED(3 downto 0),
      S(3) => \count1_carry_i_1__0_n_0\,
      S(2) => \count1_carry_i_2__0_n_0\,
      S(1) => \count1_carry_i_3__0_n_0\,
      S(0) => \count1_carry_i_4__0_n_0\
    );
\count1_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => count1_carry_n_0,
      CO(3) => \count1_carry__0_n_0\,
      CO(2) => \count1_carry__0_n_1\,
      CO(1) => \count1_carry__0_n_2\,
      CO(0) => \count1_carry__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => \NLW_count1_carry__0_O_UNCONNECTED\(3 downto 0),
      S(3) => \count1_carry__0_i_1__0_n_0\,
      S(2) => \count1_carry__0_i_2__0_n_0\,
      S(1) => \count1_carry__0_i_3__0_n_0\,
      S(0) => \count1_carry__0_i_4__0_n_0\
    );
\count1_carry__0_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0FFF0FFF69990FFF"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_4__0_0\,
      I2 => \count1_carry_i_6__0_n_0\,
      I3 => \^q\(3),
      I4 => \count_reg[0]_1\,
      I5 => \count1_carry_i_7__0_n_0\,
      O => \count1_carry__0_i_1__0_n_0\
    );
\count1_carry__0_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0FFF0FFF69990FFF"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_4__0_0\,
      I2 => \count1_carry_i_6__0_n_0\,
      I3 => \^q\(3),
      I4 => \count_reg[0]_1\,
      I5 => \count1_carry_i_7__0_n_0\,
      O => \count1_carry__0_i_2__0_n_0\
    );
\count1_carry__0_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0FFF0FFF69990FFF"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_4__0_0\,
      I2 => \count1_carry_i_6__0_n_0\,
      I3 => \^q\(3),
      I4 => \count_reg[0]_1\,
      I5 => \count1_carry_i_7__0_n_0\,
      O => \count1_carry__0_i_3__0_n_0\
    );
\count1_carry__0_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0FFF0FFF69990FFF"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_4__0_0\,
      I2 => \count1_carry_i_6__0_n_0\,
      I3 => \^q\(3),
      I4 => \count_reg[0]_1\,
      I5 => \count1_carry_i_7__0_n_0\,
      O => \count1_carry__0_i_4__0_n_0\
    );
\count1_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \count1_carry__0_n_0\,
      CO(3) => \NLW_count1_carry__1_CO_UNCONNECTED\(3),
      CO(2) => count1,
      CO(1) => \count1_carry__1_n_2\,
      CO(0) => \count1_carry__1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0111",
      O(3 downto 0) => \NLW_count1_carry__1_O_UNCONNECTED\(3 downto 0),
      S(3) => '0',
      S(2) => \count1_carry__1_i_1__0_n_0\,
      S(1) => \count1_carry__1_i_2__0_n_0\,
      S(0) => \count1_carry__1_i_3__0_n_0\
    );
\count1_carry__1_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0FFF0FFF09990FFF"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_4__0_0\,
      I2 => \^q\(3),
      I3 => \count1_carry_i_6__0_n_0\,
      I4 => \count_reg[0]_1\,
      I5 => \count1_carry_i_7__0_n_0\,
      O => \count1_carry__1_i_1__0_n_0\
    );
\count1_carry__1_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0FFF0FFF69990FFF"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_4__0_0\,
      I2 => \count1_carry_i_6__0_n_0\,
      I3 => \^q\(3),
      I4 => \count_reg[0]_1\,
      I5 => \count1_carry_i_7__0_n_0\,
      O => \count1_carry__1_i_2__0_n_0\
    );
\count1_carry__1_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0FFF0FFF69990FFF"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_4__0_0\,
      I2 => \count1_carry_i_6__0_n_0\,
      I3 => \^q\(3),
      I4 => \count_reg[0]_1\,
      I5 => \count1_carry_i_7__0_n_0\,
      O => \count1_carry__1_i_3__0_n_0\
    );
\count1_carry_i_11__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9696966969696996"
    )
        port map (
      I0 => \count1_carry_i_4__0_1\,
      I1 => D(0),
      I2 => \count1_carry_i_4__0_2\,
      I3 => \^q\(1),
      I4 => \^q\(0),
      I5 => \^q\(2),
      O => \count1_carry_i_11__0_n_0\
    );
count1_carry_i_13: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B800B8FF"
    )
        port map (
      I0 => \count[4]_i_19_n_0\,
      I1 => \count[4]_i_11_0\(0),
      I2 => count1_carry_i_14_n_0,
      I3 => \count[4]_i_4\,
      I4 => a_in_9(40),
      O => \j_reg[0]_2\
    );
count1_carry_i_14: unisim.vcomponents.LUT6
    generic map(
      INIT => X"101FFFFF101F0000"
    )
        port map (
      I0 => \count1_carry_i_15__3_n_0\,
      I1 => count1_carry_i_16_n_0,
      I2 => count1_carry_i_13_0,
      I3 => count1_carry_i_13_1,
      I4 => count1_carry_i_13_2,
      I5 => \count[4]_i_39_n_0\,
      O => count1_carry_i_14_n_0
    );
\count1_carry_i_15__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFE200E200000000"
    )
        port map (
      I0 => a_in_9(40),
      I1 => \count[4]_i_17_1\,
      I2 => a_in_9(8),
      I3 => \count[4]_i_17_0\,
      I4 => a_in_9(24),
      I5 => count1_carry_i_14_0,
      O => \count1_carry_i_15__3_n_0\
    );
count1_carry_i_16: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFB800B8"
    )
        port map (
      I0 => a_in_9(0),
      I1 => \count[4]_i_17_1\,
      I2 => a_in_9(32),
      I3 => \count[4]_i_17_0\,
      I4 => a_in_9(16),
      I5 => count1_carry_i_14_0,
      O => count1_carry_i_16_n_0
    );
\count1_carry_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0FFF0FFF69990FFF"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_4__0_0\,
      I2 => \count1_carry_i_6__0_n_0\,
      I3 => \^q\(3),
      I4 => \count_reg[0]_1\,
      I5 => \count1_carry_i_7__0_n_0\,
      O => \count1_carry_i_1__0_n_0\
    );
\count1_carry_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0FFF0FFF69990FFF"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_4__0_0\,
      I2 => \count1_carry_i_6__0_n_0\,
      I3 => \^q\(3),
      I4 => \count_reg[0]_1\,
      I5 => \count1_carry_i_7__0_n_0\,
      O => \count1_carry_i_2__0_n_0\
    );
\count1_carry_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0669066900090996"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_4__0_0\,
      I2 => \count1_carry_i_6__0_n_0\,
      I3 => \^q\(3),
      I4 => \count_reg[0]_1\,
      I5 => \count1_carry_i_7__0_n_0\,
      O => \count1_carry_i_3__0_n_0\
    );
\count1_carry_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8400008501202000"
    )
        port map (
      I0 => \^q\(0),
      I1 => \count1_carry_i_7__0_n_0\,
      I2 => count1_carry_0,
      I3 => count1_carry_i_9_n_0,
      I4 => count1_carry_1,
      I5 => \count1_carry_i_11__0_n_0\,
      O => \count1_carry_i_4__0_n_0\
    );
\count1_carry_i_6__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(0),
      I2 => \^q\(1),
      O => \count1_carry_i_6__0_n_0\
    );
\count1_carry_i_7__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"566A"
    )
        port map (
      I0 => \^j_reg[3]_1\,
      I1 => \^j_reg[0]_4\,
      I2 => D(1),
      I3 => \count1_carry_i_4__0_0\,
      O => \count1_carry_i_7__0_n_0\
    );
count1_carry_i_9: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      I2 => \count1_carry_i_4__0_3\,
      O => count1_carry_i_9_n_0
    );
\count[0]_i_1__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => count_reg(0),
      O => \plusOp__0\(0)
    );
\count[1]_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => count_reg(0),
      I1 => count_reg(1),
      O => \plusOp__0\(1)
    );
\count[2]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => count_reg(2),
      I1 => count_reg(1),
      I2 => count_reg(0),
      O => \plusOp__0\(2)
    );
\count[3]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => count_reg(3),
      I1 => count_reg(0),
      I2 => count_reg(1),
      I3 => count_reg(2),
      O => \plusOp__0\(3)
    );
\count[4]_i_10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFC05555"
    )
        port map (
      I0 => a_in_9(42),
      I1 => \^j_reg[1]_0\,
      I2 => \count[4]_i_11_0\(0),
      I3 => \count[4]_i_18_n_0\,
      I4 => \count[4]_i_4\,
      O => \j_reg[0]_3\
    );
\count[4]_i_11\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B800B8FF"
    )
        port map (
      I0 => \count[4]_i_18_n_0\,
      I1 => \count[4]_i_11_0\(0),
      I2 => \count[4]_i_19_n_0\,
      I3 => \count[4]_i_4\,
      I4 => a_in_9(41),
      O => \j_reg[0]_1\
    );
\count[4]_i_11__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5555CFC0"
    )
        port map (
      I0 => a_in_8(3),
      I1 => \count[4]_i_5__5\,
      I2 => \^q\(0),
      I3 => \count[4]_i_7__0_n_0\,
      I4 => \^q\(3),
      O => \^j_reg[0]_4\
    );
\count[4]_i_13\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \count[4]_i_22__2_n_0\,
      I1 => count1_carry_i_13_0,
      I2 => \count[4]_i_24_n_0\,
      I3 => count1_carry_i_14_0,
      I4 => \count[4]_i_26_n_0\,
      O => \^j_reg[1]_2\
    );
\count[4]_i_14\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A0A0C0CFAFAFC0CF"
    )
        port map (
      I0 => \^fsm_onehot_state_reg[3]_0\,
      I1 => \count[4]_i_28_n_0\,
      I2 => count1_carry_i_13_0,
      I3 => \count[4]_i_29_n_0\,
      I4 => count1_carry_i_14_0,
      I5 => \count[4]_i_30_n_0\,
      O => \count[4]_i_14_n_0\
    );
\count[4]_i_15\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"05F5030305F5F3F3"
    )
        port map (
      I0 => a_in_9(22),
      I1 => \count[4]_i_31_n_0\,
      I2 => count1_carry_i_14_0,
      I3 => a_in_9(30),
      I4 => \count[4]_i_17_0\,
      I5 => a_in_9(14),
      O => \FSM_onehot_state_reg[3]_3\
    );
\count[4]_i_15__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000D0DDFFFF"
    )
        port map (
      I0 => \^j_reg[3]_0\,
      I1 => a_in_8(2),
      I2 => a_in_8(1),
      I3 => \count[4]_i_30__2_n_0\,
      I4 => \^j_reg[2]_0\,
      I5 => \count[4]_i_7__0_0\,
      O => \count[4]_i_15__0_n_0\
    );
\count[4]_i_17\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \^fsm_onehot_state_reg[3]_1\,
      I1 => \^fsm_onehot_state_reg[3]_2\,
      I2 => count1_carry_i_13_0,
      I3 => \count[4]_i_37_n_0\,
      I4 => count1_carry_i_14_0,
      I5 => \count[4]_i_38_n_0\,
      O => \^j_reg[1]_1\
    );
\count[4]_i_18\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"C55C"
    )
        port map (
      I0 => \^j_reg[1]_1\,
      I1 => \count[4]_i_39_n_0\,
      I2 => \count[4]_i_11_0\(1),
      I3 => \count[4]_i_11_0\(0),
      O => \count[4]_i_18_n_0\
    );
\count[4]_i_19\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2F20FFFF2F200000"
    )
        port map (
      I0 => \count[4]_i_40__0_n_0\,
      I1 => \count[4]_i_41_n_0\,
      I2 => count1_carry_i_13_0,
      I3 => \count[4]_i_22__2_n_0\,
      I4 => count1_carry_i_13_2,
      I5 => \count[4]_i_14_n_0\,
      O => \count[4]_i_19_n_0\
    );
\count[4]_i_1__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1111101100000000"
    )
        port map (
      I0 => done,
      I1 => \^q\(3),
      I2 => \^j_reg[3]_1\,
      I3 => \count_reg[0]_1\,
      I4 => \count_reg[0]_0\,
      I5 => count1,
      O => count
    );
\count[4]_i_21\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"05F5030305F5F3F3"
    )
        port map (
      I0 => a_in_9(23),
      I1 => \count[4]_i_44_n_0\,
      I2 => count1_carry_i_14_0,
      I3 => a_in_9(31),
      I4 => \count[4]_i_17_0\,
      I5 => a_in_9(15),
      O => \FSM_onehot_state_reg[3]_4\
    );
\count[4]_i_21__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E11E"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(0),
      I2 => \^q\(3),
      I3 => \^q\(1),
      O => \^j_reg[2]_0\
    );
\count[4]_i_22__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"05F5030305F5F3F3"
    )
        port map (
      I0 => a_in_9(21),
      I1 => \count[4]_i_45_n_0\,
      I2 => count1_carry_i_14_0,
      I3 => a_in_9(29),
      I4 => \count[4]_i_17_0\,
      I5 => a_in_9(13),
      O => \count[4]_i_22__2_n_0\
    );
\count[4]_i_23__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"887E"
    )
        port map (
      I0 => \^q\(3),
      I1 => \^q\(1),
      I2 => \^q\(0),
      I3 => \^q\(2),
      O => \^j_reg[3]_0\
    );
\count[4]_i_24\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1D001DFF"
    )
        port map (
      I0 => a_in_9(1),
      I1 => \count[4]_i_17_1\,
      I2 => a_in_9(33),
      I3 => \count[4]_i_17_0\,
      I4 => a_in_9(17),
      O => \count[4]_i_24_n_0\
    );
\count[4]_i_24__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"111F"
    )
        port map (
      I0 => \^j_reg[2]_2\,
      I1 => a_in_8(4),
      I2 => \^j_reg[2]_3\,
      I3 => a_in_8(0),
      O => \j_reg[2]_1\
    );
\count[4]_i_26\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"001DFF1D"
    )
        port map (
      I0 => a_in_9(41),
      I1 => \count[4]_i_17_1\,
      I2 => a_in_9(9),
      I3 => \count[4]_i_17_0\,
      I4 => a_in_9(25),
      O => \count[4]_i_26_n_0\
    );
\count[4]_i_27\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00FF1D1D"
    )
        port map (
      I0 => count1_carry_i_17(0),
      I1 => \count[4]_i_17_1\,
      I2 => a_in_9(11),
      I3 => a_in_9(27),
      I4 => \count[4]_i_17_0\,
      O => \^fsm_onehot_state_reg[3]_0\
    );
\count[4]_i_27__2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(2),
      O => \j_reg[0]_0\
    );
\count[4]_i_28\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"47444777"
    )
        port map (
      I0 => a_in_9(19),
      I1 => \count[4]_i_17_0\,
      I2 => a_in_9(3),
      I3 => \count[4]_i_17_1\,
      I4 => a_in_9(35),
      O => \count[4]_i_28_n_0\
    );
\count[4]_i_29\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => a_in_9(23),
      I1 => \count[4]_i_17_0\,
      I2 => a_in_9(7),
      I3 => \count[4]_i_17_1\,
      I4 => a_in_9(39),
      O => \count[4]_i_29_n_0\
    );
\count[4]_i_2__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => count_reg(4),
      I1 => count_reg(2),
      I2 => count_reg(1),
      I3 => count_reg(0),
      I4 => count_reg(3),
      O => \plusOp__0\(4)
    );
\count[4]_i_30\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => a_in_9(31),
      I1 => \count[4]_i_17_0\,
      I2 => a_in_9(15),
      O => \count[4]_i_30_n_0\
    );
\count[4]_i_30__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"522B"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(0),
      I2 => \^q\(1),
      I3 => \^q\(3),
      O => \count[4]_i_30__2_n_0\
    );
\count[4]_i_31\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => a_in_9(6),
      I1 => \count[4]_i_17_1\,
      I2 => a_in_9(38),
      O => \count[4]_i_31_n_0\
    );
\count[4]_i_33\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1D001DFF"
    )
        port map (
      I0 => a_in_9(2),
      I1 => \count[4]_i_17_1\,
      I2 => a_in_9(34),
      I3 => \count[4]_i_17_0\,
      I4 => a_in_9(18),
      O => \count_reg_reg[2]\
    );
\count[4]_i_34\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00FF1D1D"
    )
        port map (
      I0 => a_in_9(42),
      I1 => \count[4]_i_17_1\,
      I2 => a_in_9(10),
      I3 => a_in_9(26),
      I4 => \count[4]_i_17_0\,
      O => \^fsm_onehot_state_reg[3]\
    );
\count[4]_i_35\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => a_in_9(28),
      I1 => \count[4]_i_17_0\,
      I2 => a_in_9(12),
      I3 => \count[4]_i_17_1\,
      I4 => count1_carry_i_17(1),
      O => \^fsm_onehot_state_reg[3]_1\
    );
\count[4]_i_36\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => a_in_9(20),
      I1 => \count[4]_i_17_0\,
      I2 => a_in_9(4),
      I3 => \count[4]_i_17_1\,
      I4 => a_in_9(36),
      O => \^fsm_onehot_state_reg[3]_2\
    );
\count[4]_i_37\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"E2FFE200"
    )
        port map (
      I0 => a_in_9(0),
      I1 => \count[4]_i_17_1\,
      I2 => a_in_9(32),
      I3 => \count[4]_i_17_0\,
      I4 => a_in_9(16),
      O => \count[4]_i_37_n_0\
    );
\count[4]_i_38\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => a_in_9(24),
      I1 => \count[4]_i_17_0\,
      I2 => a_in_9(8),
      I3 => \count[4]_i_17_1\,
      I4 => a_in_9(40),
      O => \count[4]_i_38_n_0\
    );
\count[4]_i_39\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A0A0C0CFAFAFC0CF"
    )
        port map (
      I0 => \^fsm_onehot_state_reg[3]\,
      I1 => \count[4]_i_47_n_0\,
      I2 => count1_carry_i_13_0,
      I3 => \count[4]_i_48_n_0\,
      I4 => count1_carry_i_14_0,
      I5 => \count[4]_i_49_n_0\,
      O => \count[4]_i_39_n_0\
    );
\count[4]_i_3__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"363633369C9C999C"
    )
        port map (
      I0 => \^q\(3),
      I1 => D(2),
      I2 => \count_reg[0]_2\,
      I3 => \^q\(0),
      I4 => \count[4]_i_7__0_n_0\,
      I5 => a_in_8(4),
      O => \^j_reg[3]_1\
    );
\count[4]_i_40__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"47444777FFFFFFFF"
    )
        port map (
      I0 => a_in_9(25),
      I1 => \count[4]_i_17_0\,
      I2 => a_in_9(9),
      I3 => \count[4]_i_17_1\,
      I4 => a_in_9(41),
      I5 => count1_carry_i_14_0,
      O => \count[4]_i_40__0_n_0\
    );
\count[4]_i_41\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFB800B8"
    )
        port map (
      I0 => a_in_9(1),
      I1 => \count[4]_i_17_1\,
      I2 => a_in_9(33),
      I3 => \count[4]_i_17_0\,
      I4 => a_in_9(17),
      I5 => count1_carry_i_14_0,
      O => \count[4]_i_41_n_0\
    );
\count[4]_i_41__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5F01"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(0),
      I2 => \^q\(1),
      I3 => \^q\(3),
      O => \^j_reg[2]_3\
    );
\count[4]_i_42\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A0FE"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(0),
      I2 => \^q\(1),
      I3 => \^q\(3),
      O => \^j_reg[2]_2\
    );
\count[4]_i_43\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1D001DFF"
    )
        port map (
      I0 => a_in_9(3),
      I1 => \count[4]_i_17_1\,
      I2 => a_in_9(35),
      I3 => \count[4]_i_17_0\,
      I4 => a_in_9(19),
      O => \count_reg_reg[3]\
    );
\count[4]_i_44\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => a_in_9(7),
      I1 => \count[4]_i_17_1\,
      I2 => a_in_9(39),
      O => \count[4]_i_44_n_0\
    );
\count[4]_i_45\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => a_in_9(5),
      I1 => \count[4]_i_17_1\,
      I2 => a_in_9(37),
      O => \count[4]_i_45_n_0\
    );
\count[4]_i_47\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"47444777"
    )
        port map (
      I0 => a_in_9(18),
      I1 => \count[4]_i_17_0\,
      I2 => a_in_9(2),
      I3 => \count[4]_i_17_1\,
      I4 => a_in_9(34),
      O => \count[4]_i_47_n_0\
    );
\count[4]_i_48\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => a_in_9(22),
      I1 => \count[4]_i_17_0\,
      I2 => a_in_9(6),
      I3 => \count[4]_i_17_1\,
      I4 => a_in_9(38),
      O => \count[4]_i_48_n_0\
    );
\count[4]_i_49\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => a_in_9(30),
      I1 => \count[4]_i_17_0\,
      I2 => a_in_9(14),
      O => \count[4]_i_49_n_0\
    );
\count[4]_i_51\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"D0DD"
    )
        port map (
      I0 => \^j_reg[3]_0\,
      I1 => a_in_8(2),
      I2 => a_in_8(1),
      I3 => \count[4]_i_30__2_n_0\,
      O => \j_reg[3]_2\
    );
\count[4]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAC"
    )
        port map (
      I0 => \^j_reg[1]_2\,
      I1 => \count[4]_i_14_n_0\,
      I2 => \count[4]_i_11_0\(1),
      I3 => \count[4]_i_11_0\(0),
      O => \^j_reg[1]_0\
    );
\count[4]_i_7__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000417D417D"
    )
        port map (
      I0 => \count[4]_i_15__0_n_0\,
      I1 => \^q\(0),
      I2 => \^q\(2),
      I3 => \count[4]_i_11__3_0\,
      I4 => \count[4]_i_11__3_1\,
      I5 => \^q\(1),
      O => \count[4]_i_7__0_n_0\
    );
\count_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__0\(0),
      Q => count_reg(0)
    );
\count_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__0\(1),
      Q => count_reg(1)
    );
\count_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__0\(2),
      Q => count_reg(2)
    );
\count_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__0\(3),
      Q => count_reg(3)
    );
\count_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__0\(4),
      Q => count_reg(4)
    );
\done_aux_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFAABABBBB"
    )
        port map (
      I0 => done,
      I1 => \^q\(3),
      I2 => done_aux_reg_0,
      I3 => \count_reg[0]_0\,
      I4 => count1,
      I5 => \done_aux_i_3__1_n_0\,
      O => \done_aux_i_1__5_n_0\
    );
\done_aux_i_3__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0002"
    )
        port map (
      I0 => \^q\(3),
      I1 => \^q\(2),
      I2 => \^q\(0),
      I3 => \^q\(1),
      O => \done_aux_i_3__1_n_0\
    );
done_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \done_aux_i_1__5_n_0\,
      Q => done
    );
\j[0]_i_1__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(0),
      O => \j[0]_i_1__0_n_0\
    );
\j[1]_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      O => \p_0_in__0\(1)
    );
\j[2]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(0),
      I2 => \^q\(1),
      O => \p_0_in__0\(2)
    );
\j[3]_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => done,
      I1 => \^q\(3),
      O => j0
    );
\j[3]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(2),
      I2 => \^q\(1),
      O => \p_0_in__0\(3)
    );
\j_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \j[0]_i_1__0_n_0\,
      Q => \^q\(0)
    );
\j_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \p_0_in__0\(1),
      Q => \^q\(1)
    );
\j_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \p_0_in__0\(2),
      Q => \^q\(2)
    );
\j_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \p_0_in__0\(3),
      Q => \^q\(3)
    );
\valid_aux_i_1__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF02"
    )
        port map (
      I0 => \^q\(3),
      I1 => \valid_aux_i_2__0_n_0\,
      I2 => \count1_carry_i_6__0_n_0\,
      I3 => \^valid\,
      O => \valid_aux_i_1__2_n_0\
    );
\valid_aux_i_2__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFEFF"
    )
        port map (
      I0 => count_reg(1),
      I1 => count_reg(0),
      I2 => count_reg(4),
      I3 => count_reg(3),
      I4 => count_reg(2),
      O => \valid_aux_i_2__0_n_0\
    );
valid_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \valid_aux_i_1__2_n_0\,
      Q => \^valid\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_ctrl_logic__parameterized1\ is
  port (
    CO : out STD_LOGIC_VECTOR ( 0 to 0 );
    valid : out STD_LOGIC;
    \j_reg[2]_0\ : out STD_LOGIC;
    \j_reg[3]_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \j_reg[0]_0\ : out STD_LOGIC;
    \j_reg[3]_1\ : out STD_LOGIC;
    \j_reg[0]_1\ : out STD_LOGIC;
    \count_reg_reg[3]\ : out STD_LOGIC;
    \count_reg_reg[0]\ : out STD_LOGIC;
    \j_reg[3]_2\ : out STD_LOGIC;
    \j_reg[3]_3\ : out STD_LOGIC;
    \j_reg[0]_2\ : out STD_LOGIC;
    \count_reg_reg[2]\ : out STD_LOGIC;
    \count_reg_reg[0]_0\ : out STD_LOGIC;
    \count_reg_reg[1]\ : out STD_LOGIC;
    \count_reg_reg[0]_1\ : out STD_LOGIC;
    \j_reg[0]_3\ : out STD_LOGIC;
    \j_reg[1]_0\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_0\ : out STD_LOGIC;
    \count_reg_reg[4]\ : out STD_LOGIC;
    \j_reg[0]_4\ : out STD_LOGIC;
    \j_reg[3]_4\ : out STD_LOGIC;
    \j_reg[0]_5\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \FSM_onehot_state_reg[1]\ : out STD_LOGIC;
    valid_aux_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \j_reg[1]_1\ : out STD_LOGIC;
    \j_reg[1]_2\ : out STD_LOGIC;
    \count1_carry__0_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \count1_carry__1_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S : in STD_LOGIC_VECTOR ( 2 downto 0 );
    clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \count[4]_i_5__0_0\ : in STD_LOGIC;
    \count[4]_i_5__0_1\ : in STD_LOGIC;
    \count[4]_i_5__0_2\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \count1_carry_i_7__1_0\ : in STD_LOGIC;
    \count_reg[0]_0\ : in STD_LOGIC;
    \count1_carry__1_i_1__6\ : in STD_LOGIC;
    count1_carry_0 : in STD_LOGIC;
    done_aux_reg_0 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    done_aux_reg_1 : in STD_LOGIC;
    done_aux_reg_2 : in STD_LOGIC;
    \count[4]_i_7__0\ : in STD_LOGIC;
    \count[4]_i_7__0_0\ : in STD_LOGIC;
    a_in_8 : in STD_LOGIC_VECTOR ( 37 downto 0 );
    \count[4]_i_17__0_0\ : in STD_LOGIC;
    \count[4]_i_17__0_1\ : in STD_LOGIC;
    \count[4]_i_14__0_0\ : in STD_LOGIC;
    \count[4]_i_19__0_0\ : in STD_LOGIC;
    \count[4]_i_6__3_0\ : in STD_LOGIC;
    count1_carry_1 : in STD_LOGIC;
    count1_carry_2 : in STD_LOGIC;
    a_in_7 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \count1_carry_i_12__0\ : in STD_LOGIC;
    \count1_carry_i_8__1_0\ : in STD_LOGIC;
    \count[4]_i_4__5\ : in STD_LOGIC;
    \count1_carry_i_16__1_0\ : in STD_LOGIC;
    \count1_carry_i_16__1_1\ : in STD_LOGIC;
    \count1_carry_i_16__1_2\ : in STD_LOGIC;
    \count_reg_reg[0]_2\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    next_out_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_ctrl_logic__parameterized1\ : entity is "ctrl_logic";
end \design_1_top_nqueens_0_0_ctrl_logic__parameterized1\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_ctrl_logic__parameterized1\ is
  signal \^fsm_onehot_state_reg[3]\ : STD_LOGIC;
  signal count : STD_LOGIC;
  signal \count1_carry__0_n_0\ : STD_LOGIC;
  signal \count1_carry__0_n_1\ : STD_LOGIC;
  signal \count1_carry__0_n_2\ : STD_LOGIC;
  signal \count1_carry__0_n_3\ : STD_LOGIC;
  signal \count1_carry__1_n_2\ : STD_LOGIC;
  signal \count1_carry__1_n_3\ : STD_LOGIC;
  signal \count1_carry_i_11__1_n_0\ : STD_LOGIC;
  signal \count1_carry_i_14__0_n_0\ : STD_LOGIC;
  signal count1_carry_i_15_n_0 : STD_LOGIC;
  signal \count1_carry_i_16__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_17__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_18__0_n_0\ : STD_LOGIC;
  signal count1_carry_i_18_n_0 : STD_LOGIC;
  signal count1_carry_i_25_n_0 : STD_LOGIC;
  signal \count1_carry_i_3__6_n_0\ : STD_LOGIC;
  signal \count1_carry_i_4__1_n_0\ : STD_LOGIC;
  signal \count1_carry_i_8__1_n_0\ : STD_LOGIC;
  signal \count1_carry_i_9__4_n_0\ : STD_LOGIC;
  signal count1_carry_n_0 : STD_LOGIC;
  signal count1_carry_n_1 : STD_LOGIC;
  signal count1_carry_n_2 : STD_LOGIC;
  signal count1_carry_n_3 : STD_LOGIC;
  signal \count[4]_i_12__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_13__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_14__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_18__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_19__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_22_n_0\ : STD_LOGIC;
  signal \count[4]_i_25__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_26__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_28__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_29__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_32_n_0\ : STD_LOGIC;
  signal \count[4]_i_33__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_34__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_35__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_36__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_37__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_38__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_39__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_40_n_0\ : STD_LOGIC;
  signal \count[4]_i_43__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_44__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_45__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_46__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_47__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_48__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_49__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_50_n_0\ : STD_LOGIC;
  signal \count[4]_i_6__4_n_0\ : STD_LOGIC;
  signal count_reg : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^count_reg_reg[0]_0\ : STD_LOGIC;
  signal \^count_reg_reg[1]\ : STD_LOGIC;
  signal \^count_reg_reg[3]\ : STD_LOGIC;
  signal \^count_reg_reg[4]\ : STD_LOGIC;
  signal done : STD_LOGIC;
  signal \done_aux_i_1__4_n_0\ : STD_LOGIC;
  signal j0 : STD_LOGIC;
  signal \j[0]_i_1__1_n_0\ : STD_LOGIC;
  signal \^j_reg[0]_0\ : STD_LOGIC;
  signal \^j_reg[0]_1\ : STD_LOGIC;
  signal \^j_reg[0]_2\ : STD_LOGIC;
  signal \^j_reg[0]_3\ : STD_LOGIC;
  signal \^j_reg[1]_0\ : STD_LOGIC;
  signal \^j_reg[3]_0\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^j_reg[3]_2\ : STD_LOGIC;
  signal \^j_reg[3]_3\ : STD_LOGIC;
  signal \p_0_in__1\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \plusOp__1\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^valid\ : STD_LOGIC;
  signal \valid_aux_i_1__0_n_0\ : STD_LOGIC;
  signal \valid_aux_i_2__1_n_0\ : STD_LOGIC;
  signal valid_aux_i_3_n_0 : STD_LOGIC;
  signal NLW_count1_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__0_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_count1_carry__1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \count1_carry_i_13__0\ : label is "soft_lutpair95";
  attribute SOFT_HLUTNM of \count1_carry_i_15__0\ : label is "soft_lutpair92";
  attribute SOFT_HLUTNM of \count1_carry_i_17__0\ : label is "soft_lutpair100";
  attribute SOFT_HLUTNM of count1_carry_i_28 : label is "soft_lutpair97";
  attribute SOFT_HLUTNM of count1_carry_i_31 : label is "soft_lutpair104";
  attribute SOFT_HLUTNM of \count1_carry_i_32__0\ : label is "soft_lutpair96";
  attribute SOFT_HLUTNM of count1_carry_i_42 : label is "soft_lutpair96";
  attribute SOFT_HLUTNM of count1_carry_i_47 : label is "soft_lutpair97";
  attribute SOFT_HLUTNM of \count[0]_i_1__1\ : label is "soft_lutpair107";
  attribute SOFT_HLUTNM of \count[1]_i_1__1\ : label is "soft_lutpair107";
  attribute SOFT_HLUTNM of \count[2]_i_1__1\ : label is "soft_lutpair105";
  attribute SOFT_HLUTNM of \count[3]_i_1__1\ : label is "soft_lutpair93";
  attribute SOFT_HLUTNM of \count[4]_i_19__0\ : label is "soft_lutpair99";
  attribute SOFT_HLUTNM of \count[4]_i_20__0\ : label is "soft_lutpair99";
  attribute SOFT_HLUTNM of \count[4]_i_22\ : label is "soft_lutpair103";
  attribute SOFT_HLUTNM of \count[4]_i_26__0\ : label is "soft_lutpair91";
  attribute SOFT_HLUTNM of \count[4]_i_29__0\ : label is "soft_lutpair102";
  attribute SOFT_HLUTNM of \count[4]_i_2__1\ : label is "soft_lutpair93";
  attribute SOFT_HLUTNM of \count[4]_i_32\ : label is "soft_lutpair103";
  attribute SOFT_HLUTNM of \count[4]_i_33__0\ : label is "soft_lutpair98";
  attribute SOFT_HLUTNM of \count[4]_i_35__0\ : label is "soft_lutpair101";
  attribute SOFT_HLUTNM of \count[4]_i_3__5\ : label is "soft_lutpair94";
  attribute SOFT_HLUTNM of \count[4]_i_43__0\ : label is "soft_lutpair100";
  attribute SOFT_HLUTNM of \count[4]_i_44__0\ : label is "soft_lutpair91";
  attribute SOFT_HLUTNM of \count[4]_i_46__0\ : label is "soft_lutpair98";
  attribute SOFT_HLUTNM of \count[4]_i_47__0\ : label is "soft_lutpair102";
  attribute SOFT_HLUTNM of \count[4]_i_50\ : label is "soft_lutpair101";
  attribute SOFT_HLUTNM of \count[4]_i_8__0\ : label is "soft_lutpair95";
  attribute SOFT_HLUTNM of \j[0]_i_1__1\ : label is "soft_lutpair92";
  attribute SOFT_HLUTNM of \j[1]_i_1__1\ : label is "soft_lutpair106";
  attribute SOFT_HLUTNM of \j[2]_i_1__1\ : label is "soft_lutpair104";
  attribute SOFT_HLUTNM of \j[3]_i_2__0\ : label is "soft_lutpair106";
  attribute SOFT_HLUTNM of \valid_aux_i_2__1\ : label is "soft_lutpair105";
  attribute SOFT_HLUTNM of valid_aux_i_3 : label is "soft_lutpair94";
begin
  \FSM_onehot_state_reg[3]\ <= \^fsm_onehot_state_reg[3]\;
  \count_reg_reg[0]_0\ <= \^count_reg_reg[0]_0\;
  \count_reg_reg[1]\ <= \^count_reg_reg[1]\;
  \count_reg_reg[3]\ <= \^count_reg_reg[3]\;
  \count_reg_reg[4]\ <= \^count_reg_reg[4]\;
  \j_reg[0]_0\ <= \^j_reg[0]_0\;
  \j_reg[0]_1\ <= \^j_reg[0]_1\;
  \j_reg[0]_2\ <= \^j_reg[0]_2\;
  \j_reg[0]_3\ <= \^j_reg[0]_3\;
  \j_reg[1]_0\ <= \^j_reg[1]_0\;
  \j_reg[3]_0\(3 downto 0) <= \^j_reg[3]_0\(3 downto 0);
  \j_reg[3]_2\ <= \^j_reg[3]_2\;
  \j_reg[3]_3\ <= \^j_reg[3]_3\;
  valid <= \^valid\;
\FSM_onehot_state[3]_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^valid\,
      I1 => \count_reg_reg[0]_2\(2),
      O => valid_aux_reg_0(0)
    );
\FSM_onehot_state[4]_i_2__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFF888"
    )
        port map (
      I0 => \count_reg_reg[0]_2\(3),
      I1 => next_out_8,
      I2 => done,
      I3 => \count_reg_reg[0]_2\(2),
      I4 => \count_reg_reg[0]_2\(1),
      I5 => \count_reg_reg[0]_2\(0),
      O => E(0)
    );
\acks_out_reg_i_2__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFEFEFEFEFEFE"
    )
        port map (
      I0 => \count_reg_reg[0]_2\(1),
      I1 => \count_reg_reg[0]_2\(0),
      I2 => \count_reg_reg[0]_2\(4),
      I3 => done,
      I4 => \count_reg_reg[0]_2\(2),
      I5 => \^valid\,
      O => \FSM_onehot_state_reg[1]\
    );
count1_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => count1_carry_n_0,
      CO(2) => count1_carry_n_1,
      CO(1) => count1_carry_n_2,
      CO(0) => count1_carry_n_3,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => NLW_count1_carry_O_UNCONNECTED(3 downto 0),
      S(3 downto 2) => \count1_carry__0_0\(1 downto 0),
      S(1) => \count1_carry_i_3__6_n_0\,
      S(0) => \count1_carry_i_4__1_n_0\
    );
\count1_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => count1_carry_n_0,
      CO(3) => \count1_carry__0_n_0\,
      CO(2) => \count1_carry__0_n_1\,
      CO(1) => \count1_carry__0_n_2\,
      CO(0) => \count1_carry__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => \NLW_count1_carry__0_O_UNCONNECTED\(3 downto 0),
      S(3 downto 0) => \count1_carry__1_0\(3 downto 0)
    );
\count1_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \count1_carry__0_n_0\,
      CO(3) => \NLW_count1_carry__1_CO_UNCONNECTED\(3),
      CO(2) => CO(0),
      CO(1) => \count1_carry__1_n_2\,
      CO(0) => \count1_carry__1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0111",
      O(3 downto 0) => \NLW_count1_carry__1_O_UNCONNECTED\(3 downto 0),
      S(3) => '0',
      S(2 downto 0) => S(2 downto 0)
    );
\count1_carry_i_10__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^j_reg[3]_3\,
      I1 => done_aux_reg_0(1),
      O => \^count_reg_reg[1]\
    );
\count1_carry_i_11__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^j_reg[3]_0\(1),
      I1 => \count1_carry_i_18__0_n_0\,
      O => \count1_carry_i_11__1_n_0\
    );
\count1_carry_i_12__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBB888B"
    )
        port map (
      I0 => a_in_8(33),
      I1 => Q(3),
      I2 => \count[4]_i_18__0_n_0\,
      I3 => Q(0),
      I4 => \count1_carry_i_14__0_n_0\,
      O => \^j_reg[3]_2\
    );
\count1_carry_i_13__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"022F"
    )
        port map (
      I0 => \^j_reg[3]_2\,
      I1 => done_aux_reg_0(0),
      I2 => done_aux_reg_0(1),
      I3 => \^j_reg[3]_3\,
      O => \^count_reg_reg[0]_0\
    );
\count1_carry_i_14__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"D0101010D0D010D0"
    )
        port map (
      I0 => \count[4]_i_40_n_0\,
      I1 => Q(1),
      I2 => Q(0),
      I3 => Q(2),
      I4 => count1_carry_i_15_n_0,
      I5 => \count1_carry_i_16__0_n_0\,
      O => \count1_carry_i_14__0_n_0\
    );
count1_carry_i_15: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => a_in_8(23),
      I1 => a_in_8(8),
      I2 => \count[4]_i_7__0_0\,
      I3 => a_in_8(15),
      I4 => \count[4]_i_17__0_1\,
      I5 => \count1_carry_i_17__0_n_0\,
      O => count1_carry_i_15_n_0
    );
\count1_carry_i_15__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBB8B8B8"
    )
        port map (
      I0 => a_in_7(0),
      I1 => \^j_reg[0]_0\,
      I2 => \count1_carry_i_8__1_0\,
      I3 => count1_carry_i_25_n_0,
      I4 => \^j_reg[3]_0\(0),
      O => \j_reg[0]_4\
    );
\count1_carry_i_16__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"30305F503F3F5F50"
    )
        port map (
      I0 => a_in_8(12),
      I1 => a_in_8(27),
      I2 => \count[4]_i_7__0_0\,
      I3 => count1_carry_i_18_n_0,
      I4 => \count[4]_i_17__0_1\,
      I5 => a_in_8(19),
      O => \count1_carry_i_16__0_n_0\
    );
\count1_carry_i_16__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => a_in_7(1),
      I1 => \^j_reg[0]_0\,
      I2 => \count1_carry_i_12__0\,
      I3 => \^j_reg[3]_0\(0),
      I4 => count1_carry_i_25_n_0,
      O => \^j_reg[0]_1\
    );
\count1_carry_i_17__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => a_in_8(0),
      I1 => \count[4]_i_14__0_0\,
      I2 => a_in_8(30),
      O => \count1_carry_i_17__0_n_0\
    );
count1_carry_i_18: unisim.vcomponents.LUT4
    generic map(
      INIT => X"D0DD"
    )
        port map (
      I0 => a_in_8(34),
      I1 => \count[4]_i_14__0_0\,
      I2 => \count[4]_i_17__0_0\,
      I3 => a_in_8(4),
      O => count1_carry_i_18_n_0
    );
\count1_carry_i_18__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFF800F8"
    )
        port map (
      I0 => \^j_reg[3]_0\(0),
      I1 => count1_carry_i_25_n_0,
      I2 => \count1_carry_i_8__1_0\,
      I3 => \^j_reg[0]_0\,
      I4 => a_in_7(0),
      I5 => D(0),
      O => \count1_carry_i_18__0_n_0\
    );
count1_carry_i_25: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF0D0EFF000D0E00"
    )
        port map (
      I0 => \^j_reg[3]_0\(2),
      I1 => \count1_carry_i_16__1_0\,
      I2 => \count1_carry_i_16__1_1\,
      I3 => \^j_reg[3]_0\(1),
      I4 => \^j_reg[3]_0\(0),
      I5 => \count1_carry_i_16__1_2\,
      O => count1_carry_i_25_n_0
    );
count1_carry_i_28: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A56A"
    )
        port map (
      I0 => \^j_reg[3]_0\(3),
      I1 => \^j_reg[3]_0\(2),
      I2 => \^j_reg[3]_0\(0),
      I3 => \^j_reg[3]_0\(1),
      O => \j_reg[3]_4\
    );
count1_carry_i_31: unisim.vcomponents.LUT3
    generic map(
      INIT => X"39"
    )
        port map (
      I0 => \^j_reg[3]_0\(0),
      I1 => \^j_reg[3]_0\(2),
      I2 => \^j_reg[3]_0\(1),
      O => \j_reg[0]_5\
    );
\count1_carry_i_32__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1E70"
    )
        port map (
      I0 => \^j_reg[3]_0\(3),
      I1 => \^j_reg[3]_0\(0),
      I2 => \^j_reg[3]_0\(2),
      I3 => \^j_reg[3]_0\(1),
      O => \j_reg[3]_1\
    );
\count1_carry_i_3__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0006000099696690"
    )
        port map (
      I0 => D(3),
      I1 => \count1_carry__1_i_1__6\,
      I2 => count1_carry_0,
      I3 => \^count_reg_reg[3]\,
      I4 => \count1_carry_i_8__1_n_0\,
      I5 => \^j_reg[3]_0\(3),
      O => \count1_carry_i_3__6_n_0\
    );
count1_carry_i_42: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3780"
    )
        port map (
      I0 => \^j_reg[3]_0\(1),
      I1 => \^j_reg[3]_0\(2),
      I2 => \^j_reg[3]_0\(0),
      I3 => \^j_reg[3]_0\(3),
      O => \j_reg[1]_2\
    );
count1_carry_i_47: unisim.vcomponents.LUT4
    generic map(
      INIT => X"C87F"
    )
        port map (
      I0 => \^j_reg[3]_0\(1),
      I1 => \^j_reg[3]_0\(2),
      I2 => \^j_reg[3]_0\(0),
      I3 => \^j_reg[3]_0\(3),
      O => \j_reg[1]_1\
    );
\count1_carry_i_4__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0090A00001080801"
    )
        port map (
      I0 => \count1_carry_i_9__4_n_0\,
      I1 => \^count_reg_reg[3]\,
      I2 => count1_carry_1,
      I3 => \count1_carry_i_11__1_n_0\,
      I4 => count1_carry_2,
      I5 => \^j_reg[3]_0\(0),
      O => \count1_carry_i_4__1_n_0\
    );
\count1_carry_i_5__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFDD0FDD00000"
    )
        port map (
      I0 => \^j_reg[3]_2\,
      I1 => done_aux_reg_0(0),
      I2 => done_aux_reg_0(1),
      I3 => \^j_reg[3]_3\,
      I4 => \^j_reg[0]_2\,
      I5 => done_aux_reg_0(2),
      O => \count_reg_reg[0]\
    );
\count1_carry_i_7__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6A56"
    )
        port map (
      I0 => \^count_reg_reg[4]\,
      I1 => D(3),
      I2 => \count1_carry__1_i_1__6\,
      I3 => \count1_carry_i_8__1_n_0\,
      O => \^count_reg_reg[3]\
    );
\count1_carry_i_8__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"008E8EFF"
    )
        port map (
      I0 => \count1_carry_i_18__0_n_0\,
      I1 => \^j_reg[0]_1\,
      I2 => D(1),
      I3 => D(2),
      I4 => \count1_carry_i_7__1_0\,
      O => \count1_carry_i_8__1_n_0\
    );
\count1_carry_i_9__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8E71718E718E8E71"
    )
        port map (
      I0 => \count1_carry_i_18__0_n_0\,
      I1 => \^j_reg[0]_1\,
      I2 => D(1),
      I3 => \^j_reg[3]_0\(2),
      I4 => D(2),
      I5 => \count1_carry_i_7__1_0\,
      O => \count1_carry_i_9__4_n_0\
    );
\count[0]_i_1__1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => count_reg(0),
      O => \plusOp__1\(0)
    );
\count[1]_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => count_reg(0),
      I1 => count_reg(1),
      O => \plusOp__1\(1)
    );
\count[2]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => count_reg(2),
      I1 => count_reg(1),
      I2 => count_reg(0),
      O => \plusOp__1\(2)
    );
\count[3]_i_1__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => count_reg(3),
      I1 => count_reg(0),
      I2 => count_reg(1),
      I3 => count_reg(2),
      O => \plusOp__1\(3)
    );
\count[4]_i_10__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5555CCF0"
    )
        port map (
      I0 => a_in_8(35),
      I1 => \count[4]_i_19__0_n_0\,
      I2 => \^j_reg[1]_0\,
      I3 => Q(0),
      I4 => Q(3),
      O => \^j_reg[0]_2\
    );
\count[4]_i_12__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"05F5030305F5F3F3"
    )
        port map (
      I0 => a_in_8(26),
      I1 => a_in_8(11),
      I2 => \count[4]_i_7__0_0\,
      I3 => \count[4]_i_22_n_0\,
      I4 => \count[4]_i_17__0_1\,
      I5 => a_in_8(18),
      O => \count[4]_i_12__0_n_0\
    );
\count[4]_i_13__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"303F5F5F303F5050"
    )
        port map (
      I0 => a_in_8(14),
      I1 => a_in_8(29),
      I2 => \count[4]_i_7__0_0\,
      I3 => a_in_8(22),
      I4 => \count[4]_i_17__0_1\,
      I5 => \count[4]_i_6__3_0\,
      O => \count[4]_i_13__0_n_0\
    );
\count[4]_i_14__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \count[4]_i_25__0_n_0\,
      I1 => \count[4]_i_26__0_n_0\,
      I2 => \count[4]_i_7__0\,
      I3 => \count[4]_i_28__0_n_0\,
      I4 => \count[4]_i_7__0_0\,
      I5 => \count[4]_i_29__0_n_0\,
      O => \count[4]_i_14__0_n_0\
    );
\count[4]_i_16__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CFC0AFAFCFC0A0A0"
    )
        port map (
      I0 => a_in_8(17),
      I1 => \count[4]_i_32_n_0\,
      I2 => \count[4]_i_7__0_0\,
      I3 => a_in_8(25),
      I4 => \count[4]_i_17__0_1\,
      I5 => a_in_8(10),
      O => \FSM_onehot_state_reg[3]_0\
    );
\count[4]_i_17__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5050C0CF5F5FC0CF"
    )
        port map (
      I0 => \count[4]_i_33__0_n_0\,
      I1 => \count[4]_i_34__0_n_0\,
      I2 => \count[4]_i_7__0\,
      I3 => \count[4]_i_35__0_n_0\,
      I4 => \count[4]_i_7__0_0\,
      I5 => \count[4]_i_36__0_n_0\,
      O => \^j_reg[0]_3\
    );
\count[4]_i_18__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BE82FFFFBE820000"
    )
        port map (
      I0 => \count[4]_i_37__0_n_0\,
      I1 => Q(0),
      I2 => Q(2),
      I3 => \count[4]_i_38__0_n_0\,
      I4 => Q(1),
      I5 => \count[4]_i_39__0_n_0\,
      O => \count[4]_i_18__0_n_0\
    );
\count[4]_i_19__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \count[4]_i_40_n_0\,
      I1 => Q(1),
      I2 => \^j_reg[0]_3\,
      O => \count[4]_i_19__0_n_0\
    );
\count[4]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"10"
    )
        port map (
      I0 => \^j_reg[0]_0\,
      I1 => done,
      I2 => \count_reg[0]_0\,
      O => count
    );
\count[4]_i_20__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \count[4]_i_39__0_n_0\,
      I1 => Q(1),
      I2 => \count[4]_i_14__0_n_0\,
      O => \^j_reg[1]_0\
    );
\count[4]_i_22\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => a_in_8(3),
      I1 => \count[4]_i_17__0_0\,
      I2 => a_in_8(33),
      O => \count[4]_i_22_n_0\
    );
\count[4]_i_25__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"1D"
    )
        port map (
      I0 => a_in_8(13),
      I1 => \count[4]_i_17__0_1\,
      I2 => a_in_8(28),
      O => \count[4]_i_25__0_n_0\
    );
\count[4]_i_26__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0047FF47"
    )
        port map (
      I0 => a_in_8(5),
      I1 => \count[4]_i_14__0_0\,
      I2 => a_in_8(35),
      I3 => \count[4]_i_17__0_1\,
      I4 => a_in_8(20),
      O => \count[4]_i_26__0_n_0\
    );
\count[4]_i_28__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"470047FF"
    )
        port map (
      I0 => a_in_8(1),
      I1 => \count[4]_i_17__0_0\,
      I2 => a_in_8(31),
      I3 => \count[4]_i_17__0_1\,
      I4 => a_in_8(16),
      O => \count[4]_i_28__0_n_0\
    );
\count[4]_i_29__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"47"
    )
        port map (
      I0 => a_in_8(24),
      I1 => \count[4]_i_17__0_1\,
      I2 => a_in_8(9),
      O => \count[4]_i_29__0_n_0\
    );
\count[4]_i_2__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => count_reg(4),
      I1 => count_reg(2),
      I2 => count_reg(1),
      I3 => count_reg(0),
      I4 => count_reg(3),
      O => \plusOp__1\(4)
    );
\count[4]_i_31__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000FF4747"
    )
        port map (
      I0 => a_in_8(36),
      I1 => \count[4]_i_17__0_0\,
      I2 => a_in_8(6),
      I3 => a_in_8(21),
      I4 => \count[4]_i_17__0_1\,
      I5 => \count[4]_i_7__0_0\,
      O => \^fsm_onehot_state_reg[3]\
    );
\count[4]_i_32\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => a_in_8(2),
      I1 => \count[4]_i_17__0_0\,
      I2 => a_in_8(32),
      O => \count[4]_i_32_n_0\
    );
\count[4]_i_33__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => a_in_8(27),
      I1 => \count[4]_i_17__0_1\,
      I2 => a_in_8(12),
      O => \count[4]_i_33__0_n_0\
    );
\count[4]_i_34__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000D0DDFFFFD0DD"
    )
        port map (
      I0 => a_in_8(34),
      I1 => \count[4]_i_14__0_0\,
      I2 => \count[4]_i_17__0_0\,
      I3 => a_in_8(4),
      I4 => \count[4]_i_17__0_1\,
      I5 => a_in_8(19),
      O => \count[4]_i_34__0_n_0\
    );
\count[4]_i_35__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => a_in_8(23),
      I1 => \count[4]_i_17__0_1\,
      I2 => a_in_8(8),
      O => \count[4]_i_35__0_n_0\
    );
\count[4]_i_36__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => a_in_8(0),
      I1 => \count[4]_i_17__0_0\,
      I2 => a_in_8(30),
      I3 => \count[4]_i_17__0_1\,
      I4 => a_in_8(15),
      O => \count[4]_i_36__0_n_0\
    );
\count[4]_i_37__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F000FFF55335533"
    )
        port map (
      I0 => a_in_8(16),
      I1 => \count[4]_i_43__0_n_0\,
      I2 => a_in_8(24),
      I3 => \count[4]_i_17__0_1\,
      I4 => a_in_8(9),
      I5 => \count[4]_i_7__0_0\,
      O => \count[4]_i_37__0_n_0\
    );
\count[4]_i_38__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3030505F3F3F505F"
    )
        port map (
      I0 => a_in_8(13),
      I1 => a_in_8(28),
      I2 => \count[4]_i_7__0_0\,
      I3 => \count[4]_i_44__0_n_0\,
      I4 => \count[4]_i_17__0_1\,
      I5 => a_in_8(20),
      O => \count[4]_i_38__0_n_0\
    );
\count[4]_i_39__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CFC05F5FCFC05050"
    )
        port map (
      I0 => \count[4]_i_45__0_n_0\,
      I1 => \count[4]_i_46__0_n_0\,
      I2 => \count[4]_i_7__0\,
      I3 => \count[4]_i_47__0_n_0\,
      I4 => \count[4]_i_7__0_0\,
      I5 => \count[4]_i_48__0_n_0\,
      O => \count[4]_i_39__0_n_0\
    );
\count[4]_i_3__5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF80"
    )
        port map (
      I0 => \^j_reg[3]_0\(0),
      I1 => \^j_reg[3]_0\(2),
      I2 => \^j_reg[3]_0\(1),
      I3 => \^j_reg[3]_0\(3),
      O => \^j_reg[0]_0\
    );
\count[4]_i_40\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CFC05F50CFCF5F50"
    )
        port map (
      I0 => \count[4]_i_49__0_n_0\,
      I1 => \count[4]_i_50_n_0\,
      I2 => \count[4]_i_7__0\,
      I3 => \^fsm_onehot_state_reg[3]\,
      I4 => \count[4]_i_7__0_0\,
      I5 => \count[4]_i_19__0_0\,
      O => \count[4]_i_40_n_0\
    );
\count[4]_i_43__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => a_in_8(1),
      I1 => \count[4]_i_14__0_0\,
      I2 => a_in_8(31),
      O => \count[4]_i_43__0_n_0\
    );
\count[4]_i_44__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => a_in_8(5),
      I1 => \count[4]_i_14__0_0\,
      I2 => a_in_8(35),
      O => \count[4]_i_44__0_n_0\
    );
\count[4]_i_45__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => a_in_8(18),
      I1 => \count[4]_i_17__0_1\,
      I2 => a_in_8(3),
      I3 => \count[4]_i_14__0_0\,
      I4 => a_in_8(33),
      O => \count[4]_i_45__0_n_0\
    );
\count[4]_i_46__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"47"
    )
        port map (
      I0 => a_in_8(26),
      I1 => \count[4]_i_17__0_1\,
      I2 => a_in_8(11),
      O => \count[4]_i_46__0_n_0\
    );
\count[4]_i_47__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"1D"
    )
        port map (
      I0 => a_in_8(14),
      I1 => \count[4]_i_17__0_1\,
      I2 => a_in_8(29),
      O => \count[4]_i_47__0_n_0\
    );
\count[4]_i_48__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4447444744477777"
    )
        port map (
      I0 => a_in_8(22),
      I1 => \count[4]_i_17__0_1\,
      I2 => \count[4]_i_14__0_0\,
      I3 => a_in_8(37),
      I4 => \count[4]_i_17__0_0\,
      I5 => a_in_8(7),
      O => \count[4]_i_48__0_n_0\
    );
\count[4]_i_49__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => a_in_8(17),
      I1 => \count[4]_i_17__0_1\,
      I2 => a_in_8(2),
      I3 => \count[4]_i_14__0_0\,
      I4 => a_in_8(32),
      O => \count[4]_i_49__0_n_0\
    );
\count[4]_i_50\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"47"
    )
        port map (
      I0 => a_in_8(25),
      I1 => \count[4]_i_17__0_1\,
      I2 => a_in_8(10),
      O => \count[4]_i_50_n_0\
    );
\count[4]_i_5__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55556665AAAA6665"
    )
        port map (
      I0 => D(4),
      I1 => \count[4]_i_6__4_n_0\,
      I2 => \^j_reg[3]_0\(0),
      I3 => \count[4]_i_4__5\,
      I4 => \^j_reg[0]_0\,
      I5 => a_in_7(2),
      O => \^count_reg_reg[4]\
    );
\count[4]_i_6__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000004070F0F0407"
    )
        port map (
      I0 => \count[4]_i_12__0_n_0\,
      I1 => Q(2),
      I2 => Q(0),
      I3 => \count[4]_i_13__0_n_0\,
      I4 => Q(1),
      I5 => \count[4]_i_14__0_n_0\,
      O => \j_reg[2]_0\
    );
\count[4]_i_6__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B1BBB11100000000"
    )
        port map (
      I0 => \^j_reg[3]_0\(1),
      I1 => \count[4]_i_5__0_0\,
      I2 => \count[4]_i_5__0_1\,
      I3 => \^j_reg[3]_0\(2),
      I4 => \count[4]_i_5__0_2\,
      I5 => \^j_reg[3]_0\(0),
      O => \count[4]_i_6__4_n_0\
    );
\count[4]_i_8__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^j_reg[3]_2\,
      I1 => done_aux_reg_0(0),
      O => \count_reg_reg[0]_1\
    );
\count[4]_i_9__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"74777444"
    )
        port map (
      I0 => a_in_8(34),
      I1 => Q(3),
      I2 => \count[4]_i_18__0_n_0\,
      I3 => Q(0),
      I4 => \count[4]_i_19__0_n_0\,
      O => \^j_reg[3]_3\
    );
\count_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__1\(0),
      Q => count_reg(0)
    );
\count_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__1\(1),
      Q => count_reg(1)
    );
\count_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__1\(2),
      Q => count_reg(2)
    );
\count_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__1\(3),
      Q => count_reg(3)
    );
\count_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__1\(4),
      Q => count_reg(4)
    );
\done_aux_i_1__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF008000FF"
    )
        port map (
      I0 => \^j_reg[3]_0\(1),
      I1 => \^j_reg[3]_0\(2),
      I2 => \^j_reg[3]_0\(0),
      I3 => \^j_reg[3]_0\(3),
      I4 => \count_reg[0]_0\,
      I5 => done,
      O => \done_aux_i_1__4_n_0\
    );
\done_aux_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000096"
    )
        port map (
      I0 => \^j_reg[0]_2\,
      I1 => done_aux_reg_0(2),
      I2 => \^count_reg_reg[0]_0\,
      I3 => \^count_reg_reg[1]\,
      I4 => done_aux_reg_1,
      I5 => done_aux_reg_2,
      O => \count_reg_reg[2]\
    );
done_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \done_aux_i_1__4_n_0\,
      Q => done
    );
\j[0]_i_1__1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^j_reg[3]_0\(0),
      O => \j[0]_i_1__1_n_0\
    );
\j[1]_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^j_reg[3]_0\(1),
      I1 => \^j_reg[3]_0\(0),
      O => \p_0_in__1\(1)
    );
\j[2]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^j_reg[3]_0\(2),
      I1 => \^j_reg[3]_0\(0),
      I2 => \^j_reg[3]_0\(1),
      O => \p_0_in__1\(2)
    );
\j[3]_i_1__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"01111111"
    )
        port map (
      I0 => done,
      I1 => \^j_reg[3]_0\(3),
      I2 => \^j_reg[3]_0\(1),
      I3 => \^j_reg[3]_0\(2),
      I4 => \^j_reg[3]_0\(0),
      O => j0
    );
\j[3]_i_2__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \^j_reg[3]_0\(0),
      I1 => \^j_reg[3]_0\(2),
      I2 => \^j_reg[3]_0\(1),
      O => \p_0_in__1\(3)
    );
\j_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \j[0]_i_1__1_n_0\,
      Q => \^j_reg[3]_0\(0)
    );
\j_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \p_0_in__1\(1),
      Q => \^j_reg[3]_0\(1)
    );
\j_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \p_0_in__1\(2),
      Q => \^j_reg[3]_0\(2)
    );
\j_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \p_0_in__1\(3),
      Q => \^j_reg[3]_0\(3)
    );
\valid_aux_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF0200"
    )
        port map (
      I0 => \valid_aux_i_2__1_n_0\,
      I1 => count_reg(4),
      I2 => count_reg(3),
      I3 => valid_aux_i_3_n_0,
      I4 => \^valid\,
      O => \valid_aux_i_1__0_n_0\
    );
\valid_aux_i_2__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => count_reg(2),
      I1 => count_reg(1),
      I2 => count_reg(0),
      O => \valid_aux_i_2__1_n_0\
    );
valid_aux_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \^j_reg[3]_0\(0),
      I1 => \^j_reg[3]_0\(2),
      I2 => \^j_reg[3]_0\(1),
      I3 => \^j_reg[3]_0\(3),
      O => valid_aux_i_3_n_0
    );
valid_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \valid_aux_i_1__0_n_0\,
      Q => \^valid\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_ctrl_logic__parameterized2\ is
  port (
    valid : out STD_LOGIC;
    \j_reg[0]_0\ : out STD_LOGIC;
    \j_reg[1]_0\ : out STD_LOGIC;
    \j_reg[0]_1\ : out STD_LOGIC;
    \j_reg[1]_1\ : out STD_LOGIC;
    \j_reg[3]_0\ : out STD_LOGIC;
    \j_reg[3]_1\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_0\ : out STD_LOGIC;
    \j_reg[2]_0\ : out STD_LOGIC;
    \j_reg[3]_2\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_1\ : out STD_LOGIC;
    \j_reg[0]_2\ : out STD_LOGIC;
    \j_reg[0]_3\ : out STD_LOGIC;
    \j_reg[3]_3\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \FSM_onehot_state_reg[1]\ : out STD_LOGIC;
    valid_aux_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \j_reg[3]_4\ : out STD_LOGIC;
    clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count[4]_i_3__0_0\ : in STD_LOGIC;
    \count[4]_i_3__0_1\ : in STD_LOGIC;
    \count1_carry_i_12__1_0\ : in STD_LOGIC;
    \count[4]_i_8__2_0\ : in STD_LOGIC;
    \count_reg[0]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \count[4]_i_5__0\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \count1_carry__1_i_3__6\ : in STD_LOGIC;
    \count[4]_i_6__4\ : in STD_LOGIC;
    \count[4]_i_6__4_0\ : in STD_LOGIC;
    a_in_7 : in STD_LOGIC_VECTOR ( 29 downto 0 );
    count1_carry_i_25 : in STD_LOGIC;
    count1_carry_i_41_0 : in STD_LOGIC;
    count1_carry_i_19_0 : in STD_LOGIC;
    count1_carry_0 : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 4 downto 0 );
    a_in_6 : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \count[4]_i_3__0_2\ : in STD_LOGIC;
    \count[4]_i_3__0_3\ : in STD_LOGIC;
    \count[4]_i_7__4_0\ : in STD_LOGIC;
    \count[4]_i_7__4_1\ : in STD_LOGIC;
    \count[4]_i_8__2_1\ : in STD_LOGIC;
    \count1_carry_i_12__1_1\ : in STD_LOGIC;
    \count[4]_i_22__0_0\ : in STD_LOGIC;
    \count[4]_i_21__1_0\ : in STD_LOGIC;
    \count_reg_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    next_out_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_ctrl_logic__parameterized2\ : entity is "ctrl_logic";
end \design_1_top_nqueens_0_0_ctrl_logic__parameterized2\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_ctrl_logic__parameterized2\ is
  signal \^fsm_onehot_state_reg[3]\ : STD_LOGIC;
  signal \^fsm_onehot_state_reg[3]_0\ : STD_LOGIC;
  signal count : STD_LOGIC;
  signal count1 : STD_LOGIC;
  signal \count1_carry__0_i_1__7_n_0\ : STD_LOGIC;
  signal \count1_carry__0_i_2__7_n_0\ : STD_LOGIC;
  signal \count1_carry__0_i_3__7_n_0\ : STD_LOGIC;
  signal \count1_carry__0_i_4__7_n_0\ : STD_LOGIC;
  signal \count1_carry__0_n_0\ : STD_LOGIC;
  signal \count1_carry__0_n_1\ : STD_LOGIC;
  signal \count1_carry__0_n_2\ : STD_LOGIC;
  signal \count1_carry__0_n_3\ : STD_LOGIC;
  signal \count1_carry__1_i_1__7_n_0\ : STD_LOGIC;
  signal \count1_carry__1_i_2__7_n_0\ : STD_LOGIC;
  signal \count1_carry__1_i_3__7_n_0\ : STD_LOGIC;
  signal \count1_carry__1_n_2\ : STD_LOGIC;
  signal \count1_carry__1_n_3\ : STD_LOGIC;
  signal \count1_carry_i_10__1_n_0\ : STD_LOGIC;
  signal \count1_carry_i_11__2_n_0\ : STD_LOGIC;
  signal \count1_carry_i_12__1_n_0\ : STD_LOGIC;
  signal \count1_carry_i_13__2_n_0\ : STD_LOGIC;
  signal \count1_carry_i_14__1_n_0\ : STD_LOGIC;
  signal count1_carry_i_19_n_0 : STD_LOGIC;
  signal \count1_carry_i_1__7_n_0\ : STD_LOGIC;
  signal count1_carry_i_20_n_0 : STD_LOGIC;
  signal count1_carry_i_21_n_0 : STD_LOGIC;
  signal count1_carry_i_27_n_0 : STD_LOGIC;
  signal count1_carry_i_29_n_0 : STD_LOGIC;
  signal \count1_carry_i_2__7_n_0\ : STD_LOGIC;
  signal count1_carry_i_30_n_0 : STD_LOGIC;
  signal count1_carry_i_33_n_0 : STD_LOGIC;
  signal count1_carry_i_34_n_0 : STD_LOGIC;
  signal count1_carry_i_35_n_0 : STD_LOGIC;
  signal count1_carry_i_37_n_0 : STD_LOGIC;
  signal count1_carry_i_38_n_0 : STD_LOGIC;
  signal count1_carry_i_39_n_0 : STD_LOGIC;
  signal \count1_carry_i_3__7_n_0\ : STD_LOGIC;
  signal count1_carry_i_40_n_0 : STD_LOGIC;
  signal count1_carry_i_43_n_0 : STD_LOGIC;
  signal count1_carry_i_44_n_0 : STD_LOGIC;
  signal count1_carry_i_45_n_0 : STD_LOGIC;
  signal count1_carry_i_46_n_0 : STD_LOGIC;
  signal \count1_carry_i_4__2_n_0\ : STD_LOGIC;
  signal \count1_carry_i_5__2_n_0\ : STD_LOGIC;
  signal \count1_carry_i_6__2_n_0\ : STD_LOGIC;
  signal \count1_carry_i_7__2_n_0\ : STD_LOGIC;
  signal \count1_carry_i_9__0_n_0\ : STD_LOGIC;
  signal count1_carry_n_0 : STD_LOGIC;
  signal count1_carry_n_1 : STD_LOGIC;
  signal count1_carry_n_2 : STD_LOGIC;
  signal count1_carry_n_3 : STD_LOGIC;
  signal \count[4]_i_10__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_11__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_13__1_n_0\ : STD_LOGIC;
  signal \count[4]_i_18__1_n_0\ : STD_LOGIC;
  signal \count[4]_i_19__1_n_0\ : STD_LOGIC;
  signal \count[4]_i_20__2_n_0\ : STD_LOGIC;
  signal \count[4]_i_21__1_n_0\ : STD_LOGIC;
  signal \count[4]_i_22__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_29__1_n_0\ : STD_LOGIC;
  signal \count[4]_i_32__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_3__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_4__1_n_0\ : STD_LOGIC;
  signal \count[4]_i_6__1_n_0\ : STD_LOGIC;
  signal \count[4]_i_7__4_n_0\ : STD_LOGIC;
  signal \count[4]_i_8__2_n_0\ : STD_LOGIC;
  signal count_reg : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal done : STD_LOGIC;
  signal \done_aux_i_1__6_n_0\ : STD_LOGIC;
  signal j0 : STD_LOGIC;
  signal \j[0]_i_1__2_n_0\ : STD_LOGIC;
  signal j_reg : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^j_reg[0]_2\ : STD_LOGIC;
  signal \^j_reg[0]_3\ : STD_LOGIC;
  signal \^j_reg[1]_0\ : STD_LOGIC;
  signal \^j_reg[1]_1\ : STD_LOGIC;
  signal \^j_reg[3]_0\ : STD_LOGIC;
  signal \^j_reg[3]_1\ : STD_LOGIC;
  signal \p_0_in__2\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \plusOp__2\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^valid\ : STD_LOGIC;
  signal \valid_aux_i_1__1_n_0\ : STD_LOGIC;
  signal \valid_aux_i_2__7_n_0\ : STD_LOGIC;
  signal NLW_count1_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__0_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_count1_carry__1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \count1_carry_i_13__2\ : label is "soft_lutpair77";
  attribute SOFT_HLUTNM of count1_carry_i_34 : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of count1_carry_i_35 : label is "soft_lutpair85";
  attribute SOFT_HLUTNM of count1_carry_i_38 : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of count1_carry_i_44 : label is "soft_lutpair85";
  attribute SOFT_HLUTNM of \count1_carry_i_5__2\ : label is "soft_lutpair77";
  attribute SOFT_HLUTNM of \count1_carry_i_6__2\ : label is "soft_lutpair74";
  attribute SOFT_HLUTNM of \count1_carry_i_9__0\ : label is "soft_lutpair84";
  attribute SOFT_HLUTNM of \count[1]_i_1__2\ : label is "soft_lutpair86";
  attribute SOFT_HLUTNM of \count[2]_i_1__2\ : label is "soft_lutpair86";
  attribute SOFT_HLUTNM of \count[3]_i_1__2\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of \count[4]_i_13__1\ : label is "soft_lutpair81";
  attribute SOFT_HLUTNM of \count[4]_i_18__1\ : label is "soft_lutpair74";
  attribute SOFT_HLUTNM of \count[4]_i_21__1\ : label is "soft_lutpair84";
  attribute SOFT_HLUTNM of \count[4]_i_25__2\ : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of \count[4]_i_26__1\ : label is "soft_lutpair75";
  attribute SOFT_HLUTNM of \count[4]_i_29__1\ : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of \count[4]_i_2__2\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of \count[4]_i_32__0\ : label is "soft_lutpair78";
  attribute SOFT_HLUTNM of \count[4]_i_6__1\ : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of \count[4]_i_9__0\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \j[0]_i_1__2\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \j[1]_i_1__2\ : label is "soft_lutpair81";
  attribute SOFT_HLUTNM of \j[2]_i_1__2\ : label is "soft_lutpair78";
  attribute SOFT_HLUTNM of \j[3]_i_2__1\ : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of \valid_aux_i_2__7\ : label is "soft_lutpair75";
begin
  \FSM_onehot_state_reg[3]\ <= \^fsm_onehot_state_reg[3]\;
  \FSM_onehot_state_reg[3]_0\ <= \^fsm_onehot_state_reg[3]_0\;
  \j_reg[0]_2\ <= \^j_reg[0]_2\;
  \j_reg[0]_3\ <= \^j_reg[0]_3\;
  \j_reg[1]_0\ <= \^j_reg[1]_0\;
  \j_reg[1]_1\ <= \^j_reg[1]_1\;
  \j_reg[3]_0\ <= \^j_reg[3]_0\;
  \j_reg[3]_1\ <= \^j_reg[3]_1\;
  valid <= \^valid\;
\FSM_onehot_state[3]_i_1__2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^valid\,
      I1 => \count_reg_reg[0]\(2),
      O => valid_aux_reg_0(0)
    );
\FSM_onehot_state[4]_i_2__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFF888"
    )
        port map (
      I0 => \count_reg_reg[0]\(3),
      I1 => next_out_7,
      I2 => done,
      I3 => \count_reg_reg[0]\(2),
      I4 => \count_reg_reg[0]\(1),
      I5 => \count_reg_reg[0]\(0),
      O => E(0)
    );
\acks_out_reg_i_2__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFEFEFEFEFEFE"
    )
        port map (
      I0 => \count_reg_reg[0]\(1),
      I1 => \count_reg_reg[0]\(0),
      I2 => \count_reg_reg[0]\(4),
      I3 => done,
      I4 => \count_reg_reg[0]\(2),
      I5 => \^valid\,
      O => \FSM_onehot_state_reg[1]\
    );
count1_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => count1_carry_n_0,
      CO(2) => count1_carry_n_1,
      CO(1) => count1_carry_n_2,
      CO(0) => count1_carry_n_3,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => NLW_count1_carry_O_UNCONNECTED(3 downto 0),
      S(3) => \count1_carry_i_1__7_n_0\,
      S(2) => \count1_carry_i_2__7_n_0\,
      S(1) => \count1_carry_i_3__7_n_0\,
      S(0) => \count1_carry_i_4__2_n_0\
    );
\count1_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => count1_carry_n_0,
      CO(3) => \count1_carry__0_n_0\,
      CO(2) => \count1_carry__0_n_1\,
      CO(1) => \count1_carry__0_n_2\,
      CO(0) => \count1_carry__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => \NLW_count1_carry__0_O_UNCONNECTED\(3 downto 0),
      S(3) => \count1_carry__0_i_1__7_n_0\,
      S(2) => \count1_carry__0_i_2__7_n_0\,
      S(1) => \count1_carry__0_i_3__7_n_0\,
      S(0) => \count1_carry__0_i_4__7_n_0\
    );
\count1_carry__0_i_1__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000F000F000F6669"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__2_n_0\,
      I2 => \count1_carry_i_6__2_n_0\,
      I3 => j_reg(3),
      I4 => \count[4]_i_4__1_n_0\,
      I5 => \count1_carry_i_7__2_n_0\,
      O => \count1_carry__0_i_1__7_n_0\
    );
\count1_carry__0_i_2__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000F000F000F6669"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__2_n_0\,
      I2 => \count1_carry_i_6__2_n_0\,
      I3 => j_reg(3),
      I4 => \count[4]_i_4__1_n_0\,
      I5 => \count1_carry_i_7__2_n_0\,
      O => \count1_carry__0_i_2__7_n_0\
    );
\count1_carry__0_i_3__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000F000F000F6669"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__2_n_0\,
      I2 => \count1_carry_i_6__2_n_0\,
      I3 => j_reg(3),
      I4 => \count[4]_i_4__1_n_0\,
      I5 => \count1_carry_i_7__2_n_0\,
      O => \count1_carry__0_i_3__7_n_0\
    );
\count1_carry__0_i_4__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000F000F000F6669"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__2_n_0\,
      I2 => \count1_carry_i_6__2_n_0\,
      I3 => j_reg(3),
      I4 => \count[4]_i_4__1_n_0\,
      I5 => \count1_carry_i_7__2_n_0\,
      O => \count1_carry__0_i_4__7_n_0\
    );
\count1_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \count1_carry__0_n_0\,
      CO(3) => \NLW_count1_carry__1_CO_UNCONNECTED\(3),
      CO(2) => count1,
      CO(1) => \count1_carry__1_n_2\,
      CO(0) => \count1_carry__1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0111",
      O(3 downto 0) => \NLW_count1_carry__1_O_UNCONNECTED\(3 downto 0),
      S(3) => '0',
      S(2) => \count1_carry__1_i_1__7_n_0\,
      S(1) => \count1_carry__1_i_2__7_n_0\,
      S(0) => \count1_carry__1_i_3__7_n_0\
    );
\count1_carry__1_i_1__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000F000F000F0009"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__2_n_0\,
      I2 => j_reg(3),
      I3 => \count1_carry_i_6__2_n_0\,
      I4 => \count[4]_i_4__1_n_0\,
      I5 => \count1_carry_i_7__2_n_0\,
      O => \count1_carry__1_i_1__7_n_0\
    );
\count1_carry__1_i_2__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000F000F000F6669"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__2_n_0\,
      I2 => \count1_carry_i_6__2_n_0\,
      I3 => j_reg(3),
      I4 => \count[4]_i_4__1_n_0\,
      I5 => \count1_carry_i_7__2_n_0\,
      O => \count1_carry__1_i_2__7_n_0\
    );
\count1_carry__1_i_3__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000F000F000F6669"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__2_n_0\,
      I2 => \count1_carry_i_6__2_n_0\,
      I3 => j_reg(3),
      I4 => \count[4]_i_4__1_n_0\,
      I5 => \count1_carry_i_7__2_n_0\,
      O => \count1_carry__1_i_3__7_n_0\
    );
\count1_carry_i_10__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \count[4]_i_10__0_n_0\,
      I1 => D(1),
      O => \count1_carry_i_10__1_n_0\
    );
\count1_carry_i_11__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9669696969969696"
    )
        port map (
      I0 => \count1_carry_i_13__2_n_0\,
      I1 => D(2),
      I2 => \count[4]_i_11__0_n_0\,
      I3 => j_reg(1),
      I4 => j_reg(0),
      I5 => j_reg(2),
      O => \count1_carry_i_11__2_n_0\
    );
\count1_carry_i_12__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000E2E2E2EE"
    )
        port map (
      I0 => a_in_6(0),
      I1 => \count[4]_i_6__1_n_0\,
      I2 => \count[4]_i_20__2_n_0\,
      I3 => j_reg(0),
      I4 => \count[4]_i_19__1_n_0\,
      I5 => D(0),
      O => \count1_carry_i_12__1_n_0\
    );
\count1_carry_i_13__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"282828EBEBEB28EB"
    )
        port map (
      I0 => count1_carry_i_19_n_0,
      I1 => \count[4]_i_5__0\(1),
      I2 => \count[4]_i_5__0\(0),
      I3 => count1_carry_i_20_n_0,
      I4 => \count[4]_i_5__0\(2),
      I5 => count1_carry_i_21_n_0,
      O => \^j_reg[1]_0\
    );
\count1_carry_i_13__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2B"
    )
        port map (
      I0 => \count1_carry_i_12__1_n_0\,
      I1 => D(1),
      I2 => \count[4]_i_10__0_n_0\,
      O => \count1_carry_i_13__2_n_0\
    );
\count1_carry_i_14__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"C55C"
    )
        port map (
      I0 => \^j_reg[3]_0\,
      I1 => \^j_reg[3]_1\,
      I2 => \count[4]_i_5__0\(1),
      I3 => \count[4]_i_5__0\(0),
      O => \count1_carry_i_14__1_n_0\
    );
\count1_carry_i_17__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"77444747"
    )
        port map (
      I0 => Q(2),
      I1 => \count1_carry__1_i_3__6\,
      I2 => \^j_reg[1]_1\,
      I3 => \count1_carry_i_14__1_n_0\,
      I4 => \count[4]_i_5__0\(0),
      O => \j_reg[0]_1\
    );
count1_carry_i_19: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8B8B00FF"
    )
        port map (
      I0 => count1_carry_i_27_n_0,
      I1 => \count[4]_i_6__4\,
      I2 => count1_carry_i_29_n_0,
      I3 => count1_carry_i_30_n_0,
      I4 => \count[4]_i_6__4_0\,
      O => count1_carry_i_19_n_0
    );
\count1_carry_i_1__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000F000F000F6669"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__2_n_0\,
      I2 => \count1_carry_i_6__2_n_0\,
      I3 => j_reg(3),
      I4 => \count[4]_i_4__1_n_0\,
      I5 => \count1_carry_i_7__2_n_0\,
      O => \count1_carry_i_1__7_n_0\
    );
count1_carry_i_20: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => a_in_7(10),
      I1 => a_in_7(26),
      I2 => \count[4]_i_6__4\,
      I3 => a_in_7(18),
      I4 => count1_carry_i_25,
      I5 => count1_carry_i_33_n_0,
      O => count1_carry_i_20_n_0
    );
count1_carry_i_21: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => a_in_7(6),
      I1 => a_in_7(22),
      I2 => \count[4]_i_6__4\,
      I3 => a_in_7(14),
      I4 => count1_carry_i_25,
      I5 => Q(0),
      O => count1_carry_i_21_n_0
    );
count1_carry_i_22: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF008D8D"
    )
        port map (
      I0 => \count[4]_i_6__4\,
      I1 => count1_carry_i_34_n_0,
      I2 => count1_carry_i_35_n_0,
      I3 => \^fsm_onehot_state_reg[3]_0\,
      I4 => \count[4]_i_6__4_0\,
      O => \^j_reg[3]_0\
    );
count1_carry_i_23: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CF035555"
    )
        port map (
      I0 => \^fsm_onehot_state_reg[3]\,
      I1 => \count[4]_i_6__4\,
      I2 => count1_carry_i_37_n_0,
      I3 => count1_carry_i_38_n_0,
      I4 => \count[4]_i_6__4_0\,
      O => \^j_reg[3]_1\
    );
count1_carry_i_24: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000E0FF0000E000"
    )
        port map (
      I0 => count1_carry_i_30_n_0,
      I1 => \count[4]_i_5__0\(2),
      I2 => count1_carry_i_39_n_0,
      I3 => \count[4]_i_5__0\(1),
      I4 => \count[4]_i_5__0\(0),
      I5 => count1_carry_i_40_n_0,
      O => \j_reg[2]_0\
    );
count1_carry_i_26: unisim.vcomponents.LUT4
    generic map(
      INIT => X"28EB"
    )
        port map (
      I0 => count1_carry_i_40_n_0,
      I1 => \count[4]_i_5__0\(1),
      I2 => \count[4]_i_5__0\(0),
      I3 => count1_carry_i_19_n_0,
      O => \^j_reg[1]_1\
    );
count1_carry_i_27: unisim.vcomponents.LUT3
    generic map(
      INIT => X"47"
    )
        port map (
      I0 => a_in_7(8),
      I1 => count1_carry_i_25,
      I2 => a_in_7(24),
      O => count1_carry_i_27_n_0
    );
count1_carry_i_29: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => a_in_7(16),
      I1 => count1_carry_i_25,
      I2 => a_in_7(0),
      I3 => count1_carry_i_19_0,
      I4 => Q(2),
      O => count1_carry_i_29_n_0
    );
\count1_carry_i_2__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000F000F000F6669"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__2_n_0\,
      I2 => \count1_carry_i_6__2_n_0\,
      I3 => j_reg(3),
      I4 => \count[4]_i_4__1_n_0\,
      I5 => \count1_carry_i_7__2_n_0\,
      O => \count1_carry_i_2__7_n_0\
    );
count1_carry_i_30: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => a_in_7(4),
      I1 => a_in_7(20),
      I2 => \count[4]_i_6__4\,
      I3 => a_in_7(12),
      I4 => count1_carry_i_25,
      I5 => a_in_7(28),
      O => count1_carry_i_30_n_0
    );
count1_carry_i_33: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => a_in_7(2),
      I1 => count1_carry_i_19_0,
      I2 => Q(4),
      O => count1_carry_i_33_n_0
    );
count1_carry_i_34: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => a_in_7(3),
      I1 => count1_carry_i_25,
      I2 => a_in_7(19),
      O => count1_carry_i_34_n_0
    );
count1_carry_i_35: unisim.vcomponents.LUT3
    generic map(
      INIT => X"47"
    )
        port map (
      I0 => a_in_7(11),
      I1 => count1_carry_i_25,
      I2 => a_in_7(27),
      O => count1_carry_i_35_n_0
    );
count1_carry_i_36: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => a_in_7(5),
      I1 => a_in_7(21),
      I2 => \count[4]_i_6__4\,
      I3 => a_in_7(13),
      I4 => count1_carry_i_25,
      I5 => a_in_7(29),
      O => \^fsm_onehot_state_reg[3]\
    );
count1_carry_i_37: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => a_in_7(17),
      I1 => count1_carry_i_25,
      I2 => a_in_7(1),
      I3 => count1_carry_i_19_0,
      I4 => Q(3),
      O => count1_carry_i_37_n_0
    );
count1_carry_i_38: unisim.vcomponents.LUT3
    generic map(
      INIT => X"47"
    )
        port map (
      I0 => a_in_7(9),
      I1 => count1_carry_i_25,
      I2 => a_in_7(25),
      O => count1_carry_i_38_n_0
    );
count1_carry_i_39: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF77744474"
    )
        port map (
      I0 => count1_carry_i_43_n_0,
      I1 => \count[4]_i_6__4\,
      I2 => a_in_7(24),
      I3 => count1_carry_i_25,
      I4 => a_in_7(8),
      I5 => \count[4]_i_6__4_0\,
      O => count1_carry_i_39_n_0
    );
\count1_carry_i_3__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0006000600096000"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__2_n_0\,
      I2 => \count1_carry_i_6__2_n_0\,
      I3 => j_reg(3),
      I4 => \count[4]_i_4__1_n_0\,
      I5 => \count1_carry_i_7__2_n_0\,
      O => \count1_carry_i_3__7_n_0\
    );
count1_carry_i_40: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BB8B888B"
    )
        port map (
      I0 => count1_carry_i_21_n_0,
      I1 => \count[4]_i_6__4_0\,
      I2 => count1_carry_i_44_n_0,
      I3 => \count[4]_i_6__4\,
      I4 => count1_carry_i_45_n_0,
      O => count1_carry_i_40_n_0
    );
count1_carry_i_41: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000888AAA8A"
    )
        port map (
      I0 => count1_carry_i_46_n_0,
      I1 => \count[4]_i_6__4\,
      I2 => a_in_7(25),
      I3 => count1_carry_i_25,
      I4 => a_in_7(9),
      I5 => \count[4]_i_6__4_0\,
      O => \j_reg[3]_2\
    );
count1_carry_i_43: unisim.vcomponents.LUT5
    generic map(
      INIT => X"470047FF"
    )
        port map (
      I0 => a_in_7(0),
      I1 => count1_carry_i_41_0,
      I2 => Q(2),
      I3 => count1_carry_i_25,
      I4 => a_in_7(16),
      O => count1_carry_i_43_n_0
    );
count1_carry_i_44: unisim.vcomponents.LUT3
    generic map(
      INIT => X"47"
    )
        port map (
      I0 => a_in_7(10),
      I1 => count1_carry_i_25,
      I2 => a_in_7(26),
      O => count1_carry_i_44_n_0
    );
count1_carry_i_45: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => a_in_7(2),
      I1 => count1_carry_i_41_0,
      I2 => Q(4),
      I3 => count1_carry_i_25,
      I4 => a_in_7(18),
      O => count1_carry_i_45_n_0
    );
count1_carry_i_46: unisim.vcomponents.LUT6
    generic map(
      INIT => X"47FF47FF00FFFFFF"
    )
        port map (
      I0 => a_in_7(1),
      I1 => count1_carry_i_41_0,
      I2 => Q(3),
      I3 => \count[4]_i_6__4\,
      I4 => a_in_7(17),
      I5 => count1_carry_i_25,
      O => count1_carry_i_46_n_0
    );
\count1_carry_i_4__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0120200084000085"
    )
        port map (
      I0 => j_reg(0),
      I1 => \count1_carry_i_7__2_n_0\,
      I2 => count1_carry_0,
      I3 => \count1_carry_i_9__0_n_0\,
      I4 => \count1_carry_i_10__1_n_0\,
      I5 => \count1_carry_i_11__2_n_0\,
      O => \count1_carry_i_4__2_n_0\
    );
\count1_carry_i_5__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5555CFC0"
    )
        port map (
      I0 => Q(3),
      I1 => \^j_reg[1]_0\,
      I2 => \count[4]_i_5__0\(0),
      I3 => \count1_carry_i_14__1_n_0\,
      I4 => \count1_carry__1_i_3__6\,
      O => \j_reg[0]_0\
    );
\count1_carry_i_5__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"002B2BFF"
    )
        port map (
      I0 => \count1_carry_i_12__1_n_0\,
      I1 => D(1),
      I2 => \count[4]_i_10__0_n_0\,
      I3 => D(2),
      I4 => \count[4]_i_11__0_n_0\,
      O => \count1_carry_i_5__2_n_0\
    );
\count1_carry_i_6__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => j_reg(1),
      I1 => j_reg(2),
      I2 => j_reg(0),
      O => \count1_carry_i_6__2_n_0\
    );
\count1_carry_i_7__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"599A"
    )
        port map (
      I0 => \count[4]_i_3__0_n_0\,
      I1 => \count1_carry_i_5__2_n_0\,
      I2 => D(3),
      I3 => \^j_reg[0]_3\,
      O => \count1_carry_i_7__2_n_0\
    );
\count1_carry_i_9__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"69"
    )
        port map (
      I0 => j_reg(0),
      I1 => j_reg(1),
      I2 => \count1_carry_i_12__1_n_0\,
      O => \count1_carry_i_9__0_n_0\
    );
\count[0]_i_1__2\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => count_reg(0),
      O => \plusOp__2\(0)
    );
\count[1]_i_1__2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => count_reg(0),
      I1 => count_reg(1),
      O => \plusOp__2\(1)
    );
\count[2]_i_1__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => count_reg(2),
      I1 => count_reg(1),
      I2 => count_reg(0),
      O => \plusOp__2\(2)
    );
\count[3]_i_1__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => count_reg(3),
      I1 => count_reg(0),
      I2 => count_reg(1),
      I3 => count_reg(2),
      O => \plusOp__2\(3)
    );
\count[4]_i_10__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"D100D1FF"
    )
        port map (
      I0 => \count[4]_i_21__1_n_0\,
      I1 => j_reg(0),
      I2 => \count[4]_i_19__1_n_0\,
      I3 => \count[4]_i_6__1_n_0\,
      I4 => a_in_6(1),
      O => \count[4]_i_10__0_n_0\
    );
\count[4]_i_11__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3F553055"
    )
        port map (
      I0 => a_in_6(2),
      I1 => \count[4]_i_21__1_n_0\,
      I2 => j_reg(0),
      I3 => \count[4]_i_6__1_n_0\,
      I4 => \count[4]_i_22__0_n_0\,
      O => \count[4]_i_11__0_n_0\
    );
\count[4]_i_12__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F3550355"
    )
        port map (
      I0 => a_in_6(3),
      I1 => \count[4]_i_8__2_n_0\,
      I2 => j_reg(0),
      I3 => \count[4]_i_6__1_n_0\,
      I4 => \count[4]_i_22__0_n_0\,
      O => \^j_reg[0]_3\
    );
\count[4]_i_13__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BEEB8228"
    )
        port map (
      I0 => \count[4]_i_7__4_0\,
      I1 => j_reg(2),
      I2 => j_reg(0),
      I3 => j_reg(1),
      I4 => \count[4]_i_7__4_1\,
      O => \count[4]_i_13__1_n_0\
    );
\count[4]_i_18__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BEEB8228"
    )
        port map (
      I0 => \count[4]_i_8__2_1\,
      I1 => j_reg(2),
      I2 => j_reg(0),
      I3 => j_reg(1),
      I4 => \count[4]_i_8__2_0\,
      O => \count[4]_i_18__1_n_0\
    );
\count[4]_i_19__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBB8B8BB88B8B888"
    )
        port map (
      I0 => \count[4]_i_29__1_n_0\,
      I1 => j_reg(1),
      I2 => \count[4]_i_7__4_1\,
      I3 => j_reg(2),
      I4 => j_reg(0),
      I5 => \count1_carry_i_12__1_1\,
      O => \count[4]_i_19__1_n_0\
    );
\count[4]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000EF0000000000"
    )
        port map (
      I0 => \count[4]_i_3__0_n_0\,
      I1 => \count[4]_i_4__1_n_0\,
      I2 => \count_reg[0]_0\,
      I3 => \count[4]_i_6__1_n_0\,
      I4 => done,
      I5 => count1,
      O => count
    );
\count[4]_i_20__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFB800B800000000"
    )
        port map (
      I0 => \count1_carry_i_12__1_0\,
      I1 => j_reg(2),
      I2 => \count[4]_i_8__2_0\,
      I3 => j_reg(1),
      I4 => \count[4]_i_32__0_n_0\,
      I5 => j_reg(0),
      O => \count[4]_i_20__2_n_0\
    );
\count[4]_i_21__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \count[4]_i_18__1_n_0\,
      I1 => j_reg(1),
      I2 => \count[4]_i_32__0_n_0\,
      O => \count[4]_i_21__1_n_0\
    );
\count[4]_i_22__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \count[4]_i_13__1_n_0\,
      I1 => j_reg(1),
      I2 => \count[4]_i_29__1_n_0\,
      O => \count[4]_i_22__0_n_0\
    );
\count[4]_i_25__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"91EC"
    )
        port map (
      I0 => j_reg(3),
      I1 => j_reg(1),
      I2 => j_reg(0),
      I3 => j_reg(2),
      O => \j_reg[3]_4\
    );
\count[4]_i_26__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"599A"
    )
        port map (
      I0 => j_reg(3),
      I1 => j_reg(1),
      I2 => j_reg(2),
      I3 => j_reg(0),
      O => \j_reg[3]_3\
    );
\count[4]_i_29__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BEEB8228"
    )
        port map (
      I0 => \count[4]_i_3__0_0\,
      I1 => j_reg(2),
      I2 => j_reg(0),
      I3 => j_reg(1),
      I4 => \count[4]_i_22__0_0\,
      O => \count[4]_i_29__1_n_0\
    );
\count[4]_i_2__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => count_reg(4),
      I1 => count_reg(2),
      I2 => count_reg(1),
      I3 => count_reg(0),
      I4 => count_reg(3),
      O => \plusOp__2\(4)
    );
\count[4]_i_32__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BEEB8228"
    )
        port map (
      I0 => \count[4]_i_3__0_3\,
      I1 => j_reg(2),
      I2 => j_reg(0),
      I3 => j_reg(1),
      I4 => \count[4]_i_21__1_0\,
      O => \count[4]_i_32__0_n_0\
    );
\count[4]_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"565656A656A656A6"
    )
        port map (
      I0 => D(4),
      I1 => a_in_6(4),
      I2 => \count[4]_i_6__1_n_0\,
      I3 => \count[4]_i_7__4_n_0\,
      I4 => \count[4]_i_8__2_n_0\,
      I5 => j_reg(0),
      O => \count[4]_i_3__0_n_0\
    );
\count[4]_i_4__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF66FF66FFFFF"
    )
        port map (
      I0 => \^j_reg[0]_2\,
      I1 => D(0),
      I2 => D(1),
      I3 => \count[4]_i_10__0_n_0\,
      I4 => D(2),
      I5 => \count[4]_i_11__0_n_0\,
      O => \count[4]_i_4__1_n_0\
    );
\count[4]_i_6__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"07"
    )
        port map (
      I0 => j_reg(2),
      I1 => j_reg(1),
      I2 => j_reg(3),
      O => \count[4]_i_6__1_n_0\
    );
\count[4]_i_7__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFAFCFC0A0A0CFC0"
    )
        port map (
      I0 => a_in_7(7),
      I1 => a_in_7(23),
      I2 => \count[4]_i_6__4\,
      I3 => Q(1),
      I4 => count1_carry_i_25,
      I5 => a_in_7(15),
      O => \^fsm_onehot_state_reg[3]_0\
    );
\count[4]_i_7__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"001D0011001D00DD"
    )
        port map (
      I0 => \count[4]_i_13__1_n_0\,
      I1 => j_reg(1),
      I2 => \count[4]_i_3__0_0\,
      I3 => j_reg(0),
      I4 => j_reg(2),
      I5 => \count[4]_i_3__0_1\,
      O => \count[4]_i_7__4_n_0\
    );
\count[4]_i_8__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => a_in_7(11),
      I1 => a_in_7(27),
      I2 => a_in_7(19),
      I3 => count1_carry_i_25,
      I4 => a_in_7(3),
      I5 => \count[4]_i_6__4\,
      O => \FSM_onehot_state_reg[3]_1\
    );
\count[4]_i_8__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BE82FFFFBE820000"
    )
        port map (
      I0 => \count[4]_i_3__0_2\,
      I1 => j_reg(2),
      I2 => j_reg(0),
      I3 => \count[4]_i_3__0_3\,
      I4 => j_reg(1),
      I5 => \count[4]_i_18__1_n_0\,
      O => \count[4]_i_8__2_n_0\
    );
\count[4]_i_9__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F1FFF100"
    )
        port map (
      I0 => \count[4]_i_19__1_n_0\,
      I1 => j_reg(0),
      I2 => \count[4]_i_20__2_n_0\,
      I3 => \count[4]_i_6__1_n_0\,
      I4 => a_in_6(0),
      O => \^j_reg[0]_2\
    );
\count_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__2\(0),
      Q => count_reg(0)
    );
\count_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__2\(1),
      Q => count_reg(1)
    );
\count_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__2\(2),
      Q => count_reg(2)
    );
\count_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__2\(3),
      Q => count_reg(3)
    );
\count_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__2\(4),
      Q => count_reg(4)
    );
\done_aux_i_1__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF01111111"
    )
        port map (
      I0 => j_reg(3),
      I1 => count,
      I2 => j_reg(0),
      I3 => j_reg(1),
      I4 => j_reg(2),
      I5 => done,
      O => \done_aux_i_1__6_n_0\
    );
done_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \done_aux_i_1__6_n_0\,
      Q => done
    );
\j[0]_i_1__2\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => j_reg(0),
      O => \j[0]_i_1__2_n_0\
    );
\j[1]_i_1__2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => j_reg(0),
      I1 => j_reg(1),
      O => \p_0_in__2\(1)
    );
\j[2]_i_1__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => j_reg(2),
      I1 => j_reg(0),
      I2 => j_reg(1),
      O => \p_0_in__2\(2)
    );
\j[3]_i_1__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0015"
    )
        port map (
      I0 => j_reg(3),
      I1 => j_reg(1),
      I2 => j_reg(2),
      I3 => done,
      O => j0
    );
\j[3]_i_2__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => j_reg(0),
      I1 => j_reg(2),
      I2 => j_reg(1),
      O => \p_0_in__2\(3)
    );
\j_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \j[0]_i_1__2_n_0\,
      Q => j_reg(0)
    );
\j_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \p_0_in__2\(1),
      Q => j_reg(1)
    );
\j_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \p_0_in__2\(2),
      Q => j_reg(2)
    );
\j_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \p_0_in__2\(3),
      Q => j_reg(3)
    );
\valid_aux_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF01000000"
    )
        port map (
      I0 => \valid_aux_i_2__7_n_0\,
      I1 => count_reg(4),
      I2 => count_reg(3),
      I3 => count_reg(2),
      I4 => count_reg(1),
      I5 => \^valid\,
      O => \valid_aux_i_1__1_n_0\
    );
\valid_aux_i_2__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFF7"
    )
        port map (
      I0 => j_reg(2),
      I1 => j_reg(1),
      I2 => j_reg(0),
      I3 => count_reg(0),
      I4 => j_reg(3),
      O => \valid_aux_i_2__7_n_0\
    );
valid_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \valid_aux_i_1__1_n_0\,
      Q => \^valid\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_ctrl_logic__parameterized3\ is
  port (
    valid : out STD_LOGIC;
    \j_reg[0]_0\ : out STD_LOGIC;
    \j_reg[2]_0\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_0\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_1\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_2\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_3\ : out STD_LOGIC;
    \count_reg_reg[3]\ : out STD_LOGIC;
    \count_reg_reg[1]\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_4\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_5\ : out STD_LOGIC;
    \count_reg_reg[2]\ : out STD_LOGIC;
    \count_reg_reg[4]\ : out STD_LOGIC;
    \count_reg_reg[0]\ : out STD_LOGIC;
    \j_reg[0]_1\ : out STD_LOGIC;
    \j_reg[0]_2\ : out STD_LOGIC;
    \j_reg[1]_0\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \FSM_onehot_state_reg[1]\ : out STD_LOGIC;
    valid_aux_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \j_reg[2]_1\ : out STD_LOGIC;
    clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \count1_carry_i_13__3_0\ : in STD_LOGIC;
    \count1_carry_i_13__3_1\ : in STD_LOGIC;
    \count_reg[0]_0\ : in STD_LOGIC;
    a_in_6 : in STD_LOGIC_VECTOR ( 29 downto 0 );
    \count[4]_i_8__2\ : in STD_LOGIC;
    \count[4]_i_8__2_0\ : in STD_LOGIC;
    count1_carry_0 : in STD_LOGIC;
    count1_carry_1 : in STD_LOGIC;
    a_in_5 : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \count[4]_i_10__1_0\ : in STD_LOGIC;
    \count[4]_i_10__1_1\ : in STD_LOGIC;
    \count[4]_i_3__1_0\ : in STD_LOGIC;
    \count[4]_i_3__1_1\ : in STD_LOGIC;
    \count[4]_i_6__0_0\ : in STD_LOGIC;
    \count[4]_i_19__2_0\ : in STD_LOGIC;
    \count[4]_i_12__2_0\ : in STD_LOGIC;
    \count[4]_i_12__2_1\ : in STD_LOGIC;
    \count[4]_i_21__2_0\ : in STD_LOGIC;
    \count[4]_i_7__2_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 4 downto 0 );
    next_out_6 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_ctrl_logic__parameterized3\ : entity is "ctrl_logic";
end \design_1_top_nqueens_0_0_ctrl_logic__parameterized3\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_ctrl_logic__parameterized3\ is
  signal count : STD_LOGIC;
  signal count1 : STD_LOGIC;
  signal \count1_carry__0_i_1__1_n_0\ : STD_LOGIC;
  signal \count1_carry__0_i_2__1_n_0\ : STD_LOGIC;
  signal \count1_carry__0_i_3__1_n_0\ : STD_LOGIC;
  signal \count1_carry__0_i_4__1_n_0\ : STD_LOGIC;
  signal \count1_carry__0_n_0\ : STD_LOGIC;
  signal \count1_carry__0_n_1\ : STD_LOGIC;
  signal \count1_carry__0_n_2\ : STD_LOGIC;
  signal \count1_carry__0_n_3\ : STD_LOGIC;
  signal \count1_carry__1_i_1__1_n_0\ : STD_LOGIC;
  signal \count1_carry__1_i_2__1_n_0\ : STD_LOGIC;
  signal \count1_carry__1_i_3__1_n_0\ : STD_LOGIC;
  signal \count1_carry__1_n_2\ : STD_LOGIC;
  signal \count1_carry__1_n_3\ : STD_LOGIC;
  signal \count1_carry_i_12__2_n_0\ : STD_LOGIC;
  signal \count1_carry_i_13__3_n_0\ : STD_LOGIC;
  signal \count1_carry_i_14__2_n_0\ : STD_LOGIC;
  signal \count1_carry_i_1__1_n_0\ : STD_LOGIC;
  signal \count1_carry_i_2__1_n_0\ : STD_LOGIC;
  signal \count1_carry_i_3__1_n_0\ : STD_LOGIC;
  signal \count1_carry_i_4__3_n_0\ : STD_LOGIC;
  signal \count1_carry_i_5__3_n_0\ : STD_LOGIC;
  signal \count1_carry_i_6__6_n_0\ : STD_LOGIC;
  signal \count1_carry_i_7__5_n_0\ : STD_LOGIC;
  signal \count1_carry_i_8__3_n_0\ : STD_LOGIC;
  signal \count1_carry_i_9__1_n_0\ : STD_LOGIC;
  signal count1_carry_n_0 : STD_LOGIC;
  signal count1_carry_n_1 : STD_LOGIC;
  signal count1_carry_n_2 : STD_LOGIC;
  signal count1_carry_n_3 : STD_LOGIC;
  signal \count[0]_i_1__3_n_0\ : STD_LOGIC;
  signal \count[4]_i_11__1_n_0\ : STD_LOGIC;
  signal \count[4]_i_15__2_n_0\ : STD_LOGIC;
  signal \count[4]_i_16__2_n_0\ : STD_LOGIC;
  signal \count[4]_i_19__2_n_0\ : STD_LOGIC;
  signal \count[4]_i_20__3_n_0\ : STD_LOGIC;
  signal \count[4]_i_21__2_n_0\ : STD_LOGIC;
  signal \count[4]_i_22__1_n_0\ : STD_LOGIC;
  signal \count[4]_i_30__1_n_0\ : STD_LOGIC;
  signal \count[4]_i_31__2_n_0\ : STD_LOGIC;
  signal \count[4]_i_3__1_n_0\ : STD_LOGIC;
  signal \count[4]_i_4__2_n_0\ : STD_LOGIC;
  signal \count[4]_i_6__0_n_0\ : STD_LOGIC;
  signal \count[4]_i_7__2_n_0\ : STD_LOGIC;
  signal \count[4]_i_8__4_n_0\ : STD_LOGIC;
  signal count_reg : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal done : STD_LOGIC;
  signal \done_aux_i_1__0_n_0\ : STD_LOGIC;
  signal \done_aux_i_2__1_n_0\ : STD_LOGIC;
  signal j0 : STD_LOGIC;
  signal \j[0]_i_1__3_n_0\ : STD_LOGIC;
  signal j_reg : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^j_reg[0]_0\ : STD_LOGIC;
  signal \^j_reg[0]_1\ : STD_LOGIC;
  signal \^j_reg[0]_2\ : STD_LOGIC;
  signal \p_0_in__3\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \plusOp__3\ : STD_LOGIC_VECTOR ( 4 downto 1 );
  signal \^valid\ : STD_LOGIC;
  signal \valid_aux_i_1__5_n_0\ : STD_LOGIC;
  signal \valid_aux_i_2__2_n_0\ : STD_LOGIC;
  signal NLW_count1_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__0_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_count1_carry__1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \count1_carry_i_12__2\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \count1_carry_i_14__2\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \count1_carry_i_5__3\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \count1_carry_i_6__6\ : label is "soft_lutpair67";
  attribute SOFT_HLUTNM of \count1_carry_i_8__3\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \count1_carry_i_9__1\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \count[0]_i_1__3\ : label is "soft_lutpair69";
  attribute SOFT_HLUTNM of \count[1]_i_1__3\ : label is "soft_lutpair69";
  attribute SOFT_HLUTNM of \count[2]_i_1__3\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \count[3]_i_1__3\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \count[4]_i_11__1\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \count[4]_i_15__2\ : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of \count[4]_i_22__1\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \count[4]_i_23__0\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \count[4]_i_24__2\ : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of \count[4]_i_2__3\ : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of \count[4]_i_30__1\ : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \count[4]_i_31__2\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \count[4]_i_33__2\ : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of \count[4]_i_8__4\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \done_aux_i_2__1\ : label is "soft_lutpair67";
  attribute SOFT_HLUTNM of \j[0]_i_1__3\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \j[1]_i_1__3\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \j[2]_i_1__3\ : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \j[3]_i_2__2\ : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of \valid_aux_i_2__2\ : label is "soft_lutpair59";
begin
  \j_reg[0]_0\ <= \^j_reg[0]_0\;
  \j_reg[0]_1\ <= \^j_reg[0]_1\;
  \j_reg[0]_2\ <= \^j_reg[0]_2\;
  valid <= \^valid\;
\FSM_onehot_state[3]_i_1__3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^valid\,
      I1 => Q(2),
      O => valid_aux_reg_0(0)
    );
\FSM_onehot_state[4]_i_2__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFF888"
    )
        port map (
      I0 => Q(3),
      I1 => next_out_6,
      I2 => done,
      I3 => Q(2),
      I4 => Q(1),
      I5 => Q(0),
      O => E(0)
    );
\acks_out_reg_i_2__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFEFEFEFEFEFE"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(4),
      I3 => done,
      I4 => Q(2),
      I5 => \^valid\,
      O => \FSM_onehot_state_reg[1]\
    );
count1_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => count1_carry_n_0,
      CO(2) => count1_carry_n_1,
      CO(1) => count1_carry_n_2,
      CO(0) => count1_carry_n_3,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => NLW_count1_carry_O_UNCONNECTED(3 downto 0),
      S(3) => \count1_carry_i_1__1_n_0\,
      S(2) => \count1_carry_i_2__1_n_0\,
      S(1) => \count1_carry_i_3__1_n_0\,
      S(0) => \count1_carry_i_4__3_n_0\
    );
\count1_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => count1_carry_n_0,
      CO(3) => \count1_carry__0_n_0\,
      CO(2) => \count1_carry__0_n_1\,
      CO(1) => \count1_carry__0_n_2\,
      CO(0) => \count1_carry__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => \NLW_count1_carry__0_O_UNCONNECTED\(3 downto 0),
      S(3) => \count1_carry__0_i_1__1_n_0\,
      S(2) => \count1_carry__0_i_2__1_n_0\,
      S(1) => \count1_carry__0_i_3__1_n_0\,
      S(0) => \count1_carry__0_i_4__1_n_0\
    );
\count1_carry__0_i_1__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F096F0"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__3_n_0\,
      I2 => \count1_carry_i_6__6_n_0\,
      I3 => \count[4]_i_4__2_n_0\,
      I4 => \count1_carry_i_7__5_n_0\,
      O => \count1_carry__0_i_1__1_n_0\
    );
\count1_carry__0_i_2__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F096F0"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__3_n_0\,
      I2 => \count1_carry_i_6__6_n_0\,
      I3 => \count[4]_i_4__2_n_0\,
      I4 => \count1_carry_i_7__5_n_0\,
      O => \count1_carry__0_i_2__1_n_0\
    );
\count1_carry__0_i_3__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F096F0"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__3_n_0\,
      I2 => \count1_carry_i_6__6_n_0\,
      I3 => \count[4]_i_4__2_n_0\,
      I4 => \count1_carry_i_7__5_n_0\,
      O => \count1_carry__0_i_3__1_n_0\
    );
\count1_carry__0_i_4__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F096F0"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__3_n_0\,
      I2 => \count1_carry_i_6__6_n_0\,
      I3 => \count[4]_i_4__2_n_0\,
      I4 => \count1_carry_i_7__5_n_0\,
      O => \count1_carry__0_i_4__1_n_0\
    );
\count1_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \count1_carry__0_n_0\,
      CO(3) => \NLW_count1_carry__1_CO_UNCONNECTED\(3),
      CO(2) => count1,
      CO(1) => \count1_carry__1_n_2\,
      CO(0) => \count1_carry__1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0111",
      O(3 downto 0) => \NLW_count1_carry__1_O_UNCONNECTED\(3 downto 0),
      S(3) => '0',
      S(2) => \count1_carry__1_i_1__1_n_0\,
      S(1) => \count1_carry__1_i_2__1_n_0\,
      S(0) => \count1_carry__1_i_3__1_n_0\
    );
\count1_carry__1_i_1__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F090F0"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__3_n_0\,
      I2 => \count1_carry_i_6__6_n_0\,
      I3 => \count[4]_i_4__2_n_0\,
      I4 => \count1_carry_i_7__5_n_0\,
      O => \count1_carry__1_i_1__1_n_0\
    );
\count1_carry__1_i_2__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F096F0"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__3_n_0\,
      I2 => \count1_carry_i_6__6_n_0\,
      I3 => \count[4]_i_4__2_n_0\,
      I4 => \count1_carry_i_7__5_n_0\,
      O => \count1_carry__1_i_2__1_n_0\
    );
\count1_carry__1_i_3__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F096F0"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__3_n_0\,
      I2 => \count1_carry_i_6__6_n_0\,
      I3 => \count[4]_i_4__2_n_0\,
      I4 => \count1_carry_i_7__5_n_0\,
      O => \count1_carry__1_i_3__1_n_0\
    );
\count1_carry_i_12__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"69969669"
    )
        port map (
      I0 => \count1_carry_i_14__2_n_0\,
      I1 => D(2),
      I2 => \count[4]_i_11__1_n_0\,
      I3 => j_reg(2),
      I4 => j_reg(1),
      O => \count1_carry_i_12__2_n_0\
    );
\count1_carry_i_13__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFAE00AE"
    )
        port map (
      I0 => \count[4]_i_20__3_n_0\,
      I1 => j_reg(0),
      I2 => \count[4]_i_19__2_n_0\,
      I3 => \count[4]_i_8__4_n_0\,
      I4 => a_in_5(0),
      I5 => D(0),
      O => \count1_carry_i_13__3_n_0\
    );
\count1_carry_i_14__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2B"
    )
        port map (
      I0 => \count1_carry_i_13__3_n_0\,
      I1 => D(1),
      I2 => \^j_reg[0]_2\,
      O => \count1_carry_i_14__2_n_0\
    );
\count1_carry_i_1__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F096F0"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__3_n_0\,
      I2 => \count1_carry_i_6__6_n_0\,
      I3 => \count[4]_i_4__2_n_0\,
      I4 => \count1_carry_i_7__5_n_0\,
      O => \count1_carry_i_1__1_n_0\
    );
\count1_carry_i_2__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F096F0"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__3_n_0\,
      I2 => \count1_carry_i_6__6_n_0\,
      I3 => \count[4]_i_4__2_n_0\,
      I4 => \count1_carry_i_7__5_n_0\,
      O => \count1_carry_i_2__1_n_0\
    );
\count1_carry_i_3__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0600000000006069"
    )
        port map (
      I0 => \count_reg[0]_0\,
      I1 => \count1_carry_i_5__3_n_0\,
      I2 => \count1_carry_i_7__5_n_0\,
      I3 => \count[4]_i_4__2_n_0\,
      I4 => j_reg(3),
      I5 => \count1_carry_i_8__3_n_0\,
      O => \count1_carry_i_3__1_n_0\
    );
\count1_carry_i_4__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0058000248002100"
    )
        port map (
      I0 => \count1_carry_i_9__1_n_0\,
      I1 => \count1_carry_i_7__5_n_0\,
      I2 => count1_carry_0,
      I3 => count1_carry_1,
      I4 => \count1_carry_i_12__2_n_0\,
      I5 => j_reg(0),
      O => \count1_carry_i_4__3_n_0\
    );
\count1_carry_i_5__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"002B2BFF"
    )
        port map (
      I0 => \count1_carry_i_13__3_n_0\,
      I1 => D(1),
      I2 => \^j_reg[0]_2\,
      I3 => D(2),
      I4 => \count[4]_i_11__1_n_0\,
      O => \count1_carry_i_5__3_n_0\
    );
\count1_carry_i_6__6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"07"
    )
        port map (
      I0 => j_reg(1),
      I1 => j_reg(2),
      I2 => j_reg(3),
      O => \count1_carry_i_6__6_n_0\
    );
\count1_carry_i_7__5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6A56"
    )
        port map (
      I0 => \count[4]_i_3__1_n_0\,
      I1 => \^j_reg[0]_0\,
      I2 => D(3),
      I3 => \count1_carry_i_5__3_n_0\,
      O => \count1_carry_i_7__5_n_0\
    );
\count1_carry_i_8__3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => j_reg(1),
      I1 => j_reg(2),
      O => \count1_carry_i_8__3_n_0\
    );
\count1_carry_i_9__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => j_reg(1),
      I1 => \count1_carry_i_13__3_n_0\,
      O => \count1_carry_i_9__1_n_0\
    );
\count[0]_i_1__3\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => count_reg(0),
      O => \count[0]_i_1__3_n_0\
    );
\count[1]_i_1__3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => count_reg(1),
      I1 => count_reg(0),
      O => \plusOp__3\(1)
    );
\count[2]_i_1__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => count_reg(2),
      I1 => count_reg(0),
      I2 => count_reg(1),
      O => \plusOp__3\(2)
    );
\count[3]_i_1__3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => count_reg(3),
      I1 => count_reg(1),
      I2 => count_reg(0),
      I3 => count_reg(2),
      O => \plusOp__3\(3)
    );
\count[4]_i_10__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"74777444"
    )
        port map (
      I0 => a_in_5(1),
      I1 => \count[4]_i_8__4_n_0\,
      I2 => \count[4]_i_21__2_n_0\,
      I3 => j_reg(0),
      I4 => \count[4]_i_19__2_n_0\,
      O => \^j_reg[0]_2\
    );
\count[4]_i_11__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"74777444"
    )
        port map (
      I0 => a_in_5(2),
      I1 => \count[4]_i_8__4_n_0\,
      I2 => \count[4]_i_22__1_n_0\,
      I3 => j_reg(0),
      I4 => \count[4]_i_21__2_n_0\,
      O => \count[4]_i_11__1_n_0\
    );
\count[4]_i_12__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"74777444"
    )
        port map (
      I0 => a_in_5(3),
      I1 => \count[4]_i_8__4_n_0\,
      I2 => \count[4]_i_7__2_n_0\,
      I3 => j_reg(0),
      I4 => \count[4]_i_22__1_n_0\,
      O => \^j_reg[0]_0\
    );
\count[4]_i_14__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"470047FF"
    )
        port map (
      I0 => a_in_6(7),
      I1 => \count[4]_i_8__2_0\,
      I2 => a_in_6(23),
      I3 => \count[4]_i_8__2\,
      I4 => a_in_6(15),
      O => \FSM_onehot_state_reg[3]_3\
    );
\count[4]_i_15__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"505F3030505F3F3F"
    )
        port map (
      I0 => a_in_6(11),
      I1 => a_in_6(27),
      I2 => \count[4]_i_8__2\,
      I3 => a_in_6(19),
      I4 => \count[4]_i_8__2_0\,
      I5 => a_in_6(3),
      O => \FSM_onehot_state_reg[3]_0\
    );
\count[4]_i_15__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AFEBA028"
    )
        port map (
      I0 => \count[4]_i_10__1_1\,
      I1 => j_reg(1),
      I2 => j_reg(2),
      I3 => j_reg(0),
      I4 => \count[4]_i_6__0_0\,
      O => \count[4]_i_15__2_n_0\
    );
\count[4]_i_16__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => a_in_6(10),
      I1 => a_in_6(26),
      I2 => \count[4]_i_8__2\,
      I3 => a_in_6(18),
      I4 => \count[4]_i_8__2_0\,
      I5 => a_in_6(2),
      O => \FSM_onehot_state_reg[3]\
    );
\count[4]_i_16__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"33AAA33A"
    )
        port map (
      I0 => \count[4]_i_7__2_0\,
      I1 => \count1_carry_i_13__3_0\,
      I2 => j_reg(1),
      I3 => j_reg(2),
      I4 => j_reg(0),
      O => \count[4]_i_16__2_n_0\
    );
\count[4]_i_17__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => a_in_6(6),
      I1 => \count[4]_i_8__2_0\,
      I2 => a_in_6(22),
      I3 => \count[4]_i_8__2\,
      I4 => a_in_6(14),
      O => \FSM_onehot_state_reg[3]_5\
    );
\count[4]_i_19__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8FFFFB8B80000B8"
    )
        port map (
      I0 => \count[4]_i_10__1_0\,
      I1 => j_reg(2),
      I2 => \count[4]_i_10__1_1\,
      I3 => j_reg(1),
      I4 => j_reg(0),
      I5 => \count[4]_i_30__1_n_0\,
      O => \count[4]_i_19__2_n_0\
    );
\count[4]_i_1__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BF000000"
    )
        port map (
      I0 => \count[4]_i_3__1_n_0\,
      I1 => \count[4]_i_4__2_n_0\,
      I2 => \count_reg[0]_0\,
      I3 => j0,
      I4 => count1,
      O => count
    );
\count[4]_i_20__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1313131010101310"
    )
        port map (
      I0 => \count[4]_i_31__2_n_0\,
      I1 => j_reg(0),
      I2 => j_reg(1),
      I3 => \count1_carry_i_13__3_0\,
      I4 => j_reg(2),
      I5 => \count1_carry_i_13__3_1\,
      O => \count[4]_i_20__3_n_0\
    );
\count[4]_i_21__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BE82"
    )
        port map (
      I0 => \count[4]_i_31__2_n_0\,
      I1 => j_reg(1),
      I2 => j_reg(0),
      I3 => \count[4]_i_16__2_n_0\,
      O => \count[4]_i_21__2_n_0\
    );
\count[4]_i_22__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BE82"
    )
        port map (
      I0 => \count[4]_i_30__1_n_0\,
      I1 => j_reg(1),
      I2 => j_reg(0),
      I3 => \count[4]_i_15__2_n_0\,
      O => \count[4]_i_22__1_n_0\
    );
\count[4]_i_23\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"505F3030505F3F3F"
    )
        port map (
      I0 => a_in_6(9),
      I1 => a_in_6(25),
      I2 => \count[4]_i_8__2\,
      I3 => a_in_6(17),
      I4 => \count[4]_i_8__2_0\,
      I5 => a_in_6(1),
      O => \FSM_onehot_state_reg[3]_1\
    );
\count[4]_i_23__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B556"
    )
        port map (
      I0 => j_reg(2),
      I1 => j_reg(0),
      I2 => j_reg(3),
      I3 => j_reg(1),
      O => \j_reg[2]_1\
    );
\count[4]_i_24__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"50505F5F303F303F"
    )
        port map (
      I0 => a_in_6(5),
      I1 => a_in_6(21),
      I2 => \count[4]_i_8__2\,
      I3 => a_in_6(29),
      I4 => a_in_6(13),
      I5 => \count[4]_i_8__2_0\,
      O => \FSM_onehot_state_reg[3]_4\
    );
\count[4]_i_24__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E13C"
    )
        port map (
      I0 => j_reg(2),
      I1 => j_reg(0),
      I2 => j_reg(3),
      I3 => j_reg(1),
      O => \j_reg[2]_0\
    );
\count[4]_i_27__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => a_in_6(8),
      I1 => a_in_6(24),
      I2 => \count[4]_i_8__2\,
      I3 => a_in_6(16),
      I4 => \count[4]_i_8__2_0\,
      I5 => a_in_6(0),
      O => \FSM_onehot_state_reg[3]_2\
    );
\count[4]_i_28__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFAFA0A0CFC0CFC0"
    )
        port map (
      I0 => a_in_6(4),
      I1 => a_in_6(20),
      I2 => \count[4]_i_8__2\,
      I3 => a_in_6(28),
      I4 => a_in_6(12),
      I5 => \count[4]_i_8__2_0\,
      O => \count_reg_reg[4]\
    );
\count[4]_i_2__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => count_reg(4),
      I1 => count_reg(2),
      I2 => count_reg(0),
      I3 => count_reg(1),
      I4 => count_reg(3),
      O => \plusOp__3\(4)
    );
\count[4]_i_30__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"505F3030505F3F3F"
    )
        port map (
      I0 => a_in_6(1),
      I1 => a_in_6(17),
      I2 => \count[4]_i_8__2\,
      I3 => a_in_6(9),
      I4 => \count[4]_i_8__2_0\,
      I5 => a_in_6(25),
      O => \count_reg_reg[1]\
    );
\count[4]_i_30__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AFEBA028"
    )
        port map (
      I0 => \count[4]_i_19__2_0\,
      I1 => j_reg(1),
      I2 => j_reg(2),
      I3 => j_reg(0),
      I4 => \count[4]_i_3__1_1\,
      O => \count[4]_i_30__1_n_0\
    );
\count[4]_i_31__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => a_in_6(0),
      I1 => a_in_6(16),
      I2 => \count[4]_i_8__2\,
      I3 => a_in_6(8),
      I4 => \count[4]_i_8__2_0\,
      I5 => a_in_6(24),
      O => \count_reg_reg[0]\
    );
\count[4]_i_31__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0A82FABE"
    )
        port map (
      I0 => \count[4]_i_12__2_0\,
      I1 => j_reg(1),
      I2 => j_reg(2),
      I3 => j_reg(0),
      I4 => \count[4]_i_21__2_0\,
      O => \count[4]_i_31__2_n_0\
    );
\count[4]_i_33__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"505F3030505F3F3F"
    )
        port map (
      I0 => a_in_6(3),
      I1 => a_in_6(19),
      I2 => \count[4]_i_8__2\,
      I3 => a_in_6(11),
      I4 => \count[4]_i_8__2_0\,
      I5 => a_in_6(27),
      O => \count_reg_reg[3]\
    );
\count[4]_i_33__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9663"
    )
        port map (
      I0 => j_reg(1),
      I1 => j_reg(3),
      I2 => j_reg(0),
      I3 => j_reg(2),
      O => \j_reg[1]_0\
    );
\count[4]_i_34__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => a_in_6(2),
      I1 => a_in_6(18),
      I2 => \count[4]_i_8__2\,
      I3 => a_in_6(10),
      I4 => \count[4]_i_8__2_0\,
      I5 => a_in_6(26),
      O => \count_reg_reg[2]\
    );
\count[4]_i_3__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55556665AAAA6665"
    )
        port map (
      I0 => D(4),
      I1 => \count[4]_i_6__0_n_0\,
      I2 => j_reg(0),
      I3 => \count[4]_i_7__2_n_0\,
      I4 => \count[4]_i_8__4_n_0\,
      I5 => a_in_5(4),
      O => \count[4]_i_3__1_n_0\
    );
\count[4]_i_4__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000099009900000"
    )
        port map (
      I0 => \^j_reg[0]_1\,
      I1 => D(0),
      I2 => D(1),
      I3 => \^j_reg[0]_2\,
      I4 => D(2),
      I5 => \count[4]_i_11__1_n_0\,
      O => \count[4]_i_4__2_n_0\
    );
\count[4]_i_6__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00001D00FF001D00"
    )
        port map (
      I0 => \count[4]_i_3__1_0\,
      I1 => j_reg(2),
      I2 => \count[4]_i_3__1_1\,
      I3 => j_reg(0),
      I4 => j_reg(1),
      I5 => \count[4]_i_15__2_n_0\,
      O => \count[4]_i_6__0_n_0\
    );
\count[4]_i_7__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B2828E82BE8EBEB2"
    )
        port map (
      I0 => \count[4]_i_16__2_n_0\,
      I1 => j_reg(1),
      I2 => j_reg(0),
      I3 => \count[4]_i_12__2_0\,
      I4 => j_reg(2),
      I5 => \count[4]_i_12__2_1\,
      O => \count[4]_i_7__2_n_0\
    );
\count[4]_i_8__4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCEC"
    )
        port map (
      I0 => j_reg(0),
      I1 => j_reg(3),
      I2 => j_reg(2),
      I3 => j_reg(1),
      O => \count[4]_i_8__4_n_0\
    );
\count[4]_i_9__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBB8B88"
    )
        port map (
      I0 => a_in_5(0),
      I1 => \count[4]_i_8__4_n_0\,
      I2 => \count[4]_i_19__2_n_0\,
      I3 => j_reg(0),
      I4 => \count[4]_i_20__3_n_0\,
      O => \^j_reg[0]_1\
    );
\count_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \count[0]_i_1__3_n_0\,
      Q => count_reg(0)
    );
\count_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__3\(1),
      Q => count_reg(1)
    );
\count_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__3\(2),
      Q => count_reg(2)
    );
\count_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__3\(3),
      Q => count_reg(3)
    );
\count_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__3\(4),
      Q => count_reg(4)
    );
\done_aux_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF54"
    )
        port map (
      I0 => count,
      I1 => j0,
      I2 => \done_aux_i_2__1_n_0\,
      I3 => done,
      O => \done_aux_i_1__0_n_0\
    );
\done_aux_i_2__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0008"
    )
        port map (
      I0 => j_reg(2),
      I1 => j_reg(0),
      I2 => j_reg(1),
      I3 => j_reg(3),
      O => \done_aux_i_2__1_n_0\
    );
done_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \done_aux_i_1__0_n_0\,
      Q => done
    );
\j[0]_i_1__3\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => j_reg(0),
      O => \j[0]_i_1__3_n_0\
    );
\j[1]_i_1__3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => j_reg(0),
      I1 => j_reg(1),
      O => \p_0_in__3\(1)
    );
\j[2]_i_1__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => j_reg(2),
      I1 => j_reg(0),
      I2 => j_reg(1),
      O => \p_0_in__3\(2)
    );
\j[3]_i_1__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00050015"
    )
        port map (
      I0 => done,
      I1 => j_reg(1),
      I2 => j_reg(2),
      I3 => j_reg(3),
      I4 => j_reg(0),
      O => j0
    );
\j[3]_i_2__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => j_reg(1),
      I1 => j_reg(0),
      I2 => j_reg(2),
      O => \p_0_in__3\(3)
    );
\j_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \j[0]_i_1__3_n_0\,
      Q => j_reg(0)
    );
\j_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \p_0_in__3\(1),
      Q => j_reg(1)
    );
\j_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \p_0_in__3\(2),
      Q => j_reg(2)
    );
\j_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \p_0_in__3\(3),
      Q => j_reg(3)
    );
\valid_aux_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF00000008"
    )
        port map (
      I0 => j_reg(0),
      I1 => j_reg(2),
      I2 => \valid_aux_i_2__2_n_0\,
      I3 => j_reg(1),
      I4 => j_reg(3),
      I5 => \^valid\,
      O => \valid_aux_i_1__5_n_0\
    );
\valid_aux_i_2__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFDFF"
    )
        port map (
      I0 => count_reg(2),
      I1 => count_reg(4),
      I2 => count_reg(1),
      I3 => count_reg(0),
      I4 => count_reg(3),
      O => \valid_aux_i_2__2_n_0\
    );
valid_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \valid_aux_i_1__5_n_0\,
      Q => \^valid\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_ctrl_logic__parameterized4\ is
  port (
    valid : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \j_reg[2]_0\ : out STD_LOGIC;
    \j_reg[2]_1\ : out STD_LOGIC;
    \j_reg[2]_2\ : out STD_LOGIC;
    \j_reg[2]_3\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_0\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_1\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_2\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_3\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_4\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_5\ : out STD_LOGIC;
    \count_reg_reg[1]\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_6\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_7\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_8\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_9\ : out STD_LOGIC;
    \count_reg_reg[3]\ : out STD_LOGIC;
    \j_reg[0]_0\ : out STD_LOGIC;
    \j_reg[2]_4\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \FSM_onehot_state_reg[1]\ : out STD_LOGIC;
    valid_aux_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \j_reg[2]_5\ : out STD_LOGIC;
    \j_reg[1]_0\ : out STD_LOGIC;
    \count1_carry__0_0\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \count1_carry__1_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S : in STD_LOGIC_VECTOR ( 2 downto 0 );
    clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count1_carry_i_19__0_0\ : in STD_LOGIC;
    \count1_carry_i_19__0_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 4 downto 0 );
    done_aux_reg_0 : in STD_LOGIC;
    a_in_4 : in STD_LOGIC_VECTOR ( 10 downto 0 );
    \count1_carry__1_i_3__2\ : in STD_LOGIC;
    \count1_carry_i_13__6\ : in STD_LOGIC;
    a_in_5 : in STD_LOGIC_VECTOR ( 24 downto 0 );
    \count[4]_i_19__2\ : in STD_LOGIC;
    \count[4]_i_19__2_0\ : in STD_LOGIC;
    \count[4]_i_15__2\ : in STD_LOGIC;
    count1_carry_0 : in STD_LOGIC;
    count1_carry_1 : in STD_LOGIC;
    \count1_carry__1_i_3__2_0\ : in STD_LOGIC;
    \count1_carry_i_4__4_0\ : in STD_LOGIC;
    \count1_carry_i_5__7_0\ : in STD_LOGIC;
    \count1_carry_i_5__7_1\ : in STD_LOGIC;
    \count[4]_i_4__6_0\ : in STD_LOGIC;
    \count[4]_i_4__6_1\ : in STD_LOGIC;
    \count1_carry_i_19__0_2\ : in STD_LOGIC;
    \count1_carry_i_19__0_3\ : in STD_LOGIC;
    \count_reg_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    next_out_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_ctrl_logic__parameterized4\ : entity is "ctrl_logic";
end \design_1_top_nqueens_0_0_ctrl_logic__parameterized4\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_ctrl_logic__parameterized4\ is
  signal \^q\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal count : STD_LOGIC;
  signal count1 : STD_LOGIC;
  signal \count1_carry__0_n_0\ : STD_LOGIC;
  signal \count1_carry__0_n_1\ : STD_LOGIC;
  signal \count1_carry__0_n_2\ : STD_LOGIC;
  signal \count1_carry__0_n_3\ : STD_LOGIC;
  signal \count1_carry__1_n_2\ : STD_LOGIC;
  signal \count1_carry__1_n_3\ : STD_LOGIC;
  signal \count1_carry_i_10__3_n_0\ : STD_LOGIC;
  signal \count1_carry_i_12__3_n_0\ : STD_LOGIC;
  signal \count1_carry_i_15__1_n_0\ : STD_LOGIC;
  signal \count1_carry_i_20__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_24__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_26__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_28__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_35__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_37__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_4__4_n_0\ : STD_LOGIC;
  signal count1_carry_n_0 : STD_LOGIC;
  signal count1_carry_n_1 : STD_LOGIC;
  signal count1_carry_n_2 : STD_LOGIC;
  signal count1_carry_n_3 : STD_LOGIC;
  signal \count[4]_i_3__6_n_0\ : STD_LOGIC;
  signal \count[4]_i_4__6_n_0\ : STD_LOGIC;
  signal \count[4]_i_5__3_n_0\ : STD_LOGIC;
  signal \count[4]_i_6__2_n_0\ : STD_LOGIC;
  signal count_reg : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^count_reg_reg[3]\ : STD_LOGIC;
  signal done : STD_LOGIC;
  signal \done_aux_i_1__1_n_0\ : STD_LOGIC;
  signal j0 : STD_LOGIC;
  signal \j[0]_i_1__4_n_0\ : STD_LOGIC;
  signal \^j_reg[2]_0\ : STD_LOGIC;
  signal \^j_reg[2]_2\ : STD_LOGIC;
  signal \^j_reg[2]_3\ : STD_LOGIC;
  signal \p_0_in__4\ : STD_LOGIC_VECTOR ( 2 downto 1 );
  signal \plusOp__4\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^valid\ : STD_LOGIC;
  signal \valid_aux_i_1__6_n_0\ : STD_LOGIC;
  signal \valid_aux_i_2__3_n_0\ : STD_LOGIC;
  signal NLW_count1_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__0_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_count1_carry__1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \count1_carry_i_12__3\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \count1_carry_i_16__4\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \count1_carry_i_19__0\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \count1_carry_i_20__0\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \count1_carry_i_24__0\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \count1_carry_i_30__0\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of count1_carry_i_32 : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \count1_carry_i_35__0\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \count1_carry_i_37__0\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \count1_carry_i_40__0\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \count1_carry_i_7__3\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \count[1]_i_1__4\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \count[2]_i_1__4\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \count[3]_i_1__4\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \count[4]_i_13__2\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \count[4]_i_18__2\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \count[4]_i_2__4\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \count[4]_i_34__2\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \count[4]_i_35__1\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \done_aux_i_1__1\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \j[0]_i_1__4\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \j[1]_i_1__4\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \j[2]_i_2\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \valid_aux_i_1__6\ : label is "soft_lutpair43";
begin
  Q(2 downto 0) <= \^q\(2 downto 0);
  \count_reg_reg[3]\ <= \^count_reg_reg[3]\;
  \j_reg[2]_0\ <= \^j_reg[2]_0\;
  \j_reg[2]_2\ <= \^j_reg[2]_2\;
  \j_reg[2]_3\ <= \^j_reg[2]_3\;
  valid <= \^valid\;
\FSM_onehot_state[3]_i_1__4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^valid\,
      I1 => \count_reg_reg[0]\(2),
      O => valid_aux_reg_0(0)
    );
\FSM_onehot_state[4]_i_2__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFF888"
    )
        port map (
      I0 => \count_reg_reg[0]\(3),
      I1 => next_out_5,
      I2 => done,
      I3 => \count_reg_reg[0]\(2),
      I4 => \count_reg_reg[0]\(1),
      I5 => \count_reg_reg[0]\(0),
      O => E(0)
    );
\acks_out_reg_i_2__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFEFEFEFEFEFE"
    )
        port map (
      I0 => \count_reg_reg[0]\(1),
      I1 => \count_reg_reg[0]\(0),
      I2 => \count_reg_reg[0]\(4),
      I3 => done,
      I4 => \count_reg_reg[0]\(2),
      I5 => \^valid\,
      O => \FSM_onehot_state_reg[1]\
    );
count1_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => count1_carry_n_0,
      CO(2) => count1_carry_n_1,
      CO(1) => count1_carry_n_2,
      CO(0) => count1_carry_n_3,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => NLW_count1_carry_O_UNCONNECTED(3 downto 0),
      S(3 downto 1) => \count1_carry__0_0\(2 downto 0),
      S(0) => \count1_carry_i_4__4_n_0\
    );
\count1_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => count1_carry_n_0,
      CO(3) => \count1_carry__0_n_0\,
      CO(2) => \count1_carry__0_n_1\,
      CO(1) => \count1_carry__0_n_2\,
      CO(0) => \count1_carry__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => \NLW_count1_carry__0_O_UNCONNECTED\(3 downto 0),
      S(3 downto 0) => \count1_carry__1_0\(3 downto 0)
    );
\count1_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \count1_carry__0_n_0\,
      CO(3) => \NLW_count1_carry__1_CO_UNCONNECTED\(3),
      CO(2) => count1,
      CO(1) => \count1_carry__1_n_2\,
      CO(0) => \count1_carry__1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0111",
      O(3 downto 0) => \NLW_count1_carry__1_O_UNCONNECTED\(3 downto 0),
      S(3) => '0',
      S(2 downto 0) => S(2 downto 0)
    );
\count1_carry_i_10__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6969699696969669"
    )
        port map (
      I0 => \count1_carry_i_20__0_n_0\,
      I1 => D(2),
      I2 => \count1_carry_i_4__4_0\,
      I3 => \^q\(1),
      I4 => \^q\(0),
      I5 => \^q\(2),
      O => \count1_carry_i_10__3_n_0\
    );
\count1_carry_i_12__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"69"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      I2 => \^j_reg[2]_2\,
      O => \count1_carry_i_12__3_n_0\
    );
\count1_carry_i_15__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000FFFF90F690F6"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(0),
      I2 => \count1_carry_i_5__7_0\,
      I3 => \count1_carry_i_24__0_n_0\,
      I4 => \count1_carry_i_5__7_1\,
      I5 => \^q\(1),
      O => \count1_carry_i_15__1_n_0\
    );
\count1_carry_i_16__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"72777222"
    )
        port map (
      I0 => \^q\(2),
      I1 => a_in_4(8),
      I2 => \count1_carry_i_26__0_n_0\,
      I3 => \^q\(0),
      I4 => \count1_carry_i_13__6\,
      O => \^j_reg[2]_3\
    );
\count1_carry_i_17__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DFDFDFCECECECECE"
    )
        port map (
      I0 => \^q\(2),
      I1 => D(0),
      I2 => a_in_4(7),
      I3 => \count1_carry_i_26__0_n_0\,
      I4 => \^q\(0),
      I5 => \count1_carry_i_28__0_n_0\,
      O => \^j_reg[2]_2\
    );
\count1_carry_i_19__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"4440EEEA"
    )
        port map (
      I0 => \^q\(2),
      I1 => \count1_carry_i_28__0_n_0\,
      I2 => \^q\(0),
      I3 => \count1_carry_i_26__0_n_0\,
      I4 => a_in_4(7),
      O => \j_reg[2]_1\
    );
\count1_carry_i_20__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"17"
    )
        port map (
      I0 => D(1),
      I1 => \^j_reg[2]_3\,
      I2 => \^j_reg[2]_2\,
      O => \count1_carry_i_20__0_n_0\
    );
\count1_carry_i_24__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EABF2A80"
    )
        port map (
      I0 => a_in_4(2),
      I1 => \^q\(2),
      I2 => \^q\(0),
      I3 => \^q\(1),
      I4 => a_in_4(6),
      O => \count1_carry_i_24__0_n_0\
    );
\count1_carry_i_26__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"14D7FFFF14D70000"
    )
        port map (
      I0 => \count1_carry_i_19__0_2\,
      I1 => \^q\(0),
      I2 => \^q\(2),
      I3 => \count1_carry_i_35__0_n_0\,
      I4 => \^q\(1),
      I5 => \count1_carry_i_19__0_3\,
      O => \count1_carry_i_26__0_n_0\
    );
\count1_carry_i_28__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2EEE2E22FFFFFFFF"
    )
        port map (
      I0 => \count1_carry_i_19__0_0\,
      I1 => \^q\(1),
      I2 => \count1_carry_i_37__0_n_0\,
      I3 => \^q\(2),
      I4 => \count1_carry_i_19__0_1\,
      I5 => \^q\(0),
      O => \count1_carry_i_28__0_n_0\
    );
\count1_carry_i_30__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"78"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(0),
      I2 => \^q\(1),
      O => \j_reg[2]_5\
    );
count1_carry_i_32: unisim.vcomponents.LUT3
    generic map(
      INIT => X"70"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => \^q\(2),
      O => \j_reg[1]_0\
    );
\count1_carry_i_35__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EABF2A80"
    )
        port map (
      I0 => a_in_4(1),
      I1 => \^q\(2),
      I2 => \^q\(0),
      I3 => \^q\(1),
      I4 => a_in_4(5),
      O => \count1_carry_i_35__0_n_0\
    );
\count1_carry_i_37__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EABF2A80"
    )
        port map (
      I0 => a_in_4(0),
      I1 => \^q\(2),
      I2 => \^q\(0),
      I3 => \^q\(1),
      I4 => a_in_4(4),
      O => \count1_carry_i_37__0_n_0\
    );
\count1_carry_i_40__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(2),
      O => \j_reg[0]_0\
    );
\count1_carry_i_4__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"08010108900000A0"
    )
        port map (
      I0 => \count1_carry_i_10__3_n_0\,
      I1 => \^count_reg_reg[3]\,
      I2 => count1_carry_0,
      I3 => \count1_carry_i_12__3_n_0\,
      I4 => count1_carry_1,
      I5 => \^q\(0),
      O => \count1_carry_i_4__4_n_0\
    );
\count1_carry_i_5__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"72777222"
    )
        port map (
      I0 => \^q\(2),
      I1 => a_in_4(9),
      I2 => \count1_carry__1_i_3__2\,
      I3 => \^q\(0),
      I4 => \count1_carry_i_15__1_n_0\,
      O => \^j_reg[2]_0\
    );
\count1_carry_i_7__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(0),
      I2 => \^q\(1),
      O => \j_reg[2]_4\
    );
\count1_carry_i_9__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"566A"
    )
        port map (
      I0 => \count[4]_i_4__6_n_0\,
      I1 => \^j_reg[2]_0\,
      I2 => D(3),
      I3 => \count1_carry__1_i_3__2_0\,
      O => \^count_reg_reg[3]\
    );
\count[0]_i_1__4\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => count_reg(0),
      O => \plusOp__4\(0)
    );
\count[1]_i_1__4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => count_reg(0),
      I1 => count_reg(1),
      O => \plusOp__4\(1)
    );
\count[2]_i_1__4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => count_reg(2),
      I1 => count_reg(1),
      I2 => count_reg(0),
      O => \plusOp__4\(2)
    );
\count[3]_i_1__4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => count_reg(3),
      I1 => count_reg(2),
      I2 => count_reg(0),
      I3 => count_reg(1),
      O => \plusOp__4\(3)
    );
\count[4]_i_13__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"470047FF"
    )
        port map (
      I0 => a_in_5(19),
      I1 => \count[4]_i_19__2\,
      I2 => a_in_5(3),
      I3 => \count[4]_i_19__2_0\,
      I4 => a_in_5(11),
      O => \FSM_onehot_state_reg[3]_3\
    );
\count[4]_i_14__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00FF3535"
    )
        port map (
      I0 => a_in_5(23),
      I1 => a_in_5(7),
      I2 => \count[4]_i_19__2\,
      I3 => a_in_5(15),
      I4 => \count[4]_i_19__2_0\,
      O => \FSM_onehot_state_reg[3]_0\
    );
\count[4]_i_17__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00FF3535"
    )
        port map (
      I0 => a_in_5(22),
      I1 => a_in_5(6),
      I2 => \count[4]_i_19__2\,
      I3 => a_in_5(14),
      I4 => \count[4]_i_19__2_0\,
      O => \FSM_onehot_state_reg[3]_1\
    );
\count[4]_i_18__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => a_in_5(18),
      I1 => \count[4]_i_19__2\,
      I2 => a_in_5(2),
      I3 => \count[4]_i_19__2_0\,
      I4 => a_in_5(10),
      O => \FSM_onehot_state_reg[3]_2\
    );
\count[4]_i_1__4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"10"
    )
        port map (
      I0 => done,
      I1 => \^q\(2),
      I2 => \count[4]_i_3__6_n_0\,
      O => count
    );
\count[4]_i_25__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00FF3535"
    )
        port map (
      I0 => a_in_5(21),
      I1 => a_in_5(5),
      I2 => \count[4]_i_19__2\,
      I3 => a_in_5(13),
      I4 => \count[4]_i_19__2_0\,
      O => \FSM_onehot_state_reg[3]\
    );
\count[4]_i_26__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000047FF47FF47FF"
    )
        port map (
      I0 => a_in_5(17),
      I1 => \count[4]_i_19__2\,
      I2 => a_in_5(1),
      I3 => \count[4]_i_19__2_0\,
      I4 => \count[4]_i_15__2\,
      I5 => a_in_5(9),
      O => \FSM_onehot_state_reg[3]_4\
    );
\count[4]_i_27__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"553355330F000FFF"
    )
        port map (
      I0 => a_in_5(16),
      I1 => a_in_5(0),
      I2 => a_in_5(8),
      I3 => \count[4]_i_19__2\,
      I4 => a_in_5(24),
      I5 => \count[4]_i_19__2_0\,
      O => \FSM_onehot_state_reg[3]_5\
    );
\count[4]_i_28__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => a_in_5(12),
      I1 => \count[4]_i_19__2_0\,
      I2 => a_in_5(4),
      I3 => \count[4]_i_19__2\,
      I4 => a_in_5(20),
      O => \FSM_onehot_state_reg[3]_9\
    );
\count[4]_i_29__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0047FF47"
    )
        port map (
      I0 => a_in_5(1),
      I1 => \count[4]_i_19__2\,
      I2 => a_in_5(17),
      I3 => \count[4]_i_19__2_0\,
      I4 => a_in_5(9),
      O => \count_reg_reg[1]\
    );
\count[4]_i_2__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => count_reg(4),
      I1 => count_reg(1),
      I2 => count_reg(0),
      I3 => count_reg(2),
      I4 => count_reg(3),
      O => \plusOp__4\(4)
    );
\count[4]_i_32__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => a_in_5(8),
      I1 => a_in_5(24),
      I2 => a_in_5(0),
      I3 => \count[4]_i_19__2\,
      I4 => a_in_5(16),
      I5 => \count[4]_i_19__2_0\,
      O => \FSM_onehot_state_reg[3]_8\
    );
\count[4]_i_34__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"47444777"
    )
        port map (
      I0 => a_in_5(11),
      I1 => \count[4]_i_19__2_0\,
      I2 => a_in_5(3),
      I3 => \count[4]_i_19__2\,
      I4 => a_in_5(19),
      O => \FSM_onehot_state_reg[3]_6\
    );
\count[4]_i_35__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => a_in_5(10),
      I1 => \count[4]_i_19__2_0\,
      I2 => a_in_5(2),
      I3 => \count[4]_i_19__2\,
      I4 => a_in_5(18),
      O => \FSM_onehot_state_reg[3]_7\
    );
\count[4]_i_3__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F090F0F0"
    )
        port map (
      I0 => D(3),
      I1 => \^j_reg[2]_0\,
      I2 => count1,
      I3 => \count[4]_i_4__6_n_0\,
      I4 => done_aux_reg_0,
      O => \count[4]_i_3__6_n_0\
    );
\count[4]_i_4__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"66633363CCC999C9"
    )
        port map (
      I0 => \^q\(2),
      I1 => D(4),
      I2 => \count[4]_i_5__3_n_0\,
      I3 => \^q\(0),
      I4 => \count1_carry_i_15__1_n_0\,
      I5 => a_in_4(10),
      O => \count[4]_i_4__6_n_0\
    );
\count[4]_i_5__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55555555FCCF0CC0"
    )
        port map (
      I0 => \count[4]_i_4__6_0\,
      I1 => \count[4]_i_6__2_n_0\,
      I2 => \^q\(0),
      I3 => \^q\(2),
      I4 => \count[4]_i_4__6_1\,
      I5 => \^q\(1),
      O => \count[4]_i_5__3_n_0\
    );
\count[4]_i_6__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"41117DDD"
    )
        port map (
      I0 => a_in_4(7),
      I1 => \^q\(1),
      I2 => \^q\(0),
      I3 => \^q\(2),
      I4 => a_in_4(3),
      O => \count[4]_i_6__2_n_0\
    );
\count_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__4\(0),
      Q => count_reg(0)
    );
\count_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__4\(1),
      Q => count_reg(1)
    );
\count_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__4\(2),
      Q => count_reg(2)
    );
\count_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__4\(3),
      Q => count_reg(3)
    );
\count_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__4\(4),
      Q => count_reg(4)
    );
\done_aux_i_1__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF111B"
    )
        port map (
      I0 => \^q\(2),
      I1 => \count[4]_i_3__6_n_0\,
      I2 => \^q\(1),
      I3 => \^q\(0),
      I4 => done,
      O => \done_aux_i_1__1_n_0\
    );
done_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \done_aux_i_1__1_n_0\,
      Q => done
    );
\j[0]_i_1__4\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(0),
      O => \j[0]_i_1__4_n_0\
    );
\j[1]_i_1__4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      O => \p_0_in__4\(1)
    );
\j[2]_i_1__4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(2),
      I1 => done,
      O => j0
    );
\j[2]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      O => \p_0_in__4\(2)
    );
\j_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \j[0]_i_1__4_n_0\,
      Q => \^q\(0)
    );
\j_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \p_0_in__4\(1),
      Q => \^q\(1)
    );
\j_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \p_0_in__4\(2),
      Q => \^q\(2)
    );
\valid_aux_i_1__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF0100"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => \valid_aux_i_2__3_n_0\,
      I3 => \^q\(2),
      I4 => \^valid\,
      O => \valid_aux_i_1__6_n_0\
    );
\valid_aux_i_2__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFEFF"
    )
        port map (
      I0 => j0,
      I1 => count_reg(4),
      I2 => count_reg(3),
      I3 => count_reg(2),
      I4 => count_reg(0),
      I5 => count_reg(1),
      O => \valid_aux_i_2__3_n_0\
    );
valid_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \valid_aux_i_1__6_n_0\,
      Q => \^valid\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_ctrl_logic__parameterized5\ is
  port (
    valid : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \j_reg[2]_0\ : out STD_LOGIC;
    \j_reg[1]_0\ : out STD_LOGIC;
    \j_reg[1]_1\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_0\ : out STD_LOGIC;
    \j_reg[0]_0\ : out STD_LOGIC;
    \j_reg[0]_1\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_1\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_2\ : out STD_LOGIC;
    \j_reg[0]_2\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_3\ : out STD_LOGIC;
    \count_reg_reg[3]\ : out STD_LOGIC;
    \count_reg_reg[4]\ : out STD_LOGIC;
    \j_reg[2]_1\ : out STD_LOGIC;
    \j_reg[1]_2\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \j_reg[2]_2\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \FSM_onehot_state_reg[1]\ : out STD_LOGIC;
    valid_aux_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \j_reg[2]_3\ : out STD_LOGIC;
    \count1_carry__0_0\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \count1_carry__1_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S : in STD_LOGIC_VECTOR ( 2 downto 0 );
    clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count1_carry_i_4__5_0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \count1_carry_i_4__5_1\ : in STD_LOGIC;
    \count[4]_i_5__4_0\ : in STD_LOGIC;
    \count_reg[0]_0\ : in STD_LOGIC;
    done_aux_reg_0 : in STD_LOGIC;
    \count[4]_i_5__3\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \count[4]_i_5__3_0\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    a_in_4 : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \count1_carry_i_15__1\ : in STD_LOGIC;
    \count1_carry_i_15__1_0\ : in STD_LOGIC;
    \count1_carry_i_28__0\ : in STD_LOGIC;
    count1_carry_0 : in STD_LOGIC;
    count1_carry_1 : in STD_LOGIC;
    count1_carry_2 : in STD_LOGIC;
    \count1_carry__1_i_1__3\ : in STD_LOGIC;
    \count1_carry__1_i_1__3_0\ : in STD_LOGIC;
    \count_reg[0]_1\ : in STD_LOGIC;
    \count_reg[0]_2\ : in STD_LOGIC;
    a_in_3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count_reg_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    next_out_4 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_ctrl_logic__parameterized5\ : entity is "ctrl_logic";
end \design_1_top_nqueens_0_0_ctrl_logic__parameterized5\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_ctrl_logic__parameterized5\ is
  signal \^fsm_onehot_state_reg[3]_3\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal count : STD_LOGIC;
  signal count1 : STD_LOGIC;
  signal \count1_carry__0_n_0\ : STD_LOGIC;
  signal \count1_carry__0_n_1\ : STD_LOGIC;
  signal \count1_carry__0_n_2\ : STD_LOGIC;
  signal \count1_carry__0_n_3\ : STD_LOGIC;
  signal \count1_carry__1_n_2\ : STD_LOGIC;
  signal \count1_carry__1_n_3\ : STD_LOGIC;
  signal \count1_carry_i_29__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_31__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_33__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_39__0_n_0\ : STD_LOGIC;
  signal \count1_carry_i_4__5_n_0\ : STD_LOGIC;
  signal \count1_carry_i_7__6_n_0\ : STD_LOGIC;
  signal count1_carry_n_0 : STD_LOGIC;
  signal count1_carry_n_1 : STD_LOGIC;
  signal count1_carry_n_2 : STD_LOGIC;
  signal count1_carry_n_3 : STD_LOGIC;
  signal \count[0]_i_1__5_n_0\ : STD_LOGIC;
  signal \count[4]_i_10__3_n_0\ : STD_LOGIC;
  signal count_reg : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^count_reg_reg[3]\ : STD_LOGIC;
  signal \^count_reg_reg[4]\ : STD_LOGIC;
  signal done : STD_LOGIC;
  signal \done_aux_i_1__7_n_0\ : STD_LOGIC;
  signal done_aux_i_3_n_0 : STD_LOGIC;
  signal j0 : STD_LOGIC;
  signal \j[0]_i_1__5_n_0\ : STD_LOGIC;
  signal \^j_reg[0]_0\ : STD_LOGIC;
  signal \^j_reg[0]_1\ : STD_LOGIC;
  signal \^j_reg[0]_2\ : STD_LOGIC;
  signal \^j_reg[1]_0\ : STD_LOGIC;
  signal \^j_reg[1]_1\ : STD_LOGIC;
  signal \^j_reg[1]_2\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^j_reg[2]_1\ : STD_LOGIC;
  signal \p_0_in__5\ : STD_LOGIC_VECTOR ( 2 to 2 );
  signal \plusOp__5\ : STD_LOGIC_VECTOR ( 4 downto 1 );
  signal \^valid\ : STD_LOGIC;
  signal \valid_aux_i_1__3_n_0\ : STD_LOGIC;
  signal \valid_aux_i_2__4_n_0\ : STD_LOGIC;
  signal NLW_count1_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__0_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_count1_carry__1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_onehot_state[3]_i_1__5\ : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of \count1_carry_i_14__3\ : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of \count1_carry_i_23__0\ : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of \count1_carry_i_27__0\ : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of \count1_carry_i_29__0\ : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of \count1_carry_i_31__0\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \count1_carry_i_33__0\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \count1_carry_i_34__0\ : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of \count1_carry_i_38__0\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \count1_carry_i_39__0\ : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of \count[1]_i_1__5\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of \count[2]_i_1__5\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of \count[3]_i_1__5\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of \count[4]_i_10__3\ : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of \count[4]_i_19__3\ : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of \count[4]_i_20__1\ : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of \count[4]_i_2__5\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of \count[4]_i_3__4\ : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of \count[4]_i_7__3\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of done_aux_i_3 : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of \j[2]_i_2__0\ : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of \valid_aux_i_1__3\ : label is "soft_lutpair32";
begin
  \FSM_onehot_state_reg[3]_3\ <= \^fsm_onehot_state_reg[3]_3\;
  Q(2 downto 0) <= \^q\(2 downto 0);
  \count_reg_reg[3]\ <= \^count_reg_reg[3]\;
  \count_reg_reg[4]\ <= \^count_reg_reg[4]\;
  \j_reg[0]_0\ <= \^j_reg[0]_0\;
  \j_reg[0]_1\ <= \^j_reg[0]_1\;
  \j_reg[0]_2\ <= \^j_reg[0]_2\;
  \j_reg[1]_0\ <= \^j_reg[1]_0\;
  \j_reg[1]_1\ <= \^j_reg[1]_1\;
  \j_reg[1]_2\(0) <= \^j_reg[1]_2\(0);
  \j_reg[2]_1\ <= \^j_reg[2]_1\;
  valid <= \^valid\;
\FSM_onehot_state[3]_i_1__5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^valid\,
      I1 => \count_reg_reg[0]\(2),
      O => valid_aux_reg_0(0)
    );
\FSM_onehot_state[4]_i_2__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFF888"
    )
        port map (
      I0 => \count_reg_reg[0]\(3),
      I1 => next_out_4,
      I2 => done,
      I3 => \count_reg_reg[0]\(2),
      I4 => \count_reg_reg[0]\(1),
      I5 => \count_reg_reg[0]\(0),
      O => E(0)
    );
\acks_out_reg_i_2__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFEFEFEFEFEFE"
    )
        port map (
      I0 => \count_reg_reg[0]\(1),
      I1 => \count_reg_reg[0]\(0),
      I2 => \count_reg_reg[0]\(4),
      I3 => done,
      I4 => \count_reg_reg[0]\(2),
      I5 => \^valid\,
      O => \FSM_onehot_state_reg[1]\
    );
count1_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => count1_carry_n_0,
      CO(2) => count1_carry_n_1,
      CO(1) => count1_carry_n_2,
      CO(0) => count1_carry_n_3,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => NLW_count1_carry_O_UNCONNECTED(3 downto 0),
      S(3 downto 1) => \count1_carry__0_0\(2 downto 0),
      S(0) => \count1_carry_i_4__5_n_0\
    );
\count1_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => count1_carry_n_0,
      CO(3) => \count1_carry__0_n_0\,
      CO(2) => \count1_carry__0_n_1\,
      CO(1) => \count1_carry__0_n_2\,
      CO(0) => \count1_carry__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => \NLW_count1_carry__0_O_UNCONNECTED\(3 downto 0),
      S(3 downto 0) => \count1_carry__1_0\(3 downto 0)
    );
\count1_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \count1_carry__0_n_0\,
      CO(3) => \NLW_count1_carry__1_CO_UNCONNECTED\(3),
      CO(2) => count1,
      CO(1) => \count1_carry__1_n_2\,
      CO(0) => \count1_carry__1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0111",
      O(3 downto 0) => \NLW_count1_carry__1_O_UNCONNECTED\(3 downto 0),
      S(3) => '0',
      S(2 downto 0) => S(2 downto 0)
    );
\count1_carry_i_14__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"C5"
    )
        port map (
      I0 => \^j_reg[0]_0\,
      I1 => \^j_reg[0]_1\,
      I2 => \count[4]_i_5__3\(1),
      O => \^j_reg[1]_1\
    );
\count1_carry_i_18__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"72777222"
    )
        port map (
      I0 => \count[4]_i_5__3\(2),
      I1 => \count[4]_i_5__3_0\(2),
      I2 => \^j_reg[1]_0\,
      I3 => \count[4]_i_5__3\(0),
      I4 => \^j_reg[1]_1\,
      O => \j_reg[2]_0\
    );
\count1_carry_i_21__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAACFC0CFC0AAAA"
    )
        port map (
      I0 => \count1_carry_i_29__0_n_0\,
      I1 => a_in_4(5),
      I2 => \count1_carry_i_15__1_0\,
      I3 => a_in_4(13),
      I4 => \count[4]_i_5__3\(0),
      I5 => \count[4]_i_5__3\(2),
      O => \^j_reg[0]_0\
    );
\count1_carry_i_22__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"282828EBEBEB28EB"
    )
        port map (
      I0 => \count1_carry_i_31__0_n_0\,
      I1 => \count[4]_i_5__3\(0),
      I2 => \count[4]_i_5__3\(2),
      I3 => \count[4]_i_5__3_0\(0),
      I4 => \count1_carry_i_15__1_0\,
      I5 => a_in_4(7),
      O => \^j_reg[0]_1\
    );
\count1_carry_i_23__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5555303F"
    )
        port map (
      I0 => a_in_4(10),
      I1 => a_in_4(2),
      I2 => \count1_carry_i_15__1\,
      I3 => \count[4]_i_5__3_0\(3),
      I4 => \count1_carry_i_15__1_0\,
      O => \FSM_onehot_state_reg[3]\
    );
\count1_carry_i_25__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFB8B8FF00B8B800"
    )
        port map (
      I0 => a_in_4(4),
      I1 => \count1_carry_i_15__1_0\,
      I2 => a_in_4(12),
      I3 => \count[4]_i_5__3\(0),
      I4 => \count[4]_i_5__3\(2),
      I5 => \count1_carry_i_33__0_n_0\,
      O => \^j_reg[0]_2\
    );
\count1_carry_i_27__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"C5"
    )
        port map (
      I0 => \^j_reg[0]_2\,
      I1 => \^fsm_onehot_state_reg[3]_3\,
      I2 => \count[4]_i_5__3\(1),
      O => \^j_reg[1]_0\
    );
\count1_carry_i_29__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => a_in_4(9),
      I1 => \count1_carry_i_15__1_0\,
      I2 => a_in_4(1),
      I3 => \count1_carry_i_15__1\,
      I4 => \count[4]_i_5__3_0\(2),
      O => \count1_carry_i_29__0_n_0\
    );
\count1_carry_i_31__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"470047FF"
    )
        port map (
      I0 => \count[4]_i_5__3_0\(4),
      I1 => \count1_carry_i_15__1\,
      I2 => a_in_4(3),
      I3 => \count1_carry_i_15__1_0\,
      I4 => a_in_4(11),
      O => \count1_carry_i_31__0_n_0\
    );
\count1_carry_i_33__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => a_in_4(8),
      I1 => \count1_carry_i_15__1_0\,
      I2 => a_in_4(0),
      I3 => \count1_carry_i_15__1\,
      I4 => \count[4]_i_5__3_0\(1),
      O => \count1_carry_i_33__0_n_0\
    );
\count1_carry_i_34__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \count[4]_i_5__3_0\(2),
      I1 => \count1_carry_i_15__1\,
      I2 => a_in_4(1),
      I3 => \count1_carry_i_15__1_0\,
      I4 => a_in_4(9),
      O => \FSM_onehot_state_reg[3]_2\
    );
\count1_carry_i_36__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CC55CC550F000FFF"
    )
        port map (
      I0 => a_in_4(10),
      I1 => \count1_carry_i_39__0_n_0\,
      I2 => a_in_4(6),
      I3 => \count1_carry_i_15__1_0\,
      I4 => a_in_4(14),
      I5 => \count1_carry_i_28__0\,
      O => \^fsm_onehot_state_reg[3]_3\
    );
\count1_carry_i_38__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"470047FF"
    )
        port map (
      I0 => \count[4]_i_5__3_0\(1),
      I1 => \count1_carry_i_15__1\,
      I2 => a_in_4(0),
      I3 => \count1_carry_i_15__1_0\,
      I4 => a_in_4(8),
      O => \FSM_onehot_state_reg[3]_1\
    );
\count1_carry_i_39__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"47"
    )
        port map (
      I0 => \count[4]_i_5__3_0\(3),
      I1 => \count1_carry_i_15__1\,
      I2 => a_in_4(2),
      O => \count1_carry_i_39__0_n_0\
    );
\count1_carry_i_4__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A000009008010108"
    )
        port map (
      I0 => \count1_carry_i_7__6_n_0\,
      I1 => \^count_reg_reg[3]\,
      I2 => count1_carry_0,
      I3 => count1_carry_1,
      I4 => count1_carry_2,
      I5 => \^q\(0),
      O => \count1_carry_i_4__5_n_0\
    );
\count1_carry_i_6__4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6A56"
    )
        port map (
      I0 => \^count_reg_reg[4]\,
      I1 => D(1),
      I2 => \count1_carry__1_i_1__3\,
      I3 => \count1_carry__1_i_1__3_0\,
      O => \^count_reg_reg[3]\
    );
\count1_carry_i_7__6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \^q\(2),
      I1 => \count1_carry_i_4__5_0\,
      I2 => D(0),
      I3 => \count1_carry_i_4__5_1\,
      O => \count1_carry_i_7__6_n_0\
    );
\count[0]_i_1__5\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => count_reg(0),
      O => \count[0]_i_1__5_n_0\
    );
\count[1]_i_1__5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => count_reg(1),
      I1 => count_reg(0),
      O => \plusOp__5\(1)
    );
\count[2]_i_1__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => count_reg(2),
      I1 => count_reg(0),
      I2 => count_reg(1),
      O => \plusOp__5\(2)
    );
\count[3]_i_1__5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => count_reg(3),
      I1 => count_reg(2),
      I2 => count_reg(1),
      I3 => count_reg(0),
      O => \plusOp__5\(3)
    );
\count[4]_i_10__3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFE0"
    )
        port map (
      I0 => \count[4]_i_5__4_0\,
      I1 => \^q\(1),
      I2 => \^q\(0),
      I3 => \^q\(2),
      O => \count[4]_i_10__3_n_0\
    );
\count[4]_i_19__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"61"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(0),
      I2 => \^q\(1),
      O => \j_reg[2]_3\
    );
\count[4]_i_1__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4444444000000000"
    )
        port map (
      I0 => done,
      I1 => \^j_reg[2]_1\,
      I2 => \count_reg[0]_1\,
      I3 => \^count_reg_reg[4]\,
      I4 => \count_reg[0]_0\,
      I5 => count1,
      O => count
    );
\count[4]_i_20__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(1),
      I2 => \^q\(0),
      O => \j_reg[2]_2\
    );
\count[4]_i_2__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => count_reg(4),
      I1 => count_reg(0),
      I2 => count_reg(1),
      I3 => count_reg(2),
      I4 => count_reg(3),
      O => \plusOp__5\(4)
    );
\count[4]_i_3__4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"15"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(0),
      I2 => \^q\(1),
      O => \^j_reg[2]_1\
    );
\count[4]_i_5__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55A655A655A6AAAA"
    )
        port map (
      I0 => D(2),
      I1 => \count_reg[0]_2\,
      I2 => \^q\(0),
      I3 => \count[4]_i_10__3_n_0\,
      I4 => a_in_3(0),
      I5 => \^j_reg[2]_1\,
      O => \^count_reg_reg[4]\
    );
\count[4]_i_7__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"47444777"
    )
        port map (
      I0 => a_in_4(11),
      I1 => \count1_carry_i_15__1_0\,
      I2 => a_in_4(3),
      I3 => \count1_carry_i_15__1\,
      I4 => \count[4]_i_5__3_0\(4),
      O => \FSM_onehot_state_reg[3]_0\
    );
\count_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \count[0]_i_1__5_n_0\,
      Q => count_reg(0)
    );
\count_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__5\(1),
      Q => count_reg(1)
    );
\count_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__5\(2),
      Q => count_reg(2)
    );
\count_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__5\(3),
      Q => count_reg(3)
    );
\count_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__5\(4),
      Q => count_reg(4)
    );
\done_aux_i_1__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF55551511"
    )
        port map (
      I0 => \^q\(2),
      I1 => count1,
      I2 => \count_reg[0]_0\,
      I3 => done_aux_reg_0,
      I4 => done_aux_i_3_n_0,
      I5 => done,
      O => \done_aux_i_1__7_n_0\
    );
done_aux_i_3: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      O => done_aux_i_3_n_0
    );
done_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \done_aux_i_1__7_n_0\,
      Q => done
    );
\j[0]_i_1__5\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(0),
      O => \j[0]_i_1__5_n_0\
    );
\j[1]_i_1__5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      O => \^j_reg[1]_2\(0)
    );
\j[2]_i_1__5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0007"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => \^q\(2),
      I3 => done,
      O => j0
    );
\j[2]_i_2__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      O => \p_0_in__5\(2)
    );
\j_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \j[0]_i_1__5_n_0\,
      Q => \^q\(0)
    );
\j_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \^j_reg[1]_2\(0),
      Q => \^q\(1)
    );
\j_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \p_0_in__5\(2),
      Q => \^q\(2)
    );
\valid_aux_i_1__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F1"
    )
        port map (
      I0 => \valid_aux_i_2__4_n_0\,
      I1 => \^q\(2),
      I2 => \^valid\,
      O => \valid_aux_i_1__3_n_0\
    );
\valid_aux_i_2__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFF7FFFFFFFF"
    )
        port map (
      I0 => count_reg(1),
      I1 => count_reg(0),
      I2 => count_reg(2),
      I3 => count_reg(3),
      I4 => count_reg(4),
      I5 => done_aux_i_3_n_0,
      O => \valid_aux_i_2__4_n_0\
    );
valid_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \valid_aux_i_1__3_n_0\,
      Q => \^valid\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_ctrl_logic__parameterized6\ is
  port (
    CO : out STD_LOGIC_VECTOR ( 0 to 0 );
    valid : out STD_LOGIC;
    \j_reg[0]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \count_reg_reg[0]\ : out STD_LOGIC;
    \j_reg[0]_1\ : out STD_LOGIC;
    \j_reg[0]_2\ : out STD_LOGIC;
    \count_reg_reg[0]_0\ : out STD_LOGIC;
    \j_reg[0]_3\ : out STD_LOGIC;
    \j_reg[0]_4\ : out STD_LOGIC;
    \j_reg[0]_5\ : out STD_LOGIC;
    \j_reg[1]_0\ : out STD_LOGIC;
    \count_reg_reg[1]\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \FSM_onehot_state_reg[1]\ : out STD_LOGIC;
    valid_aux_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \count1_carry__0_0\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \count1_carry__1_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S : in STD_LOGIC_VECTOR ( 2 downto 0 );
    clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count1_carry__1_i_3__3\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \count1_carry_i_4__6_0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 2 downto 0 );
    a_in_2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count[4]_i_3__2\ : in STD_LOGIC;
    \count1_carry_i_14__4_0\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \count1_carry_i_10__7\ : in STD_LOGIC;
    \count[4]_i_5__4\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \count1_carry_i_12__4_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    a_in_3 : in STD_LOGIC_VECTOR ( 9 downto 0 );
    \count1_carry_i_13__4_0\ : in STD_LOGIC;
    \count1_carry_i_13__4_1\ : in STD_LOGIC;
    count1_carry_0 : in STD_LOGIC;
    count1_carry_1 : in STD_LOGIC;
    count1_carry_2 : in STD_LOGIC;
    \count_reg_reg[0]_1\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    next_out_3 : in STD_LOGIC;
    done_aux_reg_0 : in STD_LOGIC;
    \count1_carry_i_4__6_1\ : in STD_LOGIC;
    \count1_carry_i_4__6_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_ctrl_logic__parameterized6\ : entity is "ctrl_logic";
end \design_1_top_nqueens_0_0_ctrl_logic__parameterized6\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_ctrl_logic__parameterized6\ is
  signal \^q\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal count : STD_LOGIC;
  signal \count1_carry__0_n_0\ : STD_LOGIC;
  signal \count1_carry__0_n_1\ : STD_LOGIC;
  signal \count1_carry__0_n_2\ : STD_LOGIC;
  signal \count1_carry__0_n_3\ : STD_LOGIC;
  signal \count1_carry__1_n_2\ : STD_LOGIC;
  signal \count1_carry__1_n_3\ : STD_LOGIC;
  signal \count1_carry_i_10__4_n_0\ : STD_LOGIC;
  signal \count1_carry_i_12__6_n_0\ : STD_LOGIC;
  signal \count1_carry_i_13__4_n_0\ : STD_LOGIC;
  signal \count1_carry_i_14__4_n_0\ : STD_LOGIC;
  signal \count1_carry_i_15__2_n_0\ : STD_LOGIC;
  signal \count1_carry_i_16__2_n_0\ : STD_LOGIC;
  signal \count1_carry_i_17__2_n_0\ : STD_LOGIC;
  signal \count1_carry_i_4__6_n_0\ : STD_LOGIC;
  signal count1_carry_n_0 : STD_LOGIC;
  signal count1_carry_n_1 : STD_LOGIC;
  signal count1_carry_n_2 : STD_LOGIC;
  signal count1_carry_n_3 : STD_LOGIC;
  signal \count[4]_i_12__3_n_0\ : STD_LOGIC;
  signal \count[4]_i_13__3_n_0\ : STD_LOGIC;
  signal \count[4]_i_14__3_n_0\ : STD_LOGIC;
  signal \count[4]_i_15__3_n_0\ : STD_LOGIC;
  signal \count[4]_i_17__3_n_0\ : STD_LOGIC;
  signal \count[4]_i_18__3_n_0\ : STD_LOGIC;
  signal count_reg : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^count_reg_reg[1]\ : STD_LOGIC;
  signal done : STD_LOGIC;
  signal \done_aux_i_1__3_n_0\ : STD_LOGIC;
  signal j0 : STD_LOGIC;
  signal \j[0]_i_1__6_n_0\ : STD_LOGIC;
  signal \^j_reg[0]_1\ : STD_LOGIC;
  signal \^j_reg[0]_2\ : STD_LOGIC;
  signal \^j_reg[0]_3\ : STD_LOGIC;
  signal \^j_reg[1]_0\ : STD_LOGIC;
  signal \plusOp__6\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^valid\ : STD_LOGIC;
  signal \valid_aux_i_1__7_n_0\ : STD_LOGIC;
  signal \valid_aux_i_2__5_n_0\ : STD_LOGIC;
  signal NLW_count1_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__0_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_count1_carry__1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_onehot_state[3]_i_1__6\ : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of \count1_carry_i_10__4\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of \count1_carry_i_7__7\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \count[0]_i_1__6\ : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of \count[1]_i_1__6\ : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of \count[2]_i_1__6\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of \count[3]_i_1__6\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of \count[4]_i_13__3\ : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of \count[4]_i_2__6\ : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \count[4]_i_6__6\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \count[4]_i_9__2\ : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of \j[0]_i_1__6\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of \valid_aux_i_1__7\ : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of \valid_aux_i_2__5\ : label is "soft_lutpair14";
begin
  Q(1 downto 0) <= \^q\(1 downto 0);
  \count_reg_reg[1]\ <= \^count_reg_reg[1]\;
  \j_reg[0]_1\ <= \^j_reg[0]_1\;
  \j_reg[0]_2\ <= \^j_reg[0]_2\;
  \j_reg[0]_3\ <= \^j_reg[0]_3\;
  \j_reg[1]_0\ <= \^j_reg[1]_0\;
  valid <= \^valid\;
\FSM_onehot_state[3]_i_1__6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^valid\,
      I1 => \count_reg_reg[0]_1\(2),
      O => valid_aux_reg_0(0)
    );
\FSM_onehot_state[4]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFF888"
    )
        port map (
      I0 => \count_reg_reg[0]_1\(3),
      I1 => next_out_3,
      I2 => done,
      I3 => \count_reg_reg[0]_1\(2),
      I4 => \count_reg_reg[0]_1\(1),
      I5 => \count_reg_reg[0]_1\(0),
      O => E(0)
    );
\acks_out_reg_i_2__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFEFEFEFEFEFE"
    )
        port map (
      I0 => \count_reg_reg[0]_1\(1),
      I1 => \count_reg_reg[0]_1\(0),
      I2 => \count_reg_reg[0]_1\(4),
      I3 => done,
      I4 => \count_reg_reg[0]_1\(2),
      I5 => \^valid\,
      O => \FSM_onehot_state_reg[1]\
    );
count1_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => count1_carry_n_0,
      CO(2) => count1_carry_n_1,
      CO(1) => count1_carry_n_2,
      CO(0) => count1_carry_n_3,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => NLW_count1_carry_O_UNCONNECTED(3 downto 0),
      S(3 downto 1) => \count1_carry__0_0\(2 downto 0),
      S(0) => \count1_carry_i_4__6_n_0\
    );
\count1_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => count1_carry_n_0,
      CO(3) => \count1_carry__0_n_0\,
      CO(2) => \count1_carry__0_n_1\,
      CO(1) => \count1_carry__0_n_2\,
      CO(0) => \count1_carry__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => \NLW_count1_carry__0_O_UNCONNECTED\(3 downto 0),
      S(3 downto 0) => \count1_carry__1_0\(3 downto 0)
    );
\count1_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \count1_carry__0_n_0\,
      CO(3) => \NLW_count1_carry__1_CO_UNCONNECTED\(3),
      CO(2) => CO(0),
      CO(1) => \count1_carry__1_n_2\,
      CO(0) => \count1_carry__1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0111",
      O(3 downto 0) => \NLW_count1_carry__1_O_UNCONNECTED\(3 downto 0),
      S(3) => '0',
      S(2 downto 0) => S(2 downto 0)
    );
\count1_carry_i_10__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"69969696"
    )
        port map (
      I0 => \count1_carry_i_4__6_1\,
      I1 => D(1),
      I2 => \count1_carry_i_4__6_2\,
      I3 => \^q\(1),
      I4 => \^q\(0),
      O => \count1_carry_i_10__4_n_0\
    );
\count1_carry_i_11__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"303FAAAA"
    )
        port map (
      I0 => \count1_carry_i_14__4_0\(0),
      I1 => \count1_carry_i_13__4_n_0\,
      I2 => \count[4]_i_5__4\(0),
      I3 => \count1_carry_i_14__4_n_0\,
      I4 => \count1_carry_i_10__7\,
      O => \^j_reg[0]_1\
    );
\count1_carry_i_12__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"2E222EEE"
    )
        port map (
      I0 => \count1_carry_i_14__4_0\(1),
      I1 => \count1_carry_i_10__7\,
      I2 => \count[4]_i_13__3_n_0\,
      I3 => \count[4]_i_5__4\(0),
      I4 => \count1_carry_i_13__4_n_0\,
      O => \^j_reg[0]_2\
    );
\count1_carry_i_12__6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"D22D"
    )
        port map (
      I0 => \count1_carry_i_4__6_0\,
      I1 => D(0),
      I2 => \^q\(0),
      I3 => \^q\(1),
      O => \count1_carry_i_12__6_n_0\
    );
\count1_carry_i_13__4\: unisim.vcomponents.MUXF7
     port map (
      I0 => \count1_carry_i_15__2_n_0\,
      I1 => \count1_carry_i_16__2_n_0\,
      O => \count1_carry_i_13__4_n_0\,
      S => \count1_carry_i_12__4_0\(0)
    );
\count1_carry_i_14__4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EB28"
    )
        port map (
      I0 => \count1_carry_i_17__2_n_0\,
      I1 => \count[4]_i_5__4\(1),
      I2 => \count[4]_i_5__4\(0),
      I3 => \count[4]_i_18__3_n_0\,
      O => \count1_carry_i_14__4_n_0\
    );
\count1_carry_i_15__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"001DFF1D"
    )
        port map (
      I0 => a_in_3(3),
      I1 => \count1_carry_i_13__4_1\,
      I2 => \count1_carry_i_14__4_0\(1),
      I3 => \count1_carry_i_13__4_0\,
      I4 => a_in_3(7),
      O => \count1_carry_i_15__2_n_0\
    );
\count1_carry_i_16__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"505F3030505F3F3F"
    )
        port map (
      I0 => \count1_carry_i_14__4_0\(3),
      I1 => a_in_3(5),
      I2 => \count1_carry_i_13__4_0\,
      I3 => a_in_3(9),
      I4 => \count1_carry_i_13__4_1\,
      I5 => a_in_3(1),
      O => \count1_carry_i_16__2_n_0\
    );
\count1_carry_i_17__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"553355330F000FFF"
    )
        port map (
      I0 => \count1_carry_i_14__4_0\(2),
      I1 => a_in_3(4),
      I2 => a_in_3(8),
      I3 => \count1_carry_i_13__4_1\,
      I4 => a_in_3(0),
      I5 => \count1_carry_i_13__4_0\,
      O => \count1_carry_i_17__2_n_0\
    );
\count1_carry_i_4__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"08010108900000A0"
    )
        port map (
      I0 => \count1_carry_i_10__4_n_0\,
      I1 => count1_carry_0,
      I2 => count1_carry_1,
      I3 => \count1_carry_i_12__6_n_0\,
      I4 => count1_carry_2,
      I5 => \^q\(0),
      O => \count1_carry_i_4__6_n_0\
    );
\count1_carry_i_5__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2F02FFFF00002F02"
    )
        port map (
      I0 => \^j_reg[0]_1\,
      I1 => \count1_carry__1_i_3__3\(0),
      I2 => \count1_carry__1_i_3__3\(1),
      I3 => \^j_reg[0]_2\,
      I4 => \count1_carry__1_i_3__3\(2),
      I5 => \^j_reg[0]_3\,
      O => \count_reg_reg[0]_0\
    );
\count1_carry_i_7__7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      O => \j_reg[0]_0\
    );
\count[0]_i_1__6\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => count_reg(0),
      O => \plusOp__6\(0)
    );
\count[1]_i_1__6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => count_reg(0),
      I1 => count_reg(1),
      O => \plusOp__6\(1)
    );
\count[2]_i_1__6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => count_reg(2),
      I1 => count_reg(1),
      I2 => count_reg(0),
      O => \plusOp__6\(2)
    );
\count[3]_i_1__6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => count_reg(3),
      I1 => count_reg(0),
      I2 => count_reg(1),
      I3 => count_reg(2),
      O => \plusOp__6\(3)
    );
\count[4]_i_11__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0CFC5555"
    )
        port map (
      I0 => \count1_carry_i_14__4_0\(3),
      I1 => \count[4]_i_12__3_n_0\,
      I2 => \count[4]_i_5__4\(0),
      I3 => \^j_reg[1]_0\,
      I4 => \count1_carry_i_10__7\,
      O => \j_reg[0]_5\
    );
\count[4]_i_12__3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5335"
    )
        port map (
      I0 => \^count_reg_reg[1]\,
      I1 => \count[4]_i_17__3_n_0\,
      I2 => \count[4]_i_5__4\(1),
      I3 => \count[4]_i_5__4\(0),
      O => \count[4]_i_12__3_n_0\
    );
\count[4]_i_13__3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5CC5"
    )
        port map (
      I0 => \count[4]_i_14__3_n_0\,
      I1 => \count[4]_i_18__3_n_0\,
      I2 => \count[4]_i_5__4\(1),
      I3 => \count[4]_i_5__4\(0),
      O => \count[4]_i_13__3_n_0\
    );
\count[4]_i_14__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => a_in_3(0),
      I1 => a_in_3(8),
      I2 => \count1_carry_i_14__4_0\(2),
      I3 => \count1_carry_i_13__4_1\,
      I4 => a_in_3(4),
      I5 => \count1_carry_i_13__4_0\,
      O => \count[4]_i_14__3_n_0\
    );
\count[4]_i_15__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => a_in_3(2),
      I1 => \count1_carry_i_14__4_0\(0),
      I2 => \count1_carry_i_13__4_0\,
      I3 => \count1_carry_i_14__4_0\(4),
      I4 => \count1_carry_i_13__4_1\,
      I5 => a_in_3(6),
      O => \count[4]_i_15__3_n_0\
    );
\count[4]_i_16__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => a_in_3(1),
      I1 => a_in_3(9),
      I2 => \count1_carry_i_14__4_0\(3),
      I3 => \count1_carry_i_13__4_1\,
      I4 => a_in_3(5),
      I5 => \count1_carry_i_13__4_0\,
      O => \^count_reg_reg[1]\
    );
\count[4]_i_17__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => a_in_3(7),
      I1 => \count1_carry_i_13__4_0\,
      I2 => \count1_carry_i_14__4_0\(1),
      I3 => \count1_carry_i_13__4_1\,
      I4 => a_in_3(3),
      O => \count[4]_i_17__3_n_0\
    );
\count[4]_i_18__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"505F3030505F3F3F"
    )
        port map (
      I0 => \count1_carry_i_14__4_0\(4),
      I1 => a_in_3(6),
      I2 => \count1_carry_i_13__4_0\,
      I3 => \count1_carry_i_14__4_0\(0),
      I4 => \count1_carry_i_13__4_1\,
      I5 => a_in_3(2),
      O => \count[4]_i_18__3_n_0\
    );
\count[4]_i_1__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"10"
    )
        port map (
      I0 => done,
      I1 => \^q\(1),
      I2 => done_aux_reg_0,
      O => count
    );
\count[4]_i_2__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => count_reg(4),
      I1 => count_reg(2),
      I2 => count_reg(1),
      I3 => count_reg(0),
      I4 => count_reg(3),
      O => \plusOp__6\(4)
    );
\count[4]_i_6__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"2FD00DF2"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      I2 => a_in_2(0),
      I3 => D(2),
      I4 => \count[4]_i_3__2\,
      O => \j_reg[0]_4\
    );
\count[4]_i_7__5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \^j_reg[0]_1\,
      I1 => \count1_carry__1_i_3__3\(0),
      I2 => \count1_carry__1_i_3__3\(1),
      I3 => \^j_reg[0]_2\,
      O => \count_reg_reg[0]\
    );
\count[4]_i_8__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"2E222EEE"
    )
        port map (
      I0 => \count1_carry_i_14__4_0\(2),
      I1 => \count1_carry_i_10__7\,
      I2 => \count[4]_i_12__3_n_0\,
      I3 => \count[4]_i_5__4\(0),
      I4 => \count[4]_i_13__3_n_0\,
      O => \^j_reg[0]_3\
    );
\count[4]_i_9__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EB28"
    )
        port map (
      I0 => \count[4]_i_14__3_n_0\,
      I1 => \count[4]_i_5__4\(1),
      I2 => \count[4]_i_5__4\(0),
      I3 => \count[4]_i_15__3_n_0\,
      O => \^j_reg[1]_0\
    );
\count_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__6\(0),
      Q => count_reg(0)
    );
\count_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__6\(1),
      Q => count_reg(1)
    );
\count_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__6\(2),
      Q => count_reg(2)
    );
\count_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__6\(3),
      Q => count_reg(3)
    );
\count_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__6\(4),
      Q => count_reg(4)
    );
\done_aux_i_1__3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF1B"
    )
        port map (
      I0 => \^q\(1),
      I1 => done_aux_reg_0,
      I2 => \^q\(0),
      I3 => done,
      O => \done_aux_i_1__3_n_0\
    );
done_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \done_aux_i_1__3_n_0\,
      Q => done
    );
\j[0]_i_1__6\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(0),
      O => \j[0]_i_1__6_n_0\
    );
\j[1]_i_1__6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(1),
      I1 => done,
      O => j0
    );
\j_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \j[0]_i_1__6_n_0\,
      Q => \^q\(0)
    );
\j_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => \^q\(0),
      Q => \^q\(1)
    );
\valid_aux_i_1__7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF04"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      I2 => \valid_aux_i_2__5_n_0\,
      I3 => \^valid\,
      O => \valid_aux_i_1__7_n_0\
    );
\valid_aux_i_2__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFEFF"
    )
        port map (
      I0 => count_reg(4),
      I1 => count_reg(3),
      I2 => count_reg(2),
      I3 => count_reg(1),
      I4 => count_reg(0),
      O => \valid_aux_i_2__5_n_0\
    );
valid_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \valid_aux_i_1__7_n_0\,
      Q => \^valid\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_ctrl_logic__parameterized7\ is
  port (
    j_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    CO : out STD_LOGIC_VECTOR ( 0 to 0 );
    valid : out STD_LOGIC;
    \count_reg_reg[1]\ : out STD_LOGIC;
    \count_reg_reg[2]\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \j_reg[1]\ : out STD_LOGIC;
    \count_reg_reg[2]_0\ : out STD_LOGIC;
    \count_reg_reg[2]_1\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \count_reg_reg[2]_2\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count_reg_reg[0]\ : out STD_LOGIC;
    \j_reg[1]_0\ : out STD_LOGIC;
    \j_reg[0]_0\ : out STD_LOGIC;
    \count_reg_reg[3]\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \FSM_onehot_state_reg[1]\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count1_carry__0_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \count1_carry__1_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \count[4]_i_3__2_0\ : in STD_LOGIC;
    done_aux_reg_0 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \count1_carry__1_1\ : in STD_LOGIC;
    done_aux_reg_1 : in STD_LOGIC;
    \count1_carry_i_19__1_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 4 downto 0 );
    a_in_2 : in STD_LOGIC_VECTOR ( 4 downto 0 );
    done_aux_reg_2 : in STD_LOGIC;
    done_aux_reg_3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    done_aux_reg_4 : in STD_LOGIC;
    \count_reg_reg[0]_0\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    next_out_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_ctrl_logic__parameterized7\ : entity is "ctrl_logic";
end \design_1_top_nqueens_0_0_ctrl_logic__parameterized7\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_ctrl_logic__parameterized7\ is
  signal count : STD_LOGIC;
  signal \count1_carry__0_n_0\ : STD_LOGIC;
  signal \count1_carry__0_n_1\ : STD_LOGIC;
  signal \count1_carry__0_n_2\ : STD_LOGIC;
  signal \count1_carry__0_n_3\ : STD_LOGIC;
  signal \count1_carry__1_n_2\ : STD_LOGIC;
  signal \count1_carry__1_n_3\ : STD_LOGIC;
  signal \count1_carry_i_14__5_n_0\ : STD_LOGIC;
  signal \count1_carry_i_15__4_n_0\ : STD_LOGIC;
  signal \count1_carry_i_18__1_n_0\ : STD_LOGIC;
  signal \count1_carry_i_19__1_n_0\ : STD_LOGIC;
  signal \count1_carry_i_20__1_n_0\ : STD_LOGIC;
  signal \count1_carry_i_5__5_n_0\ : STD_LOGIC;
  signal \count1_carry_i_9__6_n_0\ : STD_LOGIC;
  signal count1_carry_n_0 : STD_LOGIC;
  signal count1_carry_n_1 : STD_LOGIC;
  signal count1_carry_n_2 : STD_LOGIC;
  signal count1_carry_n_3 : STD_LOGIC;
  signal \count[0]_i_1__7_n_0\ : STD_LOGIC;
  signal \count[4]_i_5__6_n_0\ : STD_LOGIC;
  signal count_reg : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^count_reg_reg[0]\ : STD_LOGIC;
  signal \^count_reg_reg[1]\ : STD_LOGIC;
  signal \^count_reg_reg[2]_0\ : STD_LOGIC;
  signal done : STD_LOGIC;
  signal \done_aux_i_1__2_n_0\ : STD_LOGIC;
  signal j0 : STD_LOGIC;
  signal \^j_reg\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^j_reg[0]_0\ : STD_LOGIC;
  signal \^j_reg[1]\ : STD_LOGIC;
  signal \^j_reg[1]_0\ : STD_LOGIC;
  signal \plusOp__7\ : STD_LOGIC_VECTOR ( 4 downto 1 );
  signal \^valid\ : STD_LOGIC;
  signal \valid_aux_i_1__4_n_0\ : STD_LOGIC;
  signal \valid_aux_i_2__6_n_0\ : STD_LOGIC;
  signal NLW_count1_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__0_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_count1_carry__1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_count1_carry__1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_onehot_state[3]_i_1__7\ : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \count1_carry_i_13__5\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \count1_carry_i_16__3\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \count[1]_i_1__7\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \count[2]_i_1__7\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \count[3]_i_1__7\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \count[4]_i_2__7\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \valid_aux_i_1__4\ : label is "soft_lutpair7";
begin
  \count_reg_reg[0]\ <= \^count_reg_reg[0]\;
  \count_reg_reg[1]\ <= \^count_reg_reg[1]\;
  \count_reg_reg[2]_0\ <= \^count_reg_reg[2]_0\;
  j_reg(0) <= \^j_reg\(0);
  \j_reg[0]_0\ <= \^j_reg[0]_0\;
  \j_reg[1]\ <= \^j_reg[1]\;
  \j_reg[1]_0\ <= \^j_reg[1]_0\;
  valid <= \^valid\;
\FSM_onehot_state[3]_i_1__7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^valid\,
      I1 => \count_reg_reg[0]_0\(2),
      O => D(0)
    );
\FSM_onehot_state[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFF888"
    )
        port map (
      I0 => \count_reg_reg[0]_0\(3),
      I1 => next_out_2,
      I2 => done,
      I3 => \count_reg_reg[0]_0\(2),
      I4 => \count_reg_reg[0]_0\(1),
      I5 => \count_reg_reg[0]_0\(0),
      O => E(0)
    );
acks_out_reg_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFEFEFEFEFEFE"
    )
        port map (
      I0 => \count_reg_reg[0]_0\(1),
      I1 => \count_reg_reg[0]_0\(0),
      I2 => \count_reg_reg[0]_0\(4),
      I3 => done,
      I4 => \count_reg_reg[0]_0\(2),
      I5 => \^valid\,
      O => \FSM_onehot_state_reg[1]\
    );
count1_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => count1_carry_n_0,
      CO(2) => count1_carry_n_1,
      CO(1) => count1_carry_n_2,
      CO(0) => count1_carry_n_3,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => NLW_count1_carry_O_UNCONNECTED(3 downto 0),
      S(3 downto 0) => \count1_carry__0_0\(3 downto 0)
    );
\count1_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => count1_carry_n_0,
      CO(3) => \count1_carry__0_n_0\,
      CO(2) => \count1_carry__0_n_1\,
      CO(1) => \count1_carry__0_n_2\,
      CO(0) => \count1_carry__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"1111",
      O(3 downto 0) => \NLW_count1_carry__0_O_UNCONNECTED\(3 downto 0),
      S(3 downto 0) => \count1_carry__1_0\(3 downto 0)
    );
\count1_carry__0_i_1__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EB14FF00FF00"
    )
        port map (
      I0 => \count1_carry_i_5__5_n_0\,
      I1 => \^j_reg[1]\,
      I2 => done_aux_reg_0(2),
      I3 => \count1_carry__1_1\,
      I4 => \^count_reg_reg[2]_0\,
      I5 => \count1_carry_i_9__6_n_0\,
      O => \count_reg_reg[2]_1\(3)
    );
\count1_carry__0_i_2__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EB14FF00FF00"
    )
        port map (
      I0 => \count1_carry_i_5__5_n_0\,
      I1 => \^j_reg[1]\,
      I2 => done_aux_reg_0(2),
      I3 => \count1_carry__1_1\,
      I4 => \^count_reg_reg[2]_0\,
      I5 => \count1_carry_i_9__6_n_0\,
      O => \count_reg_reg[2]_1\(2)
    );
\count1_carry__0_i_3__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EB14FF00FF00"
    )
        port map (
      I0 => \count1_carry_i_5__5_n_0\,
      I1 => \^j_reg[1]\,
      I2 => done_aux_reg_0(2),
      I3 => \count1_carry__1_1\,
      I4 => \^count_reg_reg[2]_0\,
      I5 => \count1_carry_i_9__6_n_0\,
      O => \count_reg_reg[2]_1\(1)
    );
\count1_carry__0_i_4__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EB14FF00FF00"
    )
        port map (
      I0 => \count1_carry_i_5__5_n_0\,
      I1 => \^j_reg[1]\,
      I2 => done_aux_reg_0(2),
      I3 => \count1_carry__1_1\,
      I4 => \^count_reg_reg[2]_0\,
      I5 => \count1_carry_i_9__6_n_0\,
      O => \count_reg_reg[2]_1\(0)
    );
\count1_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \count1_carry__0_n_0\,
      CO(3) => \NLW_count1_carry__1_CO_UNCONNECTED\(3),
      CO(2) => CO(0),
      CO(1) => \count1_carry__1_n_2\,
      CO(0) => \count1_carry__1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0111",
      O(3 downto 0) => \NLW_count1_carry__1_O_UNCONNECTED\(3 downto 0),
      S(3) => '0',
      S(2 downto 0) => S(2 downto 0)
    );
\count1_carry__1_i_1__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EB00FF00FF00"
    )
        port map (
      I0 => \count1_carry_i_5__5_n_0\,
      I1 => \^j_reg[1]\,
      I2 => done_aux_reg_0(2),
      I3 => \count1_carry__1_1\,
      I4 => \^count_reg_reg[2]_0\,
      I5 => \count1_carry_i_9__6_n_0\,
      O => \count_reg_reg[2]\(2)
    );
\count1_carry__1_i_2__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EB14FF00FF00"
    )
        port map (
      I0 => \count1_carry_i_5__5_n_0\,
      I1 => \^j_reg[1]\,
      I2 => done_aux_reg_0(2),
      I3 => \count1_carry__1_1\,
      I4 => \^count_reg_reg[2]_0\,
      I5 => \count1_carry_i_9__6_n_0\,
      O => \count_reg_reg[2]\(1)
    );
\count1_carry__1_i_3__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EB14FF00FF00"
    )
        port map (
      I0 => \count1_carry_i_5__5_n_0\,
      I1 => \^j_reg[1]\,
      I2 => done_aux_reg_0(2),
      I3 => \count1_carry__1_1\,
      I4 => \^count_reg_reg[2]_0\,
      I5 => \count1_carry_i_9__6_n_0\,
      O => \count_reg_reg[2]\(0)
    );
\count1_carry_i_13__5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \count1_carry_i_18__1_n_0\,
      I1 => done_aux_reg_0(1),
      O => \^count_reg_reg[1]\
    );
\count1_carry_i_14__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"084C2A6E195D3B7F"
    )
        port map (
      I0 => \count1_carry_i_19__1_0\(0),
      I1 => \count1_carry_i_19__1_0\(1),
      I2 => Q(3),
      I3 => a_in_2(4),
      I4 => a_in_2(2),
      I5 => Q(1),
      O => \count1_carry_i_14__5_n_0\
    );
\count1_carry_i_15__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"048C26AE159D37BF"
    )
        port map (
      I0 => \count1_carry_i_19__1_0\(0),
      I1 => \count1_carry_i_19__1_0\(1),
      I2 => Q(0),
      I3 => Q(4),
      I4 => a_in_2(3),
      I5 => Q(2),
      O => \count1_carry_i_15__4_n_0\
    );
\count1_carry_i_16__3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"022F"
    )
        port map (
      I0 => \^j_reg[1]_0\,
      I1 => done_aux_reg_0(0),
      I2 => done_aux_reg_0(1),
      I3 => \count1_carry_i_18__1_n_0\,
      O => \^count_reg_reg[0]\
    );
\count1_carry_i_17__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FB51EA40"
    )
        port map (
      I0 => \count1_carry_i_19__1_0\(1),
      I1 => \count1_carry_i_19__1_0\(0),
      I2 => a_in_2(0),
      I3 => Q(0),
      I4 => \count1_carry_i_19__1_n_0\,
      O => \^j_reg[1]_0\
    );
\count1_carry_i_18__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"27772272"
    )
        port map (
      I0 => \count1_carry_i_19__1_0\(1),
      I1 => Q(1),
      I2 => \count1_carry_i_19__1_0\(0),
      I3 => \count1_carry_i_19__1_n_0\,
      I4 => \count1_carry_i_14__5_n_0\,
      O => \count1_carry_i_18__1_n_0\
    );
\count1_carry_i_19__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FB73D951EA62C840"
    )
        port map (
      I0 => \count1_carry_i_19__1_0\(0),
      I1 => \count1_carry_i_19__1_0\(1),
      I2 => a_in_2(3),
      I3 => Q(2),
      I4 => \count1_carry_i_20__1_n_0\,
      I5 => Q(0),
      O => \count1_carry_i_19__1_n_0\
    );
\count1_carry_i_1__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EB14FF00FF00"
    )
        port map (
      I0 => \count1_carry_i_5__5_n_0\,
      I1 => \^j_reg[1]\,
      I2 => done_aux_reg_0(2),
      I3 => \count1_carry__1_1\,
      I4 => \^count_reg_reg[2]_0\,
      I5 => \count1_carry_i_9__6_n_0\,
      O => \count_reg_reg[2]_2\(2)
    );
\count1_carry_i_20__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA8A"
    )
        port map (
      I0 => a_in_2(1),
      I1 => \count1_carry_i_19__1_0\(0),
      I2 => \count1_carry_i_19__1_0\(1),
      I3 => Q(4),
      O => \count1_carry_i_20__1_n_0\
    );
\count1_carry_i_2__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EB14FF00FF00"
    )
        port map (
      I0 => \count1_carry_i_5__5_n_0\,
      I1 => \^j_reg[1]\,
      I2 => done_aux_reg_0(2),
      I3 => \count1_carry__1_1\,
      I4 => \^count_reg_reg[2]_0\,
      I5 => \count1_carry_i_9__6_n_0\,
      O => \count_reg_reg[2]_2\(1)
    );
\count1_carry_i_3__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF0000EB00000000"
    )
        port map (
      I0 => \count1_carry_i_5__5_n_0\,
      I1 => \^j_reg[1]\,
      I2 => done_aux_reg_0(2),
      I3 => \^count_reg_reg[2]_0\,
      I4 => \count1_carry_i_9__6_n_0\,
      I5 => \count1_carry__1_1\,
      O => \count_reg_reg[2]_2\(0)
    );
\count1_carry_i_5__5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^count_reg_reg[1]\,
      I1 => \count[4]_i_3__2_0\,
      O => \count1_carry_i_5__5_n_0\
    );
\count1_carry_i_6__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"72777222"
    )
        port map (
      I0 => \count1_carry_i_19__1_0\(1),
      I1 => Q(2),
      I2 => \count1_carry_i_14__5_n_0\,
      I3 => \count1_carry_i_19__1_0\(0),
      I4 => \count1_carry_i_15__4_n_0\,
      O => \^j_reg[1]\
    );
\count1_carry_i_8__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF2BD42BD4FF00"
    )
        port map (
      I0 => \^count_reg_reg[0]\,
      I1 => done_aux_reg_0(2),
      I2 => \^j_reg[1]\,
      I3 => done_aux_reg_1,
      I4 => done_aux_reg_0(3),
      I5 => \count[4]_i_5__6_n_0\,
      O => \^count_reg_reg[2]_0\
    );
\count1_carry_i_9__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"2BD4D42B"
    )
        port map (
      I0 => \^count_reg_reg[0]\,
      I1 => done_aux_reg_0(2),
      I2 => \^j_reg[1]\,
      I3 => \count[4]_i_5__6_n_0\,
      I4 => done_aux_reg_0(3),
      O => \count1_carry_i_9__6_n_0\
    );
\count[0]_i_1__7\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => count_reg(0),
      O => \count[0]_i_1__7_n_0\
    );
\count[1]_i_1__7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => count_reg(1),
      I1 => count_reg(0),
      O => \plusOp__7\(1)
    );
\count[2]_i_1__7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => count_reg(2),
      I1 => count_reg(0),
      I2 => count_reg(1),
      O => \plusOp__7\(2)
    );
\count[3]_i_1__7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => count_reg(3),
      I1 => count_reg(1),
      I2 => count_reg(0),
      I3 => count_reg(2),
      O => \plusOp__7\(3)
    );
\count[4]_i_1__7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"10"
    )
        port map (
      I0 => \^j_reg\(0),
      I1 => done,
      I2 => done_aux_reg_2,
      O => count
    );
\count[4]_i_2__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => count_reg(4),
      I1 => count_reg(2),
      I2 => count_reg(0),
      I3 => count_reg(1),
      I4 => count_reg(3),
      O => \plusOp__7\(4)
    );
\count[4]_i_3__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAA8A8AAA"
    )
        port map (
      I0 => done_aux_reg_3(0),
      I1 => \count1_carry_i_5__5_n_0\,
      I2 => done_aux_reg_4,
      I3 => \count[4]_i_5__6_n_0\,
      I4 => done_aux_reg_0(3),
      I5 => done_aux_reg_1,
      O => \count_reg_reg[3]\
    );
\count[4]_i_5__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"72777222"
    )
        port map (
      I0 => \count1_carry_i_19__1_0\(1),
      I1 => Q(3),
      I2 => \count1_carry_i_15__4_n_0\,
      I3 => \count1_carry_i_19__1_0\(0),
      I4 => \^j_reg[0]_0\,
      O => \count[4]_i_5__6_n_0\
    );
\count[4]_i_7__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0123456789ABCDEF"
    )
        port map (
      I0 => \count1_carry_i_19__1_0\(0),
      I1 => \count1_carry_i_19__1_0\(1),
      I2 => Q(3),
      I3 => a_in_2(4),
      I4 => Q(1),
      I5 => a_in_2(2),
      O => \^j_reg[0]_0\
    );
\count_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \count[0]_i_1__7_n_0\,
      Q => count_reg(0)
    );
\count_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__7\(1),
      Q => count_reg(1)
    );
\count_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__7\(2),
      Q => count_reg(2)
    );
\count_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__7\(3),
      Q => count_reg(3)
    );
\count_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => count,
      CLR => AR(0),
      D => \plusOp__7\(4),
      Q => count_reg(4)
    );
\done_aux_i_1__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FB"
    )
        port map (
      I0 => \^j_reg\(0),
      I1 => done_aux_reg_2,
      I2 => done,
      O => \done_aux_i_1__2_n_0\
    );
done_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \done_aux_i_1__2_n_0\,
      Q => done
    );
\j[0]_i_1__7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^j_reg\(0),
      I1 => done,
      O => j0
    );
\j_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => j0,
      CLR => AR(0),
      D => '1',
      Q => \^j_reg\(0)
    );
\valid_aux_i_1__4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"D"
    )
        port map (
      I0 => \valid_aux_i_2__6_n_0\,
      I1 => \^valid\,
      O => \valid_aux_i_1__4_n_0\
    );
\valid_aux_i_2__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFDFF"
    )
        port map (
      I0 => count_reg(0),
      I1 => count_reg(1),
      I2 => count_reg(3),
      I3 => \^j_reg\(0),
      I4 => count_reg(2),
      I5 => count_reg(4),
      O => \valid_aux_i_2__6_n_0\
    );
valid_aux_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      CLR => AR(0),
      D => \valid_aux_i_1__4_n_0\,
      Q => \^valid\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_top_nqueens_0_0_up_counter is
  port (
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S : out STD_LOGIC_VECTOR ( 0 to 0 );
    \count_reg_reg[2]_0\ : out STD_LOGIC;
    \count_reg_reg[2]_1\ : out STD_LOGIC;
    \count_reg_reg[2]_2\ : out STD_LOGIC;
    \count_reg_reg[0]_0\ : out STD_LOGIC;
    \count_reg_reg[3]_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count_reg[0]\ : in STD_LOGIC;
    count1_carry_i_4_0 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    count1_carry : in STD_LOGIC;
    done_aux_reg : in STD_LOGIC;
    \count_reg[0]_0\ : in STD_LOGIC;
    \count1_carry__1_i_3\ : in STD_LOGIC;
    done_aux_i_4_0 : in STD_LOGIC;
    \FSM_onehot_state_reg[4]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    valid : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_top_nqueens_0_0_up_counter : entity is "up_counter";
end design_1_top_nqueens_0_0_up_counter;

architecture STRUCTURE of design_1_top_nqueens_0_0_up_counter is
  signal \FSM_onehot_state[4]_i_4_n_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal count1_carry_i_10_n_0 : STD_LOGIC;
  signal count1_carry_i_12_n_0 : STD_LOGIC;
  signal count1_carry_i_8_n_0 : STD_LOGIC;
  signal \count1_carry_i_9__3_n_0\ : STD_LOGIC;
  signal count_next : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^count_reg_reg[0]_0\ : STD_LOGIC;
  signal \^count_reg_reg[2]_0\ : STD_LOGIC;
  signal u_i : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_onehot_state[4]_i_4\ : label is "soft_lutpair130";
  attribute SOFT_HLUTNM of count1_carry_i_12 : label is "soft_lutpair132";
  attribute SOFT_HLUTNM of count1_carry_i_8 : label is "soft_lutpair133";
  attribute SOFT_HLUTNM of \count1_carry_i_9__3\ : label is "soft_lutpair132";
  attribute SOFT_HLUTNM of \count[4]_i_9\ : label is "soft_lutpair133";
  attribute SOFT_HLUTNM of \count_reg[0]_i_1\ : label is "soft_lutpair129";
  attribute SOFT_HLUTNM of \count_reg[1]_i_1\ : label is "soft_lutpair130";
  attribute SOFT_HLUTNM of \count_reg[2]_i_1\ : label is "soft_lutpair131";
  attribute SOFT_HLUTNM of \count_reg[3]_i_1\ : label is "soft_lutpair131";
  attribute SOFT_HLUTNM of \count_reg[4]_i_1\ : label is "soft_lutpair129";
begin
  Q(1 downto 0) <= \^q\(1 downto 0);
  \count_reg_reg[0]_0\ <= \^count_reg_reg[0]_0\;
  \count_reg_reg[2]_0\ <= \^count_reg_reg[2]_0\;
\FSM_onehot_state[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF44F4"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(2),
      I3 => valid,
      I4 => \FSM_onehot_state_reg[4]\(0),
      O => D(0)
    );
\FSM_onehot_state[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAAA8AAA"
    )
        port map (
      I0 => \FSM_onehot_state_reg[4]\(1),
      I1 => \^q\(1),
      I2 => \^q\(0),
      I3 => u_i(1),
      I4 => u_i(2),
      I5 => u_i(0),
      O => D(1)
    );
\FSM_onehot_state[4]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"E0"
    )
        port map (
      I0 => \FSM_onehot_state_reg[4]\(3),
      I1 => \FSM_onehot_state_reg[4]\(1),
      I2 => \FSM_onehot_state[4]_i_4_n_0\,
      O => D(2)
    );
\FSM_onehot_state[4]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001000"
    )
        port map (
      I0 => u_i(0),
      I1 => u_i(2),
      I2 => u_i(1),
      I3 => \^q\(0),
      I4 => \^q\(1),
      O => \FSM_onehot_state[4]_i_4_n_0\
    );
count1_carry_i_10: unisim.vcomponents.LUT5
    generic map(
      INIT => X"96696996"
    )
        port map (
      I0 => count1_carry_i_12_n_0,
      I1 => u_i(2),
      I2 => \count_reg[0]_0\,
      I3 => count1_carry_i_4_0(2),
      I4 => count1_carry_i_4_0(1),
      O => count1_carry_i_10_n_0
    );
count1_carry_i_12: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1117"
    )
        port map (
      I0 => u_i(1),
      I1 => \count_reg[0]\,
      I2 => u_i(0),
      I3 => done_aux_i_4_0,
      O => count1_carry_i_12_n_0
    );
count1_carry_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A4010084002001"
    )
        port map (
      I0 => count1_carry_i_4_0(0),
      I1 => \^count_reg_reg[2]_0\,
      I2 => count1_carry_i_8_n_0,
      I3 => \count1_carry_i_9__3_n_0\,
      I4 => count1_carry_i_10_n_0,
      I5 => count1_carry,
      O => S(0)
    );
count1_carry_i_6: unisim.vcomponents.LUT5
    generic map(
      INIT => X"96669996"
    )
        port map (
      I0 => \count1_carry__1_i_3\,
      I1 => \^q\(0),
      I2 => \count_reg[0]_0\,
      I3 => u_i(2),
      I4 => count1_carry_i_12_n_0,
      O => \count_reg_reg[3]_0\
    );
count1_carry_i_7: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6A565555AAAA6A56"
    )
        port map (
      I0 => done_aux_reg,
      I1 => \count_reg[0]_0\,
      I2 => u_i(2),
      I3 => count1_carry_i_12_n_0,
      I4 => \count1_carry__1_i_3\,
      I5 => \^q\(0),
      O => \^count_reg_reg[2]_0\
    );
count1_carry_i_8: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => u_i(0),
      I1 => done_aux_i_4_0,
      O => count1_carry_i_8_n_0
    );
\count1_carry_i_9__3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => u_i(1),
      I1 => \count_reg[0]\,
      O => \count1_carry_i_9__3_n_0\
    );
\count[4]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF9696FFFFFFFFFF"
    )
        port map (
      I0 => \^count_reg_reg[0]_0\,
      I1 => u_i(2),
      I2 => \count_reg[0]_0\,
      I3 => u_i(1),
      I4 => \count_reg[0]\,
      I5 => count1_carry_i_8_n_0,
      O => \count_reg_reg[2]_2\
    );
\count[4]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => u_i(0),
      I1 => done_aux_i_4_0,
      O => \^count_reg_reg[0]_0\
    );
\count_reg[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000FFBF"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => u_i(1),
      I3 => u_i(2),
      I4 => u_i(0),
      O => count_next(0)
    );
\count_reg[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0FF0B0"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => u_i(1),
      I3 => u_i(2),
      I4 => u_i(0),
      O => count_next(1)
    );
\count_reg[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => u_i(2),
      I1 => u_i(1),
      I2 => u_i(0),
      O => count_next(2)
    );
\count_reg[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3CCCCC8C"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => u_i(1),
      I3 => u_i(2),
      I4 => u_i(0),
      O => count_next(3)
    );
\count_reg[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => u_i(1),
      I3 => u_i(0),
      I4 => u_i(2),
      O => count_next(4)
    );
\count_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => AR(0),
      D => count_next(0),
      Q => u_i(0)
    );
\count_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => AR(0),
      D => count_next(1),
      Q => u_i(1)
    );
\count_reg_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => AR(0),
      D => count_next(2),
      Q => u_i(2)
    );
\count_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => AR(0),
      D => count_next(3),
      Q => \^q\(0)
    );
\count_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => AR(0),
      D => count_next(4),
      Q => \^q\(1)
    );
done_aux_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FBFFFFFBFFFBFBFF"
    )
        port map (
      I0 => done_aux_reg,
      I1 => count1_carry_i_8_n_0,
      I2 => \count1_carry_i_9__3_n_0\,
      I3 => \count_reg[0]_0\,
      I4 => u_i(2),
      I5 => count1_carry_i_12_n_0,
      O => \count_reg_reg[2]_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_top_nqueens_0_0_up_counter_0 is
  port (
    \count_reg_reg[3]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \count_reg_reg[1]_0\ : out STD_LOGIC;
    \count_reg_reg[0]_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count_reg[0]\ : in STD_LOGIC;
    \count_reg[0]_0\ : in STD_LOGIC;
    \count_reg[0]_1\ : in STD_LOGIC;
    \count_reg[0]_2\ : in STD_LOGIC;
    \done_aux_i_2__0\ : in STD_LOGIC;
    \FSM_onehot_state_reg[4]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    valid : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    \count_reg_reg[0]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_top_nqueens_0_0_up_counter_0 : entity is "up_counter";
end design_1_top_nqueens_0_0_up_counter_0;

architecture STRUCTURE of design_1_top_nqueens_0_0_up_counter_0 is
  signal \FSM_onehot_state[4]_i_4__0_n_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal count_next : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^count_reg_reg[0]_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_onehot_state[4]_i_4__0\ : label is "soft_lutpair110";
  attribute SOFT_HLUTNM of \count_reg[0]_i_1__0\ : label is "soft_lutpair109";
  attribute SOFT_HLUTNM of \count_reg[1]_i_1__0\ : label is "soft_lutpair110";
  attribute SOFT_HLUTNM of \count_reg[2]_i_1__0\ : label is "soft_lutpair111";
  attribute SOFT_HLUTNM of \count_reg[3]_i_1__0\ : label is "soft_lutpair109";
  attribute SOFT_HLUTNM of \count_reg[4]_i_1__0\ : label is "soft_lutpair111";
begin
  Q(4 downto 0) <= \^q\(4 downto 0);
  \count_reg_reg[0]_0\ <= \^count_reg_reg[0]_0\;
\FSM_onehot_state[1]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF44F4"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__0_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(2),
      I3 => valid,
      I4 => \FSM_onehot_state_reg[4]\(0),
      O => D(0)
    );
\FSM_onehot_state[2]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAAA8AAA"
    )
        port map (
      I0 => \FSM_onehot_state_reg[4]\(1),
      I1 => \^q\(4),
      I2 => \^q\(3),
      I3 => \^q\(1),
      I4 => \^q\(2),
      I5 => \^q\(0),
      O => D(1)
    );
\FSM_onehot_state[4]_i_3__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__0_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(1),
      O => D(2)
    );
\FSM_onehot_state[4]_i_4__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001000"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(2),
      I2 => \^q\(1),
      I3 => \^q\(3),
      I4 => \^q\(4),
      O => \FSM_onehot_state[4]_i_4__0_n_0\
    );
\count1_carry_i_8__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(0),
      I1 => \done_aux_i_2__0\,
      O => \^count_reg_reg[0]_0\
    );
\count[4]_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0440011001100440"
    )
        port map (
      I0 => \^count_reg_reg[0]_0\,
      I1 => \count_reg[0]_0\,
      I2 => \^q\(1),
      I3 => \count_reg[0]_1\,
      I4 => \^q\(2),
      I5 => \count_reg[0]_2\,
      O => \count_reg_reg[1]_0\
    );
\count[4]_i_5__5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count_reg[0]\,
      O => \count_reg_reg[3]_0\
    );
\count_reg[0]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000FFBF"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(0)
    );
\count_reg[1]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0FF0B0"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(1)
    );
\count_reg[2]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(1),
      I2 => \^q\(0),
      O => count_next(2)
    );
\count_reg[3]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3CCCCC8C"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(3)
    );
\count_reg[4]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(2),
      I3 => \^q\(1),
      I4 => \^q\(0),
      O => count_next(4)
    );
\count_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(0),
      Q => \^q\(0)
    );
\count_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(1),
      Q => \^q\(1)
    );
\count_reg_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(2),
      Q => \^q\(2)
    );
\count_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(3),
      Q => \^q\(3)
    );
\count_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(4),
      Q => \^q\(4)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_top_nqueens_0_0_up_counter_1 is
  port (
    \count_reg_reg[0]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 4 downto 0 );
    S : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count_reg_reg[0]_1\ : out STD_LOGIC;
    \count_reg_reg[3]_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \count_reg_reg[3]_1\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \count_reg_reg[3]_2\ : out STD_LOGIC;
    \count_reg_reg[1]_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count1_carry_i_4__1\ : in STD_LOGIC;
    \count_reg[0]\ : in STD_LOGIC;
    \count1_carry__1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count1_carry__1_0\ : in STD_LOGIC;
    CO : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count_reg[0]_0\ : in STD_LOGIC;
    \count1_carry_i_4__1_0\ : in STD_LOGIC;
    \count1_carry_i_3__6\ : in STD_LOGIC;
    \FSM_onehot_state_reg[4]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    valid : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    \count_reg_reg[0]_2\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_top_nqueens_0_0_up_counter_1 : entity is "up_counter";
end design_1_top_nqueens_0_0_up_counter_1;

architecture STRUCTURE of design_1_top_nqueens_0_0_up_counter_1 is
  signal \FSM_onehot_state[4]_i_4__1_n_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal count_next : STD_LOGIC_VECTOR ( 4 downto 1 );
  signal \count_reg[0]_i_1__4_n_0\ : STD_LOGIC;
  signal \^count_reg_reg[0]_1\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_onehot_state[4]_i_4__1\ : label is "soft_lutpair90";
  attribute SOFT_HLUTNM of \count_reg[0]_i_1__4\ : label is "soft_lutpair88";
  attribute SOFT_HLUTNM of \count_reg[1]_i_1__1\ : label is "soft_lutpair88";
  attribute SOFT_HLUTNM of \count_reg[2]_i_1__1\ : label is "soft_lutpair90";
  attribute SOFT_HLUTNM of \count_reg[3]_i_1__1\ : label is "soft_lutpair89";
  attribute SOFT_HLUTNM of \count_reg[4]_i_1__1\ : label is "soft_lutpair89";
begin
  Q(4 downto 0) <= \^q\(4 downto 0);
  \count_reg_reg[0]_1\ <= \^count_reg_reg[0]_1\;
\FSM_onehot_state[1]_i_1__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF44F4"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__1_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(2),
      I3 => valid,
      I4 => \FSM_onehot_state_reg[4]\(0),
      O => D(0)
    );
\FSM_onehot_state[2]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAAA8AAA"
    )
        port map (
      I0 => \FSM_onehot_state_reg[4]\(1),
      I1 => \^q\(4),
      I2 => \^q\(3),
      I3 => \^q\(1),
      I4 => \^q\(2),
      I5 => \^q\(0),
      O => D(1)
    );
\FSM_onehot_state[4]_i_3__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__1_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(1),
      O => D(2)
    );
\FSM_onehot_state[4]_i_4__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001000"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(2),
      I2 => \^q\(1),
      I3 => \^q\(3),
      I4 => \^q\(4),
      O => \FSM_onehot_state[4]_i_4__1_n_0\
    );
\count1_carry__0_i_1__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F69"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count_reg[0]\,
      I2 => \count1_carry__1\(0),
      I3 => \^count_reg_reg[0]_1\,
      I4 => \count1_carry__1_0\,
      O => \count_reg_reg[3]_0\(3)
    );
\count1_carry__0_i_2__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F69"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count_reg[0]\,
      I2 => \count1_carry__1\(0),
      I3 => \^count_reg_reg[0]_1\,
      I4 => \count1_carry__1_0\,
      O => \count_reg_reg[3]_0\(2)
    );
\count1_carry__0_i_3__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F69"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count_reg[0]\,
      I2 => \count1_carry__1\(0),
      I3 => \^count_reg_reg[0]_1\,
      I4 => \count1_carry__1_0\,
      O => \count_reg_reg[3]_0\(1)
    );
\count1_carry__0_i_4__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F69"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count_reg[0]\,
      I2 => \count1_carry__1\(0),
      I3 => \^count_reg_reg[0]_1\,
      I4 => \count1_carry__1_0\,
      O => \count_reg_reg[3]_0\(0)
    );
\count1_carry__1_i_1__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F09"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count_reg[0]\,
      I2 => \count1_carry__1\(0),
      I3 => \^count_reg_reg[0]_1\,
      I4 => \count1_carry__1_0\,
      O => S(2)
    );
\count1_carry__1_i_2__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F69"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count_reg[0]\,
      I2 => \count1_carry__1\(0),
      I3 => \^count_reg_reg[0]_1\,
      I4 => \count1_carry__1_0\,
      O => S(1)
    );
\count1_carry__1_i_3__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F69"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count_reg[0]\,
      I2 => \count1_carry__1\(0),
      I3 => \^count_reg_reg[0]_1\,
      I4 => \count1_carry__1_0\,
      O => S(0)
    );
\count1_carry_i_10__6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(0),
      I1 => \count1_carry_i_4__1\,
      O => \count_reg_reg[0]_0\
    );
\count1_carry_i_12__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(1),
      I1 => \count1_carry_i_4__1_0\,
      O => \count_reg_reg[1]_0\
    );
\count1_carry_i_1__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F69"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count_reg[0]\,
      I2 => \count1_carry__1\(0),
      I3 => \^count_reg_reg[0]_1\,
      I4 => \count1_carry__1_0\,
      O => \count_reg_reg[3]_1\(1)
    );
\count1_carry_i_2__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F69"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count_reg[0]\,
      I2 => \count1_carry__1\(0),
      I3 => \^count_reg_reg[0]_1\,
      I4 => \count1_carry__1_0\,
      O => \count_reg_reg[3]_1\(0)
    );
\count1_carry_i_6__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF6FF66FF6FFFF"
    )
        port map (
      I0 => \count1_carry_i_4__1\,
      I1 => \^q\(0),
      I2 => \count1_carry_i_4__1_0\,
      I3 => \^q\(1),
      I4 => \^q\(2),
      I5 => \count1_carry_i_3__6\,
      O => \^count_reg_reg[0]_1\
    );
\count[4]_i_4__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0F090"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count_reg[0]\,
      I2 => CO(0),
      I3 => \count_reg[0]_0\,
      I4 => \^count_reg_reg[0]_1\,
      O => \count_reg_reg[3]_2\
    );
\count_reg[0]_i_1__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000FFBF"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => \count_reg[0]_i_1__4_n_0\
    );
\count_reg[1]_i_1__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0FF0B0"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(1)
    );
\count_reg[2]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(1),
      I2 => \^q\(0),
      O => count_next(2)
    );
\count_reg[3]_i_1__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3CCCCC8C"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(3)
    );
\count_reg[4]_i_1__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(2),
      I3 => \^q\(1),
      I4 => \^q\(0),
      O => count_next(4)
    );
\count_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_2\(0),
      D => \count_reg[0]_i_1__4_n_0\,
      Q => \^q\(0)
    );
\count_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_2\(0),
      D => count_next(1),
      Q => \^q\(1)
    );
\count_reg_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_2\(0),
      D => count_next(2),
      Q => \^q\(2)
    );
\count_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_2\(0),
      D => count_next(3),
      Q => \^q\(3)
    );
\count_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_2\(0),
      D => count_next(4),
      Q => \^q\(4)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_top_nqueens_0_0_up_counter_2 is
  port (
    \count_reg_reg[0]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \count_reg_reg[3]_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count1_carry_i_4__2\ : in STD_LOGIC;
    \count_reg[0]\ : in STD_LOGIC;
    \FSM_onehot_state_reg[4]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    valid : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    \count_reg_reg[0]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_top_nqueens_0_0_up_counter_2 : entity is "up_counter";
end design_1_top_nqueens_0_0_up_counter_2;

architecture STRUCTURE of design_1_top_nqueens_0_0_up_counter_2 is
  signal \FSM_onehot_state[4]_i_4__2_n_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal count_next : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_onehot_state[4]_i_4__2\ : label is "soft_lutpair73";
  attribute SOFT_HLUTNM of \count_reg[0]_i_1__1\ : label is "soft_lutpair71";
  attribute SOFT_HLUTNM of \count_reg[1]_i_1__2\ : label is "soft_lutpair72";
  attribute SOFT_HLUTNM of \count_reg[2]_i_1__2\ : label is "soft_lutpair73";
  attribute SOFT_HLUTNM of \count_reg[3]_i_1__2\ : label is "soft_lutpair72";
  attribute SOFT_HLUTNM of \count_reg[4]_i_1__2\ : label is "soft_lutpair71";
begin
  Q(4 downto 0) <= \^q\(4 downto 0);
\FSM_onehot_state[1]_i_1__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF44F4"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__2_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(2),
      I3 => valid,
      I4 => \FSM_onehot_state_reg[4]\(0),
      O => D(0)
    );
\FSM_onehot_state[2]_i_1__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAAA8AAA"
    )
        port map (
      I0 => \FSM_onehot_state_reg[4]\(1),
      I1 => \^q\(4),
      I2 => \^q\(3),
      I3 => \^q\(1),
      I4 => \^q\(2),
      I5 => \^q\(0),
      O => D(1)
    );
\FSM_onehot_state[4]_i_3__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__2_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(1),
      O => D(2)
    );
\FSM_onehot_state[4]_i_4__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001000"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(2),
      I2 => \^q\(1),
      I3 => \^q\(3),
      I4 => \^q\(4),
      O => \FSM_onehot_state[4]_i_4__2_n_0\
    );
\count1_carry_i_8__2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(0),
      I1 => \count1_carry_i_4__2\,
      O => \count_reg_reg[0]_0\
    );
\count[4]_i_5__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count_reg[0]\,
      O => \count_reg_reg[3]_0\
    );
\count_reg[0]_i_1__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000FFBF"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(0)
    );
\count_reg[1]_i_1__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0FF0B0"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(1)
    );
\count_reg[2]_i_1__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(1),
      I2 => \^q\(0),
      O => count_next(2)
    );
\count_reg[3]_i_1__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3CCCCC8C"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(3)
    );
\count_reg[4]_i_1__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(0),
      I4 => \^q\(2),
      O => count_next(4)
    );
\count_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(0),
      Q => \^q\(0)
    );
\count_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(1),
      Q => \^q\(1)
    );
\count_reg_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(2),
      Q => \^q\(2)
    );
\count_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(3),
      Q => \^q\(3)
    );
\count_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(4),
      Q => \^q\(4)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_top_nqueens_0_0_up_counter_3 is
  port (
    \count_reg_reg[3]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \count_reg_reg[1]_0\ : out STD_LOGIC;
    \count_reg_reg[0]_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count_reg[0]\ : in STD_LOGIC;
    \count1_carry_i_4__3\ : in STD_LOGIC;
    \count1_carry_i_4__3_0\ : in STD_LOGIC;
    \FSM_onehot_state_reg[4]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    valid : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    \count_reg_reg[0]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_top_nqueens_0_0_up_counter_3 : entity is "up_counter";
end design_1_top_nqueens_0_0_up_counter_3;

architecture STRUCTURE of design_1_top_nqueens_0_0_up_counter_3 is
  signal \FSM_onehot_state[4]_i_4__3_n_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal count_next : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_onehot_state[4]_i_4__3\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \count_reg[0]_i_1__2\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \count_reg[1]_i_1__3\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \count_reg[2]_i_1__3\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \count_reg[3]_i_1__3\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \count_reg[4]_i_1__3\ : label is "soft_lutpair54";
begin
  Q(4 downto 0) <= \^q\(4 downto 0);
\FSM_onehot_state[1]_i_1__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF44F4"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__3_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(2),
      I3 => valid,
      I4 => \FSM_onehot_state_reg[4]\(0),
      O => D(0)
    );
\FSM_onehot_state[2]_i_1__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAAA8AAA"
    )
        port map (
      I0 => \FSM_onehot_state_reg[4]\(1),
      I1 => \^q\(4),
      I2 => \^q\(3),
      I3 => \^q\(1),
      I4 => \^q\(2),
      I5 => \^q\(0),
      O => D(1)
    );
\FSM_onehot_state[4]_i_3__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__3_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(1),
      O => D(2)
    );
\FSM_onehot_state[4]_i_4__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001000"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(2),
      I2 => \^q\(1),
      I3 => \^q\(3),
      I4 => \^q\(4),
      O => \FSM_onehot_state[4]_i_4__3_n_0\
    );
\count1_carry_i_10__2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(1),
      I1 => \count1_carry_i_4__3\,
      O => \count_reg_reg[1]_0\
    );
\count1_carry_i_11__3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(0),
      I1 => \count1_carry_i_4__3_0\,
      O => \count_reg_reg[0]_0\
    );
\count[4]_i_5__2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count_reg[0]\,
      O => \count_reg_reg[3]_0\
    );
\count_reg[0]_i_1__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000FFBF"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(0)
    );
\count_reg[1]_i_1__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0FF0B0"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(1)
    );
\count_reg[2]_i_1__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(1),
      I2 => \^q\(0),
      O => count_next(2)
    );
\count_reg[3]_i_1__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3CCCCC8C"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(3)
    );
\count_reg[4]_i_1__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(1),
      I2 => \^q\(0),
      I3 => \^q\(2),
      I4 => \^q\(3),
      O => count_next(4)
    );
\count_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(0),
      Q => \^q\(0)
    );
\count_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(1),
      Q => \^q\(1)
    );
\count_reg_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(2),
      Q => \^q\(2)
    );
\count_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(3),
      Q => \^q\(3)
    );
\count_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(4),
      Q => \^q\(4)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_top_nqueens_0_0_up_counter_4 is
  port (
    \count_reg_reg[1]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 4 downto 0 );
    S : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count_reg_reg[1]_1\ : out STD_LOGIC;
    \count_reg_reg[1]_2\ : out STD_LOGIC;
    \count_reg_reg[3]_0\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count_reg_reg[3]_1\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \count_reg_reg[0]_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count1_carry_i_4__4\ : in STD_LOGIC;
    \count1_carry__1\ : in STD_LOGIC;
    \count1_carry__1_0\ : in STD_LOGIC;
    \count1_carry__1_1\ : in STD_LOGIC;
    \count1_carry_i_9__2\ : in STD_LOGIC;
    \count1_carry_i_9__2_0\ : in STD_LOGIC;
    \count1_carry_i_4__4_0\ : in STD_LOGIC;
    \FSM_onehot_state_reg[4]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    valid : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    \count_reg_reg[0]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_top_nqueens_0_0_up_counter_4 : entity is "up_counter";
end design_1_top_nqueens_0_0_up_counter_4;

architecture STRUCTURE of design_1_top_nqueens_0_0_up_counter_4 is
  signal \FSM_onehot_state[4]_i_4__4_n_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal count_next : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^count_reg_reg[1]_1\ : STD_LOGIC;
  signal \^count_reg_reg[1]_2\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_onehot_state[4]_i_4__4\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \count1_carry_i_13__6\ : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \count1_carry_i_6__3\ : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \count_reg[0]_i_1__3\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \count_reg[1]_i_1__4\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \count_reg[2]_i_1__4\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \count_reg[3]_i_1__4\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \count_reg[4]_i_1__4\ : label is "soft_lutpair39";
begin
  Q(4 downto 0) <= \^q\(4 downto 0);
  \count_reg_reg[1]_1\ <= \^count_reg_reg[1]_1\;
  \count_reg_reg[1]_2\ <= \^count_reg_reg[1]_2\;
\FSM_onehot_state[1]_i_1__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF44F4"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__4_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(2),
      I3 => valid,
      I4 => \FSM_onehot_state_reg[4]\(0),
      O => D(0)
    );
\FSM_onehot_state[2]_i_1__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAAA8AAA"
    )
        port map (
      I0 => \FSM_onehot_state_reg[4]\(1),
      I1 => \^q\(4),
      I2 => \^q\(3),
      I3 => \^q\(1),
      I4 => \^q\(2),
      I5 => \^q\(0),
      O => D(1)
    );
\FSM_onehot_state[4]_i_3__4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__4_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(1),
      O => D(2)
    );
\FSM_onehot_state[4]_i_4__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001000"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(2),
      I2 => \^q\(1),
      I3 => \^q\(3),
      I4 => \^q\(4),
      O => \FSM_onehot_state[4]_i_4__4_n_0\
    );
\count1_carry__0_i_1__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00FF699600FF"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count1_carry__1\,
      I2 => \^count_reg_reg[1]_1\,
      I3 => \count1_carry__1_0\,
      I4 => \^count_reg_reg[1]_2\,
      I5 => \count1_carry__1_1\,
      O => \count_reg_reg[3]_1\(3)
    );
\count1_carry__0_i_2__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00FF699600FF"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count1_carry__1\,
      I2 => \^count_reg_reg[1]_1\,
      I3 => \count1_carry__1_0\,
      I4 => \^count_reg_reg[1]_2\,
      I5 => \count1_carry__1_1\,
      O => \count_reg_reg[3]_1\(2)
    );
\count1_carry__0_i_3__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00FF699600FF"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count1_carry__1\,
      I2 => \^count_reg_reg[1]_1\,
      I3 => \count1_carry__1_0\,
      I4 => \^count_reg_reg[1]_2\,
      I5 => \count1_carry__1_1\,
      O => \count_reg_reg[3]_1\(1)
    );
\count1_carry__0_i_4__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00FF699600FF"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count1_carry__1\,
      I2 => \^count_reg_reg[1]_1\,
      I3 => \count1_carry__1_0\,
      I4 => \^count_reg_reg[1]_2\,
      I5 => \count1_carry__1_1\,
      O => \count_reg_reg[3]_1\(0)
    );
\count1_carry__1_i_1__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00FF009600FF"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count1_carry__1\,
      I2 => \^count_reg_reg[1]_1\,
      I3 => \count1_carry__1_0\,
      I4 => \^count_reg_reg[1]_2\,
      I5 => \count1_carry__1_1\,
      O => S(2)
    );
\count1_carry__1_i_2__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00FF699600FF"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count1_carry__1\,
      I2 => \^count_reg_reg[1]_1\,
      I3 => \count1_carry__1_0\,
      I4 => \^count_reg_reg[1]_2\,
      I5 => \count1_carry__1_1\,
      O => S(1)
    );
\count1_carry__1_i_3__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00FF699600FF"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count1_carry__1\,
      I2 => \^count_reg_reg[1]_1\,
      I3 => \count1_carry__1_0\,
      I4 => \^count_reg_reg[1]_2\,
      I5 => \count1_carry__1_1\,
      O => S(0)
    );
\count1_carry_i_11__4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(0),
      I1 => \count1_carry_i_4__4_0\,
      O => \count_reg_reg[0]_0\
    );
\count1_carry_i_13__6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(1),
      I1 => \count1_carry_i_4__4\,
      O => \count_reg_reg[1]_0\
    );
\count1_carry_i_1__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00FF699600FF"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count1_carry__1\,
      I2 => \^count_reg_reg[1]_1\,
      I3 => \count1_carry__1_0\,
      I4 => \^count_reg_reg[1]_2\,
      I5 => \count1_carry__1_1\,
      O => \count_reg_reg[3]_0\(2)
    );
\count1_carry_i_2__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00FF699600FF"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count1_carry__1\,
      I2 => \^count_reg_reg[1]_1\,
      I3 => \count1_carry__1_0\,
      I4 => \^count_reg_reg[1]_2\,
      I5 => \count1_carry__1_1\,
      O => \count_reg_reg[3]_0\(1)
    );
\count1_carry_i_3__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0069006900000096"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count1_carry__1\,
      I2 => \^count_reg_reg[1]_1\,
      I3 => \count1_carry__1_0\,
      I4 => \^count_reg_reg[1]_2\,
      I5 => \count1_carry__1_1\,
      O => \count_reg_reg[3]_0\(0)
    );
\count1_carry_i_6__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFE8E800"
    )
        port map (
      I0 => \^q\(1),
      I1 => \count1_carry_i_4__4\,
      I2 => \count1_carry_i_9__2\,
      I3 => \^q\(2),
      I4 => \count1_carry_i_9__2_0\,
      O => \^count_reg_reg[1]_1\
    );
\count1_carry_i_8__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000066006600000"
    )
        port map (
      I0 => \^q\(1),
      I1 => \count1_carry_i_4__4\,
      I2 => \^q\(0),
      I3 => \count1_carry_i_4__4_0\,
      I4 => \^q\(2),
      I5 => \count1_carry_i_9__2_0\,
      O => \^count_reg_reg[1]_2\
    );
\count_reg[0]_i_1__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000FFBF"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(0)
    );
\count_reg[1]_i_1__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0FF0B0"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(1)
    );
\count_reg[2]_i_1__4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(1),
      I2 => \^q\(0),
      O => count_next(2)
    );
\count_reg[3]_i_1__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3CCCCC8C"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(3)
    );
\count_reg[4]_i_1__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(1),
      I2 => \^q\(0),
      I3 => \^q\(2),
      I4 => \^q\(3),
      O => count_next(4)
    );
\count_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(0),
      Q => \^q\(0)
    );
\count_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(1),
      Q => \^q\(1)
    );
\count_reg_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(2),
      Q => \^q\(2)
    );
\count_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(3),
      Q => \^q\(3)
    );
\count_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(4),
      Q => \^q\(4)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_top_nqueens_0_0_up_counter_5 is
  port (
    \count_reg_reg[1]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \count_reg_reg[0]_0\ : out STD_LOGIC;
    \count_reg_reg[3]_0\ : out STD_LOGIC;
    S : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count_reg_reg[2]_0\ : out STD_LOGIC;
    \j_reg[2]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \j_reg[2]_0\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count_reg_reg[2]_1\ : out STD_LOGIC;
    \count_reg_reg[0]_1\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count1_carry_i_4__5\ : in STD_LOGIC;
    \count1_carry_i_4__5_0\ : in STD_LOGIC;
    \count_reg[0]\ : in STD_LOGIC;
    \count1_carry__1\ : in STD_LOGIC;
    \count1_carry__1_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \count1_carry__1_1\ : in STD_LOGIC;
    done_aux_reg : in STD_LOGIC;
    done_aux_reg_0 : in STD_LOGIC;
    done_aux_reg_1 : in STD_LOGIC;
    \FSM_onehot_state_reg[4]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    valid : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    \count_reg_reg[0]_2\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_top_nqueens_0_0_up_counter_5 : entity is "up_counter";
end design_1_top_nqueens_0_0_up_counter_5;

architecture STRUCTURE of design_1_top_nqueens_0_0_up_counter_5 is
  signal \FSM_onehot_state[4]_i_4__5_n_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal count_next : STD_LOGIC_VECTOR ( 4 downto 1 );
  signal \count_reg[0]_i_1__5_n_0\ : STD_LOGIC;
  signal \^count_reg_reg[0]_0\ : STD_LOGIC;
  signal \^count_reg_reg[1]_0\ : STD_LOGIC;
  signal \^count_reg_reg[2]_0\ : STD_LOGIC;
  signal \^count_reg_reg[3]_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_onehot_state[4]_i_4__5\ : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of \count1_carry_i_8__6\ : label is "soft_lutpair24";
  attribute SOFT_HLUTNM of \count1_carry_i_9__5\ : label is "soft_lutpair24";
  attribute SOFT_HLUTNM of \count_reg[0]_i_1__5\ : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of \count_reg[1]_i_1__5\ : label is "soft_lutpair22";
  attribute SOFT_HLUTNM of \count_reg[2]_i_1__5\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \count_reg[3]_i_1__5\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \count_reg[4]_i_1__5\ : label is "soft_lutpair22";
begin
  Q(4 downto 0) <= \^q\(4 downto 0);
  \count_reg_reg[0]_0\ <= \^count_reg_reg[0]_0\;
  \count_reg_reg[1]_0\ <= \^count_reg_reg[1]_0\;
  \count_reg_reg[2]_0\ <= \^count_reg_reg[2]_0\;
  \count_reg_reg[3]_0\ <= \^count_reg_reg[3]_0\;
\FSM_onehot_state[1]_i_1__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF44F4"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__5_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(2),
      I3 => valid,
      I4 => \FSM_onehot_state_reg[4]\(0),
      O => D(0)
    );
\FSM_onehot_state[2]_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAAA8AAA"
    )
        port map (
      I0 => \FSM_onehot_state_reg[4]\(1),
      I1 => \^q\(4),
      I2 => \^q\(3),
      I3 => \^q\(1),
      I4 => \^q\(2),
      I5 => \^q\(0),
      O => D(1)
    );
\FSM_onehot_state[4]_i_3__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__5_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(1),
      O => D(2)
    );
\FSM_onehot_state[4]_i_4__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001000"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(2),
      I2 => \^q\(1),
      I3 => \^q\(3),
      I4 => \^q\(4),
      O => \FSM_onehot_state[4]_i_4__5_n_0\
    );
\count1_carry__0_i_1__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F96"
    )
        port map (
      I0 => \^count_reg_reg[3]_0\,
      I1 => \count1_carry__1\,
      I2 => \count1_carry__1_0\(1),
      I3 => \^count_reg_reg[2]_0\,
      I4 => \count1_carry__1_1\,
      O => \j_reg[2]\(3)
    );
\count1_carry__0_i_2__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F96"
    )
        port map (
      I0 => \^count_reg_reg[3]_0\,
      I1 => \count1_carry__1\,
      I2 => \count1_carry__1_0\(1),
      I3 => \^count_reg_reg[2]_0\,
      I4 => \count1_carry__1_1\,
      O => \j_reg[2]\(2)
    );
\count1_carry__0_i_3__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F96"
    )
        port map (
      I0 => \^count_reg_reg[3]_0\,
      I1 => \count1_carry__1\,
      I2 => \count1_carry__1_0\(1),
      I3 => \^count_reg_reg[2]_0\,
      I4 => \count1_carry__1_1\,
      O => \j_reg[2]\(1)
    );
\count1_carry__0_i_4__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F96"
    )
        port map (
      I0 => \^count_reg_reg[3]_0\,
      I1 => \count1_carry__1\,
      I2 => \count1_carry__1_0\(1),
      I3 => \^count_reg_reg[2]_0\,
      I4 => \count1_carry__1_1\,
      O => \j_reg[2]\(0)
    );
\count1_carry__1_i_1__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F06"
    )
        port map (
      I0 => \^count_reg_reg[3]_0\,
      I1 => \count1_carry__1\,
      I2 => \count1_carry__1_0\(1),
      I3 => \^count_reg_reg[2]_0\,
      I4 => \count1_carry__1_1\,
      O => S(2)
    );
\count1_carry__1_i_2__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F96"
    )
        port map (
      I0 => \^count_reg_reg[3]_0\,
      I1 => \count1_carry__1\,
      I2 => \count1_carry__1_0\(1),
      I3 => \^count_reg_reg[2]_0\,
      I4 => \count1_carry__1_1\,
      O => S(1)
    );
\count1_carry__1_i_3__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F96"
    )
        port map (
      I0 => \^count_reg_reg[3]_0\,
      I1 => \count1_carry__1\,
      I2 => \count1_carry__1_0\(1),
      I3 => \^count_reg_reg[2]_0\,
      I4 => \count1_carry__1_1\,
      O => S(0)
    );
\count1_carry_i_10__7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(1),
      I1 => \count1_carry_i_4__5\,
      O => \^count_reg_reg[1]_0\
    );
\count1_carry_i_1__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F96"
    )
        port map (
      I0 => \^count_reg_reg[3]_0\,
      I1 => \count1_carry__1\,
      I2 => \count1_carry__1_0\(1),
      I3 => \^count_reg_reg[2]_0\,
      I4 => \count1_carry__1_1\,
      O => \j_reg[2]_0\(2)
    );
\count1_carry_i_2__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0F0F96"
    )
        port map (
      I0 => \^count_reg_reg[3]_0\,
      I1 => \count1_carry__1\,
      I2 => \count1_carry__1_0\(1),
      I3 => \^count_reg_reg[2]_0\,
      I4 => \count1_carry__1_1\,
      O => \j_reg[2]_0\(1)
    );
\count1_carry_i_3__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00009960"
    )
        port map (
      I0 => \^count_reg_reg[3]_0\,
      I1 => \count1_carry__1\,
      I2 => \^count_reg_reg[2]_0\,
      I3 => \count1_carry__1_1\,
      I4 => \count1_carry__1_0\(1),
      O => \j_reg[2]_0\(0)
    );
\count1_carry_i_8__6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(0),
      I1 => \count1_carry_i_4__5_0\,
      O => \^count_reg_reg[0]_0\
    );
\count1_carry_i_9__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D2"
    )
        port map (
      I0 => \count1_carry_i_4__5_0\,
      I1 => \^q\(0),
      I2 => \count1_carry__1_0\(0),
      O => \count_reg_reg[0]_1\
    );
\count[4]_i_4__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F77F7FF7"
    )
        port map (
      I0 => \^count_reg_reg[0]_0\,
      I1 => \^count_reg_reg[1]_0\,
      I2 => done_aux_reg,
      I3 => \^q\(2),
      I4 => done_aux_reg_0,
      O => \^count_reg_reg[2]_0\
    );
\count[4]_i_6__5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(3),
      I1 => \count_reg[0]\,
      O => \^count_reg_reg[3]_0\
    );
\count_reg[0]_i_1__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000FFBF"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => \count_reg[0]_i_1__5_n_0\
    );
\count_reg[1]_i_1__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0FF0B0"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(1)
    );
\count_reg[2]_i_1__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(1),
      I2 => \^q\(0),
      O => count_next(2)
    );
\count_reg[3]_i_1__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3CCCCC8C"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(3)
    );
\count_reg[4]_i_1__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(0),
      I4 => \^q\(2),
      O => count_next(4)
    );
\count_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_2\(0),
      D => \count_reg[0]_i_1__5_n_0\,
      Q => \^q\(0)
    );
\count_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_2\(0),
      D => count_next(1),
      Q => \^q\(1)
    );
\count_reg_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_2\(0),
      D => count_next(2),
      Q => \^q\(2)
    );
\count_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_2\(0),
      D => count_next(3),
      Q => \^q\(3)
    );
\count_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_2\(0),
      D => count_next(4),
      Q => \^q\(4)
    );
\done_aux_i_2__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0008080008000008"
    )
        port map (
      I0 => \^count_reg_reg[0]_0\,
      I1 => \^count_reg_reg[1]_0\,
      I2 => done_aux_reg_1,
      I3 => done_aux_reg_0,
      I4 => \^q\(2),
      I5 => done_aux_reg,
      O => \count_reg_reg[2]_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_top_nqueens_0_0_up_counter_6 is
  port (
    \count_reg_reg[0]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \count_reg_reg[2]_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count1_carry_i_5__5\ : in STD_LOGIC;
    \count[4]_i_3__2\ : in STD_LOGIC;
    \FSM_onehot_state_reg[4]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    valid : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    \count_reg_reg[0]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_top_nqueens_0_0_up_counter_6 : entity is "up_counter";
end design_1_top_nqueens_0_0_up_counter_6;

architecture STRUCTURE of design_1_top_nqueens_0_0_up_counter_6 is
  signal \FSM_onehot_state[4]_i_4__6_n_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal count_next : STD_LOGIC_VECTOR ( 4 downto 1 );
  signal \count_reg[0]_i_1__6_n_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_onehot_state[4]_i_4__6\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \count_reg[0]_i_1__6\ : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of \count_reg[1]_i_1__6\ : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of \count_reg[2]_i_1__6\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \count_reg[3]_i_1__6\ : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of \count_reg[4]_i_1__6\ : label is "soft_lutpair11";
begin
  Q(4 downto 0) <= \^q\(4 downto 0);
\FSM_onehot_state[1]_i_1__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF44F4"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__6_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(2),
      I3 => valid,
      I4 => \FSM_onehot_state_reg[4]\(0),
      O => D(0)
    );
\FSM_onehot_state[2]_i_1__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAAA8AAA"
    )
        port map (
      I0 => \FSM_onehot_state_reg[4]\(1),
      I1 => \^q\(4),
      I2 => \^q\(3),
      I3 => \^q\(1),
      I4 => \^q\(2),
      I5 => \^q\(0),
      O => D(1)
    );
\FSM_onehot_state[4]_i_3__6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__6_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(1),
      O => D(2)
    );
\FSM_onehot_state[4]_i_4__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001000"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(2),
      I2 => \^q\(1),
      I3 => \^q\(3),
      I4 => \^q\(4),
      O => \FSM_onehot_state[4]_i_4__6_n_0\
    );
\count1_carry_i_11__6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(0),
      I1 => \count1_carry_i_5__5\,
      O => \count_reg_reg[0]_0\
    );
\count[4]_i_4__3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(2),
      I1 => \count[4]_i_3__2\,
      O => \count_reg_reg[2]_0\
    );
\count_reg[0]_i_1__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000FFBF"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => \count_reg[0]_i_1__6_n_0\
    );
\count_reg[1]_i_1__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0FF0B0"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(1)
    );
\count_reg[2]_i_1__6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(1),
      I2 => \^q\(0),
      O => count_next(2)
    );
\count_reg[3]_i_1__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3CCCCC8C"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(3)
    );
\count_reg[4]_i_1__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(0),
      I4 => \^q\(2),
      O => count_next(4)
    );
\count_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => \count_reg[0]_i_1__6_n_0\,
      Q => \^q\(0)
    );
\count_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(1),
      Q => \^q\(1)
    );
\count_reg_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(2),
      Q => \^q\(2)
    );
\count_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(3),
      Q => \^q\(3)
    );
\count_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => \count_reg_reg[0]_1\(0),
      D => count_next(4),
      Q => \^q\(4)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_top_nqueens_0_0_up_counter_7 is
  port (
    Q : out STD_LOGIC_VECTOR ( 4 downto 0 );
    S : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count_reg_reg[4]_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \count_reg_reg[4]_1\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \count_reg_reg[3]_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    done_aux_reg : in STD_LOGIC_VECTOR ( 4 downto 0 );
    CO : in STD_LOGIC_VECTOR ( 0 to 0 );
    j_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    \FSM_onehot_state_reg[4]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    valid : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    ack_in_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_top_nqueens_0_0_up_counter_7 : entity is "up_counter";
end design_1_top_nqueens_0_0_up_counter_7;

architecture STRUCTURE of design_1_top_nqueens_0_0_up_counter_7 is
  signal \FSM_onehot_state[4]_i_4__7_n_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \count1_carry_i_10__5_n_0\ : STD_LOGIC;
  signal \count1_carry_i_11__7_n_0\ : STD_LOGIC;
  signal \count1_carry_i_5__4_n_0\ : STD_LOGIC;
  signal \count1_carry_i_6__5_n_0\ : STD_LOGIC;
  signal \count1_carry_i_7__4_n_0\ : STD_LOGIC;
  signal \count1_carry_i_8__5_n_0\ : STD_LOGIC;
  signal \count1_carry_i_9__7_n_0\ : STD_LOGIC;
  signal count_next : STD_LOGIC_VECTOR ( 4 downto 1 );
  signal \count_reg[0]_i_1__7_n_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_onehot_state[4]_i_4__7\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \count1_carry_i_10__5\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \count1_carry_i_8__5\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \count_reg[0]_i_1__7\ : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \count_reg[1]_i_1__7\ : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \count_reg[2]_i_1__7\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \count_reg[3]_i_1__7\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of \count_reg[4]_i_1__7\ : label is "soft_lutpair1";
begin
  Q(4 downto 0) <= \^q\(4 downto 0);
\FSM_onehot_state[1]_i_1__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF44F4"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__7_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(2),
      I3 => valid,
      I4 => \FSM_onehot_state_reg[4]\(0),
      O => D(0)
    );
\FSM_onehot_state[2]_i_1__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAAA8AAA"
    )
        port map (
      I0 => \FSM_onehot_state_reg[4]\(1),
      I1 => \^q\(4),
      I2 => \^q\(3),
      I3 => \^q\(1),
      I4 => \^q\(2),
      I5 => \^q\(0),
      O => D(1)
    );
\FSM_onehot_state[4]_i_3__7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \FSM_onehot_state[4]_i_4__7_n_0\,
      I1 => \FSM_onehot_state_reg[4]\(3),
      I2 => \FSM_onehot_state_reg[4]\(1),
      O => D(2)
    );
\FSM_onehot_state[4]_i_4__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001000"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(2),
      I2 => \^q\(1),
      I3 => \^q\(3),
      I4 => \^q\(4),
      O => \FSM_onehot_state[4]_i_4__7_n_0\
    );
\count1_carry__0_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF9F6FFF9FFFFF9F"
    )
        port map (
      I0 => \^q\(4),
      I1 => done_aux_reg(4),
      I2 => \count1_carry_i_5__4_n_0\,
      I3 => done_aux_reg(3),
      I4 => \^q\(3),
      I5 => \count1_carry_i_6__5_n_0\,
      O => \count_reg_reg[4]_0\(3)
    );
\count1_carry__0_i_2__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF9F6FFF9FFFFF9F"
    )
        port map (
      I0 => \^q\(4),
      I1 => done_aux_reg(4),
      I2 => \count1_carry_i_5__4_n_0\,
      I3 => done_aux_reg(3),
      I4 => \^q\(3),
      I5 => \count1_carry_i_6__5_n_0\,
      O => \count_reg_reg[4]_0\(2)
    );
\count1_carry__0_i_3__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF9F6FFF9FFFFF9F"
    )
        port map (
      I0 => \^q\(4),
      I1 => done_aux_reg(4),
      I2 => \count1_carry_i_5__4_n_0\,
      I3 => done_aux_reg(3),
      I4 => \^q\(3),
      I5 => \count1_carry_i_6__5_n_0\,
      O => \count_reg_reg[4]_0\(1)
    );
\count1_carry__0_i_4__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF9F6FFF9FFFFF9F"
    )
        port map (
      I0 => \^q\(4),
      I1 => done_aux_reg(4),
      I2 => \count1_carry_i_5__4_n_0\,
      I3 => done_aux_reg(3),
      I4 => \^q\(3),
      I5 => \count1_carry_i_6__5_n_0\,
      O => \count_reg_reg[4]_0\(0)
    );
\count1_carry__1_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF9F6FFF9FFFFF9F"
    )
        port map (
      I0 => \^q\(4),
      I1 => done_aux_reg(4),
      I2 => \count1_carry_i_5__4_n_0\,
      I3 => done_aux_reg(3),
      I4 => \^q\(3),
      I5 => \count1_carry_i_6__5_n_0\,
      O => S(2)
    );
\count1_carry__1_i_2__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF9F6FFF9FFFFF9F"
    )
        port map (
      I0 => \^q\(4),
      I1 => done_aux_reg(4),
      I2 => \count1_carry_i_5__4_n_0\,
      I3 => done_aux_reg(3),
      I4 => \^q\(3),
      I5 => \count1_carry_i_6__5_n_0\,
      O => S(1)
    );
\count1_carry__1_i_3__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF9F6FFF9FFFFF9F"
    )
        port map (
      I0 => \^q\(4),
      I1 => done_aux_reg(4),
      I2 => \count1_carry_i_5__4_n_0\,
      I3 => done_aux_reg(3),
      I4 => \^q\(3),
      I5 => \count1_carry_i_6__5_n_0\,
      O => S(0)
    );
\count1_carry_i_10__5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4BB4"
    )
        port map (
      I0 => \^q\(0),
      I1 => done_aux_reg(0),
      I2 => \^q\(1),
      I3 => done_aux_reg(1),
      O => \count1_carry_i_10__5_n_0\
    );
\count1_carry_i_11__7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(0),
      I1 => done_aux_reg(0),
      O => \count1_carry_i_11__7_n_0\
    );
\count1_carry_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF9F6FFF9FFFFF9F"
    )
        port map (
      I0 => \^q\(4),
      I1 => done_aux_reg(4),
      I2 => \count1_carry_i_5__4_n_0\,
      I3 => done_aux_reg(3),
      I4 => \^q\(3),
      I5 => \count1_carry_i_6__5_n_0\,
      O => \count_reg_reg[4]_1\(3)
    );
\count1_carry_i_2__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF9F6FFF9FFFFF9F"
    )
        port map (
      I0 => \^q\(4),
      I1 => done_aux_reg(4),
      I2 => \count1_carry_i_5__4_n_0\,
      I3 => done_aux_reg(3),
      I4 => \^q\(3),
      I5 => \count1_carry_i_6__5_n_0\,
      O => \count_reg_reg[4]_1\(2)
    );
\count1_carry_i_3__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00966969"
    )
        port map (
      I0 => done_aux_reg(3),
      I1 => \^q\(3),
      I2 => \count1_carry_i_6__5_n_0\,
      I3 => \count1_carry_i_5__4_n_0\,
      I4 => \count1_carry_i_7__4_n_0\,
      O => \count_reg_reg[4]_1\(1)
    );
\count1_carry_i_4__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0028000A14000005"
    )
        port map (
      I0 => j_reg(0),
      I1 => \count1_carry_i_8__5_n_0\,
      I2 => \count1_carry_i_9__7_n_0\,
      I3 => \count1_carry_i_10__5_n_0\,
      I4 => \count1_carry_i_7__4_n_0\,
      I5 => \count1_carry_i_11__7_n_0\,
      O => \count_reg_reg[4]_1\(0)
    );
\count1_carry_i_5__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => done_aux_reg(0),
      I1 => \^q\(0),
      I2 => \^q\(1),
      I3 => done_aux_reg(1),
      I4 => \^q\(2),
      I5 => done_aux_reg(2),
      O => \count1_carry_i_5__4_n_0\
    );
\count1_carry_i_6__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2F02FFFF00002F02"
    )
        port map (
      I0 => done_aux_reg(0),
      I1 => \^q\(0),
      I2 => \^q\(1),
      I3 => done_aux_reg(1),
      I4 => \^q\(2),
      I5 => done_aux_reg(2),
      O => \count1_carry_i_6__5_n_0\
    );
\count1_carry_i_7__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"96996696"
    )
        port map (
      I0 => done_aux_reg(4),
      I1 => \^q\(4),
      I2 => done_aux_reg(3),
      I3 => \^q\(3),
      I4 => \count1_carry_i_6__5_n_0\,
      O => \count1_carry_i_7__4_n_0\
    );
\count1_carry_i_8__5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => done_aux_reg(0),
      I1 => \^q\(0),
      I2 => done_aux_reg(1),
      I3 => \^q\(1),
      O => \count1_carry_i_8__5_n_0\
    );
\count1_carry_i_9__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6696969966966696"
    )
        port map (
      I0 => done_aux_reg(2),
      I1 => \^q\(2),
      I2 => done_aux_reg(1),
      I3 => \^q\(1),
      I4 => \^q\(0),
      I5 => done_aux_reg(0),
      O => \count1_carry_i_9__7_n_0\
    );
\count[4]_i_3__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"28AAAAAAAAAA28AA"
    )
        port map (
      I0 => CO(0),
      I1 => \^q\(3),
      I2 => done_aux_reg(3),
      I3 => \count1_carry_i_5__4_n_0\,
      I4 => done_aux_reg(4),
      I5 => \^q\(4),
      O => \count_reg_reg[3]_0\
    );
\count_reg[0]_i_1__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000FFBF"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => \count_reg[0]_i_1__7_n_0\
    );
\count_reg[1]_i_1__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F0FF0B0"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(1)
    );
\count_reg[2]_i_1__7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(1),
      I2 => \^q\(0),
      O => count_next(2)
    );
\count_reg[3]_i_1__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3CCCCC8C"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(0),
      O => count_next(3)
    );
\count_reg[4]_i_1__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(2),
      I2 => \^q\(1),
      I3 => \^q\(0),
      I4 => \^q\(3),
      O => count_next(4)
    );
\count_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => ack_in_1,
      D => \count_reg[0]_i_1__7_n_0\,
      Q => \^q\(0)
    );
\count_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => ack_in_1,
      D => count_next(1),
      Q => \^q\(1)
    );
\count_reg_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => ack_in_1,
      D => count_next(2),
      Q => \^q\(2)
    );
\count_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => ack_in_1,
      D => count_next(3),
      Q => \^q\(3)
    );
\count_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      CLR => ack_in_1,
      D => count_next(4),
      Q => \^q\(4)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_exit_v1_0_9_exit is
  port (
    m_axi_awvalid : out STD_LOGIC;
    m_axi_arvalid : out STD_LOGIC;
    s_axi_awready : out STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    aclk : in STD_LOGIC;
    m_axi_rvalid : in STD_LOGIC;
    s_axi_rready : in STD_LOGIC;
    m_axi_bvalid : in STD_LOGIC;
    s_axi_bready : in STD_LOGIC;
    s_axi_awvalid : in STD_LOGIC;
    areset : in STD_LOGIC;
    m_axi_awready : in STD_LOGIC;
    s_axi_arvalid : in STD_LOGIC;
    m_axi_arready : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_exit_v1_0_9_exit : entity is "sc_exit_v1_0_9_exit";
end design_1_axi_smc_0_sc_exit_v1_0_9_exit;

architecture STRUCTURE of design_1_axi_smc_0_sc_exit_v1_0_9_exit is
  signal \gen_r_cmd_reg.aresetn_d[0]_i_1_n_0\ : STD_LOGIC;
  signal \gen_r_cmd_reg.aresetn_d_reg_n_0_[0]\ : STD_LOGIC;
  signal \gen_r_cmd_reg.s_read_cmd_vacancy_i_i_1_n_0\ : STD_LOGIC;
  signal \gen_r_cmd_reg.s_read_cmd_vacancy_i_i_2_n_0\ : STD_LOGIC;
  signal \gen_r_cmd_reg.s_read_cmd_vacancy_i_reg_n_0\ : STD_LOGIC;
  signal \gen_w_cmd_reg.aresetn_d\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \gen_w_cmd_reg.aresetn_d[1]_i_1_n_0\ : STD_LOGIC;
  signal \gen_w_cmd_reg.s_write_cmd_vacancy_i_i_1_n_0\ : STD_LOGIC;
  signal \gen_w_cmd_reg.s_write_cmd_vacancy_i_i_2_n_0\ : STD_LOGIC;
  signal \gen_w_cmd_reg.s_write_cmd_vacancy_i_reg_n_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gen_r_cmd_reg.aresetn_d[0]_i_1\ : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of \gen_w_cmd_reg.aresetn_d[1]_i_1\ : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of m_axi_arvalid_INST_0 : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of m_axi_awvalid_INST_0 : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of s_axi_arready_INST_0 : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of s_axi_awready_INST_0 : label is "soft_lutpair7";
begin
\gen_r_cmd_reg.aresetn_d[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => areset,
      O => \gen_r_cmd_reg.aresetn_d[0]_i_1_n_0\
    );
\gen_r_cmd_reg.aresetn_d_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_r_cmd_reg.aresetn_d[0]_i_1_n_0\,
      Q => \gen_r_cmd_reg.aresetn_d_reg_n_0_[0]\,
      R => '0'
    );
\gen_r_cmd_reg.s_read_cmd_vacancy_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EE2E2E2E00000000"
    )
        port map (
      I0 => \gen_r_cmd_reg.s_read_cmd_vacancy_i_reg_n_0\,
      I1 => \gen_r_cmd_reg.s_read_cmd_vacancy_i_i_2_n_0\,
      I2 => \gen_w_cmd_reg.aresetn_d\(1),
      I3 => m_axi_rvalid,
      I4 => s_axi_rready,
      I5 => \gen_r_cmd_reg.aresetn_d_reg_n_0_[0]\,
      O => \gen_r_cmd_reg.s_read_cmd_vacancy_i_i_1_n_0\
    );
\gen_r_cmd_reg.s_read_cmd_vacancy_i_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF202020FFFFFFFF"
    )
        port map (
      I0 => s_axi_arvalid,
      I1 => areset,
      I2 => m_axi_arready,
      I3 => m_axi_rvalid,
      I4 => s_axi_rready,
      I5 => \gen_w_cmd_reg.aresetn_d\(1),
      O => \gen_r_cmd_reg.s_read_cmd_vacancy_i_i_2_n_0\
    );
\gen_r_cmd_reg.s_read_cmd_vacancy_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_r_cmd_reg.s_read_cmd_vacancy_i_i_1_n_0\,
      Q => \gen_r_cmd_reg.s_read_cmd_vacancy_i_reg_n_0\,
      R => '0'
    );
\gen_w_cmd_reg.aresetn_d[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \gen_r_cmd_reg.aresetn_d_reg_n_0_[0]\,
      I1 => areset,
      O => \gen_w_cmd_reg.aresetn_d[1]_i_1_n_0\
    );
\gen_w_cmd_reg.aresetn_d_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_w_cmd_reg.aresetn_d[1]_i_1_n_0\,
      Q => \gen_w_cmd_reg.aresetn_d\(1),
      R => '0'
    );
\gen_w_cmd_reg.s_write_cmd_vacancy_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EE2E2E2E00000000"
    )
        port map (
      I0 => \gen_w_cmd_reg.s_write_cmd_vacancy_i_reg_n_0\,
      I1 => \gen_w_cmd_reg.s_write_cmd_vacancy_i_i_2_n_0\,
      I2 => \gen_w_cmd_reg.aresetn_d\(1),
      I3 => m_axi_bvalid,
      I4 => s_axi_bready,
      I5 => \gen_r_cmd_reg.aresetn_d_reg_n_0_[0]\,
      O => \gen_w_cmd_reg.s_write_cmd_vacancy_i_i_1_n_0\
    );
\gen_w_cmd_reg.s_write_cmd_vacancy_i_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF202020FFFFFFFF"
    )
        port map (
      I0 => s_axi_awvalid,
      I1 => areset,
      I2 => m_axi_awready,
      I3 => m_axi_bvalid,
      I4 => s_axi_bready,
      I5 => \gen_w_cmd_reg.aresetn_d\(1),
      O => \gen_w_cmd_reg.s_write_cmd_vacancy_i_i_2_n_0\
    );
\gen_w_cmd_reg.s_write_cmd_vacancy_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_w_cmd_reg.s_write_cmd_vacancy_i_i_1_n_0\,
      Q => \gen_w_cmd_reg.s_write_cmd_vacancy_i_reg_n_0\,
      R => '0'
    );
m_axi_arvalid_INST_0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \gen_r_cmd_reg.s_read_cmd_vacancy_i_reg_n_0\,
      I1 => s_axi_arvalid,
      I2 => areset,
      O => m_axi_arvalid
    );
m_axi_awvalid_INST_0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \gen_w_cmd_reg.s_write_cmd_vacancy_i_reg_n_0\,
      I1 => s_axi_awvalid,
      I2 => areset,
      O => m_axi_awvalid
    );
s_axi_arready_INST_0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => areset,
      I1 => m_axi_arready,
      I2 => \gen_r_cmd_reg.s_read_cmd_vacancy_i_reg_n_0\,
      O => s_axi_arready
    );
s_axi_awready_INST_0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => areset,
      I1 => m_axi_awready,
      I2 => \gen_w_cmd_reg.s_write_cmd_vacancy_i_reg_n_0\,
      O => s_axi_awready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_mmu_v1_0_8_decerr_slave is
  port (
    \gen_endpoint.err_awready\ : out STD_LOGIC;
    \gen_endpoint.err_arready\ : out STD_LOGIC;
    \gen_endpoint.w_state_reg[1]\ : out STD_LOGIC;
    \gen_endpoint.w_state_reg[0]\ : out STD_LOGIC;
    \gen_endpoint.r_state_reg[1]\ : out STD_LOGIC;
    sr_axi_arvalid : out STD_LOGIC;
    s_axi_wready_i_reg : out STD_LOGIC;
    \gen_endpoint.w_state_reg[1]_0\ : out STD_LOGIC;
    s_axi_bid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    mr_axi_awready : out STD_LOGIC;
    s_axi_bvalid : out STD_LOGIC;
    s_axi_wready : out STD_LOGIC;
    mr_axi_arready : out STD_LOGIC;
    s_axi_rid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    s_axi_rvalid : out STD_LOGIC;
    \gen_axi.gen_read.read_cs_reg[0]_0\ : out STD_LOGIC;
    s_axi_rlast : out STD_LOGIC;
    areset : in STD_LOGIC;
    aclk : in STD_LOGIC;
    \gen_endpoint.w_state_reg[0]_0\ : in STD_LOGIC;
    \gen_endpoint.w_state\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    mr_axi_awvalid : in STD_LOGIC;
    \gen_endpoint.w_state_reg[0]_1\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_arlen : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_vector1 : in STD_LOGIC;
    m_axi_arlen : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_rready : in STD_LOGIC;
    mr_axi_arvalid : in STD_LOGIC;
    \gen_endpoint.r_trigger_decerr\ : in STD_LOGIC;
    m_valid1 : in STD_LOGIC;
    m_vector2 : in STD_LOGIC;
    \gen_axi.gen_write.s_axi_bid_i_reg[0]_0\ : in STD_LOGIC;
    \gen_endpoint.w_trigger_decerr\ : in STD_LOGIC;
    m_valid1_0 : in STD_LOGIC;
    m_vector2_1 : in STD_LOGIC;
    s_axi_wlast : in STD_LOGIC;
    s_axi_wvalid : in STD_LOGIC;
    m_axi_wready : in STD_LOGIC;
    S00_AXI_wready : in STD_LOGIC;
    m_axi_bid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    m_axi_awready : in STD_LOGIC;
    m_axi_bvalid : in STD_LOGIC;
    s_axi_bready : in STD_LOGIC;
    \gen_endpoint.r_state\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_arready : in STD_LOGIC;
    m_axi_rid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    m_axi_rvalid : in STD_LOGIC;
    m_axi_rlast : in STD_LOGIC;
    \gen_axi.gen_read.s_axi_rid_i_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_arvalid : in STD_LOGIC;
    \gen_axi.gen_read.s_axi_rlast_i_reg_0\ : in STD_LOGIC;
    m_axi_awid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    m_axi_arid : in STD_LOGIC_VECTOR ( 11 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_mmu_v1_0_8_decerr_slave : entity is "sc_mmu_v1_0_8_decerr_slave";
end design_1_axi_smc_0_sc_mmu_v1_0_8_decerr_slave;

architecture STRUCTURE of design_1_axi_smc_0_sc_mmu_v1_0_8_decerr_slave is
  signal \FSM_onehot_gen_axi.gen_write.write_cs[0]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_onehot_gen_axi.gen_write.write_cs[1]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_onehot_gen_axi.gen_write.write_cs[2]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_onehot_gen_axi.gen_write.write_cs[2]_i_2_n_0\ : STD_LOGIC;
  signal \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[0]\ : STD_LOGIC;
  signal \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[1]\ : STD_LOGIC;
  signal \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[2]\ : STD_LOGIC;
  signal \gen_axi.gen_read.read_cnt[6]_i_2_n_0\ : STD_LOGIC;
  signal \gen_axi.gen_read.read_cnt[7]_i_1_n_0\ : STD_LOGIC;
  signal \gen_axi.gen_read.read_cnt[7]_i_3_n_0\ : STD_LOGIC;
  signal \gen_axi.gen_read.read_cnt[7]_i_5_n_0\ : STD_LOGIC;
  signal \gen_axi.gen_read.read_cnt_reg\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \gen_axi.gen_read.read_cnt_reg__0\ : STD_LOGIC_VECTOR ( 7 downto 1 );
  signal \gen_axi.gen_read.read_cs[0]_i_1_n_0\ : STD_LOGIC;
  signal \gen_axi.gen_read.s_axi_arready_i_i_1_n_0\ : STD_LOGIC;
  signal \gen_axi.gen_read.s_axi_rid_i\ : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\ : STD_LOGIC;
  signal \gen_axi.gen_read.s_axi_rid_i[11]_i_2_n_0\ : STD_LOGIC;
  signal \gen_axi.gen_read.s_axi_rlast_i_i_1_n_0\ : STD_LOGIC;
  signal \gen_axi.gen_read.s_axi_rlast_i_i_3_n_0\ : STD_LOGIC;
  signal \gen_axi.gen_write.s_axi_awready_i_i_1_n_0\ : STD_LOGIC;
  signal \gen_axi.gen_write.s_axi_awready_i_i_3_n_0\ : STD_LOGIC;
  signal \gen_axi.gen_write.s_axi_bid_i\ : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal \gen_axi.gen_write.s_axi_bid_i[11]_i_2_n_0\ : STD_LOGIC;
  signal \gen_axi.gen_write.s_axi_bid_i_0\ : STD_LOGIC;
  signal \gen_axi.gen_write.s_axi_bvalid_i_i_1_n_0\ : STD_LOGIC;
  signal \gen_axi.gen_write.s_axi_wready_i\ : STD_LOGIC;
  signal \gen_axi.gen_write.s_axi_wready_i_i_1_n_0\ : STD_LOGIC;
  signal \^gen_endpoint.err_arready\ : STD_LOGIC;
  signal \^gen_endpoint.err_awready\ : STD_LOGIC;
  signal \gen_endpoint.err_bvalid\ : STD_LOGIC;
  signal \gen_endpoint.err_rlast\ : STD_LOGIC;
  signal \gen_endpoint.err_rvalid\ : STD_LOGIC;
  signal \^gen_endpoint.r_state_reg[1]\ : STD_LOGIC;
  signal \^gen_endpoint.w_state_reg[0]\ : STD_LOGIC;
  signal \^gen_endpoint.w_state_reg[1]_0\ : STD_LOGIC;
  signal p_0_in : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \^sr_axi_arvalid\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_onehot_gen_axi.gen_write.write_cs[2]_i_1\ : label is "soft_lutpair24";
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_onehot_gen_axi.gen_write.write_cs_reg[0]\ : label is "P_WRITE_IDLE:001,P_WRITE_DATA:010,P_WRITE_RESP:100,";
  attribute FSM_ENCODED_STATES of \FSM_onehot_gen_axi.gen_write.write_cs_reg[1]\ : label is "P_WRITE_IDLE:001,P_WRITE_DATA:010,P_WRITE_RESP:100,";
  attribute FSM_ENCODED_STATES of \FSM_onehot_gen_axi.gen_write.write_cs_reg[2]\ : label is "P_WRITE_IDLE:001,P_WRITE_DATA:010,P_WRITE_RESP:100,";
  attribute SOFT_HLUTNM of \gen_axi.gen_read.read_cnt[2]_i_1\ : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of \gen_axi.gen_read.read_cnt[6]_i_2\ : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of \gen_axi.gen_read.read_cnt[7]_i_2\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \gen_axi.gen_read.read_cnt[7]_i_3\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \gen_axi.gen_read.read_cnt[7]_i_4\ : label is "soft_lutpair22";
  attribute SOFT_HLUTNM of \gen_axi.gen_read.s_axi_rid_i[11]_i_2\ : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of \gen_axi.gen_write.s_axi_awready_i_i_2\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \gen_axi.gen_write.s_axi_awready_i_i_3\ : label is "soft_lutpair24";
  attribute SOFT_HLUTNM of \gen_axi.gen_write.s_axi_bid_i[11]_i_2\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \gen_endpoint.r_state[1]_i_3\ : label is "soft_lutpair22";
  attribute SOFT_HLUTNM of \gen_endpoint.w_state[1]_i_3\ : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of s_axi_bvalid_INST_0 : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of s_axi_wready_INST_0 : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \state[s_stall_d]_i_3__0\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \state[s_stall_d]_i_4__0\ : label is "soft_lutpair28";
begin
  \gen_endpoint.err_arready\ <= \^gen_endpoint.err_arready\;
  \gen_endpoint.err_awready\ <= \^gen_endpoint.err_awready\;
  \gen_endpoint.r_state_reg[1]\ <= \^gen_endpoint.r_state_reg[1]\;
  \gen_endpoint.w_state_reg[0]\ <= \^gen_endpoint.w_state_reg[0]\;
  \gen_endpoint.w_state_reg[1]_0\ <= \^gen_endpoint.w_state_reg[1]_0\;
  sr_axi_arvalid <= \^sr_axi_arvalid\;
\FSM_onehot_gen_axi.gen_write.write_cs[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F5F0E0"
    )
        port map (
      I0 => \gen_axi.gen_write.s_axi_bid_i_0\,
      I1 => s_axi_bready,
      I2 => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[2]\,
      I3 => \FSM_onehot_gen_axi.gen_write.write_cs[2]_i_2_n_0\,
      I4 => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[0]\,
      O => \FSM_onehot_gen_axi.gen_write.write_cs[0]_i_1_n_0\
    );
\FSM_onehot_gen_axi.gen_write.write_cs[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAABBBAAAAA888"
    )
        port map (
      I0 => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[0]\,
      I1 => \gen_axi.gen_write.s_axi_bid_i_0\,
      I2 => s_axi_bready,
      I3 => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[2]\,
      I4 => \FSM_onehot_gen_axi.gen_write.write_cs[2]_i_2_n_0\,
      I5 => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[1]\,
      O => \FSM_onehot_gen_axi.gen_write.write_cs[1]_i_1_n_0\
    );
\FSM_onehot_gen_axi.gen_write.write_cs[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAAB88"
    )
        port map (
      I0 => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[1]\,
      I1 => \gen_axi.gen_write.s_axi_bid_i_0\,
      I2 => s_axi_bready,
      I3 => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[2]\,
      I4 => \FSM_onehot_gen_axi.gen_write.write_cs[2]_i_2_n_0\,
      O => \FSM_onehot_gen_axi.gen_write.write_cs[2]_i_1_n_0\
    );
\FSM_onehot_gen_axi.gen_write.write_cs[2]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80000000"
    )
        port map (
      I0 => \gen_endpoint.w_state\(0),
      I1 => \gen_endpoint.w_state\(1),
      I2 => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[1]\,
      I3 => s_axi_wlast,
      I4 => s_axi_wvalid,
      O => \FSM_onehot_gen_axi.gen_write.write_cs[2]_i_2_n_0\
    );
\FSM_onehot_gen_axi.gen_write.write_cs_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \FSM_onehot_gen_axi.gen_write.write_cs[0]_i_1_n_0\,
      Q => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[0]\,
      S => areset
    );
\FSM_onehot_gen_axi.gen_write.write_cs_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \FSM_onehot_gen_axi.gen_write.write_cs[1]_i_1_n_0\,
      Q => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[1]\,
      R => areset
    );
\FSM_onehot_gen_axi.gen_write.write_cs_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \FSM_onehot_gen_axi.gen_write.write_cs[2]_i_1_n_0\,
      Q => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[2]\,
      R => areset
    );
\gen_axi.gen_read.read_cnt[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"74747744"
    )
        port map (
      I0 => \gen_axi.gen_read.read_cnt_reg\(0),
      I1 => \gen_endpoint.err_rvalid\,
      I2 => Q(0),
      I3 => s_axi_arlen(0),
      I4 => m_vector1,
      O => p_0_in(0)
    );
\gen_axi.gen_read.read_cnt[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9F909F909F9F9090"
    )
        port map (
      I0 => \gen_axi.gen_read.read_cnt_reg\(0),
      I1 => \gen_axi.gen_read.read_cnt_reg__0\(1),
      I2 => \gen_endpoint.err_rvalid\,
      I3 => Q(1),
      I4 => s_axi_arlen(1),
      I5 => m_vector1,
      O => p_0_in(1)
    );
\gen_axi.gen_read.read_cnt[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A9FFA900"
    )
        port map (
      I0 => \gen_axi.gen_read.read_cnt_reg__0\(2),
      I1 => \gen_axi.gen_read.read_cnt_reg__0\(1),
      I2 => \gen_axi.gen_read.read_cnt_reg\(0),
      I3 => \gen_endpoint.err_rvalid\,
      I4 => m_axi_arlen(0),
      O => p_0_in(2)
    );
\gen_axi.gen_read.read_cnt[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAA9FFFFAAA90000"
    )
        port map (
      I0 => \gen_axi.gen_read.read_cnt_reg__0\(3),
      I1 => \gen_axi.gen_read.read_cnt_reg__0\(2),
      I2 => \gen_axi.gen_read.read_cnt_reg\(0),
      I3 => \gen_axi.gen_read.read_cnt_reg__0\(1),
      I4 => \gen_endpoint.err_rvalid\,
      I5 => m_axi_arlen(1),
      O => p_0_in(3)
    );
\gen_axi.gen_read.read_cnt[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAA800000002"
    )
        port map (
      I0 => \gen_endpoint.err_rvalid\,
      I1 => \gen_axi.gen_read.read_cnt_reg__0\(3),
      I2 => \gen_axi.gen_read.read_cnt_reg__0\(2),
      I3 => \gen_axi.gen_read.read_cnt_reg\(0),
      I4 => \gen_axi.gen_read.read_cnt_reg__0\(1),
      I5 => \gen_axi.gen_read.read_cnt_reg__0\(4),
      O => p_0_in(4)
    );
\gen_axi.gen_read.read_cnt[5]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A8AA0200"
    )
        port map (
      I0 => \gen_endpoint.err_rvalid\,
      I1 => \gen_axi.gen_read.read_cnt_reg__0\(4),
      I2 => \gen_axi.gen_read.read_cnt_reg__0\(3),
      I3 => \gen_axi.gen_read.read_cnt[6]_i_2_n_0\,
      I4 => \gen_axi.gen_read.read_cnt_reg__0\(5),
      O => p_0_in(5)
    );
\gen_axi.gen_read.read_cnt[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAA8A00000020"
    )
        port map (
      I0 => \gen_endpoint.err_rvalid\,
      I1 => \gen_axi.gen_read.read_cnt_reg__0\(5),
      I2 => \gen_axi.gen_read.read_cnt[6]_i_2_n_0\,
      I3 => \gen_axi.gen_read.read_cnt_reg__0\(3),
      I4 => \gen_axi.gen_read.read_cnt_reg__0\(4),
      I5 => \gen_axi.gen_read.read_cnt_reg__0\(6),
      O => p_0_in(6)
    );
\gen_axi.gen_read.read_cnt[6]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \gen_axi.gen_read.read_cnt_reg__0\(1),
      I1 => \gen_axi.gen_read.read_cnt_reg\(0),
      I2 => \gen_axi.gen_read.read_cnt_reg__0\(2),
      O => \gen_axi.gen_read.read_cnt[6]_i_2_n_0\
    );
\gen_axi.gen_read.read_cnt[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8F80808080808080"
    )
        port map (
      I0 => \gen_axi.gen_read.read_cnt[7]_i_3_n_0\,
      I1 => s_axi_rready,
      I2 => \gen_endpoint.err_rvalid\,
      I3 => mr_axi_arvalid,
      I4 => \^gen_endpoint.r_state_reg[1]\,
      I5 => \^gen_endpoint.err_arready\,
      O => \gen_axi.gen_read.read_cnt[7]_i_1_n_0\
    );
\gen_axi.gen_read.read_cnt[7]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A8AA0200"
    )
        port map (
      I0 => \gen_endpoint.err_rvalid\,
      I1 => \gen_axi.gen_read.read_cnt_reg__0\(1),
      I2 => \gen_axi.gen_read.read_cnt_reg\(0),
      I3 => \gen_axi.gen_read.read_cnt[7]_i_5_n_0\,
      I4 => \gen_axi.gen_read.read_cnt_reg__0\(7),
      O => p_0_in(7)
    );
\gen_axi.gen_read.read_cnt[7]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFB"
    )
        port map (
      I0 => \gen_axi.gen_read.read_cnt_reg__0\(7),
      I1 => \gen_axi.gen_read.read_cnt[7]_i_5_n_0\,
      I2 => \gen_axi.gen_read.read_cnt_reg\(0),
      I3 => \gen_axi.gen_read.read_cnt_reg__0\(1),
      O => \gen_axi.gen_read.read_cnt[7]_i_3_n_0\
    );
\gen_axi.gen_read.read_cnt[7]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \gen_endpoint.r_state\(1),
      I1 => \gen_endpoint.r_state\(0),
      O => \^gen_endpoint.r_state_reg[1]\
    );
\gen_axi.gen_read.read_cnt[7]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => \gen_axi.gen_read.read_cnt_reg__0\(4),
      I1 => \gen_axi.gen_read.read_cnt_reg__0\(3),
      I2 => \gen_axi.gen_read.read_cnt_reg__0\(2),
      I3 => \gen_axi.gen_read.read_cnt_reg__0\(5),
      I4 => \gen_axi.gen_read.read_cnt_reg__0\(6),
      O => \gen_axi.gen_read.read_cnt[7]_i_5_n_0\
    );
\gen_axi.gen_read.read_cnt_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.read_cnt[7]_i_1_n_0\,
      D => p_0_in(0),
      Q => \gen_axi.gen_read.read_cnt_reg\(0),
      R => areset
    );
\gen_axi.gen_read.read_cnt_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.read_cnt[7]_i_1_n_0\,
      D => p_0_in(1),
      Q => \gen_axi.gen_read.read_cnt_reg__0\(1),
      R => areset
    );
\gen_axi.gen_read.read_cnt_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.read_cnt[7]_i_1_n_0\,
      D => p_0_in(2),
      Q => \gen_axi.gen_read.read_cnt_reg__0\(2),
      R => areset
    );
\gen_axi.gen_read.read_cnt_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.read_cnt[7]_i_1_n_0\,
      D => p_0_in(3),
      Q => \gen_axi.gen_read.read_cnt_reg__0\(3),
      R => areset
    );
\gen_axi.gen_read.read_cnt_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.read_cnt[7]_i_1_n_0\,
      D => p_0_in(4),
      Q => \gen_axi.gen_read.read_cnt_reg__0\(4),
      R => areset
    );
\gen_axi.gen_read.read_cnt_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.read_cnt[7]_i_1_n_0\,
      D => p_0_in(5),
      Q => \gen_axi.gen_read.read_cnt_reg__0\(5),
      R => areset
    );
\gen_axi.gen_read.read_cnt_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.read_cnt[7]_i_1_n_0\,
      D => p_0_in(6),
      Q => \gen_axi.gen_read.read_cnt_reg__0\(6),
      R => areset
    );
\gen_axi.gen_read.read_cnt_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.read_cnt[7]_i_1_n_0\,
      D => p_0_in(7),
      Q => \gen_axi.gen_read.read_cnt_reg__0\(7),
      R => areset
    );
\gen_axi.gen_read.read_cs[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DFD0D0D0D0D0D0D0"
    )
        port map (
      I0 => s_axi_rready,
      I1 => \gen_axi.gen_read.read_cnt[7]_i_3_n_0\,
      I2 => \gen_endpoint.err_rvalid\,
      I3 => mr_axi_arvalid,
      I4 => \^gen_endpoint.r_state_reg[1]\,
      I5 => \^gen_endpoint.err_arready\,
      O => \gen_axi.gen_read.read_cs[0]_i_1_n_0\
    );
\gen_axi.gen_read.read_cs_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_axi.gen_read.read_cs[0]_i_1_n_0\,
      Q => \gen_endpoint.err_rvalid\,
      R => areset
    );
\gen_axi.gen_read.s_axi_arready_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000055550455"
    )
        port map (
      I0 => areset,
      I1 => s_axi_rready,
      I2 => \gen_axi.gen_read.read_cnt[7]_i_3_n_0\,
      I3 => \gen_endpoint.err_rvalid\,
      I4 => \^gen_endpoint.err_arready\,
      I5 => \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\,
      O => \gen_axi.gen_read.s_axi_arready_i_i_1_n_0\
    );
\gen_axi.gen_read.s_axi_arready_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_axi.gen_read.s_axi_arready_i_i_1_n_0\,
      Q => \^gen_endpoint.err_arready\,
      R => '0'
    );
\gen_axi.gen_read.s_axi_rid_i[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000055550400"
    )
        port map (
      I0 => \gen_axi.gen_read.s_axi_rid_i[11]_i_2_n_0\,
      I1 => \^sr_axi_arvalid\,
      I2 => \gen_endpoint.r_trigger_decerr\,
      I3 => m_valid1,
      I4 => m_vector2,
      I5 => \gen_endpoint.err_rvalid\,
      O => \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\
    );
\gen_axi.gen_read.s_axi_rid_i[11]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => \^gen_endpoint.err_arready\,
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => \gen_axi.gen_read.s_axi_rid_i[11]_i_2_n_0\
    );
\gen_axi.gen_read.s_axi_rid_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\,
      D => m_axi_arid(0),
      Q => \gen_axi.gen_read.s_axi_rid_i\(0),
      R => areset
    );
\gen_axi.gen_read.s_axi_rid_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\,
      D => m_axi_arid(10),
      Q => \gen_axi.gen_read.s_axi_rid_i\(10),
      R => areset
    );
\gen_axi.gen_read.s_axi_rid_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\,
      D => m_axi_arid(11),
      Q => \gen_axi.gen_read.s_axi_rid_i\(11),
      R => areset
    );
\gen_axi.gen_read.s_axi_rid_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\,
      D => m_axi_arid(1),
      Q => \gen_axi.gen_read.s_axi_rid_i\(1),
      R => areset
    );
\gen_axi.gen_read.s_axi_rid_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\,
      D => m_axi_arid(2),
      Q => \gen_axi.gen_read.s_axi_rid_i\(2),
      R => areset
    );
\gen_axi.gen_read.s_axi_rid_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\,
      D => m_axi_arid(3),
      Q => \gen_axi.gen_read.s_axi_rid_i\(3),
      R => areset
    );
\gen_axi.gen_read.s_axi_rid_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\,
      D => m_axi_arid(4),
      Q => \gen_axi.gen_read.s_axi_rid_i\(4),
      R => areset
    );
\gen_axi.gen_read.s_axi_rid_i_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\,
      D => m_axi_arid(5),
      Q => \gen_axi.gen_read.s_axi_rid_i\(5),
      R => areset
    );
\gen_axi.gen_read.s_axi_rid_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\,
      D => m_axi_arid(6),
      Q => \gen_axi.gen_read.s_axi_rid_i\(6),
      R => areset
    );
\gen_axi.gen_read.s_axi_rid_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\,
      D => m_axi_arid(7),
      Q => \gen_axi.gen_read.s_axi_rid_i\(7),
      R => areset
    );
\gen_axi.gen_read.s_axi_rid_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\,
      D => m_axi_arid(8),
      Q => \gen_axi.gen_read.s_axi_rid_i\(8),
      R => areset
    );
\gen_axi.gen_read.s_axi_rid_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\,
      D => m_axi_arid(9),
      Q => \gen_axi.gen_read.s_axi_rid_i\(9),
      R => areset
    );
\gen_axi.gen_read.s_axi_rlast_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8FFB8B8B800"
    )
        port map (
      I0 => \gen_axi.gen_read.read_cnt[7]_i_3_n_0\,
      I1 => \gen_endpoint.err_rvalid\,
      I2 => \gen_axi.gen_read.s_axi_rlast_i_reg_0\,
      I3 => \gen_axi.gen_read.s_axi_rid_i[11]_i_1_n_0\,
      I4 => \gen_axi.gen_read.s_axi_rlast_i_i_3_n_0\,
      I5 => \gen_endpoint.err_rlast\,
      O => \gen_axi.gen_read.s_axi_rlast_i_i_1_n_0\
    );
\gen_axi.gen_read.s_axi_rlast_i_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"02000000"
    )
        port map (
      I0 => \gen_axi.gen_read.read_cnt[7]_i_5_n_0\,
      I1 => \gen_axi.gen_read.read_cnt_reg__0\(1),
      I2 => \gen_axi.gen_read.read_cnt_reg__0\(7),
      I3 => s_axi_rready,
      I4 => \gen_endpoint.err_rvalid\,
      O => \gen_axi.gen_read.s_axi_rlast_i_i_3_n_0\
    );
\gen_axi.gen_read.s_axi_rlast_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_axi.gen_read.s_axi_rlast_i_i_1_n_0\,
      Q => \gen_endpoint.err_rlast\,
      R => areset
    );
\gen_axi.gen_write.s_axi_awready_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF7FFFFFFFF00"
    )
        port map (
      I0 => mr_axi_awvalid,
      I1 => \^gen_endpoint.w_state_reg[1]_0\,
      I2 => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[1]\,
      I3 => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[0]\,
      I4 => \gen_axi.gen_write.s_axi_awready_i_i_3_n_0\,
      I5 => \^gen_endpoint.err_awready\,
      O => \gen_axi.gen_write.s_axi_awready_i_i_1_n_0\
    );
\gen_axi.gen_write.s_axi_awready_i_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \gen_endpoint.w_state\(1),
      I1 => \gen_endpoint.w_state\(0),
      O => \^gen_endpoint.w_state_reg[1]_0\
    );
\gen_axi.gen_write.s_axi_awready_i_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => s_axi_bready,
      I1 => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[2]\,
      O => \gen_axi.gen_write.s_axi_awready_i_i_3_n_0\
    );
\gen_axi.gen_write.s_axi_awready_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_axi.gen_write.s_axi_awready_i_i_1_n_0\,
      Q => \^gen_endpoint.err_awready\,
      R => areset
    );
\gen_axi.gen_write.s_axi_bid_i[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2222222200200000"
    )
        port map (
      I0 => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[0]\,
      I1 => \gen_axi.gen_write.s_axi_bid_i[11]_i_2_n_0\,
      I2 => \gen_axi.gen_write.s_axi_bid_i_reg[0]_0\,
      I3 => \gen_endpoint.w_trigger_decerr\,
      I4 => m_valid1_0,
      I5 => m_vector2_1,
      O => \gen_axi.gen_write.s_axi_bid_i_0\
    );
\gen_axi.gen_write.s_axi_bid_i[11]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => \^gen_endpoint.err_awready\,
      I1 => \gen_endpoint.w_state\(0),
      I2 => \gen_endpoint.w_state\(1),
      O => \gen_axi.gen_write.s_axi_bid_i[11]_i_2_n_0\
    );
\gen_axi.gen_write.s_axi_bid_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_write.s_axi_bid_i_0\,
      D => m_axi_awid(0),
      Q => \gen_axi.gen_write.s_axi_bid_i\(0),
      R => areset
    );
\gen_axi.gen_write.s_axi_bid_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_write.s_axi_bid_i_0\,
      D => m_axi_awid(10),
      Q => \gen_axi.gen_write.s_axi_bid_i\(10),
      R => areset
    );
\gen_axi.gen_write.s_axi_bid_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_write.s_axi_bid_i_0\,
      D => m_axi_awid(11),
      Q => \gen_axi.gen_write.s_axi_bid_i\(11),
      R => areset
    );
\gen_axi.gen_write.s_axi_bid_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_write.s_axi_bid_i_0\,
      D => m_axi_awid(1),
      Q => \gen_axi.gen_write.s_axi_bid_i\(1),
      R => areset
    );
\gen_axi.gen_write.s_axi_bid_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_write.s_axi_bid_i_0\,
      D => m_axi_awid(2),
      Q => \gen_axi.gen_write.s_axi_bid_i\(2),
      R => areset
    );
\gen_axi.gen_write.s_axi_bid_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_write.s_axi_bid_i_0\,
      D => m_axi_awid(3),
      Q => \gen_axi.gen_write.s_axi_bid_i\(3),
      R => areset
    );
\gen_axi.gen_write.s_axi_bid_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_write.s_axi_bid_i_0\,
      D => m_axi_awid(4),
      Q => \gen_axi.gen_write.s_axi_bid_i\(4),
      R => areset
    );
\gen_axi.gen_write.s_axi_bid_i_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_write.s_axi_bid_i_0\,
      D => m_axi_awid(5),
      Q => \gen_axi.gen_write.s_axi_bid_i\(5),
      R => areset
    );
\gen_axi.gen_write.s_axi_bid_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_write.s_axi_bid_i_0\,
      D => m_axi_awid(6),
      Q => \gen_axi.gen_write.s_axi_bid_i\(6),
      R => areset
    );
\gen_axi.gen_write.s_axi_bid_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_write.s_axi_bid_i_0\,
      D => m_axi_awid(7),
      Q => \gen_axi.gen_write.s_axi_bid_i\(7),
      R => areset
    );
\gen_axi.gen_write.s_axi_bid_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_write.s_axi_bid_i_0\,
      D => m_axi_awid(8),
      Q => \gen_axi.gen_write.s_axi_bid_i\(8),
      R => areset
    );
\gen_axi.gen_write.s_axi_bid_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_axi.gen_write.s_axi_bid_i_0\,
      D => m_axi_awid(9),
      Q => \gen_axi.gen_write.s_axi_bid_i\(9),
      R => areset
    );
\gen_axi.gen_write.s_axi_bvalid_i_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BFAA"
    )
        port map (
      I0 => \FSM_onehot_gen_axi.gen_write.write_cs[2]_i_2_n_0\,
      I1 => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[2]\,
      I2 => s_axi_bready,
      I3 => \gen_endpoint.err_bvalid\,
      O => \gen_axi.gen_write.s_axi_bvalid_i_i_1_n_0\
    );
\gen_axi.gen_write.s_axi_bvalid_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_axi.gen_write.s_axi_bvalid_i_i_1_n_0\,
      Q => \gen_endpoint.err_bvalid\,
      R => areset
    );
\gen_axi.gen_write.s_axi_wready_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFFFFFFFAAAAAAAA"
    )
        port map (
      I0 => \gen_axi.gen_write.s_axi_bid_i_0\,
      I1 => s_axi_wvalid,
      I2 => s_axi_wlast,
      I3 => \FSM_onehot_gen_axi.gen_write.write_cs_reg_n_0_[1]\,
      I4 => \^gen_endpoint.w_state_reg[1]_0\,
      I5 => \gen_axi.gen_write.s_axi_wready_i\,
      O => \gen_axi.gen_write.s_axi_wready_i_i_1_n_0\
    );
\gen_axi.gen_write.s_axi_wready_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_axi.gen_write.s_axi_wready_i_i_1_n_0\,
      Q => \gen_axi.gen_write.s_axi_wready_i\,
      R => areset
    );
\gen_endpoint.r_state[1]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80000000"
    )
        port map (
      I0 => \gen_endpoint.err_rvalid\,
      I1 => s_axi_rready,
      I2 => \gen_endpoint.r_state\(1),
      I3 => \gen_endpoint.r_state\(0),
      I4 => \gen_endpoint.err_rlast\,
      O => \gen_axi.gen_read.read_cs_reg[0]_0\
    );
\gen_endpoint.w_state[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00001110FFFFEEEE"
    )
        port map (
      I0 => \gen_endpoint.w_state_reg[0]_0\,
      I1 => \^gen_endpoint.w_state_reg[0]\,
      I2 => \gen_endpoint.w_state\(1),
      I3 => mr_axi_awvalid,
      I4 => \gen_endpoint.w_state_reg[0]_1\,
      I5 => \gen_endpoint.w_state\(0),
      O => \gen_endpoint.w_state_reg[1]\
    );
\gen_endpoint.w_state[1]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => \gen_endpoint.w_state\(0),
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.err_bvalid\,
      I3 => s_axi_bready,
      O => \^gen_endpoint.w_state_reg[0]\
    );
\gen_pipelined.mesg_reg[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F808000000000000"
    )
        port map (
      I0 => m_axi_wready,
      I1 => S00_AXI_wready,
      I2 => \^gen_endpoint.w_state_reg[1]_0\,
      I3 => \gen_axi.gen_write.s_axi_wready_i\,
      I4 => s_axi_wvalid,
      I5 => s_axi_wlast,
      O => s_axi_wready_i_reg
    );
m_axi_arvalid_INST_0_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => \gen_axi.gen_read.s_axi_rid_i_reg[0]_0\(0),
      I1 => s_axi_arvalid,
      I2 => \gen_endpoint.r_state\(0),
      I3 => \gen_endpoint.r_state\(1),
      O => \^sr_axi_arvalid\
    );
\s_axi_bid[0]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_write.s_axi_bid_i\(0),
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.w_state\(0),
      I3 => m_axi_bid(0),
      O => s_axi_bid(0)
    );
\s_axi_bid[10]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_write.s_axi_bid_i\(10),
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.w_state\(0),
      I3 => m_axi_bid(10),
      O => s_axi_bid(10)
    );
\s_axi_bid[11]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_write.s_axi_bid_i\(11),
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.w_state\(0),
      I3 => m_axi_bid(11),
      O => s_axi_bid(11)
    );
\s_axi_bid[1]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_write.s_axi_bid_i\(1),
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.w_state\(0),
      I3 => m_axi_bid(1),
      O => s_axi_bid(1)
    );
\s_axi_bid[2]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_write.s_axi_bid_i\(2),
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.w_state\(0),
      I3 => m_axi_bid(2),
      O => s_axi_bid(2)
    );
\s_axi_bid[3]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_write.s_axi_bid_i\(3),
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.w_state\(0),
      I3 => m_axi_bid(3),
      O => s_axi_bid(3)
    );
\s_axi_bid[4]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_write.s_axi_bid_i\(4),
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.w_state\(0),
      I3 => m_axi_bid(4),
      O => s_axi_bid(4)
    );
\s_axi_bid[5]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_write.s_axi_bid_i\(5),
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.w_state\(0),
      I3 => m_axi_bid(5),
      O => s_axi_bid(5)
    );
\s_axi_bid[6]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_write.s_axi_bid_i\(6),
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.w_state\(0),
      I3 => m_axi_bid(6),
      O => s_axi_bid(6)
    );
\s_axi_bid[7]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_write.s_axi_bid_i\(7),
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.w_state\(0),
      I3 => m_axi_bid(7),
      O => s_axi_bid(7)
    );
\s_axi_bid[8]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_write.s_axi_bid_i\(8),
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.w_state\(0),
      I3 => m_axi_bid(8),
      O => s_axi_bid(8)
    );
\s_axi_bid[9]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_write.s_axi_bid_i\(9),
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.w_state\(0),
      I3 => m_axi_bid(9),
      O => s_axi_bid(9)
    );
s_axi_bvalid_INST_0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_endpoint.err_bvalid\,
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.w_state\(0),
      I3 => m_axi_bvalid,
      O => s_axi_bvalid
    );
\s_axi_rid[0]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_read.s_axi_rid_i\(0),
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => m_axi_rid(0),
      O => s_axi_rid(0)
    );
\s_axi_rid[10]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_read.s_axi_rid_i\(10),
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => m_axi_rid(10),
      O => s_axi_rid(10)
    );
\s_axi_rid[11]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_read.s_axi_rid_i\(11),
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => m_axi_rid(11),
      O => s_axi_rid(11)
    );
\s_axi_rid[1]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_read.s_axi_rid_i\(1),
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => m_axi_rid(1),
      O => s_axi_rid(1)
    );
\s_axi_rid[2]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_read.s_axi_rid_i\(2),
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => m_axi_rid(2),
      O => s_axi_rid(2)
    );
\s_axi_rid[3]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_read.s_axi_rid_i\(3),
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => m_axi_rid(3),
      O => s_axi_rid(3)
    );
\s_axi_rid[4]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_read.s_axi_rid_i\(4),
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => m_axi_rid(4),
      O => s_axi_rid(4)
    );
\s_axi_rid[5]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_read.s_axi_rid_i\(5),
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => m_axi_rid(5),
      O => s_axi_rid(5)
    );
\s_axi_rid[6]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_read.s_axi_rid_i\(6),
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => m_axi_rid(6),
      O => s_axi_rid(6)
    );
\s_axi_rid[7]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_read.s_axi_rid_i\(7),
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => m_axi_rid(7),
      O => s_axi_rid(7)
    );
\s_axi_rid[8]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_read.s_axi_rid_i\(8),
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => m_axi_rid(8),
      O => s_axi_rid(8)
    );
\s_axi_rid[9]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_axi.gen_read.s_axi_rid_i\(9),
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => m_axi_rid(9),
      O => s_axi_rid(9)
    );
s_axi_rlast_INST_0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_endpoint.err_rlast\,
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => m_axi_rlast,
      O => s_axi_rlast
    );
s_axi_rvalid_INST_0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \gen_endpoint.err_rvalid\,
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => m_axi_rvalid,
      O => s_axi_rvalid
    );
s_axi_wready_INST_0: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BF808080"
    )
        port map (
      I0 => \gen_axi.gen_write.s_axi_wready_i\,
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.w_state\(0),
      I3 => S00_AXI_wready,
      I4 => m_axi_wready,
      O => s_axi_wready
    );
\state[s_stall_d]_i_3__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \^gen_endpoint.err_awready\,
      I1 => \gen_endpoint.w_state\(1),
      I2 => \gen_endpoint.w_state\(0),
      I3 => m_axi_awready,
      O => mr_axi_awready
    );
\state[s_stall_d]_i_4__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => \^gen_endpoint.err_arready\,
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => m_axi_arready,
      O => mr_axi_arready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_node_v1_0_10_arb_alg_rr is
  port (
    \grant_i_reg[1]_0\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_aclk : in STD_LOGIC;
    \grant_i_reg[1]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \grant_i_reg[1]_2\ : in STD_LOGIC;
    areset_r : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_node_v1_0_10_arb_alg_rr : entity is "sc_node_v1_0_10_arb_alg_rr";
end design_1_axi_smc_0_sc_node_v1_0_10_arb_alg_rr;

architecture STRUCTURE of design_1_axi_smc_0_sc_node_v1_0_10_arb_alg_rr is
  signal \grant_i[1]_i_1_n_0\ : STD_LOGIC;
  signal \^grant_i_reg[1]_0\ : STD_LOGIC;
  signal p_2_in : STD_LOGIC;
begin
  \grant_i_reg[1]_0\ <= \^grant_i_reg[1]_0\;
\gen_single_rank.data[52]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => s_sc_send(0),
      I1 => \^grant_i_reg[1]_0\,
      O => E(0)
    );
\grant_i[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0008"
    )
        port map (
      I0 => p_2_in,
      I1 => \grant_i_reg[1]_1\(0),
      I2 => \grant_i_reg[1]_2\,
      I3 => areset_r,
      O => \grant_i[1]_i_1_n_0\
    );
\grant_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \grant_i[1]_i_1_n_0\,
      Q => \^grant_i_reg[1]_0\,
      R => '0'
    );
\last_grant_reg[1]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => p_2_in,
      Q => p_2_in,
      S => areset_r
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_node_v1_0_10_arb_alg_rr_2 is
  port (
    \grant_i_reg[1]_0\ : out STD_LOGIC;
    s_sc_handshake : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_aclk : in STD_LOGIC;
    \grant_i_reg[1]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \grant_i_reg[1]_2\ : in STD_LOGIC;
    areset_r : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_node_v1_0_10_arb_alg_rr_2 : entity is "sc_node_v1_0_10_arb_alg_rr";
end design_1_axi_smc_0_sc_node_v1_0_10_arb_alg_rr_2;

architecture STRUCTURE of design_1_axi_smc_0_sc_node_v1_0_10_arb_alg_rr_2 is
  signal \grant_i[1]_i_1_n_0\ : STD_LOGIC;
  signal \^grant_i_reg[1]_0\ : STD_LOGIC;
  signal p_2_in : STD_LOGIC;
begin
  \grant_i_reg[1]_0\ <= \^grant_i_reg[1]_0\;
\grant_i[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0008"
    )
        port map (
      I0 => p_2_in,
      I1 => \grant_i_reg[1]_1\(0),
      I2 => \grant_i_reg[1]_2\,
      I3 => areset_r,
      O => \grant_i[1]_i_1_n_0\
    );
\grant_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \grant_i[1]_i_1_n_0\,
      Q => \^grant_i_reg[1]_0\,
      R => '0'
    );
is_zero_r_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => s_sc_send(0),
      I1 => \^grant_i_reg[1]_0\,
      O => s_sc_handshake(0)
    );
\last_grant_reg[1]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => p_2_in,
      Q => p_2_in,
      S => areset_r
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator is
  port (
    arb_stall : out STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    \gen_normal_area.fifo_node_payld_full_i\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator : entity is "sc_node_v1_0_10_fi_regulator";
end design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator;

architecture STRUCTURE of design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator is
  signal allow_transfer_r_i_1_n_0 : STD_LOGIC;
  signal delay : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of allow_transfer_r_i_1 : label is "soft_lutpair107";
  attribute SOFT_HLUTNM of \gen_pipe[1].pipe[1][0]_i_1\ : label is "soft_lutpair107";
begin
allow_transfer_r_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \gen_normal_area.fifo_node_payld_full_i\,
      I1 => delay(1),
      I2 => delay(0),
      O => allow_transfer_r_i_1_n_0
    );
allow_transfer_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => allow_transfer_r_i_1_n_0,
      Q => delay(0),
      R => '0'
    );
\gen_delay.delay_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => delay(0),
      Q => delay(1),
      R => '0'
    );
\gen_pipe[1].pipe[1][0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => delay(0),
      O => arb_stall
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_0 is
  port (
    allow_transfer_r_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_aclk : in STD_LOGIC;
    \gen_normal_area.fifo_node_payld_full_i\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_0 : entity is "sc_node_v1_0_10_fi_regulator";
end design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_0;

architecture STRUCTURE of design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_0 is
  signal allow_transfer_r_i_1_n_0 : STD_LOGIC;
  signal \^allow_transfer_r_reg_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal delay : STD_LOGIC_VECTOR ( 1 to 1 );
begin
  allow_transfer_r_reg_0(0) <= \^allow_transfer_r_reg_0\(0);
allow_transfer_r_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \gen_normal_area.fifo_node_payld_full_i\,
      I1 => delay(1),
      I2 => \^allow_transfer_r_reg_0\(0),
      O => allow_transfer_r_i_1_n_0
    );
allow_transfer_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => allow_transfer_r_i_1_n_0,
      Q => \^allow_transfer_r_reg_0\(0),
      R => '0'
    );
\gen_delay.delay_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \^allow_transfer_r_reg_0\(0),
      Q => delay(1),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_10 is
  port (
    arb_stall : out STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    \gen_normal_area.fifo_node_payld_full_i\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_10 : entity is "sc_node_v1_0_10_fi_regulator";
end design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_10;

architecture STRUCTURE of design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_10 is
  signal allow_transfer_r_i_1_n_0 : STD_LOGIC;
  signal delay : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of allow_transfer_r_i_1 : label is "soft_lutpair101";
  attribute SOFT_HLUTNM of \gen_pipe[1].pipe[1][0]_i_1\ : label is "soft_lutpair101";
begin
allow_transfer_r_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \gen_normal_area.fifo_node_payld_full_i\,
      I1 => delay(1),
      I2 => delay(0),
      O => allow_transfer_r_i_1_n_0
    );
allow_transfer_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => allow_transfer_r_i_1_n_0,
      Q => delay(0),
      R => '0'
    );
\gen_delay.delay_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => delay(0),
      Q => delay(1),
      R => '0'
    );
\gen_pipe[1].pipe[1][0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => delay(0),
      O => arb_stall
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_4 is
  port (
    allow_transfer_r_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_aclk : in STD_LOGIC;
    \gen_normal_area.fifo_node_payld_full_i\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_4 : entity is "sc_node_v1_0_10_fi_regulator";
end design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_4;

architecture STRUCTURE of design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_4 is
  signal allow_transfer_r_i_1_n_0 : STD_LOGIC;
  signal \^allow_transfer_r_reg_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal delay : STD_LOGIC_VECTOR ( 1 to 1 );
begin
  allow_transfer_r_reg_0(0) <= \^allow_transfer_r_reg_0\(0);
allow_transfer_r_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \gen_normal_area.fifo_node_payld_full_i\,
      I1 => delay(1),
      I2 => \^allow_transfer_r_reg_0\(0),
      O => allow_transfer_r_i_1_n_0
    );
allow_transfer_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => allow_transfer_r_i_1_n_0,
      Q => \^allow_transfer_r_reg_0\(0),
      R => '0'
    );
\gen_delay.delay_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \^allow_transfer_r_reg_0\(0),
      Q => delay(1),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_7 is
  port (
    arb_stall : out STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    \gen_normal_area.fifo_node_payld_full_i\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_7 : entity is "sc_node_v1_0_10_fi_regulator";
end design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_7;

architecture STRUCTURE of design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_7 is
  signal allow_transfer_r_i_1_n_0 : STD_LOGIC;
  signal delay : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of allow_transfer_r_i_1 : label is "soft_lutpair103";
  attribute SOFT_HLUTNM of \gen_pipe[1].pipe[1][0]_i_1\ : label is "soft_lutpair103";
begin
allow_transfer_r_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \gen_normal_area.fifo_node_payld_full_i\,
      I1 => delay(1),
      I2 => delay(0),
      O => allow_transfer_r_i_1_n_0
    );
allow_transfer_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => allow_transfer_r_i_1_n_0,
      Q => delay(0),
      R => '0'
    );
\gen_delay.delay_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => delay(0),
      Q => delay(1),
      R => '0'
    );
\gen_pipe[1].pipe[1][0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => delay(0),
      O => arb_stall
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_node_v1_0_10_mi_handler is
  port (
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_node_v1_0_10_mi_handler : entity is "sc_node_v1_0_10_mi_handler";
end design_1_axi_smc_0_sc_node_v1_0_10_mi_handler;

architecture STRUCTURE of design_1_axi_smc_0_sc_node_v1_0_10_mi_handler is
  signal areset_r : STD_LOGIC;
begin
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\m_sc_send[0]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_send(0),
      I1 => areset_r,
      O => m_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized0\ is
  port (
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized0\ : entity is "sc_node_v1_0_10_mi_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized0\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized0\ is
  signal areset_r : STD_LOGIC;
begin
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\m_sc_send[0]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_send(0),
      I1 => areset_r,
      O => m_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized1\ is
  port (
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized1\ : entity is "sc_node_v1_0_10_mi_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized1\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized1\ is
  signal areset_r : STD_LOGIC;
  signal \gen_minimal_area.req_mask\ : STD_LOGIC;
  signal \gen_minimal_area.req_mask[0]_i_1_n_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \m_sc_req[0]_INST_0\ : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of \m_sc_send[0]_INST_0\ : label is "soft_lutpair10";
begin
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\gen_minimal_area.req_mask[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EF"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => areset_r,
      I2 => s_sc_send(0),
      O => \gen_minimal_area.req_mask[0]_i_1_n_0\
    );
\gen_minimal_area.req_mask_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \gen_minimal_area.req_mask[0]_i_1_n_0\,
      Q => \gen_minimal_area.req_mask\,
      R => '0'
    );
\m_sc_req[0]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"20"
    )
        port map (
      I0 => \gen_minimal_area.req_mask\,
      I1 => areset_r,
      I2 => s_sc_send(0),
      O => m_sc_req(0)
    );
\m_sc_send[0]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_send(0),
      I1 => areset_r,
      O => m_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized2\ is
  port (
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized2\ : entity is "sc_node_v1_0_10_mi_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized2\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized2\ is
  signal areset_r : STD_LOGIC;
  signal \gen_minimal_area.req_mask\ : STD_LOGIC;
  signal \gen_minimal_area.req_mask[0]_i_1_n_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \m_sc_req[0]_INST_0\ : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of \m_sc_send[0]_INST_0\ : label is "soft_lutpair11";
begin
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\gen_minimal_area.req_mask[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EF"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => areset_r,
      I2 => s_sc_send(0),
      O => \gen_minimal_area.req_mask[0]_i_1_n_0\
    );
\gen_minimal_area.req_mask_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \gen_minimal_area.req_mask[0]_i_1_n_0\,
      Q => \gen_minimal_area.req_mask\,
      R => '0'
    );
\m_sc_req[0]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"20"
    )
        port map (
      I0 => \gen_minimal_area.req_mask\,
      I1 => areset_r,
      I2 => s_sc_send(0),
      O => m_sc_req(0)
    );
\m_sc_send[0]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_send(0),
      I1 => areset_r,
      O => m_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized3\ is
  port (
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized3\ : entity is "sc_node_v1_0_10_mi_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized3\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized3\ is
  signal areset_r : STD_LOGIC;
begin
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\m_sc_send[0]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_send(0),
      I1 => areset_r,
      O => m_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized4\ is
  port (
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized4\ : entity is "sc_node_v1_0_10_mi_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized4\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized4\ is
  signal areset_r : STD_LOGIC;
begin
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\m_sc_send[0]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_send(0),
      I1 => areset_r,
      O => m_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized5\ is
  port (
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized5\ : entity is "sc_node_v1_0_10_mi_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized5\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized5\ is
  signal areset_r : STD_LOGIC;
begin
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\m_sc_send[0]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_send(0),
      I1 => areset_r,
      O => m_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized6\ is
  port (
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized6\ : entity is "sc_node_v1_0_10_mi_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized6\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized6\ is
  signal areset_r : STD_LOGIC;
begin
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\m_sc_send[0]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_send(0),
      I1 => areset_r,
      O => m_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized7\ is
  port (
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized7\ : entity is "sc_node_v1_0_10_mi_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized7\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized7\ is
  signal areset_r : STD_LOGIC;
begin
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\m_sc_send[0]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_send(0),
      I1 => areset_r,
      O => m_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized8\ is
  port (
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized8\ : entity is "sc_node_v1_0_10_mi_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized8\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized8\ is
  signal areset_r : STD_LOGIC;
begin
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\m_sc_send[0]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_send(0),
      I1 => areset_r,
      O => m_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_si_converter_v1_0_9_axilite_conv is
  port (
    m_axi_aruser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_bready_i_reg_0 : out STD_LOGIC;
    s_axi_bvalid_i_reg_0 : out STD_LOGIC;
    s_axi_awready : out STD_LOGIC;
    s_axi_wready : out STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    s_axi_rvalid : out STD_LOGIC;
    m_axi_awvalid : out STD_LOGIC;
    m_axi_wvalid : out STD_LOGIC;
    m_axi_arvalid_i_reg_0 : out STD_LOGIC;
    m_axi_rready : out STD_LOGIC;
    s_axi_rlast : out STD_LOGIC;
    m_axi_awaddr : out STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_araddr : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    areset : in STD_LOGIC;
    aclk : in STD_LOGIC;
    m_axi_wready : in STD_LOGIC;
    m_axi_awready : in STD_LOGIC;
    s_axi_bready : in STD_LOGIC;
    s_axi_wlast : in STD_LOGIC;
    s_axi_wvalid : in STD_LOGIC;
    s_axi_arvalid : in STD_LOGIC;
    s_axi_rready : in STD_LOGIC;
    m_axi_rvalid : in STD_LOGIC;
    m_axi_arready : in STD_LOGIC;
    s_axi_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arlen : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_araddr : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_arsize : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awvalid : in STD_LOGIC;
    m_axi_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_bvalid : in STD_LOGIC;
    m_axi_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 7 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_si_converter_v1_0_9_axilite_conv : entity is "sc_si_converter_v1_0_9_axilite_conv";
end design_1_axi_smc_0_sc_si_converter_v1_0_9_axilite_conv;

architecture STRUCTURE of design_1_axi_smc_0_sc_si_converter_v1_0_9_axilite_conv is
  signal \FSM_sequential_r_state[0]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_sequential_r_state[1]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_sequential_w_state[0]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_sequential_w_state[1]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_sequential_w_state[2]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_sequential_w_state[2]_i_2_n_0\ : STD_LOGIC;
  signal \FSM_sequential_w_state[2]_i_4_n_0\ : STD_LOGIC;
  signal ar_addr_d : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \ar_addr_d[7]_i_1_n_0\ : STD_LOGIC;
  signal \ar_addr_d[7]_i_3_n_0\ : STD_LOGIC;
  signal \ar_addr_d[7]_i_4_n_0\ : STD_LOGIC;
  signal ar_cnt : STD_LOGIC_VECTOR ( 6 downto 0 );
  signal \ar_cnt[0]_i_1_n_0\ : STD_LOGIC;
  signal \ar_cnt[0]_i_2_n_0\ : STD_LOGIC;
  signal \ar_cnt[1]_i_1_n_0\ : STD_LOGIC;
  signal \ar_cnt[1]_i_2_n_0\ : STD_LOGIC;
  signal \ar_cnt[1]_i_3_n_0\ : STD_LOGIC;
  signal \ar_cnt[2]_i_1_n_0\ : STD_LOGIC;
  signal \ar_cnt[2]_i_2_n_0\ : STD_LOGIC;
  signal \ar_cnt[2]_i_3_n_0\ : STD_LOGIC;
  signal \ar_cnt[2]_i_4_n_0\ : STD_LOGIC;
  signal \ar_cnt[3]_i_1_n_0\ : STD_LOGIC;
  signal \ar_cnt[3]_i_2_n_0\ : STD_LOGIC;
  signal \ar_cnt[3]_i_3_n_0\ : STD_LOGIC;
  signal \ar_cnt[4]_i_1_n_0\ : STD_LOGIC;
  signal \ar_cnt[5]_i_1_n_0\ : STD_LOGIC;
  signal \ar_cnt[6]_i_1_n_0\ : STD_LOGIC;
  signal \ar_cnt[6]_i_2_n_0\ : STD_LOGIC;
  signal \ar_cnt[6]_i_3_n_0\ : STD_LOGIC;
  signal aw_addr : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \aw_addr[3]_i_3_n_0\ : STD_LOGIC;
  signal \aw_addr[3]_i_4_n_0\ : STD_LOGIC;
  signal \aw_addr[3]_i_5_n_0\ : STD_LOGIC;
  signal \aw_addr[7]_i_1_n_0\ : STD_LOGIC;
  signal \aw_addr[7]_i_3_n_0\ : STD_LOGIC;
  signal \aw_addr[7]_i_5_n_0\ : STD_LOGIC;
  signal \aw_addr[7]_i_6_n_0\ : STD_LOGIC;
  signal \aw_addr[7]_i_7_n_0\ : STD_LOGIC;
  signal \aw_addr_reg[3]_i_2_n_0\ : STD_LOGIC;
  signal \aw_addr_reg[3]_i_2_n_1\ : STD_LOGIC;
  signal \aw_addr_reg[3]_i_2_n_2\ : STD_LOGIC;
  signal \aw_addr_reg[3]_i_2_n_3\ : STD_LOGIC;
  signal \aw_addr_reg[7]_i_8_n_1\ : STD_LOGIC;
  signal \aw_addr_reg[7]_i_8_n_2\ : STD_LOGIC;
  signal \aw_addr_reg[7]_i_8_n_3\ : STD_LOGIC;
  signal aw_done : STD_LOGIC;
  signal aw_done_i_1_n_0 : STD_LOGIC;
  signal aw_done_reg_n_0 : STD_LOGIC;
  signal aw_incr : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \aw_incr[0]_i_1_n_0\ : STD_LOGIC;
  signal \aw_incr[1]_i_1_n_0\ : STD_LOGIC;
  signal \aw_incr[2]_i_1_n_0\ : STD_LOGIC;
  signal aw_incr_1 : STD_LOGIC;
  signal b_cnt : STD_LOGIC;
  signal \b_cnt[2]_i_1_n_0\ : STD_LOGIC;
  signal \b_cnt[3]_i_1_n_0\ : STD_LOGIC;
  signal \b_cnt[4]_i_1_n_0\ : STD_LOGIC;
  signal \b_cnt[5]_i_1_n_0\ : STD_LOGIC;
  signal \b_cnt[6]_i_1_n_0\ : STD_LOGIC;
  signal \b_cnt[7]_i_1_n_0\ : STD_LOGIC;
  signal \b_cnt[8]_i_1_n_0\ : STD_LOGIC;
  signal \b_cnt[8]_i_4_n_0\ : STD_LOGIC;
  signal b_cnt_reg : STD_LOGIC_VECTOR ( 8 downto 0 );
  signal \i__carry_i_1_n_0\ : STD_LOGIC;
  signal \i__carry_i_2_n_0\ : STD_LOGIC;
  signal \i__carry_i_3_n_0\ : STD_LOGIC;
  signal in22 : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal m_aruser : STD_LOGIC;
  signal \^m_axi_araddr\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal m_axi_arvalid_i_i_1_n_0 : STD_LOGIC;
  signal m_axi_arvalid_i_i_2_n_0 : STD_LOGIC;
  signal m_axi_arvalid_i_i_3_n_0 : STD_LOGIC;
  signal \^m_axi_arvalid_i_reg_0\ : STD_LOGIC;
  signal \^m_axi_awaddr\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \^m_axi_awvalid\ : STD_LOGIC;
  signal m_axi_awvalid_i_i_1_n_0 : STD_LOGIC;
  signal m_axi_awvalid_i_i_2_n_0 : STD_LOGIC;
  signal m_axi_awvalid_i_i_3_n_0 : STD_LOGIC;
  signal m_axi_bready_i1 : STD_LOGIC;
  signal m_axi_bready_i142_in : STD_LOGIC;
  signal m_axi_bready_i1_carry_i_1_n_0 : STD_LOGIC;
  signal m_axi_bready_i1_carry_i_2_n_0 : STD_LOGIC;
  signal m_axi_bready_i1_carry_i_3_n_0 : STD_LOGIC;
  signal m_axi_bready_i1_carry_i_4_n_0 : STD_LOGIC;
  signal m_axi_bready_i1_carry_i_5_n_0 : STD_LOGIC;
  signal m_axi_bready_i1_carry_i_6_n_0 : STD_LOGIC;
  signal m_axi_bready_i1_carry_i_7_n_0 : STD_LOGIC;
  signal m_axi_bready_i1_carry_n_1 : STD_LOGIC;
  signal m_axi_bready_i1_carry_n_2 : STD_LOGIC;
  signal m_axi_bready_i1_carry_n_3 : STD_LOGIC;
  signal \m_axi_bready_i1_inferred__0/i__carry_n_2\ : STD_LOGIC;
  signal \m_axi_bready_i1_inferred__0/i__carry_n_3\ : STD_LOGIC;
  signal m_axi_bready_i2 : STD_LOGIC_VECTOR ( 8 to 8 );
  signal m_axi_bready_i_i_1_n_0 : STD_LOGIC;
  signal \^m_axi_bready_i_reg_0\ : STD_LOGIC;
  signal \^m_axi_rready\ : STD_LOGIC;
  signal m_axi_rready_i : STD_LOGIC;
  signal m_axi_rready_i_i_1_n_0 : STD_LOGIC;
  signal m_axi_rready_i_i_3_n_0 : STD_LOGIC;
  signal \^m_axi_wvalid\ : STD_LOGIC;
  signal m_axi_wvalid_i_i_1_n_0 : STD_LOGIC;
  signal p_0_in : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal p_0_in_0 : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal r_beats : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \r_beats[4]_i_2_n_0\ : STD_LOGIC;
  signal \r_beats[5]_i_2_n_0\ : STD_LOGIC;
  signal \r_beats[7]_i_1_n_0\ : STD_LOGIC;
  signal \r_beats_reg_n_0_[0]\ : STD_LOGIC;
  signal \r_beats_reg_n_0_[1]\ : STD_LOGIC;
  signal \r_beats_reg_n_0_[2]\ : STD_LOGIC;
  signal \r_beats_reg_n_0_[3]\ : STD_LOGIC;
  signal \r_beats_reg_n_0_[4]\ : STD_LOGIC;
  signal \r_beats_reg_n_0_[5]\ : STD_LOGIC;
  signal \r_beats_reg_n_0_[6]\ : STD_LOGIC;
  signal \r_beats_reg_n_0_[7]\ : STD_LOGIC;
  signal \r_state__0\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \r_state__1\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \^s_axi_arready\ : STD_LOGIC;
  signal s_axi_arready_i_i_1_n_0 : STD_LOGIC;
  signal \^s_axi_awready\ : STD_LOGIC;
  signal s_axi_awready_i_i_1_n_0 : STD_LOGIC;
  signal s_axi_awready_i_i_2_n_0 : STD_LOGIC;
  signal s_axi_awready_i_i_3_n_0 : STD_LOGIC;
  signal s_axi_awready_i_i_4_n_0 : STD_LOGIC;
  signal s_axi_awready_i_i_5_n_0 : STD_LOGIC;
  signal s_axi_awready_i_i_6_n_0 : STD_LOGIC;
  signal s_axi_awready_i_i_7_n_0 : STD_LOGIC;
  signal s_axi_awready_i_i_8_n_0 : STD_LOGIC;
  signal \^s_axi_bresp\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal s_axi_bresp_i : STD_LOGIC;
  signal \s_axi_bresp_i[0]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_bresp_i[0]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_bresp_i[1]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_bresp_i[1]_i_2_n_0\ : STD_LOGIC;
  signal s_axi_bvalid_i_i_1_n_0 : STD_LOGIC;
  signal s_axi_bvalid_i_i_2_n_0 : STD_LOGIC;
  signal \^s_axi_bvalid_i_reg_0\ : STD_LOGIC;
  signal s_axi_rdata_i0_in : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \s_axi_rdata_i[31]_i_1_n_0\ : STD_LOGIC;
  signal \^s_axi_rlast\ : STD_LOGIC;
  signal s_axi_rlast_INST_0_i_1_n_0 : STD_LOGIC;
  signal \^s_axi_rresp\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \s_axi_rresp_i[0]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_rresp_i[0]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_rresp_i[1]_i_1_n_0\ : STD_LOGIC;
  signal \^s_axi_rvalid\ : STD_LOGIC;
  signal s_axi_rvalid_i_i_1_n_0 : STD_LOGIC;
  signal \^s_axi_wready\ : STD_LOGIC;
  signal s_axi_wready_i_i_1_n_0 : STD_LOGIC;
  signal s_axi_wready_i_i_2_n_0 : STD_LOGIC;
  signal s_axi_wready_i_i_3_n_0 : STD_LOGIC;
  signal w_cnt : STD_LOGIC_VECTOR ( 8 downto 0 );
  signal \w_cnt[4]_i_2_n_0\ : STD_LOGIC;
  signal \w_cnt[5]_i_2_n_0\ : STD_LOGIC;
  signal \w_cnt[8]_i_1_n_0\ : STD_LOGIC;
  signal \w_cnt[8]_i_3_n_0\ : STD_LOGIC;
  signal \w_cnt[8]_i_4_n_0\ : STD_LOGIC;
  signal \w_cnt_reg_n_0_[0]\ : STD_LOGIC;
  signal \w_cnt_reg_n_0_[1]\ : STD_LOGIC;
  signal \w_cnt_reg_n_0_[2]\ : STD_LOGIC;
  signal \w_cnt_reg_n_0_[3]\ : STD_LOGIC;
  signal \w_cnt_reg_n_0_[4]\ : STD_LOGIC;
  signal \w_cnt_reg_n_0_[5]\ : STD_LOGIC;
  signal \w_cnt_reg_n_0_[6]\ : STD_LOGIC;
  signal \w_cnt_reg_n_0_[7]\ : STD_LOGIC;
  signal \w_cnt_reg_n_0_[8]\ : STD_LOGIC;
  signal w_done : STD_LOGIC;
  signal w_done_i_1_n_0 : STD_LOGIC;
  signal w_done_reg_n_0 : STD_LOGIC;
  signal w_null : STD_LOGIC;
  signal w_null_i_1_n_0 : STD_LOGIC;
  signal w_null_reg_n_0 : STD_LOGIC;
  signal \w_size_mask[0]_i_1_n_0\ : STD_LOGIC;
  signal \w_size_mask[1]_i_1_n_0\ : STD_LOGIC;
  signal w_state : STD_LOGIC;
  signal \w_state__0\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \NLW_aw_addr_reg[7]_i_8_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal NLW_m_axi_bready_i1_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_m_axi_bready_i1_inferred__0/i__carry_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_m_axi_bready_i1_inferred__0/i__carry_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_sequential_r_state[1]_i_1\ : label is "soft_lutpair69";
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_sequential_r_state_reg[0]\ : label is "R_TX:10,R_RX:01,R_IDLE:00";
  attribute FSM_ENCODED_STATES of \FSM_sequential_r_state_reg[1]\ : label is "R_TX:10,R_RX:01,R_IDLE:00";
  attribute SOFT_HLUTNM of \FSM_sequential_w_state[0]_i_2\ : label is "soft_lutpair77";
  attribute FSM_ENCODED_STATES of \FSM_sequential_w_state_reg[0]\ : label is "W_IDLE:000,W_RX:001,W_TX:010,W_RECOVER:100,W_COMPLETE:011";
  attribute FSM_ENCODED_STATES of \FSM_sequential_w_state_reg[1]\ : label is "W_IDLE:000,W_RX:001,W_TX:010,W_RECOVER:100,W_COMPLETE:011";
  attribute FSM_ENCODED_STATES of \FSM_sequential_w_state_reg[2]\ : label is "W_IDLE:000,W_RX:001,W_TX:010,W_RECOVER:100,W_COMPLETE:011";
  attribute SOFT_HLUTNM of \ar_addr_d[0]_i_1\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \ar_addr_d[2]_i_1\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \ar_addr_d[3]_i_1\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \ar_addr_d[6]_i_1\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \ar_cnt[2]_i_2\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \ar_cnt[6]_i_3\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \aw_addr[7]_i_4\ : label is "soft_lutpair71";
  attribute SOFT_HLUTNM of \aw_addr[7]_i_5\ : label is "soft_lutpair73";
  attribute SOFT_HLUTNM of \b_cnt[0]_i_1\ : label is "soft_lutpair96";
  attribute SOFT_HLUTNM of \b_cnt[1]_i_1\ : label is "soft_lutpair96";
  attribute SOFT_HLUTNM of \b_cnt[2]_i_1\ : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of \b_cnt[3]_i_1\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \b_cnt[4]_i_1\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \b_cnt[7]_i_1\ : label is "soft_lutpair72";
  attribute SOFT_HLUTNM of \b_cnt[8]_i_3\ : label is "soft_lutpair72";
  attribute SOFT_HLUTNM of m_axi_arvalid_i_i_2 : label is "soft_lutpair69";
  attribute SOFT_HLUTNM of m_axi_awvalid_i_i_3 : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of m_axi_bready_i1_carry_i_7 : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of m_axi_rready_i_i_2 : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of m_axi_rready_i_i_3 : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \r_beats[0]_i_1\ : label is "soft_lutpair67";
  attribute SOFT_HLUTNM of \r_beats[1]_i_1\ : label is "soft_lutpair67";
  attribute SOFT_HLUTNM of \r_beats[4]_i_2\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of \r_beats[5]_i_1\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \r_beats[6]_i_1\ : label is "soft_lutpair74";
  attribute SOFT_HLUTNM of \r_beats[7]_i_2\ : label is "soft_lutpair74";
  attribute SOFT_HLUTNM of s_axi_arready_i_i_1 : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of s_axi_awready_i_i_2 : label is "soft_lutpair77";
  attribute SOFT_HLUTNM of s_axi_awready_i_i_3 : label is "soft_lutpair73";
  attribute SOFT_HLUTNM of s_axi_awready_i_i_6 : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \s_axi_bresp_i[0]_i_3\ : label is "soft_lutpair70";
  attribute SOFT_HLUTNM of s_axi_bvalid_i_i_1 : label is "soft_lutpair70";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[10]_i_1\ : label is "soft_lutpair91";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[11]_i_1\ : label is "soft_lutpair90";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[12]_i_1\ : label is "soft_lutpair90";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[13]_i_1\ : label is "soft_lutpair89";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[14]_i_1\ : label is "soft_lutpair89";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[15]_i_1\ : label is "soft_lutpair88";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[16]_i_1\ : label is "soft_lutpair88";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[17]_i_1\ : label is "soft_lutpair87";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[18]_i_1\ : label is "soft_lutpair87";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[19]_i_1\ : label is "soft_lutpair86";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[1]_i_1\ : label is "soft_lutpair95";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[20]_i_1\ : label is "soft_lutpair86";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[21]_i_1\ : label is "soft_lutpair85";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[22]_i_1\ : label is "soft_lutpair85";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[23]_i_1\ : label is "soft_lutpair84";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[24]_i_1\ : label is "soft_lutpair84";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[25]_i_1\ : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[26]_i_1\ : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[27]_i_1\ : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[28]_i_1\ : label is "soft_lutpair81";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[29]_i_1\ : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[2]_i_1\ : label is "soft_lutpair95";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[30]_i_1\ : label is "soft_lutpair81";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[31]_i_2\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[3]_i_1\ : label is "soft_lutpair94";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[4]_i_1\ : label is "soft_lutpair94";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[5]_i_1\ : label is "soft_lutpair93";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[6]_i_1\ : label is "soft_lutpair93";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[7]_i_1\ : label is "soft_lutpair92";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[8]_i_1\ : label is "soft_lutpair92";
  attribute SOFT_HLUTNM of \s_axi_rdata_i[9]_i_1\ : label is "soft_lutpair91";
  attribute SOFT_HLUTNM of s_axi_rlast_INST_0 : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \s_axi_rresp_i[0]_i_2\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \s_axi_rresp_i[0]_i_3\ : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of s_axi_rvalid_i_i_1 : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of \w_cnt[0]_i_1\ : label is "soft_lutpair75";
  attribute SOFT_HLUTNM of \w_cnt[1]_i_1\ : label is "soft_lutpair75";
  attribute SOFT_HLUTNM of \w_cnt[2]_i_1\ : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \w_cnt[3]_i_1\ : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \w_cnt[4]_i_2\ : label is "soft_lutpair71";
  attribute SOFT_HLUTNM of \w_cnt[5]_i_1\ : label is "soft_lutpair78";
  attribute SOFT_HLUTNM of \w_cnt[6]_i_1\ : label is "soft_lutpair78";
  attribute SOFT_HLUTNM of \w_cnt[7]_i_1\ : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of \w_cnt[8]_i_2\ : label is "soft_lutpair59";
begin
  m_axi_araddr(7 downto 0) <= \^m_axi_araddr\(7 downto 0);
  m_axi_arvalid_i_reg_0 <= \^m_axi_arvalid_i_reg_0\;
  m_axi_awaddr(7 downto 0) <= \^m_axi_awaddr\(7 downto 0);
  m_axi_awvalid <= \^m_axi_awvalid\;
  m_axi_bready_i_reg_0 <= \^m_axi_bready_i_reg_0\;
  m_axi_rready <= \^m_axi_rready\;
  m_axi_wvalid <= \^m_axi_wvalid\;
  s_axi_arready <= \^s_axi_arready\;
  s_axi_awready <= \^s_axi_awready\;
  s_axi_bresp(1 downto 0) <= \^s_axi_bresp\(1 downto 0);
  s_axi_bvalid_i_reg_0 <= \^s_axi_bvalid_i_reg_0\;
  s_axi_rlast <= \^s_axi_rlast\;
  s_axi_rresp(1 downto 0) <= \^s_axi_rresp\(1 downto 0);
  s_axi_rvalid <= \^s_axi_rvalid\;
  s_axi_wready <= \^s_axi_wready\;
\FSM_sequential_r_state[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F5F03F3FF5F03030"
    )
        port map (
      I0 => \^s_axi_rlast\,
      I1 => m_axi_rvalid,
      I2 => \r_state__0\(0),
      I3 => s_axi_rready,
      I4 => \r_state__0\(1),
      I5 => s_axi_arvalid,
      O => \FSM_sequential_r_state[0]_i_1_n_0\
    );
\FSM_sequential_r_state[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CF88"
    )
        port map (
      I0 => m_axi_rvalid,
      I1 => \r_state__0\(0),
      I2 => s_axi_rready,
      I3 => \r_state__0\(1),
      O => \FSM_sequential_r_state[1]_i_1_n_0\
    );
\FSM_sequential_r_state_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \FSM_sequential_r_state[0]_i_1_n_0\,
      Q => \r_state__0\(0),
      R => areset
    );
\FSM_sequential_r_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \FSM_sequential_r_state[1]_i_1_n_0\,
      Q => \r_state__0\(1),
      R => areset
    );
\FSM_sequential_w_state[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF44FFFFFF4F0000"
    )
        port map (
      I0 => m_axi_awvalid_i_i_3_n_0,
      I1 => w_null,
      I2 => \w_state__0\(1),
      I3 => s_axi_awready_i_i_3_n_0,
      I4 => w_state,
      I5 => \w_state__0\(0),
      O => \FSM_sequential_w_state[0]_i_1_n_0\
    );
\FSM_sequential_w_state[0]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => s_axi_wlast,
      I1 => \w_state__0\(2),
      I2 => \w_state__0\(1),
      O => w_null
    );
\FSM_sequential_w_state[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4744FFFF44440000"
    )
        port map (
      I0 => m_axi_awvalid_i_i_2_n_0,
      I1 => \w_state__0\(0),
      I2 => \w_state__0\(2),
      I3 => \aw_addr[7]_i_5_n_0\,
      I4 => w_state,
      I5 => \w_state__0\(1),
      O => \FSM_sequential_w_state[1]_i_1_n_0\
    );
\FSM_sequential_w_state[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000FFFF1F100000"
    )
        port map (
      I0 => \w_state__0\(0),
      I1 => \aw_addr[7]_i_5_n_0\,
      I2 => \w_state__0\(1),
      I3 => \FSM_sequential_w_state[2]_i_2_n_0\,
      I4 => w_state,
      I5 => \w_state__0\(2),
      O => \FSM_sequential_w_state[2]_i_1_n_0\
    );
\FSM_sequential_w_state[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000100000000"
    )
        port map (
      I0 => s_axi_wstrb(0),
      I1 => s_axi_wstrb(2),
      I2 => s_axi_wstrb(1),
      I3 => s_axi_wstrb(3),
      I4 => s_axi_wlast,
      I5 => \w_state__0\(0),
      O => \FSM_sequential_w_state[2]_i_2_n_0\
    );
\FSM_sequential_w_state[2]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF0388"
    )
        port map (
      I0 => s_axi_wvalid,
      I1 => \w_state__0\(0),
      I2 => \w_cnt[8]_i_3_n_0\,
      I3 => \w_state__0\(1),
      I4 => \FSM_sequential_w_state[2]_i_4_n_0\,
      O => w_state
    );
\FSM_sequential_w_state[2]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFC00000AA"
    )
        port map (
      I0 => s_axi_awvalid,
      I1 => s_axi_bready,
      I2 => \^s_axi_bvalid_i_reg_0\,
      I3 => \w_state__0\(0),
      I4 => \w_state__0\(1),
      I5 => \w_state__0\(2),
      O => \FSM_sequential_w_state[2]_i_4_n_0\
    );
\FSM_sequential_w_state_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \FSM_sequential_w_state[0]_i_1_n_0\,
      Q => \w_state__0\(0),
      R => areset
    );
\FSM_sequential_w_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \FSM_sequential_w_state[1]_i_1_n_0\,
      Q => \w_state__0\(1),
      R => areset
    );
\FSM_sequential_w_state_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \FSM_sequential_w_state[2]_i_1_n_0\,
      Q => \w_state__0\(2),
      R => areset
    );
\ar_addr_d[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_axi_araddr(0),
      I1 => \ar_addr_d[7]_i_3_n_0\,
      O => ar_addr_d(0)
    );
\ar_addr_d[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_axi_araddr(1),
      I1 => \ar_addr_d[7]_i_3_n_0\,
      O => ar_addr_d(1)
    );
\ar_addr_d[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2E"
    )
        port map (
      I0 => s_axi_araddr(2),
      I1 => \ar_addr_d[7]_i_3_n_0\,
      I2 => \^m_axi_araddr\(2),
      O => ar_addr_d(2)
    );
\ar_addr_d[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6F60"
    )
        port map (
      I0 => \^m_axi_araddr\(2),
      I1 => \^m_axi_araddr\(3),
      I2 => \ar_addr_d[7]_i_3_n_0\,
      I3 => s_axi_araddr(3),
      O => ar_addr_d(3)
    );
\ar_addr_d[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AFF6A00"
    )
        port map (
      I0 => \^m_axi_araddr\(4),
      I1 => \^m_axi_araddr\(2),
      I2 => \^m_axi_araddr\(3),
      I3 => \ar_addr_d[7]_i_3_n_0\,
      I4 => s_axi_araddr(4),
      O => ar_addr_d(4)
    );
\ar_addr_d[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6AAAFFFF6AAA0000"
    )
        port map (
      I0 => \^m_axi_araddr\(5),
      I1 => \^m_axi_araddr\(3),
      I2 => \^m_axi_araddr\(2),
      I3 => \^m_axi_araddr\(4),
      I4 => \ar_addr_d[7]_i_3_n_0\,
      I5 => s_axi_araddr(5),
      O => ar_addr_d(5)
    );
\ar_addr_d[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9F90"
    )
        port map (
      I0 => \ar_addr_d[7]_i_4_n_0\,
      I1 => \^m_axi_araddr\(6),
      I2 => \ar_addr_d[7]_i_3_n_0\,
      I3 => s_axi_araddr(6),
      O => ar_addr_d(6)
    );
\ar_addr_d[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF04"
    )
        port map (
      I0 => \r_state__0\(1),
      I1 => s_axi_arvalid,
      I2 => \r_state__0\(0),
      I3 => \ar_addr_d[7]_i_3_n_0\,
      O => \ar_addr_d[7]_i_1_n_0\
    );
\ar_addr_d[7]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"9AFF9A00"
    )
        port map (
      I0 => \^m_axi_araddr\(7),
      I1 => \ar_addr_d[7]_i_4_n_0\,
      I2 => \^m_axi_araddr\(6),
      I3 => \ar_addr_d[7]_i_3_n_0\,
      I4 => s_axi_araddr(7),
      O => ar_addr_d(7)
    );
\ar_addr_d[7]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFE000000000000"
    )
        port map (
      I0 => \ar_cnt[6]_i_3_n_0\,
      I1 => ar_cnt(5),
      I2 => ar_cnt(4),
      I3 => ar_cnt(6),
      I4 => \^m_axi_arvalid_i_reg_0\,
      I5 => m_axi_arready,
      O => \ar_addr_d[7]_i_3_n_0\
    );
\ar_addr_d[7]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7FFF"
    )
        port map (
      I0 => \^m_axi_araddr\(4),
      I1 => \^m_axi_araddr\(2),
      I2 => \^m_axi_araddr\(3),
      I3 => \^m_axi_araddr\(5),
      O => \ar_addr_d[7]_i_4_n_0\
    );
\ar_addr_d_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \ar_addr_d[7]_i_1_n_0\,
      D => ar_addr_d(0),
      Q => \^m_axi_araddr\(0),
      R => areset
    );
\ar_addr_d_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \ar_addr_d[7]_i_1_n_0\,
      D => ar_addr_d(1),
      Q => \^m_axi_araddr\(1),
      R => areset
    );
\ar_addr_d_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \ar_addr_d[7]_i_1_n_0\,
      D => ar_addr_d(2),
      Q => \^m_axi_araddr\(2),
      R => areset
    );
\ar_addr_d_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \ar_addr_d[7]_i_1_n_0\,
      D => ar_addr_d(3),
      Q => \^m_axi_araddr\(3),
      R => areset
    );
\ar_addr_d_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \ar_addr_d[7]_i_1_n_0\,
      D => ar_addr_d(4),
      Q => \^m_axi_araddr\(4),
      R => areset
    );
\ar_addr_d_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \ar_addr_d[7]_i_1_n_0\,
      D => ar_addr_d(5),
      Q => \^m_axi_araddr\(5),
      R => areset
    );
\ar_addr_d_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \ar_addr_d[7]_i_1_n_0\,
      D => ar_addr_d(6),
      Q => \^m_axi_araddr\(6),
      R => areset
    );
\ar_addr_d_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \ar_addr_d[7]_i_1_n_0\,
      D => ar_addr_d(7),
      Q => \^m_axi_araddr\(7),
      R => areset
    );
\ar_cnt[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55555555C0CF0000"
    )
        port map (
      I0 => ar_cnt(0),
      I1 => s_axi_arlen(0),
      I2 => s_axi_arsize(1),
      I3 => \ar_cnt[0]_i_2_n_0\,
      I4 => s_axi_arvalid,
      I5 => \ar_addr_d[7]_i_3_n_0\,
      O => \ar_cnt[0]_i_1_n_0\
    );
\ar_cnt[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E44BE11B4B1B4B1B"
    )
        port map (
      I0 => s_axi_arsize(0),
      I1 => s_axi_arlen(2),
      I2 => s_axi_arlen(1),
      I3 => s_axi_araddr(1),
      I4 => s_axi_araddr(0),
      I5 => s_axi_arlen(0),
      O => \ar_cnt[0]_i_2_n_0\
    );
\ar_cnt[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F00F4444"
    )
        port map (
      I0 => \ar_cnt[1]_i_2_n_0\,
      I1 => s_axi_arvalid,
      I2 => ar_cnt(0),
      I3 => ar_cnt(1),
      I4 => \ar_addr_d[7]_i_3_n_0\,
      O => \ar_cnt[1]_i_1_n_0\
    );
\ar_cnt[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4F4F4F444F444F4F"
    )
        port map (
      I0 => s_axi_arlen(1),
      I1 => s_axi_arsize(1),
      I2 => \ar_cnt[1]_i_3_n_0\,
      I3 => s_axi_arsize(0),
      I4 => \ar_cnt[2]_i_4_n_0\,
      I5 => s_axi_arlen(3),
      O => \ar_cnt[1]_i_2_n_0\
    );
\ar_cnt[1]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BEEEEEEEAAAAAAAA"
    )
        port map (
      I0 => s_axi_arsize(1),
      I1 => s_axi_arlen(2),
      I2 => s_axi_araddr(1),
      I3 => s_axi_arlen(1),
      I4 => s_axi_arlen(0),
      I5 => s_axi_arsize(0),
      O => \ar_cnt[1]_i_3_n_0\
    );
\ar_cnt[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7474447444444444"
    )
        port map (
      I0 => \ar_cnt[2]_i_2_n_0\,
      I1 => \ar_addr_d[7]_i_3_n_0\,
      I2 => s_axi_arvalid,
      I3 => s_axi_arsize(1),
      I4 => s_axi_arlen(2),
      I5 => \ar_cnt[2]_i_3_n_0\,
      O => \ar_cnt[2]_i_1_n_0\
    );
\ar_cnt[2]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"56"
    )
        port map (
      I0 => ar_cnt(2),
      I1 => ar_cnt(1),
      I2 => ar_cnt(0),
      O => \ar_cnt[2]_i_2_n_0\
    );
\ar_cnt[2]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFE00F"
    )
        port map (
      I0 => \ar_cnt[2]_i_4_n_0\,
      I1 => s_axi_arsize(0),
      I2 => s_axi_arlen(3),
      I3 => \ar_cnt[3]_i_3_n_0\,
      I4 => s_axi_arsize(1),
      O => \ar_cnt[2]_i_3_n_0\
    );
\ar_cnt[2]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"E8880000"
    )
        port map (
      I0 => s_axi_arlen(1),
      I1 => s_axi_araddr(1),
      I2 => s_axi_araddr(0),
      I3 => s_axi_arlen(0),
      I4 => s_axi_arlen(2),
      O => \ar_cnt[2]_i_4_n_0\
    );
\ar_cnt[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAA9FFFFAAA90000"
    )
        port map (
      I0 => ar_cnt(3),
      I1 => ar_cnt(0),
      I2 => ar_cnt(1),
      I3 => ar_cnt(2),
      I4 => \ar_addr_d[7]_i_3_n_0\,
      I5 => \ar_cnt[3]_i_2_n_0\,
      O => \ar_cnt[3]_i_1_n_0\
    );
\ar_cnt[3]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"D000"
    )
        port map (
      I0 => \ar_cnt[3]_i_3_n_0\,
      I1 => s_axi_arsize(1),
      I2 => s_axi_arlen(3),
      I3 => s_axi_arvalid,
      O => \ar_cnt[3]_i_2_n_0\
    );
\ar_cnt[3]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFFFFFF"
    )
        port map (
      I0 => s_axi_arlen(0),
      I1 => s_axi_arlen(1),
      I2 => s_axi_araddr(1),
      I3 => s_axi_arlen(2),
      I4 => s_axi_arsize(0),
      O => \ar_cnt[3]_i_3_n_0\
    );
\ar_cnt[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAA800000002"
    )
        port map (
      I0 => \ar_addr_d[7]_i_3_n_0\,
      I1 => ar_cnt(1),
      I2 => ar_cnt(0),
      I3 => ar_cnt(3),
      I4 => ar_cnt(2),
      I5 => ar_cnt(4),
      O => \ar_cnt[4]_i_1_n_0\
    );
\ar_cnt[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888880000000080"
    )
        port map (
      I0 => m_axi_arready,
      I1 => \^m_axi_arvalid_i_reg_0\,
      I2 => ar_cnt(6),
      I3 => ar_cnt(4),
      I4 => \ar_cnt[6]_i_3_n_0\,
      I5 => ar_cnt(5),
      O => \ar_cnt[5]_i_1_n_0\
    );
\ar_cnt[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F1"
    )
        port map (
      I0 => \r_state__0\(0),
      I1 => \r_state__0\(1),
      I2 => \ar_addr_d[7]_i_3_n_0\,
      O => \ar_cnt[6]_i_1_n_0\
    );
\ar_cnt[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888888000000000"
    )
        port map (
      I0 => m_axi_arready,
      I1 => \^m_axi_arvalid_i_reg_0\,
      I2 => \ar_cnt[6]_i_3_n_0\,
      I3 => ar_cnt(5),
      I4 => ar_cnt(4),
      I5 => ar_cnt(6),
      O => \ar_cnt[6]_i_2_n_0\
    );
\ar_cnt[6]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => ar_cnt(1),
      I1 => ar_cnt(0),
      I2 => ar_cnt(3),
      I3 => ar_cnt(2),
      O => \ar_cnt[6]_i_3_n_0\
    );
\ar_cnt_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \ar_cnt[6]_i_1_n_0\,
      D => \ar_cnt[0]_i_1_n_0\,
      Q => ar_cnt(0),
      R => areset
    );
\ar_cnt_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \ar_cnt[6]_i_1_n_0\,
      D => \ar_cnt[1]_i_1_n_0\,
      Q => ar_cnt(1),
      R => areset
    );
\ar_cnt_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \ar_cnt[6]_i_1_n_0\,
      D => \ar_cnt[2]_i_1_n_0\,
      Q => ar_cnt(2),
      R => areset
    );
\ar_cnt_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \ar_cnt[6]_i_1_n_0\,
      D => \ar_cnt[3]_i_1_n_0\,
      Q => ar_cnt(3),
      R => areset
    );
\ar_cnt_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \ar_cnt[6]_i_1_n_0\,
      D => \ar_cnt[4]_i_1_n_0\,
      Q => ar_cnt(4),
      R => areset
    );
\ar_cnt_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \ar_cnt[6]_i_1_n_0\,
      D => \ar_cnt[5]_i_1_n_0\,
      Q => ar_cnt(5),
      R => areset
    );
\ar_cnt_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \ar_cnt[6]_i_1_n_0\,
      D => \ar_cnt[6]_i_2_n_0\,
      Q => ar_cnt(6),
      R => areset
    );
\aw_addr[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3333223200002202"
    )
        port map (
      I0 => s_axi_awaddr(0),
      I1 => \w_state__0\(2),
      I2 => \w_state__0\(0),
      I3 => s_axi_wlast,
      I4 => \w_state__0\(1),
      I5 => in22(0),
      O => aw_addr(0)
    );
\aw_addr[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3333223200002202"
    )
        port map (
      I0 => s_axi_awaddr(1),
      I1 => \w_state__0\(2),
      I2 => \w_state__0\(0),
      I3 => s_axi_wlast,
      I4 => \w_state__0\(1),
      I5 => in22(1),
      O => aw_addr(1)
    );
\aw_addr[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3333223200002202"
    )
        port map (
      I0 => s_axi_awaddr(2),
      I1 => \w_state__0\(2),
      I2 => \w_state__0\(0),
      I3 => s_axi_wlast,
      I4 => \w_state__0\(1),
      I5 => in22(2),
      O => aw_addr(2)
    );
\aw_addr[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3333223200002202"
    )
        port map (
      I0 => s_axi_awaddr(3),
      I1 => \w_state__0\(2),
      I2 => \w_state__0\(0),
      I3 => s_axi_wlast,
      I4 => \w_state__0\(1),
      I5 => in22(3),
      O => aw_addr(3)
    );
\aw_addr[3]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^m_axi_awaddr\(2),
      I1 => aw_incr(2),
      O => \aw_addr[3]_i_3_n_0\
    );
\aw_addr[3]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"78"
    )
        port map (
      I0 => \^m_axi_awaddr\(1),
      I1 => p_0_in_0(1),
      I2 => aw_incr(1),
      O => \aw_addr[3]_i_4_n_0\
    );
\aw_addr[3]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"78"
    )
        port map (
      I0 => \^m_axi_awaddr\(0),
      I1 => p_0_in_0(0),
      I2 => aw_incr(0),
      O => \aw_addr[3]_i_5_n_0\
    );
\aw_addr[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3333223200002202"
    )
        port map (
      I0 => s_axi_awaddr(4),
      I1 => \w_state__0\(2),
      I2 => \w_state__0\(0),
      I3 => s_axi_wlast,
      I4 => \w_state__0\(1),
      I5 => in22(4),
      O => aw_addr(4)
    );
\aw_addr[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3333223200002202"
    )
        port map (
      I0 => s_axi_awaddr(5),
      I1 => \w_state__0\(2),
      I2 => \w_state__0\(0),
      I3 => s_axi_wlast,
      I4 => \w_state__0\(1),
      I5 => in22(5),
      O => aw_addr(5)
    );
\aw_addr[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3333223200002202"
    )
        port map (
      I0 => s_axi_awaddr(6),
      I1 => \w_state__0\(2),
      I2 => \w_state__0\(0),
      I3 => s_axi_wlast,
      I4 => \w_state__0\(1),
      I5 => in22(6),
      O => aw_addr(6)
    );
\aw_addr[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEEEFEEEFEEFFFF"
    )
        port map (
      I0 => \aw_addr[7]_i_3_n_0\,
      I1 => aw_incr_1,
      I2 => \aw_addr[7]_i_5_n_0\,
      I3 => \aw_addr[7]_i_6_n_0\,
      I4 => \w_state__0\(1),
      I5 => \aw_addr[7]_i_7_n_0\,
      O => \aw_addr[7]_i_1_n_0\
    );
\aw_addr[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3333223200002202"
    )
        port map (
      I0 => s_axi_awaddr(7),
      I1 => \w_state__0\(2),
      I2 => \w_state__0\(0),
      I3 => s_axi_wlast,
      I4 => \w_state__0\(1),
      I5 => in22(7),
      O => aw_addr(7)
    );
\aw_addr[7]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000008000"
    )
        port map (
      I0 => s_axi_awready_i_i_7_n_0,
      I1 => s_axi_wvalid,
      I2 => \w_state__0\(0),
      I3 => s_axi_awready_i_i_6_n_0,
      I4 => \w_state__0\(1),
      I5 => \w_state__0\(2),
      O => \aw_addr[7]_i_3_n_0\
    );
\aw_addr[7]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0002"
    )
        port map (
      I0 => s_axi_awvalid,
      I1 => \w_state__0\(1),
      I2 => \w_state__0\(2),
      I3 => \w_state__0\(0),
      O => aw_incr_1
    );
\aw_addr[7]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => s_axi_wlast,
      I1 => w_null_reg_n_0,
      O => \aw_addr[7]_i_5_n_0\
    );
\aw_addr[7]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000EEE0"
    )
        port map (
      I0 => aw_done_reg_n_0,
      I1 => m_axi_awready,
      I2 => w_done_reg_n_0,
      I3 => m_axi_wready,
      I4 => \w_cnt[4]_i_2_n_0\,
      I5 => \w_state__0\(0),
      O => \aw_addr[7]_i_6_n_0\
    );
\aw_addr[7]_i_7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFBFFFFF"
    )
        port map (
      I0 => \w_state__0\(2),
      I1 => s_axi_wvalid,
      I2 => \w_state__0\(0),
      I3 => s_axi_wlast,
      I4 => s_axi_awready_i_i_6_n_0,
      O => \aw_addr[7]_i_7_n_0\
    );
\aw_addr_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \aw_addr[7]_i_1_n_0\,
      D => aw_addr(0),
      Q => \^m_axi_awaddr\(0),
      R => areset
    );
\aw_addr_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \aw_addr[7]_i_1_n_0\,
      D => aw_addr(1),
      Q => \^m_axi_awaddr\(1),
      R => areset
    );
\aw_addr_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \aw_addr[7]_i_1_n_0\,
      D => aw_addr(2),
      Q => \^m_axi_awaddr\(2),
      R => areset
    );
\aw_addr_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \aw_addr[7]_i_1_n_0\,
      D => aw_addr(3),
      Q => \^m_axi_awaddr\(3),
      R => areset
    );
\aw_addr_reg[3]_i_2\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \aw_addr_reg[3]_i_2_n_0\,
      CO(2) => \aw_addr_reg[3]_i_2_n_1\,
      CO(1) => \aw_addr_reg[3]_i_2_n_2\,
      CO(0) => \aw_addr_reg[3]_i_2_n_3\,
      CYINIT => '0',
      DI(3) => '0',
      DI(2) => \^m_axi_awaddr\(2),
      DI(1 downto 0) => aw_incr(1 downto 0),
      O(3 downto 0) => in22(3 downto 0),
      S(3) => \^m_axi_awaddr\(3),
      S(2) => \aw_addr[3]_i_3_n_0\,
      S(1) => \aw_addr[3]_i_4_n_0\,
      S(0) => \aw_addr[3]_i_5_n_0\
    );
\aw_addr_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \aw_addr[7]_i_1_n_0\,
      D => aw_addr(4),
      Q => \^m_axi_awaddr\(4),
      R => areset
    );
\aw_addr_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \aw_addr[7]_i_1_n_0\,
      D => aw_addr(5),
      Q => \^m_axi_awaddr\(5),
      R => areset
    );
\aw_addr_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \aw_addr[7]_i_1_n_0\,
      D => aw_addr(6),
      Q => \^m_axi_awaddr\(6),
      R => areset
    );
\aw_addr_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \aw_addr[7]_i_1_n_0\,
      D => aw_addr(7),
      Q => \^m_axi_awaddr\(7),
      R => areset
    );
\aw_addr_reg[7]_i_8\: unisim.vcomponents.CARRY4
     port map (
      CI => \aw_addr_reg[3]_i_2_n_0\,
      CO(3) => \NLW_aw_addr_reg[7]_i_8_CO_UNCONNECTED\(3),
      CO(2) => \aw_addr_reg[7]_i_8_n_1\,
      CO(1) => \aw_addr_reg[7]_i_8_n_2\,
      CO(0) => \aw_addr_reg[7]_i_8_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => in22(7 downto 4),
      S(3 downto 0) => \^m_axi_awaddr\(7 downto 4)
    );
aw_done_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0F0F011F0F0F010"
    )
        port map (
      I0 => m_axi_wready,
      I1 => w_done_reg_n_0,
      I2 => aw_done_reg_n_0,
      I3 => \w_state__0\(0),
      I4 => \w_cnt[4]_i_2_n_0\,
      I5 => m_axi_awready,
      O => aw_done_i_1_n_0
    );
aw_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => aw_done_i_1_n_0,
      Q => aw_done_reg_n_0,
      R => areset
    );
\aw_incr[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"01FF0100"
    )
        port map (
      I0 => s_axi_awsize(0),
      I1 => s_axi_awsize(1),
      I2 => s_axi_awsize(2),
      I3 => aw_incr_1,
      I4 => aw_incr(0),
      O => \aw_incr[0]_i_1_n_0\
    );
\aw_incr[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"02FF0200"
    )
        port map (
      I0 => s_axi_awsize(0),
      I1 => s_axi_awsize(1),
      I2 => s_axi_awsize(2),
      I3 => aw_incr_1,
      I4 => aw_incr(1),
      O => \aw_incr[1]_i_1_n_0\
    );
\aw_incr[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFEF000000E0"
    )
        port map (
      I0 => s_axi_awsize(2),
      I1 => s_axi_awsize(1),
      I2 => s_axi_awvalid,
      I3 => s_axi_awready_i_i_2_n_0,
      I4 => \w_state__0\(0),
      I5 => aw_incr(2),
      O => \aw_incr[2]_i_1_n_0\
    );
\aw_incr_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \aw_incr[0]_i_1_n_0\,
      Q => aw_incr(0),
      R => areset
    );
\aw_incr_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \aw_incr[1]_i_1_n_0\,
      Q => aw_incr(1),
      R => areset
    );
\aw_incr_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \aw_incr[2]_i_1_n_0\,
      Q => aw_incr(2),
      R => areset
    );
\b_cnt[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => b_cnt_reg(0),
      O => p_0_in(0)
    );
\b_cnt[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => b_cnt_reg(0),
      I1 => b_cnt_reg(1),
      O => p_0_in(1)
    );
\b_cnt[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => b_cnt_reg(2),
      I1 => b_cnt_reg(1),
      I2 => b_cnt_reg(0),
      O => \b_cnt[2]_i_1_n_0\
    );
\b_cnt[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => b_cnt_reg(3),
      I1 => b_cnt_reg(2),
      I2 => b_cnt_reg(0),
      I3 => b_cnt_reg(1),
      O => \b_cnt[3]_i_1_n_0\
    );
\b_cnt[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => b_cnt_reg(4),
      I1 => b_cnt_reg(3),
      I2 => b_cnt_reg(1),
      I3 => b_cnt_reg(0),
      I4 => b_cnt_reg(2),
      O => \b_cnt[4]_i_1_n_0\
    );
\b_cnt[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6AAAAAAAAAAAAAAA"
    )
        port map (
      I0 => b_cnt_reg(5),
      I1 => b_cnt_reg(4),
      I2 => b_cnt_reg(2),
      I3 => b_cnt_reg(0),
      I4 => b_cnt_reg(1),
      I5 => b_cnt_reg(3),
      O => \b_cnt[5]_i_1_n_0\
    );
\b_cnt[6]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => b_cnt_reg(6),
      I1 => \b_cnt[8]_i_4_n_0\,
      O => \b_cnt[6]_i_1_n_0\
    );
\b_cnt[7]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A6"
    )
        port map (
      I0 => b_cnt_reg(7),
      I1 => b_cnt_reg(6),
      I2 => \b_cnt[8]_i_4_n_0\,
      O => \b_cnt[7]_i_1_n_0\
    );
\b_cnt[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ABBB"
    )
        port map (
      I0 => areset,
      I1 => s_axi_bvalid_i_i_2_n_0,
      I2 => \^s_axi_bvalid_i_reg_0\,
      I3 => s_axi_bready,
      O => \b_cnt[8]_i_1_n_0\
    );
\b_cnt[8]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0888"
    )
        port map (
      I0 => m_axi_bvalid,
      I1 => \^m_axi_bready_i_reg_0\,
      I2 => s_axi_bready,
      I3 => \^s_axi_bvalid_i_reg_0\,
      O => b_cnt
    );
\b_cnt[8]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9AAA"
    )
        port map (
      I0 => b_cnt_reg(8),
      I1 => \b_cnt[8]_i_4_n_0\,
      I2 => b_cnt_reg(6),
      I3 => b_cnt_reg(7),
      O => m_axi_bready_i2(8)
    );
\b_cnt[8]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7FFFFFFFFFFFFFFF"
    )
        port map (
      I0 => b_cnt_reg(4),
      I1 => b_cnt_reg(2),
      I2 => b_cnt_reg(0),
      I3 => b_cnt_reg(1),
      I4 => b_cnt_reg(3),
      I5 => b_cnt_reg(5),
      O => \b_cnt[8]_i_4_n_0\
    );
\b_cnt_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => b_cnt,
      D => p_0_in(0),
      Q => b_cnt_reg(0),
      R => \b_cnt[8]_i_1_n_0\
    );
\b_cnt_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => b_cnt,
      D => p_0_in(1),
      Q => b_cnt_reg(1),
      R => \b_cnt[8]_i_1_n_0\
    );
\b_cnt_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => b_cnt,
      D => \b_cnt[2]_i_1_n_0\,
      Q => b_cnt_reg(2),
      R => \b_cnt[8]_i_1_n_0\
    );
\b_cnt_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => b_cnt,
      D => \b_cnt[3]_i_1_n_0\,
      Q => b_cnt_reg(3),
      R => \b_cnt[8]_i_1_n_0\
    );
\b_cnt_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => b_cnt,
      D => \b_cnt[4]_i_1_n_0\,
      Q => b_cnt_reg(4),
      R => \b_cnt[8]_i_1_n_0\
    );
\b_cnt_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => b_cnt,
      D => \b_cnt[5]_i_1_n_0\,
      Q => b_cnt_reg(5),
      R => \b_cnt[8]_i_1_n_0\
    );
\b_cnt_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => b_cnt,
      D => \b_cnt[6]_i_1_n_0\,
      Q => b_cnt_reg(6),
      R => \b_cnt[8]_i_1_n_0\
    );
\b_cnt_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => b_cnt,
      D => \b_cnt[7]_i_1_n_0\,
      Q => b_cnt_reg(7),
      R => \b_cnt[8]_i_1_n_0\
    );
\b_cnt_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => b_cnt,
      D => m_axi_bready_i2(8),
      Q => b_cnt_reg(8),
      R => \b_cnt[8]_i_1_n_0\
    );
\i__carry_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \w_cnt_reg_n_0_[7]\,
      I1 => b_cnt_reg(7),
      I2 => b_cnt_reg(6),
      I3 => \w_cnt_reg_n_0_[6]\,
      I4 => b_cnt_reg(8),
      I5 => \w_cnt_reg_n_0_[8]\,
      O => \i__carry_i_1_n_0\
    );
\i__carry_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \w_cnt_reg_n_0_[5]\,
      I1 => b_cnt_reg(5),
      I2 => b_cnt_reg(3),
      I3 => \w_cnt_reg_n_0_[3]\,
      I4 => b_cnt_reg(4),
      I5 => \w_cnt_reg_n_0_[4]\,
      O => \i__carry_i_2_n_0\
    );
\i__carry_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \w_cnt_reg_n_0_[2]\,
      I1 => b_cnt_reg(2),
      I2 => b_cnt_reg(0),
      I3 => \w_cnt_reg_n_0_[0]\,
      I4 => b_cnt_reg(1),
      I5 => \w_cnt_reg_n_0_[1]\,
      O => \i__carry_i_3_n_0\
    );
\m_aruser_reg[sc_route][2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => m_aruser,
      D => '1',
      Q => m_axi_aruser(0),
      R => areset
    );
\m_axi_arprot_i[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \r_state__0\(0),
      I1 => s_axi_arvalid,
      I2 => \r_state__0\(1),
      O => m_aruser
    );
\m_axi_arprot_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => m_aruser,
      D => s_axi_arprot(0),
      Q => m_axi_arprot(0),
      R => areset
    );
\m_axi_arprot_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => m_aruser,
      D => s_axi_arprot(1),
      Q => m_axi_arprot(1),
      R => areset
    );
\m_axi_arprot_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => m_aruser,
      D => s_axi_arprot(2),
      Q => m_axi_arprot(2),
      R => areset
    );
m_axi_arvalid_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BB88BB88BB880B88"
    )
        port map (
      I0 => s_axi_arvalid,
      I1 => m_axi_arvalid_i_i_2_n_0,
      I2 => m_axi_arready,
      I3 => \^m_axi_arvalid_i_reg_0\,
      I4 => ar_cnt(6),
      I5 => m_axi_arvalid_i_i_3_n_0,
      O => m_axi_arvalid_i_i_1_n_0
    );
m_axi_arvalid_i_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \r_state__0\(1),
      I1 => \r_state__0\(0),
      O => m_axi_arvalid_i_i_2_n_0
    );
m_axi_arvalid_i_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => ar_cnt(2),
      I1 => ar_cnt(3),
      I2 => ar_cnt(0),
      I3 => ar_cnt(1),
      I4 => ar_cnt(5),
      I5 => ar_cnt(4),
      O => m_axi_arvalid_i_i_3_n_0
    );
m_axi_arvalid_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => m_axi_arvalid_i_i_1_n_0,
      Q => \^m_axi_arvalid_i_reg_0\,
      R => areset
    );
m_axi_awvalid_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555FFFF55554000"
    )
        port map (
      I0 => m_axi_awvalid_i_i_2_n_0,
      I1 => s_axi_wvalid,
      I2 => \w_state__0\(0),
      I3 => m_axi_awvalid_i_i_3_n_0,
      I4 => aw_done,
      I5 => \^m_axi_awvalid\,
      O => m_axi_awvalid_i_i_1_n_0
    );
m_axi_awvalid_i_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAAAAAAB"
    )
        port map (
      I0 => s_axi_awready_i_i_2_n_0,
      I1 => s_axi_wlast,
      I2 => s_axi_wstrb(3),
      I3 => s_axi_wstrb(1),
      I4 => s_axi_wstrb(2),
      I5 => s_axi_wstrb(0),
      O => m_axi_awvalid_i_i_2_n_0
    );
m_axi_awvalid_i_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => s_axi_awready_i_i_7_n_0,
      I1 => s_axi_wstrb(0),
      I2 => s_axi_wstrb(2),
      I3 => s_axi_wstrb(1),
      I4 => s_axi_wstrb(3),
      O => m_axi_awvalid_i_i_3_n_0
    );
m_axi_awvalid_i_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000FF000000E0"
    )
        port map (
      I0 => m_axi_wready,
      I1 => w_done_reg_n_0,
      I2 => aw_done_reg_n_0,
      I3 => \w_state__0\(0),
      I4 => \w_cnt[4]_i_2_n_0\,
      I5 => m_axi_awready,
      O => aw_done
    );
m_axi_awvalid_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => m_axi_awvalid_i_i_1_n_0,
      Q => \^m_axi_awvalid\,
      R => areset
    );
m_axi_bready_i1_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => m_axi_bready_i142_in,
      CO(2) => m_axi_bready_i1_carry_n_1,
      CO(1) => m_axi_bready_i1_carry_n_2,
      CO(0) => m_axi_bready_i1_carry_n_3,
      CYINIT => '1',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => NLW_m_axi_bready_i1_carry_O_UNCONNECTED(3 downto 0),
      S(3) => m_axi_bready_i1_carry_i_1_n_0,
      S(2) => m_axi_bready_i1_carry_i_2_n_0,
      S(1) => m_axi_bready_i1_carry_i_3_n_0,
      S(0) => m_axi_bready_i1_carry_i_4_n_0
    );
m_axi_bready_i1_carry_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"DFFF"
    )
        port map (
      I0 => b_cnt_reg(8),
      I1 => \b_cnt[8]_i_4_n_0\,
      I2 => b_cnt_reg(6),
      I3 => b_cnt_reg(7),
      O => m_axi_bready_i1_carry_i_1_n_0
    );
m_axi_bready_i1_carry_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8028010002008028"
    )
        port map (
      I0 => m_axi_bready_i1_carry_i_5_n_0,
      I1 => \b_cnt[8]_i_4_n_0\,
      I2 => \w_cnt_reg_n_0_[6]\,
      I3 => b_cnt_reg(6),
      I4 => \w_cnt_reg_n_0_[7]\,
      I5 => b_cnt_reg(7),
      O => m_axi_bready_i1_carry_i_2_n_0
    );
m_axi_bready_i1_carry_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8020018040102040"
    )
        port map (
      I0 => \w_cnt_reg_n_0_[4]\,
      I1 => \w_cnt_reg_n_0_[3]\,
      I2 => m_axi_bready_i1_carry_i_6_n_0,
      I3 => b_cnt_reg(3),
      I4 => m_axi_bready_i1_carry_i_7_n_0,
      I5 => b_cnt_reg(4),
      O => m_axi_bready_i1_carry_i_3_n_0
    );
m_axi_bready_i1_carry_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000900906900000"
    )
        port map (
      I0 => b_cnt_reg(2),
      I1 => \w_cnt_reg_n_0_[2]\,
      I2 => \w_cnt_reg_n_0_[1]\,
      I3 => b_cnt_reg(1),
      I4 => b_cnt_reg(0),
      I5 => \w_cnt_reg_n_0_[0]\,
      O => m_axi_bready_i1_carry_i_4_n_0
    );
m_axi_bready_i1_carry_i_5: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => b_cnt_reg(8),
      I1 => \w_cnt_reg_n_0_[8]\,
      O => m_axi_bready_i1_carry_i_5_n_0
    );
m_axi_bready_i1_carry_i_6: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => b_cnt_reg(5),
      I1 => \w_cnt_reg_n_0_[5]\,
      O => m_axi_bready_i1_carry_i_6_n_0
    );
m_axi_bready_i1_carry_i_7: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => b_cnt_reg(1),
      I1 => b_cnt_reg(0),
      I2 => b_cnt_reg(2),
      O => m_axi_bready_i1_carry_i_7_n_0
    );
\m_axi_bready_i1_inferred__0/i__carry\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \NLW_m_axi_bready_i1_inferred__0/i__carry_CO_UNCONNECTED\(3),
      CO(2) => m_axi_bready_i1,
      CO(1) => \m_axi_bready_i1_inferred__0/i__carry_n_2\,
      CO(0) => \m_axi_bready_i1_inferred__0/i__carry_n_3\,
      CYINIT => '1',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \NLW_m_axi_bready_i1_inferred__0/i__carry_O_UNCONNECTED\(3 downto 0),
      S(3) => '0',
      S(2) => \i__carry_i_1_n_0\,
      S(1) => \i__carry_i_2_n_0\,
      S(0) => \i__carry_i_3_n_0\
    );
m_axi_bready_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF777088887770"
    )
        port map (
      I0 => s_axi_bready,
      I1 => \^s_axi_bvalid_i_reg_0\,
      I2 => s_axi_awready_i_i_2_n_0,
      I3 => \w_state__0\(0),
      I4 => \^m_axi_bready_i_reg_0\,
      I5 => s_axi_bvalid_i_i_2_n_0,
      O => m_axi_bready_i_i_1_n_0
    );
m_axi_bready_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => m_axi_bready_i_i_1_n_0,
      Q => \^m_axi_bready_i_reg_0\,
      R => areset
    );
m_axi_rready_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAEEFEAAAA2202"
    )
        port map (
      I0 => m_axi_rready_i,
      I1 => \r_state__0\(1),
      I2 => \r_state__0\(0),
      I3 => m_axi_rvalid,
      I4 => m_axi_rready_i_i_3_n_0,
      I5 => \^m_axi_rready\,
      O => m_axi_rready_i_i_1_n_0
    );
m_axi_rready_i_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00E2"
    )
        port map (
      I0 => s_axi_arvalid,
      I1 => \r_state__0\(1),
      I2 => s_axi_rready,
      I3 => \r_state__0\(0),
      O => m_axi_rready_i
    );
m_axi_rready_i_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"44444440"
    )
        port map (
      I0 => \r_state__0\(0),
      I1 => s_axi_rready,
      I2 => \r_beats_reg_n_0_[7]\,
      I3 => \r_beats_reg_n_0_[6]\,
      I4 => s_axi_rlast_INST_0_i_1_n_0,
      O => m_axi_rready_i_i_3_n_0
    );
m_axi_rready_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => m_axi_rready_i_i_1_n_0,
      Q => \^m_axi_rready\,
      R => areset
    );
\m_axi_wdata_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(0),
      Q => m_axi_wdata(0),
      R => '0'
    );
\m_axi_wdata_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(10),
      Q => m_axi_wdata(10),
      R => '0'
    );
\m_axi_wdata_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(11),
      Q => m_axi_wdata(11),
      R => '0'
    );
\m_axi_wdata_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(12),
      Q => m_axi_wdata(12),
      R => '0'
    );
\m_axi_wdata_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(13),
      Q => m_axi_wdata(13),
      R => '0'
    );
\m_axi_wdata_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(14),
      Q => m_axi_wdata(14),
      R => '0'
    );
\m_axi_wdata_i_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(15),
      Q => m_axi_wdata(15),
      R => '0'
    );
\m_axi_wdata_i_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(16),
      Q => m_axi_wdata(16),
      R => '0'
    );
\m_axi_wdata_i_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(17),
      Q => m_axi_wdata(17),
      R => '0'
    );
\m_axi_wdata_i_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(18),
      Q => m_axi_wdata(18),
      R => '0'
    );
\m_axi_wdata_i_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(19),
      Q => m_axi_wdata(19),
      R => '0'
    );
\m_axi_wdata_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(1),
      Q => m_axi_wdata(1),
      R => '0'
    );
\m_axi_wdata_i_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(20),
      Q => m_axi_wdata(20),
      R => '0'
    );
\m_axi_wdata_i_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(21),
      Q => m_axi_wdata(21),
      R => '0'
    );
\m_axi_wdata_i_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(22),
      Q => m_axi_wdata(22),
      R => '0'
    );
\m_axi_wdata_i_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(23),
      Q => m_axi_wdata(23),
      R => '0'
    );
\m_axi_wdata_i_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(24),
      Q => m_axi_wdata(24),
      R => '0'
    );
\m_axi_wdata_i_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(25),
      Q => m_axi_wdata(25),
      R => '0'
    );
\m_axi_wdata_i_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(26),
      Q => m_axi_wdata(26),
      R => '0'
    );
\m_axi_wdata_i_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(27),
      Q => m_axi_wdata(27),
      R => '0'
    );
\m_axi_wdata_i_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(28),
      Q => m_axi_wdata(28),
      R => '0'
    );
\m_axi_wdata_i_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(29),
      Q => m_axi_wdata(29),
      R => '0'
    );
\m_axi_wdata_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(2),
      Q => m_axi_wdata(2),
      R => '0'
    );
\m_axi_wdata_i_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(30),
      Q => m_axi_wdata(30),
      R => '0'
    );
\m_axi_wdata_i_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(31),
      Q => m_axi_wdata(31),
      R => '0'
    );
\m_axi_wdata_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(3),
      Q => m_axi_wdata(3),
      R => '0'
    );
\m_axi_wdata_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(4),
      Q => m_axi_wdata(4),
      R => '0'
    );
\m_axi_wdata_i_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(5),
      Q => m_axi_wdata(5),
      R => '0'
    );
\m_axi_wdata_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(6),
      Q => m_axi_wdata(6),
      R => '0'
    );
\m_axi_wdata_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(7),
      Q => m_axi_wdata(7),
      R => '0'
    );
\m_axi_wdata_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(8),
      Q => m_axi_wdata(8),
      R => '0'
    );
\m_axi_wdata_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wdata(9),
      Q => m_axi_wdata(9),
      R => '0'
    );
\m_axi_wstrb_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wstrb(0),
      Q => m_axi_wstrb(0),
      R => '0'
    );
\m_axi_wstrb_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wstrb(1),
      Q => m_axi_wstrb(1),
      R => '0'
    );
\m_axi_wstrb_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wstrb(2),
      Q => m_axi_wstrb(2),
      R => '0'
    );
\m_axi_wstrb_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wstrb(3),
      Q => m_axi_wstrb(3),
      R => '0'
    );
m_axi_wvalid_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555FFFF55554000"
    )
        port map (
      I0 => m_axi_awvalid_i_i_2_n_0,
      I1 => s_axi_wvalid,
      I2 => \w_state__0\(0),
      I3 => m_axi_awvalid_i_i_3_n_0,
      I4 => w_done,
      I5 => \^m_axi_wvalid\,
      O => m_axi_wvalid_i_i_1_n_0
    );
m_axi_wvalid_i_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000FF000000A8"
    )
        port map (
      I0 => w_done_reg_n_0,
      I1 => m_axi_awready,
      I2 => aw_done_reg_n_0,
      I3 => \w_state__0\(0),
      I4 => \w_cnt[4]_i_2_n_0\,
      I5 => m_axi_wready,
      O => w_done
    );
m_axi_wvalid_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => m_axi_wvalid_i_i_1_n_0,
      Q => \^m_axi_wvalid\,
      R => areset
    );
\r_beats[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"3A"
    )
        port map (
      I0 => s_axi_arlen(0),
      I1 => \r_beats_reg_n_0_[0]\,
      I2 => \r_state__0\(1),
      O => r_beats(0)
    );
\r_beats[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"C3AA"
    )
        port map (
      I0 => s_axi_arlen(1),
      I1 => \r_beats_reg_n_0_[0]\,
      I2 => \r_beats_reg_n_0_[1]\,
      I3 => \r_state__0\(1),
      O => r_beats(1)
    );
\r_beats[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CCC3AAAA"
    )
        port map (
      I0 => s_axi_arlen(2),
      I1 => \r_beats_reg_n_0_[2]\,
      I2 => \r_beats_reg_n_0_[1]\,
      I3 => \r_beats_reg_n_0_[0]\,
      I4 => \r_state__0\(1),
      O => r_beats(2)
    );
\r_beats[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFE0101FF00FF00"
    )
        port map (
      I0 => \r_beats_reg_n_0_[2]\,
      I1 => \r_beats_reg_n_0_[1]\,
      I2 => \r_beats_reg_n_0_[0]\,
      I3 => s_axi_arlen(3),
      I4 => \r_beats_reg_n_0_[3]\,
      I5 => \r_state__0\(1),
      O => r_beats(3)
    );
\r_beats[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAA800000002"
    )
        port map (
      I0 => \r_beats[4]_i_2_n_0\,
      I1 => \r_beats_reg_n_0_[3]\,
      I2 => \r_beats_reg_n_0_[0]\,
      I3 => \r_beats_reg_n_0_[1]\,
      I4 => \r_beats_reg_n_0_[2]\,
      I5 => \r_beats_reg_n_0_[4]\,
      O => r_beats(4)
    );
\r_beats[4]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \r_state__0\(1),
      I1 => \r_state__0\(0),
      O => \r_beats[4]_i_2_n_0\
    );
\r_beats[5]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"82"
    )
        port map (
      I0 => \r_state__0\(1),
      I1 => \r_beats[5]_i_2_n_0\,
      I2 => \r_beats_reg_n_0_[5]\,
      O => r_beats(5)
    );
\r_beats[5]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \r_beats_reg_n_0_[4]\,
      I1 => \r_beats_reg_n_0_[2]\,
      I2 => \r_beats_reg_n_0_[1]\,
      I3 => \r_beats_reg_n_0_[0]\,
      I4 => \r_beats_reg_n_0_[3]\,
      O => \r_beats[5]_i_2_n_0\
    );
\r_beats[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"82"
    )
        port map (
      I0 => \r_state__0\(1),
      I1 => s_axi_rlast_INST_0_i_1_n_0,
      I2 => \r_beats_reg_n_0_[6]\,
      O => r_beats(6)
    );
\r_beats[7]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"04040E04"
    )
        port map (
      I0 => \r_state__0\(1),
      I1 => s_axi_arvalid,
      I2 => \r_state__0\(0),
      I3 => s_axi_rready,
      I4 => \^s_axi_rlast\,
      O => \r_beats[7]_i_1_n_0\
    );
\r_beats[7]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A802"
    )
        port map (
      I0 => \r_state__0\(1),
      I1 => \r_beats_reg_n_0_[6]\,
      I2 => s_axi_rlast_INST_0_i_1_n_0,
      I3 => \r_beats_reg_n_0_[7]\,
      O => r_beats(7)
    );
\r_beats_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \r_beats[7]_i_1_n_0\,
      D => r_beats(0),
      Q => \r_beats_reg_n_0_[0]\,
      R => areset
    );
\r_beats_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \r_beats[7]_i_1_n_0\,
      D => r_beats(1),
      Q => \r_beats_reg_n_0_[1]\,
      R => areset
    );
\r_beats_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \r_beats[7]_i_1_n_0\,
      D => r_beats(2),
      Q => \r_beats_reg_n_0_[2]\,
      R => areset
    );
\r_beats_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \r_beats[7]_i_1_n_0\,
      D => r_beats(3),
      Q => \r_beats_reg_n_0_[3]\,
      R => areset
    );
\r_beats_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \r_beats[7]_i_1_n_0\,
      D => r_beats(4),
      Q => \r_beats_reg_n_0_[4]\,
      R => areset
    );
\r_beats_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \r_beats[7]_i_1_n_0\,
      D => r_beats(5),
      Q => \r_beats_reg_n_0_[5]\,
      R => areset
    );
\r_beats_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \r_beats[7]_i_1_n_0\,
      D => r_beats(6),
      Q => \r_beats_reg_n_0_[6]\,
      R => areset
    );
\r_beats_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \r_beats[7]_i_1_n_0\,
      D => r_beats(7),
      Q => \r_beats_reg_n_0_[7]\,
      R => areset
    );
s_axi_arready_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AF04"
    )
        port map (
      I0 => \r_state__0\(1),
      I1 => s_axi_arvalid,
      I2 => \r_state__0\(0),
      I3 => \^s_axi_arready\,
      O => s_axi_arready_i_i_1_n_0
    );
s_axi_arready_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_arready_i_i_1_n_0,
      Q => \^s_axi_arready\,
      R => areset
    );
s_axi_awready_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DDCCDFFFDDCCD000"
    )
        port map (
      I0 => s_axi_awready_i_i_2_n_0,
      I1 => s_axi_awready_i_i_3_n_0,
      I2 => s_axi_awready_i_i_4_n_0,
      I3 => s_axi_wlast,
      I4 => s_axi_awready_i_i_5_n_0,
      I5 => \^s_axi_awready\,
      O => s_axi_awready_i_i_1_n_0
    );
s_axi_awready_i_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \w_state__0\(1),
      I1 => \w_state__0\(2),
      O => s_axi_awready_i_i_2_n_0
    );
s_axi_awready_i_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1110"
    )
        port map (
      I0 => \w_state__0\(0),
      I1 => \w_state__0\(2),
      I2 => w_null_reg_n_0,
      I3 => s_axi_wlast,
      O => s_axi_awready_i_i_3_n_0
    );
s_axi_awready_i_i_4: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000080"
    )
        port map (
      I0 => s_axi_wvalid,
      I1 => \w_state__0\(0),
      I2 => s_axi_awready_i_i_6_n_0,
      I3 => \w_state__0\(2),
      I4 => s_axi_awready_i_i_7_n_0,
      O => s_axi_awready_i_i_4_n_0
    );
s_axi_awready_i_i_5: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000AAFE0000"
    )
        port map (
      I0 => \w_state__0\(0),
      I1 => s_axi_wlast,
      I2 => w_null_reg_n_0,
      I3 => \w_cnt[8]_i_3_n_0\,
      I4 => \w_state__0\(1),
      I5 => \w_state__0\(2),
      O => s_axi_awready_i_i_5_n_0
    );
s_axi_awready_i_i_6: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => s_axi_wstrb(3),
      I1 => s_axi_wstrb(1),
      I2 => s_axi_wstrb(2),
      I3 => s_axi_wstrb(0),
      O => s_axi_awready_i_i_6_n_0
    );
s_axi_awready_i_i_7: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => \w_cnt_reg_n_0_[2]\,
      I1 => \w_cnt_reg_n_0_[7]\,
      I2 => \w_cnt_reg_n_0_[6]\,
      I3 => s_axi_awready_i_i_8_n_0,
      O => s_axi_awready_i_i_7_n_0
    );
s_axi_awready_i_i_8: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => \w_cnt_reg_n_0_[0]\,
      I1 => \w_cnt_reg_n_0_[1]\,
      I2 => \w_cnt_reg_n_0_[3]\,
      I3 => \w_cnt_reg_n_0_[8]\,
      I4 => \w_cnt_reg_n_0_[5]\,
      I5 => \w_cnt_reg_n_0_[4]\,
      O => s_axi_awready_i_i_8_n_0
    );
s_axi_awready_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_awready_i_i_1_n_0,
      Q => \^s_axi_awready\,
      R => areset
    );
\s_axi_bresp_i[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000EAAAE2A2"
    )
        port map (
      I0 => \^s_axi_bresp\(0),
      I1 => s_axi_bresp_i,
      I2 => m_axi_bresp(0),
      I3 => m_axi_bresp(1),
      I4 => \^s_axi_bresp\(1),
      I5 => \s_axi_bresp_i[0]_i_3_n_0\,
      O => \s_axi_bresp_i[0]_i_1_n_0\
    );
\s_axi_bresp_i[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^m_axi_bready_i_reg_0\,
      I1 => m_axi_bvalid,
      O => s_axi_bresp_i
    );
\s_axi_bresp_i[0]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => areset,
      I1 => s_axi_bready,
      I2 => \^s_axi_bvalid_i_reg_0\,
      O => \s_axi_bresp_i[0]_i_3_n_0\
    );
\s_axi_bresp_i[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000EAAA"
    )
        port map (
      I0 => \^s_axi_bresp\(1),
      I1 => m_axi_bvalid,
      I2 => \^m_axi_bready_i_reg_0\,
      I3 => m_axi_bresp(1),
      I4 => \s_axi_bresp_i[1]_i_2_n_0\,
      I5 => areset,
      O => \s_axi_bresp_i[1]_i_1_n_0\
    );
\s_axi_bresp_i[1]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^s_axi_bvalid_i_reg_0\,
      I1 => s_axi_bready,
      O => \s_axi_bresp_i[1]_i_2_n_0\
    );
\s_axi_bresp_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \s_axi_bresp_i[0]_i_1_n_0\,
      Q => \^s_axi_bresp\(0),
      R => '0'
    );
\s_axi_bresp_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \s_axi_bresp_i[1]_i_1_n_0\,
      Q => \^s_axi_bresp\(1),
      R => '0'
    );
s_axi_bvalid_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"001D"
    )
        port map (
      I0 => s_axi_bvalid_i_i_2_n_0,
      I1 => \^s_axi_bvalid_i_reg_0\,
      I2 => s_axi_bready,
      I3 => areset,
      O => s_axi_bvalid_i_i_1_n_0
    );
s_axi_bvalid_i_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF47FFFFFFFFFF"
    )
        port map (
      I0 => m_axi_bready_i142_in,
      I1 => m_axi_bvalid,
      I2 => m_axi_bready_i1,
      I3 => \^m_axi_bready_i_reg_0\,
      I4 => \w_cnt[4]_i_2_n_0\,
      I5 => \w_state__0\(0),
      O => s_axi_bvalid_i_i_2_n_0
    );
s_axi_bvalid_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_bvalid_i_i_1_n_0,
      Q => \^s_axi_bvalid_i_reg_0\,
      R => '0'
    );
\s_axi_rdata_i[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(0),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(0)
    );
\s_axi_rdata_i[10]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(10),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(10)
    );
\s_axi_rdata_i[11]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(11),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(11)
    );
\s_axi_rdata_i[12]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(12),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(12)
    );
\s_axi_rdata_i[13]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(13),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(13)
    );
\s_axi_rdata_i[14]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(14),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(14)
    );
\s_axi_rdata_i[15]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(15),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(15)
    );
\s_axi_rdata_i[16]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(16),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(16)
    );
\s_axi_rdata_i[17]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(17),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(17)
    );
\s_axi_rdata_i[18]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(18),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(18)
    );
\s_axi_rdata_i[19]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(19),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(19)
    );
\s_axi_rdata_i[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(1),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(1)
    );
\s_axi_rdata_i[20]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(20),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(20)
    );
\s_axi_rdata_i[21]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(21),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(21)
    );
\s_axi_rdata_i[22]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(22),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(22)
    );
\s_axi_rdata_i[23]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(23),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(23)
    );
\s_axi_rdata_i[24]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(24),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(24)
    );
\s_axi_rdata_i[25]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(25),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(25)
    );
\s_axi_rdata_i[26]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(26),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(26)
    );
\s_axi_rdata_i[27]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(27),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(27)
    );
\s_axi_rdata_i[28]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(28),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(28)
    );
\s_axi_rdata_i[29]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(29),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(29)
    );
\s_axi_rdata_i[2]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(2),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(2)
    );
\s_axi_rdata_i[30]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(30),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(30)
    );
\s_axi_rdata_i[31]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"58"
    )
        port map (
      I0 => \r_state__0\(1),
      I1 => s_axi_rready,
      I2 => \r_state__0\(0),
      O => \s_axi_rdata_i[31]_i_1_n_0\
    );
\s_axi_rdata_i[31]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(31),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(31)
    );
\s_axi_rdata_i[3]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(3),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(3)
    );
\s_axi_rdata_i[4]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(4),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(4)
    );
\s_axi_rdata_i[5]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(5),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(5)
    );
\s_axi_rdata_i[6]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(6),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(6)
    );
\s_axi_rdata_i[7]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(7),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(7)
    );
\s_axi_rdata_i[8]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(8),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(8)
    );
\s_axi_rdata_i[9]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_rdata(9),
      I1 => \r_state__0\(1),
      O => s_axi_rdata_i0_in(9)
    );
\s_axi_rdata_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(0),
      Q => s_axi_rdata(0),
      R => areset
    );
\s_axi_rdata_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(10),
      Q => s_axi_rdata(10),
      R => areset
    );
\s_axi_rdata_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(11),
      Q => s_axi_rdata(11),
      R => areset
    );
\s_axi_rdata_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(12),
      Q => s_axi_rdata(12),
      R => areset
    );
\s_axi_rdata_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(13),
      Q => s_axi_rdata(13),
      R => areset
    );
\s_axi_rdata_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(14),
      Q => s_axi_rdata(14),
      R => areset
    );
\s_axi_rdata_i_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(15),
      Q => s_axi_rdata(15),
      R => areset
    );
\s_axi_rdata_i_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(16),
      Q => s_axi_rdata(16),
      R => areset
    );
\s_axi_rdata_i_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(17),
      Q => s_axi_rdata(17),
      R => areset
    );
\s_axi_rdata_i_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(18),
      Q => s_axi_rdata(18),
      R => areset
    );
\s_axi_rdata_i_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(19),
      Q => s_axi_rdata(19),
      R => areset
    );
\s_axi_rdata_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(1),
      Q => s_axi_rdata(1),
      R => areset
    );
\s_axi_rdata_i_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(20),
      Q => s_axi_rdata(20),
      R => areset
    );
\s_axi_rdata_i_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(21),
      Q => s_axi_rdata(21),
      R => areset
    );
\s_axi_rdata_i_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(22),
      Q => s_axi_rdata(22),
      R => areset
    );
\s_axi_rdata_i_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(23),
      Q => s_axi_rdata(23),
      R => areset
    );
\s_axi_rdata_i_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(24),
      Q => s_axi_rdata(24),
      R => areset
    );
\s_axi_rdata_i_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(25),
      Q => s_axi_rdata(25),
      R => areset
    );
\s_axi_rdata_i_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(26),
      Q => s_axi_rdata(26),
      R => areset
    );
\s_axi_rdata_i_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(27),
      Q => s_axi_rdata(27),
      R => areset
    );
\s_axi_rdata_i_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(28),
      Q => s_axi_rdata(28),
      R => areset
    );
\s_axi_rdata_i_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(29),
      Q => s_axi_rdata(29),
      R => areset
    );
\s_axi_rdata_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(2),
      Q => s_axi_rdata(2),
      R => areset
    );
\s_axi_rdata_i_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(30),
      Q => s_axi_rdata(30),
      R => areset
    );
\s_axi_rdata_i_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(31),
      Q => s_axi_rdata(31),
      R => areset
    );
\s_axi_rdata_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(3),
      Q => s_axi_rdata(3),
      R => areset
    );
\s_axi_rdata_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(4),
      Q => s_axi_rdata(4),
      R => areset
    );
\s_axi_rdata_i_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(5),
      Q => s_axi_rdata(5),
      R => areset
    );
\s_axi_rdata_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(6),
      Q => s_axi_rdata(6),
      R => areset
    );
\s_axi_rdata_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(7),
      Q => s_axi_rdata(7),
      R => areset
    );
\s_axi_rdata_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(8),
      Q => s_axi_rdata(8),
      R => areset
    );
\s_axi_rdata_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \s_axi_rdata_i[31]_i_1_n_0\,
      D => s_axi_rdata_i0_in(9),
      Q => s_axi_rdata(9),
      R => areset
    );
s_axi_rlast_INST_0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => s_axi_rlast_INST_0_i_1_n_0,
      I1 => \r_beats_reg_n_0_[6]\,
      I2 => \r_beats_reg_n_0_[7]\,
      O => \^s_axi_rlast\
    );
s_axi_rlast_INST_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => \r_beats_reg_n_0_[5]\,
      I1 => \r_beats_reg_n_0_[3]\,
      I2 => \r_beats_reg_n_0_[0]\,
      I3 => \r_beats_reg_n_0_[1]\,
      I4 => \r_beats_reg_n_0_[2]\,
      I5 => \r_beats_reg_n_0_[4]\,
      O => s_axi_rlast_INST_0_i_1_n_0
    );
\s_axi_rresp_i[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EE00FFFFC0000000"
    )
        port map (
      I0 => \^s_axi_rresp\(1),
      I1 => m_axi_rresp(0),
      I2 => m_axi_rresp(1),
      I3 => \r_state__1\(1),
      I4 => \s_axi_rresp_i[0]_i_3_n_0\,
      I5 => \^s_axi_rresp\(0),
      O => \s_axi_rresp_i[0]_i_1_n_0\
    );
\s_axi_rresp_i[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \r_state__0\(0),
      I1 => \r_state__0\(1),
      O => \r_state__1\(1)
    );
\s_axi_rresp_i[0]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3B0B"
    )
        port map (
      I0 => s_axi_rready,
      I1 => \r_state__0\(1),
      I2 => \r_state__0\(0),
      I3 => m_axi_rvalid,
      O => \s_axi_rresp_i[0]_i_3_n_0\
    );
\s_axi_rresp_i[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF30FF300A000000"
    )
        port map (
      I0 => m_axi_rresp(1),
      I1 => s_axi_rready,
      I2 => \r_state__0\(1),
      I3 => \r_state__0\(0),
      I4 => m_axi_rvalid,
      I5 => \^s_axi_rresp\(1),
      O => \s_axi_rresp_i[1]_i_1_n_0\
    );
\s_axi_rresp_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \s_axi_rresp_i[0]_i_1_n_0\,
      Q => \^s_axi_rresp\(0),
      R => areset
    );
\s_axi_rresp_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \s_axi_rresp_i[1]_i_1_n_0\,
      Q => \^s_axi_rresp\(1),
      R => areset
    );
s_axi_rvalid_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F4F43000"
    )
        port map (
      I0 => s_axi_rready,
      I1 => \r_state__0\(1),
      I2 => \r_state__0\(0),
      I3 => m_axi_rvalid,
      I4 => \^s_axi_rvalid\,
      O => s_axi_rvalid_i_i_1_n_0
    );
s_axi_rvalid_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_rvalid_i_i_1_n_0,
      Q => \^s_axi_rvalid\,
      R => areset
    );
s_axi_wready_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F4F4F4FFF4F4F400"
    )
        port map (
      I0 => s_axi_awready_i_i_2_n_0,
      I1 => s_axi_wvalid,
      I2 => s_axi_wready_i_i_2_n_0,
      I3 => s_axi_awready_i_i_4_n_0,
      I4 => s_axi_wready_i_i_3_n_0,
      I5 => \^s_axi_wready\,
      O => s_axi_wready_i_i_1_n_0
    );
s_axi_wready_i_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1110111011100000"
    )
        port map (
      I0 => \w_state__0\(0),
      I1 => \w_state__0\(2),
      I2 => aw_done_reg_n_0,
      I3 => m_axi_awready,
      I4 => w_done_reg_n_0,
      I5 => m_axi_wready,
      O => s_axi_wready_i_i_2_n_0
    );
s_axi_wready_i_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"11111111FF8A8A8A"
    )
        port map (
      I0 => \w_state__0\(1),
      I1 => \w_state__0\(0),
      I2 => \w_cnt[8]_i_3_n_0\,
      I3 => \FSM_sequential_w_state[2]_i_2_n_0\,
      I4 => s_axi_wvalid,
      I5 => \w_state__0\(2),
      O => s_axi_wready_i_i_3_n_0
    );
s_axi_wready_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => s_axi_wready_i_i_1_n_0,
      Q => \^s_axi_wready\,
      R => areset
    );
\w_cnt[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"4"
    )
        port map (
      I0 => \w_cnt_reg_n_0_[0]\,
      I1 => \w_state__0\(1),
      O => w_cnt(0)
    );
\w_cnt[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"60"
    )
        port map (
      I0 => \w_cnt_reg_n_0_[1]\,
      I1 => \w_cnt_reg_n_0_[0]\,
      I2 => \w_state__0\(1),
      O => w_cnt(1)
    );
\w_cnt[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7800"
    )
        port map (
      I0 => \w_cnt_reg_n_0_[0]\,
      I1 => \w_cnt_reg_n_0_[1]\,
      I2 => \w_cnt_reg_n_0_[2]\,
      I3 => \w_state__0\(1),
      O => w_cnt(2)
    );
\w_cnt[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7F800000"
    )
        port map (
      I0 => \w_cnt_reg_n_0_[2]\,
      I1 => \w_cnt_reg_n_0_[1]\,
      I2 => \w_cnt_reg_n_0_[0]\,
      I3 => \w_cnt_reg_n_0_[3]\,
      I4 => \w_state__0\(1),
      O => w_cnt(3)
    );
\w_cnt[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000007FFF8000"
    )
        port map (
      I0 => \w_cnt_reg_n_0_[3]\,
      I1 => \w_cnt_reg_n_0_[0]\,
      I2 => \w_cnt_reg_n_0_[1]\,
      I3 => \w_cnt_reg_n_0_[2]\,
      I4 => \w_cnt_reg_n_0_[4]\,
      I5 => \w_cnt[4]_i_2_n_0\,
      O => w_cnt(4)
    );
\w_cnt[4]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \w_state__0\(2),
      I1 => \w_state__0\(1),
      O => \w_cnt[4]_i_2_n_0\
    );
\w_cnt[5]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"90"
    )
        port map (
      I0 => \w_cnt[5]_i_2_n_0\,
      I1 => \w_cnt_reg_n_0_[5]\,
      I2 => \w_state__0\(1),
      O => w_cnt(5)
    );
\w_cnt[5]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFFFFFF"
    )
        port map (
      I0 => \w_cnt_reg_n_0_[3]\,
      I1 => \w_cnt_reg_n_0_[0]\,
      I2 => \w_cnt_reg_n_0_[1]\,
      I3 => \w_cnt_reg_n_0_[2]\,
      I4 => \w_cnt_reg_n_0_[4]\,
      O => \w_cnt[5]_i_2_n_0\
    );
\w_cnt[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"82"
    )
        port map (
      I0 => \w_state__0\(1),
      I1 => \w_cnt[8]_i_4_n_0\,
      I2 => \w_cnt_reg_n_0_[6]\,
      O => w_cnt(6)
    );
\w_cnt[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A208"
    )
        port map (
      I0 => \w_state__0\(1),
      I1 => \w_cnt_reg_n_0_[6]\,
      I2 => \w_cnt[8]_i_4_n_0\,
      I3 => \w_cnt_reg_n_0_[7]\,
      O => w_cnt(7)
    );
\w_cnt[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0007"
    )
        port map (
      I0 => \w_cnt[8]_i_3_n_0\,
      I1 => \w_state__0\(1),
      I2 => \w_state__0\(2),
      I3 => \w_state__0\(0),
      O => \w_cnt[8]_i_1_n_0\
    );
\w_cnt[8]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DF200000"
    )
        port map (
      I0 => \w_cnt_reg_n_0_[7]\,
      I1 => \w_cnt[8]_i_4_n_0\,
      I2 => \w_cnt_reg_n_0_[6]\,
      I3 => \w_cnt_reg_n_0_[8]\,
      I4 => \w_state__0\(1),
      O => w_cnt(8)
    );
\w_cnt[8]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"111F"
    )
        port map (
      I0 => m_axi_wready,
      I1 => w_done_reg_n_0,
      I2 => m_axi_awready,
      I3 => aw_done_reg_n_0,
      O => \w_cnt[8]_i_3_n_0\
    );
\w_cnt[8]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7FFFFFFFFFFFFFFF"
    )
        port map (
      I0 => \w_cnt_reg_n_0_[4]\,
      I1 => \w_cnt_reg_n_0_[2]\,
      I2 => \w_cnt_reg_n_0_[1]\,
      I3 => \w_cnt_reg_n_0_[0]\,
      I4 => \w_cnt_reg_n_0_[3]\,
      I5 => \w_cnt_reg_n_0_[5]\,
      O => \w_cnt[8]_i_4_n_0\
    );
\w_cnt_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \w_cnt[8]_i_1_n_0\,
      D => w_cnt(0),
      Q => \w_cnt_reg_n_0_[0]\,
      R => areset
    );
\w_cnt_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \w_cnt[8]_i_1_n_0\,
      D => w_cnt(1),
      Q => \w_cnt_reg_n_0_[1]\,
      R => areset
    );
\w_cnt_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \w_cnt[8]_i_1_n_0\,
      D => w_cnt(2),
      Q => \w_cnt_reg_n_0_[2]\,
      R => areset
    );
\w_cnt_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \w_cnt[8]_i_1_n_0\,
      D => w_cnt(3),
      Q => \w_cnt_reg_n_0_[3]\,
      R => areset
    );
\w_cnt_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \w_cnt[8]_i_1_n_0\,
      D => w_cnt(4),
      Q => \w_cnt_reg_n_0_[4]\,
      R => areset
    );
\w_cnt_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \w_cnt[8]_i_1_n_0\,
      D => w_cnt(5),
      Q => \w_cnt_reg_n_0_[5]\,
      R => areset
    );
\w_cnt_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \w_cnt[8]_i_1_n_0\,
      D => w_cnt(6),
      Q => \w_cnt_reg_n_0_[6]\,
      R => areset
    );
\w_cnt_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \w_cnt[8]_i_1_n_0\,
      D => w_cnt(7),
      Q => \w_cnt_reg_n_0_[7]\,
      R => areset
    );
\w_cnt_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \w_cnt[8]_i_1_n_0\,
      D => w_cnt(8),
      Q => \w_cnt_reg_n_0_[8]\,
      R => areset
    );
w_done_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAA03AAAAAA02"
    )
        port map (
      I0 => w_done_reg_n_0,
      I1 => m_axi_awready,
      I2 => aw_done_reg_n_0,
      I3 => \w_state__0\(0),
      I4 => \w_cnt[4]_i_2_n_0\,
      I5 => m_axi_wready,
      O => w_done_i_1_n_0
    );
w_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => w_done_i_1_n_0,
      Q => w_done_reg_n_0,
      R => areset
    );
w_null_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"111111F000F000F0"
    )
        port map (
      I0 => \w_state__0\(2),
      I1 => \w_state__0\(1),
      I2 => w_null_reg_n_0,
      I3 => \aw_addr[7]_i_6_n_0\,
      I4 => \aw_addr[7]_i_3_n_0\,
      I5 => s_axi_wlast,
      O => w_null_i_1_n_0
    );
w_null_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => w_null_i_1_n_0,
      Q => w_null_reg_n_0,
      R => areset
    );
\w_size_mask[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000100FF00010000"
    )
        port map (
      I0 => s_axi_awsize(1),
      I1 => s_axi_awsize(2),
      I2 => s_axi_awsize(0),
      I3 => areset,
      I4 => aw_incr_1,
      I5 => p_0_in_0(0),
      O => \w_size_mask[0]_i_1_n_0\
    );
\w_size_mask[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"010F0100"
    )
        port map (
      I0 => s_axi_awsize(2),
      I1 => s_axi_awsize(1),
      I2 => areset,
      I3 => aw_incr_1,
      I4 => p_0_in_0(1),
      O => \w_size_mask[1]_i_1_n_0\
    );
\w_size_mask_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \w_size_mask[0]_i_1_n_0\,
      Q => p_0_in_0(0),
      R => '0'
    );
\w_size_mask_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \w_size_mask[1]_i_1_n_0\,
      Q => p_0_in_0(1),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_singleorder is
  port (
    \gen_id_reg.aresetn_d_reg[0]_0\ : out STD_LOGIC;
    \gen_id_reg.aresetn_d_reg[0]_1\ : out STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    m_axi_arvalid : out STD_LOGIC;
    s_axi_rid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    aclk : in STD_LOGIC;
    m_axi_rvalid : in STD_LOGIC;
    m_axi_rlast : in STD_LOGIC;
    s_axi_rready : in STD_LOGIC;
    p_0_in : in STD_LOGIC;
    m_axi_arready : in STD_LOGIC;
    s_axi_arvalid : in STD_LOGIC;
    areset : in STD_LOGIC;
    s_axi_arid : in STD_LOGIC_VECTOR ( 11 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_singleorder : entity is "sc_transaction_regulator_v1_0_8_singleorder";
end design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_singleorder;

architecture STRUCTURE of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_singleorder is
  signal \gen_id_reg.aresetn_d[0]_i_1_n_0\ : STD_LOGIC;
  signal \^gen_id_reg.aresetn_d_reg[0]_0\ : STD_LOGIC;
  signal \gen_id_reg.s_rid_i0\ : STD_LOGIC;
  signal \gen_id_reg.s_single_aready_i_i_1_n_0\ : STD_LOGIC;
  signal \gen_id_reg.s_single_aready_i_reg_n_0\ : STD_LOGIC;
  signal \m_single_rready__0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gen_id_reg.aresetn_d[0]_i_1\ : label is "soft_lutpair98";
  attribute SOFT_HLUTNM of \gen_id_reg.aresetn_d[1]_i_1\ : label is "soft_lutpair98";
  attribute SOFT_HLUTNM of m_axi_arvalid_INST_0 : label is "soft_lutpair97";
  attribute SOFT_HLUTNM of s_axi_arready_INST_0 : label is "soft_lutpair97";
begin
  \gen_id_reg.aresetn_d_reg[0]_0\ <= \^gen_id_reg.aresetn_d_reg[0]_0\;
\gen_id_reg.aresetn_d[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => areset,
      O => \gen_id_reg.aresetn_d[0]_i_1_n_0\
    );
\gen_id_reg.aresetn_d[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^gen_id_reg.aresetn_d_reg[0]_0\,
      I1 => areset,
      O => \gen_id_reg.aresetn_d_reg[0]_1\
    );
\gen_id_reg.aresetn_d_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_id_reg.aresetn_d[0]_i_1_n_0\,
      Q => \^gen_id_reg.aresetn_d_reg[0]_0\,
      R => '0'
    );
\gen_id_reg.s_rid_i[11]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => m_axi_arready,
      I1 => s_axi_arvalid,
      I2 => \gen_id_reg.s_single_aready_i_reg_n_0\,
      O => \gen_id_reg.s_rid_i0\
    );
\gen_id_reg.s_rid_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_arid(0),
      Q => s_axi_rid(0),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_arid(10),
      Q => s_axi_rid(10),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_arid(11),
      Q => s_axi_rid(11),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_arid(1),
      Q => s_axi_rid(1),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_arid(2),
      Q => s_axi_rid(2),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_arid(3),
      Q => s_axi_rid(3),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_arid(4),
      Q => s_axi_rid(4),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_arid(5),
      Q => s_axi_rid(5),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_arid(6),
      Q => s_axi_rid(6),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_arid(7),
      Q => s_axi_rid(7),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_arid(8),
      Q => s_axi_rid(8),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_arid(9),
      Q => s_axi_rid(9),
      R => '0'
    );
\gen_id_reg.s_single_aready_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F3FBFBFB00000000"
    )
        port map (
      I0 => \gen_id_reg.s_single_aready_i_reg_n_0\,
      I1 => p_0_in,
      I2 => \m_single_rready__0\,
      I3 => m_axi_arready,
      I4 => s_axi_arvalid,
      I5 => \^gen_id_reg.aresetn_d_reg[0]_0\,
      O => \gen_id_reg.s_single_aready_i_i_1_n_0\
    );
\gen_id_reg.s_single_aready_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_id_reg.s_single_aready_i_i_1_n_0\,
      Q => \gen_id_reg.s_single_aready_i_reg_n_0\,
      R => '0'
    );
m_axi_arvalid_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => s_axi_arvalid,
      I1 => \gen_id_reg.s_single_aready_i_reg_n_0\,
      O => m_axi_arvalid
    );
m_single_rready: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => m_axi_rvalid,
      I1 => m_axi_rlast,
      I2 => s_axi_rready,
      O => \m_single_rready__0\
    );
s_axi_arready_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_axi_arready,
      I1 => \gen_id_reg.s_single_aready_i_reg_n_0\,
      O => s_axi_arready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_singleorder_14 is
  port (
    p_0_in : out STD_LOGIC;
    s_axi_awready : out STD_LOGIC;
    m_axi_awvalid : out STD_LOGIC;
    s_axi_bid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    aclk : in STD_LOGIC;
    \gen_id_reg.aresetn_d_reg[1]_0\ : in STD_LOGIC;
    s_axi_bready : in STD_LOGIC;
    m_axi_bvalid : in STD_LOGIC;
    \gen_id_reg.s_single_aready_i_reg_0\ : in STD_LOGIC;
    m_axi_awready : in STD_LOGIC;
    s_axi_awvalid : in STD_LOGIC;
    s_axi_awid : in STD_LOGIC_VECTOR ( 11 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_singleorder_14 : entity is "sc_transaction_regulator_v1_0_8_singleorder";
end design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_singleorder_14;

architecture STRUCTURE of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_singleorder_14 is
  signal \gen_id_reg.s_rid_i0\ : STD_LOGIC;
  signal \gen_id_reg.s_single_aready_i_i_1__0_n_0\ : STD_LOGIC;
  signal \gen_id_reg.s_single_aready_i_reg_n_0\ : STD_LOGIC;
  signal \^p_0_in\ : STD_LOGIC;
  signal p_2_in : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gen_id_reg.s_single_aready_i_i_2\ : label is "soft_lutpair99";
  attribute SOFT_HLUTNM of m_axi_awvalid_INST_0 : label is "soft_lutpair99";
begin
  p_0_in <= \^p_0_in\;
\gen_id_reg.aresetn_d_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_id_reg.aresetn_d_reg[1]_0\,
      Q => \^p_0_in\,
      R => '0'
    );
\gen_id_reg.s_rid_i[11]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => m_axi_awready,
      I1 => s_axi_awvalid,
      I2 => \gen_id_reg.s_single_aready_i_reg_n_0\,
      O => \gen_id_reg.s_rid_i0\
    );
\gen_id_reg.s_rid_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_awid(0),
      Q => s_axi_bid(0),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_awid(10),
      Q => s_axi_bid(10),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_awid(11),
      Q => s_axi_bid(11),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_awid(1),
      Q => s_axi_bid(1),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_awid(2),
      Q => s_axi_bid(2),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_awid(3),
      Q => s_axi_bid(3),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_awid(4),
      Q => s_axi_bid(4),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_awid(5),
      Q => s_axi_bid(5),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_awid(6),
      Q => s_axi_bid(6),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_awid(7),
      Q => s_axi_bid(7),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_awid(8),
      Q => s_axi_bid(8),
      R => '0'
    );
\gen_id_reg.s_rid_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_id_reg.s_rid_i0\,
      D => s_axi_awid(9),
      Q => s_axi_bid(9),
      R => '0'
    );
\gen_id_reg.s_single_aready_i_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F333FBBB00000000"
    )
        port map (
      I0 => \gen_id_reg.s_single_aready_i_reg_n_0\,
      I1 => \^p_0_in\,
      I2 => s_axi_bready,
      I3 => m_axi_bvalid,
      I4 => p_2_in,
      I5 => \gen_id_reg.s_single_aready_i_reg_0\,
      O => \gen_id_reg.s_single_aready_i_i_1__0_n_0\
    );
\gen_id_reg.s_single_aready_i_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => s_axi_awvalid,
      I1 => m_axi_awready,
      O => p_2_in
    );
\gen_id_reg.s_single_aready_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_id_reg.s_single_aready_i_i_1__0_n_0\,
      Q => \gen_id_reg.s_single_aready_i_reg_n_0\,
      R => '0'
    );
m_axi_awvalid_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => s_axi_awvalid,
      I1 => \gen_id_reg.s_single_aready_i_reg_n_0\,
      O => m_axi_awvalid
    );
s_axi_awready_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_axi_awready,
      I1 => \gen_id_reg.s_single_aready_i_reg_n_0\,
      O => s_axi_awready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_util_v1_0_4_axi_reg_stall__parameterized0\ is
  port (
    \gen_endpoint.r_state_reg[1]\ : out STD_LOGIC;
    mr_axi_arvalid : out STD_LOGIC;
    \gen_endpoint.r_state_reg[0]\ : out STD_LOGIC;
    \m_vector_i_reg[1125]_0\ : out STD_LOGIC;
    m_axi_arlen : out STD_LOGIC_VECTOR ( 3 downto 0 );
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_vector1 : out STD_LOGIC;
    m_axi_arvalid : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \gen_endpoint.r_trigger_decerr\ : out STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    m_valid1 : out STD_LOGIC;
    m_vector2 : out STD_LOGIC;
    m_axi_arsize : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_arid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    m_axi_araddr : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \gen_endpoint.r_state_reg[0]_0\ : in STD_LOGIC;
    \gen_endpoint.r_state_reg[0]_1\ : in STD_LOGIC;
    \gen_endpoint.r_state\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_arlen : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \gen_endpoint.r_cnt_reg[0]\ : in STD_LOGIC;
    \gen_endpoint.r_cnt_reg[4]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    s_axi_arvalid : in STD_LOGIC;
    s_axi_araddr : in STD_LOGIC_VECTOR ( 23 downto 0 );
    \m_vector_i_reg[1136]_0\ : in STD_LOGIC_VECTOR ( 16 downto 0 );
    s_axi_arsize : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_arburst : in STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    sr_axi_arvalid : in STD_LOGIC;
    mr_axi_arready : in STD_LOGIC;
    m_axi_arready : in STD_LOGIC;
    \state_reg[storage]_0\ : in STD_LOGIC;
    \gen_endpoint.err_arready\ : in STD_LOGIC;
    r_resume : in STD_LOGIC;
    areset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_util_v1_0_4_axi_reg_stall__parameterized0\ : entity is "sc_util_v1_0_4_axi_reg_stall";
end \design_1_axi_smc_0_sc_util_v1_0_4_axi_reg_stall__parameterized0\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_util_v1_0_4_axi_reg_stall__parameterized0\ is
  signal \^q\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \gen_endpoint.r_cnt[4]_i_3_n_0\ : STD_LOGIC;
  signal \gen_endpoint.r_cnt[4]_i_5_n_0\ : STD_LOGIC;
  signal \gen_endpoint.r_cnt[4]_i_6_n_0\ : STD_LOGIC;
  signal \gen_endpoint.r_state[1]_i_2_n_0\ : STD_LOGIC;
  signal \^gen_endpoint.r_trigger_decerr\ : STD_LOGIC;
  signal \^m_axi_arlen\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal m_axi_arvalid_INST_0_i_4_n_0 : STD_LOGIC;
  signal m_axi_arvalid_INST_0_i_5_n_0 : STD_LOGIC;
  signal m_axi_arvalid_INST_0_i_6_n_0 : STD_LOGIC;
  signal m_axi_arvalid_INST_0_i_7_n_0 : STD_LOGIC;
  signal m_axi_arvalid_INST_0_i_8_n_0 : STD_LOGIC;
  signal m_axi_arvalid_INST_0_i_9_n_0 : STD_LOGIC;
  signal \^m_vector1\ : STD_LOGIC;
  signal \m_vector_i[1136]_i_1_n_0\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1026]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1027]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1029]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1030]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1031]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1032]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1033]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1034]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1035]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1036]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1037]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1038]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1039]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1040]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1061]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1062]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1063]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1064]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1065]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1066]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1067]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1068]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1127]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1128]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1134]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1135]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1136]\ : STD_LOGIC;
  signal \^mr_axi_arvalid\ : STD_LOGIC;
  signal p_0_in : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal p_2_out : STD_LOGIC;
  signal state : STD_LOGIC;
  signal \state[s_ready_i]_i_1_n_0\ : STD_LOGIC;
  signal \state[s_stall_d]_i_1_n_0\ : STD_LOGIC;
  signal \state[s_stall_d]_i_5_n_0\ : STD_LOGIC;
  signal \state[storage]_i_1_n_0\ : STD_LOGIC;
  signal \state[storage]_i_2_n_0\ : STD_LOGIC;
  signal \state[storage]_i_3_n_0\ : STD_LOGIC;
  signal \state_reg[s_ready_i_n_0_]\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gen_axi.gen_read.read_cnt[1]_i_2\ : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of \gen_axi.gen_read.s_axi_rid_i[11]_i_3\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \gen_axi.gen_read.s_axi_rid_i[11]_i_4\ : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of \gen_endpoint.r_cnt[2]_i_1\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \gen_endpoint.r_cnt[3]_i_1\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \gen_endpoint.r_cnt[4]_i_1\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of \gen_endpoint.r_cnt[4]_i_5\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of \gen_endpoint.r_cnt[4]_i_6\ : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \gen_endpoint.r_state[1]_i_1\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of m_axi_arvalid_INST_0 : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of m_axi_arvalid_INST_0_i_1 : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of s_axi_arready_INST_0 : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \state[s_ready_i]_i_1\ : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of \state[s_stall_d]_i_1\ : label is "soft_lutpair17";
begin
  Q(1 downto 0) <= \^q\(1 downto 0);
  \gen_endpoint.r_trigger_decerr\ <= \^gen_endpoint.r_trigger_decerr\;
  m_axi_arlen(3 downto 0) <= \^m_axi_arlen\(3 downto 0);
  m_vector1 <= \^m_vector1\;
  mr_axi_arvalid <= \^mr_axi_arvalid\;
\gen_axi.gen_read.read_cnt[1]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => p_0_in(1),
      I1 => \state_reg[s_ready_i_n_0_]\,
      O => \^m_vector1\
    );
\gen_axi.gen_read.s_axi_rid_i[11]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \state_reg[s_ready_i_n_0_]\,
      I1 => p_0_in(0),
      I2 => p_0_in(1),
      O => m_valid1
    );
\gen_axi.gen_read.s_axi_rid_i[11]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => p_0_in(0),
      I1 => p_0_in(1),
      I2 => \state_reg[s_ready_i_n_0_]\,
      O => m_vector2
    );
\gen_axi.gen_read.s_axi_rlast_i_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000001105"
    )
        port map (
      I0 => \^m_axi_arlen\(1),
      I1 => \^q\(0),
      I2 => s_axi_arlen(0),
      I3 => \^m_vector1\,
      I4 => \^m_axi_arlen\(3),
      I5 => \^m_axi_arlen\(2),
      O => \m_vector_i_reg[1125]_0\
    );
\gen_endpoint.r_cnt[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"69"
    )
        port map (
      I0 => \gen_endpoint.r_cnt_reg[4]\(0),
      I1 => \gen_endpoint.r_cnt[4]_i_5_n_0\,
      I2 => \gen_endpoint.r_cnt_reg[4]\(1),
      O => D(0)
    );
\gen_endpoint.r_cnt[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"78E1"
    )
        port map (
      I0 => \gen_endpoint.r_cnt[4]_i_5_n_0\,
      I1 => \gen_endpoint.r_cnt_reg[4]\(0),
      I2 => \gen_endpoint.r_cnt_reg[4]\(2),
      I3 => \gen_endpoint.r_cnt_reg[4]\(1),
      O => D(1)
    );
\gen_endpoint.r_cnt[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7F80FE01"
    )
        port map (
      I0 => \gen_endpoint.r_cnt_reg[4]\(1),
      I1 => \gen_endpoint.r_cnt[4]_i_5_n_0\,
      I2 => \gen_endpoint.r_cnt_reg[4]\(0),
      I3 => \gen_endpoint.r_cnt_reg[4]\(3),
      I4 => \gen_endpoint.r_cnt_reg[4]\(2),
      O => D(2)
    );
\gen_endpoint.r_cnt[4]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \gen_endpoint.r_cnt[4]_i_3_n_0\,
      I1 => \gen_endpoint.r_cnt_reg[0]\,
      O => E(0)
    );
\gen_endpoint.r_cnt[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6AAAAAAAAAAAAAA9"
    )
        port map (
      I0 => \gen_endpoint.r_cnt_reg[4]\(4),
      I1 => \gen_endpoint.r_cnt_reg[4]\(3),
      I2 => \gen_endpoint.r_cnt_reg[4]\(2),
      I3 => \gen_endpoint.r_cnt_reg[4]\(1),
      I4 => \gen_endpoint.r_cnt[4]_i_5_n_0\,
      I5 => \gen_endpoint.r_cnt_reg[4]\(0),
      O => D(3)
    );
\gen_endpoint.r_cnt[4]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFEFFFFFFFFF"
    )
        port map (
      I0 => \^gen_endpoint.r_trigger_decerr\,
      I1 => \gen_endpoint.r_cnt_reg[4]\(4),
      I2 => \state_reg[s_ready_i_n_0_]\,
      I3 => \gen_endpoint.r_state\(0),
      I4 => \gen_endpoint.r_state\(1),
      I5 => s_axi_arvalid,
      O => \gen_endpoint.r_cnt[4]_i_3_n_0\
    );
\gen_endpoint.r_cnt[4]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \gen_endpoint.r_cnt_reg[0]\,
      I1 => \gen_endpoint.r_cnt[4]_i_6_n_0\,
      I2 => \^gen_endpoint.r_trigger_decerr\,
      O => \gen_endpoint.r_cnt[4]_i_5_n_0\
    );
\gen_endpoint.r_cnt[4]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000200"
    )
        port map (
      I0 => s_axi_arvalid,
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      I3 => \state_reg[s_ready_i_n_0_]\,
      I4 => \gen_endpoint.r_cnt_reg[4]\(4),
      O => \gen_endpoint.r_cnt[4]_i_6_n_0\
    );
\gen_endpoint.r_state[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00003330FFFFECEC"
    )
        port map (
      I0 => \gen_endpoint.r_state_reg[0]_0\,
      I1 => \gen_endpoint.r_state_reg[0]_1\,
      I2 => \gen_endpoint.r_state\(1),
      I3 => \^mr_axi_arvalid\,
      I4 => \gen_endpoint.r_state[1]_i_2_n_0\,
      I5 => \gen_endpoint.r_state\(0),
      O => \gen_endpoint.r_state_reg[1]\
    );
\gen_endpoint.r_state[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0FF05FB0"
    )
        port map (
      I0 => \gen_endpoint.r_state[1]_i_2_n_0\,
      I1 => \^mr_axi_arvalid\,
      I2 => \gen_endpoint.r_state\(0),
      I3 => \gen_endpoint.r_state\(1),
      I4 => \gen_endpoint.r_state_reg[0]_1\,
      O => \gen_endpoint.r_state_reg[0]\
    );
\gen_endpoint.r_state[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0004000000000000"
    )
        port map (
      I0 => \gen_endpoint.r_cnt_reg[4]\(4),
      I1 => \state_reg[s_ready_i_n_0_]\,
      I2 => \gen_endpoint.r_state\(0),
      I3 => \gen_endpoint.r_state\(1),
      I4 => s_axi_arvalid,
      I5 => \^gen_endpoint.r_trigger_decerr\,
      O => \gen_endpoint.r_state[1]_i_2_n_0\
    );
\m_axi_araddr[0]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1061]\,
      I1 => s_axi_araddr(0),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_araddr(0)
    );
\m_axi_araddr[1]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1062]\,
      I1 => s_axi_araddr(1),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_araddr(1)
    );
\m_axi_araddr[2]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1063]\,
      I1 => s_axi_araddr(2),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_araddr(2)
    );
\m_axi_araddr[3]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1064]\,
      I1 => s_axi_araddr(3),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_araddr(3)
    );
\m_axi_araddr[4]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1065]\,
      I1 => s_axi_araddr(4),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_araddr(4)
    );
\m_axi_araddr[5]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1066]\,
      I1 => s_axi_araddr(5),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_araddr(5)
    );
\m_axi_araddr[6]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1067]\,
      I1 => s_axi_araddr(6),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_araddr(6)
    );
\m_axi_araddr[7]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1068]\,
      I1 => s_axi_araddr(7),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_araddr(7)
    );
\m_axi_arid[0]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1029]\,
      I1 => \m_vector_i_reg[1136]_0\(2),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arid(0)
    );
\m_axi_arid[10]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1039]\,
      I1 => \m_vector_i_reg[1136]_0\(12),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arid(10)
    );
\m_axi_arid[11]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1040]\,
      I1 => \m_vector_i_reg[1136]_0\(13),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arid(11)
    );
\m_axi_arid[1]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1030]\,
      I1 => \m_vector_i_reg[1136]_0\(3),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arid(1)
    );
\m_axi_arid[2]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1031]\,
      I1 => \m_vector_i_reg[1136]_0\(4),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arid(2)
    );
\m_axi_arid[3]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1032]\,
      I1 => \m_vector_i_reg[1136]_0\(5),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arid(3)
    );
\m_axi_arid[4]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1033]\,
      I1 => \m_vector_i_reg[1136]_0\(6),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arid(4)
    );
\m_axi_arid[5]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1034]\,
      I1 => \m_vector_i_reg[1136]_0\(7),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arid(5)
    );
\m_axi_arid[6]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1035]\,
      I1 => \m_vector_i_reg[1136]_0\(8),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arid(6)
    );
\m_axi_arid[7]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1036]\,
      I1 => \m_vector_i_reg[1136]_0\(9),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arid(7)
    );
\m_axi_arid[8]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1037]\,
      I1 => \m_vector_i_reg[1136]_0\(10),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arid(8)
    );
\m_axi_arid[9]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1038]\,
      I1 => \m_vector_i_reg[1136]_0\(11),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arid(9)
    );
\m_axi_arlen[0]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \^q\(0),
      I1 => s_axi_arlen(0),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => \^m_axi_arlen\(0)
    );
\m_axi_arlen[1]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \^q\(1),
      I1 => s_axi_arlen(1),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => \^m_axi_arlen\(1)
    );
\m_axi_arlen[2]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1127]\,
      I1 => s_axi_arlen(2),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => \^m_axi_arlen\(2)
    );
\m_axi_arlen[3]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1128]\,
      I1 => s_axi_arlen(3),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => \^m_axi_arlen\(3)
    );
\m_axi_arprot[0]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1134]\,
      I1 => \m_vector_i_reg[1136]_0\(14),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arprot(0)
    );
\m_axi_arprot[1]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1135]\,
      I1 => \m_vector_i_reg[1136]_0\(15),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arprot(1)
    );
\m_axi_arprot[2]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1136]\,
      I1 => \m_vector_i_reg[1136]_0\(16),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arprot(2)
    );
\m_axi_arsize[0]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1026]\,
      I1 => \m_vector_i_reg[1136]_0\(0),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arsize(0)
    );
\m_axi_arsize[1]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1027]\,
      I1 => \m_vector_i_reg[1136]_0\(1),
      I2 => p_0_in(1),
      I3 => \state_reg[s_ready_i_n_0_]\,
      O => m_axi_arsize(1)
    );
m_axi_arvalid_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^mr_axi_arvalid\,
      I1 => \gen_endpoint.r_state\(1),
      O => m_axi_arvalid
    );
m_axi_arvalid_INST_0_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000F20"
    )
        port map (
      I0 => sr_axi_arvalid,
      I1 => \^gen_endpoint.r_trigger_decerr\,
      I2 => \state_reg[s_ready_i_n_0_]\,
      I3 => p_0_in(1),
      I4 => p_0_in(0),
      O => \^mr_axi_arvalid\
    );
m_axi_arvalid_INST_0_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFEFFFFFFFE"
    )
        port map (
      I0 => m_axi_arvalid_INST_0_i_4_n_0,
      I1 => m_axi_arvalid_INST_0_i_5_n_0,
      I2 => m_axi_arvalid_INST_0_i_6_n_0,
      I3 => m_axi_arvalid_INST_0_i_7_n_0,
      I4 => m_axi_arvalid_INST_0_i_8_n_0,
      I5 => m_axi_arvalid_INST_0_i_9_n_0,
      O => \^gen_endpoint.r_trigger_decerr\
    );
m_axi_arvalid_INST_0_i_4: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFDF"
    )
        port map (
      I0 => s_axi_araddr(17),
      I1 => s_axi_araddr(19),
      I2 => s_axi_araddr(10),
      I3 => s_axi_araddr(13),
      O => m_axi_arvalid_INST_0_i_4_n_0
    );
m_axi_arvalid_INST_0_i_5: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFFF"
    )
        port map (
      I0 => s_axi_araddr(21),
      I1 => s_axi_araddr(20),
      I2 => s_axi_arburst(0),
      I3 => s_axi_araddr(15),
      O => m_axi_arvalid_INST_0_i_5_n_0
    );
m_axi_arvalid_INST_0_i_6: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => s_axi_araddr(12),
      I1 => s_axi_araddr(8),
      I2 => s_axi_araddr(9),
      O => m_axi_arvalid_INST_0_i_6_n_0
    );
m_axi_arvalid_INST_0_i_7: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFDFFFFFFFFFF"
    )
        port map (
      I0 => s_axi_araddr(16),
      I1 => s_axi_araddr(18),
      I2 => s_axi_araddr(11),
      I3 => s_axi_araddr(14),
      I4 => s_axi_araddr(23),
      I5 => s_axi_araddr(22),
      O => m_axi_arvalid_INST_0_i_7_n_0
    );
m_axi_arvalid_INST_0_i_8: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => s_axi_arlen(3),
      I1 => s_axi_arlen(0),
      I2 => s_axi_arlen(2),
      I3 => s_axi_arlen(1),
      O => m_axi_arvalid_INST_0_i_8_n_0
    );
m_axi_arvalid_INST_0_i_9: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \m_vector_i_reg[1136]_0\(0),
      I1 => \m_vector_i_reg[1136]_0\(1),
      I2 => s_axi_arsize(0),
      O => m_axi_arvalid_INST_0_i_9_n_0
    );
\m_vector_i[1136]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \state_reg[s_ready_i_n_0_]\,
      I1 => p_0_in(1),
      O => \m_vector_i[1136]_i_1_n_0\
    );
\m_vector_i_reg[1026]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(0),
      Q => \m_vector_i_reg_n_0_[1026]\,
      R => '0'
    );
\m_vector_i_reg[1027]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(1),
      Q => \m_vector_i_reg_n_0_[1027]\,
      R => '0'
    );
\m_vector_i_reg[1029]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(2),
      Q => \m_vector_i_reg_n_0_[1029]\,
      R => '0'
    );
\m_vector_i_reg[1030]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(3),
      Q => \m_vector_i_reg_n_0_[1030]\,
      R => '0'
    );
\m_vector_i_reg[1031]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(4),
      Q => \m_vector_i_reg_n_0_[1031]\,
      R => '0'
    );
\m_vector_i_reg[1032]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(5),
      Q => \m_vector_i_reg_n_0_[1032]\,
      R => '0'
    );
\m_vector_i_reg[1033]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(6),
      Q => \m_vector_i_reg_n_0_[1033]\,
      R => '0'
    );
\m_vector_i_reg[1034]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(7),
      Q => \m_vector_i_reg_n_0_[1034]\,
      R => '0'
    );
\m_vector_i_reg[1035]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(8),
      Q => \m_vector_i_reg_n_0_[1035]\,
      R => '0'
    );
\m_vector_i_reg[1036]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(9),
      Q => \m_vector_i_reg_n_0_[1036]\,
      R => '0'
    );
\m_vector_i_reg[1037]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(10),
      Q => \m_vector_i_reg_n_0_[1037]\,
      R => '0'
    );
\m_vector_i_reg[1038]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(11),
      Q => \m_vector_i_reg_n_0_[1038]\,
      R => '0'
    );
\m_vector_i_reg[1039]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(12),
      Q => \m_vector_i_reg_n_0_[1039]\,
      R => '0'
    );
\m_vector_i_reg[1040]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(13),
      Q => \m_vector_i_reg_n_0_[1040]\,
      R => '0'
    );
\m_vector_i_reg[1061]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => s_axi_araddr(0),
      Q => \m_vector_i_reg_n_0_[1061]\,
      R => '0'
    );
\m_vector_i_reg[1062]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => s_axi_araddr(1),
      Q => \m_vector_i_reg_n_0_[1062]\,
      R => '0'
    );
\m_vector_i_reg[1063]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => s_axi_araddr(2),
      Q => \m_vector_i_reg_n_0_[1063]\,
      R => '0'
    );
\m_vector_i_reg[1064]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => s_axi_araddr(3),
      Q => \m_vector_i_reg_n_0_[1064]\,
      R => '0'
    );
\m_vector_i_reg[1065]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => s_axi_araddr(4),
      Q => \m_vector_i_reg_n_0_[1065]\,
      R => '0'
    );
\m_vector_i_reg[1066]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => s_axi_araddr(5),
      Q => \m_vector_i_reg_n_0_[1066]\,
      R => '0'
    );
\m_vector_i_reg[1067]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => s_axi_araddr(6),
      Q => \m_vector_i_reg_n_0_[1067]\,
      R => '0'
    );
\m_vector_i_reg[1068]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => s_axi_araddr(7),
      Q => \m_vector_i_reg_n_0_[1068]\,
      R => '0'
    );
\m_vector_i_reg[1125]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => s_axi_arlen(0),
      Q => \^q\(0),
      R => '0'
    );
\m_vector_i_reg[1126]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => s_axi_arlen(1),
      Q => \^q\(1),
      R => '0'
    );
\m_vector_i_reg[1127]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => s_axi_arlen(2),
      Q => \m_vector_i_reg_n_0_[1127]\,
      R => '0'
    );
\m_vector_i_reg[1128]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => s_axi_arlen(3),
      Q => \m_vector_i_reg_n_0_[1128]\,
      R => '0'
    );
\m_vector_i_reg[1134]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(14),
      Q => \m_vector_i_reg_n_0_[1134]\,
      R => '0'
    );
\m_vector_i_reg[1135]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(15),
      Q => \m_vector_i_reg_n_0_[1135]\,
      R => '0'
    );
\m_vector_i_reg[1136]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1_n_0\,
      D => \m_vector_i_reg[1136]_0\(16),
      Q => \m_vector_i_reg_n_0_[1136]\,
      R => '0'
    );
s_axi_arready_INST_0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => \gen_endpoint.r_cnt_reg[4]\(4),
      I1 => \state_reg[s_ready_i_n_0_]\,
      I2 => \gen_endpoint.r_state\(0),
      I3 => \gen_endpoint.r_state\(1),
      O => s_axi_arready
    );
\state[s_ready_i]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FEFF2F00"
    )
        port map (
      I0 => \state[storage]_i_3_n_0\,
      I1 => p_0_in(0),
      I2 => p_0_in(1),
      I3 => state,
      I4 => \state_reg[s_ready_i_n_0_]\,
      O => \state[s_ready_i]_i_1_n_0\
    );
\state[s_stall_d]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00FF4000"
    )
        port map (
      I0 => p_0_in(1),
      I1 => p_2_out,
      I2 => \state_reg[s_ready_i_n_0_]\,
      I3 => state,
      I4 => p_0_in(0),
      O => \state[s_stall_d]_i_1_n_0\
    );
\state[s_stall_d]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00100000"
    )
        port map (
      I0 => \gen_endpoint.r_state\(1),
      I1 => \gen_endpoint.r_state\(0),
      I2 => s_axi_arvalid,
      I3 => \gen_endpoint.r_cnt_reg[4]\(4),
      I4 => \^gen_endpoint.r_trigger_decerr\,
      O => p_2_out
    );
\state[s_stall_d]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFD9D999D9"
    )
        port map (
      I0 => p_0_in(1),
      I1 => \state_reg[s_ready_i_n_0_]\,
      I2 => sr_axi_arvalid,
      I3 => mr_axi_arready,
      I4 => \^gen_endpoint.r_trigger_decerr\,
      I5 => \state[s_stall_d]_i_5_n_0\,
      O => state
    );
\state[s_stall_d]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BCBCBC8C8C8CBC8C"
    )
        port map (
      I0 => r_resume,
      I1 => p_0_in(0),
      I2 => p_0_in(1),
      I3 => m_axi_arready,
      I4 => \state_reg[storage]_0\,
      I5 => \gen_endpoint.err_arready\,
      O => \state[s_stall_d]_i_5_n_0\
    );
\state[storage]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5504003344040033"
    )
        port map (
      I0 => \state_reg[s_ready_i_n_0_]\,
      I1 => \state[storage]_i_2_n_0\,
      I2 => \state[storage]_i_3_n_0\,
      I3 => p_0_in(0),
      I4 => p_0_in(1),
      I5 => r_resume,
      O => \state[storage]_i_1_n_0\
    );
\state[storage]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"77777777FFF777F7"
    )
        port map (
      I0 => \state_reg[s_ready_i_n_0_]\,
      I1 => sr_axi_arvalid,
      I2 => m_axi_arready,
      I3 => \state_reg[storage]_0\,
      I4 => \gen_endpoint.err_arready\,
      I5 => \^gen_endpoint.r_trigger_decerr\,
      O => \state[storage]_i_2_n_0\
    );
\state[storage]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A8880888"
    )
        port map (
      I0 => p_0_in(1),
      I1 => m_axi_arready,
      I2 => \gen_endpoint.r_state\(0),
      I3 => \gen_endpoint.r_state\(1),
      I4 => \gen_endpoint.err_arready\,
      O => \state[storage]_i_3_n_0\
    );
\state_reg[s_ready_i]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \state[s_ready_i]_i_1_n_0\,
      Q => \state_reg[s_ready_i_n_0_]\,
      R => areset
    );
\state_reg[s_stall_d]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \state[s_stall_d]_i_1_n_0\,
      Q => p_0_in(0),
      R => areset
    );
\state_reg[storage]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \state[storage]_i_1_n_0\,
      Q => p_0_in(1),
      R => areset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_util_v1_0_4_axi_reg_stall__parameterized0_15\ is
  port (
    m_axi_awvalid : out STD_LOGIC;
    mr_axi_awvalid : out STD_LOGIC;
    \gen_endpoint.w_trigger_decerr\ : out STD_LOGIC;
    \state_reg[s_ready_i]_0\ : out STD_LOGIC;
    m_valid1 : out STD_LOGIC;
    m_vector2 : out STD_LOGIC;
    m_axi_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    m_axi_awaddr : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \gen_endpoint.w_state\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 23 downto 0 );
    D : in STD_LOGIC_VECTOR ( 17 downto 0 );
    s_axi_awlen : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awburst : in STD_LOGIC_VECTOR ( 0 to 0 );
    \state_reg[s_stall_d]_0\ : in STD_LOGIC;
    aclk : in STD_LOGIC;
    mr_axi_awready : in STD_LOGIC;
    m_axi_awready : in STD_LOGIC;
    \state_reg[storage]_0\ : in STD_LOGIC;
    \gen_endpoint.err_awready\ : in STD_LOGIC;
    w_resume : in STD_LOGIC;
    areset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_util_v1_0_4_axi_reg_stall__parameterized0_15\ : entity is "sc_util_v1_0_4_axi_reg_stall";
end \design_1_axi_smc_0_sc_util_v1_0_4_axi_reg_stall__parameterized0_15\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_util_v1_0_4_axi_reg_stall__parameterized0_15\ is
  signal \^gen_endpoint.w_trigger_decerr\ : STD_LOGIC;
  signal m_axi_awvalid_INST_0_i_4_n_0 : STD_LOGIC;
  signal m_axi_awvalid_INST_0_i_5_n_0 : STD_LOGIC;
  signal m_axi_awvalid_INST_0_i_6_n_0 : STD_LOGIC;
  signal m_axi_awvalid_INST_0_i_7_n_0 : STD_LOGIC;
  signal m_axi_awvalid_INST_0_i_8_n_0 : STD_LOGIC;
  signal m_axi_awvalid_INST_0_i_9_n_0 : STD_LOGIC;
  signal \m_vector_i[1136]_i_1__0_n_0\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1026]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1027]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1028]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1029]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1030]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1031]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1032]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1033]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1034]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1035]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1036]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1037]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1038]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1039]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1040]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1061]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1062]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1063]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1064]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1065]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1066]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1067]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1068]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1134]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1135]\ : STD_LOGIC;
  signal \m_vector_i_reg_n_0_[1136]\ : STD_LOGIC;
  signal \^mr_axi_awvalid\ : STD_LOGIC;
  signal p_0_in : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal state : STD_LOGIC;
  signal \state[s_ready_i]_i_1__0_n_0\ : STD_LOGIC;
  signal \state[s_stall_d]_i_1__0_n_0\ : STD_LOGIC;
  signal \state[s_stall_d]_i_4_n_0\ : STD_LOGIC;
  signal \state[storage]_i_1__0_n_0\ : STD_LOGIC;
  signal \state[storage]_i_2__0_n_0\ : STD_LOGIC;
  signal \state[storage]_i_3__0_n_0\ : STD_LOGIC;
  signal \^state_reg[s_ready_i]_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gen_axi.gen_write.s_axi_bid_i[11]_i_3\ : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of \gen_axi.gen_write.s_axi_bid_i[11]_i_4\ : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of m_axi_awvalid_INST_0_i_1 : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of \state[s_ready_i]_i_1__0\ : label is "soft_lutpair19";
begin
  \gen_endpoint.w_trigger_decerr\ <= \^gen_endpoint.w_trigger_decerr\;
  mr_axi_awvalid <= \^mr_axi_awvalid\;
  \state_reg[s_ready_i]_0\ <= \^state_reg[s_ready_i]_0\;
\gen_axi.gen_write.s_axi_bid_i[11]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \^state_reg[s_ready_i]_0\,
      I1 => p_0_in(0),
      I2 => p_0_in(1),
      O => m_valid1
    );
\gen_axi.gen_write.s_axi_bid_i[11]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => p_0_in(0),
      I1 => p_0_in(1),
      I2 => \^state_reg[s_ready_i]_0\,
      O => m_vector2
    );
\m_axi_awaddr[0]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1061]\,
      I1 => s_axi_awaddr(0),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awaddr(0)
    );
\m_axi_awaddr[1]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1062]\,
      I1 => s_axi_awaddr(1),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awaddr(1)
    );
\m_axi_awaddr[2]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1063]\,
      I1 => s_axi_awaddr(2),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awaddr(2)
    );
\m_axi_awaddr[3]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1064]\,
      I1 => s_axi_awaddr(3),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awaddr(3)
    );
\m_axi_awaddr[4]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1065]\,
      I1 => s_axi_awaddr(4),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awaddr(4)
    );
\m_axi_awaddr[5]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1066]\,
      I1 => s_axi_awaddr(5),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awaddr(5)
    );
\m_axi_awaddr[6]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1067]\,
      I1 => s_axi_awaddr(6),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awaddr(6)
    );
\m_axi_awaddr[7]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1068]\,
      I1 => s_axi_awaddr(7),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awaddr(7)
    );
\m_axi_awid[0]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1029]\,
      I1 => D(3),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awid(0)
    );
\m_axi_awid[10]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1039]\,
      I1 => D(13),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awid(10)
    );
\m_axi_awid[11]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1040]\,
      I1 => D(14),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awid(11)
    );
\m_axi_awid[1]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1030]\,
      I1 => D(4),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awid(1)
    );
\m_axi_awid[2]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1031]\,
      I1 => D(5),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awid(2)
    );
\m_axi_awid[3]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1032]\,
      I1 => D(6),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awid(3)
    );
\m_axi_awid[4]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1033]\,
      I1 => D(7),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awid(4)
    );
\m_axi_awid[5]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1034]\,
      I1 => D(8),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awid(5)
    );
\m_axi_awid[6]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1035]\,
      I1 => D(9),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awid(6)
    );
\m_axi_awid[7]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1036]\,
      I1 => D(10),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awid(7)
    );
\m_axi_awid[8]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1037]\,
      I1 => D(11),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awid(8)
    );
\m_axi_awid[9]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1038]\,
      I1 => D(12),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awid(9)
    );
\m_axi_awprot[0]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1134]\,
      I1 => D(15),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awprot(0)
    );
\m_axi_awprot[1]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1135]\,
      I1 => D(16),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awprot(1)
    );
\m_axi_awprot[2]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1136]\,
      I1 => D(17),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awprot(2)
    );
\m_axi_awsize[0]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1026]\,
      I1 => D(0),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awsize(0)
    );
\m_axi_awsize[1]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1027]\,
      I1 => D(1),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awsize(1)
    );
\m_axi_awsize[2]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCAC"
    )
        port map (
      I0 => \m_vector_i_reg_n_0_[1028]\,
      I1 => D(2),
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      O => m_axi_awsize(2)
    );
m_axi_awvalid_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^mr_axi_awvalid\,
      I1 => \gen_endpoint.w_state\(1),
      O => m_axi_awvalid
    );
m_axi_awvalid_INST_0_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000F20"
    )
        port map (
      I0 => \state_reg[s_stall_d]_0\,
      I1 => \^gen_endpoint.w_trigger_decerr\,
      I2 => \^state_reg[s_ready_i]_0\,
      I3 => p_0_in(1),
      I4 => p_0_in(0),
      O => \^mr_axi_awvalid\
    );
m_axi_awvalid_INST_0_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFEFFFFFFFE"
    )
        port map (
      I0 => m_axi_awvalid_INST_0_i_4_n_0,
      I1 => m_axi_awvalid_INST_0_i_5_n_0,
      I2 => m_axi_awvalid_INST_0_i_6_n_0,
      I3 => m_axi_awvalid_INST_0_i_7_n_0,
      I4 => m_axi_awvalid_INST_0_i_8_n_0,
      I5 => m_axi_awvalid_INST_0_i_9_n_0,
      O => \^gen_endpoint.w_trigger_decerr\
    );
m_axi_awvalid_INST_0_i_4: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFDF"
    )
        port map (
      I0 => s_axi_awaddr(17),
      I1 => s_axi_awaddr(19),
      I2 => s_axi_awaddr(10),
      I3 => s_axi_awaddr(13),
      O => m_axi_awvalid_INST_0_i_4_n_0
    );
m_axi_awvalid_INST_0_i_5: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFF7"
    )
        port map (
      I0 => s_axi_awburst(0),
      I1 => s_axi_awaddr(15),
      I2 => s_axi_awaddr(21),
      I3 => s_axi_awaddr(20),
      O => m_axi_awvalid_INST_0_i_5_n_0
    );
m_axi_awvalid_INST_0_i_6: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => s_axi_awaddr(12),
      I1 => s_axi_awaddr(8),
      I2 => s_axi_awaddr(9),
      O => m_axi_awvalid_INST_0_i_6_n_0
    );
m_axi_awvalid_INST_0_i_7: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFDFFFFFFFFFF"
    )
        port map (
      I0 => s_axi_awaddr(16),
      I1 => s_axi_awaddr(18),
      I2 => s_axi_awaddr(23),
      I3 => s_axi_awaddr(22),
      I4 => s_axi_awaddr(11),
      I5 => s_axi_awaddr(14),
      O => m_axi_awvalid_INST_0_i_7_n_0
    );
m_axi_awvalid_INST_0_i_8: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => s_axi_awlen(3),
      I1 => s_axi_awlen(0),
      I2 => s_axi_awlen(2),
      I3 => s_axi_awlen(1),
      O => m_axi_awvalid_INST_0_i_8_n_0
    );
m_axi_awvalid_INST_0_i_9: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => D(2),
      I1 => D(1),
      I2 => D(0),
      O => m_axi_awvalid_INST_0_i_9_n_0
    );
\m_vector_i[1136]_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^state_reg[s_ready_i]_0\,
      I1 => p_0_in(1),
      O => \m_vector_i[1136]_i_1__0_n_0\
    );
\m_vector_i_reg[1026]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(0),
      Q => \m_vector_i_reg_n_0_[1026]\,
      R => '0'
    );
\m_vector_i_reg[1027]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(1),
      Q => \m_vector_i_reg_n_0_[1027]\,
      R => '0'
    );
\m_vector_i_reg[1028]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(2),
      Q => \m_vector_i_reg_n_0_[1028]\,
      R => '0'
    );
\m_vector_i_reg[1029]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(3),
      Q => \m_vector_i_reg_n_0_[1029]\,
      R => '0'
    );
\m_vector_i_reg[1030]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(4),
      Q => \m_vector_i_reg_n_0_[1030]\,
      R => '0'
    );
\m_vector_i_reg[1031]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(5),
      Q => \m_vector_i_reg_n_0_[1031]\,
      R => '0'
    );
\m_vector_i_reg[1032]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(6),
      Q => \m_vector_i_reg_n_0_[1032]\,
      R => '0'
    );
\m_vector_i_reg[1033]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(7),
      Q => \m_vector_i_reg_n_0_[1033]\,
      R => '0'
    );
\m_vector_i_reg[1034]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(8),
      Q => \m_vector_i_reg_n_0_[1034]\,
      R => '0'
    );
\m_vector_i_reg[1035]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(9),
      Q => \m_vector_i_reg_n_0_[1035]\,
      R => '0'
    );
\m_vector_i_reg[1036]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(10),
      Q => \m_vector_i_reg_n_0_[1036]\,
      R => '0'
    );
\m_vector_i_reg[1037]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(11),
      Q => \m_vector_i_reg_n_0_[1037]\,
      R => '0'
    );
\m_vector_i_reg[1038]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(12),
      Q => \m_vector_i_reg_n_0_[1038]\,
      R => '0'
    );
\m_vector_i_reg[1039]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(13),
      Q => \m_vector_i_reg_n_0_[1039]\,
      R => '0'
    );
\m_vector_i_reg[1040]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(14),
      Q => \m_vector_i_reg_n_0_[1040]\,
      R => '0'
    );
\m_vector_i_reg[1061]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => s_axi_awaddr(0),
      Q => \m_vector_i_reg_n_0_[1061]\,
      R => '0'
    );
\m_vector_i_reg[1062]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => s_axi_awaddr(1),
      Q => \m_vector_i_reg_n_0_[1062]\,
      R => '0'
    );
\m_vector_i_reg[1063]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => s_axi_awaddr(2),
      Q => \m_vector_i_reg_n_0_[1063]\,
      R => '0'
    );
\m_vector_i_reg[1064]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => s_axi_awaddr(3),
      Q => \m_vector_i_reg_n_0_[1064]\,
      R => '0'
    );
\m_vector_i_reg[1065]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => s_axi_awaddr(4),
      Q => \m_vector_i_reg_n_0_[1065]\,
      R => '0'
    );
\m_vector_i_reg[1066]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => s_axi_awaddr(5),
      Q => \m_vector_i_reg_n_0_[1066]\,
      R => '0'
    );
\m_vector_i_reg[1067]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => s_axi_awaddr(6),
      Q => \m_vector_i_reg_n_0_[1067]\,
      R => '0'
    );
\m_vector_i_reg[1068]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => s_axi_awaddr(7),
      Q => \m_vector_i_reg_n_0_[1068]\,
      R => '0'
    );
\m_vector_i_reg[1134]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(15),
      Q => \m_vector_i_reg_n_0_[1134]\,
      R => '0'
    );
\m_vector_i_reg[1135]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(16),
      Q => \m_vector_i_reg_n_0_[1135]\,
      R => '0'
    );
\m_vector_i_reg[1136]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \m_vector_i[1136]_i_1__0_n_0\,
      D => D(17),
      Q => \m_vector_i_reg_n_0_[1136]\,
      R => '0'
    );
\state[s_ready_i]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FEFF2F00"
    )
        port map (
      I0 => \state[storage]_i_3__0_n_0\,
      I1 => p_0_in(0),
      I2 => p_0_in(1),
      I3 => state,
      I4 => \^state_reg[s_ready_i]_0\,
      O => \state[s_ready_i]_i_1__0_n_0\
    );
\state[s_stall_d]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000FFFF08000000"
    )
        port map (
      I0 => \state_reg[s_stall_d]_0\,
      I1 => \^gen_endpoint.w_trigger_decerr\,
      I2 => p_0_in(1),
      I3 => \^state_reg[s_ready_i]_0\,
      I4 => state,
      I5 => p_0_in(0),
      O => \state[s_stall_d]_i_1__0_n_0\
    );
\state[s_stall_d]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFD9D999D9"
    )
        port map (
      I0 => p_0_in(1),
      I1 => \^state_reg[s_ready_i]_0\,
      I2 => \state_reg[s_stall_d]_0\,
      I3 => mr_axi_awready,
      I4 => \^gen_endpoint.w_trigger_decerr\,
      I5 => \state[s_stall_d]_i_4_n_0\,
      O => state
    );
\state[s_stall_d]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BCBCBC8C8C8CBC8C"
    )
        port map (
      I0 => w_resume,
      I1 => p_0_in(0),
      I2 => p_0_in(1),
      I3 => m_axi_awready,
      I4 => \state_reg[storage]_0\,
      I5 => \gen_endpoint.err_awready\,
      O => \state[s_stall_d]_i_4_n_0\
    );
\state[storage]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5504003344040033"
    )
        port map (
      I0 => \^state_reg[s_ready_i]_0\,
      I1 => \state[storage]_i_2__0_n_0\,
      I2 => \state[storage]_i_3__0_n_0\,
      I3 => p_0_in(0),
      I4 => p_0_in(1),
      I5 => w_resume,
      O => \state[storage]_i_1__0_n_0\
    );
\state[storage]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"77777777FFF777F7"
    )
        port map (
      I0 => \^state_reg[s_ready_i]_0\,
      I1 => \state_reg[s_stall_d]_0\,
      I2 => m_axi_awready,
      I3 => \state_reg[storage]_0\,
      I4 => \gen_endpoint.err_awready\,
      I5 => \^gen_endpoint.w_trigger_decerr\,
      O => \state[storage]_i_2__0_n_0\
    );
\state[storage]_i_3__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A8880888"
    )
        port map (
      I0 => p_0_in(1),
      I1 => m_axi_awready,
      I2 => \gen_endpoint.w_state\(0),
      I3 => \gen_endpoint.w_state\(1),
      I4 => \gen_endpoint.err_awready\,
      O => \state[storage]_i_3__0_n_0\
    );
\state_reg[s_ready_i]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \state[s_ready_i]_i_1__0_n_0\,
      Q => \^state_reg[s_ready_i]_0\,
      R => areset
    );
\state_reg[s_stall_d]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \state[s_stall_d]_i_1__0_n_0\,
      Q => p_0_in(0),
      R => areset
    );
\state_reg[storage]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \state[storage]_i_1__0_n_0\,
      Q => p_0_in(1),
      R => areset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_util_v1_0_4_axi_splitter is
  port (
    \gen_endpoint.w_state_reg[0]\ : out STD_LOGIC;
    S00_AXI_awvalid : out STD_LOGIC;
    S00_AXI_awvalid_0 : out STD_LOGIC;
    \m_ready_d_reg[0]_0\ : out STD_LOGIC;
    areset_d_reg : out STD_LOGIC;
    \m_ready_d_reg[0]_1\ : out STD_LOGIC;
    \m_ready_d_reg[1]_0\ : out STD_LOGIC;
    mr_axi_awvalid : in STD_LOGIC;
    \gen_endpoint.w_state\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \gen_endpoint.w_state_reg[1]\ : in STD_LOGIC;
    \gen_endpoint.w_state_reg[1]_0\ : in STD_LOGIC;
    s_axi_awvalid : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    p_14_in : in STD_LOGIC;
    \gen_endpoint.w_push_done_reg\ : in STD_LOGIC;
    \gen_endpoint.w_trigger_decerr\ : in STD_LOGIC;
    wroute_vacancy : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \gen_axi.gen_write.s_axi_bid_i_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    S00_AXI_awready : in STD_LOGIC;
    areset : in STD_LOGIC;
    aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_util_v1_0_4_axi_splitter : entity is "sc_util_v1_0_4_axi_splitter";
end design_1_axi_smc_0_sc_util_v1_0_4_axi_splitter;

architecture STRUCTURE of design_1_axi_smc_0_sc_util_v1_0_4_axi_splitter is
  signal \^s00_axi_awvalid\ : STD_LOGIC;
  signal \m_ready_d[0]_i_1_n_0\ : STD_LOGIC;
  signal \m_ready_d[1]_i_1_n_0\ : STD_LOGIC;
  signal \^m_ready_d_reg[0]_0\ : STD_LOGIC;
  signal \^m_ready_d_reg[0]_1\ : STD_LOGIC;
  signal \m_ready_d_reg_n_0_[1]\ : STD_LOGIC;
  signal s_axi_awready_INST_0_i_1_n_0 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gen_pipelined.state[2]_i_2\ : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of \m_ready_d[0]_i_1\ : label is "soft_lutpair31";
begin
  S00_AXI_awvalid <= \^s00_axi_awvalid\;
  \m_ready_d_reg[0]_0\ <= \^m_ready_d_reg[0]_0\;
  \m_ready_d_reg[0]_1\ <= \^m_ready_d_reg[0]_1\;
\gen_endpoint.w_push_done_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0054"
    )
        port map (
      I0 => SR(0),
      I1 => p_14_in,
      I2 => \gen_endpoint.w_push_done_reg\,
      I3 => \^m_ready_d_reg[0]_1\,
      O => areset_d_reg
    );
\gen_endpoint.w_state[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0FF00FF00FF05FB0"
    )
        port map (
      I0 => \^s00_axi_awvalid\,
      I1 => mr_axi_awvalid,
      I2 => \gen_endpoint.w_state\(0),
      I3 => \gen_endpoint.w_state\(1),
      I4 => \gen_endpoint.w_state_reg[1]\,
      I5 => \gen_endpoint.w_state_reg[1]_0\,
      O => \gen_endpoint.w_state_reg[0]\
    );
\gen_endpoint.w_state[1]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00080000"
    )
        port map (
      I0 => \gen_endpoint.w_trigger_decerr\,
      I1 => s_axi_awvalid,
      I2 => \gen_endpoint.w_state\(0),
      I3 => \gen_endpoint.w_state\(1),
      I4 => \^m_ready_d_reg[0]_1\,
      O => \^s00_axi_awvalid\
    );
\gen_pipelined.state[2]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_axi_awvalid,
      I1 => \^m_ready_d_reg[0]_0\,
      O => S00_AXI_awvalid_0
    );
m_axi_awvalid_INST_0_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000004"
    )
        port map (
      I0 => \m_ready_d_reg_n_0_[1]\,
      I1 => s_axi_awvalid,
      I2 => \gen_endpoint.w_state\(0),
      I3 => \gen_endpoint.w_state\(1),
      I4 => Q(0),
      I5 => \gen_axi.gen_write.s_axi_bid_i_reg[0]\(0),
      O => \m_ready_d_reg[1]_0\
    );
\m_ready_d[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000EC"
    )
        port map (
      I0 => wroute_vacancy,
      I1 => \^m_ready_d_reg[0]_0\,
      I2 => s_axi_awvalid,
      I3 => \^m_ready_d_reg[0]_1\,
      I4 => areset,
      O => \m_ready_d[0]_i_1_n_0\
    );
\m_ready_d[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000000E"
    )
        port map (
      I0 => s_axi_awvalid,
      I1 => \m_ready_d_reg_n_0_[1]\,
      I2 => s_axi_awready_INST_0_i_1_n_0,
      I3 => \^m_ready_d_reg[0]_0\,
      I4 => wroute_vacancy,
      I5 => areset,
      O => \m_ready_d[1]_i_1_n_0\
    );
\m_ready_d_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \m_ready_d[0]_i_1_n_0\,
      Q => \^m_ready_d_reg[0]_0\,
      R => '0'
    );
\m_ready_d_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \m_ready_d[1]_i_1_n_0\,
      Q => \m_ready_d_reg_n_0_[1]\,
      R => '0'
    );
s_axi_awready_INST_0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"54"
    )
        port map (
      I0 => s_axi_awready_INST_0_i_1_n_0,
      I1 => \^m_ready_d_reg[0]_0\,
      I2 => wroute_vacancy,
      O => \^m_ready_d_reg[0]_1\
    );
s_axi_awready_INST_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555455555555"
    )
        port map (
      I0 => \m_ready_d_reg_n_0_[1]\,
      I1 => \gen_endpoint.w_state\(0),
      I2 => \gen_endpoint.w_state\(1),
      I3 => Q(0),
      I4 => \gen_axi.gen_write.s_axi_bid_i_reg[0]\(0),
      I5 => S00_AXI_awready,
      O => s_axi_awready_INST_0_i_1_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0\ is
  port (
    is_zero_r_reg_0 : out STD_LOGIC;
    is_zero_r_reg_1 : out STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    \gen_normal_area.fifo_node_payld_full_i\ : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall_late : in STD_LOGIC;
    areset_r : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    empty_r : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_areset_r : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0\ : entity is "sc_util_v1_0_4_counter";
end \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0\ is
  signal cnt_is_zero : STD_LOGIC;
  signal \count_r[0]_i_1_n_0\ : STD_LOGIC;
  signal \count_r_reg_n_0_[0]\ : STD_LOGIC;
  signal is_zero_r_i_1_n_0 : STD_LOGIC;
  signal is_zero_r_i_2_n_0 : STD_LOGIC;
begin
\count_r[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000069666666"
    )
        port map (
      I0 => \count_r_reg_n_0_[0]\,
      I1 => E(0),
      I2 => empty_r,
      I3 => Q(0),
      I4 => m_sc_recv(0),
      I5 => areset_r,
      O => \count_r[0]_i_1_n_0\
    );
\count_r_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \count_r[0]_i_1_n_0\,
      Q => \count_r_reg_n_0_[0]\,
      R => '0'
    );
\gen_single_rank.empty_r_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF4F404040"
    )
        port map (
      I0 => E(0),
      I1 => cnt_is_zero,
      I2 => empty_r,
      I3 => Q(0),
      I4 => m_sc_recv(0),
      I5 => m_sc_areset_r,
      O => is_zero_r_reg_1
    );
\gen_single_rank.full_r_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF1010FF10"
    )
        port map (
      I0 => is_zero_r_i_2_n_0,
      I1 => cnt_is_zero,
      I2 => \gen_normal_area.fifo_node_payld_full_i\,
      I3 => s_sc_send(0),
      I4 => arb_stall_late,
      I5 => areset_r,
      O => is_zero_r_reg_0
    );
is_zero_r_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFBAE08A2"
    )
        port map (
      I0 => cnt_is_zero,
      I1 => s_sc_send(0),
      I2 => arb_stall_late,
      I3 => is_zero_r_i_2_n_0,
      I4 => \count_r_reg_n_0_[0]\,
      I5 => areset_r,
      O => is_zero_r_i_1_n_0
    );
is_zero_r_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => empty_r,
      I1 => Q(0),
      I2 => m_sc_recv(0),
      O => is_zero_r_i_2_n_0
    );
is_zero_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => is_zero_r_i_1_n_0,
      Q => cnt_is_zero,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_1\ is
  port (
    \gen_single_rank.empty_r_reg\ : out STD_LOGIC;
    \grant_i_reg[1]\ : out STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    empty_r : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    \gen_normal_area.fifo_node_payld_full_i\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    areset_r : in STD_LOGIC;
    \gen_single_rank.empty_r_reg_0\ : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_areset_r : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_1\ : entity is "sc_util_v1_0_4_counter";
end \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_1\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_1\ is
  signal cnt_is_zero : STD_LOGIC;
  signal \count_r[0]_i_1_n_0\ : STD_LOGIC;
  signal \count_r_reg_n_0_[0]\ : STD_LOGIC;
  signal \is_zero_r_i_1__0_n_0\ : STD_LOGIC;
begin
\count_r[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000006A6A956A"
    )
        port map (
      I0 => \count_r_reg_n_0_[0]\,
      I1 => s_sc_send(0),
      I2 => \gen_single_rank.empty_r_reg_0\,
      I3 => m_sc_recv(0),
      I4 => empty_r,
      I5 => areset_r,
      O => \count_r[0]_i_1_n_0\
    );
\count_r_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \count_r[0]_i_1_n_0\,
      Q => \count_r_reg_n_0_[0]\,
      R => '0'
    );
\gen_single_rank.empty_r_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF7070FF00"
    )
        port map (
      I0 => \gen_single_rank.empty_r_reg_0\,
      I1 => s_sc_send(0),
      I2 => cnt_is_zero,
      I3 => m_sc_recv(0),
      I4 => empty_r,
      I5 => m_sc_areset_r,
      O => \grant_i_reg[1]\
    );
\gen_single_rank.full_r_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFF0B00"
    )
        port map (
      I0 => empty_r,
      I1 => m_sc_recv(0),
      I2 => cnt_is_zero,
      I3 => \gen_normal_area.fifo_node_payld_full_i\,
      I4 => E(0),
      I5 => areset_r,
      O => \gen_single_rank.empty_r_reg\
    );
\is_zero_r_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFEEBE2282"
    )
        port map (
      I0 => cnt_is_zero,
      I1 => E(0),
      I2 => m_sc_recv(0),
      I3 => empty_r,
      I4 => \count_r_reg_n_0_[0]\,
      I5 => areset_r,
      O => \is_zero_r_i_1__0_n_0\
    );
is_zero_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \is_zero_r_i_1__0_n_0\,
      Q => cnt_is_zero,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_13\ is
  port (
    is_zero_r_reg_0 : out STD_LOGIC;
    is_zero_r_reg_1 : out STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    \gen_normal_area.fifo_node_payld_full_i\ : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall_late : in STD_LOGIC;
    areset_r : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    empty_r : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_areset_r : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_13\ : entity is "sc_util_v1_0_4_counter";
end \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_13\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_13\ is
  signal cnt_is_zero : STD_LOGIC;
  signal \count_r[0]_i_1_n_0\ : STD_LOGIC;
  signal \count_r_reg_n_0_[0]\ : STD_LOGIC;
  signal is_zero_r_i_1_n_0 : STD_LOGIC;
  signal is_zero_r_i_2_n_0 : STD_LOGIC;
begin
\count_r[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000069666666"
    )
        port map (
      I0 => \count_r_reg_n_0_[0]\,
      I1 => E(0),
      I2 => empty_r,
      I3 => Q(0),
      I4 => m_sc_recv(0),
      I5 => areset_r,
      O => \count_r[0]_i_1_n_0\
    );
\count_r_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \count_r[0]_i_1_n_0\,
      Q => \count_r_reg_n_0_[0]\,
      R => '0'
    );
\gen_single_rank.empty_r_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF4F404040"
    )
        port map (
      I0 => E(0),
      I1 => cnt_is_zero,
      I2 => empty_r,
      I3 => Q(0),
      I4 => m_sc_recv(0),
      I5 => m_sc_areset_r,
      O => is_zero_r_reg_1
    );
\gen_single_rank.full_r_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF1010FF10"
    )
        port map (
      I0 => is_zero_r_i_2_n_0,
      I1 => cnt_is_zero,
      I2 => \gen_normal_area.fifo_node_payld_full_i\,
      I3 => s_sc_send(0),
      I4 => arb_stall_late,
      I5 => areset_r,
      O => is_zero_r_reg_0
    );
is_zero_r_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFBAE08A2"
    )
        port map (
      I0 => cnt_is_zero,
      I1 => s_sc_send(0),
      I2 => arb_stall_late,
      I3 => is_zero_r_i_2_n_0,
      I4 => \count_r_reg_n_0_[0]\,
      I5 => areset_r,
      O => is_zero_r_i_1_n_0
    );
is_zero_r_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => empty_r,
      I1 => Q(0),
      I2 => m_sc_recv(0),
      O => is_zero_r_i_2_n_0
    );
is_zero_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => is_zero_r_i_1_n_0,
      Q => cnt_is_zero,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_5\ is
  port (
    \gen_single_rank.empty_r_reg\ : out STD_LOGIC;
    \grant_i_reg[1]\ : out STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    empty_r : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    \gen_normal_area.fifo_node_payld_full_i\ : in STD_LOGIC;
    s_sc_handshake : in STD_LOGIC_VECTOR ( 0 to 0 );
    areset_r : in STD_LOGIC;
    \gen_single_rank.empty_r_reg_0\ : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_areset_r : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_5\ : entity is "sc_util_v1_0_4_counter";
end \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_5\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_5\ is
  signal cnt_is_zero : STD_LOGIC;
  signal \count_r[0]_i_1_n_0\ : STD_LOGIC;
  signal \count_r_reg_n_0_[0]\ : STD_LOGIC;
  signal \is_zero_r_i_1__0_n_0\ : STD_LOGIC;
begin
\count_r[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000006A6A956A"
    )
        port map (
      I0 => \count_r_reg_n_0_[0]\,
      I1 => s_sc_send(0),
      I2 => \gen_single_rank.empty_r_reg_0\,
      I3 => m_sc_recv(0),
      I4 => empty_r,
      I5 => areset_r,
      O => \count_r[0]_i_1_n_0\
    );
\count_r_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \count_r[0]_i_1_n_0\,
      Q => \count_r_reg_n_0_[0]\,
      R => '0'
    );
\gen_single_rank.empty_r_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF7070FF00"
    )
        port map (
      I0 => \gen_single_rank.empty_r_reg_0\,
      I1 => s_sc_send(0),
      I2 => cnt_is_zero,
      I3 => m_sc_recv(0),
      I4 => empty_r,
      I5 => m_sc_areset_r,
      O => \grant_i_reg[1]\
    );
\gen_single_rank.full_r_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFF0B00"
    )
        port map (
      I0 => empty_r,
      I1 => m_sc_recv(0),
      I2 => cnt_is_zero,
      I3 => \gen_normal_area.fifo_node_payld_full_i\,
      I4 => s_sc_handshake(0),
      I5 => areset_r,
      O => \gen_single_rank.empty_r_reg\
    );
\is_zero_r_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFEEBE2282"
    )
        port map (
      I0 => cnt_is_zero,
      I1 => s_sc_handshake(0),
      I2 => m_sc_recv(0),
      I3 => empty_r,
      I4 => \count_r_reg_n_0_[0]\,
      I5 => areset_r,
      O => \is_zero_r_i_1__0_n_0\
    );
is_zero_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \is_zero_r_i_1__0_n_0\,
      Q => cnt_is_zero,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_8\ is
  port (
    \gen_single_rank.empty_r_reg\ : out STD_LOGIC;
    \gen_pipe[1].pipe_reg[1][0]\ : out STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    empty_r : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    \gen_normal_area.fifo_node_payld_full_i\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    areset_r : in STD_LOGIC;
    arb_stall_late : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_areset_r : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_8\ : entity is "sc_util_v1_0_4_counter";
end \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_8\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_8\ is
  signal cnt_is_zero : STD_LOGIC;
  signal \count_r[0]_i_1_n_0\ : STD_LOGIC;
  signal \count_r_reg_n_0_[0]\ : STD_LOGIC;
  signal is_zero_r_i_1_n_0 : STD_LOGIC;
begin
\count_r[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000A6A659A6"
    )
        port map (
      I0 => \count_r_reg_n_0_[0]\,
      I1 => s_sc_send(0),
      I2 => arb_stall_late,
      I3 => m_sc_recv(0),
      I4 => empty_r,
      I5 => areset_r,
      O => \count_r[0]_i_1_n_0\
    );
\count_r_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \count_r[0]_i_1_n_0\,
      Q => \count_r_reg_n_0_[0]\,
      R => '0'
    );
\gen_single_rank.empty_r_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFB0B0FF00"
    )
        port map (
      I0 => arb_stall_late,
      I1 => s_sc_send(0),
      I2 => cnt_is_zero,
      I3 => m_sc_recv(0),
      I4 => empty_r,
      I5 => m_sc_areset_r,
      O => \gen_pipe[1].pipe_reg[1][0]\
    );
\gen_single_rank.full_r_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFF0B00"
    )
        port map (
      I0 => empty_r,
      I1 => m_sc_recv(0),
      I2 => cnt_is_zero,
      I3 => \gen_normal_area.fifo_node_payld_full_i\,
      I4 => E(0),
      I5 => areset_r,
      O => \gen_single_rank.empty_r_reg\
    );
is_zero_r_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFEEBE2282"
    )
        port map (
      I0 => cnt_is_zero,
      I1 => E(0),
      I2 => m_sc_recv(0),
      I3 => empty_r,
      I4 => \count_r_reg_n_0_[0]\,
      I5 => areset_r,
      O => is_zero_r_i_1_n_0
    );
is_zero_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => is_zero_r_i_1_n_0,
      Q => cnt_is_zero,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized1\ is
  port (
    is_zero_r_reg_0 : out STD_LOGIC;
    areset_r : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    is_zero_r_reg_1 : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized1\ : entity is "sc_util_v1_0_4_counter";
end \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized1\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized1\ is
  signal \count_r[0]_i_1_n_0\ : STD_LOGIC;
  signal \count_r[1]_i_1_n_0\ : STD_LOGIC;
  signal \count_r_reg_n_0_[0]\ : STD_LOGIC;
  signal \count_r_reg_n_0_[1]\ : STD_LOGIC;
  signal is_zero_r_i_1_n_0 : STD_LOGIC;
  signal \^is_zero_r_reg_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \count_r[0]_i_1\ : label is "soft_lutpair106";
  attribute SOFT_HLUTNM of \count_r[1]_i_1\ : label is "soft_lutpair106";
begin
  is_zero_r_reg_0 <= \^is_zero_r_reg_0\;
\count_r[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8778"
    )
        port map (
      I0 => is_zero_r_reg_1,
      I1 => s_sc_send(0),
      I2 => s_sc_req(0),
      I3 => \count_r_reg_n_0_[0]\,
      O => \count_r[0]_i_1_n_0\
    );
\count_r[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"E7771888"
    )
        port map (
      I0 => \count_r_reg_n_0_[0]\,
      I1 => s_sc_req(0),
      I2 => s_sc_send(0),
      I3 => is_zero_r_reg_1,
      I4 => \count_r_reg_n_0_[1]\,
      O => \count_r[1]_i_1_n_0\
    );
\count_r_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \count_r[0]_i_1_n_0\,
      Q => \count_r_reg_n_0_[0]\,
      R => areset_r
    );
\count_r_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \count_r[1]_i_1_n_0\,
      Q => \count_r_reg_n_0_[1]\,
      R => areset_r
    );
is_zero_r_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F8882FFF08882000"
    )
        port map (
      I0 => \count_r_reg_n_0_[0]\,
      I1 => \count_r_reg_n_0_[1]\,
      I2 => is_zero_r_reg_1,
      I3 => s_sc_send(0),
      I4 => s_sc_req(0),
      I5 => \^is_zero_r_reg_0\,
      O => is_zero_r_i_1_n_0
    );
is_zero_r_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => is_zero_r_i_1_n_0,
      Q => \^is_zero_r_reg_0\,
      S => areset_r
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized1_3\ is
  port (
    is_zero_r_reg_0 : out STD_LOGIC;
    areset_r : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    is_zero_r_reg_1 : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized1_3\ : entity is "sc_util_v1_0_4_counter";
end \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized1_3\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized1_3\ is
  signal \count_r[0]_i_1_n_0\ : STD_LOGIC;
  signal \count_r[1]_i_1_n_0\ : STD_LOGIC;
  signal \count_r_reg_n_0_[0]\ : STD_LOGIC;
  signal \count_r_reg_n_0_[1]\ : STD_LOGIC;
  signal is_zero_r_i_1_n_0 : STD_LOGIC;
  signal \^is_zero_r_reg_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \count_r[0]_i_1\ : label is "soft_lutpair105";
  attribute SOFT_HLUTNM of \count_r[1]_i_1\ : label is "soft_lutpair105";
begin
  is_zero_r_reg_0 <= \^is_zero_r_reg_0\;
\count_r[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8778"
    )
        port map (
      I0 => is_zero_r_reg_1,
      I1 => s_sc_send(0),
      I2 => s_sc_req(0),
      I3 => \count_r_reg_n_0_[0]\,
      O => \count_r[0]_i_1_n_0\
    );
\count_r[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"E7771888"
    )
        port map (
      I0 => \count_r_reg_n_0_[0]\,
      I1 => s_sc_req(0),
      I2 => s_sc_send(0),
      I3 => is_zero_r_reg_1,
      I4 => \count_r_reg_n_0_[1]\,
      O => \count_r[1]_i_1_n_0\
    );
\count_r_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \count_r[0]_i_1_n_0\,
      Q => \count_r_reg_n_0_[0]\,
      R => areset_r
    );
\count_r_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \count_r[1]_i_1_n_0\,
      Q => \count_r_reg_n_0_[1]\,
      R => areset_r
    );
is_zero_r_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F8882FFF08882000"
    )
        port map (
      I0 => \count_r_reg_n_0_[0]\,
      I1 => \count_r_reg_n_0_[1]\,
      I2 => is_zero_r_reg_1,
      I3 => s_sc_send(0),
      I4 => s_sc_req(0),
      I5 => \^is_zero_r_reg_0\,
      O => is_zero_r_i_1_n_0
    );
is_zero_r_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => is_zero_r_i_1_n_0,
      Q => \^is_zero_r_reg_0\,
      S => areset_r
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_util_v1_0_4_mux__parameterized1\ is
  port (
    m_sc_payld : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_util_v1_0_4_mux__parameterized1\ : entity is "sc_util_v1_0_4_mux";
end \design_1_axi_smc_0_sc_util_v1_0_4_mux__parameterized1\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_util_v1_0_4_mux__parameterized1\ is
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \m_sc_payld[5]_INST_0\ : label is "soft_lutpair100";
  attribute SOFT_HLUTNM of \m_sc_payld[6]_INST_0\ : label is "soft_lutpair100";
begin
\m_sc_payld[5]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(0),
      O => m_sc_payld(0)
    );
\m_sc_payld[6]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(1),
      O => m_sc_payld(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_util_v1_0_4_mux__parameterized3\ is
  port (
    m_sc_payld : out STD_LOGIC_VECTOR ( 33 downto 0 );
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 33 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_util_v1_0_4_mux__parameterized3\ : entity is "sc_util_v1_0_4_mux";
end \design_1_axi_smc_0_sc_util_v1_0_4_mux__parameterized3\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_util_v1_0_4_mux__parameterized3\ is
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \m_sc_payld[18]_INST_0\ : label is "soft_lutpair125";
  attribute SOFT_HLUTNM of \m_sc_payld[19]_INST_0\ : label is "soft_lutpair125";
  attribute SOFT_HLUTNM of \m_sc_payld[21]_INST_0\ : label is "soft_lutpair124";
  attribute SOFT_HLUTNM of \m_sc_payld[22]_INST_0\ : label is "soft_lutpair124";
  attribute SOFT_HLUTNM of \m_sc_payld[23]_INST_0\ : label is "soft_lutpair123";
  attribute SOFT_HLUTNM of \m_sc_payld[24]_INST_0\ : label is "soft_lutpair123";
  attribute SOFT_HLUTNM of \m_sc_payld[25]_INST_0\ : label is "soft_lutpair122";
  attribute SOFT_HLUTNM of \m_sc_payld[26]_INST_0\ : label is "soft_lutpair122";
  attribute SOFT_HLUTNM of \m_sc_payld[27]_INST_0\ : label is "soft_lutpair121";
  attribute SOFT_HLUTNM of \m_sc_payld[28]_INST_0\ : label is "soft_lutpair121";
  attribute SOFT_HLUTNM of \m_sc_payld[29]_INST_0\ : label is "soft_lutpair120";
  attribute SOFT_HLUTNM of \m_sc_payld[30]_INST_0\ : label is "soft_lutpair120";
  attribute SOFT_HLUTNM of \m_sc_payld[31]_INST_0\ : label is "soft_lutpair119";
  attribute SOFT_HLUTNM of \m_sc_payld[32]_INST_0\ : label is "soft_lutpair119";
  attribute SOFT_HLUTNM of \m_sc_payld[33]_INST_0\ : label is "soft_lutpair118";
  attribute SOFT_HLUTNM of \m_sc_payld[34]_INST_0\ : label is "soft_lutpair118";
  attribute SOFT_HLUTNM of \m_sc_payld[35]_INST_0\ : label is "soft_lutpair117";
  attribute SOFT_HLUTNM of \m_sc_payld[36]_INST_0\ : label is "soft_lutpair117";
  attribute SOFT_HLUTNM of \m_sc_payld[37]_INST_0\ : label is "soft_lutpair116";
  attribute SOFT_HLUTNM of \m_sc_payld[38]_INST_0\ : label is "soft_lutpair116";
  attribute SOFT_HLUTNM of \m_sc_payld[39]_INST_0\ : label is "soft_lutpair115";
  attribute SOFT_HLUTNM of \m_sc_payld[40]_INST_0\ : label is "soft_lutpair115";
  attribute SOFT_HLUTNM of \m_sc_payld[41]_INST_0\ : label is "soft_lutpair114";
  attribute SOFT_HLUTNM of \m_sc_payld[42]_INST_0\ : label is "soft_lutpair114";
  attribute SOFT_HLUTNM of \m_sc_payld[43]_INST_0\ : label is "soft_lutpair113";
  attribute SOFT_HLUTNM of \m_sc_payld[44]_INST_0\ : label is "soft_lutpair113";
  attribute SOFT_HLUTNM of \m_sc_payld[45]_INST_0\ : label is "soft_lutpair112";
  attribute SOFT_HLUTNM of \m_sc_payld[46]_INST_0\ : label is "soft_lutpair112";
  attribute SOFT_HLUTNM of \m_sc_payld[47]_INST_0\ : label is "soft_lutpair111";
  attribute SOFT_HLUTNM of \m_sc_payld[48]_INST_0\ : label is "soft_lutpair111";
  attribute SOFT_HLUTNM of \m_sc_payld[49]_INST_0\ : label is "soft_lutpair110";
  attribute SOFT_HLUTNM of \m_sc_payld[50]_INST_0\ : label is "soft_lutpair110";
  attribute SOFT_HLUTNM of \m_sc_payld[51]_INST_0\ : label is "soft_lutpair109";
  attribute SOFT_HLUTNM of \m_sc_payld[52]_INST_0\ : label is "soft_lutpair109";
begin
\m_sc_payld[18]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(0),
      O => m_sc_payld(0)
    );
\m_sc_payld[19]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(1),
      O => m_sc_payld(1)
    );
\m_sc_payld[21]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(2),
      O => m_sc_payld(2)
    );
\m_sc_payld[22]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(3),
      O => m_sc_payld(3)
    );
\m_sc_payld[23]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(4),
      O => m_sc_payld(4)
    );
\m_sc_payld[24]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(5),
      O => m_sc_payld(5)
    );
\m_sc_payld[25]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(6),
      O => m_sc_payld(6)
    );
\m_sc_payld[26]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(7),
      O => m_sc_payld(7)
    );
\m_sc_payld[27]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(8),
      O => m_sc_payld(8)
    );
\m_sc_payld[28]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(9),
      O => m_sc_payld(9)
    );
\m_sc_payld[29]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(10),
      O => m_sc_payld(10)
    );
\m_sc_payld[30]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(11),
      O => m_sc_payld(11)
    );
\m_sc_payld[31]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(12),
      O => m_sc_payld(12)
    );
\m_sc_payld[32]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(13),
      O => m_sc_payld(13)
    );
\m_sc_payld[33]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(14),
      O => m_sc_payld(14)
    );
\m_sc_payld[34]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(15),
      O => m_sc_payld(15)
    );
\m_sc_payld[35]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(16),
      O => m_sc_payld(16)
    );
\m_sc_payld[36]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(17),
      O => m_sc_payld(17)
    );
\m_sc_payld[37]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(18),
      O => m_sc_payld(18)
    );
\m_sc_payld[38]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(19),
      O => m_sc_payld(19)
    );
\m_sc_payld[39]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(20),
      O => m_sc_payld(20)
    );
\m_sc_payld[40]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(21),
      O => m_sc_payld(21)
    );
\m_sc_payld[41]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(22),
      O => m_sc_payld(22)
    );
\m_sc_payld[42]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(23),
      O => m_sc_payld(23)
    );
\m_sc_payld[43]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(24),
      O => m_sc_payld(24)
    );
\m_sc_payld[44]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(25),
      O => m_sc_payld(25)
    );
\m_sc_payld[45]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(26),
      O => m_sc_payld(26)
    );
\m_sc_payld[46]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(27),
      O => m_sc_payld(27)
    );
\m_sc_payld[47]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(28),
      O => m_sc_payld(28)
    );
\m_sc_payld[48]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(29),
      O => m_sc_payld(29)
    );
\m_sc_payld[49]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(30),
      O => m_sc_payld(30)
    );
\m_sc_payld[50]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(31),
      O => m_sc_payld(31)
    );
\m_sc_payld[51]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(32),
      O => m_sc_payld(32)
    );
\m_sc_payld[52]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m_sc_recv(0),
      I1 => s_sc_payld(33),
      O => m_sc_payld(33)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7\ is
  port (
    arb_stall_late : out STD_LOGIC;
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7\ : entity is "sc_util_v1_0_4_pipeline";
end \design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7\ is
  signal \^arb_stall_late\ : STD_LOGIC;
  attribute SHREG_EXTRACT : string;
  attribute SHREG_EXTRACT of \gen_pipe[1].pipe_reg[1][0]\ : label is "no";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gen_single_rank.data[54]_i_1\ : label is "soft_lutpair108";
  attribute SOFT_HLUTNM of \s_sc_recv[0]_INST_0\ : label is "soft_lutpair108";
begin
  arb_stall_late <= \^arb_stall_late\;
\gen_pipe[1].pipe_reg[1][0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => arb_stall,
      Q => \^arb_stall_late\,
      R => '0'
    );
\gen_single_rank.data[54]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_send(0),
      I1 => \^arb_stall_late\,
      O => E(0)
    );
\s_sc_recv[0]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^arb_stall_late\,
      O => s_sc_recv(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7_6\ is
  port (
    arb_stall_late : out STD_LOGIC;
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7_6\ : entity is "sc_util_v1_0_4_pipeline";
end \design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7_6\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7_6\ is
  signal \^arb_stall_late\ : STD_LOGIC;
  attribute SHREG_EXTRACT : string;
  attribute SHREG_EXTRACT of \gen_pipe[1].pipe_reg[1][0]\ : label is "no";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gen_single_rank.data[132]_i_1\ : label is "soft_lutpair104";
  attribute SOFT_HLUTNM of \s_sc_recv[0]_INST_0\ : label is "soft_lutpair104";
begin
  arb_stall_late <= \^arb_stall_late\;
\gen_pipe[1].pipe_reg[1][0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => arb_stall,
      Q => \^arb_stall_late\,
      R => '0'
    );
\gen_single_rank.data[132]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_send(0),
      I1 => \^arb_stall_late\,
      O => E(0)
    );
\s_sc_recv[0]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^arb_stall_late\,
      O => s_sc_recv(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7_9\ is
  port (
    arb_stall_late : out STD_LOGIC;
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7_9\ : entity is "sc_util_v1_0_4_pipeline";
end \design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7_9\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7_9\ is
  signal \^arb_stall_late\ : STD_LOGIC;
  attribute SHREG_EXTRACT : string;
  attribute SHREG_EXTRACT of \gen_pipe[1].pipe_reg[1][0]\ : label is "no";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gen_single_rank.data[132]_i_1\ : label is "soft_lutpair102";
  attribute SOFT_HLUTNM of \s_sc_recv[0]_INST_0\ : label is "soft_lutpair102";
begin
  arb_stall_late <= \^arb_stall_late\;
\gen_pipe[1].pipe_reg[1][0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => arb_stall,
      Q => \^arb_stall_late\,
      R => '0'
    );
\gen_single_rank.data[132]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_send(0),
      I1 => \^arb_stall_late\,
      O => E(0)
    );
\s_sc_recv[0]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^arb_stall_late\,
      O => s_sc_recv(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_util_v1_0_4_srl_rtl is
  port (
    p_1_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    aclk : in STD_LOGIC;
    \shift_reg_reg[0]_srl16_0\ : in STD_LOGIC;
    \shift_reg_reg[0]_srl16_1\ : in STD_LOGIC;
    \shift_reg_reg[0]_srl16_2\ : in STD_LOGIC;
    \shift_reg_reg[0]_srl16_3\ : in STD_LOGIC;
    s_axi_awvalid : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_util_v1_0_4_srl_rtl : entity is "sc_util_v1_0_4_srl_rtl";
end design_1_axi_smc_0_sc_util_v1_0_4_srl_rtl;

architecture STRUCTURE of design_1_axi_smc_0_sc_util_v1_0_4_srl_rtl is
  signal shift : STD_LOGIC;
  attribute srl_bus_name : string;
  attribute srl_bus_name of \shift_reg_reg[0]_srl16\ : label is "inst/\s00_entry_pipeline/s00_mmu/inst /\gen_wroute_fifo.wroute_fifo/gen_srls[2].srl_nx1/shift_reg_reg ";
  attribute srl_name : string;
  attribute srl_name of \shift_reg_reg[0]_srl16\ : label is "inst/\s00_entry_pipeline/s00_mmu/inst /\gen_wroute_fifo.wroute_fifo/gen_srls[2].srl_nx1/shift_reg_reg[0]_srl16 ";
begin
\shift_reg_reg[0]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => shift,
      CLK => aclk,
      D => '1',
      Q => p_1_out
    );
\shift_reg_reg[0]_srl16_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"08880808"
    )
        port map (
      I0 => \shift_reg_reg[0]_srl16_0\,
      I1 => \shift_reg_reg[0]_srl16_1\,
      I2 => \shift_reg_reg[0]_srl16_2\,
      I3 => \shift_reg_reg[0]_srl16_3\,
      I4 => s_axi_awvalid,
      O => shift
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_lpf is
  port (
    lpf_int : out STD_LOGIC;
    aclk : in STD_LOGIC;
    aresetn : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_lpf : entity is "lpf";
end design_1_axi_smc_0_lpf;

architecture STRUCTURE of design_1_axi_smc_0_lpf is
  signal Q : STD_LOGIC;
  signal lpf_asr : STD_LOGIC;
  signal lpf_int0 : STD_LOGIC;
  signal p_0_in : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of POR_SRL_I : label is "SRL16";
  attribute box_type : string;
  attribute box_type of POR_SRL_I : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of POR_SRL_I : label is "inst/\clk_map/psr_aclk/U0/EXT_LPF/POR_SRL_I ";
begin
\ACTIVE_LOW_AUX.ACT_LO_AUX\: entity work.design_1_axi_smc_0_cdc_sync
     port map (
      aclk => aclk,
      aresetn => aresetn,
      scndry_out => p_0_in
    );
POR_SRL_I: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"FFFF"
    )
        port map (
      A0 => '1',
      A1 => '1',
      A2 => '1',
      A3 => '1',
      CE => '1',
      CLK => aclk,
      D => '0',
      Q => Q
    );
lpf_asr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => p_0_in,
      Q => lpf_asr,
      R => '0'
    );
lpf_int_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q,
      I1 => lpf_asr,
      O => lpf_int0
    );
lpf_int_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => lpf_int0,
      Q => lpf_int,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sequence_psr is
  port (
    bsr_reg_0 : out STD_LOGIC;
    lpf_int : in STD_LOGIC;
    aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sequence_psr : entity is "sequence_psr";
end design_1_axi_smc_0_sequence_psr;

architecture STRUCTURE of design_1_axi_smc_0_sequence_psr is
  signal Bsr_out : STD_LOGIC;
  signal Core_i_1_n_0 : STD_LOGIC;
  signal MB_out : STD_LOGIC;
  signal \bsr_dec_reg_n_0_[0]\ : STD_LOGIC;
  signal \bsr_dec_reg_n_0_[1]\ : STD_LOGIC;
  signal \bsr_dec_reg_n_0_[2]\ : STD_LOGIC;
  signal bsr_i_1_n_0 : STD_LOGIC;
  signal \core_dec[0]_i_1_n_0\ : STD_LOGIC;
  signal \core_dec[2]_i_1_n_0\ : STD_LOGIC;
  signal \core_dec_reg_n_0_[0]\ : STD_LOGIC;
  signal from_sys_i_1_n_0 : STD_LOGIC;
  signal p_0_in : STD_LOGIC;
  signal p_5_out : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \pr_dec0__0\ : STD_LOGIC;
  signal seq_clr : STD_LOGIC;
  signal seq_cnt : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal seq_cnt_en : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N_i_1\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of Core_i_1 : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \bsr_dec[0]_i_1\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \bsr_dec[2]_i_1\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of bsr_i_1 : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \core_dec[0]_i_1\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \core_dec[2]_i_1\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of from_sys_i_1 : label is "soft_lutpair4";
begin
\ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => Bsr_out,
      O => bsr_reg_0
    );
Core_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => MB_out,
      I1 => p_0_in,
      O => Core_i_1_n_0
    );
Core_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk,
      CE => '1',
      D => Core_i_1_n_0,
      Q => MB_out,
      S => lpf_int
    );
SEQ_COUNTER: entity work.design_1_axi_smc_0_upcnt_n
     port map (
      Q(5 downto 0) => seq_cnt(5 downto 0),
      aclk => aclk,
      seq_clr => seq_clr,
      seq_cnt_en => seq_cnt_en
    );
\bsr_dec[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0090"
    )
        port map (
      I0 => seq_cnt_en,
      I1 => seq_cnt(4),
      I2 => seq_cnt(3),
      I3 => seq_cnt(5),
      O => p_5_out(0)
    );
\bsr_dec[2]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \bsr_dec_reg_n_0_[1]\,
      I1 => \bsr_dec_reg_n_0_[0]\,
      O => p_5_out(2)
    );
\bsr_dec_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => p_5_out(0),
      Q => \bsr_dec_reg_n_0_[0]\,
      R => '0'
    );
\bsr_dec_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \pr_dec0__0\,
      Q => \bsr_dec_reg_n_0_[1]\,
      R => '0'
    );
\bsr_dec_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => p_5_out(2),
      Q => \bsr_dec_reg_n_0_[2]\,
      R => '0'
    );
bsr_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => Bsr_out,
      I1 => \bsr_dec_reg_n_0_[2]\,
      O => bsr_i_1_n_0
    );
bsr_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk,
      CE => '1',
      D => bsr_i_1_n_0,
      Q => Bsr_out,
      S => lpf_int
    );
\core_dec[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9000"
    )
        port map (
      I0 => seq_cnt_en,
      I1 => seq_cnt(4),
      I2 => seq_cnt(3),
      I3 => seq_cnt(5),
      O => \core_dec[0]_i_1_n_0\
    );
\core_dec[2]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \bsr_dec_reg_n_0_[1]\,
      I1 => \core_dec_reg_n_0_[0]\,
      O => \core_dec[2]_i_1_n_0\
    );
\core_dec_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \core_dec[0]_i_1_n_0\,
      Q => \core_dec_reg_n_0_[0]\,
      R => '0'
    );
\core_dec_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \core_dec[2]_i_1_n_0\,
      Q => p_0_in,
      R => '0'
    );
from_sys_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => MB_out,
      I1 => seq_cnt_en,
      O => from_sys_i_1_n_0
    );
from_sys_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => from_sys_i_1_n_0,
      Q => seq_cnt_en,
      S => lpf_int
    );
pr_dec0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0018"
    )
        port map (
      I0 => seq_cnt_en,
      I1 => seq_cnt(0),
      I2 => seq_cnt(2),
      I3 => seq_cnt(1),
      O => \pr_dec0__0\
    );
seq_clr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => '1',
      Q => seq_clr,
      R => lpf_int
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_comblock_0_0_axi_comblock is
  port (
    axil_awready : out STD_LOGIC;
    axil_wready : out STD_LOGIC;
    axil_arready : out STD_LOGIC;
    axil_rdata : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axil_rvalid : out STD_LOGIC;
    reg0_o : out STD_LOGIC_VECTOR ( 0 to 0 );
    axil_bvalid : out STD_LOGIC;
    axil_aclk : in STD_LOGIC;
    axil_awaddr : in STD_LOGIC_VECTOR ( 5 downto 0 );
    axil_araddr : in STD_LOGIC_VECTOR ( 5 downto 0 );
    axil_arvalid : in STD_LOGIC;
    axil_wvalid : in STD_LOGIC;
    axil_awvalid : in STD_LOGIC;
    reg1_i : in STD_LOGIC_VECTOR ( 10 downto 0 );
    reg0_i : in STD_LOGIC_VECTOR ( 10 downto 0 );
    axil_aresetn : in STD_LOGIC;
    axil_bready : in STD_LOGIC;
    axil_rready : in STD_LOGIC;
    axil_wdata : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_comblock_0_0_axi_comblock : entity is "axi_comblock";
end design_1_comblock_0_0_axi_comblock;

architecture STRUCTURE of design_1_comblock_0_0_axi_comblock is
  signal AXIL_inst_n_5 : STD_LOGIC;
  signal \^reg0_o\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  reg0_o(0) <= \^reg0_o\(0);
AXIL_inst: entity work.design_1_comblock_0_0_AXIL
     port map (
      axil_aclk => axil_aclk,
      axil_araddr(5 downto 0) => axil_araddr(5 downto 0),
      axil_aresetn => axil_aresetn,
      axil_arready => axil_arready,
      axil_arvalid => axil_arvalid,
      axil_awaddr(5 downto 0) => axil_awaddr(5 downto 0),
      axil_awready => axil_awready,
      axil_awvalid => axil_awvalid,
      axil_bready => axil_bready,
      axil_bvalid => axil_bvalid,
      axil_rdata(10 downto 0) => axil_rdata(10 downto 0),
      axil_rready => axil_rready,
      axil_rvalid => axil_rvalid,
      axil_wdata(0) => axil_wdata(0),
      axil_wdata_0_sp_1 => AXIL_inst_n_5,
      axil_wready => axil_wready,
      axil_wvalid => axil_wvalid,
      reg0_i(10 downto 0) => reg0_i(10 downto 0),
      reg0_o(0) => \^reg0_o\(0),
      reg1_i(10 downto 0) => reg1_i(10 downto 0)
    );
comblock_i: entity work.design_1_comblock_0_0_ComBlock
     port map (
      axil_aclk => axil_aclk,
      reg0_o(0) => \^reg0_o\(0),
      \regs_out_reg[0][0]_0\ => AXIL_inst_n_5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_processing_system7_0_0 is
  port (
    TTC0_WAVE0_OUT : out STD_LOGIC;
    TTC0_WAVE1_OUT : out STD_LOGIC;
    TTC0_WAVE2_OUT : out STD_LOGIC;
    USB0_PORT_INDCTL : out STD_LOGIC_VECTOR ( 1 downto 0 );
    USB0_VBUS_PWRSELECT : out STD_LOGIC;
    USB0_VBUS_PWRFAULT : in STD_LOGIC;
    M_AXI_GP0_ARVALID : out STD_LOGIC;
    M_AXI_GP0_AWVALID : out STD_LOGIC;
    M_AXI_GP0_BREADY : out STD_LOGIC;
    M_AXI_GP0_RREADY : out STD_LOGIC;
    M_AXI_GP0_WLAST : out STD_LOGIC;
    M_AXI_GP0_WVALID : out STD_LOGIC;
    M_AXI_GP0_ARID : out STD_LOGIC_VECTOR ( 11 downto 0 );
    M_AXI_GP0_AWID : out STD_LOGIC_VECTOR ( 11 downto 0 );
    M_AXI_GP0_WID : out STD_LOGIC_VECTOR ( 11 downto 0 );
    M_AXI_GP0_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP0_ARLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP0_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_GP0_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP0_AWLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP0_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_GP0_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_GP0_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_GP0_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_GP0_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_GP0_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_GP0_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP0_ARLEN : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP0_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP0_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP0_AWLEN : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP0_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP0_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_GP0_ACLK : in STD_LOGIC;
    M_AXI_GP0_ARREADY : in STD_LOGIC;
    M_AXI_GP0_AWREADY : in STD_LOGIC;
    M_AXI_GP0_BVALID : in STD_LOGIC;
    M_AXI_GP0_RLAST : in STD_LOGIC;
    M_AXI_GP0_RVALID : in STD_LOGIC;
    M_AXI_GP0_WREADY : in STD_LOGIC;
    M_AXI_GP0_BID : in STD_LOGIC_VECTOR ( 11 downto 0 );
    M_AXI_GP0_RID : in STD_LOGIC_VECTOR ( 11 downto 0 );
    M_AXI_GP0_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP0_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_GP0_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    FCLK_CLK0 : out STD_LOGIC;
    FCLK_RESET0_N : out STD_LOGIC;
    MIO : inout STD_LOGIC_VECTOR ( 53 downto 0 );
    DDR_CAS_n : inout STD_LOGIC;
    DDR_CKE : inout STD_LOGIC;
    DDR_Clk_n : inout STD_LOGIC;
    DDR_Clk : inout STD_LOGIC;
    DDR_CS_n : inout STD_LOGIC;
    DDR_DRSTB : inout STD_LOGIC;
    DDR_ODT : inout STD_LOGIC;
    DDR_RAS_n : inout STD_LOGIC;
    DDR_WEB : inout STD_LOGIC;
    DDR_BankAddr : inout STD_LOGIC_VECTOR ( 2 downto 0 );
    DDR_Addr : inout STD_LOGIC_VECTOR ( 14 downto 0 );
    DDR_VRN : inout STD_LOGIC;
    DDR_VRP : inout STD_LOGIC;
    DDR_DM : inout STD_LOGIC_VECTOR ( 3 downto 0 );
    DDR_DQ : inout STD_LOGIC_VECTOR ( 31 downto 0 );
    DDR_DQS_n : inout STD_LOGIC_VECTOR ( 3 downto 0 );
    DDR_DQS : inout STD_LOGIC_VECTOR ( 3 downto 0 );
    PS_SRSTB : inout STD_LOGIC;
    PS_CLK : inout STD_LOGIC;
    PS_PORB : inout STD_LOGIC
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of design_1_processing_system7_0_0 : entity is "design_1_processing_system7_0_0,processing_system7_v5_5_processing_system7,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of design_1_processing_system7_0_0 : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of design_1_processing_system7_0_0 : entity is "processing_system7_v5_5_processing_system7,Vivado 2019.2";
end design_1_processing_system7_0_0;

architecture STRUCTURE of design_1_processing_system7_0_0 is
  signal NLW_inst_CAN0_PHY_TX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_CAN1_PHY_TX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_DMA0_DAVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_DMA0_DRREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_DMA0_RSTN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_DMA1_DAVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_DMA1_DRREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_DMA1_RSTN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_DMA2_DAVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_DMA2_DRREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_DMA2_RSTN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_DMA3_DAVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_DMA3_DRREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_DMA3_RSTN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET0_GMII_TX_EN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET0_GMII_TX_ER_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET0_MDIO_MDC_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET0_MDIO_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET0_MDIO_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET0_PTP_DELAY_REQ_RX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET0_PTP_DELAY_REQ_TX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET0_PTP_PDELAY_REQ_RX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET0_PTP_PDELAY_REQ_TX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET0_PTP_PDELAY_RESP_RX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET0_PTP_PDELAY_RESP_TX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET0_PTP_SYNC_FRAME_RX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET0_PTP_SYNC_FRAME_TX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET0_SOF_RX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET0_SOF_TX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET1_GMII_TX_EN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET1_GMII_TX_ER_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET1_MDIO_MDC_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET1_MDIO_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET1_MDIO_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET1_PTP_DELAY_REQ_RX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET1_PTP_DELAY_REQ_TX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET1_PTP_PDELAY_REQ_RX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET1_PTP_PDELAY_REQ_TX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET1_PTP_PDELAY_RESP_RX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET1_PTP_PDELAY_RESP_TX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET1_PTP_SYNC_FRAME_RX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET1_PTP_SYNC_FRAME_TX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET1_SOF_RX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ENET1_SOF_TX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_EVENT_EVENTO_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_FCLK_CLK1_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_FCLK_CLK2_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_FCLK_CLK3_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_FCLK_RESET1_N_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_FCLK_RESET2_N_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_FCLK_RESET3_N_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_FTMT_F2P_TRIGACK_0_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_FTMT_F2P_TRIGACK_1_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_FTMT_F2P_TRIGACK_2_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_FTMT_F2P_TRIGACK_3_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_FTMT_P2F_TRIG_0_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_FTMT_P2F_TRIG_1_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_FTMT_P2F_TRIG_2_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_FTMT_P2F_TRIG_3_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_I2C0_SCL_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_I2C0_SCL_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_I2C0_SDA_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_I2C0_SDA_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_I2C1_SCL_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_I2C1_SCL_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_I2C1_SDA_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_I2C1_SDA_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_CAN0_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_CAN1_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_CTI_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_DMAC0_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_DMAC1_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_DMAC2_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_DMAC3_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_DMAC4_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_DMAC5_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_DMAC6_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_DMAC7_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_DMAC_ABORT_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_ENET0_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_ENET1_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_ENET_WAKE0_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_ENET_WAKE1_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_GPIO_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_I2C0_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_I2C1_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_QSPI_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_SDIO0_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_SDIO1_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_SMC_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_SPI0_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_SPI1_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_UART0_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_UART1_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_USB0_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_IRQ_P2F_USB1_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_M_AXI_GP0_ARESETN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_M_AXI_GP1_ARESETN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_M_AXI_GP1_ARVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_M_AXI_GP1_AWVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_M_AXI_GP1_BREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_M_AXI_GP1_RREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_M_AXI_GP1_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_M_AXI_GP1_WVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_PJTAG_TDO_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SDIO0_BUSPOW_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SDIO0_CLK_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SDIO0_CMD_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SDIO0_CMD_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SDIO0_LED_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SDIO1_BUSPOW_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SDIO1_CLK_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SDIO1_CMD_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SDIO1_CMD_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SDIO1_LED_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI0_MISO_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI0_MISO_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI0_MOSI_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI0_MOSI_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI0_SCLK_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI0_SCLK_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI0_SS1_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI0_SS2_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI0_SS_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI0_SS_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI1_MISO_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI1_MISO_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI1_MOSI_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI1_MOSI_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI1_SCLK_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI1_SCLK_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI1_SS1_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI1_SS2_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI1_SS_O_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_SPI1_SS_T_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_ACP_ARESETN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_ACP_ARREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_ACP_AWREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_ACP_BVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_ACP_RLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_ACP_RVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_ACP_WREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_GP0_ARESETN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_GP0_ARREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_GP0_AWREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_GP0_BVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_GP0_RLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_GP0_RVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_GP0_WREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_GP1_ARESETN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_GP1_ARREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_GP1_AWREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_GP1_BVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_GP1_RLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_GP1_RVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_GP1_WREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP0_ARESETN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP0_ARREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP0_AWREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP0_BVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP0_RLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP0_RVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP0_WREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP1_ARESETN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP1_ARREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP1_AWREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP1_BVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP1_RLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP1_RVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP1_WREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP2_ARESETN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP2_ARREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP2_AWREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP2_BVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP2_RLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP2_RVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP2_WREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP3_ARESETN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP3_ARREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP3_AWREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP3_BVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP3_RLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP3_RVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_S_AXI_HP3_WREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_TRACE_CLK_OUT_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_TRACE_CTL_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_TTC1_WAVE0_OUT_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_TTC1_WAVE1_OUT_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_TTC1_WAVE2_OUT_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_UART0_DTRN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_UART0_RTSN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_UART0_TX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_UART1_DTRN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_UART1_RTSN_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_UART1_TX_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_USB1_VBUS_PWRSELECT_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_WDT_RST_OUT_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_DMA0_DATYPE_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_DMA1_DATYPE_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_DMA2_DATYPE_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_DMA3_DATYPE_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_ENET0_GMII_TXD_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_ENET1_GMII_TXD_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_EVENT_STANDBYWFE_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_EVENT_STANDBYWFI_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_FTMT_P2F_DEBUG_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_inst_GPIO_O_UNCONNECTED : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_inst_GPIO_T_UNCONNECTED : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_inst_M_AXI_GP1_ARADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_inst_M_AXI_GP1_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_M_AXI_GP1_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_M_AXI_GP1_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal NLW_inst_M_AXI_GP1_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_M_AXI_GP1_ARLOCK_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_M_AXI_GP1_ARPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_M_AXI_GP1_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_M_AXI_GP1_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_M_AXI_GP1_AWADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_inst_M_AXI_GP1_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_M_AXI_GP1_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_M_AXI_GP1_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal NLW_inst_M_AXI_GP1_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_M_AXI_GP1_AWLOCK_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_M_AXI_GP1_AWPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_M_AXI_GP1_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_M_AXI_GP1_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_M_AXI_GP1_WDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_inst_M_AXI_GP1_WID_UNCONNECTED : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal NLW_inst_M_AXI_GP1_WSTRB_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_SDIO0_BUSVOLT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_SDIO0_DATA_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_SDIO0_DATA_T_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_SDIO1_BUSVOLT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_SDIO1_DATA_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_SDIO1_DATA_T_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_S_AXI_ACP_BID_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_S_AXI_ACP_BRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_S_AXI_ACP_RDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_inst_S_AXI_ACP_RID_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_S_AXI_ACP_RRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_S_AXI_GP0_BID_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_GP0_BRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_S_AXI_GP0_RDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_inst_S_AXI_GP0_RID_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_GP0_RRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_S_AXI_GP1_BID_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_GP1_BRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_S_AXI_GP1_RDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_inst_S_AXI_GP1_RID_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_GP1_RRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_S_AXI_HP0_BID_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_HP0_BRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_S_AXI_HP0_RACOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_S_AXI_HP0_RCOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_S_AXI_HP0_RDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_inst_S_AXI_HP0_RID_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_HP0_RRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_S_AXI_HP0_WACOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_HP0_WCOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_S_AXI_HP1_BID_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_HP1_BRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_S_AXI_HP1_RACOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_S_AXI_HP1_RCOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_S_AXI_HP1_RDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_inst_S_AXI_HP1_RID_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_HP1_RRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_S_AXI_HP1_WACOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_HP1_WCOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_S_AXI_HP2_BID_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_HP2_BRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_S_AXI_HP2_RACOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_S_AXI_HP2_RCOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_S_AXI_HP2_RDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_inst_S_AXI_HP2_RID_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_HP2_RRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_S_AXI_HP2_WACOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_HP2_WCOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_S_AXI_HP3_BID_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_HP3_BRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_S_AXI_HP3_RACOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_S_AXI_HP3_RCOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_S_AXI_HP3_RDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_inst_S_AXI_HP3_RID_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_HP3_RRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_S_AXI_HP3_WACOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_inst_S_AXI_HP3_WCOUNT_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_TRACE_DATA_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_USB1_PORT_INDCTL_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute C_DM_WIDTH : integer;
  attribute C_DM_WIDTH of inst : label is 4;
  attribute C_DQS_WIDTH : integer;
  attribute C_DQS_WIDTH of inst : label is 4;
  attribute C_DQ_WIDTH : integer;
  attribute C_DQ_WIDTH of inst : label is 32;
  attribute C_EMIO_GPIO_WIDTH : integer;
  attribute C_EMIO_GPIO_WIDTH of inst : label is 64;
  attribute C_EN_EMIO_ENET0 : integer;
  attribute C_EN_EMIO_ENET0 of inst : label is 0;
  attribute C_EN_EMIO_ENET1 : integer;
  attribute C_EN_EMIO_ENET1 of inst : label is 0;
  attribute C_EN_EMIO_PJTAG : integer;
  attribute C_EN_EMIO_PJTAG of inst : label is 0;
  attribute C_EN_EMIO_TRACE : integer;
  attribute C_EN_EMIO_TRACE of inst : label is 0;
  attribute C_FCLK_CLK0_BUF : string;
  attribute C_FCLK_CLK0_BUF of inst : label is "TRUE";
  attribute C_FCLK_CLK1_BUF : string;
  attribute C_FCLK_CLK1_BUF of inst : label is "FALSE";
  attribute C_FCLK_CLK2_BUF : string;
  attribute C_FCLK_CLK2_BUF of inst : label is "FALSE";
  attribute C_FCLK_CLK3_BUF : string;
  attribute C_FCLK_CLK3_BUF of inst : label is "FALSE";
  attribute C_GP0_EN_MODIFIABLE_TXN : integer;
  attribute C_GP0_EN_MODIFIABLE_TXN of inst : label is 1;
  attribute C_GP1_EN_MODIFIABLE_TXN : integer;
  attribute C_GP1_EN_MODIFIABLE_TXN of inst : label is 1;
  attribute C_INCLUDE_ACP_TRANS_CHECK : integer;
  attribute C_INCLUDE_ACP_TRANS_CHECK of inst : label is 0;
  attribute C_INCLUDE_TRACE_BUFFER : integer;
  attribute C_INCLUDE_TRACE_BUFFER of inst : label is 0;
  attribute C_IRQ_F2P_MODE : string;
  attribute C_IRQ_F2P_MODE of inst : label is "DIRECT";
  attribute C_MIO_PRIMITIVE : integer;
  attribute C_MIO_PRIMITIVE of inst : label is 54;
  attribute C_M_AXI_GP0_ENABLE_STATIC_REMAP : integer;
  attribute C_M_AXI_GP0_ENABLE_STATIC_REMAP of inst : label is 0;
  attribute C_M_AXI_GP0_ID_WIDTH : integer;
  attribute C_M_AXI_GP0_ID_WIDTH of inst : label is 12;
  attribute C_M_AXI_GP0_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_GP0_THREAD_ID_WIDTH of inst : label is 12;
  attribute C_M_AXI_GP1_ENABLE_STATIC_REMAP : integer;
  attribute C_M_AXI_GP1_ENABLE_STATIC_REMAP of inst : label is 0;
  attribute C_M_AXI_GP1_ID_WIDTH : integer;
  attribute C_M_AXI_GP1_ID_WIDTH of inst : label is 12;
  attribute C_M_AXI_GP1_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_GP1_THREAD_ID_WIDTH of inst : label is 12;
  attribute C_NUM_F2P_INTR_INPUTS : integer;
  attribute C_NUM_F2P_INTR_INPUTS of inst : label is 1;
  attribute C_PACKAGE_NAME : string;
  attribute C_PACKAGE_NAME of inst : label is "clg484";
  attribute C_PS7_SI_REV : string;
  attribute C_PS7_SI_REV of inst : label is "PRODUCTION";
  attribute C_S_AXI_ACP_ARUSER_VAL : integer;
  attribute C_S_AXI_ACP_ARUSER_VAL of inst : label is 31;
  attribute C_S_AXI_ACP_AWUSER_VAL : integer;
  attribute C_S_AXI_ACP_AWUSER_VAL of inst : label is 31;
  attribute C_S_AXI_ACP_ID_WIDTH : integer;
  attribute C_S_AXI_ACP_ID_WIDTH of inst : label is 3;
  attribute C_S_AXI_GP0_ID_WIDTH : integer;
  attribute C_S_AXI_GP0_ID_WIDTH of inst : label is 6;
  attribute C_S_AXI_GP1_ID_WIDTH : integer;
  attribute C_S_AXI_GP1_ID_WIDTH of inst : label is 6;
  attribute C_S_AXI_HP0_DATA_WIDTH : integer;
  attribute C_S_AXI_HP0_DATA_WIDTH of inst : label is 64;
  attribute C_S_AXI_HP0_ID_WIDTH : integer;
  attribute C_S_AXI_HP0_ID_WIDTH of inst : label is 6;
  attribute C_S_AXI_HP1_DATA_WIDTH : integer;
  attribute C_S_AXI_HP1_DATA_WIDTH of inst : label is 64;
  attribute C_S_AXI_HP1_ID_WIDTH : integer;
  attribute C_S_AXI_HP1_ID_WIDTH of inst : label is 6;
  attribute C_S_AXI_HP2_DATA_WIDTH : integer;
  attribute C_S_AXI_HP2_DATA_WIDTH of inst : label is 64;
  attribute C_S_AXI_HP2_ID_WIDTH : integer;
  attribute C_S_AXI_HP2_ID_WIDTH of inst : label is 6;
  attribute C_S_AXI_HP3_DATA_WIDTH : integer;
  attribute C_S_AXI_HP3_DATA_WIDTH of inst : label is 64;
  attribute C_S_AXI_HP3_ID_WIDTH : integer;
  attribute C_S_AXI_HP3_ID_WIDTH of inst : label is 6;
  attribute C_TRACE_BUFFER_CLOCK_DELAY : integer;
  attribute C_TRACE_BUFFER_CLOCK_DELAY of inst : label is 12;
  attribute C_TRACE_BUFFER_FIFO_SIZE : integer;
  attribute C_TRACE_BUFFER_FIFO_SIZE of inst : label is 128;
  attribute C_TRACE_INTERNAL_WIDTH : integer;
  attribute C_TRACE_INTERNAL_WIDTH of inst : label is 2;
  attribute C_TRACE_PIPELINE_WIDTH : integer;
  attribute C_TRACE_PIPELINE_WIDTH of inst : label is 8;
  attribute C_USE_AXI_NONSECURE : integer;
  attribute C_USE_AXI_NONSECURE of inst : label is 0;
  attribute C_USE_DEFAULT_ACP_USER_VAL : integer;
  attribute C_USE_DEFAULT_ACP_USER_VAL of inst : label is 0;
  attribute C_USE_M_AXI_GP0 : integer;
  attribute C_USE_M_AXI_GP0 of inst : label is 1;
  attribute C_USE_M_AXI_GP1 : integer;
  attribute C_USE_M_AXI_GP1 of inst : label is 0;
  attribute C_USE_S_AXI_ACP : integer;
  attribute C_USE_S_AXI_ACP of inst : label is 0;
  attribute C_USE_S_AXI_GP0 : integer;
  attribute C_USE_S_AXI_GP0 of inst : label is 0;
  attribute C_USE_S_AXI_GP1 : integer;
  attribute C_USE_S_AXI_GP1 of inst : label is 0;
  attribute C_USE_S_AXI_HP0 : integer;
  attribute C_USE_S_AXI_HP0 of inst : label is 0;
  attribute C_USE_S_AXI_HP1 : integer;
  attribute C_USE_S_AXI_HP1 of inst : label is 0;
  attribute C_USE_S_AXI_HP2 : integer;
  attribute C_USE_S_AXI_HP2 of inst : label is 0;
  attribute C_USE_S_AXI_HP3 : integer;
  attribute C_USE_S_AXI_HP3 of inst : label is 0;
  attribute POWER : string;
  attribute POWER of inst : label is "<PROCESSOR name={system} numA9Cores={2} clockFreq={666.666667} load={0.5} /><MEMORY name={code} memType={DDR3} dataWidth={32} clockFreq={533.333313} readRate={0.5} writeRate={0.5} /><IO interface={GPIO_Bank_1} ioStandard={LVCMOS18} bidis={2} ioBank={Vcco_p1} clockFreq={1} usageRate={0.5} /><IO interface={GPIO_Bank_0} ioStandard={LVCMOS33} bidis={10} ioBank={Vcco_p0} clockFreq={1} usageRate={0.5} /><IO interface={Timer} ioStandard={} bidis={0} ioBank={} clockFreq={111.111115} usageRate={0.5} /><IO interface={UART} ioStandard={LVCMOS18} bidis={2} ioBank={Vcco_p1} clockFreq={50.000000} usageRate={0.5} /><IO interface={SD} ioStandard={LVCMOS18} bidis={8} ioBank={Vcco_p1} clockFreq={50.000000} usageRate={0.5} /><IO interface={USB} ioStandard={LVCMOS18} bidis={12} ioBank={Vcco_p1} clockFreq={60} usageRate={0.5} /><IO interface={GigE} ioStandard={LVCMOS18} bidis={14} ioBank={Vcco_p1} clockFreq={125.000000} usageRate={0.5} /><IO interface={QSPI} ioStandard={LVCMOS33} bidis={6} ioBank={Vcco_p0} clockFreq={200.000000} usageRate={0.5} /><PLL domain={Processor} vco={1333.333} /><PLL domain={Memory} vco={1066.667} /><PLL domain={IO} vco={1000.000} /><AXI interface={M_AXI_GP0} dataWidth={32} clockFreq={100} usageRate={0.5} />/>";
  attribute USE_TRACE_DATA_EDGE_DETECTOR : integer;
  attribute USE_TRACE_DATA_EDGE_DETECTOR of inst : label is 0;
  attribute hw_handoff : string;
  attribute hw_handoff of inst : label is "design_1_processing_system7_0_0.hwdef";
  attribute x_interface_info : string;
  attribute x_interface_info of DDR_CAS_n : signal is "xilinx.com:interface:ddrx:1.0 DDR CAS_N";
  attribute x_interface_info of DDR_CKE : signal is "xilinx.com:interface:ddrx:1.0 DDR CKE";
  attribute x_interface_info of DDR_CS_n : signal is "xilinx.com:interface:ddrx:1.0 DDR CS_N";
  attribute x_interface_info of DDR_Clk : signal is "xilinx.com:interface:ddrx:1.0 DDR CK_P";
  attribute x_interface_info of DDR_Clk_n : signal is "xilinx.com:interface:ddrx:1.0 DDR CK_N";
  attribute x_interface_info of DDR_DRSTB : signal is "xilinx.com:interface:ddrx:1.0 DDR RESET_N";
  attribute x_interface_info of DDR_ODT : signal is "xilinx.com:interface:ddrx:1.0 DDR ODT";
  attribute x_interface_info of DDR_RAS_n : signal is "xilinx.com:interface:ddrx:1.0 DDR RAS_N";
  attribute x_interface_info of DDR_VRN : signal is "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO DDR_VRN";
  attribute x_interface_info of DDR_VRP : signal is "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO DDR_VRP";
  attribute x_interface_info of DDR_WEB : signal is "xilinx.com:interface:ddrx:1.0 DDR WE_N";
  attribute x_interface_info of FCLK_CLK0 : signal is "xilinx.com:signal:clock:1.0 FCLK_CLK0 CLK";
  attribute x_interface_parameter : string;
  attribute x_interface_parameter of FCLK_CLK0 : signal is "XIL_INTERFACENAME FCLK_CLK0, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, INSERT_VIP 0";
  attribute x_interface_info of FCLK_RESET0_N : signal is "xilinx.com:signal:reset:1.0 FCLK_RESET0_N RST";
  attribute x_interface_parameter of FCLK_RESET0_N : signal is "XIL_INTERFACENAME FCLK_RESET0_N, POLARITY ACTIVE_LOW, INSERT_VIP 0";
  attribute x_interface_info of M_AXI_GP0_ACLK : signal is "xilinx.com:signal:clock:1.0 M_AXI_GP0_ACLK CLK";
  attribute x_interface_parameter of M_AXI_GP0_ACLK : signal is "XIL_INTERFACENAME M_AXI_GP0_ACLK, ASSOCIATED_BUSIF M_AXI_GP0, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, INSERT_VIP 0";
  attribute x_interface_info of M_AXI_GP0_ARREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARREADY";
  attribute x_interface_info of M_AXI_GP0_ARVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARVALID";
  attribute x_interface_info of M_AXI_GP0_AWREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWREADY";
  attribute x_interface_info of M_AXI_GP0_AWVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWVALID";
  attribute x_interface_info of M_AXI_GP0_BREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 BREADY";
  attribute x_interface_info of M_AXI_GP0_BVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 BVALID";
  attribute x_interface_info of M_AXI_GP0_RLAST : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 RLAST";
  attribute x_interface_info of M_AXI_GP0_RREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 RREADY";
  attribute x_interface_info of M_AXI_GP0_RVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 RVALID";
  attribute x_interface_info of M_AXI_GP0_WLAST : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 WLAST";
  attribute x_interface_info of M_AXI_GP0_WREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 WREADY";
  attribute x_interface_info of M_AXI_GP0_WVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 WVALID";
  attribute x_interface_info of PS_CLK : signal is "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO PS_CLK";
  attribute x_interface_info of PS_PORB : signal is "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO PS_PORB";
  attribute x_interface_parameter of PS_PORB : signal is "XIL_INTERFACENAME FIXED_IO, CAN_DEBUG false";
  attribute x_interface_info of PS_SRSTB : signal is "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO PS_SRSTB";
  attribute x_interface_info of USB0_VBUS_PWRFAULT : signal is "xilinx.com:display_processing_system7:usbctrl:1.0 USBIND_0 VBUS_PWRFAULT";
  attribute x_interface_info of USB0_VBUS_PWRSELECT : signal is "xilinx.com:display_processing_system7:usbctrl:1.0 USBIND_0 VBUS_PWRSELECT";
  attribute x_interface_info of DDR_Addr : signal is "xilinx.com:interface:ddrx:1.0 DDR ADDR";
  attribute x_interface_info of DDR_BankAddr : signal is "xilinx.com:interface:ddrx:1.0 DDR BA";
  attribute x_interface_info of DDR_DM : signal is "xilinx.com:interface:ddrx:1.0 DDR DM";
  attribute x_interface_info of DDR_DQ : signal is "xilinx.com:interface:ddrx:1.0 DDR DQ";
  attribute x_interface_info of DDR_DQS : signal is "xilinx.com:interface:ddrx:1.0 DDR DQS_P";
  attribute x_interface_parameter of DDR_DQS : signal is "XIL_INTERFACENAME DDR, CAN_DEBUG false, TIMEPERIOD_PS 1250, MEMORY_TYPE COMPONENTS, DATA_WIDTH 8, CS_ENABLED true, DATA_MASK_ENABLED true, SLOT Single, MEM_ADDR_MAP ROW_COLUMN_BANK, BURST_LENGTH 8, AXI_ARBITRATION_SCHEME TDM, CAS_LATENCY 11, CAS_WRITE_LATENCY 11";
  attribute x_interface_info of DDR_DQS_n : signal is "xilinx.com:interface:ddrx:1.0 DDR DQS_N";
  attribute x_interface_info of MIO : signal is "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO MIO";
  attribute x_interface_info of M_AXI_GP0_ARADDR : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARADDR";
  attribute x_interface_info of M_AXI_GP0_ARBURST : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARBURST";
  attribute x_interface_info of M_AXI_GP0_ARCACHE : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARCACHE";
  attribute x_interface_info of M_AXI_GP0_ARID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARID";
  attribute x_interface_info of M_AXI_GP0_ARLEN : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARLEN";
  attribute x_interface_info of M_AXI_GP0_ARLOCK : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARLOCK";
  attribute x_interface_info of M_AXI_GP0_ARPROT : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARPROT";
  attribute x_interface_info of M_AXI_GP0_ARQOS : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARQOS";
  attribute x_interface_info of M_AXI_GP0_ARSIZE : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 ARSIZE";
  attribute x_interface_info of M_AXI_GP0_AWADDR : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWADDR";
  attribute x_interface_info of M_AXI_GP0_AWBURST : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWBURST";
  attribute x_interface_info of M_AXI_GP0_AWCACHE : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWCACHE";
  attribute x_interface_info of M_AXI_GP0_AWID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWID";
  attribute x_interface_info of M_AXI_GP0_AWLEN : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWLEN";
  attribute x_interface_info of M_AXI_GP0_AWLOCK : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWLOCK";
  attribute x_interface_info of M_AXI_GP0_AWPROT : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWPROT";
  attribute x_interface_info of M_AXI_GP0_AWQOS : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWQOS";
  attribute x_interface_info of M_AXI_GP0_AWSIZE : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 AWSIZE";
  attribute x_interface_info of M_AXI_GP0_BID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 BID";
  attribute x_interface_info of M_AXI_GP0_BRESP : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 BRESP";
  attribute x_interface_info of M_AXI_GP0_RDATA : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 RDATA";
  attribute x_interface_parameter of M_AXI_GP0_RDATA : signal is "XIL_INTERFACENAME M_AXI_GP0, SUPPORTS_NARROW_BURST 0, NUM_WRITE_OUTSTANDING 8, NUM_READ_OUTSTANDING 8, DATA_WIDTH 32, PROTOCOL AXI3, FREQ_HZ 100000000, ID_WIDTH 12, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, MAX_BURST_LENGTH 16, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 4, NUM_WRITE_THREADS 4, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0";
  attribute x_interface_info of M_AXI_GP0_RID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 RID";
  attribute x_interface_info of M_AXI_GP0_RRESP : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 RRESP";
  attribute x_interface_info of M_AXI_GP0_WDATA : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 WDATA";
  attribute x_interface_info of M_AXI_GP0_WID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 WID";
  attribute x_interface_info of M_AXI_GP0_WSTRB : signal is "xilinx.com:interface:aximm:1.0 M_AXI_GP0 WSTRB";
  attribute x_interface_info of USB0_PORT_INDCTL : signal is "xilinx.com:display_processing_system7:usbctrl:1.0 USBIND_0 PORT_INDCTL";
begin
inst: entity work.design_1_processing_system7_0_0_processing_system7_v5_5_processing_system7
     port map (
      CAN0_PHY_RX => '0',
      CAN0_PHY_TX => NLW_inst_CAN0_PHY_TX_UNCONNECTED,
      CAN1_PHY_RX => '0',
      CAN1_PHY_TX => NLW_inst_CAN1_PHY_TX_UNCONNECTED,
      Core0_nFIQ => '0',
      Core0_nIRQ => '0',
      Core1_nFIQ => '0',
      Core1_nIRQ => '0',
      DDR_ARB(3 downto 0) => B"0000",
      DDR_Addr(14 downto 0) => DDR_Addr(14 downto 0),
      DDR_BankAddr(2 downto 0) => DDR_BankAddr(2 downto 0),
      DDR_CAS_n => DDR_CAS_n,
      DDR_CKE => DDR_CKE,
      DDR_CS_n => DDR_CS_n,
      DDR_Clk => DDR_Clk,
      DDR_Clk_n => DDR_Clk_n,
      DDR_DM(3 downto 0) => DDR_DM(3 downto 0),
      DDR_DQ(31 downto 0) => DDR_DQ(31 downto 0),
      DDR_DQS(3 downto 0) => DDR_DQS(3 downto 0),
      DDR_DQS_n(3 downto 0) => DDR_DQS_n(3 downto 0),
      DDR_DRSTB => DDR_DRSTB,
      DDR_ODT => DDR_ODT,
      DDR_RAS_n => DDR_RAS_n,
      DDR_VRN => DDR_VRN,
      DDR_VRP => DDR_VRP,
      DDR_WEB => DDR_WEB,
      DMA0_ACLK => '0',
      DMA0_DAREADY => '0',
      DMA0_DATYPE(1 downto 0) => NLW_inst_DMA0_DATYPE_UNCONNECTED(1 downto 0),
      DMA0_DAVALID => NLW_inst_DMA0_DAVALID_UNCONNECTED,
      DMA0_DRLAST => '0',
      DMA0_DRREADY => NLW_inst_DMA0_DRREADY_UNCONNECTED,
      DMA0_DRTYPE(1 downto 0) => B"00",
      DMA0_DRVALID => '0',
      DMA0_RSTN => NLW_inst_DMA0_RSTN_UNCONNECTED,
      DMA1_ACLK => '0',
      DMA1_DAREADY => '0',
      DMA1_DATYPE(1 downto 0) => NLW_inst_DMA1_DATYPE_UNCONNECTED(1 downto 0),
      DMA1_DAVALID => NLW_inst_DMA1_DAVALID_UNCONNECTED,
      DMA1_DRLAST => '0',
      DMA1_DRREADY => NLW_inst_DMA1_DRREADY_UNCONNECTED,
      DMA1_DRTYPE(1 downto 0) => B"00",
      DMA1_DRVALID => '0',
      DMA1_RSTN => NLW_inst_DMA1_RSTN_UNCONNECTED,
      DMA2_ACLK => '0',
      DMA2_DAREADY => '0',
      DMA2_DATYPE(1 downto 0) => NLW_inst_DMA2_DATYPE_UNCONNECTED(1 downto 0),
      DMA2_DAVALID => NLW_inst_DMA2_DAVALID_UNCONNECTED,
      DMA2_DRLAST => '0',
      DMA2_DRREADY => NLW_inst_DMA2_DRREADY_UNCONNECTED,
      DMA2_DRTYPE(1 downto 0) => B"00",
      DMA2_DRVALID => '0',
      DMA2_RSTN => NLW_inst_DMA2_RSTN_UNCONNECTED,
      DMA3_ACLK => '0',
      DMA3_DAREADY => '0',
      DMA3_DATYPE(1 downto 0) => NLW_inst_DMA3_DATYPE_UNCONNECTED(1 downto 0),
      DMA3_DAVALID => NLW_inst_DMA3_DAVALID_UNCONNECTED,
      DMA3_DRLAST => '0',
      DMA3_DRREADY => NLW_inst_DMA3_DRREADY_UNCONNECTED,
      DMA3_DRTYPE(1 downto 0) => B"00",
      DMA3_DRVALID => '0',
      DMA3_RSTN => NLW_inst_DMA3_RSTN_UNCONNECTED,
      ENET0_EXT_INTIN => '0',
      ENET0_GMII_COL => '0',
      ENET0_GMII_CRS => '0',
      ENET0_GMII_RXD(7 downto 0) => B"00000000",
      ENET0_GMII_RX_CLK => '0',
      ENET0_GMII_RX_DV => '0',
      ENET0_GMII_RX_ER => '0',
      ENET0_GMII_TXD(7 downto 0) => NLW_inst_ENET0_GMII_TXD_UNCONNECTED(7 downto 0),
      ENET0_GMII_TX_CLK => '0',
      ENET0_GMII_TX_EN => NLW_inst_ENET0_GMII_TX_EN_UNCONNECTED,
      ENET0_GMII_TX_ER => NLW_inst_ENET0_GMII_TX_ER_UNCONNECTED,
      ENET0_MDIO_I => '0',
      ENET0_MDIO_MDC => NLW_inst_ENET0_MDIO_MDC_UNCONNECTED,
      ENET0_MDIO_O => NLW_inst_ENET0_MDIO_O_UNCONNECTED,
      ENET0_MDIO_T => NLW_inst_ENET0_MDIO_T_UNCONNECTED,
      ENET0_PTP_DELAY_REQ_RX => NLW_inst_ENET0_PTP_DELAY_REQ_RX_UNCONNECTED,
      ENET0_PTP_DELAY_REQ_TX => NLW_inst_ENET0_PTP_DELAY_REQ_TX_UNCONNECTED,
      ENET0_PTP_PDELAY_REQ_RX => NLW_inst_ENET0_PTP_PDELAY_REQ_RX_UNCONNECTED,
      ENET0_PTP_PDELAY_REQ_TX => NLW_inst_ENET0_PTP_PDELAY_REQ_TX_UNCONNECTED,
      ENET0_PTP_PDELAY_RESP_RX => NLW_inst_ENET0_PTP_PDELAY_RESP_RX_UNCONNECTED,
      ENET0_PTP_PDELAY_RESP_TX => NLW_inst_ENET0_PTP_PDELAY_RESP_TX_UNCONNECTED,
      ENET0_PTP_SYNC_FRAME_RX => NLW_inst_ENET0_PTP_SYNC_FRAME_RX_UNCONNECTED,
      ENET0_PTP_SYNC_FRAME_TX => NLW_inst_ENET0_PTP_SYNC_FRAME_TX_UNCONNECTED,
      ENET0_SOF_RX => NLW_inst_ENET0_SOF_RX_UNCONNECTED,
      ENET0_SOF_TX => NLW_inst_ENET0_SOF_TX_UNCONNECTED,
      ENET1_EXT_INTIN => '0',
      ENET1_GMII_COL => '0',
      ENET1_GMII_CRS => '0',
      ENET1_GMII_RXD(7 downto 0) => B"00000000",
      ENET1_GMII_RX_CLK => '0',
      ENET1_GMII_RX_DV => '0',
      ENET1_GMII_RX_ER => '0',
      ENET1_GMII_TXD(7 downto 0) => NLW_inst_ENET1_GMII_TXD_UNCONNECTED(7 downto 0),
      ENET1_GMII_TX_CLK => '0',
      ENET1_GMII_TX_EN => NLW_inst_ENET1_GMII_TX_EN_UNCONNECTED,
      ENET1_GMII_TX_ER => NLW_inst_ENET1_GMII_TX_ER_UNCONNECTED,
      ENET1_MDIO_I => '0',
      ENET1_MDIO_MDC => NLW_inst_ENET1_MDIO_MDC_UNCONNECTED,
      ENET1_MDIO_O => NLW_inst_ENET1_MDIO_O_UNCONNECTED,
      ENET1_MDIO_T => NLW_inst_ENET1_MDIO_T_UNCONNECTED,
      ENET1_PTP_DELAY_REQ_RX => NLW_inst_ENET1_PTP_DELAY_REQ_RX_UNCONNECTED,
      ENET1_PTP_DELAY_REQ_TX => NLW_inst_ENET1_PTP_DELAY_REQ_TX_UNCONNECTED,
      ENET1_PTP_PDELAY_REQ_RX => NLW_inst_ENET1_PTP_PDELAY_REQ_RX_UNCONNECTED,
      ENET1_PTP_PDELAY_REQ_TX => NLW_inst_ENET1_PTP_PDELAY_REQ_TX_UNCONNECTED,
      ENET1_PTP_PDELAY_RESP_RX => NLW_inst_ENET1_PTP_PDELAY_RESP_RX_UNCONNECTED,
      ENET1_PTP_PDELAY_RESP_TX => NLW_inst_ENET1_PTP_PDELAY_RESP_TX_UNCONNECTED,
      ENET1_PTP_SYNC_FRAME_RX => NLW_inst_ENET1_PTP_SYNC_FRAME_RX_UNCONNECTED,
      ENET1_PTP_SYNC_FRAME_TX => NLW_inst_ENET1_PTP_SYNC_FRAME_TX_UNCONNECTED,
      ENET1_SOF_RX => NLW_inst_ENET1_SOF_RX_UNCONNECTED,
      ENET1_SOF_TX => NLW_inst_ENET1_SOF_TX_UNCONNECTED,
      EVENT_EVENTI => '0',
      EVENT_EVENTO => NLW_inst_EVENT_EVENTO_UNCONNECTED,
      EVENT_STANDBYWFE(1 downto 0) => NLW_inst_EVENT_STANDBYWFE_UNCONNECTED(1 downto 0),
      EVENT_STANDBYWFI(1 downto 0) => NLW_inst_EVENT_STANDBYWFI_UNCONNECTED(1 downto 0),
      FCLK_CLK0 => FCLK_CLK0,
      FCLK_CLK1 => NLW_inst_FCLK_CLK1_UNCONNECTED,
      FCLK_CLK2 => NLW_inst_FCLK_CLK2_UNCONNECTED,
      FCLK_CLK3 => NLW_inst_FCLK_CLK3_UNCONNECTED,
      FCLK_CLKTRIG0_N => '0',
      FCLK_CLKTRIG1_N => '0',
      FCLK_CLKTRIG2_N => '0',
      FCLK_CLKTRIG3_N => '0',
      FCLK_RESET0_N => FCLK_RESET0_N,
      FCLK_RESET1_N => NLW_inst_FCLK_RESET1_N_UNCONNECTED,
      FCLK_RESET2_N => NLW_inst_FCLK_RESET2_N_UNCONNECTED,
      FCLK_RESET3_N => NLW_inst_FCLK_RESET3_N_UNCONNECTED,
      FPGA_IDLE_N => '0',
      FTMD_TRACEIN_ATID(3 downto 0) => B"0000",
      FTMD_TRACEIN_CLK => '0',
      FTMD_TRACEIN_DATA(31 downto 0) => B"00000000000000000000000000000000",
      FTMD_TRACEIN_VALID => '0',
      FTMT_F2P_DEBUG(31 downto 0) => B"00000000000000000000000000000000",
      FTMT_F2P_TRIGACK_0 => NLW_inst_FTMT_F2P_TRIGACK_0_UNCONNECTED,
      FTMT_F2P_TRIGACK_1 => NLW_inst_FTMT_F2P_TRIGACK_1_UNCONNECTED,
      FTMT_F2P_TRIGACK_2 => NLW_inst_FTMT_F2P_TRIGACK_2_UNCONNECTED,
      FTMT_F2P_TRIGACK_3 => NLW_inst_FTMT_F2P_TRIGACK_3_UNCONNECTED,
      FTMT_F2P_TRIG_0 => '0',
      FTMT_F2P_TRIG_1 => '0',
      FTMT_F2P_TRIG_2 => '0',
      FTMT_F2P_TRIG_3 => '0',
      FTMT_P2F_DEBUG(31 downto 0) => NLW_inst_FTMT_P2F_DEBUG_UNCONNECTED(31 downto 0),
      FTMT_P2F_TRIGACK_0 => '0',
      FTMT_P2F_TRIGACK_1 => '0',
      FTMT_P2F_TRIGACK_2 => '0',
      FTMT_P2F_TRIGACK_3 => '0',
      FTMT_P2F_TRIG_0 => NLW_inst_FTMT_P2F_TRIG_0_UNCONNECTED,
      FTMT_P2F_TRIG_1 => NLW_inst_FTMT_P2F_TRIG_1_UNCONNECTED,
      FTMT_P2F_TRIG_2 => NLW_inst_FTMT_P2F_TRIG_2_UNCONNECTED,
      FTMT_P2F_TRIG_3 => NLW_inst_FTMT_P2F_TRIG_3_UNCONNECTED,
      GPIO_I(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      GPIO_O(63 downto 0) => NLW_inst_GPIO_O_UNCONNECTED(63 downto 0),
      GPIO_T(63 downto 0) => NLW_inst_GPIO_T_UNCONNECTED(63 downto 0),
      I2C0_SCL_I => '0',
      I2C0_SCL_O => NLW_inst_I2C0_SCL_O_UNCONNECTED,
      I2C0_SCL_T => NLW_inst_I2C0_SCL_T_UNCONNECTED,
      I2C0_SDA_I => '0',
      I2C0_SDA_O => NLW_inst_I2C0_SDA_O_UNCONNECTED,
      I2C0_SDA_T => NLW_inst_I2C0_SDA_T_UNCONNECTED,
      I2C1_SCL_I => '0',
      I2C1_SCL_O => NLW_inst_I2C1_SCL_O_UNCONNECTED,
      I2C1_SCL_T => NLW_inst_I2C1_SCL_T_UNCONNECTED,
      I2C1_SDA_I => '0',
      I2C1_SDA_O => NLW_inst_I2C1_SDA_O_UNCONNECTED,
      I2C1_SDA_T => NLW_inst_I2C1_SDA_T_UNCONNECTED,
      IRQ_F2P(0) => '0',
      IRQ_P2F_CAN0 => NLW_inst_IRQ_P2F_CAN0_UNCONNECTED,
      IRQ_P2F_CAN1 => NLW_inst_IRQ_P2F_CAN1_UNCONNECTED,
      IRQ_P2F_CTI => NLW_inst_IRQ_P2F_CTI_UNCONNECTED,
      IRQ_P2F_DMAC0 => NLW_inst_IRQ_P2F_DMAC0_UNCONNECTED,
      IRQ_P2F_DMAC1 => NLW_inst_IRQ_P2F_DMAC1_UNCONNECTED,
      IRQ_P2F_DMAC2 => NLW_inst_IRQ_P2F_DMAC2_UNCONNECTED,
      IRQ_P2F_DMAC3 => NLW_inst_IRQ_P2F_DMAC3_UNCONNECTED,
      IRQ_P2F_DMAC4 => NLW_inst_IRQ_P2F_DMAC4_UNCONNECTED,
      IRQ_P2F_DMAC5 => NLW_inst_IRQ_P2F_DMAC5_UNCONNECTED,
      IRQ_P2F_DMAC6 => NLW_inst_IRQ_P2F_DMAC6_UNCONNECTED,
      IRQ_P2F_DMAC7 => NLW_inst_IRQ_P2F_DMAC7_UNCONNECTED,
      IRQ_P2F_DMAC_ABORT => NLW_inst_IRQ_P2F_DMAC_ABORT_UNCONNECTED,
      IRQ_P2F_ENET0 => NLW_inst_IRQ_P2F_ENET0_UNCONNECTED,
      IRQ_P2F_ENET1 => NLW_inst_IRQ_P2F_ENET1_UNCONNECTED,
      IRQ_P2F_ENET_WAKE0 => NLW_inst_IRQ_P2F_ENET_WAKE0_UNCONNECTED,
      IRQ_P2F_ENET_WAKE1 => NLW_inst_IRQ_P2F_ENET_WAKE1_UNCONNECTED,
      IRQ_P2F_GPIO => NLW_inst_IRQ_P2F_GPIO_UNCONNECTED,
      IRQ_P2F_I2C0 => NLW_inst_IRQ_P2F_I2C0_UNCONNECTED,
      IRQ_P2F_I2C1 => NLW_inst_IRQ_P2F_I2C1_UNCONNECTED,
      IRQ_P2F_QSPI => NLW_inst_IRQ_P2F_QSPI_UNCONNECTED,
      IRQ_P2F_SDIO0 => NLW_inst_IRQ_P2F_SDIO0_UNCONNECTED,
      IRQ_P2F_SDIO1 => NLW_inst_IRQ_P2F_SDIO1_UNCONNECTED,
      IRQ_P2F_SMC => NLW_inst_IRQ_P2F_SMC_UNCONNECTED,
      IRQ_P2F_SPI0 => NLW_inst_IRQ_P2F_SPI0_UNCONNECTED,
      IRQ_P2F_SPI1 => NLW_inst_IRQ_P2F_SPI1_UNCONNECTED,
      IRQ_P2F_UART0 => NLW_inst_IRQ_P2F_UART0_UNCONNECTED,
      IRQ_P2F_UART1 => NLW_inst_IRQ_P2F_UART1_UNCONNECTED,
      IRQ_P2F_USB0 => NLW_inst_IRQ_P2F_USB0_UNCONNECTED,
      IRQ_P2F_USB1 => NLW_inst_IRQ_P2F_USB1_UNCONNECTED,
      MIO(53 downto 0) => MIO(53 downto 0),
      M_AXI_GP0_ACLK => M_AXI_GP0_ACLK,
      M_AXI_GP0_ARADDR(31 downto 0) => M_AXI_GP0_ARADDR(31 downto 0),
      M_AXI_GP0_ARBURST(1 downto 0) => M_AXI_GP0_ARBURST(1 downto 0),
      M_AXI_GP0_ARCACHE(3 downto 0) => M_AXI_GP0_ARCACHE(3 downto 0),
      M_AXI_GP0_ARESETN => NLW_inst_M_AXI_GP0_ARESETN_UNCONNECTED,
      M_AXI_GP0_ARID(11 downto 0) => M_AXI_GP0_ARID(11 downto 0),
      M_AXI_GP0_ARLEN(3 downto 0) => M_AXI_GP0_ARLEN(3 downto 0),
      M_AXI_GP0_ARLOCK(1 downto 0) => M_AXI_GP0_ARLOCK(1 downto 0),
      M_AXI_GP0_ARPROT(2 downto 0) => M_AXI_GP0_ARPROT(2 downto 0),
      M_AXI_GP0_ARQOS(3 downto 0) => M_AXI_GP0_ARQOS(3 downto 0),
      M_AXI_GP0_ARREADY => M_AXI_GP0_ARREADY,
      M_AXI_GP0_ARSIZE(2 downto 0) => M_AXI_GP0_ARSIZE(2 downto 0),
      M_AXI_GP0_ARVALID => M_AXI_GP0_ARVALID,
      M_AXI_GP0_AWADDR(31 downto 0) => M_AXI_GP0_AWADDR(31 downto 0),
      M_AXI_GP0_AWBURST(1 downto 0) => M_AXI_GP0_AWBURST(1 downto 0),
      M_AXI_GP0_AWCACHE(3 downto 0) => M_AXI_GP0_AWCACHE(3 downto 0),
      M_AXI_GP0_AWID(11 downto 0) => M_AXI_GP0_AWID(11 downto 0),
      M_AXI_GP0_AWLEN(3 downto 0) => M_AXI_GP0_AWLEN(3 downto 0),
      M_AXI_GP0_AWLOCK(1 downto 0) => M_AXI_GP0_AWLOCK(1 downto 0),
      M_AXI_GP0_AWPROT(2 downto 0) => M_AXI_GP0_AWPROT(2 downto 0),
      M_AXI_GP0_AWQOS(3 downto 0) => M_AXI_GP0_AWQOS(3 downto 0),
      M_AXI_GP0_AWREADY => M_AXI_GP0_AWREADY,
      M_AXI_GP0_AWSIZE(2 downto 0) => M_AXI_GP0_AWSIZE(2 downto 0),
      M_AXI_GP0_AWVALID => M_AXI_GP0_AWVALID,
      M_AXI_GP0_BID(11 downto 0) => M_AXI_GP0_BID(11 downto 0),
      M_AXI_GP0_BREADY => M_AXI_GP0_BREADY,
      M_AXI_GP0_BRESP(1 downto 0) => M_AXI_GP0_BRESP(1 downto 0),
      M_AXI_GP0_BVALID => M_AXI_GP0_BVALID,
      M_AXI_GP0_RDATA(31 downto 0) => M_AXI_GP0_RDATA(31 downto 0),
      M_AXI_GP0_RID(11 downto 0) => M_AXI_GP0_RID(11 downto 0),
      M_AXI_GP0_RLAST => M_AXI_GP0_RLAST,
      M_AXI_GP0_RREADY => M_AXI_GP0_RREADY,
      M_AXI_GP0_RRESP(1 downto 0) => M_AXI_GP0_RRESP(1 downto 0),
      M_AXI_GP0_RVALID => M_AXI_GP0_RVALID,
      M_AXI_GP0_WDATA(31 downto 0) => M_AXI_GP0_WDATA(31 downto 0),
      M_AXI_GP0_WID(11 downto 0) => M_AXI_GP0_WID(11 downto 0),
      M_AXI_GP0_WLAST => M_AXI_GP0_WLAST,
      M_AXI_GP0_WREADY => M_AXI_GP0_WREADY,
      M_AXI_GP0_WSTRB(3 downto 0) => M_AXI_GP0_WSTRB(3 downto 0),
      M_AXI_GP0_WVALID => M_AXI_GP0_WVALID,
      M_AXI_GP1_ACLK => '0',
      M_AXI_GP1_ARADDR(31 downto 0) => NLW_inst_M_AXI_GP1_ARADDR_UNCONNECTED(31 downto 0),
      M_AXI_GP1_ARBURST(1 downto 0) => NLW_inst_M_AXI_GP1_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_GP1_ARCACHE(3 downto 0) => NLW_inst_M_AXI_GP1_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_GP1_ARESETN => NLW_inst_M_AXI_GP1_ARESETN_UNCONNECTED,
      M_AXI_GP1_ARID(11 downto 0) => NLW_inst_M_AXI_GP1_ARID_UNCONNECTED(11 downto 0),
      M_AXI_GP1_ARLEN(3 downto 0) => NLW_inst_M_AXI_GP1_ARLEN_UNCONNECTED(3 downto 0),
      M_AXI_GP1_ARLOCK(1 downto 0) => NLW_inst_M_AXI_GP1_ARLOCK_UNCONNECTED(1 downto 0),
      M_AXI_GP1_ARPROT(2 downto 0) => NLW_inst_M_AXI_GP1_ARPROT_UNCONNECTED(2 downto 0),
      M_AXI_GP1_ARQOS(3 downto 0) => NLW_inst_M_AXI_GP1_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_GP1_ARREADY => '0',
      M_AXI_GP1_ARSIZE(2 downto 0) => NLW_inst_M_AXI_GP1_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_GP1_ARVALID => NLW_inst_M_AXI_GP1_ARVALID_UNCONNECTED,
      M_AXI_GP1_AWADDR(31 downto 0) => NLW_inst_M_AXI_GP1_AWADDR_UNCONNECTED(31 downto 0),
      M_AXI_GP1_AWBURST(1 downto 0) => NLW_inst_M_AXI_GP1_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_GP1_AWCACHE(3 downto 0) => NLW_inst_M_AXI_GP1_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_GP1_AWID(11 downto 0) => NLW_inst_M_AXI_GP1_AWID_UNCONNECTED(11 downto 0),
      M_AXI_GP1_AWLEN(3 downto 0) => NLW_inst_M_AXI_GP1_AWLEN_UNCONNECTED(3 downto 0),
      M_AXI_GP1_AWLOCK(1 downto 0) => NLW_inst_M_AXI_GP1_AWLOCK_UNCONNECTED(1 downto 0),
      M_AXI_GP1_AWPROT(2 downto 0) => NLW_inst_M_AXI_GP1_AWPROT_UNCONNECTED(2 downto 0),
      M_AXI_GP1_AWQOS(3 downto 0) => NLW_inst_M_AXI_GP1_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_GP1_AWREADY => '0',
      M_AXI_GP1_AWSIZE(2 downto 0) => NLW_inst_M_AXI_GP1_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_GP1_AWVALID => NLW_inst_M_AXI_GP1_AWVALID_UNCONNECTED,
      M_AXI_GP1_BID(11 downto 0) => B"000000000000",
      M_AXI_GP1_BREADY => NLW_inst_M_AXI_GP1_BREADY_UNCONNECTED,
      M_AXI_GP1_BRESP(1 downto 0) => B"00",
      M_AXI_GP1_BVALID => '0',
      M_AXI_GP1_RDATA(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_GP1_RID(11 downto 0) => B"000000000000",
      M_AXI_GP1_RLAST => '0',
      M_AXI_GP1_RREADY => NLW_inst_M_AXI_GP1_RREADY_UNCONNECTED,
      M_AXI_GP1_RRESP(1 downto 0) => B"00",
      M_AXI_GP1_RVALID => '0',
      M_AXI_GP1_WDATA(31 downto 0) => NLW_inst_M_AXI_GP1_WDATA_UNCONNECTED(31 downto 0),
      M_AXI_GP1_WID(11 downto 0) => NLW_inst_M_AXI_GP1_WID_UNCONNECTED(11 downto 0),
      M_AXI_GP1_WLAST => NLW_inst_M_AXI_GP1_WLAST_UNCONNECTED,
      M_AXI_GP1_WREADY => '0',
      M_AXI_GP1_WSTRB(3 downto 0) => NLW_inst_M_AXI_GP1_WSTRB_UNCONNECTED(3 downto 0),
      M_AXI_GP1_WVALID => NLW_inst_M_AXI_GP1_WVALID_UNCONNECTED,
      PJTAG_TCK => '0',
      PJTAG_TDI => '0',
      PJTAG_TDO => NLW_inst_PJTAG_TDO_UNCONNECTED,
      PJTAG_TMS => '0',
      PS_CLK => PS_CLK,
      PS_PORB => PS_PORB,
      PS_SRSTB => PS_SRSTB,
      SDIO0_BUSPOW => NLW_inst_SDIO0_BUSPOW_UNCONNECTED,
      SDIO0_BUSVOLT(2 downto 0) => NLW_inst_SDIO0_BUSVOLT_UNCONNECTED(2 downto 0),
      SDIO0_CDN => '0',
      SDIO0_CLK => NLW_inst_SDIO0_CLK_UNCONNECTED,
      SDIO0_CLK_FB => '0',
      SDIO0_CMD_I => '0',
      SDIO0_CMD_O => NLW_inst_SDIO0_CMD_O_UNCONNECTED,
      SDIO0_CMD_T => NLW_inst_SDIO0_CMD_T_UNCONNECTED,
      SDIO0_DATA_I(3 downto 0) => B"0000",
      SDIO0_DATA_O(3 downto 0) => NLW_inst_SDIO0_DATA_O_UNCONNECTED(3 downto 0),
      SDIO0_DATA_T(3 downto 0) => NLW_inst_SDIO0_DATA_T_UNCONNECTED(3 downto 0),
      SDIO0_LED => NLW_inst_SDIO0_LED_UNCONNECTED,
      SDIO0_WP => '0',
      SDIO1_BUSPOW => NLW_inst_SDIO1_BUSPOW_UNCONNECTED,
      SDIO1_BUSVOLT(2 downto 0) => NLW_inst_SDIO1_BUSVOLT_UNCONNECTED(2 downto 0),
      SDIO1_CDN => '0',
      SDIO1_CLK => NLW_inst_SDIO1_CLK_UNCONNECTED,
      SDIO1_CLK_FB => '0',
      SDIO1_CMD_I => '0',
      SDIO1_CMD_O => NLW_inst_SDIO1_CMD_O_UNCONNECTED,
      SDIO1_CMD_T => NLW_inst_SDIO1_CMD_T_UNCONNECTED,
      SDIO1_DATA_I(3 downto 0) => B"0000",
      SDIO1_DATA_O(3 downto 0) => NLW_inst_SDIO1_DATA_O_UNCONNECTED(3 downto 0),
      SDIO1_DATA_T(3 downto 0) => NLW_inst_SDIO1_DATA_T_UNCONNECTED(3 downto 0),
      SDIO1_LED => NLW_inst_SDIO1_LED_UNCONNECTED,
      SDIO1_WP => '0',
      SPI0_MISO_I => '0',
      SPI0_MISO_O => NLW_inst_SPI0_MISO_O_UNCONNECTED,
      SPI0_MISO_T => NLW_inst_SPI0_MISO_T_UNCONNECTED,
      SPI0_MOSI_I => '0',
      SPI0_MOSI_O => NLW_inst_SPI0_MOSI_O_UNCONNECTED,
      SPI0_MOSI_T => NLW_inst_SPI0_MOSI_T_UNCONNECTED,
      SPI0_SCLK_I => '0',
      SPI0_SCLK_O => NLW_inst_SPI0_SCLK_O_UNCONNECTED,
      SPI0_SCLK_T => NLW_inst_SPI0_SCLK_T_UNCONNECTED,
      SPI0_SS1_O => NLW_inst_SPI0_SS1_O_UNCONNECTED,
      SPI0_SS2_O => NLW_inst_SPI0_SS2_O_UNCONNECTED,
      SPI0_SS_I => '0',
      SPI0_SS_O => NLW_inst_SPI0_SS_O_UNCONNECTED,
      SPI0_SS_T => NLW_inst_SPI0_SS_T_UNCONNECTED,
      SPI1_MISO_I => '0',
      SPI1_MISO_O => NLW_inst_SPI1_MISO_O_UNCONNECTED,
      SPI1_MISO_T => NLW_inst_SPI1_MISO_T_UNCONNECTED,
      SPI1_MOSI_I => '0',
      SPI1_MOSI_O => NLW_inst_SPI1_MOSI_O_UNCONNECTED,
      SPI1_MOSI_T => NLW_inst_SPI1_MOSI_T_UNCONNECTED,
      SPI1_SCLK_I => '0',
      SPI1_SCLK_O => NLW_inst_SPI1_SCLK_O_UNCONNECTED,
      SPI1_SCLK_T => NLW_inst_SPI1_SCLK_T_UNCONNECTED,
      SPI1_SS1_O => NLW_inst_SPI1_SS1_O_UNCONNECTED,
      SPI1_SS2_O => NLW_inst_SPI1_SS2_O_UNCONNECTED,
      SPI1_SS_I => '0',
      SPI1_SS_O => NLW_inst_SPI1_SS_O_UNCONNECTED,
      SPI1_SS_T => NLW_inst_SPI1_SS_T_UNCONNECTED,
      SRAM_INTIN => '0',
      S_AXI_ACP_ACLK => '0',
      S_AXI_ACP_ARADDR(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_ACP_ARBURST(1 downto 0) => B"00",
      S_AXI_ACP_ARCACHE(3 downto 0) => B"0000",
      S_AXI_ACP_ARESETN => NLW_inst_S_AXI_ACP_ARESETN_UNCONNECTED,
      S_AXI_ACP_ARID(2 downto 0) => B"000",
      S_AXI_ACP_ARLEN(3 downto 0) => B"0000",
      S_AXI_ACP_ARLOCK(1 downto 0) => B"00",
      S_AXI_ACP_ARPROT(2 downto 0) => B"000",
      S_AXI_ACP_ARQOS(3 downto 0) => B"0000",
      S_AXI_ACP_ARREADY => NLW_inst_S_AXI_ACP_ARREADY_UNCONNECTED,
      S_AXI_ACP_ARSIZE(2 downto 0) => B"000",
      S_AXI_ACP_ARUSER(4 downto 0) => B"00000",
      S_AXI_ACP_ARVALID => '0',
      S_AXI_ACP_AWADDR(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_ACP_AWBURST(1 downto 0) => B"00",
      S_AXI_ACP_AWCACHE(3 downto 0) => B"0000",
      S_AXI_ACP_AWID(2 downto 0) => B"000",
      S_AXI_ACP_AWLEN(3 downto 0) => B"0000",
      S_AXI_ACP_AWLOCK(1 downto 0) => B"00",
      S_AXI_ACP_AWPROT(2 downto 0) => B"000",
      S_AXI_ACP_AWQOS(3 downto 0) => B"0000",
      S_AXI_ACP_AWREADY => NLW_inst_S_AXI_ACP_AWREADY_UNCONNECTED,
      S_AXI_ACP_AWSIZE(2 downto 0) => B"000",
      S_AXI_ACP_AWUSER(4 downto 0) => B"00000",
      S_AXI_ACP_AWVALID => '0',
      S_AXI_ACP_BID(2 downto 0) => NLW_inst_S_AXI_ACP_BID_UNCONNECTED(2 downto 0),
      S_AXI_ACP_BREADY => '0',
      S_AXI_ACP_BRESP(1 downto 0) => NLW_inst_S_AXI_ACP_BRESP_UNCONNECTED(1 downto 0),
      S_AXI_ACP_BVALID => NLW_inst_S_AXI_ACP_BVALID_UNCONNECTED,
      S_AXI_ACP_RDATA(63 downto 0) => NLW_inst_S_AXI_ACP_RDATA_UNCONNECTED(63 downto 0),
      S_AXI_ACP_RID(2 downto 0) => NLW_inst_S_AXI_ACP_RID_UNCONNECTED(2 downto 0),
      S_AXI_ACP_RLAST => NLW_inst_S_AXI_ACP_RLAST_UNCONNECTED,
      S_AXI_ACP_RREADY => '0',
      S_AXI_ACP_RRESP(1 downto 0) => NLW_inst_S_AXI_ACP_RRESP_UNCONNECTED(1 downto 0),
      S_AXI_ACP_RVALID => NLW_inst_S_AXI_ACP_RVALID_UNCONNECTED,
      S_AXI_ACP_WDATA(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      S_AXI_ACP_WID(2 downto 0) => B"000",
      S_AXI_ACP_WLAST => '0',
      S_AXI_ACP_WREADY => NLW_inst_S_AXI_ACP_WREADY_UNCONNECTED,
      S_AXI_ACP_WSTRB(7 downto 0) => B"00000000",
      S_AXI_ACP_WVALID => '0',
      S_AXI_GP0_ACLK => '0',
      S_AXI_GP0_ARADDR(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_GP0_ARBURST(1 downto 0) => B"00",
      S_AXI_GP0_ARCACHE(3 downto 0) => B"0000",
      S_AXI_GP0_ARESETN => NLW_inst_S_AXI_GP0_ARESETN_UNCONNECTED,
      S_AXI_GP0_ARID(5 downto 0) => B"000000",
      S_AXI_GP0_ARLEN(3 downto 0) => B"0000",
      S_AXI_GP0_ARLOCK(1 downto 0) => B"00",
      S_AXI_GP0_ARPROT(2 downto 0) => B"000",
      S_AXI_GP0_ARQOS(3 downto 0) => B"0000",
      S_AXI_GP0_ARREADY => NLW_inst_S_AXI_GP0_ARREADY_UNCONNECTED,
      S_AXI_GP0_ARSIZE(2 downto 0) => B"000",
      S_AXI_GP0_ARVALID => '0',
      S_AXI_GP0_AWADDR(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_GP0_AWBURST(1 downto 0) => B"00",
      S_AXI_GP0_AWCACHE(3 downto 0) => B"0000",
      S_AXI_GP0_AWID(5 downto 0) => B"000000",
      S_AXI_GP0_AWLEN(3 downto 0) => B"0000",
      S_AXI_GP0_AWLOCK(1 downto 0) => B"00",
      S_AXI_GP0_AWPROT(2 downto 0) => B"000",
      S_AXI_GP0_AWQOS(3 downto 0) => B"0000",
      S_AXI_GP0_AWREADY => NLW_inst_S_AXI_GP0_AWREADY_UNCONNECTED,
      S_AXI_GP0_AWSIZE(2 downto 0) => B"000",
      S_AXI_GP0_AWVALID => '0',
      S_AXI_GP0_BID(5 downto 0) => NLW_inst_S_AXI_GP0_BID_UNCONNECTED(5 downto 0),
      S_AXI_GP0_BREADY => '0',
      S_AXI_GP0_BRESP(1 downto 0) => NLW_inst_S_AXI_GP0_BRESP_UNCONNECTED(1 downto 0),
      S_AXI_GP0_BVALID => NLW_inst_S_AXI_GP0_BVALID_UNCONNECTED,
      S_AXI_GP0_RDATA(31 downto 0) => NLW_inst_S_AXI_GP0_RDATA_UNCONNECTED(31 downto 0),
      S_AXI_GP0_RID(5 downto 0) => NLW_inst_S_AXI_GP0_RID_UNCONNECTED(5 downto 0),
      S_AXI_GP0_RLAST => NLW_inst_S_AXI_GP0_RLAST_UNCONNECTED,
      S_AXI_GP0_RREADY => '0',
      S_AXI_GP0_RRESP(1 downto 0) => NLW_inst_S_AXI_GP0_RRESP_UNCONNECTED(1 downto 0),
      S_AXI_GP0_RVALID => NLW_inst_S_AXI_GP0_RVALID_UNCONNECTED,
      S_AXI_GP0_WDATA(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_GP0_WID(5 downto 0) => B"000000",
      S_AXI_GP0_WLAST => '0',
      S_AXI_GP0_WREADY => NLW_inst_S_AXI_GP0_WREADY_UNCONNECTED,
      S_AXI_GP0_WSTRB(3 downto 0) => B"0000",
      S_AXI_GP0_WVALID => '0',
      S_AXI_GP1_ACLK => '0',
      S_AXI_GP1_ARADDR(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_GP1_ARBURST(1 downto 0) => B"00",
      S_AXI_GP1_ARCACHE(3 downto 0) => B"0000",
      S_AXI_GP1_ARESETN => NLW_inst_S_AXI_GP1_ARESETN_UNCONNECTED,
      S_AXI_GP1_ARID(5 downto 0) => B"000000",
      S_AXI_GP1_ARLEN(3 downto 0) => B"0000",
      S_AXI_GP1_ARLOCK(1 downto 0) => B"00",
      S_AXI_GP1_ARPROT(2 downto 0) => B"000",
      S_AXI_GP1_ARQOS(3 downto 0) => B"0000",
      S_AXI_GP1_ARREADY => NLW_inst_S_AXI_GP1_ARREADY_UNCONNECTED,
      S_AXI_GP1_ARSIZE(2 downto 0) => B"000",
      S_AXI_GP1_ARVALID => '0',
      S_AXI_GP1_AWADDR(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_GP1_AWBURST(1 downto 0) => B"00",
      S_AXI_GP1_AWCACHE(3 downto 0) => B"0000",
      S_AXI_GP1_AWID(5 downto 0) => B"000000",
      S_AXI_GP1_AWLEN(3 downto 0) => B"0000",
      S_AXI_GP1_AWLOCK(1 downto 0) => B"00",
      S_AXI_GP1_AWPROT(2 downto 0) => B"000",
      S_AXI_GP1_AWQOS(3 downto 0) => B"0000",
      S_AXI_GP1_AWREADY => NLW_inst_S_AXI_GP1_AWREADY_UNCONNECTED,
      S_AXI_GP1_AWSIZE(2 downto 0) => B"000",
      S_AXI_GP1_AWVALID => '0',
      S_AXI_GP1_BID(5 downto 0) => NLW_inst_S_AXI_GP1_BID_UNCONNECTED(5 downto 0),
      S_AXI_GP1_BREADY => '0',
      S_AXI_GP1_BRESP(1 downto 0) => NLW_inst_S_AXI_GP1_BRESP_UNCONNECTED(1 downto 0),
      S_AXI_GP1_BVALID => NLW_inst_S_AXI_GP1_BVALID_UNCONNECTED,
      S_AXI_GP1_RDATA(31 downto 0) => NLW_inst_S_AXI_GP1_RDATA_UNCONNECTED(31 downto 0),
      S_AXI_GP1_RID(5 downto 0) => NLW_inst_S_AXI_GP1_RID_UNCONNECTED(5 downto 0),
      S_AXI_GP1_RLAST => NLW_inst_S_AXI_GP1_RLAST_UNCONNECTED,
      S_AXI_GP1_RREADY => '0',
      S_AXI_GP1_RRESP(1 downto 0) => NLW_inst_S_AXI_GP1_RRESP_UNCONNECTED(1 downto 0),
      S_AXI_GP1_RVALID => NLW_inst_S_AXI_GP1_RVALID_UNCONNECTED,
      S_AXI_GP1_WDATA(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_GP1_WID(5 downto 0) => B"000000",
      S_AXI_GP1_WLAST => '0',
      S_AXI_GP1_WREADY => NLW_inst_S_AXI_GP1_WREADY_UNCONNECTED,
      S_AXI_GP1_WSTRB(3 downto 0) => B"0000",
      S_AXI_GP1_WVALID => '0',
      S_AXI_HP0_ACLK => '0',
      S_AXI_HP0_ARADDR(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_HP0_ARBURST(1 downto 0) => B"00",
      S_AXI_HP0_ARCACHE(3 downto 0) => B"0000",
      S_AXI_HP0_ARESETN => NLW_inst_S_AXI_HP0_ARESETN_UNCONNECTED,
      S_AXI_HP0_ARID(5 downto 0) => B"000000",
      S_AXI_HP0_ARLEN(3 downto 0) => B"0000",
      S_AXI_HP0_ARLOCK(1 downto 0) => B"00",
      S_AXI_HP0_ARPROT(2 downto 0) => B"000",
      S_AXI_HP0_ARQOS(3 downto 0) => B"0000",
      S_AXI_HP0_ARREADY => NLW_inst_S_AXI_HP0_ARREADY_UNCONNECTED,
      S_AXI_HP0_ARSIZE(2 downto 0) => B"000",
      S_AXI_HP0_ARVALID => '0',
      S_AXI_HP0_AWADDR(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_HP0_AWBURST(1 downto 0) => B"00",
      S_AXI_HP0_AWCACHE(3 downto 0) => B"0000",
      S_AXI_HP0_AWID(5 downto 0) => B"000000",
      S_AXI_HP0_AWLEN(3 downto 0) => B"0000",
      S_AXI_HP0_AWLOCK(1 downto 0) => B"00",
      S_AXI_HP0_AWPROT(2 downto 0) => B"000",
      S_AXI_HP0_AWQOS(3 downto 0) => B"0000",
      S_AXI_HP0_AWREADY => NLW_inst_S_AXI_HP0_AWREADY_UNCONNECTED,
      S_AXI_HP0_AWSIZE(2 downto 0) => B"000",
      S_AXI_HP0_AWVALID => '0',
      S_AXI_HP0_BID(5 downto 0) => NLW_inst_S_AXI_HP0_BID_UNCONNECTED(5 downto 0),
      S_AXI_HP0_BREADY => '0',
      S_AXI_HP0_BRESP(1 downto 0) => NLW_inst_S_AXI_HP0_BRESP_UNCONNECTED(1 downto 0),
      S_AXI_HP0_BVALID => NLW_inst_S_AXI_HP0_BVALID_UNCONNECTED,
      S_AXI_HP0_RACOUNT(2 downto 0) => NLW_inst_S_AXI_HP0_RACOUNT_UNCONNECTED(2 downto 0),
      S_AXI_HP0_RCOUNT(7 downto 0) => NLW_inst_S_AXI_HP0_RCOUNT_UNCONNECTED(7 downto 0),
      S_AXI_HP0_RDATA(63 downto 0) => NLW_inst_S_AXI_HP0_RDATA_UNCONNECTED(63 downto 0),
      S_AXI_HP0_RDISSUECAP1_EN => '0',
      S_AXI_HP0_RID(5 downto 0) => NLW_inst_S_AXI_HP0_RID_UNCONNECTED(5 downto 0),
      S_AXI_HP0_RLAST => NLW_inst_S_AXI_HP0_RLAST_UNCONNECTED,
      S_AXI_HP0_RREADY => '0',
      S_AXI_HP0_RRESP(1 downto 0) => NLW_inst_S_AXI_HP0_RRESP_UNCONNECTED(1 downto 0),
      S_AXI_HP0_RVALID => NLW_inst_S_AXI_HP0_RVALID_UNCONNECTED,
      S_AXI_HP0_WACOUNT(5 downto 0) => NLW_inst_S_AXI_HP0_WACOUNT_UNCONNECTED(5 downto 0),
      S_AXI_HP0_WCOUNT(7 downto 0) => NLW_inst_S_AXI_HP0_WCOUNT_UNCONNECTED(7 downto 0),
      S_AXI_HP0_WDATA(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      S_AXI_HP0_WID(5 downto 0) => B"000000",
      S_AXI_HP0_WLAST => '0',
      S_AXI_HP0_WREADY => NLW_inst_S_AXI_HP0_WREADY_UNCONNECTED,
      S_AXI_HP0_WRISSUECAP1_EN => '0',
      S_AXI_HP0_WSTRB(7 downto 0) => B"00000000",
      S_AXI_HP0_WVALID => '0',
      S_AXI_HP1_ACLK => '0',
      S_AXI_HP1_ARADDR(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_HP1_ARBURST(1 downto 0) => B"00",
      S_AXI_HP1_ARCACHE(3 downto 0) => B"0000",
      S_AXI_HP1_ARESETN => NLW_inst_S_AXI_HP1_ARESETN_UNCONNECTED,
      S_AXI_HP1_ARID(5 downto 0) => B"000000",
      S_AXI_HP1_ARLEN(3 downto 0) => B"0000",
      S_AXI_HP1_ARLOCK(1 downto 0) => B"00",
      S_AXI_HP1_ARPROT(2 downto 0) => B"000",
      S_AXI_HP1_ARQOS(3 downto 0) => B"0000",
      S_AXI_HP1_ARREADY => NLW_inst_S_AXI_HP1_ARREADY_UNCONNECTED,
      S_AXI_HP1_ARSIZE(2 downto 0) => B"000",
      S_AXI_HP1_ARVALID => '0',
      S_AXI_HP1_AWADDR(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_HP1_AWBURST(1 downto 0) => B"00",
      S_AXI_HP1_AWCACHE(3 downto 0) => B"0000",
      S_AXI_HP1_AWID(5 downto 0) => B"000000",
      S_AXI_HP1_AWLEN(3 downto 0) => B"0000",
      S_AXI_HP1_AWLOCK(1 downto 0) => B"00",
      S_AXI_HP1_AWPROT(2 downto 0) => B"000",
      S_AXI_HP1_AWQOS(3 downto 0) => B"0000",
      S_AXI_HP1_AWREADY => NLW_inst_S_AXI_HP1_AWREADY_UNCONNECTED,
      S_AXI_HP1_AWSIZE(2 downto 0) => B"000",
      S_AXI_HP1_AWVALID => '0',
      S_AXI_HP1_BID(5 downto 0) => NLW_inst_S_AXI_HP1_BID_UNCONNECTED(5 downto 0),
      S_AXI_HP1_BREADY => '0',
      S_AXI_HP1_BRESP(1 downto 0) => NLW_inst_S_AXI_HP1_BRESP_UNCONNECTED(1 downto 0),
      S_AXI_HP1_BVALID => NLW_inst_S_AXI_HP1_BVALID_UNCONNECTED,
      S_AXI_HP1_RACOUNT(2 downto 0) => NLW_inst_S_AXI_HP1_RACOUNT_UNCONNECTED(2 downto 0),
      S_AXI_HP1_RCOUNT(7 downto 0) => NLW_inst_S_AXI_HP1_RCOUNT_UNCONNECTED(7 downto 0),
      S_AXI_HP1_RDATA(63 downto 0) => NLW_inst_S_AXI_HP1_RDATA_UNCONNECTED(63 downto 0),
      S_AXI_HP1_RDISSUECAP1_EN => '0',
      S_AXI_HP1_RID(5 downto 0) => NLW_inst_S_AXI_HP1_RID_UNCONNECTED(5 downto 0),
      S_AXI_HP1_RLAST => NLW_inst_S_AXI_HP1_RLAST_UNCONNECTED,
      S_AXI_HP1_RREADY => '0',
      S_AXI_HP1_RRESP(1 downto 0) => NLW_inst_S_AXI_HP1_RRESP_UNCONNECTED(1 downto 0),
      S_AXI_HP1_RVALID => NLW_inst_S_AXI_HP1_RVALID_UNCONNECTED,
      S_AXI_HP1_WACOUNT(5 downto 0) => NLW_inst_S_AXI_HP1_WACOUNT_UNCONNECTED(5 downto 0),
      S_AXI_HP1_WCOUNT(7 downto 0) => NLW_inst_S_AXI_HP1_WCOUNT_UNCONNECTED(7 downto 0),
      S_AXI_HP1_WDATA(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      S_AXI_HP1_WID(5 downto 0) => B"000000",
      S_AXI_HP1_WLAST => '0',
      S_AXI_HP1_WREADY => NLW_inst_S_AXI_HP1_WREADY_UNCONNECTED,
      S_AXI_HP1_WRISSUECAP1_EN => '0',
      S_AXI_HP1_WSTRB(7 downto 0) => B"00000000",
      S_AXI_HP1_WVALID => '0',
      S_AXI_HP2_ACLK => '0',
      S_AXI_HP2_ARADDR(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_HP2_ARBURST(1 downto 0) => B"00",
      S_AXI_HP2_ARCACHE(3 downto 0) => B"0000",
      S_AXI_HP2_ARESETN => NLW_inst_S_AXI_HP2_ARESETN_UNCONNECTED,
      S_AXI_HP2_ARID(5 downto 0) => B"000000",
      S_AXI_HP2_ARLEN(3 downto 0) => B"0000",
      S_AXI_HP2_ARLOCK(1 downto 0) => B"00",
      S_AXI_HP2_ARPROT(2 downto 0) => B"000",
      S_AXI_HP2_ARQOS(3 downto 0) => B"0000",
      S_AXI_HP2_ARREADY => NLW_inst_S_AXI_HP2_ARREADY_UNCONNECTED,
      S_AXI_HP2_ARSIZE(2 downto 0) => B"000",
      S_AXI_HP2_ARVALID => '0',
      S_AXI_HP2_AWADDR(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_HP2_AWBURST(1 downto 0) => B"00",
      S_AXI_HP2_AWCACHE(3 downto 0) => B"0000",
      S_AXI_HP2_AWID(5 downto 0) => B"000000",
      S_AXI_HP2_AWLEN(3 downto 0) => B"0000",
      S_AXI_HP2_AWLOCK(1 downto 0) => B"00",
      S_AXI_HP2_AWPROT(2 downto 0) => B"000",
      S_AXI_HP2_AWQOS(3 downto 0) => B"0000",
      S_AXI_HP2_AWREADY => NLW_inst_S_AXI_HP2_AWREADY_UNCONNECTED,
      S_AXI_HP2_AWSIZE(2 downto 0) => B"000",
      S_AXI_HP2_AWVALID => '0',
      S_AXI_HP2_BID(5 downto 0) => NLW_inst_S_AXI_HP2_BID_UNCONNECTED(5 downto 0),
      S_AXI_HP2_BREADY => '0',
      S_AXI_HP2_BRESP(1 downto 0) => NLW_inst_S_AXI_HP2_BRESP_UNCONNECTED(1 downto 0),
      S_AXI_HP2_BVALID => NLW_inst_S_AXI_HP2_BVALID_UNCONNECTED,
      S_AXI_HP2_RACOUNT(2 downto 0) => NLW_inst_S_AXI_HP2_RACOUNT_UNCONNECTED(2 downto 0),
      S_AXI_HP2_RCOUNT(7 downto 0) => NLW_inst_S_AXI_HP2_RCOUNT_UNCONNECTED(7 downto 0),
      S_AXI_HP2_RDATA(63 downto 0) => NLW_inst_S_AXI_HP2_RDATA_UNCONNECTED(63 downto 0),
      S_AXI_HP2_RDISSUECAP1_EN => '0',
      S_AXI_HP2_RID(5 downto 0) => NLW_inst_S_AXI_HP2_RID_UNCONNECTED(5 downto 0),
      S_AXI_HP2_RLAST => NLW_inst_S_AXI_HP2_RLAST_UNCONNECTED,
      S_AXI_HP2_RREADY => '0',
      S_AXI_HP2_RRESP(1 downto 0) => NLW_inst_S_AXI_HP2_RRESP_UNCONNECTED(1 downto 0),
      S_AXI_HP2_RVALID => NLW_inst_S_AXI_HP2_RVALID_UNCONNECTED,
      S_AXI_HP2_WACOUNT(5 downto 0) => NLW_inst_S_AXI_HP2_WACOUNT_UNCONNECTED(5 downto 0),
      S_AXI_HP2_WCOUNT(7 downto 0) => NLW_inst_S_AXI_HP2_WCOUNT_UNCONNECTED(7 downto 0),
      S_AXI_HP2_WDATA(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      S_AXI_HP2_WID(5 downto 0) => B"000000",
      S_AXI_HP2_WLAST => '0',
      S_AXI_HP2_WREADY => NLW_inst_S_AXI_HP2_WREADY_UNCONNECTED,
      S_AXI_HP2_WRISSUECAP1_EN => '0',
      S_AXI_HP2_WSTRB(7 downto 0) => B"00000000",
      S_AXI_HP2_WVALID => '0',
      S_AXI_HP3_ACLK => '0',
      S_AXI_HP3_ARADDR(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_HP3_ARBURST(1 downto 0) => B"00",
      S_AXI_HP3_ARCACHE(3 downto 0) => B"0000",
      S_AXI_HP3_ARESETN => NLW_inst_S_AXI_HP3_ARESETN_UNCONNECTED,
      S_AXI_HP3_ARID(5 downto 0) => B"000000",
      S_AXI_HP3_ARLEN(3 downto 0) => B"0000",
      S_AXI_HP3_ARLOCK(1 downto 0) => B"00",
      S_AXI_HP3_ARPROT(2 downto 0) => B"000",
      S_AXI_HP3_ARQOS(3 downto 0) => B"0000",
      S_AXI_HP3_ARREADY => NLW_inst_S_AXI_HP3_ARREADY_UNCONNECTED,
      S_AXI_HP3_ARSIZE(2 downto 0) => B"000",
      S_AXI_HP3_ARVALID => '0',
      S_AXI_HP3_AWADDR(31 downto 0) => B"00000000000000000000000000000000",
      S_AXI_HP3_AWBURST(1 downto 0) => B"00",
      S_AXI_HP3_AWCACHE(3 downto 0) => B"0000",
      S_AXI_HP3_AWID(5 downto 0) => B"000000",
      S_AXI_HP3_AWLEN(3 downto 0) => B"0000",
      S_AXI_HP3_AWLOCK(1 downto 0) => B"00",
      S_AXI_HP3_AWPROT(2 downto 0) => B"000",
      S_AXI_HP3_AWQOS(3 downto 0) => B"0000",
      S_AXI_HP3_AWREADY => NLW_inst_S_AXI_HP3_AWREADY_UNCONNECTED,
      S_AXI_HP3_AWSIZE(2 downto 0) => B"000",
      S_AXI_HP3_AWVALID => '0',
      S_AXI_HP3_BID(5 downto 0) => NLW_inst_S_AXI_HP3_BID_UNCONNECTED(5 downto 0),
      S_AXI_HP3_BREADY => '0',
      S_AXI_HP3_BRESP(1 downto 0) => NLW_inst_S_AXI_HP3_BRESP_UNCONNECTED(1 downto 0),
      S_AXI_HP3_BVALID => NLW_inst_S_AXI_HP3_BVALID_UNCONNECTED,
      S_AXI_HP3_RACOUNT(2 downto 0) => NLW_inst_S_AXI_HP3_RACOUNT_UNCONNECTED(2 downto 0),
      S_AXI_HP3_RCOUNT(7 downto 0) => NLW_inst_S_AXI_HP3_RCOUNT_UNCONNECTED(7 downto 0),
      S_AXI_HP3_RDATA(63 downto 0) => NLW_inst_S_AXI_HP3_RDATA_UNCONNECTED(63 downto 0),
      S_AXI_HP3_RDISSUECAP1_EN => '0',
      S_AXI_HP3_RID(5 downto 0) => NLW_inst_S_AXI_HP3_RID_UNCONNECTED(5 downto 0),
      S_AXI_HP3_RLAST => NLW_inst_S_AXI_HP3_RLAST_UNCONNECTED,
      S_AXI_HP3_RREADY => '0',
      S_AXI_HP3_RRESP(1 downto 0) => NLW_inst_S_AXI_HP3_RRESP_UNCONNECTED(1 downto 0),
      S_AXI_HP3_RVALID => NLW_inst_S_AXI_HP3_RVALID_UNCONNECTED,
      S_AXI_HP3_WACOUNT(5 downto 0) => NLW_inst_S_AXI_HP3_WACOUNT_UNCONNECTED(5 downto 0),
      S_AXI_HP3_WCOUNT(7 downto 0) => NLW_inst_S_AXI_HP3_WCOUNT_UNCONNECTED(7 downto 0),
      S_AXI_HP3_WDATA(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      S_AXI_HP3_WID(5 downto 0) => B"000000",
      S_AXI_HP3_WLAST => '0',
      S_AXI_HP3_WREADY => NLW_inst_S_AXI_HP3_WREADY_UNCONNECTED,
      S_AXI_HP3_WRISSUECAP1_EN => '0',
      S_AXI_HP3_WSTRB(7 downto 0) => B"00000000",
      S_AXI_HP3_WVALID => '0',
      TRACE_CLK => '0',
      TRACE_CLK_OUT => NLW_inst_TRACE_CLK_OUT_UNCONNECTED,
      TRACE_CTL => NLW_inst_TRACE_CTL_UNCONNECTED,
      TRACE_DATA(1 downto 0) => NLW_inst_TRACE_DATA_UNCONNECTED(1 downto 0),
      TTC0_CLK0_IN => '0',
      TTC0_CLK1_IN => '0',
      TTC0_CLK2_IN => '0',
      TTC0_WAVE0_OUT => TTC0_WAVE0_OUT,
      TTC0_WAVE1_OUT => TTC0_WAVE1_OUT,
      TTC0_WAVE2_OUT => TTC0_WAVE2_OUT,
      TTC1_CLK0_IN => '0',
      TTC1_CLK1_IN => '0',
      TTC1_CLK2_IN => '0',
      TTC1_WAVE0_OUT => NLW_inst_TTC1_WAVE0_OUT_UNCONNECTED,
      TTC1_WAVE1_OUT => NLW_inst_TTC1_WAVE1_OUT_UNCONNECTED,
      TTC1_WAVE2_OUT => NLW_inst_TTC1_WAVE2_OUT_UNCONNECTED,
      UART0_CTSN => '0',
      UART0_DCDN => '0',
      UART0_DSRN => '0',
      UART0_DTRN => NLW_inst_UART0_DTRN_UNCONNECTED,
      UART0_RIN => '0',
      UART0_RTSN => NLW_inst_UART0_RTSN_UNCONNECTED,
      UART0_RX => '1',
      UART0_TX => NLW_inst_UART0_TX_UNCONNECTED,
      UART1_CTSN => '0',
      UART1_DCDN => '0',
      UART1_DSRN => '0',
      UART1_DTRN => NLW_inst_UART1_DTRN_UNCONNECTED,
      UART1_RIN => '0',
      UART1_RTSN => NLW_inst_UART1_RTSN_UNCONNECTED,
      UART1_RX => '1',
      UART1_TX => NLW_inst_UART1_TX_UNCONNECTED,
      USB0_PORT_INDCTL(1 downto 0) => USB0_PORT_INDCTL(1 downto 0),
      USB0_VBUS_PWRFAULT => USB0_VBUS_PWRFAULT,
      USB0_VBUS_PWRSELECT => USB0_VBUS_PWRSELECT,
      USB1_PORT_INDCTL(1 downto 0) => NLW_inst_USB1_PORT_INDCTL_UNCONNECTED(1 downto 0),
      USB1_VBUS_PWRFAULT => '0',
      USB1_VBUS_PWRSELECT => NLW_inst_USB1_VBUS_PWRSELECT_UNCONNECTED,
      WDT_CLK_IN => '0',
      WDT_RST_OUT => NLW_inst_WDT_RST_OUT_UNCONNECTED
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_rst_ps7_0_100M_0_lpf is
  port (
    lpf_int : out STD_LOGIC;
    slowest_sync_clk : in STD_LOGIC;
    dcm_locked : in STD_LOGIC;
    mb_debug_sys_rst : in STD_LOGIC;
    ext_reset_in : in STD_LOGIC;
    aux_reset_in : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_rst_ps7_0_100M_0_lpf : entity is "lpf";
end design_1_rst_ps7_0_100M_0_lpf;

architecture STRUCTURE of design_1_rst_ps7_0_100M_0_lpf is
  signal \ACTIVE_LOW_AUX.ACT_LO_AUX_n_0\ : STD_LOGIC;
  signal \ACTIVE_LOW_EXT.ACT_LO_EXT_n_0\ : STD_LOGIC;
  signal Q : STD_LOGIC;
  signal asr_lpf : STD_LOGIC_VECTOR ( 0 to 0 );
  signal exr_lpf : STD_LOGIC_VECTOR ( 0 to 0 );
  signal lpf_asr : STD_LOGIC;
  signal lpf_exr : STD_LOGIC;
  signal \lpf_int0__0\ : STD_LOGIC;
  signal p_1_in : STD_LOGIC;
  signal p_1_in4_in : STD_LOGIC;
  signal p_2_in : STD_LOGIC;
  signal p_2_in3_in : STD_LOGIC;
  signal p_3_in1_in : STD_LOGIC;
  signal p_3_in6_in : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of POR_SRL_I : label is "SRL16";
  attribute box_type : string;
  attribute box_type of POR_SRL_I : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of POR_SRL_I : label is "U0/\EXT_LPF/POR_SRL_I ";
begin
\ACTIVE_LOW_AUX.ACT_LO_AUX\: entity work.design_1_rst_ps7_0_100M_0_cdc_sync
     port map (
      asr_lpf(0) => asr_lpf(0),
      aux_reset_in => aux_reset_in,
      lpf_asr => lpf_asr,
      lpf_asr_reg => \ACTIVE_LOW_AUX.ACT_LO_AUX_n_0\,
      p_1_in => p_1_in,
      p_2_in => p_2_in,
      scndry_out => p_3_in1_in,
      slowest_sync_clk => slowest_sync_clk
    );
\ACTIVE_LOW_EXT.ACT_LO_EXT\: entity work.design_1_rst_ps7_0_100M_0_cdc_sync_0
     port map (
      exr_lpf(0) => exr_lpf(0),
      ext_reset_in => ext_reset_in,
      lpf_exr => lpf_exr,
      lpf_exr_reg => \ACTIVE_LOW_EXT.ACT_LO_EXT_n_0\,
      mb_debug_sys_rst => mb_debug_sys_rst,
      p_1_in4_in => p_1_in4_in,
      p_2_in3_in => p_2_in3_in,
      scndry_out => p_3_in6_in,
      slowest_sync_clk => slowest_sync_clk
    );
\AUX_LPF[1].asr_lpf_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_3_in1_in,
      Q => p_2_in,
      R => '0'
    );
\AUX_LPF[2].asr_lpf_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_2_in,
      Q => p_1_in,
      R => '0'
    );
\AUX_LPF[3].asr_lpf_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_1_in,
      Q => asr_lpf(0),
      R => '0'
    );
\EXT_LPF[1].exr_lpf_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_3_in6_in,
      Q => p_2_in3_in,
      R => '0'
    );
\EXT_LPF[2].exr_lpf_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_2_in3_in,
      Q => p_1_in4_in,
      R => '0'
    );
\EXT_LPF[3].exr_lpf_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_1_in4_in,
      Q => exr_lpf(0),
      R => '0'
    );
POR_SRL_I: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"FFFF"
    )
        port map (
      A0 => '1',
      A1 => '1',
      A2 => '1',
      A3 => '1',
      CE => '1',
      CLK => slowest_sync_clk,
      D => '0',
      Q => Q
    );
lpf_asr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => \ACTIVE_LOW_AUX.ACT_LO_AUX_n_0\,
      Q => lpf_asr,
      R => '0'
    );
lpf_exr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => \ACTIVE_LOW_EXT.ACT_LO_EXT_n_0\,
      Q => lpf_exr,
      R => '0'
    );
lpf_int0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFD"
    )
        port map (
      I0 => dcm_locked,
      I1 => lpf_exr,
      I2 => lpf_asr,
      I3 => Q,
      O => \lpf_int0__0\
    );
lpf_int_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => \lpf_int0__0\,
      Q => lpf_int,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_rst_ps7_0_100M_0_sequence_psr is
  port (
    MB_out : out STD_LOGIC;
    Bsr_out : out STD_LOGIC;
    Pr_out : out STD_LOGIC;
    bsr_reg_0 : out STD_LOGIC;
    pr_reg_0 : out STD_LOGIC;
    lpf_int : in STD_LOGIC;
    slowest_sync_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_rst_ps7_0_100M_0_sequence_psr : entity is "sequence_psr";
end design_1_rst_ps7_0_100M_0_sequence_psr;

architecture STRUCTURE of design_1_rst_ps7_0_100M_0_sequence_psr is
  signal \^bsr_out\ : STD_LOGIC;
  signal Core_i_1_n_0 : STD_LOGIC;
  signal \^mb_out\ : STD_LOGIC;
  signal \^pr_out\ : STD_LOGIC;
  signal \bsr_dec_reg_n_0_[0]\ : STD_LOGIC;
  signal \bsr_dec_reg_n_0_[2]\ : STD_LOGIC;
  signal bsr_i_1_n_0 : STD_LOGIC;
  signal \core_dec[0]_i_1_n_0\ : STD_LOGIC;
  signal \core_dec[2]_i_1_n_0\ : STD_LOGIC;
  signal \core_dec_reg_n_0_[0]\ : STD_LOGIC;
  signal \core_dec_reg_n_0_[1]\ : STD_LOGIC;
  signal from_sys_i_1_n_0 : STD_LOGIC;
  signal p_0_in : STD_LOGIC;
  signal p_3_out : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal p_5_out : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \pr_dec0__0\ : STD_LOGIC;
  signal \pr_dec_reg_n_0_[0]\ : STD_LOGIC;
  signal \pr_dec_reg_n_0_[2]\ : STD_LOGIC;
  signal pr_i_1_n_0 : STD_LOGIC;
  signal seq_clr : STD_LOGIC;
  signal seq_cnt : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal seq_cnt_en : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N_i_1\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N_i_1\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of Core_i_1 : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \bsr_dec[2]_i_1\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of bsr_i_1 : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \core_dec[0]_i_1\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \core_dec[2]_i_1\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of from_sys_i_1 : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \pr_dec[0]_i_1\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of pr_i_1 : label is "soft_lutpair4";
begin
  Bsr_out <= \^bsr_out\;
  MB_out <= \^mb_out\;
  Pr_out <= \^pr_out\;
\ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^bsr_out\,
      O => bsr_reg_0
    );
\ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^pr_out\,
      O => pr_reg_0
    );
Core_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^mb_out\,
      I1 => p_0_in,
      O => Core_i_1_n_0
    );
Core_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => Core_i_1_n_0,
      Q => \^mb_out\,
      S => lpf_int
    );
SEQ_COUNTER: entity work.design_1_rst_ps7_0_100M_0_upcnt_n
     port map (
      Q(5 downto 0) => seq_cnt(5 downto 0),
      seq_clr => seq_clr,
      seq_cnt_en => seq_cnt_en,
      slowest_sync_clk => slowest_sync_clk
    );
\bsr_dec[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0090"
    )
        port map (
      I0 => seq_cnt_en,
      I1 => seq_cnt(4),
      I2 => seq_cnt(3),
      I3 => seq_cnt(5),
      O => p_5_out(0)
    );
\bsr_dec[2]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \core_dec_reg_n_0_[1]\,
      I1 => \bsr_dec_reg_n_0_[0]\,
      O => p_5_out(2)
    );
\bsr_dec_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_5_out(0),
      Q => \bsr_dec_reg_n_0_[0]\,
      R => '0'
    );
\bsr_dec_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_5_out(2),
      Q => \bsr_dec_reg_n_0_[2]\,
      R => '0'
    );
bsr_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^bsr_out\,
      I1 => \bsr_dec_reg_n_0_[2]\,
      O => bsr_i_1_n_0
    );
bsr_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => bsr_i_1_n_0,
      Q => \^bsr_out\,
      S => lpf_int
    );
\core_dec[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9000"
    )
        port map (
      I0 => seq_cnt_en,
      I1 => seq_cnt(4),
      I2 => seq_cnt(3),
      I3 => seq_cnt(5),
      O => \core_dec[0]_i_1_n_0\
    );
\core_dec[2]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \core_dec_reg_n_0_[1]\,
      I1 => \core_dec_reg_n_0_[0]\,
      O => \core_dec[2]_i_1_n_0\
    );
\core_dec_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => \core_dec[0]_i_1_n_0\,
      Q => \core_dec_reg_n_0_[0]\,
      R => '0'
    );
\core_dec_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => \pr_dec0__0\,
      Q => \core_dec_reg_n_0_[1]\,
      R => '0'
    );
\core_dec_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => \core_dec[2]_i_1_n_0\,
      Q => p_0_in,
      R => '0'
    );
from_sys_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^mb_out\,
      I1 => seq_cnt_en,
      O => from_sys_i_1_n_0
    );
from_sys_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => from_sys_i_1_n_0,
      Q => seq_cnt_en,
      S => lpf_int
    );
pr_dec0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0018"
    )
        port map (
      I0 => seq_cnt_en,
      I1 => seq_cnt(0),
      I2 => seq_cnt(2),
      I3 => seq_cnt(1),
      O => \pr_dec0__0\
    );
\pr_dec[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0480"
    )
        port map (
      I0 => seq_cnt_en,
      I1 => seq_cnt(3),
      I2 => seq_cnt(5),
      I3 => seq_cnt(4),
      O => p_3_out(0)
    );
\pr_dec[2]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \core_dec_reg_n_0_[1]\,
      I1 => \pr_dec_reg_n_0_[0]\,
      O => p_3_out(2)
    );
\pr_dec_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_3_out(0),
      Q => \pr_dec_reg_n_0_[0]\,
      R => '0'
    );
\pr_dec_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => p_3_out(2),
      Q => \pr_dec_reg_n_0_[2]\,
      R => '0'
    );
pr_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^pr_out\,
      I1 => \pr_dec_reg_n_0_[2]\,
      O => pr_i_1_n_0
    );
pr_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => pr_i_1_n_0,
      Q => \^pr_out\,
      S => lpf_int
    );
seq_clr_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => '1',
      Q => seq_clr,
      R => lpf_int
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_top_nqueens_0_0_fsm is
  port (
    next_out_9 : out STD_LOGIC;
    \j_reg[2]\ : out STD_LOGIC;
    \j_reg[1]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \j_reg[1]_0\ : out STD_LOGIC;
    \j_reg[1]_1\ : out STD_LOGIC;
    \j_reg[1]_2\ : out STD_LOGIC;
    \j_reg[1]_3\ : out STD_LOGIC;
    \j_reg[1]_4\ : out STD_LOGIC;
    \j_reg[1]_5\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    \count_reg[0]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \count_reg[0]_0\ : in STD_LOGIC;
    \count_reg[0]_1\ : in STD_LOGIC;
    done_aux_i_4 : in STD_LOGIC;
    \count[4]_i_5\ : in STD_LOGIC;
    \count[4]_i_5_0\ : in STD_LOGIC;
    \count[4]_i_5_1\ : in STD_LOGIC;
    \count[4]_i_5_2\ : in STD_LOGIC;
    \count[4]_i_12\ : in STD_LOGIC;
    \count[4]_i_12_0\ : in STD_LOGIC;
    \count[4]_i_7\ : in STD_LOGIC;
    \count[4]_i_7_0\ : in STD_LOGIC;
    count1_carry_i_14 : in STD_LOGIC;
    count1_carry_i_14_0 : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    AR : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_top_nqueens_0_0_fsm : entity is "fsm";
end design_1_top_nqueens_0_0_fsm;

architecture STRUCTURE of design_1_top_nqueens_0_0_fsm is
  signal \FSM_onehot_state_reg_n_0_[0]\ : STD_LOGIC;
  signal \FSM_onehot_state_reg_n_0_[2]\ : STD_LOGIC;
  signal ack_out_9 : STD_LOGIC;
  signal acks_out : STD_LOGIC;
  signal \asout_array[9]_0\ : STD_LOGIC;
  signal ce : STD_LOGIC;
  signal \ce__0\ : STD_LOGIC;
  signal \ce_reg_i_1__0_n_0\ : STD_LOGIC;
  signal dut_n_10 : STD_LOGIC;
  signal dut_n_2 : STD_LOGIC;
  signal dut_n_3 : STD_LOGIC;
  signal dut_n_4 : STD_LOGIC;
  signal dut_n_5 : STD_LOGIC;
  signal dut_n_6 : STD_LOGIC;
  signal dut_n_7 : STD_LOGIC;
  signal dut_n_8 : STD_LOGIC;
  signal dut_n_9 : STD_LOGIC;
  signal j_reg : STD_LOGIC_VECTOR ( 2 to 2 );
  signal \^j_reg[1]\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal j_reg_2_sn_1 : STD_LOGIC;
  signal logic_n_10 : STD_LOGIC;
  signal logic_n_14 : STD_LOGIC;
  signal logic_n_15 : STD_LOGIC;
  signal logic_n_16 : STD_LOGIC;
  signal logic_n_8 : STD_LOGIC;
  signal logic_n_9 : STD_LOGIC;
  signal nexts_out : STD_LOGIC;
  signal reset_control : STD_LOGIC;
  signal reset_control_reg_i_1_n_0 : STD_LOGIC;
  signal u_i : STD_LOGIC_VECTOR ( 4 downto 3 );
  signal valid : STD_LOGIC;
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[0]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[1]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[2]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[3]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[4]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of acks_out_reg : label is "LD";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \acks_out_reg_i_1__0\ : label is "soft_lutpair143";
  attribute XILINX_LEGACY_PRIM of ce_reg : label is "LD";
  attribute SOFT_HLUTNM of \ce_reg_i_1__0\ : label is "soft_lutpair143";
  attribute XILINX_LEGACY_PRIM of nexts_out_reg : label is "LD";
  attribute XILINX_LEGACY_PRIM of reset_control_reg : label is "LD";
begin
  E(0) <= ack_out_9;
  \j_reg[1]\(1 downto 0) <= \^j_reg[1]\(1 downto 0);
  \j_reg[2]\ <= j_reg_2_sn_1;
\FSM_onehot_state_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => logic_n_15,
      D => '0',
      Q => \FSM_onehot_state_reg_n_0_[0]\,
      S => SR(0)
    );
\FSM_onehot_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_15,
      D => dut_n_10,
      Q => \ce__0\,
      R => SR(0)
    );
\FSM_onehot_state_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_15,
      D => dut_n_9,
      Q => \FSM_onehot_state_reg_n_0_[2]\,
      R => SR(0)
    );
\FSM_onehot_state_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_15,
      D => logic_n_16,
      Q => \asout_array[9]_0\,
      R => SR(0)
    );
\FSM_onehot_state_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_15,
      D => dut_n_8,
      Q => nexts_out,
      R => SR(0)
    );
acks_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => acks_out,
      G => logic_n_14,
      GE => '1',
      Q => ack_out_9
    );
\acks_out_reg_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \ce__0\,
      I1 => nexts_out,
      I2 => \FSM_onehot_state_reg_n_0_[0]\,
      O => acks_out
    );
ce_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \ce_reg_i_1__0_n_0\,
      GE => '1',
      Q => ce
    );
\ce_reg_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \FSM_onehot_state_reg_n_0_[0]\,
      I2 => nexts_out,
      I3 => \ce__0\,
      O => \ce_reg_i_1__0_n_0\
    );
dut: entity work.design_1_top_nqueens_0_0_up_counter
     port map (
      AR(0) => AR(0),
      D(2) => dut_n_8,
      D(1) => dut_n_9,
      D(0) => dut_n_10,
      E(0) => ce,
      \FSM_onehot_state_reg[4]\(3) => \asout_array[9]_0\,
      \FSM_onehot_state_reg[4]\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \FSM_onehot_state_reg[4]\(1) => \ce__0\,
      \FSM_onehot_state_reg[4]\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      Q(1 downto 0) => u_i(4 downto 3),
      S(0) => dut_n_2,
      clk => clk,
      count1_carry => logic_n_10,
      \count1_carry__1_i_3\ => logic_n_8,
      count1_carry_i_4_0(2) => j_reg(2),
      count1_carry_i_4_0(1 downto 0) => \^j_reg[1]\(1 downto 0),
      \count_reg[0]\ => \count_reg[0]\,
      \count_reg[0]_0\ => \count_reg[0]_1\,
      \count_reg_reg[0]_0\ => dut_n_6,
      \count_reg_reg[2]_0\ => dut_n_3,
      \count_reg_reg[2]_1\ => dut_n_4,
      \count_reg_reg[2]_2\ => dut_n_5,
      \count_reg_reg[3]_0\ => dut_n_7,
      done_aux_i_4_0 => done_aux_i_4,
      done_aux_reg => logic_n_9,
      valid => valid
    );
logic: entity work.design_1_top_nqueens_0_0_ctrl_logic
     port map (
      AR(0) => reset_control,
      D(0) => logic_n_16,
      E(0) => logic_n_15,
      \FSM_onehot_state_reg[0]\ => logic_n_14,
      Q(1 downto 0) => u_i(4 downto 3),
      S(0) => dut_n_2,
      acks_out_reg(4) => nexts_out,
      acks_out_reg(3) => \asout_array[9]_0\,
      acks_out_reg(2) => \FSM_onehot_state_reg_n_0_[2]\,
      acks_out_reg(1) => \ce__0\,
      acks_out_reg(0) => \FSM_onehot_state_reg_n_0_[0]\,
      clk => clk,
      \count1_carry__1_0\ => dut_n_7,
      \count1_carry__1_1\ => dut_n_3,
      count1_carry_i_14 => count1_carry_i_14,
      count1_carry_i_14_0 => count1_carry_i_14_0,
      count1_carry_i_4 => dut_n_6,
      \count[4]_i_12_0\ => \count[4]_i_12\,
      \count[4]_i_12_1\ => \count[4]_i_12_0\,
      \count[4]_i_5_0\ => \count[4]_i_5\,
      \count[4]_i_5_1\ => \count[4]_i_5_0\,
      \count[4]_i_5_2\ => \count[4]_i_5_1\,
      \count[4]_i_5_3\ => \count[4]_i_5_2\,
      \count[4]_i_7_0\ => \count[4]_i_7\,
      \count[4]_i_7_1\ => \count[4]_i_7_0\,
      \count_reg[0]_0\(1 downto 0) => Q(1 downto 0),
      \count_reg[0]_1\ => \count_reg[0]_0\,
      \count_reg[0]_2\ => dut_n_5,
      \count_reg_reg[4]\ => logic_n_9,
      done_aux_reg_0 => dut_n_4,
      \j_reg[0]_0\ => logic_n_8,
      \j_reg[1]_0\ => \j_reg[1]_0\,
      \j_reg[1]_1\ => \j_reg[1]_1\,
      \j_reg[1]_2\ => \j_reg[1]_2\,
      \j_reg[1]_3\ => logic_n_10,
      \j_reg[1]_4\ => \j_reg[1]_3\,
      \j_reg[1]_5\ => \j_reg[1]_4\,
      \j_reg[1]_6\ => \j_reg[1]_5\,
      \j_reg[2]_0\ => j_reg_2_sn_1,
      \j_reg[2]_1\(2) => j_reg(2),
      \j_reg[2]_1\(1 downto 0) => \^j_reg[1]\(1 downto 0),
      valid => valid
    );
nexts_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => nexts_out,
      G => acks_out,
      GE => '1',
      Q => next_out_9
    );
reset_control_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => reset_control_reg_i_1_n_0,
      GE => '1',
      Q => reset_control
    );
reset_control_reg_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      O => reset_control_reg_i_1_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_fsm__parameterized0\ is
  port (
    AR : out STD_LOGIC_VECTOR ( 0 to 0 );
    next_out_8 : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \count_reg_reg[2]\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \j_reg[0]\ : out STD_LOGIC;
    \j_reg[3]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \j_reg[3]_0\ : out STD_LOGIC;
    \j_reg[3]_1\ : out STD_LOGIC;
    \j_reg[0]_0\ : out STD_LOGIC;
    \j_reg[0]_1\ : out STD_LOGIC;
    \j_reg[0]_2\ : out STD_LOGIC;
    \j_reg[1]\ : out STD_LOGIC;
    \j_reg[1]_0\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_0\ : out STD_LOGIC;
    \j_reg[1]_1\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_1\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_2\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_3\ : out STD_LOGIC;
    \count_reg_reg[3]\ : out STD_LOGIC;
    \count_reg_reg[2]_0\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_4\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_5\ : out STD_LOGIC;
    \count_reg_reg[0]\ : out STD_LOGIC;
    \j_reg[2]\ : out STD_LOGIC;
    \j_reg[3]_2\ : out STD_LOGIC;
    \j_reg[2]_0\ : out STD_LOGIC;
    \j_reg[2]_1\ : out STD_LOGIC;
    \j_reg[2]_2\ : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    \count[4]_i_17\ : in STD_LOGIC;
    \count[4]_i_17_0\ : in STD_LOGIC;
    count1_carry_i_14 : in STD_LOGIC;
    \count1_carry_i_4__0\ : in STD_LOGIC;
    done_aux_reg : in STD_LOGIC;
    \count_reg[0]\ : in STD_LOGIC;
    a_in_8 : in STD_LOGIC_VECTOR ( 39 downto 0 );
    \count[4]_i_11\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \count[4]_i_4\ : in STD_LOGIC;
    count1_carry_i_13 : in STD_LOGIC;
    count1_carry_i_13_0 : in STD_LOGIC;
    count1_carry_i_13_1 : in STD_LOGIC;
    count1_carry : in STD_LOGIC;
    \count1_carry_i_4__0_0\ : in STD_LOGIC;
    \count_reg[0]_0\ : in STD_LOGIC;
    \count_reg[0]_1\ : in STD_LOGIC;
    \count_reg[0]_2\ : in STD_LOGIC;
    \done_aux_i_2__0\ : in STD_LOGIC;
    \count[4]_i_11__3\ : in STD_LOGIC;
    \count[4]_i_11__3_0\ : in STD_LOGIC;
    \count[4]_i_7__0\ : in STD_LOGIC;
    next_out_9 : in STD_LOGIC;
    \count[4]_i_5__5\ : in STD_LOGIC;
    nRst : in STD_LOGIC;
    \FSM_onehot_state_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count_reg_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_fsm__parameterized0\ : entity is "fsm";
end \design_1_top_nqueens_0_0_fsm__parameterized0\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_fsm__parameterized0\ is
  signal \^ar\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \FSM_onehot_state_reg_n_0_[0]\ : STD_LOGIC;
  signal \FSM_onehot_state_reg_n_0_[2]\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal a_in_9 : STD_LOGIC_VECTOR ( 42 downto 0 );
  signal acks_out : STD_LOGIC;
  signal \asout_array[8]_1\ : STD_LOGIC;
  signal ce : STD_LOGIC;
  signal \ce__0\ : STD_LOGIC;
  signal \ce_reg_i_1__2_n_0\ : STD_LOGIC;
  signal \^count_reg_reg[0]\ : STD_LOGIC;
  signal \^count_reg_reg[2]\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal dut_n_0 : STD_LOGIC;
  signal dut_n_10 : STD_LOGIC;
  signal dut_n_6 : STD_LOGIC;
  signal dut_n_8 : STD_LOGIC;
  signal dut_n_9 : STD_LOGIC;
  signal logic_n_22 : STD_LOGIC;
  signal logic_n_28 : STD_LOGIC;
  signal logic_n_29 : STD_LOGIC;
  signal logic_n_30 : STD_LOGIC;
  signal nexts_out : STD_LOGIC;
  signal reset_control : STD_LOGIC;
  signal \reset_control_reg_i_1__0_n_0\ : STD_LOGIC;
  signal u_i : STD_LOGIC_VECTOR ( 4 downto 3 );
  signal valid : STD_LOGIC;
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[0]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[1]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[2]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[3]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[4]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of acks_out_reg : label is "LD";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \acks_out_reg_i_1__2\ : label is "soft_lutpair128";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[6][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[6][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[6][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[6][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[6][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[7][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[7][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[7][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[7][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[7][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[8][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[8][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[8][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[8][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[8][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of ce_reg : label is "LD";
  attribute SOFT_HLUTNM of \ce_reg_i_1__2\ : label is "soft_lutpair128";
  attribute XILINX_LEGACY_PRIM of nexts_out_reg : label is "LD";
  attribute XILINX_LEGACY_PRIM of reset_control_reg : label is "LD";
begin
  AR(0) <= \^ar\(0);
  Q(1 downto 0) <= \^q\(1 downto 0);
  \count_reg_reg[0]\ <= \^count_reg_reg[0]\;
  \count_reg_reg[2]\(2 downto 0) <= \^count_reg_reg[2]\(2 downto 0);
\FSM_onehot_state[4]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ar\(0),
      I1 => nRst,
      O => SR(0)
    );
\FSM_onehot_state_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => logic_n_28,
      D => '0',
      Q => \FSM_onehot_state_reg_n_0_[0]\,
      S => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_28,
      D => dut_n_10,
      Q => \ce__0\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_28,
      D => dut_n_9,
      Q => \FSM_onehot_state_reg_n_0_[2]\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_28,
      D => logic_n_30,
      Q => \asout_array[8]_1\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_28,
      D => dut_n_8,
      Q => nexts_out,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
acks_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => acks_out,
      G => logic_n_29,
      GE => '1',
      Q => \^ar\(0)
    );
\acks_out_reg_i_1__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => nexts_out,
      I1 => \FSM_onehot_state_reg_n_0_[0]\,
      I2 => \ce__0\,
      O => acks_out
    );
\asout_array_reg[0][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \^count_reg_reg[2]\(0),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(0)
    );
\asout_array_reg[0][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \^count_reg_reg[2]\(1),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(1)
    );
\asout_array_reg[0][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \^count_reg_reg[2]\(2),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(2)
    );
\asout_array_reg[0][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(3),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(3)
    );
\asout_array_reg[0][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(4),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(4)
    );
\asout_array_reg[1][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(0),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(5)
    );
\asout_array_reg[1][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(1),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(6)
    );
\asout_array_reg[1][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(2),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(7)
    );
\asout_array_reg[1][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(3),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(8)
    );
\asout_array_reg[1][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(4),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(9)
    );
\asout_array_reg[2][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(5),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(10)
    );
\asout_array_reg[2][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(6),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(11)
    );
\asout_array_reg[2][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(7),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(12)
    );
\asout_array_reg[2][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(8),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(13)
    );
\asout_array_reg[2][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(9),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(14)
    );
\asout_array_reg[3][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(10),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(15)
    );
\asout_array_reg[3][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(11),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(16)
    );
\asout_array_reg[3][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(12),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(17)
    );
\asout_array_reg[3][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(13),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(18)
    );
\asout_array_reg[3][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(14),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(19)
    );
\asout_array_reg[4][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(15),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(20)
    );
\asout_array_reg[4][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(16),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(21)
    );
\asout_array_reg[4][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(17),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(22)
    );
\asout_array_reg[4][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(18),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(23)
    );
\asout_array_reg[4][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(19),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(24)
    );
\asout_array_reg[5][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(20),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(25)
    );
\asout_array_reg[5][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(21),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(26)
    );
\asout_array_reg[5][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(22),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(27)
    );
\asout_array_reg[5][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(23),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(28)
    );
\asout_array_reg[5][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(24),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(29)
    );
\asout_array_reg[6][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(25),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(30)
    );
\asout_array_reg[6][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(26),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(31)
    );
\asout_array_reg[6][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(27),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(32)
    );
\asout_array_reg[6][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(28),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(33)
    );
\asout_array_reg[6][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(29),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(34)
    );
\asout_array_reg[7][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(30),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(35)
    );
\asout_array_reg[7][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(31),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(36)
    );
\asout_array_reg[7][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(32),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(37)
    );
\asout_array_reg[7][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(33),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(38)
    );
\asout_array_reg[7][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(34),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(39)
    );
\asout_array_reg[8][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(35),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(40)
    );
\asout_array_reg[8][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(36),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(41)
    );
\asout_array_reg[8][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(37),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => a_in_9(42)
    );
\asout_array_reg[8][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(38),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => \^q\(0)
    );
\asout_array_reg[8][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_8(39),
      G => \asout_array[8]_1\,
      GE => '1',
      Q => \^q\(1)
    );
ce_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \ce_reg_i_1__2_n_0\,
      GE => '1',
      Q => ce
    );
\ce_reg_i_1__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      I2 => \FSM_onehot_state_reg_n_0_[0]\,
      I3 => nexts_out,
      O => \ce_reg_i_1__2_n_0\
    );
dut: entity work.design_1_top_nqueens_0_0_up_counter_0
     port map (
      D(2) => dut_n_8,
      D(1) => dut_n_9,
      D(0) => dut_n_10,
      E(0) => ce,
      \FSM_onehot_state_reg[4]\(3) => \asout_array[8]_1\,
      \FSM_onehot_state_reg[4]\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \FSM_onehot_state_reg[4]\(1) => \ce__0\,
      \FSM_onehot_state_reg[4]\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      Q(4 downto 3) => u_i(4 downto 3),
      Q(2 downto 0) => \^count_reg_reg[2]\(2 downto 0),
      clk => clk,
      \count_reg[0]\ => logic_n_22,
      \count_reg[0]_0\ => \count_reg[0]_1\,
      \count_reg[0]_1\ => \count_reg[0]_2\,
      \count_reg[0]_2\ => \count_reg[0]_0\,
      \count_reg_reg[0]_0\ => \^count_reg_reg[0]\,
      \count_reg_reg[0]_1\(0) => \count_reg_reg[0]_0\(0),
      \count_reg_reg[1]_0\ => dut_n_6,
      \count_reg_reg[3]_0\ => dut_n_0,
      \done_aux_i_2__0\ => \done_aux_i_2__0\,
      valid => valid
    );
logic: entity work.\design_1_top_nqueens_0_0_ctrl_logic__parameterized0\
     port map (
      AR(0) => reset_control,
      D(2 downto 1) => u_i(4 downto 3),
      D(0) => \^count_reg_reg[2]\(2),
      E(0) => logic_n_28,
      \FSM_onehot_state_reg[1]\ => logic_n_29,
      \FSM_onehot_state_reg[3]\ => \FSM_onehot_state_reg[3]_0\,
      \FSM_onehot_state_reg[3]_0\ => \FSM_onehot_state_reg[3]_1\,
      \FSM_onehot_state_reg[3]_1\ => \FSM_onehot_state_reg[3]_2\,
      \FSM_onehot_state_reg[3]_2\ => \FSM_onehot_state_reg[3]_3\,
      \FSM_onehot_state_reg[3]_3\ => \FSM_onehot_state_reg[3]_4\,
      \FSM_onehot_state_reg[3]_4\ => \FSM_onehot_state_reg[3]_5\,
      Q(3 downto 0) => \j_reg[3]\(3 downto 0),
      a_in_8(4 downto 3) => a_in_8(39 downto 38),
      a_in_8(2) => a_in_8(30),
      a_in_8(1) => a_in_8(14),
      a_in_8(0) => a_in_8(7),
      a_in_9(42 downto 0) => a_in_9(42 downto 0),
      clk => clk,
      count1_carry_0 => \^count_reg_reg[0]\,
      count1_carry_1 => count1_carry,
      count1_carry_i_13_0 => count1_carry_i_13,
      count1_carry_i_13_1 => count1_carry_i_13_0,
      count1_carry_i_13_2 => count1_carry_i_13_1,
      count1_carry_i_14_0 => count1_carry_i_14,
      count1_carry_i_17(1 downto 0) => \^q\(1 downto 0),
      \count1_carry_i_4__0_0\ => \count1_carry_i_4__0\,
      \count1_carry_i_4__0_1\ => \count1_carry_i_4__0_0\,
      \count1_carry_i_4__0_2\ => \count_reg[0]_0\,
      \count1_carry_i_4__0_3\ => \count_reg[0]_1\,
      \count[4]_i_11_0\(1 downto 0) => \count[4]_i_11\(1 downto 0),
      \count[4]_i_11__3_0\ => \count[4]_i_11__3\,
      \count[4]_i_11__3_1\ => \count[4]_i_11__3_0\,
      \count[4]_i_17_0\ => \count[4]_i_17\,
      \count[4]_i_17_1\ => \count[4]_i_17_0\,
      \count[4]_i_4\ => \count[4]_i_4\,
      \count[4]_i_5__5\ => \count[4]_i_5__5\,
      \count[4]_i_7__0_0\ => \count[4]_i_7__0\,
      \count_reg[0]_0\ => dut_n_0,
      \count_reg[0]_1\ => dut_n_6,
      \count_reg[0]_2\ => \count_reg[0]\,
      \count_reg_reg[0]\(4) => nexts_out,
      \count_reg_reg[0]\(3) => \asout_array[8]_1\,
      \count_reg_reg[0]\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \count_reg_reg[0]\(1) => \ce__0\,
      \count_reg_reg[0]\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      \count_reg_reg[2]\ => \count_reg_reg[2]_0\,
      \count_reg_reg[3]\ => \count_reg_reg[3]\,
      done_aux_reg_0 => done_aux_reg,
      \j_reg[0]_0\ => \j_reg[0]\,
      \j_reg[0]_1\ => \j_reg[0]_0\,
      \j_reg[0]_2\ => \j_reg[0]_1\,
      \j_reg[0]_3\ => \j_reg[0]_2\,
      \j_reg[0]_4\ => logic_n_22,
      \j_reg[1]_0\ => \j_reg[1]\,
      \j_reg[1]_1\ => \j_reg[1]_0\,
      \j_reg[1]_2\ => \j_reg[1]_1\,
      \j_reg[2]_0\ => \j_reg[2]\,
      \j_reg[2]_1\ => \j_reg[2]_0\,
      \j_reg[2]_2\ => \j_reg[2]_1\,
      \j_reg[2]_3\ => \j_reg[2]_2\,
      \j_reg[3]_0\ => \j_reg[3]_0\,
      \j_reg[3]_1\ => \j_reg[3]_1\,
      \j_reg[3]_2\ => \j_reg[3]_2\,
      next_out_9 => next_out_9,
      valid => valid,
      valid_aux_reg_0(0) => logic_n_30
    );
nexts_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => nexts_out,
      G => acks_out,
      GE => '1',
      Q => next_out_8
    );
reset_control_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \reset_control_reg_i_1__0_n_0\,
      GE => '1',
      Q => reset_control
    );
\reset_control_reg_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      O => \reset_control_reg_i_1__0_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_fsm__parameterized1\ is
  port (
    AR : out STD_LOGIC_VECTOR ( 0 to 0 );
    next_out_7 : out STD_LOGIC;
    \j_reg[2]\ : out STD_LOGIC;
    \j_reg[2]_0\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \j_reg[0]\ : out STD_LOGIC;
    \j_reg[3]\ : out STD_LOGIC;
    \count_reg_reg[0]\ : out STD_LOGIC;
    \j_reg[3]_0\ : out STD_LOGIC;
    \j_reg[3]_1\ : out STD_LOGIC;
    \j_reg[0]_0\ : out STD_LOGIC;
    \count_reg_reg[2]\ : out STD_LOGIC;
    \count_reg_reg[0]_0\ : out STD_LOGIC;
    \count_reg_reg[1]\ : out STD_LOGIC;
    \count_reg_reg[0]_1\ : out STD_LOGIC;
    \j_reg[0]_1\ : out STD_LOGIC;
    a_in_8 : out STD_LOGIC_VECTOR ( 39 downto 0 );
    \j_reg[1]\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_0\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_1\ : out STD_LOGIC;
    \j_reg[3]_2\ : out STD_LOGIC;
    \j_reg[0]_2\ : out STD_LOGIC;
    \j_reg[1]_0\ : out STD_LOGIC;
    \j_reg[1]_1\ : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \count[4]_i_5__0\ : in STD_LOGIC;
    \count[4]_i_5__0_0\ : in STD_LOGIC;
    \count[4]_i_5__0_1\ : in STD_LOGIC;
    \count1_carry_i_3__6\ : in STD_LOGIC;
    \count_reg[0]\ : in STD_LOGIC;
    done_aux_reg : in STD_LOGIC_VECTOR ( 2 downto 0 );
    done_aux_reg_0 : in STD_LOGIC;
    done_aux_reg_1 : in STD_LOGIC;
    \count[4]_i_7__0\ : in STD_LOGIC;
    \count[4]_i_7__0_0\ : in STD_LOGIC;
    \count[4]_i_17__0\ : in STD_LOGIC;
    \count[4]_i_17__0_0\ : in STD_LOGIC;
    \count[4]_i_14__0\ : in STD_LOGIC;
    \count[4]_i_19__0\ : in STD_LOGIC;
    \count[4]_i_6__3\ : in STD_LOGIC;
    a_in_7 : in STD_LOGIC_VECTOR ( 34 downto 0 );
    \count1_carry_i_12__0\ : in STD_LOGIC;
    \count1_carry_i_8__1\ : in STD_LOGIC;
    \count[4]_i_4__5\ : in STD_LOGIC;
    \count1_carry_i_16__1\ : in STD_LOGIC;
    \count1_carry_i_16__1_0\ : in STD_LOGIC;
    \count1_carry_i_16__1_1\ : in STD_LOGIC;
    next_out_8 : in STD_LOGIC;
    nRst : in STD_LOGIC;
    \FSM_onehot_state_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count_reg_reg[0]_2\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_fsm__parameterized1\ : entity is "fsm";
end \design_1_top_nqueens_0_0_fsm__parameterized1\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_fsm__parameterized1\ is
  signal \^ar\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \FSM_onehot_state_reg_n_0_[0]\ : STD_LOGIC;
  signal \FSM_onehot_state_reg_n_0_[2]\ : STD_LOGIC;
  signal \^a_in_8\ : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal acks_out : STD_LOGIC;
  signal \asout_array[7]_2\ : STD_LOGIC;
  signal ce : STD_LOGIC;
  signal \ce__0\ : STD_LOGIC;
  signal \ce_reg_i_1__4_n_0\ : STD_LOGIC;
  signal count1 : STD_LOGIC;
  signal dut_n_0 : STD_LOGIC;
  signal dut_n_10 : STD_LOGIC;
  signal dut_n_11 : STD_LOGIC;
  signal dut_n_12 : STD_LOGIC;
  signal dut_n_13 : STD_LOGIC;
  signal dut_n_14 : STD_LOGIC;
  signal dut_n_15 : STD_LOGIC;
  signal dut_n_16 : STD_LOGIC;
  signal dut_n_17 : STD_LOGIC;
  signal dut_n_18 : STD_LOGIC;
  signal dut_n_19 : STD_LOGIC;
  signal dut_n_20 : STD_LOGIC;
  signal dut_n_6 : STD_LOGIC;
  signal dut_n_7 : STD_LOGIC;
  signal dut_n_8 : STD_LOGIC;
  signal dut_n_9 : STD_LOGIC;
  signal j_reg : STD_LOGIC_VECTOR ( 3 to 3 );
  signal j_reg_3_sn_1 : STD_LOGIC;
  signal logic_n_10 : STD_LOGIC;
  signal logic_n_23 : STD_LOGIC;
  signal logic_n_24 : STD_LOGIC;
  signal logic_n_27 : STD_LOGIC;
  signal logic_n_28 : STD_LOGIC;
  signal logic_n_29 : STD_LOGIC;
  signal logic_n_9 : STD_LOGIC;
  signal nexts_out : STD_LOGIC;
  signal reset_control : STD_LOGIC;
  signal \reset_control_reg_i_1__1_n_0\ : STD_LOGIC;
  signal u_i : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal valid : STD_LOGIC;
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[0]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[1]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[2]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[3]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[4]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of acks_out_reg : label is "LD";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \acks_out_reg_i_1__4\ : label is "soft_lutpair108";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[6][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[6][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[6][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[6][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[6][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[7][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[7][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[7][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[7][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[7][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of ce_reg : label is "LD";
  attribute SOFT_HLUTNM of \ce_reg_i_1__4\ : label is "soft_lutpair108";
  attribute XILINX_LEGACY_PRIM of nexts_out_reg : label is "LD";
  attribute XILINX_LEGACY_PRIM of reset_control_reg : label is "LD";
begin
  AR(0) <= \^ar\(0);
  a_in_8(39 downto 0) <= \^a_in_8\(39 downto 0);
  \j_reg[3]\ <= j_reg_3_sn_1;
\FSM_onehot_state[4]_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ar\(0),
      I1 => nRst,
      O => SR(0)
    );
\FSM_onehot_state_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => logic_n_27,
      D => '0',
      Q => \FSM_onehot_state_reg_n_0_[0]\,
      S => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_27,
      D => dut_n_20,
      Q => \ce__0\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_27,
      D => dut_n_19,
      Q => \FSM_onehot_state_reg_n_0_[2]\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_27,
      D => logic_n_29,
      Q => \asout_array[7]_2\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_27,
      D => dut_n_18,
      Q => nexts_out,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
acks_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => acks_out,
      G => logic_n_28,
      GE => '1',
      Q => \^ar\(0)
    );
\acks_out_reg_i_1__4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => nexts_out,
      I1 => \FSM_onehot_state_reg_n_0_[0]\,
      I2 => \ce__0\,
      O => acks_out
    );
\asout_array_reg[0][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(0),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(0)
    );
\asout_array_reg[0][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(1),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(1)
    );
\asout_array_reg[0][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(2),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(2)
    );
\asout_array_reg[0][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(3),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(3)
    );
\asout_array_reg[0][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(4),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(4)
    );
\asout_array_reg[1][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(0),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(5)
    );
\asout_array_reg[1][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(1),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(6)
    );
\asout_array_reg[1][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(2),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(7)
    );
\asout_array_reg[1][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(3),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(8)
    );
\asout_array_reg[1][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(4),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(9)
    );
\asout_array_reg[2][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(5),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(10)
    );
\asout_array_reg[2][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(6),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(11)
    );
\asout_array_reg[2][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(7),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(12)
    );
\asout_array_reg[2][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(8),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(13)
    );
\asout_array_reg[2][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(9),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(14)
    );
\asout_array_reg[3][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(10),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(15)
    );
\asout_array_reg[3][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(11),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(16)
    );
\asout_array_reg[3][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(12),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(17)
    );
\asout_array_reg[3][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(13),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(18)
    );
\asout_array_reg[3][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(14),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(19)
    );
\asout_array_reg[4][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(15),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(20)
    );
\asout_array_reg[4][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(16),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(21)
    );
\asout_array_reg[4][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(17),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(22)
    );
\asout_array_reg[4][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(18),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(23)
    );
\asout_array_reg[4][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(19),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(24)
    );
\asout_array_reg[5][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(20),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(25)
    );
\asout_array_reg[5][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(21),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(26)
    );
\asout_array_reg[5][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(22),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(27)
    );
\asout_array_reg[5][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(23),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(28)
    );
\asout_array_reg[5][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(24),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(29)
    );
\asout_array_reg[6][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(25),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(30)
    );
\asout_array_reg[6][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(26),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(31)
    );
\asout_array_reg[6][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(27),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(32)
    );
\asout_array_reg[6][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(28),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(33)
    );
\asout_array_reg[6][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(29),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(34)
    );
\asout_array_reg[7][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(30),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(35)
    );
\asout_array_reg[7][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(31),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(36)
    );
\asout_array_reg[7][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(32),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(37)
    );
\asout_array_reg[7][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(33),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(38)
    );
\asout_array_reg[7][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_7(34),
      G => \asout_array[7]_2\,
      GE => '1',
      Q => \^a_in_8\(39)
    );
ce_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \ce_reg_i_1__4_n_0\,
      GE => '1',
      Q => ce
    );
\ce_reg_i_1__4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      I2 => \FSM_onehot_state_reg_n_0_[0]\,
      I3 => nexts_out,
      O => \ce_reg_i_1__4_n_0\
    );
dut: entity work.design_1_top_nqueens_0_0_up_counter_1
     port map (
      CO(0) => count1,
      D(2) => dut_n_18,
      D(1) => dut_n_19,
      D(0) => dut_n_20,
      E(0) => ce,
      \FSM_onehot_state_reg[4]\(3) => \asout_array[7]_2\,
      \FSM_onehot_state_reg[4]\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \FSM_onehot_state_reg[4]\(1) => \ce__0\,
      \FSM_onehot_state_reg[4]\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      Q(4 downto 0) => u_i(4 downto 0),
      S(2) => dut_n_6,
      S(1) => dut_n_7,
      S(0) => dut_n_8,
      clk => clk,
      \count1_carry__1\(0) => j_reg(3),
      \count1_carry__1_0\ => logic_n_10,
      \count1_carry_i_3__6\ => \count1_carry_i_3__6\,
      \count1_carry_i_4__1\ => logic_n_24,
      \count1_carry_i_4__1_0\ => logic_n_9,
      \count_reg[0]\ => \count_reg[0]\,
      \count_reg[0]_0\ => logic_n_23,
      \count_reg_reg[0]_0\ => dut_n_0,
      \count_reg_reg[0]_1\ => dut_n_9,
      \count_reg_reg[0]_2\(0) => \count_reg_reg[0]_2\(0),
      \count_reg_reg[1]_0\ => dut_n_17,
      \count_reg_reg[3]_0\(3) => dut_n_10,
      \count_reg_reg[3]_0\(2) => dut_n_11,
      \count_reg_reg[3]_0\(1) => dut_n_12,
      \count_reg_reg[3]_0\(0) => dut_n_13,
      \count_reg_reg[3]_1\(1) => dut_n_14,
      \count_reg_reg[3]_1\(0) => dut_n_15,
      \count_reg_reg[3]_2\ => dut_n_16,
      valid => valid
    );
logic: entity work.\design_1_top_nqueens_0_0_ctrl_logic__parameterized1\
     port map (
      AR(0) => reset_control,
      CO(0) => count1,
      D(4 downto 0) => u_i(4 downto 0),
      E(0) => logic_n_27,
      \FSM_onehot_state_reg[1]\ => logic_n_28,
      \FSM_onehot_state_reg[3]\ => \FSM_onehot_state_reg[3]_0\,
      \FSM_onehot_state_reg[3]_0\ => \FSM_onehot_state_reg[3]_1\,
      Q(3 downto 0) => Q(3 downto 0),
      S(2) => dut_n_6,
      S(1) => dut_n_7,
      S(0) => dut_n_8,
      a_in_7(2) => a_in_7(34),
      a_in_7(1 downto 0) => a_in_7(31 downto 30),
      a_in_8(37 downto 29) => \^a_in_8\(39 downto 31),
      a_in_8(28 downto 14) => \^a_in_8\(29 downto 15),
      a_in_8(13 downto 0) => \^a_in_8\(13 downto 0),
      clk => clk,
      count1_carry_0 => dut_n_9,
      count1_carry_1 => dut_n_0,
      count1_carry_2 => dut_n_17,
      \count1_carry__0_0\(1) => dut_n_14,
      \count1_carry__0_0\(0) => dut_n_15,
      \count1_carry__1_0\(3) => dut_n_10,
      \count1_carry__1_0\(2) => dut_n_11,
      \count1_carry__1_0\(1) => dut_n_12,
      \count1_carry__1_0\(0) => dut_n_13,
      \count1_carry__1_i_1__6\ => \count_reg[0]\,
      \count1_carry_i_12__0\ => \count1_carry_i_12__0\,
      \count1_carry_i_16__1_0\ => \count1_carry_i_16__1\,
      \count1_carry_i_16__1_1\ => \count1_carry_i_16__1_0\,
      \count1_carry_i_16__1_2\ => \count1_carry_i_16__1_1\,
      \count1_carry_i_7__1_0\ => \count1_carry_i_3__6\,
      \count1_carry_i_8__1_0\ => \count1_carry_i_8__1\,
      \count[4]_i_14__0_0\ => \count[4]_i_14__0\,
      \count[4]_i_17__0_0\ => \count[4]_i_17__0\,
      \count[4]_i_17__0_1\ => \count[4]_i_17__0_0\,
      \count[4]_i_19__0_0\ => \count[4]_i_19__0\,
      \count[4]_i_4__5\ => \count[4]_i_4__5\,
      \count[4]_i_5__0_0\ => \count[4]_i_5__0\,
      \count[4]_i_5__0_1\ => \count[4]_i_5__0_0\,
      \count[4]_i_5__0_2\ => \count[4]_i_5__0_1\,
      \count[4]_i_6__3_0\ => \count[4]_i_6__3\,
      \count[4]_i_7__0\ => \count[4]_i_7__0\,
      \count[4]_i_7__0_0\ => \count[4]_i_7__0_0\,
      \count_reg[0]_0\ => dut_n_16,
      \count_reg_reg[0]\ => \count_reg_reg[0]\,
      \count_reg_reg[0]_0\ => \count_reg_reg[0]_0\,
      \count_reg_reg[0]_1\ => \count_reg_reg[0]_1\,
      \count_reg_reg[0]_2\(4) => nexts_out,
      \count_reg_reg[0]_2\(3) => \asout_array[7]_2\,
      \count_reg_reg[0]_2\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \count_reg_reg[0]_2\(1) => \ce__0\,
      \count_reg_reg[0]_2\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      \count_reg_reg[1]\ => \count_reg_reg[1]\,
      \count_reg_reg[2]\ => \count_reg_reg[2]\,
      \count_reg_reg[3]\ => logic_n_10,
      \count_reg_reg[4]\ => logic_n_23,
      done_aux_reg_0(2 downto 0) => done_aux_reg(2 downto 0),
      done_aux_reg_1 => done_aux_reg_0,
      done_aux_reg_2 => done_aux_reg_1,
      \j_reg[0]_0\ => \j_reg[0]\,
      \j_reg[0]_1\ => logic_n_9,
      \j_reg[0]_2\ => \j_reg[0]_0\,
      \j_reg[0]_3\ => \j_reg[0]_1\,
      \j_reg[0]_4\ => logic_n_24,
      \j_reg[0]_5\ => \j_reg[0]_2\,
      \j_reg[1]_0\ => \j_reg[1]\,
      \j_reg[1]_1\ => \j_reg[1]_0\,
      \j_reg[1]_2\ => \j_reg[1]_1\,
      \j_reg[2]_0\ => \j_reg[2]\,
      \j_reg[3]_0\(3) => j_reg(3),
      \j_reg[3]_0\(2 downto 0) => \j_reg[2]_0\(2 downto 0),
      \j_reg[3]_1\ => j_reg_3_sn_1,
      \j_reg[3]_2\ => \j_reg[3]_0\,
      \j_reg[3]_3\ => \j_reg[3]_1\,
      \j_reg[3]_4\ => \j_reg[3]_2\,
      next_out_8 => next_out_8,
      valid => valid,
      valid_aux_reg_0(0) => logic_n_29
    );
nexts_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => nexts_out,
      G => acks_out,
      GE => '1',
      Q => next_out_7
    );
reset_control_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \reset_control_reg_i_1__1_n_0\,
      GE => '1',
      Q => reset_control
    );
\reset_control_reg_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      O => \reset_control_reg_i_1__1_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_fsm__parameterized2\ is
  port (
    AR : out STD_LOGIC_VECTOR ( 0 to 0 );
    next_out_6 : out STD_LOGIC;
    \j_reg[0]\ : out STD_LOGIC;
    a_in_7 : out STD_LOGIC_VECTOR ( 34 downto 0 );
    \j_reg[1]\ : out STD_LOGIC;
    \j_reg[0]_0\ : out STD_LOGIC;
    \j_reg[1]_0\ : out STD_LOGIC;
    \j_reg[3]\ : out STD_LOGIC;
    \j_reg[3]_0\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_0\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_1\ : out STD_LOGIC;
    \j_reg[2]\ : out STD_LOGIC;
    \j_reg[3]_1\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_2\ : out STD_LOGIC;
    \j_reg[3]_2\ : out STD_LOGIC;
    \j_reg[3]_3\ : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    \count[4]_i_3__0\ : in STD_LOGIC;
    \count[4]_i_3__0_0\ : in STD_LOGIC;
    \count1_carry_i_12__1\ : in STD_LOGIC;
    \count[4]_i_8__2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \count1_carry__1_i_3__6\ : in STD_LOGIC;
    \count[4]_i_6__4\ : in STD_LOGIC;
    \count[4]_i_6__4_0\ : in STD_LOGIC;
    count1_carry_i_25 : in STD_LOGIC;
    count1_carry_i_41 : in STD_LOGIC;
    count1_carry_i_19 : in STD_LOGIC;
    a_in_6 : in STD_LOGIC_VECTOR ( 29 downto 0 );
    \count[4]_i_3__0_1\ : in STD_LOGIC;
    \count[4]_i_3__0_2\ : in STD_LOGIC;
    \count[4]_i_7__4\ : in STD_LOGIC;
    \count[4]_i_7__4_0\ : in STD_LOGIC;
    \count[4]_i_8__2_0\ : in STD_LOGIC;
    \count1_carry_i_12__1_0\ : in STD_LOGIC;
    \count[4]_i_22__0\ : in STD_LOGIC;
    \count[4]_i_21__1\ : in STD_LOGIC;
    next_out_7 : in STD_LOGIC;
    nRst : in STD_LOGIC;
    \FSM_onehot_state_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count_reg_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_fsm__parameterized2\ : entity is "fsm";
end \design_1_top_nqueens_0_0_fsm__parameterized2\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_fsm__parameterized2\ is
  signal \^ar\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \FSM_onehot_state_reg_n_0_[0]\ : STD_LOGIC;
  signal \FSM_onehot_state_reg_n_0_[2]\ : STD_LOGIC;
  signal \^a_in_7\ : STD_LOGIC_VECTOR ( 34 downto 0 );
  signal acks_out : STD_LOGIC;
  signal \asout_array[6]_3\ : STD_LOGIC;
  signal ce : STD_LOGIC;
  signal \ce__0\ : STD_LOGIC;
  signal \ce_reg_i_1__5_n_0\ : STD_LOGIC;
  signal dut_n_0 : STD_LOGIC;
  signal dut_n_6 : STD_LOGIC;
  signal dut_n_7 : STD_LOGIC;
  signal dut_n_8 : STD_LOGIC;
  signal dut_n_9 : STD_LOGIC;
  signal logic_n_12 : STD_LOGIC;
  signal logic_n_13 : STD_LOGIC;
  signal logic_n_15 : STD_LOGIC;
  signal logic_n_16 : STD_LOGIC;
  signal logic_n_17 : STD_LOGIC;
  signal nexts_out : STD_LOGIC;
  signal reset_control : STD_LOGIC;
  signal \reset_control_reg_i_1__2_n_0\ : STD_LOGIC;
  signal u_i : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal valid : STD_LOGIC;
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[0]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[1]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[2]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[3]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[4]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of acks_out_reg : label is "LD";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \acks_out_reg_i_1__5\ : label is "soft_lutpair87";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[6][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[6][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[6][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[6][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[6][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of ce_reg : label is "LD";
  attribute SOFT_HLUTNM of \ce_reg_i_1__5\ : label is "soft_lutpair87";
  attribute XILINX_LEGACY_PRIM of nexts_out_reg : label is "LD";
  attribute XILINX_LEGACY_PRIM of reset_control_reg : label is "LD";
begin
  AR(0) <= \^ar\(0);
  a_in_7(34 downto 0) <= \^a_in_7\(34 downto 0);
\FSM_onehot_state[4]_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ar\(0),
      I1 => nRst,
      O => SR(0)
    );
\FSM_onehot_state_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => logic_n_15,
      D => '0',
      Q => \FSM_onehot_state_reg_n_0_[0]\,
      S => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_15,
      D => dut_n_9,
      Q => \ce__0\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_15,
      D => dut_n_8,
      Q => \FSM_onehot_state_reg_n_0_[2]\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_15,
      D => logic_n_17,
      Q => \asout_array[6]_3\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_15,
      D => dut_n_7,
      Q => nexts_out,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
acks_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => acks_out,
      G => logic_n_16,
      GE => '1',
      Q => \^ar\(0)
    );
\acks_out_reg_i_1__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => nexts_out,
      I1 => \FSM_onehot_state_reg_n_0_[0]\,
      I2 => \ce__0\,
      O => acks_out
    );
\asout_array_reg[0][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(0),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(0)
    );
\asout_array_reg[0][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(1),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(1)
    );
\asout_array_reg[0][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(2),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(2)
    );
\asout_array_reg[0][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(3),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(3)
    );
\asout_array_reg[0][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(4),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(4)
    );
\asout_array_reg[1][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(0),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(5)
    );
\asout_array_reg[1][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(1),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(6)
    );
\asout_array_reg[1][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(2),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(7)
    );
\asout_array_reg[1][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(3),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(8)
    );
\asout_array_reg[1][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(4),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(9)
    );
\asout_array_reg[2][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(5),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(10)
    );
\asout_array_reg[2][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(6),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(11)
    );
\asout_array_reg[2][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(7),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(12)
    );
\asout_array_reg[2][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(8),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(13)
    );
\asout_array_reg[2][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(9),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(14)
    );
\asout_array_reg[3][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(10),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(15)
    );
\asout_array_reg[3][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(11),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(16)
    );
\asout_array_reg[3][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(12),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(17)
    );
\asout_array_reg[3][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(13),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(18)
    );
\asout_array_reg[3][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(14),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(19)
    );
\asout_array_reg[4][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(15),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(20)
    );
\asout_array_reg[4][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(16),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(21)
    );
\asout_array_reg[4][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(17),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(22)
    );
\asout_array_reg[4][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(18),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(23)
    );
\asout_array_reg[4][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(19),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(24)
    );
\asout_array_reg[5][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(20),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(25)
    );
\asout_array_reg[5][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(21),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(26)
    );
\asout_array_reg[5][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(22),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(27)
    );
\asout_array_reg[5][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(23),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(28)
    );
\asout_array_reg[5][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(24),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(29)
    );
\asout_array_reg[6][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(25),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(30)
    );
\asout_array_reg[6][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(26),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(31)
    );
\asout_array_reg[6][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(27),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(32)
    );
\asout_array_reg[6][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(28),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(33)
    );
\asout_array_reg[6][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_6(29),
      G => \asout_array[6]_3\,
      GE => '1',
      Q => \^a_in_7\(34)
    );
ce_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \ce_reg_i_1__5_n_0\,
      GE => '1',
      Q => ce
    );
\ce_reg_i_1__5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      I2 => \FSM_onehot_state_reg_n_0_[0]\,
      I3 => nexts_out,
      O => \ce_reg_i_1__5_n_0\
    );
dut: entity work.design_1_top_nqueens_0_0_up_counter_2
     port map (
      D(2) => dut_n_7,
      D(1) => dut_n_8,
      D(0) => dut_n_9,
      E(0) => ce,
      \FSM_onehot_state_reg[4]\(3) => \asout_array[6]_3\,
      \FSM_onehot_state_reg[4]\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \FSM_onehot_state_reg[4]\(1) => \ce__0\,
      \FSM_onehot_state_reg[4]\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      Q(4 downto 0) => u_i(4 downto 0),
      clk => clk,
      \count1_carry_i_4__2\ => logic_n_12,
      \count_reg[0]\ => logic_n_13,
      \count_reg_reg[0]_0\ => dut_n_0,
      \count_reg_reg[0]_1\(0) => \count_reg_reg[0]\(0),
      \count_reg_reg[3]_0\ => dut_n_6,
      valid => valid
    );
logic: entity work.\design_1_top_nqueens_0_0_ctrl_logic__parameterized2\
     port map (
      AR(0) => reset_control,
      D(4 downto 0) => u_i(4 downto 0),
      E(0) => logic_n_15,
      \FSM_onehot_state_reg[1]\ => logic_n_16,
      \FSM_onehot_state_reg[3]\ => \FSM_onehot_state_reg[3]_0\,
      \FSM_onehot_state_reg[3]_0\ => \FSM_onehot_state_reg[3]_1\,
      \FSM_onehot_state_reg[3]_1\ => \FSM_onehot_state_reg[3]_2\,
      Q(4 downto 0) => \^a_in_7\(34 downto 30),
      a_in_6(4 downto 0) => a_in_6(29 downto 25),
      a_in_7(29 downto 0) => \^a_in_7\(29 downto 0),
      clk => clk,
      count1_carry_0 => dut_n_0,
      \count1_carry__1_i_3__6\ => \count1_carry__1_i_3__6\,
      \count1_carry_i_12__1_0\ => \count1_carry_i_12__1\,
      \count1_carry_i_12__1_1\ => \count1_carry_i_12__1_0\,
      count1_carry_i_19_0 => count1_carry_i_19,
      count1_carry_i_25 => count1_carry_i_25,
      count1_carry_i_41_0 => count1_carry_i_41,
      \count[4]_i_21__1_0\ => \count[4]_i_21__1\,
      \count[4]_i_22__0_0\ => \count[4]_i_22__0\,
      \count[4]_i_3__0_0\ => \count[4]_i_3__0\,
      \count[4]_i_3__0_1\ => \count[4]_i_3__0_0\,
      \count[4]_i_3__0_2\ => \count[4]_i_3__0_1\,
      \count[4]_i_3__0_3\ => \count[4]_i_3__0_2\,
      \count[4]_i_5__0\(2 downto 0) => Q(2 downto 0),
      \count[4]_i_6__4\ => \count[4]_i_6__4\,
      \count[4]_i_6__4_0\ => \count[4]_i_6__4_0\,
      \count[4]_i_7__4_0\ => \count[4]_i_7__4\,
      \count[4]_i_7__4_1\ => \count[4]_i_7__4_0\,
      \count[4]_i_8__2_0\ => \count[4]_i_8__2\,
      \count[4]_i_8__2_1\ => \count[4]_i_8__2_0\,
      \count_reg[0]_0\ => dut_n_6,
      \count_reg_reg[0]\(4) => nexts_out,
      \count_reg_reg[0]\(3) => \asout_array[6]_3\,
      \count_reg_reg[0]\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \count_reg_reg[0]\(1) => \ce__0\,
      \count_reg_reg[0]\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      \j_reg[0]_0\ => \j_reg[0]\,
      \j_reg[0]_1\ => \j_reg[0]_0\,
      \j_reg[0]_2\ => logic_n_12,
      \j_reg[0]_3\ => logic_n_13,
      \j_reg[1]_0\ => \j_reg[1]\,
      \j_reg[1]_1\ => \j_reg[1]_0\,
      \j_reg[2]_0\ => \j_reg[2]\,
      \j_reg[3]_0\ => \j_reg[3]\,
      \j_reg[3]_1\ => \j_reg[3]_0\,
      \j_reg[3]_2\ => \j_reg[3]_1\,
      \j_reg[3]_3\ => \j_reg[3]_2\,
      \j_reg[3]_4\ => \j_reg[3]_3\,
      next_out_7 => next_out_7,
      valid => valid,
      valid_aux_reg_0(0) => logic_n_17
    );
nexts_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => nexts_out,
      G => acks_out,
      GE => '1',
      Q => next_out_6
    );
reset_control_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \reset_control_reg_i_1__2_n_0\,
      GE => '1',
      Q => reset_control
    );
\reset_control_reg_i_1__2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      O => \reset_control_reg_i_1__2_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_fsm__parameterized3\ is
  port (
    AR : out STD_LOGIC_VECTOR ( 0 to 0 );
    next_out_5 : out STD_LOGIC;
    \j_reg[2]\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_0\ : out STD_LOGIC;
    a_in_6 : out STD_LOGIC_VECTOR ( 29 downto 0 );
    \FSM_onehot_state_reg[3]_1\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_2\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_3\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_4\ : out STD_LOGIC;
    \count_reg_reg[3]\ : out STD_LOGIC;
    \count_reg_reg[1]\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_5\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_6\ : out STD_LOGIC;
    \count_reg_reg[2]\ : out STD_LOGIC;
    \count_reg_reg[4]\ : out STD_LOGIC;
    \count_reg_reg[0]\ : out STD_LOGIC;
    \j_reg[1]\ : out STD_LOGIC;
    \j_reg[2]_0\ : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    \count1_carry_i_13__3\ : in STD_LOGIC;
    \count1_carry_i_13__3_0\ : in STD_LOGIC;
    \count[4]_i_8__2\ : in STD_LOGIC;
    \count[4]_i_8__2_0\ : in STD_LOGIC;
    a_in_5 : in STD_LOGIC_VECTOR ( 24 downto 0 );
    \count[4]_i_10__1\ : in STD_LOGIC;
    \count[4]_i_10__1_0\ : in STD_LOGIC;
    \count[4]_i_3__1\ : in STD_LOGIC;
    \count[4]_i_3__1_0\ : in STD_LOGIC;
    \count[4]_i_6__0\ : in STD_LOGIC;
    \count[4]_i_19__2\ : in STD_LOGIC;
    \count[4]_i_12__2\ : in STD_LOGIC;
    \count[4]_i_12__2_0\ : in STD_LOGIC;
    \count[4]_i_21__2\ : in STD_LOGIC;
    \count[4]_i_7__2\ : in STD_LOGIC;
    next_out_6 : in STD_LOGIC;
    nRst : in STD_LOGIC;
    \FSM_onehot_state_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count_reg_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_fsm__parameterized3\ : entity is "fsm";
end \design_1_top_nqueens_0_0_fsm__parameterized3\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_fsm__parameterized3\ is
  signal \^ar\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \FSM_onehot_state_reg_n_0_[0]\ : STD_LOGIC;
  signal \FSM_onehot_state_reg_n_0_[2]\ : STD_LOGIC;
  signal \^a_in_6\ : STD_LOGIC_VECTOR ( 29 downto 0 );
  signal acks_out : STD_LOGIC;
  signal \asout_array[5]_4\ : STD_LOGIC;
  signal ce : STD_LOGIC;
  signal \ce__0\ : STD_LOGIC;
  signal \ce_reg_i_1__7_n_0\ : STD_LOGIC;
  signal dut_n_0 : STD_LOGIC;
  signal dut_n_10 : STD_LOGIC;
  signal dut_n_6 : STD_LOGIC;
  signal dut_n_7 : STD_LOGIC;
  signal dut_n_8 : STD_LOGIC;
  signal dut_n_9 : STD_LOGIC;
  signal logic_n_1 : STD_LOGIC;
  signal logic_n_15 : STD_LOGIC;
  signal logic_n_16 : STD_LOGIC;
  signal logic_n_18 : STD_LOGIC;
  signal logic_n_19 : STD_LOGIC;
  signal logic_n_20 : STD_LOGIC;
  signal nexts_out : STD_LOGIC;
  signal reset_control : STD_LOGIC;
  signal \reset_control_reg_i_1__3_n_0\ : STD_LOGIC;
  signal u_i : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal valid : STD_LOGIC;
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[0]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[1]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[2]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[3]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[4]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of acks_out_reg : label is "LD";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \acks_out_reg_i_1__7\ : label is "soft_lutpair70";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[5][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of ce_reg : label is "LD";
  attribute SOFT_HLUTNM of \ce_reg_i_1__7\ : label is "soft_lutpair70";
  attribute XILINX_LEGACY_PRIM of nexts_out_reg : label is "LD";
  attribute XILINX_LEGACY_PRIM of reset_control_reg : label is "LD";
begin
  AR(0) <= \^ar\(0);
  a_in_6(29 downto 0) <= \^a_in_6\(29 downto 0);
\FSM_onehot_state[4]_i_1__2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ar\(0),
      I1 => nRst,
      O => SR(0)
    );
\FSM_onehot_state_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => logic_n_18,
      D => '0',
      Q => \FSM_onehot_state_reg_n_0_[0]\,
      S => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_18,
      D => dut_n_10,
      Q => \ce__0\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_18,
      D => dut_n_9,
      Q => \FSM_onehot_state_reg_n_0_[2]\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_18,
      D => logic_n_20,
      Q => \asout_array[5]_4\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_18,
      D => dut_n_8,
      Q => nexts_out,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
acks_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => acks_out,
      G => logic_n_19,
      GE => '1',
      Q => \^ar\(0)
    );
\acks_out_reg_i_1__7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => nexts_out,
      I1 => \FSM_onehot_state_reg_n_0_[0]\,
      I2 => \ce__0\,
      O => acks_out
    );
\asout_array_reg[0][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(0),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(0)
    );
\asout_array_reg[0][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(1),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(1)
    );
\asout_array_reg[0][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(2),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(2)
    );
\asout_array_reg[0][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(3),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(3)
    );
\asout_array_reg[0][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(4),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(4)
    );
\asout_array_reg[1][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(0),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(5)
    );
\asout_array_reg[1][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(1),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(6)
    );
\asout_array_reg[1][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(2),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(7)
    );
\asout_array_reg[1][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(3),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(8)
    );
\asout_array_reg[1][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(4),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(9)
    );
\asout_array_reg[2][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(5),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(10)
    );
\asout_array_reg[2][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(6),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(11)
    );
\asout_array_reg[2][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(7),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(12)
    );
\asout_array_reg[2][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(8),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(13)
    );
\asout_array_reg[2][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(9),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(14)
    );
\asout_array_reg[3][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(10),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(15)
    );
\asout_array_reg[3][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(11),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(16)
    );
\asout_array_reg[3][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(12),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(17)
    );
\asout_array_reg[3][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(13),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(18)
    );
\asout_array_reg[3][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(14),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(19)
    );
\asout_array_reg[4][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(15),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(20)
    );
\asout_array_reg[4][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(16),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(21)
    );
\asout_array_reg[4][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(17),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(22)
    );
\asout_array_reg[4][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(18),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(23)
    );
\asout_array_reg[4][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(19),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(24)
    );
\asout_array_reg[5][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(20),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(25)
    );
\asout_array_reg[5][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(21),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(26)
    );
\asout_array_reg[5][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(22),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(27)
    );
\asout_array_reg[5][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(23),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(28)
    );
\asout_array_reg[5][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_5(24),
      G => \asout_array[5]_4\,
      GE => '1',
      Q => \^a_in_6\(29)
    );
ce_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \ce_reg_i_1__7_n_0\,
      GE => '1',
      Q => ce
    );
\ce_reg_i_1__7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      I2 => \FSM_onehot_state_reg_n_0_[0]\,
      I3 => nexts_out,
      O => \ce_reg_i_1__7_n_0\
    );
dut: entity work.design_1_top_nqueens_0_0_up_counter_3
     port map (
      D(2) => dut_n_8,
      D(1) => dut_n_9,
      D(0) => dut_n_10,
      E(0) => ce,
      \FSM_onehot_state_reg[4]\(3) => \asout_array[5]_4\,
      \FSM_onehot_state_reg[4]\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \FSM_onehot_state_reg[4]\(1) => \ce__0\,
      \FSM_onehot_state_reg[4]\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      Q(4 downto 0) => u_i(4 downto 0),
      clk => clk,
      \count1_carry_i_4__3\ => logic_n_16,
      \count1_carry_i_4__3_0\ => logic_n_15,
      \count_reg[0]\ => logic_n_1,
      \count_reg_reg[0]_0\ => dut_n_7,
      \count_reg_reg[0]_1\(0) => \count_reg_reg[0]_0\(0),
      \count_reg_reg[1]_0\ => dut_n_6,
      \count_reg_reg[3]_0\ => dut_n_0,
      valid => valid
    );
logic: entity work.\design_1_top_nqueens_0_0_ctrl_logic__parameterized3\
     port map (
      AR(0) => reset_control,
      D(4 downto 0) => u_i(4 downto 0),
      E(0) => logic_n_18,
      \FSM_onehot_state_reg[1]\ => logic_n_19,
      \FSM_onehot_state_reg[3]\ => \FSM_onehot_state_reg[3]_0\,
      \FSM_onehot_state_reg[3]_0\ => \FSM_onehot_state_reg[3]_1\,
      \FSM_onehot_state_reg[3]_1\ => \FSM_onehot_state_reg[3]_2\,
      \FSM_onehot_state_reg[3]_2\ => \FSM_onehot_state_reg[3]_3\,
      \FSM_onehot_state_reg[3]_3\ => \FSM_onehot_state_reg[3]_4\,
      \FSM_onehot_state_reg[3]_4\ => \FSM_onehot_state_reg[3]_5\,
      \FSM_onehot_state_reg[3]_5\ => \FSM_onehot_state_reg[3]_6\,
      Q(4) => nexts_out,
      Q(3) => \asout_array[5]_4\,
      Q(2) => \FSM_onehot_state_reg_n_0_[2]\,
      Q(1) => \ce__0\,
      Q(0) => \FSM_onehot_state_reg_n_0_[0]\,
      a_in_5(4 downto 0) => a_in_5(24 downto 20),
      a_in_6(29 downto 0) => \^a_in_6\(29 downto 0),
      clk => clk,
      count1_carry_0 => dut_n_6,
      count1_carry_1 => dut_n_7,
      \count1_carry_i_13__3_0\ => \count1_carry_i_13__3\,
      \count1_carry_i_13__3_1\ => \count1_carry_i_13__3_0\,
      \count[4]_i_10__1_0\ => \count[4]_i_10__1\,
      \count[4]_i_10__1_1\ => \count[4]_i_10__1_0\,
      \count[4]_i_12__2_0\ => \count[4]_i_12__2\,
      \count[4]_i_12__2_1\ => \count[4]_i_12__2_0\,
      \count[4]_i_19__2_0\ => \count[4]_i_19__2\,
      \count[4]_i_21__2_0\ => \count[4]_i_21__2\,
      \count[4]_i_3__1_0\ => \count[4]_i_3__1\,
      \count[4]_i_3__1_1\ => \count[4]_i_3__1_0\,
      \count[4]_i_6__0_0\ => \count[4]_i_6__0\,
      \count[4]_i_7__2_0\ => \count[4]_i_7__2\,
      \count[4]_i_8__2\ => \count[4]_i_8__2\,
      \count[4]_i_8__2_0\ => \count[4]_i_8__2_0\,
      \count_reg[0]_0\ => dut_n_0,
      \count_reg_reg[0]\ => \count_reg_reg[0]\,
      \count_reg_reg[1]\ => \count_reg_reg[1]\,
      \count_reg_reg[2]\ => \count_reg_reg[2]\,
      \count_reg_reg[3]\ => \count_reg_reg[3]\,
      \count_reg_reg[4]\ => \count_reg_reg[4]\,
      \j_reg[0]_0\ => logic_n_1,
      \j_reg[0]_1\ => logic_n_15,
      \j_reg[0]_2\ => logic_n_16,
      \j_reg[1]_0\ => \j_reg[1]\,
      \j_reg[2]_0\ => \j_reg[2]\,
      \j_reg[2]_1\ => \j_reg[2]_0\,
      next_out_6 => next_out_6,
      valid => valid,
      valid_aux_reg_0(0) => logic_n_20
    );
nexts_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => nexts_out,
      G => acks_out,
      GE => '1',
      Q => next_out_5
    );
reset_control_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \reset_control_reg_i_1__3_n_0\,
      GE => '1',
      Q => reset_control
    );
\reset_control_reg_i_1__3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      O => \reset_control_reg_i_1__3_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_fsm__parameterized4\ is
  port (
    AR : out STD_LOGIC_VECTOR ( 0 to 0 );
    next_out_4 : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \FSM_onehot_state_reg[3]_0\ : out STD_LOGIC;
    a_in_5 : out STD_LOGIC_VECTOR ( 24 downto 0 );
    \FSM_onehot_state_reg[3]_1\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_2\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_3\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_4\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_5\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_6\ : out STD_LOGIC;
    \count_reg_reg[1]\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_7\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_8\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_9\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_10\ : out STD_LOGIC;
    \j_reg[0]\ : out STD_LOGIC;
    \j_reg[2]\ : out STD_LOGIC;
    \j_reg[1]\ : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    \count1_carry_i_19__0\ : in STD_LOGIC;
    \count1_carry_i_19__0_0\ : in STD_LOGIC;
    a_in_4 : in STD_LOGIC_VECTOR ( 19 downto 0 );
    \count1_carry__1_i_3__2\ : in STD_LOGIC;
    \count1_carry_i_13__6\ : in STD_LOGIC;
    \count[4]_i_19__2\ : in STD_LOGIC;
    \count[4]_i_19__2_0\ : in STD_LOGIC;
    \count[4]_i_15__2\ : in STD_LOGIC;
    \count1_carry_i_9__2\ : in STD_LOGIC;
    \count1_carry_i_5__7\ : in STD_LOGIC;
    \count1_carry_i_5__7_0\ : in STD_LOGIC;
    \count[4]_i_4__6\ : in STD_LOGIC;
    \count[4]_i_4__6_0\ : in STD_LOGIC;
    \count1_carry_i_19__0_1\ : in STD_LOGIC;
    \count1_carry_i_19__0_2\ : in STD_LOGIC;
    next_out_5 : in STD_LOGIC;
    nRst : in STD_LOGIC;
    \FSM_onehot_state_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count_reg_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_fsm__parameterized4\ : entity is "fsm";
end \design_1_top_nqueens_0_0_fsm__parameterized4\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_fsm__parameterized4\ is
  signal \^ar\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \FSM_onehot_state_reg_n_0_[0]\ : STD_LOGIC;
  signal \FSM_onehot_state_reg_n_0_[2]\ : STD_LOGIC;
  signal \^a_in_5\ : STD_LOGIC_VECTOR ( 24 downto 0 );
  signal \acks_out_reg_i_1__6_n_0\ : STD_LOGIC;
  signal \asout_array[4]_5\ : STD_LOGIC;
  signal ce : STD_LOGIC;
  signal \ce__0\ : STD_LOGIC;
  signal \ce_reg_i_1__6_n_0\ : STD_LOGIC;
  signal dut_n_0 : STD_LOGIC;
  signal dut_n_10 : STD_LOGIC;
  signal dut_n_11 : STD_LOGIC;
  signal dut_n_12 : STD_LOGIC;
  signal dut_n_13 : STD_LOGIC;
  signal dut_n_14 : STD_LOGIC;
  signal dut_n_15 : STD_LOGIC;
  signal dut_n_16 : STD_LOGIC;
  signal dut_n_17 : STD_LOGIC;
  signal dut_n_18 : STD_LOGIC;
  signal dut_n_19 : STD_LOGIC;
  signal dut_n_20 : STD_LOGIC;
  signal dut_n_21 : STD_LOGIC;
  signal dut_n_6 : STD_LOGIC;
  signal dut_n_7 : STD_LOGIC;
  signal dut_n_8 : STD_LOGIC;
  signal dut_n_9 : STD_LOGIC;
  signal logic_n_20 : STD_LOGIC;
  signal logic_n_22 : STD_LOGIC;
  signal logic_n_23 : STD_LOGIC;
  signal logic_n_24 : STD_LOGIC;
  signal logic_n_25 : STD_LOGIC;
  signal logic_n_4 : STD_LOGIC;
  signal logic_n_5 : STD_LOGIC;
  signal logic_n_6 : STD_LOGIC;
  signal logic_n_7 : STD_LOGIC;
  signal nexts_out : STD_LOGIC;
  signal reset_control : STD_LOGIC;
  signal \reset_control_reg_i_1__4_n_0\ : STD_LOGIC;
  signal u_i : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal valid : STD_LOGIC;
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[0]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[1]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[2]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[3]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[4]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of acks_out_reg : label is "LD";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \acks_out_reg_i_1__6\ : label is "soft_lutpair53";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[4][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of ce_reg : label is "LD";
  attribute SOFT_HLUTNM of \ce_reg_i_1__6\ : label is "soft_lutpair53";
  attribute XILINX_LEGACY_PRIM of nexts_out_reg : label is "LD";
  attribute XILINX_LEGACY_PRIM of reset_control_reg : label is "LD";
begin
  AR(0) <= \^ar\(0);
  a_in_5(24 downto 0) <= \^a_in_5\(24 downto 0);
\FSM_onehot_state[4]_i_1__3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ar\(0),
      I1 => nRst,
      O => SR(0)
    );
\FSM_onehot_state_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => logic_n_23,
      D => '0',
      Q => \FSM_onehot_state_reg_n_0_[0]\,
      S => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_23,
      D => dut_n_21,
      Q => \ce__0\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_23,
      D => dut_n_20,
      Q => \FSM_onehot_state_reg_n_0_[2]\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_23,
      D => logic_n_25,
      Q => \asout_array[4]_5\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_23,
      D => dut_n_19,
      Q => nexts_out,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
acks_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \acks_out_reg_i_1__6_n_0\,
      G => logic_n_24,
      GE => '1',
      Q => \^ar\(0)
    );
\acks_out_reg_i_1__6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => nexts_out,
      I1 => \FSM_onehot_state_reg_n_0_[0]\,
      I2 => \ce__0\,
      O => \acks_out_reg_i_1__6_n_0\
    );
\asout_array_reg[0][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(0),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(0)
    );
\asout_array_reg[0][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(1),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(1)
    );
\asout_array_reg[0][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(2),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(2)
    );
\asout_array_reg[0][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(3),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(3)
    );
\asout_array_reg[0][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(4),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(4)
    );
\asout_array_reg[1][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(0),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(5)
    );
\asout_array_reg[1][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(1),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(6)
    );
\asout_array_reg[1][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(2),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(7)
    );
\asout_array_reg[1][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(3),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(8)
    );
\asout_array_reg[1][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(4),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(9)
    );
\asout_array_reg[2][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(5),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(10)
    );
\asout_array_reg[2][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(6),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(11)
    );
\asout_array_reg[2][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(7),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(12)
    );
\asout_array_reg[2][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(8),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(13)
    );
\asout_array_reg[2][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(9),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(14)
    );
\asout_array_reg[3][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(10),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(15)
    );
\asout_array_reg[3][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(11),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(16)
    );
\asout_array_reg[3][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(12),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(17)
    );
\asout_array_reg[3][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(13),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(18)
    );
\asout_array_reg[3][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(14),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(19)
    );
\asout_array_reg[4][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(15),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(20)
    );
\asout_array_reg[4][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(16),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(21)
    );
\asout_array_reg[4][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(17),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(22)
    );
\asout_array_reg[4][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(18),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(23)
    );
\asout_array_reg[4][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_4(19),
      G => \asout_array[4]_5\,
      GE => '1',
      Q => \^a_in_5\(24)
    );
ce_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \ce_reg_i_1__6_n_0\,
      GE => '1',
      Q => ce
    );
\ce_reg_i_1__6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      I2 => \FSM_onehot_state_reg_n_0_[0]\,
      I3 => nexts_out,
      O => \ce_reg_i_1__6_n_0\
    );
dut: entity work.design_1_top_nqueens_0_0_up_counter_4
     port map (
      D(2) => dut_n_19,
      D(1) => dut_n_20,
      D(0) => dut_n_21,
      E(0) => ce,
      \FSM_onehot_state_reg[4]\(3) => \asout_array[4]_5\,
      \FSM_onehot_state_reg[4]\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \FSM_onehot_state_reg[4]\(1) => \ce__0\,
      \FSM_onehot_state_reg[4]\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      Q(4 downto 0) => u_i(4 downto 0),
      S(2) => dut_n_6,
      S(1) => dut_n_7,
      S(0) => dut_n_8,
      clk => clk,
      \count1_carry__1\ => logic_n_4,
      \count1_carry__1_0\ => logic_n_22,
      \count1_carry__1_1\ => logic_n_20,
      \count1_carry_i_4__4\ => logic_n_7,
      \count1_carry_i_4__4_0\ => logic_n_5,
      \count1_carry_i_9__2\ => logic_n_6,
      \count1_carry_i_9__2_0\ => \count1_carry_i_9__2\,
      \count_reg_reg[0]_0\ => dut_n_18,
      \count_reg_reg[0]_1\(0) => \count_reg_reg[0]\(0),
      \count_reg_reg[1]_0\ => dut_n_0,
      \count_reg_reg[1]_1\ => dut_n_9,
      \count_reg_reg[1]_2\ => dut_n_10,
      \count_reg_reg[3]_0\(2) => dut_n_11,
      \count_reg_reg[3]_0\(1) => dut_n_12,
      \count_reg_reg[3]_0\(0) => dut_n_13,
      \count_reg_reg[3]_1\(3) => dut_n_14,
      \count_reg_reg[3]_1\(2) => dut_n_15,
      \count_reg_reg[3]_1\(1) => dut_n_16,
      \count_reg_reg[3]_1\(0) => dut_n_17,
      valid => valid
    );
logic: entity work.\design_1_top_nqueens_0_0_ctrl_logic__parameterized4\
     port map (
      AR(0) => reset_control,
      D(4 downto 0) => u_i(4 downto 0),
      E(0) => logic_n_23,
      \FSM_onehot_state_reg[1]\ => logic_n_24,
      \FSM_onehot_state_reg[3]\ => \FSM_onehot_state_reg[3]_0\,
      \FSM_onehot_state_reg[3]_0\ => \FSM_onehot_state_reg[3]_1\,
      \FSM_onehot_state_reg[3]_1\ => \FSM_onehot_state_reg[3]_2\,
      \FSM_onehot_state_reg[3]_2\ => \FSM_onehot_state_reg[3]_3\,
      \FSM_onehot_state_reg[3]_3\ => \FSM_onehot_state_reg[3]_4\,
      \FSM_onehot_state_reg[3]_4\ => \FSM_onehot_state_reg[3]_5\,
      \FSM_onehot_state_reg[3]_5\ => \FSM_onehot_state_reg[3]_6\,
      \FSM_onehot_state_reg[3]_6\ => \FSM_onehot_state_reg[3]_7\,
      \FSM_onehot_state_reg[3]_7\ => \FSM_onehot_state_reg[3]_8\,
      \FSM_onehot_state_reg[3]_8\ => \FSM_onehot_state_reg[3]_9\,
      \FSM_onehot_state_reg[3]_9\ => \FSM_onehot_state_reg[3]_10\,
      Q(2 downto 0) => Q(2 downto 0),
      S(2) => dut_n_6,
      S(1) => dut_n_7,
      S(0) => dut_n_8,
      a_in_4(10 downto 9) => a_in_4(19 downto 18),
      a_in_4(8 downto 4) => a_in_4(16 downto 12),
      a_in_4(3 downto 0) => a_in_4(7 downto 4),
      a_in_5(24 downto 0) => \^a_in_5\(24 downto 0),
      clk => clk,
      count1_carry_0 => dut_n_18,
      count1_carry_1 => dut_n_0,
      \count1_carry__0_0\(2) => dut_n_11,
      \count1_carry__0_0\(1) => dut_n_12,
      \count1_carry__0_0\(0) => dut_n_13,
      \count1_carry__1_0\(3) => dut_n_14,
      \count1_carry__1_0\(2) => dut_n_15,
      \count1_carry__1_0\(1) => dut_n_16,
      \count1_carry__1_0\(0) => dut_n_17,
      \count1_carry__1_i_3__2\ => \count1_carry__1_i_3__2\,
      \count1_carry__1_i_3__2_0\ => dut_n_9,
      \count1_carry_i_13__6\ => \count1_carry_i_13__6\,
      \count1_carry_i_19__0_0\ => \count1_carry_i_19__0\,
      \count1_carry_i_19__0_1\ => \count1_carry_i_19__0_0\,
      \count1_carry_i_19__0_2\ => \count1_carry_i_19__0_1\,
      \count1_carry_i_19__0_3\ => \count1_carry_i_19__0_2\,
      \count1_carry_i_4__4_0\ => \count1_carry_i_9__2\,
      \count1_carry_i_5__7_0\ => \count1_carry_i_5__7\,
      \count1_carry_i_5__7_1\ => \count1_carry_i_5__7_0\,
      \count[4]_i_15__2\ => \count[4]_i_15__2\,
      \count[4]_i_19__2\ => \count[4]_i_19__2\,
      \count[4]_i_19__2_0\ => \count[4]_i_19__2_0\,
      \count[4]_i_4__6_0\ => \count[4]_i_4__6\,
      \count[4]_i_4__6_1\ => \count[4]_i_4__6_0\,
      \count_reg_reg[0]\(4) => nexts_out,
      \count_reg_reg[0]\(3) => \asout_array[4]_5\,
      \count_reg_reg[0]\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \count_reg_reg[0]\(1) => \ce__0\,
      \count_reg_reg[0]\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      \count_reg_reg[1]\ => \count_reg_reg[1]\,
      \count_reg_reg[3]\ => logic_n_20,
      done_aux_reg_0 => dut_n_10,
      \j_reg[0]_0\ => \j_reg[0]\,
      \j_reg[1]_0\ => \j_reg[1]\,
      \j_reg[2]_0\ => logic_n_4,
      \j_reg[2]_1\ => logic_n_5,
      \j_reg[2]_2\ => logic_n_6,
      \j_reg[2]_3\ => logic_n_7,
      \j_reg[2]_4\ => logic_n_22,
      \j_reg[2]_5\ => \j_reg[2]\,
      next_out_5 => next_out_5,
      valid => valid,
      valid_aux_reg_0(0) => logic_n_25
    );
nexts_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => nexts_out,
      G => \acks_out_reg_i_1__6_n_0\,
      GE => '1',
      Q => next_out_4
    );
reset_control_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \reset_control_reg_i_1__4_n_0\,
      GE => '1',
      Q => reset_control
    );
\reset_control_reg_i_1__4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      O => \reset_control_reg_i_1__4_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_fsm__parameterized5\ is
  port (
    AR : out STD_LOGIC_VECTOR ( 0 to 0 );
    next_out_3 : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \count_reg_reg[2]\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \j_reg[2]\ : out STD_LOGIC;
    a_in_4 : out STD_LOGIC_VECTOR ( 19 downto 0 );
    \j_reg[1]\ : out STD_LOGIC;
    \j_reg[1]_0\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_0\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_1\ : out STD_LOGIC;
    \j_reg[0]\ : out STD_LOGIC;
    \j_reg[0]_0\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_2\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_3\ : out STD_LOGIC;
    \j_reg[0]_1\ : out STD_LOGIC;
    \FSM_onehot_state_reg[3]_4\ : out STD_LOGIC;
    \j_reg[2]_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \j_reg[2]_1\ : out STD_LOGIC;
    \j_reg[2]_2\ : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    clk : in STD_LOGIC;
    done_aux_reg : in STD_LOGIC;
    done_aux_reg_0 : in STD_LOGIC;
    \count1_carry_i_4__5\ : in STD_LOGIC;
    \count1_carry_i_4__5_0\ : in STD_LOGIC;
    \count_reg[0]\ : in STD_LOGIC;
    \count[4]_i_5__4\ : in STD_LOGIC;
    \count1_carry__1\ : in STD_LOGIC;
    \count[4]_i_5__3\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \count1_carry_i_15__1\ : in STD_LOGIC;
    \count1_carry_i_15__1_0\ : in STD_LOGIC;
    \count1_carry_i_28__0\ : in STD_LOGIC;
    \count_reg[0]_0\ : in STD_LOGIC;
    a_in_3 : in STD_LOGIC_VECTOR ( 14 downto 0 );
    next_out_4 : in STD_LOGIC;
    nRst : in STD_LOGIC;
    \FSM_onehot_state_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count_reg_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_fsm__parameterized5\ : entity is "fsm";
end \design_1_top_nqueens_0_0_fsm__parameterized5\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_fsm__parameterized5\ is
  signal \^ar\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \FSM_onehot_state_reg_n_0_[0]\ : STD_LOGIC;
  signal \FSM_onehot_state_reg_n_0_[2]\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^a_in_4\ : STD_LOGIC_VECTOR ( 19 downto 0 );
  signal \acks_out_reg_i_1__3_n_0\ : STD_LOGIC;
  signal \asout_array[3]_6\ : STD_LOGIC;
  signal ce : STD_LOGIC;
  signal \ce__0\ : STD_LOGIC;
  signal \ce_reg_i_1__3_n_0\ : STD_LOGIC;
  signal \^count_reg_reg[2]\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal dut_n_0 : STD_LOGIC;
  signal dut_n_10 : STD_LOGIC;
  signal dut_n_11 : STD_LOGIC;
  signal dut_n_12 : STD_LOGIC;
  signal dut_n_13 : STD_LOGIC;
  signal dut_n_14 : STD_LOGIC;
  signal dut_n_15 : STD_LOGIC;
  signal dut_n_16 : STD_LOGIC;
  signal dut_n_17 : STD_LOGIC;
  signal dut_n_18 : STD_LOGIC;
  signal dut_n_19 : STD_LOGIC;
  signal dut_n_20 : STD_LOGIC;
  signal dut_n_21 : STD_LOGIC;
  signal dut_n_22 : STD_LOGIC;
  signal dut_n_23 : STD_LOGIC;
  signal dut_n_6 : STD_LOGIC;
  signal dut_n_7 : STD_LOGIC;
  signal dut_n_8 : STD_LOGIC;
  signal dut_n_9 : STD_LOGIC;
  signal j_reg : STD_LOGIC_VECTOR ( 2 to 2 );
  signal j_reg_2_sn_1 : STD_LOGIC;
  signal logic_n_15 : STD_LOGIC;
  signal logic_n_16 : STD_LOGIC;
  signal logic_n_20 : STD_LOGIC;
  signal logic_n_21 : STD_LOGIC;
  signal logic_n_22 : STD_LOGIC;
  signal nexts_out : STD_LOGIC;
  signal reset_control : STD_LOGIC;
  signal \reset_control_reg_i_1__5_n_0\ : STD_LOGIC;
  signal u_i : STD_LOGIC_VECTOR ( 4 downto 3 );
  signal valid : STD_LOGIC;
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[0]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[1]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[2]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[3]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[4]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of acks_out_reg : label is "LD";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \acks_out_reg_i_1__3\ : label is "soft_lutpair36";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[3][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of ce_reg : label is "LD";
  attribute SOFT_HLUTNM of \ce_reg_i_1__3\ : label is "soft_lutpair36";
  attribute XILINX_LEGACY_PRIM of nexts_out_reg : label is "LD";
  attribute XILINX_LEGACY_PRIM of reset_control_reg : label is "LD";
begin
  AR(0) <= \^ar\(0);
  Q(1 downto 0) <= \^q\(1 downto 0);
  a_in_4(19 downto 0) <= \^a_in_4\(19 downto 0);
  \count_reg_reg[2]\(2 downto 0) <= \^count_reg_reg[2]\(2 downto 0);
  \j_reg[2]\ <= j_reg_2_sn_1;
\FSM_onehot_state[4]_i_1__4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ar\(0),
      I1 => nRst,
      O => SR(0)
    );
\FSM_onehot_state_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => logic_n_20,
      D => '0',
      Q => \FSM_onehot_state_reg_n_0_[0]\,
      S => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_20,
      D => dut_n_23,
      Q => \ce__0\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_20,
      D => dut_n_22,
      Q => \FSM_onehot_state_reg_n_0_[2]\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_20,
      D => logic_n_22,
      Q => \asout_array[3]_6\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_20,
      D => dut_n_21,
      Q => nexts_out,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
acks_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \acks_out_reg_i_1__3_n_0\,
      G => logic_n_21,
      GE => '1',
      Q => \^ar\(0)
    );
\acks_out_reg_i_1__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => nexts_out,
      I1 => \FSM_onehot_state_reg_n_0_[0]\,
      I2 => \ce__0\,
      O => \acks_out_reg_i_1__3_n_0\
    );
\asout_array_reg[0][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \^count_reg_reg[2]\(0),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(0)
    );
\asout_array_reg[0][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \^count_reg_reg[2]\(1),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(1)
    );
\asout_array_reg[0][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \^count_reg_reg[2]\(2),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(2)
    );
\asout_array_reg[0][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(3),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(3)
    );
\asout_array_reg[0][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(4),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(4)
    );
\asout_array_reg[1][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_3(0),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(5)
    );
\asout_array_reg[1][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_3(1),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(6)
    );
\asout_array_reg[1][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_3(2),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(7)
    );
\asout_array_reg[1][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_3(3),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(8)
    );
\asout_array_reg[1][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_3(4),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(9)
    );
\asout_array_reg[2][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_3(5),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(10)
    );
\asout_array_reg[2][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_3(6),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(11)
    );
\asout_array_reg[2][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_3(7),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(12)
    );
\asout_array_reg[2][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_3(8),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(13)
    );
\asout_array_reg[2][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_3(9),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(14)
    );
\asout_array_reg[3][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_3(10),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(15)
    );
\asout_array_reg[3][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_3(11),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(16)
    );
\asout_array_reg[3][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_3(12),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(17)
    );
\asout_array_reg[3][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_3(13),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(18)
    );
\asout_array_reg[3][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_3(14),
      G => \asout_array[3]_6\,
      GE => '1',
      Q => \^a_in_4\(19)
    );
ce_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \ce_reg_i_1__3_n_0\,
      GE => '1',
      Q => ce
    );
\ce_reg_i_1__3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      I2 => \FSM_onehot_state_reg_n_0_[0]\,
      I3 => nexts_out,
      O => \ce_reg_i_1__3_n_0\
    );
dut: entity work.design_1_top_nqueens_0_0_up_counter_5
     port map (
      D(2) => dut_n_21,
      D(1) => dut_n_22,
      D(0) => dut_n_23,
      E(0) => ce,
      \FSM_onehot_state_reg[4]\(3) => \asout_array[3]_6\,
      \FSM_onehot_state_reg[4]\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \FSM_onehot_state_reg[4]\(1) => \ce__0\,
      \FSM_onehot_state_reg[4]\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      Q(4 downto 3) => u_i(4 downto 3),
      Q(2 downto 0) => \^count_reg_reg[2]\(2 downto 0),
      S(2) => dut_n_8,
      S(1) => dut_n_9,
      S(0) => dut_n_10,
      clk => clk,
      \count1_carry__1\ => \count1_carry__1\,
      \count1_carry__1_0\(1) => j_reg(2),
      \count1_carry__1_0\(0) => \^q\(1),
      \count1_carry__1_1\ => logic_n_15,
      \count1_carry_i_4__5\ => \count1_carry_i_4__5\,
      \count1_carry_i_4__5_0\ => \count1_carry_i_4__5_0\,
      \count_reg[0]\ => \count_reg[0]\,
      \count_reg_reg[0]_0\ => dut_n_6,
      \count_reg_reg[0]_1\ => dut_n_20,
      \count_reg_reg[0]_2\(0) => \count_reg_reg[0]\(0),
      \count_reg_reg[1]_0\ => dut_n_0,
      \count_reg_reg[2]_0\ => dut_n_11,
      \count_reg_reg[2]_1\ => dut_n_19,
      \count_reg_reg[3]_0\ => dut_n_7,
      done_aux_reg => done_aux_reg,
      done_aux_reg_0 => done_aux_reg_0,
      done_aux_reg_1 => logic_n_16,
      \j_reg[2]\(3) => dut_n_12,
      \j_reg[2]\(2) => dut_n_13,
      \j_reg[2]\(1) => dut_n_14,
      \j_reg[2]\(0) => dut_n_15,
      \j_reg[2]_0\(2) => dut_n_16,
      \j_reg[2]_0\(1) => dut_n_17,
      \j_reg[2]_0\(0) => dut_n_18,
      valid => valid
    );
logic: entity work.\design_1_top_nqueens_0_0_ctrl_logic__parameterized5\
     port map (
      AR(0) => reset_control,
      D(2 downto 1) => u_i(4 downto 3),
      D(0) => \^count_reg_reg[2]\(2),
      E(0) => logic_n_20,
      \FSM_onehot_state_reg[1]\ => logic_n_21,
      \FSM_onehot_state_reg[3]\ => \FSM_onehot_state_reg[3]_0\,
      \FSM_onehot_state_reg[3]_0\ => \FSM_onehot_state_reg[3]_1\,
      \FSM_onehot_state_reg[3]_1\ => \FSM_onehot_state_reg[3]_2\,
      \FSM_onehot_state_reg[3]_2\ => \FSM_onehot_state_reg[3]_3\,
      \FSM_onehot_state_reg[3]_3\ => \FSM_onehot_state_reg[3]_4\,
      Q(2) => j_reg(2),
      Q(1 downto 0) => \^q\(1 downto 0),
      S(2) => dut_n_8,
      S(1) => dut_n_9,
      S(0) => dut_n_10,
      a_in_3(0) => a_in_3(14),
      a_in_4(14 downto 0) => \^a_in_4\(14 downto 0),
      clk => clk,
      count1_carry_0 => dut_n_6,
      count1_carry_1 => dut_n_20,
      count1_carry_2 => dut_n_0,
      \count1_carry__0_0\(2) => dut_n_16,
      \count1_carry__0_0\(1) => dut_n_17,
      \count1_carry__0_0\(0) => dut_n_18,
      \count1_carry__1_0\(3) => dut_n_12,
      \count1_carry__1_0\(2) => dut_n_13,
      \count1_carry__1_0\(1) => dut_n_14,
      \count1_carry__1_0\(0) => dut_n_15,
      \count1_carry__1_i_1__3\ => \count_reg[0]\,
      \count1_carry__1_i_1__3_0\ => \count1_carry__1\,
      \count1_carry_i_15__1\ => \count1_carry_i_15__1\,
      \count1_carry_i_15__1_0\ => \count1_carry_i_15__1_0\,
      \count1_carry_i_28__0\ => \count1_carry_i_28__0\,
      \count1_carry_i_4__5_0\ => done_aux_reg,
      \count1_carry_i_4__5_1\ => done_aux_reg_0,
      \count[4]_i_5__3\(2 downto 0) => \count[4]_i_5__3\(2 downto 0),
      \count[4]_i_5__3_0\(4 downto 0) => \^a_in_4\(19 downto 15),
      \count[4]_i_5__4_0\ => \count[4]_i_5__4\,
      \count_reg[0]_0\ => dut_n_7,
      \count_reg[0]_1\ => dut_n_11,
      \count_reg[0]_2\ => \count_reg[0]_0\,
      \count_reg_reg[0]\(4) => nexts_out,
      \count_reg_reg[0]\(3) => \asout_array[3]_6\,
      \count_reg_reg[0]\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \count_reg_reg[0]\(1) => \ce__0\,
      \count_reg_reg[0]\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      \count_reg_reg[3]\ => logic_n_15,
      \count_reg_reg[4]\ => logic_n_16,
      done_aux_reg_0 => dut_n_19,
      \j_reg[0]_0\ => \j_reg[0]\,
      \j_reg[0]_1\ => \j_reg[0]_0\,
      \j_reg[0]_2\ => \j_reg[0]_1\,
      \j_reg[1]_0\ => \j_reg[1]\,
      \j_reg[1]_1\ => \j_reg[1]_0\,
      \j_reg[1]_2\(0) => D(0),
      \j_reg[2]_0\ => j_reg_2_sn_1,
      \j_reg[2]_1\ => \j_reg[2]_0\,
      \j_reg[2]_2\ => \j_reg[2]_1\,
      \j_reg[2]_3\ => \j_reg[2]_2\,
      next_out_4 => next_out_4,
      valid => valid,
      valid_aux_reg_0(0) => logic_n_22
    );
nexts_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => nexts_out,
      G => \acks_out_reg_i_1__3_n_0\,
      GE => '1',
      Q => next_out_3
    );
reset_control_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \reset_control_reg_i_1__5_n_0\,
      GE => '1',
      Q => reset_control
    );
\reset_control_reg_i_1__5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      O => \reset_control_reg_i_1__5_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_fsm__parameterized6\ is
  port (
    AR : out STD_LOGIC_VECTOR ( 0 to 0 );
    next_out_2 : out STD_LOGIC;
    CO : out STD_LOGIC_VECTOR ( 0 to 0 );
    \count_reg_reg[0]\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \j_reg[0]\ : out STD_LOGIC;
    \j_reg[1]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \count_reg_reg[0]_0\ : out STD_LOGIC;
    \j_reg[0]_0\ : out STD_LOGIC;
    \j_reg[0]_1\ : out STD_LOGIC;
    \count_reg_reg[0]_1\ : out STD_LOGIC;
    \j_reg[0]_2\ : out STD_LOGIC;
    \j_reg[0]_3\ : out STD_LOGIC;
    a_in_3 : out STD_LOGIC_VECTOR ( 14 downto 0 );
    \j_reg[0]_4\ : out STD_LOGIC;
    \j_reg[1]_0\ : out STD_LOGIC;
    \count_reg_reg[1]\ : out STD_LOGIC;
    \count_reg_reg[2]\ : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    \count1_carry__0\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \count1_carry__1\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S : in STD_LOGIC_VECTOR ( 2 downto 0 );
    clk : in STD_LOGIC;
    \count1_carry_i_5__5\ : in STD_LOGIC;
    \count1_carry__1_i_3__3\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    a_in_2 : in STD_LOGIC_VECTOR ( 9 downto 0 );
    \count[4]_i_3__2\ : in STD_LOGIC;
    \count1_carry_i_10__7\ : in STD_LOGIC;
    \count[4]_i_5__4\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count1_carry_i_13__4\ : in STD_LOGIC;
    \count1_carry_i_13__4_0\ : in STD_LOGIC;
    count1_carry : in STD_LOGIC;
    count1_carry_0 : in STD_LOGIC;
    \count[4]_i_3__2_0\ : in STD_LOGIC;
    next_out_3 : in STD_LOGIC;
    done_aux_reg : in STD_LOGIC;
    \count1_carry_i_4__6\ : in STD_LOGIC;
    nRst : in STD_LOGIC;
    \FSM_onehot_state_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \count_reg_reg[0]_2\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_fsm__parameterized6\ : entity is "fsm";
end \design_1_top_nqueens_0_0_fsm__parameterized6\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_fsm__parameterized6\ is
  signal \^ar\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \FSM_onehot_state_reg_n_0_[0]\ : STD_LOGIC;
  signal \FSM_onehot_state_reg_n_0_[2]\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^a_in_3\ : STD_LOGIC_VECTOR ( 14 downto 0 );
  signal \acks_out_reg_i_1__1_n_0\ : STD_LOGIC;
  signal \asout_array[2]_7\ : STD_LOGIC;
  signal ce : STD_LOGIC;
  signal \ce__0\ : STD_LOGIC;
  signal \ce_reg_i_1__1_n_0\ : STD_LOGIC;
  signal \^count_reg_reg[0]\ : STD_LOGIC;
  signal dut_n_7 : STD_LOGIC;
  signal dut_n_8 : STD_LOGIC;
  signal dut_n_9 : STD_LOGIC;
  signal logic_n_14 : STD_LOGIC;
  signal logic_n_15 : STD_LOGIC;
  signal logic_n_16 : STD_LOGIC;
  signal nexts_out : STD_LOGIC;
  signal reset_control : STD_LOGIC;
  signal \reset_control_reg_i_1__6_n_0\ : STD_LOGIC;
  signal u_i : STD_LOGIC_VECTOR ( 4 to 4 );
  signal valid : STD_LOGIC;
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[0]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[1]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[2]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[3]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[4]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of acks_out_reg : label is "LD";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \acks_out_reg_i_1__1\ : label is "soft_lutpair20";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[2][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of ce_reg : label is "LD";
  attribute SOFT_HLUTNM of \ce_reg_i_1__1\ : label is "soft_lutpair20";
  attribute XILINX_LEGACY_PRIM of nexts_out_reg : label is "LD";
  attribute XILINX_LEGACY_PRIM of reset_control_reg : label is "LD";
begin
  AR(0) <= \^ar\(0);
  Q(3 downto 0) <= \^q\(3 downto 0);
  a_in_3(14 downto 0) <= \^a_in_3\(14 downto 0);
  \count_reg_reg[0]\ <= \^count_reg_reg[0]\;
\FSM_onehot_state[4]_i_1__5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ar\(0),
      I1 => nRst,
      O => SR(0)
    );
\FSM_onehot_state_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => logic_n_14,
      D => '0',
      Q => \FSM_onehot_state_reg_n_0_[0]\,
      S => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_14,
      D => dut_n_9,
      Q => \ce__0\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_14,
      D => dut_n_8,
      Q => \FSM_onehot_state_reg_n_0_[2]\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_14,
      D => logic_n_16,
      Q => \asout_array[2]_7\,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
\FSM_onehot_state_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_14,
      D => dut_n_7,
      Q => nexts_out,
      R => \FSM_onehot_state_reg[0]_0\(0)
    );
acks_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \acks_out_reg_i_1__1_n_0\,
      G => logic_n_15,
      GE => '1',
      Q => \^ar\(0)
    );
\acks_out_reg_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => nexts_out,
      I1 => \FSM_onehot_state_reg_n_0_[0]\,
      I2 => \ce__0\,
      O => \acks_out_reg_i_1__1_n_0\
    );
\asout_array_reg[0][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \^q\(0),
      G => \asout_array[2]_7\,
      GE => '1',
      Q => \^a_in_3\(0)
    );
\asout_array_reg[0][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \^q\(1),
      G => \asout_array[2]_7\,
      GE => '1',
      Q => \^a_in_3\(1)
    );
\asout_array_reg[0][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \^q\(2),
      G => \asout_array[2]_7\,
      GE => '1',
      Q => \^a_in_3\(2)
    );
\asout_array_reg[0][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \^q\(3),
      G => \asout_array[2]_7\,
      GE => '1',
      Q => \^a_in_3\(3)
    );
\asout_array_reg[0][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(4),
      G => \asout_array[2]_7\,
      GE => '1',
      Q => \^a_in_3\(4)
    );
\asout_array_reg[1][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_2(0),
      G => \asout_array[2]_7\,
      GE => '1',
      Q => \^a_in_3\(5)
    );
\asout_array_reg[1][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_2(1),
      G => \asout_array[2]_7\,
      GE => '1',
      Q => \^a_in_3\(6)
    );
\asout_array_reg[1][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_2(2),
      G => \asout_array[2]_7\,
      GE => '1',
      Q => \^a_in_3\(7)
    );
\asout_array_reg[1][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_2(3),
      G => \asout_array[2]_7\,
      GE => '1',
      Q => \^a_in_3\(8)
    );
\asout_array_reg[1][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_2(4),
      G => \asout_array[2]_7\,
      GE => '1',
      Q => \^a_in_3\(9)
    );
\asout_array_reg[2][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_2(5),
      G => \asout_array[2]_7\,
      GE => '1',
      Q => \^a_in_3\(10)
    );
\asout_array_reg[2][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_2(6),
      G => \asout_array[2]_7\,
      GE => '1',
      Q => \^a_in_3\(11)
    );
\asout_array_reg[2][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_2(7),
      G => \asout_array[2]_7\,
      GE => '1',
      Q => \^a_in_3\(12)
    );
\asout_array_reg[2][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_2(8),
      G => \asout_array[2]_7\,
      GE => '1',
      Q => \^a_in_3\(13)
    );
\asout_array_reg[2][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => a_in_2(9),
      G => \asout_array[2]_7\,
      GE => '1',
      Q => \^a_in_3\(14)
    );
ce_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \ce_reg_i_1__1_n_0\,
      GE => '1',
      Q => ce
    );
\ce_reg_i_1__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      I2 => \FSM_onehot_state_reg_n_0_[0]\,
      I3 => nexts_out,
      O => \ce_reg_i_1__1_n_0\
    );
dut: entity work.design_1_top_nqueens_0_0_up_counter_6
     port map (
      D(2) => dut_n_7,
      D(1) => dut_n_8,
      D(0) => dut_n_9,
      E(0) => ce,
      \FSM_onehot_state_reg[4]\(3) => \asout_array[2]_7\,
      \FSM_onehot_state_reg[4]\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \FSM_onehot_state_reg[4]\(1) => \ce__0\,
      \FSM_onehot_state_reg[4]\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      Q(4) => u_i(4),
      Q(3 downto 0) => \^q\(3 downto 0),
      clk => clk,
      \count1_carry_i_5__5\ => \count1_carry_i_5__5\,
      \count[4]_i_3__2\ => \count[4]_i_3__2_0\,
      \count_reg_reg[0]_0\ => \^count_reg_reg[0]\,
      \count_reg_reg[0]_1\(0) => \count_reg_reg[0]_2\(0),
      \count_reg_reg[2]_0\ => \count_reg_reg[2]\,
      valid => valid
    );
logic: entity work.\design_1_top_nqueens_0_0_ctrl_logic__parameterized6\
     port map (
      AR(0) => reset_control,
      CO(0) => CO(0),
      D(2) => u_i(4),
      D(1) => \^q\(2),
      D(0) => \^q\(0),
      E(0) => logic_n_14,
      \FSM_onehot_state_reg[1]\ => logic_n_15,
      Q(1 downto 0) => \j_reg[1]\(1 downto 0),
      S(2 downto 0) => S(2 downto 0),
      a_in_2(0) => a_in_2(9),
      a_in_3(9 downto 0) => \^a_in_3\(9 downto 0),
      clk => clk,
      count1_carry_0 => count1_carry,
      count1_carry_1 => \^count_reg_reg[0]\,
      count1_carry_2 => count1_carry_0,
      \count1_carry__0_0\(2 downto 0) => \count1_carry__0\(2 downto 0),
      \count1_carry__1_0\(3 downto 0) => \count1_carry__1\(3 downto 0),
      \count1_carry__1_i_3__3\(2 downto 0) => \count1_carry__1_i_3__3\(2 downto 0),
      \count1_carry_i_10__7\ => \count1_carry_i_10__7\,
      \count1_carry_i_12__4_0\(0) => D(0),
      \count1_carry_i_13__4_0\ => \count1_carry_i_13__4\,
      \count1_carry_i_13__4_1\ => \count1_carry_i_13__4_0\,
      \count1_carry_i_14__4_0\(4 downto 0) => \^a_in_3\(14 downto 10),
      \count1_carry_i_4__6_0\ => \count1_carry_i_5__5\,
      \count1_carry_i_4__6_1\ => \count1_carry_i_4__6\,
      \count1_carry_i_4__6_2\ => \count[4]_i_3__2_0\,
      \count[4]_i_3__2\ => \count[4]_i_3__2\,
      \count[4]_i_5__4\(1 downto 0) => \count[4]_i_5__4\(1 downto 0),
      \count_reg_reg[0]\ => \count_reg_reg[0]_0\,
      \count_reg_reg[0]_0\ => \count_reg_reg[0]_1\,
      \count_reg_reg[0]_1\(4) => nexts_out,
      \count_reg_reg[0]_1\(3) => \asout_array[2]_7\,
      \count_reg_reg[0]_1\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \count_reg_reg[0]_1\(1) => \ce__0\,
      \count_reg_reg[0]_1\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      \count_reg_reg[1]\ => \count_reg_reg[1]\,
      done_aux_reg_0 => done_aux_reg,
      \j_reg[0]_0\ => \j_reg[0]\,
      \j_reg[0]_1\ => \j_reg[0]_0\,
      \j_reg[0]_2\ => \j_reg[0]_1\,
      \j_reg[0]_3\ => \j_reg[0]_2\,
      \j_reg[0]_4\ => \j_reg[0]_3\,
      \j_reg[0]_5\ => \j_reg[0]_4\,
      \j_reg[1]_0\ => \j_reg[1]_0\,
      next_out_3 => next_out_3,
      valid => valid,
      valid_aux_reg_0(0) => logic_n_16
    );
nexts_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => nexts_out,
      G => \acks_out_reg_i_1__1_n_0\,
      GE => '1',
      Q => next_out_2
    );
reset_control_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \reset_control_reg_i_1__6_n_0\,
      GE => '1',
      Q => reset_control
    );
\reset_control_reg_i_1__6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      O => \reset_control_reg_i_1__6_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_top_nqueens_0_0_fsm__parameterized7\ is
  port (
    AR : out STD_LOGIC_VECTOR ( 0 to 0 );
    next_out_1 : out STD_LOGIC;
    \count_reg_reg[1]\ : out STD_LOGIC;
    \FSM_onehot_state_reg[4]_0\ : out STD_LOGIC;
    S : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \j_reg[1]\ : out STD_LOGIC;
    \count_reg_reg[2]\ : out STD_LOGIC;
    \count_reg_reg[2]_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \count_reg_reg[2]_1\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \count_reg_reg[0]\ : out STD_LOGIC;
    \j_reg[1]_0\ : out STD_LOGIC;
    a_in_2 : out STD_LOGIC_VECTOR ( 9 downto 0 );
    \j_reg[0]\ : out STD_LOGIC;
    \count_reg_reg[3]\ : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    done_s : out STD_LOGIC;
    \ack_in_1__0\ : out STD_LOGIC;
    clk : in STD_LOGIC;
    \count[4]_i_3__2\ : in STD_LOGIC;
    ack_in_1 : in STD_LOGIC;
    \count_reg_reg[0]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 4 downto 0 );
    done_aux_reg : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \count1_carry__1\ : in STD_LOGIC;
    done_aux_reg_0 : in STD_LOGIC;
    \count1_carry_i_19__1\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    CO : in STD_LOGIC_VECTOR ( 0 to 0 );
    done_aux_reg_1 : in STD_LOGIC;
    next_out_2 : in STD_LOGIC;
    nRst : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_top_nqueens_0_0_fsm__parameterized7\ : entity is "fsm";
end \design_1_top_nqueens_0_0_fsm__parameterized7\;

architecture STRUCTURE of \design_1_top_nqueens_0_0_fsm__parameterized7\ is
  signal \^ar\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \FSM_onehot_state[4]_i_1__7_n_0\ : STD_LOGIC;
  signal \FSM_onehot_state_reg_n_0_[0]\ : STD_LOGIC;
  signal \FSM_onehot_state_reg_n_0_[2]\ : STD_LOGIC;
  signal \^a_in_2\ : STD_LOGIC_VECTOR ( 9 downto 0 );
  signal acks_out_reg_i_1_n_0 : STD_LOGIC;
  signal \asout_array[1]_8\ : STD_LOGIC;
  signal ce : STD_LOGIC;
  signal \ce__0\ : STD_LOGIC;
  signal ce_reg_i_1_n_0 : STD_LOGIC;
  signal count1 : STD_LOGIC;
  signal dut_n_10 : STD_LOGIC;
  signal dut_n_11 : STD_LOGIC;
  signal dut_n_12 : STD_LOGIC;
  signal dut_n_13 : STD_LOGIC;
  signal dut_n_14 : STD_LOGIC;
  signal dut_n_15 : STD_LOGIC;
  signal dut_n_16 : STD_LOGIC;
  signal dut_n_17 : STD_LOGIC;
  signal dut_n_18 : STD_LOGIC;
  signal dut_n_19 : STD_LOGIC;
  signal dut_n_5 : STD_LOGIC;
  signal dut_n_6 : STD_LOGIC;
  signal dut_n_7 : STD_LOGIC;
  signal dut_n_8 : STD_LOGIC;
  signal dut_n_9 : STD_LOGIC;
  signal j_reg : STD_LOGIC_VECTOR ( 0 to 0 );
  signal j_reg_0_sn_1 : STD_LOGIC;
  signal logic_n_20 : STD_LOGIC;
  signal logic_n_21 : STD_LOGIC;
  signal logic_n_22 : STD_LOGIC;
  signal \^next_out_1\ : STD_LOGIC;
  signal nexts_out : STD_LOGIC;
  signal reset_control : STD_LOGIC;
  signal \reset_control_reg_i_1__7_n_0\ : STD_LOGIC;
  signal u_i : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal valid : STD_LOGIC;
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[0]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[1]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[2]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[3]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute FSM_ENCODED_STATES of \FSM_onehot_state_reg[4]\ : label is "st0_reset:00001,st2_validation:00100,st3_writefifo:01000,st4_done:10000,st1_new_candidate:00010";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of ack_in_1_reg_i_1 : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of ack_in_1_reg_i_2 : label is "soft_lutpair9";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of acks_out_reg : label is "LD";
  attribute SOFT_HLUTNM of acks_out_reg_i_1 : label is "soft_lutpair8";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[0][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][0]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][1]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][2]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][3]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of \asout_array_reg[1][4]\ : label is "LD";
  attribute XILINX_LEGACY_PRIM of ce_reg : label is "LD";
  attribute SOFT_HLUTNM of ce_reg_i_1 : label is "soft_lutpair8";
  attribute XILINX_LEGACY_PRIM of nexts_out_reg : label is "LD";
  attribute XILINX_LEGACY_PRIM of reset_control_reg : label is "LD";
begin
  AR(0) <= \^ar\(0);
  a_in_2(9 downto 0) <= \^a_in_2\(9 downto 0);
  \j_reg[0]\ <= j_reg_0_sn_1;
  next_out_1 <= \^next_out_1\;
\FSM_onehot_state[4]_i_1__6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ar\(0),
      I1 => nRst,
      O => SR(0)
    );
\FSM_onehot_state[4]_i_1__7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => ack_in_1,
      I1 => nRst,
      O => \FSM_onehot_state[4]_i_1__7_n_0\
    );
\FSM_onehot_state_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => logic_n_20,
      D => '0',
      Q => \FSM_onehot_state_reg_n_0_[0]\,
      S => \FSM_onehot_state[4]_i_1__7_n_0\
    );
\FSM_onehot_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_20,
      D => dut_n_19,
      Q => \ce__0\,
      R => \FSM_onehot_state[4]_i_1__7_n_0\
    );
\FSM_onehot_state_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_20,
      D => dut_n_18,
      Q => \FSM_onehot_state_reg_n_0_[2]\,
      R => \FSM_onehot_state[4]_i_1__7_n_0\
    );
\FSM_onehot_state_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_20,
      D => logic_n_22,
      Q => \asout_array[1]_8\,
      R => \FSM_onehot_state[4]_i_1__7_n_0\
    );
\FSM_onehot_state_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => logic_n_20,
      D => dut_n_17,
      Q => nexts_out,
      R => \FSM_onehot_state[4]_i_1__7_n_0\
    );
ack_in_1_reg_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^next_out_1\,
      I1 => ack_in_1,
      O => \ack_in_1__0\
    );
ack_in_1_reg_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0E"
    )
        port map (
      I0 => \^next_out_1\,
      I1 => ack_in_1,
      I2 => \count_reg_reg[0]_0\,
      O => \FSM_onehot_state_reg[4]_0\
    );
acks_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => acks_out_reg_i_1_n_0,
      G => logic_n_21,
      GE => '1',
      Q => \^ar\(0)
    );
acks_out_reg_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => nexts_out,
      I1 => \FSM_onehot_state_reg_n_0_[0]\,
      I2 => \ce__0\,
      O => acks_out_reg_i_1_n_0
    );
\asout_array_reg[0][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(0),
      G => \asout_array[1]_8\,
      GE => '1',
      Q => \^a_in_2\(0)
    );
\asout_array_reg[0][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(1),
      G => \asout_array[1]_8\,
      GE => '1',
      Q => \^a_in_2\(1)
    );
\asout_array_reg[0][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(2),
      G => \asout_array[1]_8\,
      GE => '1',
      Q => \^a_in_2\(2)
    );
\asout_array_reg[0][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(3),
      G => \asout_array[1]_8\,
      GE => '1',
      Q => \^a_in_2\(3)
    );
\asout_array_reg[0][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => u_i(4),
      G => \asout_array[1]_8\,
      GE => '1',
      Q => \^a_in_2\(4)
    );
\asout_array_reg[1][0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => Q(0),
      G => \asout_array[1]_8\,
      GE => '1',
      Q => \^a_in_2\(5)
    );
\asout_array_reg[1][1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => Q(1),
      G => \asout_array[1]_8\,
      GE => '1',
      Q => \^a_in_2\(6)
    );
\asout_array_reg[1][2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => Q(2),
      G => \asout_array[1]_8\,
      GE => '1',
      Q => \^a_in_2\(7)
    );
\asout_array_reg[1][3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => Q(3),
      G => \asout_array[1]_8\,
      GE => '1',
      Q => \^a_in_2\(8)
    );
\asout_array_reg[1][4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => Q(4),
      G => \asout_array[1]_8\,
      GE => '1',
      Q => \^a_in_2\(9)
    );
ce_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => ce_reg_i_1_n_0,
      GE => '1',
      Q => ce
    );
ce_reg_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      I2 => \FSM_onehot_state_reg_n_0_[0]\,
      I3 => nexts_out,
      O => ce_reg_i_1_n_0
    );
done_s_reg_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \count_reg_reg[0]_0\,
      I1 => \^next_out_1\,
      O => done_s
    );
dut: entity work.design_1_top_nqueens_0_0_up_counter_7
     port map (
      CO(0) => count1,
      D(2) => dut_n_17,
      D(1) => dut_n_18,
      D(0) => dut_n_19,
      E(0) => ce,
      \FSM_onehot_state_reg[4]\(3) => \asout_array[1]_8\,
      \FSM_onehot_state_reg[4]\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \FSM_onehot_state_reg[4]\(1) => \ce__0\,
      \FSM_onehot_state_reg[4]\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      Q(4 downto 0) => u_i(4 downto 0),
      S(2) => dut_n_5,
      S(1) => dut_n_6,
      S(0) => dut_n_7,
      ack_in_1 => ack_in_1,
      clk => clk,
      \count_reg_reg[3]_0\ => dut_n_16,
      \count_reg_reg[4]_0\(3) => dut_n_8,
      \count_reg_reg[4]_0\(2) => dut_n_9,
      \count_reg_reg[4]_0\(1) => dut_n_10,
      \count_reg_reg[4]_0\(0) => dut_n_11,
      \count_reg_reg[4]_1\(3) => dut_n_12,
      \count_reg_reg[4]_1\(2) => dut_n_13,
      \count_reg_reg[4]_1\(1) => dut_n_14,
      \count_reg_reg[4]_1\(0) => dut_n_15,
      done_aux_reg(4 downto 0) => Q(4 downto 0),
      j_reg(0) => j_reg(0),
      valid => valid
    );
logic: entity work.\design_1_top_nqueens_0_0_ctrl_logic__parameterized7\
     port map (
      AR(0) => reset_control,
      CO(0) => count1,
      D(0) => logic_n_22,
      E(0) => logic_n_20,
      \FSM_onehot_state_reg[1]\ => logic_n_21,
      Q(4 downto 0) => \^a_in_2\(9 downto 5),
      S(2) => dut_n_5,
      S(1) => dut_n_6,
      S(0) => dut_n_7,
      a_in_2(4 downto 0) => \^a_in_2\(4 downto 0),
      clk => clk,
      \count1_carry__0_0\(3) => dut_n_12,
      \count1_carry__0_0\(2) => dut_n_13,
      \count1_carry__0_0\(1) => dut_n_14,
      \count1_carry__0_0\(0) => dut_n_15,
      \count1_carry__1_0\(3) => dut_n_8,
      \count1_carry__1_0\(2) => dut_n_9,
      \count1_carry__1_0\(1) => dut_n_10,
      \count1_carry__1_0\(0) => dut_n_11,
      \count1_carry__1_1\ => \count1_carry__1\,
      \count1_carry_i_19__1_0\(1 downto 0) => \count1_carry_i_19__1\(1 downto 0),
      \count[4]_i_3__2_0\ => \count[4]_i_3__2\,
      \count_reg_reg[0]\ => \count_reg_reg[0]\,
      \count_reg_reg[0]_0\(4) => nexts_out,
      \count_reg_reg[0]_0\(3) => \asout_array[1]_8\,
      \count_reg_reg[0]_0\(2) => \FSM_onehot_state_reg_n_0_[2]\,
      \count_reg_reg[0]_0\(1) => \ce__0\,
      \count_reg_reg[0]_0\(0) => \FSM_onehot_state_reg_n_0_[0]\,
      \count_reg_reg[1]\ => \count_reg_reg[1]\,
      \count_reg_reg[2]\(2 downto 0) => S(2 downto 0),
      \count_reg_reg[2]_0\ => \count_reg_reg[2]\,
      \count_reg_reg[2]_1\(3 downto 0) => \count_reg_reg[2]_0\(3 downto 0),
      \count_reg_reg[2]_2\(2 downto 0) => \count_reg_reg[2]_1\(2 downto 0),
      \count_reg_reg[3]\ => \count_reg_reg[3]\,
      done_aux_reg_0(3 downto 0) => done_aux_reg(3 downto 0),
      done_aux_reg_1 => done_aux_reg_0,
      done_aux_reg_2 => dut_n_16,
      done_aux_reg_3(0) => CO(0),
      done_aux_reg_4 => done_aux_reg_1,
      j_reg(0) => j_reg(0),
      \j_reg[0]_0\ => j_reg_0_sn_1,
      \j_reg[1]\ => \j_reg[1]\,
      \j_reg[1]_0\ => \j_reg[1]_0\,
      next_out_2 => next_out_2,
      valid => valid
    );
nexts_out_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => nexts_out,
      G => acks_out_reg_i_1_n_0,
      GE => '1',
      Q => \^next_out_1\
    );
reset_control_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \ce__0\,
      G => \reset_control_reg_i_1__7_n_0\,
      GE => '1',
      Q => reset_control
    );
\reset_control_reg_i_1__7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \FSM_onehot_state_reg_n_0_[2]\,
      I1 => \ce__0\,
      O => \reset_control_reg_i_1__7_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_exit_v1_0_9_top is
  port (
    aclk : in STD_LOGIC;
    aclken : in STD_LOGIC;
    aresetn : in STD_LOGIC;
    s_axi_awid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awuser : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    s_axi_awvalid : in STD_LOGIC;
    s_axi_awready : out STD_LOGIC;
    s_axi_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_wlast : in STD_LOGIC;
    s_axi_wuser : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    s_axi_wvalid : in STD_LOGIC;
    s_axi_wready : out STD_LOGIC;
    s_axi_bid : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_buser : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    s_axi_bvalid : out STD_LOGIC;
    s_axi_bready : in STD_LOGIC;
    s_axi_arid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_araddr : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_aruser : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    s_axi_arvalid : in STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    s_axi_rid : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_rlast : out STD_LOGIC;
    s_axi_ruser : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    s_axi_rvalid : out STD_LOGIC;
    s_axi_rready : in STD_LOGIC;
    m_axi_awid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awaddr : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_awlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awuser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awvalid : out STD_LOGIC;
    m_axi_awready : in STD_LOGIC;
    m_axi_wid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_wlast : out STD_LOGIC;
    m_axi_wuser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_wvalid : out STD_LOGIC;
    m_axi_wready : in STD_LOGIC;
    m_axi_bid : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_buser : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_bvalid : in STD_LOGIC;
    m_axi_bready : out STD_LOGIC;
    m_axi_arid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_araddr : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_arlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aruser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_arvalid : out STD_LOGIC;
    m_axi_arready : in STD_LOGIC;
    m_axi_rid : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_rlast : in STD_LOGIC;
    m_axi_ruser : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_rvalid : in STD_LOGIC;
    m_axi_rready : out STD_LOGIC
  );
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 8;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is "1'b0";
  attribute C_FAMILY : string;
  attribute C_FAMILY of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is "zynq";
  attribute C_HAS_LOCK : integer;
  attribute C_HAS_LOCK of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 0;
  attribute C_IS_CASCADED : integer;
  attribute C_IS_CASCADED of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 0;
  attribute C_MAX_RUSER_BITS_PER_BYTE : integer;
  attribute C_MAX_RUSER_BITS_PER_BYTE of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 0;
  attribute C_MAX_WUSER_BITS_PER_BYTE : integer;
  attribute C_MAX_WUSER_BITS_PER_BYTE of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 0;
  attribute C_MEP_IDENTIFIER_WIDTH : integer;
  attribute C_MEP_IDENTIFIER_WIDTH of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 1;
  attribute C_M_ARUSER_WIDTH : integer;
  attribute C_M_ARUSER_WIDTH of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 0;
  attribute C_M_AWUSER_WIDTH : integer;
  attribute C_M_AWUSER_WIDTH of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 0;
  attribute C_M_BUSER_WIDTH : integer;
  attribute C_M_BUSER_WIDTH of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 0;
  attribute C_M_ID_WIDTH : integer;
  attribute C_M_ID_WIDTH of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 0;
  attribute C_M_LIMIT_READ_LENGTH : integer;
  attribute C_M_LIMIT_READ_LENGTH of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 0;
  attribute C_M_LIMIT_WRITE_LENGTH : integer;
  attribute C_M_LIMIT_WRITE_LENGTH of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 0;
  attribute C_M_PROTOCOL : integer;
  attribute C_M_PROTOCOL of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 2;
  attribute C_M_RUSER_BITS_PER_BYTE : integer;
  attribute C_M_RUSER_BITS_PER_BYTE of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 0;
  attribute C_M_RUSER_WIDTH : integer;
  attribute C_M_RUSER_WIDTH of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 0;
  attribute C_M_WUSER_BITS_PER_BYTE : integer;
  attribute C_M_WUSER_BITS_PER_BYTE of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 0;
  attribute C_M_WUSER_WIDTH : integer;
  attribute C_M_WUSER_WIDTH of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 0;
  attribute C_NUM_MSC : integer;
  attribute C_NUM_MSC of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 2;
  attribute C_NUM_READ_OUTSTANDING : integer;
  attribute C_NUM_READ_OUTSTANDING of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 8;
  attribute C_NUM_WRITE_OUTSTANDING : integer;
  attribute C_NUM_WRITE_OUTSTANDING of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 8;
  attribute C_RDATA_WIDTH : integer;
  attribute C_RDATA_WIDTH of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 32;
  attribute C_READ_ACCEPTANCE : integer;
  attribute C_READ_ACCEPTANCE of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 32;
  attribute C_SINGLE_ISSUING : integer;
  attribute C_SINGLE_ISSUING of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 1;
  attribute C_SSC_ROUTE_ARRAY : string;
  attribute C_SSC_ROUTE_ARRAY of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is "6'b101111";
  attribute C_SSC_ROUTE_WIDTH : integer;
  attribute C_SSC_ROUTE_WIDTH of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 3;
  attribute C_S_ID_WIDTH : integer;
  attribute C_S_ID_WIDTH of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 1;
  attribute C_WDATA_WIDTH : integer;
  attribute C_WDATA_WIDTH of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 32;
  attribute C_WRITE_ACCEPTANCE : integer;
  attribute C_WRITE_ACCEPTANCE of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 32;
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is "yes";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is "sc_exit_v1_0_9_top";
  attribute P_BYPASS : integer;
  attribute P_BYPASS of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 0;
  attribute P_FULLY_PIPELINED : integer;
  attribute P_FULLY_PIPELINED of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 2;
  attribute P_NUM_READ_OUTSTANDING : integer;
  attribute P_NUM_READ_OUTSTANDING of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 16;
  attribute P_NUM_WRITE_OUTSTANDING : integer;
  attribute P_NUM_WRITE_OUTSTANDING of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 16;
  attribute P_ZERO_LATENCY : integer;
  attribute P_ZERO_LATENCY of design_1_axi_smc_0_sc_exit_v1_0_9_top : entity is 1;
end design_1_axi_smc_0_sc_exit_v1_0_9_top;

architecture STRUCTURE of design_1_axi_smc_0_sc_exit_v1_0_9_top is
  signal \<const0>\ : STD_LOGIC;
  signal areset : STD_LOGIC;
  signal areset_i_1_n_0 : STD_LOGIC;
  signal \aresetn_d_reg_n_0_[0]\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of m_axi_wvalid_INST_0 : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of s_axi_wready_INST_0 : label is "soft_lutpair9";
begin
  m_axi_araddr(7) <= \<const0>\;
  m_axi_araddr(6) <= \<const0>\;
  m_axi_araddr(5) <= \<const0>\;
  m_axi_araddr(4) <= \<const0>\;
  m_axi_araddr(3) <= \<const0>\;
  m_axi_araddr(2) <= \<const0>\;
  m_axi_araddr(1) <= \<const0>\;
  m_axi_araddr(0) <= \<const0>\;
  m_axi_arburst(1) <= \<const0>\;
  m_axi_arburst(0) <= \<const0>\;
  m_axi_arcache(3) <= \<const0>\;
  m_axi_arcache(2) <= \<const0>\;
  m_axi_arcache(1) <= \<const0>\;
  m_axi_arcache(0) <= \<const0>\;
  m_axi_arid(0) <= \<const0>\;
  m_axi_arlen(7) <= \<const0>\;
  m_axi_arlen(6) <= \<const0>\;
  m_axi_arlen(5) <= \<const0>\;
  m_axi_arlen(4) <= \<const0>\;
  m_axi_arlen(3) <= \<const0>\;
  m_axi_arlen(2) <= \<const0>\;
  m_axi_arlen(1) <= \<const0>\;
  m_axi_arlen(0) <= \<const0>\;
  m_axi_arlock(0) <= \<const0>\;
  m_axi_arprot(2) <= \<const0>\;
  m_axi_arprot(1) <= \<const0>\;
  m_axi_arprot(0) <= \<const0>\;
  m_axi_arqos(3) <= \<const0>\;
  m_axi_arqos(2) <= \<const0>\;
  m_axi_arqos(1) <= \<const0>\;
  m_axi_arqos(0) <= \<const0>\;
  m_axi_arsize(2) <= \<const0>\;
  m_axi_arsize(1) <= \<const0>\;
  m_axi_arsize(0) <= \<const0>\;
  m_axi_aruser(0) <= \<const0>\;
  m_axi_awaddr(7) <= \<const0>\;
  m_axi_awaddr(6) <= \<const0>\;
  m_axi_awaddr(5) <= \<const0>\;
  m_axi_awaddr(4) <= \<const0>\;
  m_axi_awaddr(3) <= \<const0>\;
  m_axi_awaddr(2) <= \<const0>\;
  m_axi_awaddr(1) <= \<const0>\;
  m_axi_awaddr(0) <= \<const0>\;
  m_axi_awburst(1) <= \<const0>\;
  m_axi_awburst(0) <= \<const0>\;
  m_axi_awcache(3) <= \<const0>\;
  m_axi_awcache(2) <= \<const0>\;
  m_axi_awcache(1) <= \<const0>\;
  m_axi_awcache(0) <= \<const0>\;
  m_axi_awid(0) <= \<const0>\;
  m_axi_awlen(7) <= \<const0>\;
  m_axi_awlen(6) <= \<const0>\;
  m_axi_awlen(5) <= \<const0>\;
  m_axi_awlen(4) <= \<const0>\;
  m_axi_awlen(3) <= \<const0>\;
  m_axi_awlen(2) <= \<const0>\;
  m_axi_awlen(1) <= \<const0>\;
  m_axi_awlen(0) <= \<const0>\;
  m_axi_awlock(0) <= \<const0>\;
  m_axi_awprot(2) <= \<const0>\;
  m_axi_awprot(1) <= \<const0>\;
  m_axi_awprot(0) <= \<const0>\;
  m_axi_awqos(3) <= \<const0>\;
  m_axi_awqos(2) <= \<const0>\;
  m_axi_awqos(1) <= \<const0>\;
  m_axi_awqos(0) <= \<const0>\;
  m_axi_awsize(2) <= \<const0>\;
  m_axi_awsize(1) <= \<const0>\;
  m_axi_awsize(0) <= \<const0>\;
  m_axi_awuser(0) <= \<const0>\;
  m_axi_bready <= \<const0>\;
  m_axi_rready <= \<const0>\;
  m_axi_wdata(31) <= \<const0>\;
  m_axi_wdata(30) <= \<const0>\;
  m_axi_wdata(29) <= \<const0>\;
  m_axi_wdata(28) <= \<const0>\;
  m_axi_wdata(27) <= \<const0>\;
  m_axi_wdata(26) <= \<const0>\;
  m_axi_wdata(25) <= \<const0>\;
  m_axi_wdata(24) <= \<const0>\;
  m_axi_wdata(23) <= \<const0>\;
  m_axi_wdata(22) <= \<const0>\;
  m_axi_wdata(21) <= \<const0>\;
  m_axi_wdata(20) <= \<const0>\;
  m_axi_wdata(19) <= \<const0>\;
  m_axi_wdata(18) <= \<const0>\;
  m_axi_wdata(17) <= \<const0>\;
  m_axi_wdata(16) <= \<const0>\;
  m_axi_wdata(15) <= \<const0>\;
  m_axi_wdata(14) <= \<const0>\;
  m_axi_wdata(13) <= \<const0>\;
  m_axi_wdata(12) <= \<const0>\;
  m_axi_wdata(11) <= \<const0>\;
  m_axi_wdata(10) <= \<const0>\;
  m_axi_wdata(9) <= \<const0>\;
  m_axi_wdata(8) <= \<const0>\;
  m_axi_wdata(7) <= \<const0>\;
  m_axi_wdata(6) <= \<const0>\;
  m_axi_wdata(5) <= \<const0>\;
  m_axi_wdata(4) <= \<const0>\;
  m_axi_wdata(3) <= \<const0>\;
  m_axi_wdata(2) <= \<const0>\;
  m_axi_wdata(1) <= \<const0>\;
  m_axi_wdata(0) <= \<const0>\;
  m_axi_wid(0) <= \<const0>\;
  m_axi_wlast <= \<const0>\;
  m_axi_wstrb(3) <= \<const0>\;
  m_axi_wstrb(2) <= \<const0>\;
  m_axi_wstrb(1) <= \<const0>\;
  m_axi_wstrb(0) <= \<const0>\;
  m_axi_wuser(0) <= \<const0>\;
  s_axi_bid(0) <= \<const0>\;
  s_axi_bresp(1) <= \<const0>\;
  s_axi_bresp(0) <= \<const0>\;
  s_axi_buser(1023) <= \<const0>\;
  s_axi_buser(1022) <= \<const0>\;
  s_axi_buser(1021) <= \<const0>\;
  s_axi_buser(1020) <= \<const0>\;
  s_axi_buser(1019) <= \<const0>\;
  s_axi_buser(1018) <= \<const0>\;
  s_axi_buser(1017) <= \<const0>\;
  s_axi_buser(1016) <= \<const0>\;
  s_axi_buser(1015) <= \<const0>\;
  s_axi_buser(1014) <= \<const0>\;
  s_axi_buser(1013) <= \<const0>\;
  s_axi_buser(1012) <= \<const0>\;
  s_axi_buser(1011) <= \<const0>\;
  s_axi_buser(1010) <= \<const0>\;
  s_axi_buser(1009) <= \<const0>\;
  s_axi_buser(1008) <= \<const0>\;
  s_axi_buser(1007) <= \<const0>\;
  s_axi_buser(1006) <= \<const0>\;
  s_axi_buser(1005) <= \<const0>\;
  s_axi_buser(1004) <= \<const0>\;
  s_axi_buser(1003) <= \<const0>\;
  s_axi_buser(1002) <= \<const0>\;
  s_axi_buser(1001) <= \<const0>\;
  s_axi_buser(1000) <= \<const0>\;
  s_axi_buser(999) <= \<const0>\;
  s_axi_buser(998) <= \<const0>\;
  s_axi_buser(997) <= \<const0>\;
  s_axi_buser(996) <= \<const0>\;
  s_axi_buser(995) <= \<const0>\;
  s_axi_buser(994) <= \<const0>\;
  s_axi_buser(993) <= \<const0>\;
  s_axi_buser(992) <= \<const0>\;
  s_axi_buser(991) <= \<const0>\;
  s_axi_buser(990) <= \<const0>\;
  s_axi_buser(989) <= \<const0>\;
  s_axi_buser(988) <= \<const0>\;
  s_axi_buser(987) <= \<const0>\;
  s_axi_buser(986) <= \<const0>\;
  s_axi_buser(985) <= \<const0>\;
  s_axi_buser(984) <= \<const0>\;
  s_axi_buser(983) <= \<const0>\;
  s_axi_buser(982) <= \<const0>\;
  s_axi_buser(981) <= \<const0>\;
  s_axi_buser(980) <= \<const0>\;
  s_axi_buser(979) <= \<const0>\;
  s_axi_buser(978) <= \<const0>\;
  s_axi_buser(977) <= \<const0>\;
  s_axi_buser(976) <= \<const0>\;
  s_axi_buser(975) <= \<const0>\;
  s_axi_buser(974) <= \<const0>\;
  s_axi_buser(973) <= \<const0>\;
  s_axi_buser(972) <= \<const0>\;
  s_axi_buser(971) <= \<const0>\;
  s_axi_buser(970) <= \<const0>\;
  s_axi_buser(969) <= \<const0>\;
  s_axi_buser(968) <= \<const0>\;
  s_axi_buser(967) <= \<const0>\;
  s_axi_buser(966) <= \<const0>\;
  s_axi_buser(965) <= \<const0>\;
  s_axi_buser(964) <= \<const0>\;
  s_axi_buser(963) <= \<const0>\;
  s_axi_buser(962) <= \<const0>\;
  s_axi_buser(961) <= \<const0>\;
  s_axi_buser(960) <= \<const0>\;
  s_axi_buser(959) <= \<const0>\;
  s_axi_buser(958) <= \<const0>\;
  s_axi_buser(957) <= \<const0>\;
  s_axi_buser(956) <= \<const0>\;
  s_axi_buser(955) <= \<const0>\;
  s_axi_buser(954) <= \<const0>\;
  s_axi_buser(953) <= \<const0>\;
  s_axi_buser(952) <= \<const0>\;
  s_axi_buser(951) <= \<const0>\;
  s_axi_buser(950) <= \<const0>\;
  s_axi_buser(949) <= \<const0>\;
  s_axi_buser(948) <= \<const0>\;
  s_axi_buser(947) <= \<const0>\;
  s_axi_buser(946) <= \<const0>\;
  s_axi_buser(945) <= \<const0>\;
  s_axi_buser(944) <= \<const0>\;
  s_axi_buser(943) <= \<const0>\;
  s_axi_buser(942) <= \<const0>\;
  s_axi_buser(941) <= \<const0>\;
  s_axi_buser(940) <= \<const0>\;
  s_axi_buser(939) <= \<const0>\;
  s_axi_buser(938) <= \<const0>\;
  s_axi_buser(937) <= \<const0>\;
  s_axi_buser(936) <= \<const0>\;
  s_axi_buser(935) <= \<const0>\;
  s_axi_buser(934) <= \<const0>\;
  s_axi_buser(933) <= \<const0>\;
  s_axi_buser(932) <= \<const0>\;
  s_axi_buser(931) <= \<const0>\;
  s_axi_buser(930) <= \<const0>\;
  s_axi_buser(929) <= \<const0>\;
  s_axi_buser(928) <= \<const0>\;
  s_axi_buser(927) <= \<const0>\;
  s_axi_buser(926) <= \<const0>\;
  s_axi_buser(925) <= \<const0>\;
  s_axi_buser(924) <= \<const0>\;
  s_axi_buser(923) <= \<const0>\;
  s_axi_buser(922) <= \<const0>\;
  s_axi_buser(921) <= \<const0>\;
  s_axi_buser(920) <= \<const0>\;
  s_axi_buser(919) <= \<const0>\;
  s_axi_buser(918) <= \<const0>\;
  s_axi_buser(917) <= \<const0>\;
  s_axi_buser(916) <= \<const0>\;
  s_axi_buser(915) <= \<const0>\;
  s_axi_buser(914) <= \<const0>\;
  s_axi_buser(913) <= \<const0>\;
  s_axi_buser(912) <= \<const0>\;
  s_axi_buser(911) <= \<const0>\;
  s_axi_buser(910) <= \<const0>\;
  s_axi_buser(909) <= \<const0>\;
  s_axi_buser(908) <= \<const0>\;
  s_axi_buser(907) <= \<const0>\;
  s_axi_buser(906) <= \<const0>\;
  s_axi_buser(905) <= \<const0>\;
  s_axi_buser(904) <= \<const0>\;
  s_axi_buser(903) <= \<const0>\;
  s_axi_buser(902) <= \<const0>\;
  s_axi_buser(901) <= \<const0>\;
  s_axi_buser(900) <= \<const0>\;
  s_axi_buser(899) <= \<const0>\;
  s_axi_buser(898) <= \<const0>\;
  s_axi_buser(897) <= \<const0>\;
  s_axi_buser(896) <= \<const0>\;
  s_axi_buser(895) <= \<const0>\;
  s_axi_buser(894) <= \<const0>\;
  s_axi_buser(893) <= \<const0>\;
  s_axi_buser(892) <= \<const0>\;
  s_axi_buser(891) <= \<const0>\;
  s_axi_buser(890) <= \<const0>\;
  s_axi_buser(889) <= \<const0>\;
  s_axi_buser(888) <= \<const0>\;
  s_axi_buser(887) <= \<const0>\;
  s_axi_buser(886) <= \<const0>\;
  s_axi_buser(885) <= \<const0>\;
  s_axi_buser(884) <= \<const0>\;
  s_axi_buser(883) <= \<const0>\;
  s_axi_buser(882) <= \<const0>\;
  s_axi_buser(881) <= \<const0>\;
  s_axi_buser(880) <= \<const0>\;
  s_axi_buser(879) <= \<const0>\;
  s_axi_buser(878) <= \<const0>\;
  s_axi_buser(877) <= \<const0>\;
  s_axi_buser(876) <= \<const0>\;
  s_axi_buser(875) <= \<const0>\;
  s_axi_buser(874) <= \<const0>\;
  s_axi_buser(873) <= \<const0>\;
  s_axi_buser(872) <= \<const0>\;
  s_axi_buser(871) <= \<const0>\;
  s_axi_buser(870) <= \<const0>\;
  s_axi_buser(869) <= \<const0>\;
  s_axi_buser(868) <= \<const0>\;
  s_axi_buser(867) <= \<const0>\;
  s_axi_buser(866) <= \<const0>\;
  s_axi_buser(865) <= \<const0>\;
  s_axi_buser(864) <= \<const0>\;
  s_axi_buser(863) <= \<const0>\;
  s_axi_buser(862) <= \<const0>\;
  s_axi_buser(861) <= \<const0>\;
  s_axi_buser(860) <= \<const0>\;
  s_axi_buser(859) <= \<const0>\;
  s_axi_buser(858) <= \<const0>\;
  s_axi_buser(857) <= \<const0>\;
  s_axi_buser(856) <= \<const0>\;
  s_axi_buser(855) <= \<const0>\;
  s_axi_buser(854) <= \<const0>\;
  s_axi_buser(853) <= \<const0>\;
  s_axi_buser(852) <= \<const0>\;
  s_axi_buser(851) <= \<const0>\;
  s_axi_buser(850) <= \<const0>\;
  s_axi_buser(849) <= \<const0>\;
  s_axi_buser(848) <= \<const0>\;
  s_axi_buser(847) <= \<const0>\;
  s_axi_buser(846) <= \<const0>\;
  s_axi_buser(845) <= \<const0>\;
  s_axi_buser(844) <= \<const0>\;
  s_axi_buser(843) <= \<const0>\;
  s_axi_buser(842) <= \<const0>\;
  s_axi_buser(841) <= \<const0>\;
  s_axi_buser(840) <= \<const0>\;
  s_axi_buser(839) <= \<const0>\;
  s_axi_buser(838) <= \<const0>\;
  s_axi_buser(837) <= \<const0>\;
  s_axi_buser(836) <= \<const0>\;
  s_axi_buser(835) <= \<const0>\;
  s_axi_buser(834) <= \<const0>\;
  s_axi_buser(833) <= \<const0>\;
  s_axi_buser(832) <= \<const0>\;
  s_axi_buser(831) <= \<const0>\;
  s_axi_buser(830) <= \<const0>\;
  s_axi_buser(829) <= \<const0>\;
  s_axi_buser(828) <= \<const0>\;
  s_axi_buser(827) <= \<const0>\;
  s_axi_buser(826) <= \<const0>\;
  s_axi_buser(825) <= \<const0>\;
  s_axi_buser(824) <= \<const0>\;
  s_axi_buser(823) <= \<const0>\;
  s_axi_buser(822) <= \<const0>\;
  s_axi_buser(821) <= \<const0>\;
  s_axi_buser(820) <= \<const0>\;
  s_axi_buser(819) <= \<const0>\;
  s_axi_buser(818) <= \<const0>\;
  s_axi_buser(817) <= \<const0>\;
  s_axi_buser(816) <= \<const0>\;
  s_axi_buser(815) <= \<const0>\;
  s_axi_buser(814) <= \<const0>\;
  s_axi_buser(813) <= \<const0>\;
  s_axi_buser(812) <= \<const0>\;
  s_axi_buser(811) <= \<const0>\;
  s_axi_buser(810) <= \<const0>\;
  s_axi_buser(809) <= \<const0>\;
  s_axi_buser(808) <= \<const0>\;
  s_axi_buser(807) <= \<const0>\;
  s_axi_buser(806) <= \<const0>\;
  s_axi_buser(805) <= \<const0>\;
  s_axi_buser(804) <= \<const0>\;
  s_axi_buser(803) <= \<const0>\;
  s_axi_buser(802) <= \<const0>\;
  s_axi_buser(801) <= \<const0>\;
  s_axi_buser(800) <= \<const0>\;
  s_axi_buser(799) <= \<const0>\;
  s_axi_buser(798) <= \<const0>\;
  s_axi_buser(797) <= \<const0>\;
  s_axi_buser(796) <= \<const0>\;
  s_axi_buser(795) <= \<const0>\;
  s_axi_buser(794) <= \<const0>\;
  s_axi_buser(793) <= \<const0>\;
  s_axi_buser(792) <= \<const0>\;
  s_axi_buser(791) <= \<const0>\;
  s_axi_buser(790) <= \<const0>\;
  s_axi_buser(789) <= \<const0>\;
  s_axi_buser(788) <= \<const0>\;
  s_axi_buser(787) <= \<const0>\;
  s_axi_buser(786) <= \<const0>\;
  s_axi_buser(785) <= \<const0>\;
  s_axi_buser(784) <= \<const0>\;
  s_axi_buser(783) <= \<const0>\;
  s_axi_buser(782) <= \<const0>\;
  s_axi_buser(781) <= \<const0>\;
  s_axi_buser(780) <= \<const0>\;
  s_axi_buser(779) <= \<const0>\;
  s_axi_buser(778) <= \<const0>\;
  s_axi_buser(777) <= \<const0>\;
  s_axi_buser(776) <= \<const0>\;
  s_axi_buser(775) <= \<const0>\;
  s_axi_buser(774) <= \<const0>\;
  s_axi_buser(773) <= \<const0>\;
  s_axi_buser(772) <= \<const0>\;
  s_axi_buser(771) <= \<const0>\;
  s_axi_buser(770) <= \<const0>\;
  s_axi_buser(769) <= \<const0>\;
  s_axi_buser(768) <= \<const0>\;
  s_axi_buser(767) <= \<const0>\;
  s_axi_buser(766) <= \<const0>\;
  s_axi_buser(765) <= \<const0>\;
  s_axi_buser(764) <= \<const0>\;
  s_axi_buser(763) <= \<const0>\;
  s_axi_buser(762) <= \<const0>\;
  s_axi_buser(761) <= \<const0>\;
  s_axi_buser(760) <= \<const0>\;
  s_axi_buser(759) <= \<const0>\;
  s_axi_buser(758) <= \<const0>\;
  s_axi_buser(757) <= \<const0>\;
  s_axi_buser(756) <= \<const0>\;
  s_axi_buser(755) <= \<const0>\;
  s_axi_buser(754) <= \<const0>\;
  s_axi_buser(753) <= \<const0>\;
  s_axi_buser(752) <= \<const0>\;
  s_axi_buser(751) <= \<const0>\;
  s_axi_buser(750) <= \<const0>\;
  s_axi_buser(749) <= \<const0>\;
  s_axi_buser(748) <= \<const0>\;
  s_axi_buser(747) <= \<const0>\;
  s_axi_buser(746) <= \<const0>\;
  s_axi_buser(745) <= \<const0>\;
  s_axi_buser(744) <= \<const0>\;
  s_axi_buser(743) <= \<const0>\;
  s_axi_buser(742) <= \<const0>\;
  s_axi_buser(741) <= \<const0>\;
  s_axi_buser(740) <= \<const0>\;
  s_axi_buser(739) <= \<const0>\;
  s_axi_buser(738) <= \<const0>\;
  s_axi_buser(737) <= \<const0>\;
  s_axi_buser(736) <= \<const0>\;
  s_axi_buser(735) <= \<const0>\;
  s_axi_buser(734) <= \<const0>\;
  s_axi_buser(733) <= \<const0>\;
  s_axi_buser(732) <= \<const0>\;
  s_axi_buser(731) <= \<const0>\;
  s_axi_buser(730) <= \<const0>\;
  s_axi_buser(729) <= \<const0>\;
  s_axi_buser(728) <= \<const0>\;
  s_axi_buser(727) <= \<const0>\;
  s_axi_buser(726) <= \<const0>\;
  s_axi_buser(725) <= \<const0>\;
  s_axi_buser(724) <= \<const0>\;
  s_axi_buser(723) <= \<const0>\;
  s_axi_buser(722) <= \<const0>\;
  s_axi_buser(721) <= \<const0>\;
  s_axi_buser(720) <= \<const0>\;
  s_axi_buser(719) <= \<const0>\;
  s_axi_buser(718) <= \<const0>\;
  s_axi_buser(717) <= \<const0>\;
  s_axi_buser(716) <= \<const0>\;
  s_axi_buser(715) <= \<const0>\;
  s_axi_buser(714) <= \<const0>\;
  s_axi_buser(713) <= \<const0>\;
  s_axi_buser(712) <= \<const0>\;
  s_axi_buser(711) <= \<const0>\;
  s_axi_buser(710) <= \<const0>\;
  s_axi_buser(709) <= \<const0>\;
  s_axi_buser(708) <= \<const0>\;
  s_axi_buser(707) <= \<const0>\;
  s_axi_buser(706) <= \<const0>\;
  s_axi_buser(705) <= \<const0>\;
  s_axi_buser(704) <= \<const0>\;
  s_axi_buser(703) <= \<const0>\;
  s_axi_buser(702) <= \<const0>\;
  s_axi_buser(701) <= \<const0>\;
  s_axi_buser(700) <= \<const0>\;
  s_axi_buser(699) <= \<const0>\;
  s_axi_buser(698) <= \<const0>\;
  s_axi_buser(697) <= \<const0>\;
  s_axi_buser(696) <= \<const0>\;
  s_axi_buser(695) <= \<const0>\;
  s_axi_buser(694) <= \<const0>\;
  s_axi_buser(693) <= \<const0>\;
  s_axi_buser(692) <= \<const0>\;
  s_axi_buser(691) <= \<const0>\;
  s_axi_buser(690) <= \<const0>\;
  s_axi_buser(689) <= \<const0>\;
  s_axi_buser(688) <= \<const0>\;
  s_axi_buser(687) <= \<const0>\;
  s_axi_buser(686) <= \<const0>\;
  s_axi_buser(685) <= \<const0>\;
  s_axi_buser(684) <= \<const0>\;
  s_axi_buser(683) <= \<const0>\;
  s_axi_buser(682) <= \<const0>\;
  s_axi_buser(681) <= \<const0>\;
  s_axi_buser(680) <= \<const0>\;
  s_axi_buser(679) <= \<const0>\;
  s_axi_buser(678) <= \<const0>\;
  s_axi_buser(677) <= \<const0>\;
  s_axi_buser(676) <= \<const0>\;
  s_axi_buser(675) <= \<const0>\;
  s_axi_buser(674) <= \<const0>\;
  s_axi_buser(673) <= \<const0>\;
  s_axi_buser(672) <= \<const0>\;
  s_axi_buser(671) <= \<const0>\;
  s_axi_buser(670) <= \<const0>\;
  s_axi_buser(669) <= \<const0>\;
  s_axi_buser(668) <= \<const0>\;
  s_axi_buser(667) <= \<const0>\;
  s_axi_buser(666) <= \<const0>\;
  s_axi_buser(665) <= \<const0>\;
  s_axi_buser(664) <= \<const0>\;
  s_axi_buser(663) <= \<const0>\;
  s_axi_buser(662) <= \<const0>\;
  s_axi_buser(661) <= \<const0>\;
  s_axi_buser(660) <= \<const0>\;
  s_axi_buser(659) <= \<const0>\;
  s_axi_buser(658) <= \<const0>\;
  s_axi_buser(657) <= \<const0>\;
  s_axi_buser(656) <= \<const0>\;
  s_axi_buser(655) <= \<const0>\;
  s_axi_buser(654) <= \<const0>\;
  s_axi_buser(653) <= \<const0>\;
  s_axi_buser(652) <= \<const0>\;
  s_axi_buser(651) <= \<const0>\;
  s_axi_buser(650) <= \<const0>\;
  s_axi_buser(649) <= \<const0>\;
  s_axi_buser(648) <= \<const0>\;
  s_axi_buser(647) <= \<const0>\;
  s_axi_buser(646) <= \<const0>\;
  s_axi_buser(645) <= \<const0>\;
  s_axi_buser(644) <= \<const0>\;
  s_axi_buser(643) <= \<const0>\;
  s_axi_buser(642) <= \<const0>\;
  s_axi_buser(641) <= \<const0>\;
  s_axi_buser(640) <= \<const0>\;
  s_axi_buser(639) <= \<const0>\;
  s_axi_buser(638) <= \<const0>\;
  s_axi_buser(637) <= \<const0>\;
  s_axi_buser(636) <= \<const0>\;
  s_axi_buser(635) <= \<const0>\;
  s_axi_buser(634) <= \<const0>\;
  s_axi_buser(633) <= \<const0>\;
  s_axi_buser(632) <= \<const0>\;
  s_axi_buser(631) <= \<const0>\;
  s_axi_buser(630) <= \<const0>\;
  s_axi_buser(629) <= \<const0>\;
  s_axi_buser(628) <= \<const0>\;
  s_axi_buser(627) <= \<const0>\;
  s_axi_buser(626) <= \<const0>\;
  s_axi_buser(625) <= \<const0>\;
  s_axi_buser(624) <= \<const0>\;
  s_axi_buser(623) <= \<const0>\;
  s_axi_buser(622) <= \<const0>\;
  s_axi_buser(621) <= \<const0>\;
  s_axi_buser(620) <= \<const0>\;
  s_axi_buser(619) <= \<const0>\;
  s_axi_buser(618) <= \<const0>\;
  s_axi_buser(617) <= \<const0>\;
  s_axi_buser(616) <= \<const0>\;
  s_axi_buser(615) <= \<const0>\;
  s_axi_buser(614) <= \<const0>\;
  s_axi_buser(613) <= \<const0>\;
  s_axi_buser(612) <= \<const0>\;
  s_axi_buser(611) <= \<const0>\;
  s_axi_buser(610) <= \<const0>\;
  s_axi_buser(609) <= \<const0>\;
  s_axi_buser(608) <= \<const0>\;
  s_axi_buser(607) <= \<const0>\;
  s_axi_buser(606) <= \<const0>\;
  s_axi_buser(605) <= \<const0>\;
  s_axi_buser(604) <= \<const0>\;
  s_axi_buser(603) <= \<const0>\;
  s_axi_buser(602) <= \<const0>\;
  s_axi_buser(601) <= \<const0>\;
  s_axi_buser(600) <= \<const0>\;
  s_axi_buser(599) <= \<const0>\;
  s_axi_buser(598) <= \<const0>\;
  s_axi_buser(597) <= \<const0>\;
  s_axi_buser(596) <= \<const0>\;
  s_axi_buser(595) <= \<const0>\;
  s_axi_buser(594) <= \<const0>\;
  s_axi_buser(593) <= \<const0>\;
  s_axi_buser(592) <= \<const0>\;
  s_axi_buser(591) <= \<const0>\;
  s_axi_buser(590) <= \<const0>\;
  s_axi_buser(589) <= \<const0>\;
  s_axi_buser(588) <= \<const0>\;
  s_axi_buser(587) <= \<const0>\;
  s_axi_buser(586) <= \<const0>\;
  s_axi_buser(585) <= \<const0>\;
  s_axi_buser(584) <= \<const0>\;
  s_axi_buser(583) <= \<const0>\;
  s_axi_buser(582) <= \<const0>\;
  s_axi_buser(581) <= \<const0>\;
  s_axi_buser(580) <= \<const0>\;
  s_axi_buser(579) <= \<const0>\;
  s_axi_buser(578) <= \<const0>\;
  s_axi_buser(577) <= \<const0>\;
  s_axi_buser(576) <= \<const0>\;
  s_axi_buser(575) <= \<const0>\;
  s_axi_buser(574) <= \<const0>\;
  s_axi_buser(573) <= \<const0>\;
  s_axi_buser(572) <= \<const0>\;
  s_axi_buser(571) <= \<const0>\;
  s_axi_buser(570) <= \<const0>\;
  s_axi_buser(569) <= \<const0>\;
  s_axi_buser(568) <= \<const0>\;
  s_axi_buser(567) <= \<const0>\;
  s_axi_buser(566) <= \<const0>\;
  s_axi_buser(565) <= \<const0>\;
  s_axi_buser(564) <= \<const0>\;
  s_axi_buser(563) <= \<const0>\;
  s_axi_buser(562) <= \<const0>\;
  s_axi_buser(561) <= \<const0>\;
  s_axi_buser(560) <= \<const0>\;
  s_axi_buser(559) <= \<const0>\;
  s_axi_buser(558) <= \<const0>\;
  s_axi_buser(557) <= \<const0>\;
  s_axi_buser(556) <= \<const0>\;
  s_axi_buser(555) <= \<const0>\;
  s_axi_buser(554) <= \<const0>\;
  s_axi_buser(553) <= \<const0>\;
  s_axi_buser(552) <= \<const0>\;
  s_axi_buser(551) <= \<const0>\;
  s_axi_buser(550) <= \<const0>\;
  s_axi_buser(549) <= \<const0>\;
  s_axi_buser(548) <= \<const0>\;
  s_axi_buser(547) <= \<const0>\;
  s_axi_buser(546) <= \<const0>\;
  s_axi_buser(545) <= \<const0>\;
  s_axi_buser(544) <= \<const0>\;
  s_axi_buser(543) <= \<const0>\;
  s_axi_buser(542) <= \<const0>\;
  s_axi_buser(541) <= \<const0>\;
  s_axi_buser(540) <= \<const0>\;
  s_axi_buser(539) <= \<const0>\;
  s_axi_buser(538) <= \<const0>\;
  s_axi_buser(537) <= \<const0>\;
  s_axi_buser(536) <= \<const0>\;
  s_axi_buser(535) <= \<const0>\;
  s_axi_buser(534) <= \<const0>\;
  s_axi_buser(533) <= \<const0>\;
  s_axi_buser(532) <= \<const0>\;
  s_axi_buser(531) <= \<const0>\;
  s_axi_buser(530) <= \<const0>\;
  s_axi_buser(529) <= \<const0>\;
  s_axi_buser(528) <= \<const0>\;
  s_axi_buser(527) <= \<const0>\;
  s_axi_buser(526) <= \<const0>\;
  s_axi_buser(525) <= \<const0>\;
  s_axi_buser(524) <= \<const0>\;
  s_axi_buser(523) <= \<const0>\;
  s_axi_buser(522) <= \<const0>\;
  s_axi_buser(521) <= \<const0>\;
  s_axi_buser(520) <= \<const0>\;
  s_axi_buser(519) <= \<const0>\;
  s_axi_buser(518) <= \<const0>\;
  s_axi_buser(517) <= \<const0>\;
  s_axi_buser(516) <= \<const0>\;
  s_axi_buser(515) <= \<const0>\;
  s_axi_buser(514) <= \<const0>\;
  s_axi_buser(513) <= \<const0>\;
  s_axi_buser(512) <= \<const0>\;
  s_axi_buser(511) <= \<const0>\;
  s_axi_buser(510) <= \<const0>\;
  s_axi_buser(509) <= \<const0>\;
  s_axi_buser(508) <= \<const0>\;
  s_axi_buser(507) <= \<const0>\;
  s_axi_buser(506) <= \<const0>\;
  s_axi_buser(505) <= \<const0>\;
  s_axi_buser(504) <= \<const0>\;
  s_axi_buser(503) <= \<const0>\;
  s_axi_buser(502) <= \<const0>\;
  s_axi_buser(501) <= \<const0>\;
  s_axi_buser(500) <= \<const0>\;
  s_axi_buser(499) <= \<const0>\;
  s_axi_buser(498) <= \<const0>\;
  s_axi_buser(497) <= \<const0>\;
  s_axi_buser(496) <= \<const0>\;
  s_axi_buser(495) <= \<const0>\;
  s_axi_buser(494) <= \<const0>\;
  s_axi_buser(493) <= \<const0>\;
  s_axi_buser(492) <= \<const0>\;
  s_axi_buser(491) <= \<const0>\;
  s_axi_buser(490) <= \<const0>\;
  s_axi_buser(489) <= \<const0>\;
  s_axi_buser(488) <= \<const0>\;
  s_axi_buser(487) <= \<const0>\;
  s_axi_buser(486) <= \<const0>\;
  s_axi_buser(485) <= \<const0>\;
  s_axi_buser(484) <= \<const0>\;
  s_axi_buser(483) <= \<const0>\;
  s_axi_buser(482) <= \<const0>\;
  s_axi_buser(481) <= \<const0>\;
  s_axi_buser(480) <= \<const0>\;
  s_axi_buser(479) <= \<const0>\;
  s_axi_buser(478) <= \<const0>\;
  s_axi_buser(477) <= \<const0>\;
  s_axi_buser(476) <= \<const0>\;
  s_axi_buser(475) <= \<const0>\;
  s_axi_buser(474) <= \<const0>\;
  s_axi_buser(473) <= \<const0>\;
  s_axi_buser(472) <= \<const0>\;
  s_axi_buser(471) <= \<const0>\;
  s_axi_buser(470) <= \<const0>\;
  s_axi_buser(469) <= \<const0>\;
  s_axi_buser(468) <= \<const0>\;
  s_axi_buser(467) <= \<const0>\;
  s_axi_buser(466) <= \<const0>\;
  s_axi_buser(465) <= \<const0>\;
  s_axi_buser(464) <= \<const0>\;
  s_axi_buser(463) <= \<const0>\;
  s_axi_buser(462) <= \<const0>\;
  s_axi_buser(461) <= \<const0>\;
  s_axi_buser(460) <= \<const0>\;
  s_axi_buser(459) <= \<const0>\;
  s_axi_buser(458) <= \<const0>\;
  s_axi_buser(457) <= \<const0>\;
  s_axi_buser(456) <= \<const0>\;
  s_axi_buser(455) <= \<const0>\;
  s_axi_buser(454) <= \<const0>\;
  s_axi_buser(453) <= \<const0>\;
  s_axi_buser(452) <= \<const0>\;
  s_axi_buser(451) <= \<const0>\;
  s_axi_buser(450) <= \<const0>\;
  s_axi_buser(449) <= \<const0>\;
  s_axi_buser(448) <= \<const0>\;
  s_axi_buser(447) <= \<const0>\;
  s_axi_buser(446) <= \<const0>\;
  s_axi_buser(445) <= \<const0>\;
  s_axi_buser(444) <= \<const0>\;
  s_axi_buser(443) <= \<const0>\;
  s_axi_buser(442) <= \<const0>\;
  s_axi_buser(441) <= \<const0>\;
  s_axi_buser(440) <= \<const0>\;
  s_axi_buser(439) <= \<const0>\;
  s_axi_buser(438) <= \<const0>\;
  s_axi_buser(437) <= \<const0>\;
  s_axi_buser(436) <= \<const0>\;
  s_axi_buser(435) <= \<const0>\;
  s_axi_buser(434) <= \<const0>\;
  s_axi_buser(433) <= \<const0>\;
  s_axi_buser(432) <= \<const0>\;
  s_axi_buser(431) <= \<const0>\;
  s_axi_buser(430) <= \<const0>\;
  s_axi_buser(429) <= \<const0>\;
  s_axi_buser(428) <= \<const0>\;
  s_axi_buser(427) <= \<const0>\;
  s_axi_buser(426) <= \<const0>\;
  s_axi_buser(425) <= \<const0>\;
  s_axi_buser(424) <= \<const0>\;
  s_axi_buser(423) <= \<const0>\;
  s_axi_buser(422) <= \<const0>\;
  s_axi_buser(421) <= \<const0>\;
  s_axi_buser(420) <= \<const0>\;
  s_axi_buser(419) <= \<const0>\;
  s_axi_buser(418) <= \<const0>\;
  s_axi_buser(417) <= \<const0>\;
  s_axi_buser(416) <= \<const0>\;
  s_axi_buser(415) <= \<const0>\;
  s_axi_buser(414) <= \<const0>\;
  s_axi_buser(413) <= \<const0>\;
  s_axi_buser(412) <= \<const0>\;
  s_axi_buser(411) <= \<const0>\;
  s_axi_buser(410) <= \<const0>\;
  s_axi_buser(409) <= \<const0>\;
  s_axi_buser(408) <= \<const0>\;
  s_axi_buser(407) <= \<const0>\;
  s_axi_buser(406) <= \<const0>\;
  s_axi_buser(405) <= \<const0>\;
  s_axi_buser(404) <= \<const0>\;
  s_axi_buser(403) <= \<const0>\;
  s_axi_buser(402) <= \<const0>\;
  s_axi_buser(401) <= \<const0>\;
  s_axi_buser(400) <= \<const0>\;
  s_axi_buser(399) <= \<const0>\;
  s_axi_buser(398) <= \<const0>\;
  s_axi_buser(397) <= \<const0>\;
  s_axi_buser(396) <= \<const0>\;
  s_axi_buser(395) <= \<const0>\;
  s_axi_buser(394) <= \<const0>\;
  s_axi_buser(393) <= \<const0>\;
  s_axi_buser(392) <= \<const0>\;
  s_axi_buser(391) <= \<const0>\;
  s_axi_buser(390) <= \<const0>\;
  s_axi_buser(389) <= \<const0>\;
  s_axi_buser(388) <= \<const0>\;
  s_axi_buser(387) <= \<const0>\;
  s_axi_buser(386) <= \<const0>\;
  s_axi_buser(385) <= \<const0>\;
  s_axi_buser(384) <= \<const0>\;
  s_axi_buser(383) <= \<const0>\;
  s_axi_buser(382) <= \<const0>\;
  s_axi_buser(381) <= \<const0>\;
  s_axi_buser(380) <= \<const0>\;
  s_axi_buser(379) <= \<const0>\;
  s_axi_buser(378) <= \<const0>\;
  s_axi_buser(377) <= \<const0>\;
  s_axi_buser(376) <= \<const0>\;
  s_axi_buser(375) <= \<const0>\;
  s_axi_buser(374) <= \<const0>\;
  s_axi_buser(373) <= \<const0>\;
  s_axi_buser(372) <= \<const0>\;
  s_axi_buser(371) <= \<const0>\;
  s_axi_buser(370) <= \<const0>\;
  s_axi_buser(369) <= \<const0>\;
  s_axi_buser(368) <= \<const0>\;
  s_axi_buser(367) <= \<const0>\;
  s_axi_buser(366) <= \<const0>\;
  s_axi_buser(365) <= \<const0>\;
  s_axi_buser(364) <= \<const0>\;
  s_axi_buser(363) <= \<const0>\;
  s_axi_buser(362) <= \<const0>\;
  s_axi_buser(361) <= \<const0>\;
  s_axi_buser(360) <= \<const0>\;
  s_axi_buser(359) <= \<const0>\;
  s_axi_buser(358) <= \<const0>\;
  s_axi_buser(357) <= \<const0>\;
  s_axi_buser(356) <= \<const0>\;
  s_axi_buser(355) <= \<const0>\;
  s_axi_buser(354) <= \<const0>\;
  s_axi_buser(353) <= \<const0>\;
  s_axi_buser(352) <= \<const0>\;
  s_axi_buser(351) <= \<const0>\;
  s_axi_buser(350) <= \<const0>\;
  s_axi_buser(349) <= \<const0>\;
  s_axi_buser(348) <= \<const0>\;
  s_axi_buser(347) <= \<const0>\;
  s_axi_buser(346) <= \<const0>\;
  s_axi_buser(345) <= \<const0>\;
  s_axi_buser(344) <= \<const0>\;
  s_axi_buser(343) <= \<const0>\;
  s_axi_buser(342) <= \<const0>\;
  s_axi_buser(341) <= \<const0>\;
  s_axi_buser(340) <= \<const0>\;
  s_axi_buser(339) <= \<const0>\;
  s_axi_buser(338) <= \<const0>\;
  s_axi_buser(337) <= \<const0>\;
  s_axi_buser(336) <= \<const0>\;
  s_axi_buser(335) <= \<const0>\;
  s_axi_buser(334) <= \<const0>\;
  s_axi_buser(333) <= \<const0>\;
  s_axi_buser(332) <= \<const0>\;
  s_axi_buser(331) <= \<const0>\;
  s_axi_buser(330) <= \<const0>\;
  s_axi_buser(329) <= \<const0>\;
  s_axi_buser(328) <= \<const0>\;
  s_axi_buser(327) <= \<const0>\;
  s_axi_buser(326) <= \<const0>\;
  s_axi_buser(325) <= \<const0>\;
  s_axi_buser(324) <= \<const0>\;
  s_axi_buser(323) <= \<const0>\;
  s_axi_buser(322) <= \<const0>\;
  s_axi_buser(321) <= \<const0>\;
  s_axi_buser(320) <= \<const0>\;
  s_axi_buser(319) <= \<const0>\;
  s_axi_buser(318) <= \<const0>\;
  s_axi_buser(317) <= \<const0>\;
  s_axi_buser(316) <= \<const0>\;
  s_axi_buser(315) <= \<const0>\;
  s_axi_buser(314) <= \<const0>\;
  s_axi_buser(313) <= \<const0>\;
  s_axi_buser(312) <= \<const0>\;
  s_axi_buser(311) <= \<const0>\;
  s_axi_buser(310) <= \<const0>\;
  s_axi_buser(309) <= \<const0>\;
  s_axi_buser(308) <= \<const0>\;
  s_axi_buser(307) <= \<const0>\;
  s_axi_buser(306) <= \<const0>\;
  s_axi_buser(305) <= \<const0>\;
  s_axi_buser(304) <= \<const0>\;
  s_axi_buser(303) <= \<const0>\;
  s_axi_buser(302) <= \<const0>\;
  s_axi_buser(301) <= \<const0>\;
  s_axi_buser(300) <= \<const0>\;
  s_axi_buser(299) <= \<const0>\;
  s_axi_buser(298) <= \<const0>\;
  s_axi_buser(297) <= \<const0>\;
  s_axi_buser(296) <= \<const0>\;
  s_axi_buser(295) <= \<const0>\;
  s_axi_buser(294) <= \<const0>\;
  s_axi_buser(293) <= \<const0>\;
  s_axi_buser(292) <= \<const0>\;
  s_axi_buser(291) <= \<const0>\;
  s_axi_buser(290) <= \<const0>\;
  s_axi_buser(289) <= \<const0>\;
  s_axi_buser(288) <= \<const0>\;
  s_axi_buser(287) <= \<const0>\;
  s_axi_buser(286) <= \<const0>\;
  s_axi_buser(285) <= \<const0>\;
  s_axi_buser(284) <= \<const0>\;
  s_axi_buser(283) <= \<const0>\;
  s_axi_buser(282) <= \<const0>\;
  s_axi_buser(281) <= \<const0>\;
  s_axi_buser(280) <= \<const0>\;
  s_axi_buser(279) <= \<const0>\;
  s_axi_buser(278) <= \<const0>\;
  s_axi_buser(277) <= \<const0>\;
  s_axi_buser(276) <= \<const0>\;
  s_axi_buser(275) <= \<const0>\;
  s_axi_buser(274) <= \<const0>\;
  s_axi_buser(273) <= \<const0>\;
  s_axi_buser(272) <= \<const0>\;
  s_axi_buser(271) <= \<const0>\;
  s_axi_buser(270) <= \<const0>\;
  s_axi_buser(269) <= \<const0>\;
  s_axi_buser(268) <= \<const0>\;
  s_axi_buser(267) <= \<const0>\;
  s_axi_buser(266) <= \<const0>\;
  s_axi_buser(265) <= \<const0>\;
  s_axi_buser(264) <= \<const0>\;
  s_axi_buser(263) <= \<const0>\;
  s_axi_buser(262) <= \<const0>\;
  s_axi_buser(261) <= \<const0>\;
  s_axi_buser(260) <= \<const0>\;
  s_axi_buser(259) <= \<const0>\;
  s_axi_buser(258) <= \<const0>\;
  s_axi_buser(257) <= \<const0>\;
  s_axi_buser(256) <= \<const0>\;
  s_axi_buser(255) <= \<const0>\;
  s_axi_buser(254) <= \<const0>\;
  s_axi_buser(253) <= \<const0>\;
  s_axi_buser(252) <= \<const0>\;
  s_axi_buser(251) <= \<const0>\;
  s_axi_buser(250) <= \<const0>\;
  s_axi_buser(249) <= \<const0>\;
  s_axi_buser(248) <= \<const0>\;
  s_axi_buser(247) <= \<const0>\;
  s_axi_buser(246) <= \<const0>\;
  s_axi_buser(245) <= \<const0>\;
  s_axi_buser(244) <= \<const0>\;
  s_axi_buser(243) <= \<const0>\;
  s_axi_buser(242) <= \<const0>\;
  s_axi_buser(241) <= \<const0>\;
  s_axi_buser(240) <= \<const0>\;
  s_axi_buser(239) <= \<const0>\;
  s_axi_buser(238) <= \<const0>\;
  s_axi_buser(237) <= \<const0>\;
  s_axi_buser(236) <= \<const0>\;
  s_axi_buser(235) <= \<const0>\;
  s_axi_buser(234) <= \<const0>\;
  s_axi_buser(233) <= \<const0>\;
  s_axi_buser(232) <= \<const0>\;
  s_axi_buser(231) <= \<const0>\;
  s_axi_buser(230) <= \<const0>\;
  s_axi_buser(229) <= \<const0>\;
  s_axi_buser(228) <= \<const0>\;
  s_axi_buser(227) <= \<const0>\;
  s_axi_buser(226) <= \<const0>\;
  s_axi_buser(225) <= \<const0>\;
  s_axi_buser(224) <= \<const0>\;
  s_axi_buser(223) <= \<const0>\;
  s_axi_buser(222) <= \<const0>\;
  s_axi_buser(221) <= \<const0>\;
  s_axi_buser(220) <= \<const0>\;
  s_axi_buser(219) <= \<const0>\;
  s_axi_buser(218) <= \<const0>\;
  s_axi_buser(217) <= \<const0>\;
  s_axi_buser(216) <= \<const0>\;
  s_axi_buser(215) <= \<const0>\;
  s_axi_buser(214) <= \<const0>\;
  s_axi_buser(213) <= \<const0>\;
  s_axi_buser(212) <= \<const0>\;
  s_axi_buser(211) <= \<const0>\;
  s_axi_buser(210) <= \<const0>\;
  s_axi_buser(209) <= \<const0>\;
  s_axi_buser(208) <= \<const0>\;
  s_axi_buser(207) <= \<const0>\;
  s_axi_buser(206) <= \<const0>\;
  s_axi_buser(205) <= \<const0>\;
  s_axi_buser(204) <= \<const0>\;
  s_axi_buser(203) <= \<const0>\;
  s_axi_buser(202) <= \<const0>\;
  s_axi_buser(201) <= \<const0>\;
  s_axi_buser(200) <= \<const0>\;
  s_axi_buser(199) <= \<const0>\;
  s_axi_buser(198) <= \<const0>\;
  s_axi_buser(197) <= \<const0>\;
  s_axi_buser(196) <= \<const0>\;
  s_axi_buser(195) <= \<const0>\;
  s_axi_buser(194) <= \<const0>\;
  s_axi_buser(193) <= \<const0>\;
  s_axi_buser(192) <= \<const0>\;
  s_axi_buser(191) <= \<const0>\;
  s_axi_buser(190) <= \<const0>\;
  s_axi_buser(189) <= \<const0>\;
  s_axi_buser(188) <= \<const0>\;
  s_axi_buser(187) <= \<const0>\;
  s_axi_buser(186) <= \<const0>\;
  s_axi_buser(185) <= \<const0>\;
  s_axi_buser(184) <= \<const0>\;
  s_axi_buser(183) <= \<const0>\;
  s_axi_buser(182) <= \<const0>\;
  s_axi_buser(181) <= \<const0>\;
  s_axi_buser(180) <= \<const0>\;
  s_axi_buser(179) <= \<const0>\;
  s_axi_buser(178) <= \<const0>\;
  s_axi_buser(177) <= \<const0>\;
  s_axi_buser(176) <= \<const0>\;
  s_axi_buser(175) <= \<const0>\;
  s_axi_buser(174) <= \<const0>\;
  s_axi_buser(173) <= \<const0>\;
  s_axi_buser(172) <= \<const0>\;
  s_axi_buser(171) <= \<const0>\;
  s_axi_buser(170) <= \<const0>\;
  s_axi_buser(169) <= \<const0>\;
  s_axi_buser(168) <= \<const0>\;
  s_axi_buser(167) <= \<const0>\;
  s_axi_buser(166) <= \<const0>\;
  s_axi_buser(165) <= \<const0>\;
  s_axi_buser(164) <= \<const0>\;
  s_axi_buser(163) <= \<const0>\;
  s_axi_buser(162) <= \<const0>\;
  s_axi_buser(161) <= \<const0>\;
  s_axi_buser(160) <= \<const0>\;
  s_axi_buser(159) <= \<const0>\;
  s_axi_buser(158) <= \<const0>\;
  s_axi_buser(157) <= \<const0>\;
  s_axi_buser(156) <= \<const0>\;
  s_axi_buser(155) <= \<const0>\;
  s_axi_buser(154) <= \<const0>\;
  s_axi_buser(153) <= \<const0>\;
  s_axi_buser(152) <= \<const0>\;
  s_axi_buser(151) <= \<const0>\;
  s_axi_buser(150) <= \<const0>\;
  s_axi_buser(149) <= \<const0>\;
  s_axi_buser(148) <= \<const0>\;
  s_axi_buser(147) <= \<const0>\;
  s_axi_buser(146) <= \<const0>\;
  s_axi_buser(145) <= \<const0>\;
  s_axi_buser(144) <= \<const0>\;
  s_axi_buser(143) <= \<const0>\;
  s_axi_buser(142) <= \<const0>\;
  s_axi_buser(141) <= \<const0>\;
  s_axi_buser(140) <= \<const0>\;
  s_axi_buser(139) <= \<const0>\;
  s_axi_buser(138) <= \<const0>\;
  s_axi_buser(137) <= \<const0>\;
  s_axi_buser(136) <= \<const0>\;
  s_axi_buser(135) <= \<const0>\;
  s_axi_buser(134) <= \<const0>\;
  s_axi_buser(133) <= \<const0>\;
  s_axi_buser(132) <= \<const0>\;
  s_axi_buser(131) <= \<const0>\;
  s_axi_buser(130) <= \<const0>\;
  s_axi_buser(129) <= \<const0>\;
  s_axi_buser(128) <= \<const0>\;
  s_axi_buser(127) <= \<const0>\;
  s_axi_buser(126) <= \<const0>\;
  s_axi_buser(125) <= \<const0>\;
  s_axi_buser(124) <= \<const0>\;
  s_axi_buser(123) <= \<const0>\;
  s_axi_buser(122) <= \<const0>\;
  s_axi_buser(121) <= \<const0>\;
  s_axi_buser(120) <= \<const0>\;
  s_axi_buser(119) <= \<const0>\;
  s_axi_buser(118) <= \<const0>\;
  s_axi_buser(117) <= \<const0>\;
  s_axi_buser(116) <= \<const0>\;
  s_axi_buser(115) <= \<const0>\;
  s_axi_buser(114) <= \<const0>\;
  s_axi_buser(113) <= \<const0>\;
  s_axi_buser(112) <= \<const0>\;
  s_axi_buser(111) <= \<const0>\;
  s_axi_buser(110) <= \<const0>\;
  s_axi_buser(109) <= \<const0>\;
  s_axi_buser(108) <= \<const0>\;
  s_axi_buser(107) <= \<const0>\;
  s_axi_buser(106) <= \<const0>\;
  s_axi_buser(105) <= \<const0>\;
  s_axi_buser(104) <= \<const0>\;
  s_axi_buser(103) <= \<const0>\;
  s_axi_buser(102) <= \<const0>\;
  s_axi_buser(101) <= \<const0>\;
  s_axi_buser(100) <= \<const0>\;
  s_axi_buser(99) <= \<const0>\;
  s_axi_buser(98) <= \<const0>\;
  s_axi_buser(97) <= \<const0>\;
  s_axi_buser(96) <= \<const0>\;
  s_axi_buser(95) <= \<const0>\;
  s_axi_buser(94) <= \<const0>\;
  s_axi_buser(93) <= \<const0>\;
  s_axi_buser(92) <= \<const0>\;
  s_axi_buser(91) <= \<const0>\;
  s_axi_buser(90) <= \<const0>\;
  s_axi_buser(89) <= \<const0>\;
  s_axi_buser(88) <= \<const0>\;
  s_axi_buser(87) <= \<const0>\;
  s_axi_buser(86) <= \<const0>\;
  s_axi_buser(85) <= \<const0>\;
  s_axi_buser(84) <= \<const0>\;
  s_axi_buser(83) <= \<const0>\;
  s_axi_buser(82) <= \<const0>\;
  s_axi_buser(81) <= \<const0>\;
  s_axi_buser(80) <= \<const0>\;
  s_axi_buser(79) <= \<const0>\;
  s_axi_buser(78) <= \<const0>\;
  s_axi_buser(77) <= \<const0>\;
  s_axi_buser(76) <= \<const0>\;
  s_axi_buser(75) <= \<const0>\;
  s_axi_buser(74) <= \<const0>\;
  s_axi_buser(73) <= \<const0>\;
  s_axi_buser(72) <= \<const0>\;
  s_axi_buser(71) <= \<const0>\;
  s_axi_buser(70) <= \<const0>\;
  s_axi_buser(69) <= \<const0>\;
  s_axi_buser(68) <= \<const0>\;
  s_axi_buser(67) <= \<const0>\;
  s_axi_buser(66) <= \<const0>\;
  s_axi_buser(65) <= \<const0>\;
  s_axi_buser(64) <= \<const0>\;
  s_axi_buser(63) <= \<const0>\;
  s_axi_buser(62) <= \<const0>\;
  s_axi_buser(61) <= \<const0>\;
  s_axi_buser(60) <= \<const0>\;
  s_axi_buser(59) <= \<const0>\;
  s_axi_buser(58) <= \<const0>\;
  s_axi_buser(57) <= \<const0>\;
  s_axi_buser(56) <= \<const0>\;
  s_axi_buser(55) <= \<const0>\;
  s_axi_buser(54) <= \<const0>\;
  s_axi_buser(53) <= \<const0>\;
  s_axi_buser(52) <= \<const0>\;
  s_axi_buser(51) <= \<const0>\;
  s_axi_buser(50) <= \<const0>\;
  s_axi_buser(49) <= \<const0>\;
  s_axi_buser(48) <= \<const0>\;
  s_axi_buser(47) <= \<const0>\;
  s_axi_buser(46) <= \<const0>\;
  s_axi_buser(45) <= \<const0>\;
  s_axi_buser(44) <= \<const0>\;
  s_axi_buser(43) <= \<const0>\;
  s_axi_buser(42) <= \<const0>\;
  s_axi_buser(41) <= \<const0>\;
  s_axi_buser(40) <= \<const0>\;
  s_axi_buser(39) <= \<const0>\;
  s_axi_buser(38) <= \<const0>\;
  s_axi_buser(37) <= \<const0>\;
  s_axi_buser(36) <= \<const0>\;
  s_axi_buser(35) <= \<const0>\;
  s_axi_buser(34) <= \<const0>\;
  s_axi_buser(33) <= \<const0>\;
  s_axi_buser(32) <= \<const0>\;
  s_axi_buser(31) <= \<const0>\;
  s_axi_buser(30) <= \<const0>\;
  s_axi_buser(29) <= \<const0>\;
  s_axi_buser(28) <= \<const0>\;
  s_axi_buser(27) <= \<const0>\;
  s_axi_buser(26) <= \<const0>\;
  s_axi_buser(25) <= \<const0>\;
  s_axi_buser(24) <= \<const0>\;
  s_axi_buser(23) <= \<const0>\;
  s_axi_buser(22) <= \<const0>\;
  s_axi_buser(21) <= \<const0>\;
  s_axi_buser(20) <= \<const0>\;
  s_axi_buser(19) <= \<const0>\;
  s_axi_buser(18) <= \<const0>\;
  s_axi_buser(17) <= \<const0>\;
  s_axi_buser(16) <= \<const0>\;
  s_axi_buser(15) <= \<const0>\;
  s_axi_buser(14) <= \<const0>\;
  s_axi_buser(13) <= \<const0>\;
  s_axi_buser(12) <= \<const0>\;
  s_axi_buser(11) <= \<const0>\;
  s_axi_buser(10) <= \<const0>\;
  s_axi_buser(9) <= \<const0>\;
  s_axi_buser(8) <= \<const0>\;
  s_axi_buser(7) <= \<const0>\;
  s_axi_buser(6) <= \<const0>\;
  s_axi_buser(5) <= \<const0>\;
  s_axi_buser(4) <= \<const0>\;
  s_axi_buser(3) <= \<const0>\;
  s_axi_buser(2) <= \<const0>\;
  s_axi_buser(1) <= \<const0>\;
  s_axi_buser(0) <= \<const0>\;
  s_axi_bvalid <= \<const0>\;
  s_axi_rdata(31) <= \<const0>\;
  s_axi_rdata(30) <= \<const0>\;
  s_axi_rdata(29) <= \<const0>\;
  s_axi_rdata(28) <= \<const0>\;
  s_axi_rdata(27) <= \<const0>\;
  s_axi_rdata(26) <= \<const0>\;
  s_axi_rdata(25) <= \<const0>\;
  s_axi_rdata(24) <= \<const0>\;
  s_axi_rdata(23) <= \<const0>\;
  s_axi_rdata(22) <= \<const0>\;
  s_axi_rdata(21) <= \<const0>\;
  s_axi_rdata(20) <= \<const0>\;
  s_axi_rdata(19) <= \<const0>\;
  s_axi_rdata(18) <= \<const0>\;
  s_axi_rdata(17) <= \<const0>\;
  s_axi_rdata(16) <= \<const0>\;
  s_axi_rdata(15) <= \<const0>\;
  s_axi_rdata(14) <= \<const0>\;
  s_axi_rdata(13) <= \<const0>\;
  s_axi_rdata(12) <= \<const0>\;
  s_axi_rdata(11) <= \<const0>\;
  s_axi_rdata(10) <= \<const0>\;
  s_axi_rdata(9) <= \<const0>\;
  s_axi_rdata(8) <= \<const0>\;
  s_axi_rdata(7) <= \<const0>\;
  s_axi_rdata(6) <= \<const0>\;
  s_axi_rdata(5) <= \<const0>\;
  s_axi_rdata(4) <= \<const0>\;
  s_axi_rdata(3) <= \<const0>\;
  s_axi_rdata(2) <= \<const0>\;
  s_axi_rdata(1) <= \<const0>\;
  s_axi_rdata(0) <= \<const0>\;
  s_axi_rid(0) <= \<const0>\;
  s_axi_rlast <= \<const0>\;
  s_axi_rresp(1) <= \<const0>\;
  s_axi_rresp(0) <= \<const0>\;
  s_axi_ruser(1023) <= \<const0>\;
  s_axi_ruser(1022) <= \<const0>\;
  s_axi_ruser(1021) <= \<const0>\;
  s_axi_ruser(1020) <= \<const0>\;
  s_axi_ruser(1019) <= \<const0>\;
  s_axi_ruser(1018) <= \<const0>\;
  s_axi_ruser(1017) <= \<const0>\;
  s_axi_ruser(1016) <= \<const0>\;
  s_axi_ruser(1015) <= \<const0>\;
  s_axi_ruser(1014) <= \<const0>\;
  s_axi_ruser(1013) <= \<const0>\;
  s_axi_ruser(1012) <= \<const0>\;
  s_axi_ruser(1011) <= \<const0>\;
  s_axi_ruser(1010) <= \<const0>\;
  s_axi_ruser(1009) <= \<const0>\;
  s_axi_ruser(1008) <= \<const0>\;
  s_axi_ruser(1007) <= \<const0>\;
  s_axi_ruser(1006) <= \<const0>\;
  s_axi_ruser(1005) <= \<const0>\;
  s_axi_ruser(1004) <= \<const0>\;
  s_axi_ruser(1003) <= \<const0>\;
  s_axi_ruser(1002) <= \<const0>\;
  s_axi_ruser(1001) <= \<const0>\;
  s_axi_ruser(1000) <= \<const0>\;
  s_axi_ruser(999) <= \<const0>\;
  s_axi_ruser(998) <= \<const0>\;
  s_axi_ruser(997) <= \<const0>\;
  s_axi_ruser(996) <= \<const0>\;
  s_axi_ruser(995) <= \<const0>\;
  s_axi_ruser(994) <= \<const0>\;
  s_axi_ruser(993) <= \<const0>\;
  s_axi_ruser(992) <= \<const0>\;
  s_axi_ruser(991) <= \<const0>\;
  s_axi_ruser(990) <= \<const0>\;
  s_axi_ruser(989) <= \<const0>\;
  s_axi_ruser(988) <= \<const0>\;
  s_axi_ruser(987) <= \<const0>\;
  s_axi_ruser(986) <= \<const0>\;
  s_axi_ruser(985) <= \<const0>\;
  s_axi_ruser(984) <= \<const0>\;
  s_axi_ruser(983) <= \<const0>\;
  s_axi_ruser(982) <= \<const0>\;
  s_axi_ruser(981) <= \<const0>\;
  s_axi_ruser(980) <= \<const0>\;
  s_axi_ruser(979) <= \<const0>\;
  s_axi_ruser(978) <= \<const0>\;
  s_axi_ruser(977) <= \<const0>\;
  s_axi_ruser(976) <= \<const0>\;
  s_axi_ruser(975) <= \<const0>\;
  s_axi_ruser(974) <= \<const0>\;
  s_axi_ruser(973) <= \<const0>\;
  s_axi_ruser(972) <= \<const0>\;
  s_axi_ruser(971) <= \<const0>\;
  s_axi_ruser(970) <= \<const0>\;
  s_axi_ruser(969) <= \<const0>\;
  s_axi_ruser(968) <= \<const0>\;
  s_axi_ruser(967) <= \<const0>\;
  s_axi_ruser(966) <= \<const0>\;
  s_axi_ruser(965) <= \<const0>\;
  s_axi_ruser(964) <= \<const0>\;
  s_axi_ruser(963) <= \<const0>\;
  s_axi_ruser(962) <= \<const0>\;
  s_axi_ruser(961) <= \<const0>\;
  s_axi_ruser(960) <= \<const0>\;
  s_axi_ruser(959) <= \<const0>\;
  s_axi_ruser(958) <= \<const0>\;
  s_axi_ruser(957) <= \<const0>\;
  s_axi_ruser(956) <= \<const0>\;
  s_axi_ruser(955) <= \<const0>\;
  s_axi_ruser(954) <= \<const0>\;
  s_axi_ruser(953) <= \<const0>\;
  s_axi_ruser(952) <= \<const0>\;
  s_axi_ruser(951) <= \<const0>\;
  s_axi_ruser(950) <= \<const0>\;
  s_axi_ruser(949) <= \<const0>\;
  s_axi_ruser(948) <= \<const0>\;
  s_axi_ruser(947) <= \<const0>\;
  s_axi_ruser(946) <= \<const0>\;
  s_axi_ruser(945) <= \<const0>\;
  s_axi_ruser(944) <= \<const0>\;
  s_axi_ruser(943) <= \<const0>\;
  s_axi_ruser(942) <= \<const0>\;
  s_axi_ruser(941) <= \<const0>\;
  s_axi_ruser(940) <= \<const0>\;
  s_axi_ruser(939) <= \<const0>\;
  s_axi_ruser(938) <= \<const0>\;
  s_axi_ruser(937) <= \<const0>\;
  s_axi_ruser(936) <= \<const0>\;
  s_axi_ruser(935) <= \<const0>\;
  s_axi_ruser(934) <= \<const0>\;
  s_axi_ruser(933) <= \<const0>\;
  s_axi_ruser(932) <= \<const0>\;
  s_axi_ruser(931) <= \<const0>\;
  s_axi_ruser(930) <= \<const0>\;
  s_axi_ruser(929) <= \<const0>\;
  s_axi_ruser(928) <= \<const0>\;
  s_axi_ruser(927) <= \<const0>\;
  s_axi_ruser(926) <= \<const0>\;
  s_axi_ruser(925) <= \<const0>\;
  s_axi_ruser(924) <= \<const0>\;
  s_axi_ruser(923) <= \<const0>\;
  s_axi_ruser(922) <= \<const0>\;
  s_axi_ruser(921) <= \<const0>\;
  s_axi_ruser(920) <= \<const0>\;
  s_axi_ruser(919) <= \<const0>\;
  s_axi_ruser(918) <= \<const0>\;
  s_axi_ruser(917) <= \<const0>\;
  s_axi_ruser(916) <= \<const0>\;
  s_axi_ruser(915) <= \<const0>\;
  s_axi_ruser(914) <= \<const0>\;
  s_axi_ruser(913) <= \<const0>\;
  s_axi_ruser(912) <= \<const0>\;
  s_axi_ruser(911) <= \<const0>\;
  s_axi_ruser(910) <= \<const0>\;
  s_axi_ruser(909) <= \<const0>\;
  s_axi_ruser(908) <= \<const0>\;
  s_axi_ruser(907) <= \<const0>\;
  s_axi_ruser(906) <= \<const0>\;
  s_axi_ruser(905) <= \<const0>\;
  s_axi_ruser(904) <= \<const0>\;
  s_axi_ruser(903) <= \<const0>\;
  s_axi_ruser(902) <= \<const0>\;
  s_axi_ruser(901) <= \<const0>\;
  s_axi_ruser(900) <= \<const0>\;
  s_axi_ruser(899) <= \<const0>\;
  s_axi_ruser(898) <= \<const0>\;
  s_axi_ruser(897) <= \<const0>\;
  s_axi_ruser(896) <= \<const0>\;
  s_axi_ruser(895) <= \<const0>\;
  s_axi_ruser(894) <= \<const0>\;
  s_axi_ruser(893) <= \<const0>\;
  s_axi_ruser(892) <= \<const0>\;
  s_axi_ruser(891) <= \<const0>\;
  s_axi_ruser(890) <= \<const0>\;
  s_axi_ruser(889) <= \<const0>\;
  s_axi_ruser(888) <= \<const0>\;
  s_axi_ruser(887) <= \<const0>\;
  s_axi_ruser(886) <= \<const0>\;
  s_axi_ruser(885) <= \<const0>\;
  s_axi_ruser(884) <= \<const0>\;
  s_axi_ruser(883) <= \<const0>\;
  s_axi_ruser(882) <= \<const0>\;
  s_axi_ruser(881) <= \<const0>\;
  s_axi_ruser(880) <= \<const0>\;
  s_axi_ruser(879) <= \<const0>\;
  s_axi_ruser(878) <= \<const0>\;
  s_axi_ruser(877) <= \<const0>\;
  s_axi_ruser(876) <= \<const0>\;
  s_axi_ruser(875) <= \<const0>\;
  s_axi_ruser(874) <= \<const0>\;
  s_axi_ruser(873) <= \<const0>\;
  s_axi_ruser(872) <= \<const0>\;
  s_axi_ruser(871) <= \<const0>\;
  s_axi_ruser(870) <= \<const0>\;
  s_axi_ruser(869) <= \<const0>\;
  s_axi_ruser(868) <= \<const0>\;
  s_axi_ruser(867) <= \<const0>\;
  s_axi_ruser(866) <= \<const0>\;
  s_axi_ruser(865) <= \<const0>\;
  s_axi_ruser(864) <= \<const0>\;
  s_axi_ruser(863) <= \<const0>\;
  s_axi_ruser(862) <= \<const0>\;
  s_axi_ruser(861) <= \<const0>\;
  s_axi_ruser(860) <= \<const0>\;
  s_axi_ruser(859) <= \<const0>\;
  s_axi_ruser(858) <= \<const0>\;
  s_axi_ruser(857) <= \<const0>\;
  s_axi_ruser(856) <= \<const0>\;
  s_axi_ruser(855) <= \<const0>\;
  s_axi_ruser(854) <= \<const0>\;
  s_axi_ruser(853) <= \<const0>\;
  s_axi_ruser(852) <= \<const0>\;
  s_axi_ruser(851) <= \<const0>\;
  s_axi_ruser(850) <= \<const0>\;
  s_axi_ruser(849) <= \<const0>\;
  s_axi_ruser(848) <= \<const0>\;
  s_axi_ruser(847) <= \<const0>\;
  s_axi_ruser(846) <= \<const0>\;
  s_axi_ruser(845) <= \<const0>\;
  s_axi_ruser(844) <= \<const0>\;
  s_axi_ruser(843) <= \<const0>\;
  s_axi_ruser(842) <= \<const0>\;
  s_axi_ruser(841) <= \<const0>\;
  s_axi_ruser(840) <= \<const0>\;
  s_axi_ruser(839) <= \<const0>\;
  s_axi_ruser(838) <= \<const0>\;
  s_axi_ruser(837) <= \<const0>\;
  s_axi_ruser(836) <= \<const0>\;
  s_axi_ruser(835) <= \<const0>\;
  s_axi_ruser(834) <= \<const0>\;
  s_axi_ruser(833) <= \<const0>\;
  s_axi_ruser(832) <= \<const0>\;
  s_axi_ruser(831) <= \<const0>\;
  s_axi_ruser(830) <= \<const0>\;
  s_axi_ruser(829) <= \<const0>\;
  s_axi_ruser(828) <= \<const0>\;
  s_axi_ruser(827) <= \<const0>\;
  s_axi_ruser(826) <= \<const0>\;
  s_axi_ruser(825) <= \<const0>\;
  s_axi_ruser(824) <= \<const0>\;
  s_axi_ruser(823) <= \<const0>\;
  s_axi_ruser(822) <= \<const0>\;
  s_axi_ruser(821) <= \<const0>\;
  s_axi_ruser(820) <= \<const0>\;
  s_axi_ruser(819) <= \<const0>\;
  s_axi_ruser(818) <= \<const0>\;
  s_axi_ruser(817) <= \<const0>\;
  s_axi_ruser(816) <= \<const0>\;
  s_axi_ruser(815) <= \<const0>\;
  s_axi_ruser(814) <= \<const0>\;
  s_axi_ruser(813) <= \<const0>\;
  s_axi_ruser(812) <= \<const0>\;
  s_axi_ruser(811) <= \<const0>\;
  s_axi_ruser(810) <= \<const0>\;
  s_axi_ruser(809) <= \<const0>\;
  s_axi_ruser(808) <= \<const0>\;
  s_axi_ruser(807) <= \<const0>\;
  s_axi_ruser(806) <= \<const0>\;
  s_axi_ruser(805) <= \<const0>\;
  s_axi_ruser(804) <= \<const0>\;
  s_axi_ruser(803) <= \<const0>\;
  s_axi_ruser(802) <= \<const0>\;
  s_axi_ruser(801) <= \<const0>\;
  s_axi_ruser(800) <= \<const0>\;
  s_axi_ruser(799) <= \<const0>\;
  s_axi_ruser(798) <= \<const0>\;
  s_axi_ruser(797) <= \<const0>\;
  s_axi_ruser(796) <= \<const0>\;
  s_axi_ruser(795) <= \<const0>\;
  s_axi_ruser(794) <= \<const0>\;
  s_axi_ruser(793) <= \<const0>\;
  s_axi_ruser(792) <= \<const0>\;
  s_axi_ruser(791) <= \<const0>\;
  s_axi_ruser(790) <= \<const0>\;
  s_axi_ruser(789) <= \<const0>\;
  s_axi_ruser(788) <= \<const0>\;
  s_axi_ruser(787) <= \<const0>\;
  s_axi_ruser(786) <= \<const0>\;
  s_axi_ruser(785) <= \<const0>\;
  s_axi_ruser(784) <= \<const0>\;
  s_axi_ruser(783) <= \<const0>\;
  s_axi_ruser(782) <= \<const0>\;
  s_axi_ruser(781) <= \<const0>\;
  s_axi_ruser(780) <= \<const0>\;
  s_axi_ruser(779) <= \<const0>\;
  s_axi_ruser(778) <= \<const0>\;
  s_axi_ruser(777) <= \<const0>\;
  s_axi_ruser(776) <= \<const0>\;
  s_axi_ruser(775) <= \<const0>\;
  s_axi_ruser(774) <= \<const0>\;
  s_axi_ruser(773) <= \<const0>\;
  s_axi_ruser(772) <= \<const0>\;
  s_axi_ruser(771) <= \<const0>\;
  s_axi_ruser(770) <= \<const0>\;
  s_axi_ruser(769) <= \<const0>\;
  s_axi_ruser(768) <= \<const0>\;
  s_axi_ruser(767) <= \<const0>\;
  s_axi_ruser(766) <= \<const0>\;
  s_axi_ruser(765) <= \<const0>\;
  s_axi_ruser(764) <= \<const0>\;
  s_axi_ruser(763) <= \<const0>\;
  s_axi_ruser(762) <= \<const0>\;
  s_axi_ruser(761) <= \<const0>\;
  s_axi_ruser(760) <= \<const0>\;
  s_axi_ruser(759) <= \<const0>\;
  s_axi_ruser(758) <= \<const0>\;
  s_axi_ruser(757) <= \<const0>\;
  s_axi_ruser(756) <= \<const0>\;
  s_axi_ruser(755) <= \<const0>\;
  s_axi_ruser(754) <= \<const0>\;
  s_axi_ruser(753) <= \<const0>\;
  s_axi_ruser(752) <= \<const0>\;
  s_axi_ruser(751) <= \<const0>\;
  s_axi_ruser(750) <= \<const0>\;
  s_axi_ruser(749) <= \<const0>\;
  s_axi_ruser(748) <= \<const0>\;
  s_axi_ruser(747) <= \<const0>\;
  s_axi_ruser(746) <= \<const0>\;
  s_axi_ruser(745) <= \<const0>\;
  s_axi_ruser(744) <= \<const0>\;
  s_axi_ruser(743) <= \<const0>\;
  s_axi_ruser(742) <= \<const0>\;
  s_axi_ruser(741) <= \<const0>\;
  s_axi_ruser(740) <= \<const0>\;
  s_axi_ruser(739) <= \<const0>\;
  s_axi_ruser(738) <= \<const0>\;
  s_axi_ruser(737) <= \<const0>\;
  s_axi_ruser(736) <= \<const0>\;
  s_axi_ruser(735) <= \<const0>\;
  s_axi_ruser(734) <= \<const0>\;
  s_axi_ruser(733) <= \<const0>\;
  s_axi_ruser(732) <= \<const0>\;
  s_axi_ruser(731) <= \<const0>\;
  s_axi_ruser(730) <= \<const0>\;
  s_axi_ruser(729) <= \<const0>\;
  s_axi_ruser(728) <= \<const0>\;
  s_axi_ruser(727) <= \<const0>\;
  s_axi_ruser(726) <= \<const0>\;
  s_axi_ruser(725) <= \<const0>\;
  s_axi_ruser(724) <= \<const0>\;
  s_axi_ruser(723) <= \<const0>\;
  s_axi_ruser(722) <= \<const0>\;
  s_axi_ruser(721) <= \<const0>\;
  s_axi_ruser(720) <= \<const0>\;
  s_axi_ruser(719) <= \<const0>\;
  s_axi_ruser(718) <= \<const0>\;
  s_axi_ruser(717) <= \<const0>\;
  s_axi_ruser(716) <= \<const0>\;
  s_axi_ruser(715) <= \<const0>\;
  s_axi_ruser(714) <= \<const0>\;
  s_axi_ruser(713) <= \<const0>\;
  s_axi_ruser(712) <= \<const0>\;
  s_axi_ruser(711) <= \<const0>\;
  s_axi_ruser(710) <= \<const0>\;
  s_axi_ruser(709) <= \<const0>\;
  s_axi_ruser(708) <= \<const0>\;
  s_axi_ruser(707) <= \<const0>\;
  s_axi_ruser(706) <= \<const0>\;
  s_axi_ruser(705) <= \<const0>\;
  s_axi_ruser(704) <= \<const0>\;
  s_axi_ruser(703) <= \<const0>\;
  s_axi_ruser(702) <= \<const0>\;
  s_axi_ruser(701) <= \<const0>\;
  s_axi_ruser(700) <= \<const0>\;
  s_axi_ruser(699) <= \<const0>\;
  s_axi_ruser(698) <= \<const0>\;
  s_axi_ruser(697) <= \<const0>\;
  s_axi_ruser(696) <= \<const0>\;
  s_axi_ruser(695) <= \<const0>\;
  s_axi_ruser(694) <= \<const0>\;
  s_axi_ruser(693) <= \<const0>\;
  s_axi_ruser(692) <= \<const0>\;
  s_axi_ruser(691) <= \<const0>\;
  s_axi_ruser(690) <= \<const0>\;
  s_axi_ruser(689) <= \<const0>\;
  s_axi_ruser(688) <= \<const0>\;
  s_axi_ruser(687) <= \<const0>\;
  s_axi_ruser(686) <= \<const0>\;
  s_axi_ruser(685) <= \<const0>\;
  s_axi_ruser(684) <= \<const0>\;
  s_axi_ruser(683) <= \<const0>\;
  s_axi_ruser(682) <= \<const0>\;
  s_axi_ruser(681) <= \<const0>\;
  s_axi_ruser(680) <= \<const0>\;
  s_axi_ruser(679) <= \<const0>\;
  s_axi_ruser(678) <= \<const0>\;
  s_axi_ruser(677) <= \<const0>\;
  s_axi_ruser(676) <= \<const0>\;
  s_axi_ruser(675) <= \<const0>\;
  s_axi_ruser(674) <= \<const0>\;
  s_axi_ruser(673) <= \<const0>\;
  s_axi_ruser(672) <= \<const0>\;
  s_axi_ruser(671) <= \<const0>\;
  s_axi_ruser(670) <= \<const0>\;
  s_axi_ruser(669) <= \<const0>\;
  s_axi_ruser(668) <= \<const0>\;
  s_axi_ruser(667) <= \<const0>\;
  s_axi_ruser(666) <= \<const0>\;
  s_axi_ruser(665) <= \<const0>\;
  s_axi_ruser(664) <= \<const0>\;
  s_axi_ruser(663) <= \<const0>\;
  s_axi_ruser(662) <= \<const0>\;
  s_axi_ruser(661) <= \<const0>\;
  s_axi_ruser(660) <= \<const0>\;
  s_axi_ruser(659) <= \<const0>\;
  s_axi_ruser(658) <= \<const0>\;
  s_axi_ruser(657) <= \<const0>\;
  s_axi_ruser(656) <= \<const0>\;
  s_axi_ruser(655) <= \<const0>\;
  s_axi_ruser(654) <= \<const0>\;
  s_axi_ruser(653) <= \<const0>\;
  s_axi_ruser(652) <= \<const0>\;
  s_axi_ruser(651) <= \<const0>\;
  s_axi_ruser(650) <= \<const0>\;
  s_axi_ruser(649) <= \<const0>\;
  s_axi_ruser(648) <= \<const0>\;
  s_axi_ruser(647) <= \<const0>\;
  s_axi_ruser(646) <= \<const0>\;
  s_axi_ruser(645) <= \<const0>\;
  s_axi_ruser(644) <= \<const0>\;
  s_axi_ruser(643) <= \<const0>\;
  s_axi_ruser(642) <= \<const0>\;
  s_axi_ruser(641) <= \<const0>\;
  s_axi_ruser(640) <= \<const0>\;
  s_axi_ruser(639) <= \<const0>\;
  s_axi_ruser(638) <= \<const0>\;
  s_axi_ruser(637) <= \<const0>\;
  s_axi_ruser(636) <= \<const0>\;
  s_axi_ruser(635) <= \<const0>\;
  s_axi_ruser(634) <= \<const0>\;
  s_axi_ruser(633) <= \<const0>\;
  s_axi_ruser(632) <= \<const0>\;
  s_axi_ruser(631) <= \<const0>\;
  s_axi_ruser(630) <= \<const0>\;
  s_axi_ruser(629) <= \<const0>\;
  s_axi_ruser(628) <= \<const0>\;
  s_axi_ruser(627) <= \<const0>\;
  s_axi_ruser(626) <= \<const0>\;
  s_axi_ruser(625) <= \<const0>\;
  s_axi_ruser(624) <= \<const0>\;
  s_axi_ruser(623) <= \<const0>\;
  s_axi_ruser(622) <= \<const0>\;
  s_axi_ruser(621) <= \<const0>\;
  s_axi_ruser(620) <= \<const0>\;
  s_axi_ruser(619) <= \<const0>\;
  s_axi_ruser(618) <= \<const0>\;
  s_axi_ruser(617) <= \<const0>\;
  s_axi_ruser(616) <= \<const0>\;
  s_axi_ruser(615) <= \<const0>\;
  s_axi_ruser(614) <= \<const0>\;
  s_axi_ruser(613) <= \<const0>\;
  s_axi_ruser(612) <= \<const0>\;
  s_axi_ruser(611) <= \<const0>\;
  s_axi_ruser(610) <= \<const0>\;
  s_axi_ruser(609) <= \<const0>\;
  s_axi_ruser(608) <= \<const0>\;
  s_axi_ruser(607) <= \<const0>\;
  s_axi_ruser(606) <= \<const0>\;
  s_axi_ruser(605) <= \<const0>\;
  s_axi_ruser(604) <= \<const0>\;
  s_axi_ruser(603) <= \<const0>\;
  s_axi_ruser(602) <= \<const0>\;
  s_axi_ruser(601) <= \<const0>\;
  s_axi_ruser(600) <= \<const0>\;
  s_axi_ruser(599) <= \<const0>\;
  s_axi_ruser(598) <= \<const0>\;
  s_axi_ruser(597) <= \<const0>\;
  s_axi_ruser(596) <= \<const0>\;
  s_axi_ruser(595) <= \<const0>\;
  s_axi_ruser(594) <= \<const0>\;
  s_axi_ruser(593) <= \<const0>\;
  s_axi_ruser(592) <= \<const0>\;
  s_axi_ruser(591) <= \<const0>\;
  s_axi_ruser(590) <= \<const0>\;
  s_axi_ruser(589) <= \<const0>\;
  s_axi_ruser(588) <= \<const0>\;
  s_axi_ruser(587) <= \<const0>\;
  s_axi_ruser(586) <= \<const0>\;
  s_axi_ruser(585) <= \<const0>\;
  s_axi_ruser(584) <= \<const0>\;
  s_axi_ruser(583) <= \<const0>\;
  s_axi_ruser(582) <= \<const0>\;
  s_axi_ruser(581) <= \<const0>\;
  s_axi_ruser(580) <= \<const0>\;
  s_axi_ruser(579) <= \<const0>\;
  s_axi_ruser(578) <= \<const0>\;
  s_axi_ruser(577) <= \<const0>\;
  s_axi_ruser(576) <= \<const0>\;
  s_axi_ruser(575) <= \<const0>\;
  s_axi_ruser(574) <= \<const0>\;
  s_axi_ruser(573) <= \<const0>\;
  s_axi_ruser(572) <= \<const0>\;
  s_axi_ruser(571) <= \<const0>\;
  s_axi_ruser(570) <= \<const0>\;
  s_axi_ruser(569) <= \<const0>\;
  s_axi_ruser(568) <= \<const0>\;
  s_axi_ruser(567) <= \<const0>\;
  s_axi_ruser(566) <= \<const0>\;
  s_axi_ruser(565) <= \<const0>\;
  s_axi_ruser(564) <= \<const0>\;
  s_axi_ruser(563) <= \<const0>\;
  s_axi_ruser(562) <= \<const0>\;
  s_axi_ruser(561) <= \<const0>\;
  s_axi_ruser(560) <= \<const0>\;
  s_axi_ruser(559) <= \<const0>\;
  s_axi_ruser(558) <= \<const0>\;
  s_axi_ruser(557) <= \<const0>\;
  s_axi_ruser(556) <= \<const0>\;
  s_axi_ruser(555) <= \<const0>\;
  s_axi_ruser(554) <= \<const0>\;
  s_axi_ruser(553) <= \<const0>\;
  s_axi_ruser(552) <= \<const0>\;
  s_axi_ruser(551) <= \<const0>\;
  s_axi_ruser(550) <= \<const0>\;
  s_axi_ruser(549) <= \<const0>\;
  s_axi_ruser(548) <= \<const0>\;
  s_axi_ruser(547) <= \<const0>\;
  s_axi_ruser(546) <= \<const0>\;
  s_axi_ruser(545) <= \<const0>\;
  s_axi_ruser(544) <= \<const0>\;
  s_axi_ruser(543) <= \<const0>\;
  s_axi_ruser(542) <= \<const0>\;
  s_axi_ruser(541) <= \<const0>\;
  s_axi_ruser(540) <= \<const0>\;
  s_axi_ruser(539) <= \<const0>\;
  s_axi_ruser(538) <= \<const0>\;
  s_axi_ruser(537) <= \<const0>\;
  s_axi_ruser(536) <= \<const0>\;
  s_axi_ruser(535) <= \<const0>\;
  s_axi_ruser(534) <= \<const0>\;
  s_axi_ruser(533) <= \<const0>\;
  s_axi_ruser(532) <= \<const0>\;
  s_axi_ruser(531) <= \<const0>\;
  s_axi_ruser(530) <= \<const0>\;
  s_axi_ruser(529) <= \<const0>\;
  s_axi_ruser(528) <= \<const0>\;
  s_axi_ruser(527) <= \<const0>\;
  s_axi_ruser(526) <= \<const0>\;
  s_axi_ruser(525) <= \<const0>\;
  s_axi_ruser(524) <= \<const0>\;
  s_axi_ruser(523) <= \<const0>\;
  s_axi_ruser(522) <= \<const0>\;
  s_axi_ruser(521) <= \<const0>\;
  s_axi_ruser(520) <= \<const0>\;
  s_axi_ruser(519) <= \<const0>\;
  s_axi_ruser(518) <= \<const0>\;
  s_axi_ruser(517) <= \<const0>\;
  s_axi_ruser(516) <= \<const0>\;
  s_axi_ruser(515) <= \<const0>\;
  s_axi_ruser(514) <= \<const0>\;
  s_axi_ruser(513) <= \<const0>\;
  s_axi_ruser(512) <= \<const0>\;
  s_axi_ruser(511) <= \<const0>\;
  s_axi_ruser(510) <= \<const0>\;
  s_axi_ruser(509) <= \<const0>\;
  s_axi_ruser(508) <= \<const0>\;
  s_axi_ruser(507) <= \<const0>\;
  s_axi_ruser(506) <= \<const0>\;
  s_axi_ruser(505) <= \<const0>\;
  s_axi_ruser(504) <= \<const0>\;
  s_axi_ruser(503) <= \<const0>\;
  s_axi_ruser(502) <= \<const0>\;
  s_axi_ruser(501) <= \<const0>\;
  s_axi_ruser(500) <= \<const0>\;
  s_axi_ruser(499) <= \<const0>\;
  s_axi_ruser(498) <= \<const0>\;
  s_axi_ruser(497) <= \<const0>\;
  s_axi_ruser(496) <= \<const0>\;
  s_axi_ruser(495) <= \<const0>\;
  s_axi_ruser(494) <= \<const0>\;
  s_axi_ruser(493) <= \<const0>\;
  s_axi_ruser(492) <= \<const0>\;
  s_axi_ruser(491) <= \<const0>\;
  s_axi_ruser(490) <= \<const0>\;
  s_axi_ruser(489) <= \<const0>\;
  s_axi_ruser(488) <= \<const0>\;
  s_axi_ruser(487) <= \<const0>\;
  s_axi_ruser(486) <= \<const0>\;
  s_axi_ruser(485) <= \<const0>\;
  s_axi_ruser(484) <= \<const0>\;
  s_axi_ruser(483) <= \<const0>\;
  s_axi_ruser(482) <= \<const0>\;
  s_axi_ruser(481) <= \<const0>\;
  s_axi_ruser(480) <= \<const0>\;
  s_axi_ruser(479) <= \<const0>\;
  s_axi_ruser(478) <= \<const0>\;
  s_axi_ruser(477) <= \<const0>\;
  s_axi_ruser(476) <= \<const0>\;
  s_axi_ruser(475) <= \<const0>\;
  s_axi_ruser(474) <= \<const0>\;
  s_axi_ruser(473) <= \<const0>\;
  s_axi_ruser(472) <= \<const0>\;
  s_axi_ruser(471) <= \<const0>\;
  s_axi_ruser(470) <= \<const0>\;
  s_axi_ruser(469) <= \<const0>\;
  s_axi_ruser(468) <= \<const0>\;
  s_axi_ruser(467) <= \<const0>\;
  s_axi_ruser(466) <= \<const0>\;
  s_axi_ruser(465) <= \<const0>\;
  s_axi_ruser(464) <= \<const0>\;
  s_axi_ruser(463) <= \<const0>\;
  s_axi_ruser(462) <= \<const0>\;
  s_axi_ruser(461) <= \<const0>\;
  s_axi_ruser(460) <= \<const0>\;
  s_axi_ruser(459) <= \<const0>\;
  s_axi_ruser(458) <= \<const0>\;
  s_axi_ruser(457) <= \<const0>\;
  s_axi_ruser(456) <= \<const0>\;
  s_axi_ruser(455) <= \<const0>\;
  s_axi_ruser(454) <= \<const0>\;
  s_axi_ruser(453) <= \<const0>\;
  s_axi_ruser(452) <= \<const0>\;
  s_axi_ruser(451) <= \<const0>\;
  s_axi_ruser(450) <= \<const0>\;
  s_axi_ruser(449) <= \<const0>\;
  s_axi_ruser(448) <= \<const0>\;
  s_axi_ruser(447) <= \<const0>\;
  s_axi_ruser(446) <= \<const0>\;
  s_axi_ruser(445) <= \<const0>\;
  s_axi_ruser(444) <= \<const0>\;
  s_axi_ruser(443) <= \<const0>\;
  s_axi_ruser(442) <= \<const0>\;
  s_axi_ruser(441) <= \<const0>\;
  s_axi_ruser(440) <= \<const0>\;
  s_axi_ruser(439) <= \<const0>\;
  s_axi_ruser(438) <= \<const0>\;
  s_axi_ruser(437) <= \<const0>\;
  s_axi_ruser(436) <= \<const0>\;
  s_axi_ruser(435) <= \<const0>\;
  s_axi_ruser(434) <= \<const0>\;
  s_axi_ruser(433) <= \<const0>\;
  s_axi_ruser(432) <= \<const0>\;
  s_axi_ruser(431) <= \<const0>\;
  s_axi_ruser(430) <= \<const0>\;
  s_axi_ruser(429) <= \<const0>\;
  s_axi_ruser(428) <= \<const0>\;
  s_axi_ruser(427) <= \<const0>\;
  s_axi_ruser(426) <= \<const0>\;
  s_axi_ruser(425) <= \<const0>\;
  s_axi_ruser(424) <= \<const0>\;
  s_axi_ruser(423) <= \<const0>\;
  s_axi_ruser(422) <= \<const0>\;
  s_axi_ruser(421) <= \<const0>\;
  s_axi_ruser(420) <= \<const0>\;
  s_axi_ruser(419) <= \<const0>\;
  s_axi_ruser(418) <= \<const0>\;
  s_axi_ruser(417) <= \<const0>\;
  s_axi_ruser(416) <= \<const0>\;
  s_axi_ruser(415) <= \<const0>\;
  s_axi_ruser(414) <= \<const0>\;
  s_axi_ruser(413) <= \<const0>\;
  s_axi_ruser(412) <= \<const0>\;
  s_axi_ruser(411) <= \<const0>\;
  s_axi_ruser(410) <= \<const0>\;
  s_axi_ruser(409) <= \<const0>\;
  s_axi_ruser(408) <= \<const0>\;
  s_axi_ruser(407) <= \<const0>\;
  s_axi_ruser(406) <= \<const0>\;
  s_axi_ruser(405) <= \<const0>\;
  s_axi_ruser(404) <= \<const0>\;
  s_axi_ruser(403) <= \<const0>\;
  s_axi_ruser(402) <= \<const0>\;
  s_axi_ruser(401) <= \<const0>\;
  s_axi_ruser(400) <= \<const0>\;
  s_axi_ruser(399) <= \<const0>\;
  s_axi_ruser(398) <= \<const0>\;
  s_axi_ruser(397) <= \<const0>\;
  s_axi_ruser(396) <= \<const0>\;
  s_axi_ruser(395) <= \<const0>\;
  s_axi_ruser(394) <= \<const0>\;
  s_axi_ruser(393) <= \<const0>\;
  s_axi_ruser(392) <= \<const0>\;
  s_axi_ruser(391) <= \<const0>\;
  s_axi_ruser(390) <= \<const0>\;
  s_axi_ruser(389) <= \<const0>\;
  s_axi_ruser(388) <= \<const0>\;
  s_axi_ruser(387) <= \<const0>\;
  s_axi_ruser(386) <= \<const0>\;
  s_axi_ruser(385) <= \<const0>\;
  s_axi_ruser(384) <= \<const0>\;
  s_axi_ruser(383) <= \<const0>\;
  s_axi_ruser(382) <= \<const0>\;
  s_axi_ruser(381) <= \<const0>\;
  s_axi_ruser(380) <= \<const0>\;
  s_axi_ruser(379) <= \<const0>\;
  s_axi_ruser(378) <= \<const0>\;
  s_axi_ruser(377) <= \<const0>\;
  s_axi_ruser(376) <= \<const0>\;
  s_axi_ruser(375) <= \<const0>\;
  s_axi_ruser(374) <= \<const0>\;
  s_axi_ruser(373) <= \<const0>\;
  s_axi_ruser(372) <= \<const0>\;
  s_axi_ruser(371) <= \<const0>\;
  s_axi_ruser(370) <= \<const0>\;
  s_axi_ruser(369) <= \<const0>\;
  s_axi_ruser(368) <= \<const0>\;
  s_axi_ruser(367) <= \<const0>\;
  s_axi_ruser(366) <= \<const0>\;
  s_axi_ruser(365) <= \<const0>\;
  s_axi_ruser(364) <= \<const0>\;
  s_axi_ruser(363) <= \<const0>\;
  s_axi_ruser(362) <= \<const0>\;
  s_axi_ruser(361) <= \<const0>\;
  s_axi_ruser(360) <= \<const0>\;
  s_axi_ruser(359) <= \<const0>\;
  s_axi_ruser(358) <= \<const0>\;
  s_axi_ruser(357) <= \<const0>\;
  s_axi_ruser(356) <= \<const0>\;
  s_axi_ruser(355) <= \<const0>\;
  s_axi_ruser(354) <= \<const0>\;
  s_axi_ruser(353) <= \<const0>\;
  s_axi_ruser(352) <= \<const0>\;
  s_axi_ruser(351) <= \<const0>\;
  s_axi_ruser(350) <= \<const0>\;
  s_axi_ruser(349) <= \<const0>\;
  s_axi_ruser(348) <= \<const0>\;
  s_axi_ruser(347) <= \<const0>\;
  s_axi_ruser(346) <= \<const0>\;
  s_axi_ruser(345) <= \<const0>\;
  s_axi_ruser(344) <= \<const0>\;
  s_axi_ruser(343) <= \<const0>\;
  s_axi_ruser(342) <= \<const0>\;
  s_axi_ruser(341) <= \<const0>\;
  s_axi_ruser(340) <= \<const0>\;
  s_axi_ruser(339) <= \<const0>\;
  s_axi_ruser(338) <= \<const0>\;
  s_axi_ruser(337) <= \<const0>\;
  s_axi_ruser(336) <= \<const0>\;
  s_axi_ruser(335) <= \<const0>\;
  s_axi_ruser(334) <= \<const0>\;
  s_axi_ruser(333) <= \<const0>\;
  s_axi_ruser(332) <= \<const0>\;
  s_axi_ruser(331) <= \<const0>\;
  s_axi_ruser(330) <= \<const0>\;
  s_axi_ruser(329) <= \<const0>\;
  s_axi_ruser(328) <= \<const0>\;
  s_axi_ruser(327) <= \<const0>\;
  s_axi_ruser(326) <= \<const0>\;
  s_axi_ruser(325) <= \<const0>\;
  s_axi_ruser(324) <= \<const0>\;
  s_axi_ruser(323) <= \<const0>\;
  s_axi_ruser(322) <= \<const0>\;
  s_axi_ruser(321) <= \<const0>\;
  s_axi_ruser(320) <= \<const0>\;
  s_axi_ruser(319) <= \<const0>\;
  s_axi_ruser(318) <= \<const0>\;
  s_axi_ruser(317) <= \<const0>\;
  s_axi_ruser(316) <= \<const0>\;
  s_axi_ruser(315) <= \<const0>\;
  s_axi_ruser(314) <= \<const0>\;
  s_axi_ruser(313) <= \<const0>\;
  s_axi_ruser(312) <= \<const0>\;
  s_axi_ruser(311) <= \<const0>\;
  s_axi_ruser(310) <= \<const0>\;
  s_axi_ruser(309) <= \<const0>\;
  s_axi_ruser(308) <= \<const0>\;
  s_axi_ruser(307) <= \<const0>\;
  s_axi_ruser(306) <= \<const0>\;
  s_axi_ruser(305) <= \<const0>\;
  s_axi_ruser(304) <= \<const0>\;
  s_axi_ruser(303) <= \<const0>\;
  s_axi_ruser(302) <= \<const0>\;
  s_axi_ruser(301) <= \<const0>\;
  s_axi_ruser(300) <= \<const0>\;
  s_axi_ruser(299) <= \<const0>\;
  s_axi_ruser(298) <= \<const0>\;
  s_axi_ruser(297) <= \<const0>\;
  s_axi_ruser(296) <= \<const0>\;
  s_axi_ruser(295) <= \<const0>\;
  s_axi_ruser(294) <= \<const0>\;
  s_axi_ruser(293) <= \<const0>\;
  s_axi_ruser(292) <= \<const0>\;
  s_axi_ruser(291) <= \<const0>\;
  s_axi_ruser(290) <= \<const0>\;
  s_axi_ruser(289) <= \<const0>\;
  s_axi_ruser(288) <= \<const0>\;
  s_axi_ruser(287) <= \<const0>\;
  s_axi_ruser(286) <= \<const0>\;
  s_axi_ruser(285) <= \<const0>\;
  s_axi_ruser(284) <= \<const0>\;
  s_axi_ruser(283) <= \<const0>\;
  s_axi_ruser(282) <= \<const0>\;
  s_axi_ruser(281) <= \<const0>\;
  s_axi_ruser(280) <= \<const0>\;
  s_axi_ruser(279) <= \<const0>\;
  s_axi_ruser(278) <= \<const0>\;
  s_axi_ruser(277) <= \<const0>\;
  s_axi_ruser(276) <= \<const0>\;
  s_axi_ruser(275) <= \<const0>\;
  s_axi_ruser(274) <= \<const0>\;
  s_axi_ruser(273) <= \<const0>\;
  s_axi_ruser(272) <= \<const0>\;
  s_axi_ruser(271) <= \<const0>\;
  s_axi_ruser(270) <= \<const0>\;
  s_axi_ruser(269) <= \<const0>\;
  s_axi_ruser(268) <= \<const0>\;
  s_axi_ruser(267) <= \<const0>\;
  s_axi_ruser(266) <= \<const0>\;
  s_axi_ruser(265) <= \<const0>\;
  s_axi_ruser(264) <= \<const0>\;
  s_axi_ruser(263) <= \<const0>\;
  s_axi_ruser(262) <= \<const0>\;
  s_axi_ruser(261) <= \<const0>\;
  s_axi_ruser(260) <= \<const0>\;
  s_axi_ruser(259) <= \<const0>\;
  s_axi_ruser(258) <= \<const0>\;
  s_axi_ruser(257) <= \<const0>\;
  s_axi_ruser(256) <= \<const0>\;
  s_axi_ruser(255) <= \<const0>\;
  s_axi_ruser(254) <= \<const0>\;
  s_axi_ruser(253) <= \<const0>\;
  s_axi_ruser(252) <= \<const0>\;
  s_axi_ruser(251) <= \<const0>\;
  s_axi_ruser(250) <= \<const0>\;
  s_axi_ruser(249) <= \<const0>\;
  s_axi_ruser(248) <= \<const0>\;
  s_axi_ruser(247) <= \<const0>\;
  s_axi_ruser(246) <= \<const0>\;
  s_axi_ruser(245) <= \<const0>\;
  s_axi_ruser(244) <= \<const0>\;
  s_axi_ruser(243) <= \<const0>\;
  s_axi_ruser(242) <= \<const0>\;
  s_axi_ruser(241) <= \<const0>\;
  s_axi_ruser(240) <= \<const0>\;
  s_axi_ruser(239) <= \<const0>\;
  s_axi_ruser(238) <= \<const0>\;
  s_axi_ruser(237) <= \<const0>\;
  s_axi_ruser(236) <= \<const0>\;
  s_axi_ruser(235) <= \<const0>\;
  s_axi_ruser(234) <= \<const0>\;
  s_axi_ruser(233) <= \<const0>\;
  s_axi_ruser(232) <= \<const0>\;
  s_axi_ruser(231) <= \<const0>\;
  s_axi_ruser(230) <= \<const0>\;
  s_axi_ruser(229) <= \<const0>\;
  s_axi_ruser(228) <= \<const0>\;
  s_axi_ruser(227) <= \<const0>\;
  s_axi_ruser(226) <= \<const0>\;
  s_axi_ruser(225) <= \<const0>\;
  s_axi_ruser(224) <= \<const0>\;
  s_axi_ruser(223) <= \<const0>\;
  s_axi_ruser(222) <= \<const0>\;
  s_axi_ruser(221) <= \<const0>\;
  s_axi_ruser(220) <= \<const0>\;
  s_axi_ruser(219) <= \<const0>\;
  s_axi_ruser(218) <= \<const0>\;
  s_axi_ruser(217) <= \<const0>\;
  s_axi_ruser(216) <= \<const0>\;
  s_axi_ruser(215) <= \<const0>\;
  s_axi_ruser(214) <= \<const0>\;
  s_axi_ruser(213) <= \<const0>\;
  s_axi_ruser(212) <= \<const0>\;
  s_axi_ruser(211) <= \<const0>\;
  s_axi_ruser(210) <= \<const0>\;
  s_axi_ruser(209) <= \<const0>\;
  s_axi_ruser(208) <= \<const0>\;
  s_axi_ruser(207) <= \<const0>\;
  s_axi_ruser(206) <= \<const0>\;
  s_axi_ruser(205) <= \<const0>\;
  s_axi_ruser(204) <= \<const0>\;
  s_axi_ruser(203) <= \<const0>\;
  s_axi_ruser(202) <= \<const0>\;
  s_axi_ruser(201) <= \<const0>\;
  s_axi_ruser(200) <= \<const0>\;
  s_axi_ruser(199) <= \<const0>\;
  s_axi_ruser(198) <= \<const0>\;
  s_axi_ruser(197) <= \<const0>\;
  s_axi_ruser(196) <= \<const0>\;
  s_axi_ruser(195) <= \<const0>\;
  s_axi_ruser(194) <= \<const0>\;
  s_axi_ruser(193) <= \<const0>\;
  s_axi_ruser(192) <= \<const0>\;
  s_axi_ruser(191) <= \<const0>\;
  s_axi_ruser(190) <= \<const0>\;
  s_axi_ruser(189) <= \<const0>\;
  s_axi_ruser(188) <= \<const0>\;
  s_axi_ruser(187) <= \<const0>\;
  s_axi_ruser(186) <= \<const0>\;
  s_axi_ruser(185) <= \<const0>\;
  s_axi_ruser(184) <= \<const0>\;
  s_axi_ruser(183) <= \<const0>\;
  s_axi_ruser(182) <= \<const0>\;
  s_axi_ruser(181) <= \<const0>\;
  s_axi_ruser(180) <= \<const0>\;
  s_axi_ruser(179) <= \<const0>\;
  s_axi_ruser(178) <= \<const0>\;
  s_axi_ruser(177) <= \<const0>\;
  s_axi_ruser(176) <= \<const0>\;
  s_axi_ruser(175) <= \<const0>\;
  s_axi_ruser(174) <= \<const0>\;
  s_axi_ruser(173) <= \<const0>\;
  s_axi_ruser(172) <= \<const0>\;
  s_axi_ruser(171) <= \<const0>\;
  s_axi_ruser(170) <= \<const0>\;
  s_axi_ruser(169) <= \<const0>\;
  s_axi_ruser(168) <= \<const0>\;
  s_axi_ruser(167) <= \<const0>\;
  s_axi_ruser(166) <= \<const0>\;
  s_axi_ruser(165) <= \<const0>\;
  s_axi_ruser(164) <= \<const0>\;
  s_axi_ruser(163) <= \<const0>\;
  s_axi_ruser(162) <= \<const0>\;
  s_axi_ruser(161) <= \<const0>\;
  s_axi_ruser(160) <= \<const0>\;
  s_axi_ruser(159) <= \<const0>\;
  s_axi_ruser(158) <= \<const0>\;
  s_axi_ruser(157) <= \<const0>\;
  s_axi_ruser(156) <= \<const0>\;
  s_axi_ruser(155) <= \<const0>\;
  s_axi_ruser(154) <= \<const0>\;
  s_axi_ruser(153) <= \<const0>\;
  s_axi_ruser(152) <= \<const0>\;
  s_axi_ruser(151) <= \<const0>\;
  s_axi_ruser(150) <= \<const0>\;
  s_axi_ruser(149) <= \<const0>\;
  s_axi_ruser(148) <= \<const0>\;
  s_axi_ruser(147) <= \<const0>\;
  s_axi_ruser(146) <= \<const0>\;
  s_axi_ruser(145) <= \<const0>\;
  s_axi_ruser(144) <= \<const0>\;
  s_axi_ruser(143) <= \<const0>\;
  s_axi_ruser(142) <= \<const0>\;
  s_axi_ruser(141) <= \<const0>\;
  s_axi_ruser(140) <= \<const0>\;
  s_axi_ruser(139) <= \<const0>\;
  s_axi_ruser(138) <= \<const0>\;
  s_axi_ruser(137) <= \<const0>\;
  s_axi_ruser(136) <= \<const0>\;
  s_axi_ruser(135) <= \<const0>\;
  s_axi_ruser(134) <= \<const0>\;
  s_axi_ruser(133) <= \<const0>\;
  s_axi_ruser(132) <= \<const0>\;
  s_axi_ruser(131) <= \<const0>\;
  s_axi_ruser(130) <= \<const0>\;
  s_axi_ruser(129) <= \<const0>\;
  s_axi_ruser(128) <= \<const0>\;
  s_axi_ruser(127) <= \<const0>\;
  s_axi_ruser(126) <= \<const0>\;
  s_axi_ruser(125) <= \<const0>\;
  s_axi_ruser(124) <= \<const0>\;
  s_axi_ruser(123) <= \<const0>\;
  s_axi_ruser(122) <= \<const0>\;
  s_axi_ruser(121) <= \<const0>\;
  s_axi_ruser(120) <= \<const0>\;
  s_axi_ruser(119) <= \<const0>\;
  s_axi_ruser(118) <= \<const0>\;
  s_axi_ruser(117) <= \<const0>\;
  s_axi_ruser(116) <= \<const0>\;
  s_axi_ruser(115) <= \<const0>\;
  s_axi_ruser(114) <= \<const0>\;
  s_axi_ruser(113) <= \<const0>\;
  s_axi_ruser(112) <= \<const0>\;
  s_axi_ruser(111) <= \<const0>\;
  s_axi_ruser(110) <= \<const0>\;
  s_axi_ruser(109) <= \<const0>\;
  s_axi_ruser(108) <= \<const0>\;
  s_axi_ruser(107) <= \<const0>\;
  s_axi_ruser(106) <= \<const0>\;
  s_axi_ruser(105) <= \<const0>\;
  s_axi_ruser(104) <= \<const0>\;
  s_axi_ruser(103) <= \<const0>\;
  s_axi_ruser(102) <= \<const0>\;
  s_axi_ruser(101) <= \<const0>\;
  s_axi_ruser(100) <= \<const0>\;
  s_axi_ruser(99) <= \<const0>\;
  s_axi_ruser(98) <= \<const0>\;
  s_axi_ruser(97) <= \<const0>\;
  s_axi_ruser(96) <= \<const0>\;
  s_axi_ruser(95) <= \<const0>\;
  s_axi_ruser(94) <= \<const0>\;
  s_axi_ruser(93) <= \<const0>\;
  s_axi_ruser(92) <= \<const0>\;
  s_axi_ruser(91) <= \<const0>\;
  s_axi_ruser(90) <= \<const0>\;
  s_axi_ruser(89) <= \<const0>\;
  s_axi_ruser(88) <= \<const0>\;
  s_axi_ruser(87) <= \<const0>\;
  s_axi_ruser(86) <= \<const0>\;
  s_axi_ruser(85) <= \<const0>\;
  s_axi_ruser(84) <= \<const0>\;
  s_axi_ruser(83) <= \<const0>\;
  s_axi_ruser(82) <= \<const0>\;
  s_axi_ruser(81) <= \<const0>\;
  s_axi_ruser(80) <= \<const0>\;
  s_axi_ruser(79) <= \<const0>\;
  s_axi_ruser(78) <= \<const0>\;
  s_axi_ruser(77) <= \<const0>\;
  s_axi_ruser(76) <= \<const0>\;
  s_axi_ruser(75) <= \<const0>\;
  s_axi_ruser(74) <= \<const0>\;
  s_axi_ruser(73) <= \<const0>\;
  s_axi_ruser(72) <= \<const0>\;
  s_axi_ruser(71) <= \<const0>\;
  s_axi_ruser(70) <= \<const0>\;
  s_axi_ruser(69) <= \<const0>\;
  s_axi_ruser(68) <= \<const0>\;
  s_axi_ruser(67) <= \<const0>\;
  s_axi_ruser(66) <= \<const0>\;
  s_axi_ruser(65) <= \<const0>\;
  s_axi_ruser(64) <= \<const0>\;
  s_axi_ruser(63) <= \<const0>\;
  s_axi_ruser(62) <= \<const0>\;
  s_axi_ruser(61) <= \<const0>\;
  s_axi_ruser(60) <= \<const0>\;
  s_axi_ruser(59) <= \<const0>\;
  s_axi_ruser(58) <= \<const0>\;
  s_axi_ruser(57) <= \<const0>\;
  s_axi_ruser(56) <= \<const0>\;
  s_axi_ruser(55) <= \<const0>\;
  s_axi_ruser(54) <= \<const0>\;
  s_axi_ruser(53) <= \<const0>\;
  s_axi_ruser(52) <= \<const0>\;
  s_axi_ruser(51) <= \<const0>\;
  s_axi_ruser(50) <= \<const0>\;
  s_axi_ruser(49) <= \<const0>\;
  s_axi_ruser(48) <= \<const0>\;
  s_axi_ruser(47) <= \<const0>\;
  s_axi_ruser(46) <= \<const0>\;
  s_axi_ruser(45) <= \<const0>\;
  s_axi_ruser(44) <= \<const0>\;
  s_axi_ruser(43) <= \<const0>\;
  s_axi_ruser(42) <= \<const0>\;
  s_axi_ruser(41) <= \<const0>\;
  s_axi_ruser(40) <= \<const0>\;
  s_axi_ruser(39) <= \<const0>\;
  s_axi_ruser(38) <= \<const0>\;
  s_axi_ruser(37) <= \<const0>\;
  s_axi_ruser(36) <= \<const0>\;
  s_axi_ruser(35) <= \<const0>\;
  s_axi_ruser(34) <= \<const0>\;
  s_axi_ruser(33) <= \<const0>\;
  s_axi_ruser(32) <= \<const0>\;
  s_axi_ruser(31) <= \<const0>\;
  s_axi_ruser(30) <= \<const0>\;
  s_axi_ruser(29) <= \<const0>\;
  s_axi_ruser(28) <= \<const0>\;
  s_axi_ruser(27) <= \<const0>\;
  s_axi_ruser(26) <= \<const0>\;
  s_axi_ruser(25) <= \<const0>\;
  s_axi_ruser(24) <= \<const0>\;
  s_axi_ruser(23) <= \<const0>\;
  s_axi_ruser(22) <= \<const0>\;
  s_axi_ruser(21) <= \<const0>\;
  s_axi_ruser(20) <= \<const0>\;
  s_axi_ruser(19) <= \<const0>\;
  s_axi_ruser(18) <= \<const0>\;
  s_axi_ruser(17) <= \<const0>\;
  s_axi_ruser(16) <= \<const0>\;
  s_axi_ruser(15) <= \<const0>\;
  s_axi_ruser(14) <= \<const0>\;
  s_axi_ruser(13) <= \<const0>\;
  s_axi_ruser(12) <= \<const0>\;
  s_axi_ruser(11) <= \<const0>\;
  s_axi_ruser(10) <= \<const0>\;
  s_axi_ruser(9) <= \<const0>\;
  s_axi_ruser(8) <= \<const0>\;
  s_axi_ruser(7) <= \<const0>\;
  s_axi_ruser(6) <= \<const0>\;
  s_axi_ruser(5) <= \<const0>\;
  s_axi_ruser(4) <= \<const0>\;
  s_axi_ruser(3) <= \<const0>\;
  s_axi_ruser(2) <= \<const0>\;
  s_axi_ruser(1) <= \<const0>\;
  s_axi_ruser(0) <= \<const0>\;
  s_axi_rvalid <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
areset_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \aresetn_d_reg_n_0_[0]\,
      O => areset_i_1_n_0
    );
areset_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => areset_i_1_n_0,
      Q => areset,
      R => '0'
    );
\aresetn_d_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => aresetn,
      Q => \aresetn_d_reg_n_0_[0]\,
      R => '0'
    );
exit_inst: entity work.design_1_axi_smc_0_sc_exit_v1_0_9_exit
     port map (
      aclk => aclk,
      areset => areset,
      m_axi_arready => m_axi_arready,
      m_axi_arvalid => m_axi_arvalid,
      m_axi_awready => m_axi_awready,
      m_axi_awvalid => m_axi_awvalid,
      m_axi_bvalid => m_axi_bvalid,
      m_axi_rvalid => m_axi_rvalid,
      s_axi_arready => s_axi_arready,
      s_axi_arvalid => s_axi_arvalid,
      s_axi_awready => s_axi_awready,
      s_axi_awvalid => s_axi_awvalid,
      s_axi_bready => s_axi_bready,
      s_axi_rready => s_axi_rready
    );
m_axi_wvalid_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_axi_wvalid,
      I1 => areset,
      O => m_axi_wvalid
    );
s_axi_wready_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m_axi_wready,
      I1 => areset,
      O => s_axi_wready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo is
  port (
    \gen_normal_area.fifo_node_payld_full_i\ : out STD_LOGIC;
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 10 downto 0 );
    s_sc_aclk : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    areset_r : in STD_LOGIC;
    arb_stall_late : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_areset_r : in STD_LOGIC;
    s_sc_payld : in STD_LOGIC_VECTOR ( 10 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo : entity is "sc_node_v1_0_10_reg_fifo";
end design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo;

architecture STRUCTURE of design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo is
  signal empty_r : STD_LOGIC;
  signal \^gen_normal_area.fifo_node_payld_full_i\ : STD_LOGIC;
  signal \gen_single_rank.inst_cntr_n_0\ : STD_LOGIC;
  signal \gen_single_rank.inst_cntr_n_1\ : STD_LOGIC;
begin
  \gen_normal_area.fifo_node_payld_full_i\ <= \^gen_normal_area.fifo_node_payld_full_i\;
\gen_single_rank.data_reg[100]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(3),
      Q => m_sc_payld(3),
      R => '0'
    );
\gen_single_rank.data_reg[101]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(4),
      Q => m_sc_payld(4),
      R => '0'
    );
\gen_single_rank.data_reg[102]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(5),
      Q => m_sc_payld(5),
      R => '0'
    );
\gen_single_rank.data_reg[103]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(6),
      Q => m_sc_payld(6),
      R => '0'
    );
\gen_single_rank.data_reg[104]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(7),
      Q => m_sc_payld(7),
      R => '0'
    );
\gen_single_rank.data_reg[130]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(8),
      Q => m_sc_payld(8),
      R => '0'
    );
\gen_single_rank.data_reg[131]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(9),
      Q => m_sc_payld(9),
      R => '0'
    );
\gen_single_rank.data_reg[132]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(10),
      Q => m_sc_payld(10),
      R => '0'
    );
\gen_single_rank.data_reg[97]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(0),
      Q => m_sc_payld(0),
      R => '0'
    );
\gen_single_rank.data_reg[98]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(1),
      Q => m_sc_payld(1),
      R => '0'
    );
\gen_single_rank.data_reg[99]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(2),
      Q => m_sc_payld(2),
      R => '0'
    );
\gen_single_rank.empty_r_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \gen_single_rank.inst_cntr_n_1\,
      Q => empty_r,
      R => '0'
    );
\gen_single_rank.full_r_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \gen_single_rank.inst_cntr_n_0\,
      Q => \^gen_normal_area.fifo_node_payld_full_i\,
      R => '0'
    );
\gen_single_rank.inst_cntr\: entity work.\design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_8\
     port map (
      E(0) => E(0),
      arb_stall_late => arb_stall_late,
      areset_r => areset_r,
      empty_r => empty_r,
      \gen_normal_area.fifo_node_payld_full_i\ => \^gen_normal_area.fifo_node_payld_full_i\,
      \gen_pipe[1].pipe_reg[1][0]\ => \gen_single_rank.inst_cntr_n_1\,
      \gen_single_rank.empty_r_reg\ => \gen_single_rank.inst_cntr_n_0\,
      m_sc_areset_r => m_sc_areset_r,
      m_sc_recv(0) => m_sc_recv(0),
      s_sc_aclk => s_sc_aclk,
      s_sc_send(0) => s_sc_send(0)
    );
\m_sc_send[1]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => empty_r,
      O => m_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo_12 is
  port (
    \gen_normal_area.fifo_node_payld_full_i\ : out STD_LOGIC;
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 10 downto 0 );
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall_late : in STD_LOGIC;
    areset_r : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_areset_r : in STD_LOGIC;
    s_sc_payld : in STD_LOGIC_VECTOR ( 11 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo_12 : entity is "sc_node_v1_0_10_reg_fifo";
end design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo_12;

architecture STRUCTURE of design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo_12 is
  signal empty_r : STD_LOGIC;
  signal \gen_normal_area.fifo_node_payld_dout\ : STD_LOGIC_VECTOR ( 143 to 143 );
  signal \^gen_normal_area.fifo_node_payld_full_i\ : STD_LOGIC;
  signal \gen_single_rank.inst_cntr_n_0\ : STD_LOGIC;
  signal \gen_single_rank.inst_cntr_n_1\ : STD_LOGIC;
begin
  \gen_normal_area.fifo_node_payld_full_i\ <= \^gen_normal_area.fifo_node_payld_full_i\;
\gen_single_rank.data_reg[100]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(4),
      Q => m_sc_payld(3),
      R => '0'
    );
\gen_single_rank.data_reg[101]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(5),
      Q => m_sc_payld(4),
      R => '0'
    );
\gen_single_rank.data_reg[102]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(6),
      Q => m_sc_payld(5),
      R => '0'
    );
\gen_single_rank.data_reg[103]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(7),
      Q => m_sc_payld(6),
      R => '0'
    );
\gen_single_rank.data_reg[104]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(8),
      Q => m_sc_payld(7),
      R => '0'
    );
\gen_single_rank.data_reg[130]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(9),
      Q => m_sc_payld(8),
      R => '0'
    );
\gen_single_rank.data_reg[131]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(10),
      Q => m_sc_payld(9),
      R => '0'
    );
\gen_single_rank.data_reg[132]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(11),
      Q => m_sc_payld(10),
      R => '0'
    );
\gen_single_rank.data_reg[143]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(0),
      Q => \gen_normal_area.fifo_node_payld_dout\(143),
      R => '0'
    );
\gen_single_rank.data_reg[97]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(1),
      Q => m_sc_payld(0),
      R => '0'
    );
\gen_single_rank.data_reg[98]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(2),
      Q => m_sc_payld(1),
      R => '0'
    );
\gen_single_rank.data_reg[99]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(3),
      Q => m_sc_payld(2),
      R => '0'
    );
\gen_single_rank.empty_r_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \gen_single_rank.inst_cntr_n_1\,
      Q => empty_r,
      R => '0'
    );
\gen_single_rank.full_r_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \gen_single_rank.inst_cntr_n_0\,
      Q => \^gen_normal_area.fifo_node_payld_full_i\,
      R => '0'
    );
\gen_single_rank.inst_cntr\: entity work.\design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_13\
     port map (
      E(0) => E(0),
      Q(0) => \gen_normal_area.fifo_node_payld_dout\(143),
      arb_stall_late => arb_stall_late,
      areset_r => areset_r,
      empty_r => empty_r,
      \gen_normal_area.fifo_node_payld_full_i\ => \^gen_normal_area.fifo_node_payld_full_i\,
      is_zero_r_reg_0 => \gen_single_rank.inst_cntr_n_0\,
      is_zero_r_reg_1 => \gen_single_rank.inst_cntr_n_1\,
      m_sc_areset_r => m_sc_areset_r,
      m_sc_recv(0) => m_sc_recv(0),
      s_sc_aclk => s_sc_aclk,
      s_sc_send(0) => s_sc_send(0)
    );
\m_sc_send[1]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \gen_normal_area.fifo_node_payld_dout\(143),
      I1 => empty_r,
      O => m_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized0\ is
  port (
    \gen_normal_area.fifo_node_payld_full_i\ : out STD_LOGIC;
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_aclk : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_handshake : in STD_LOGIC_VECTOR ( 0 to 0 );
    areset_r : in STD_LOGIC;
    \gen_single_rank.empty_r_reg_0\ : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_areset_r : in STD_LOGIC;
    s_sc_payld : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized0\ : entity is "sc_node_v1_0_10_reg_fifo";
end \design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized0\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized0\ is
  signal empty_r : STD_LOGIC;
  signal \^gen_normal_area.fifo_node_payld_full_i\ : STD_LOGIC;
  signal \gen_single_rank.data[5]_i_1_n_0\ : STD_LOGIC;
  signal \gen_single_rank.data[6]_i_1_n_0\ : STD_LOGIC;
  signal \gen_single_rank.inst_cntr_n_0\ : STD_LOGIC;
  signal \gen_single_rank.inst_cntr_n_1\ : STD_LOGIC;
  signal \^m_sc_payld\ : STD_LOGIC_VECTOR ( 1 downto 0 );
begin
  \gen_normal_area.fifo_node_payld_full_i\ <= \^gen_normal_area.fifo_node_payld_full_i\;
  m_sc_payld(1 downto 0) <= \^m_sc_payld\(1 downto 0);
\gen_single_rank.data[5]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => s_sc_payld(0),
      I1 => s_sc_send(0),
      I2 => \gen_single_rank.empty_r_reg_0\,
      I3 => \^m_sc_payld\(0),
      O => \gen_single_rank.data[5]_i_1_n_0\
    );
\gen_single_rank.data[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => s_sc_payld(1),
      I1 => s_sc_send(0),
      I2 => \gen_single_rank.empty_r_reg_0\,
      I3 => \^m_sc_payld\(1),
      O => \gen_single_rank.data[6]_i_1_n_0\
    );
\gen_single_rank.data_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \gen_single_rank.data[5]_i_1_n_0\,
      Q => \^m_sc_payld\(0),
      R => '0'
    );
\gen_single_rank.data_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \gen_single_rank.data[6]_i_1_n_0\,
      Q => \^m_sc_payld\(1),
      R => '0'
    );
\gen_single_rank.empty_r_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \gen_single_rank.inst_cntr_n_1\,
      Q => empty_r,
      R => '0'
    );
\gen_single_rank.full_r_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \gen_single_rank.inst_cntr_n_0\,
      Q => \^gen_normal_area.fifo_node_payld_full_i\,
      R => '0'
    );
\gen_single_rank.inst_cntr\: entity work.\design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_5\
     port map (
      areset_r => areset_r,
      empty_r => empty_r,
      \gen_normal_area.fifo_node_payld_full_i\ => \^gen_normal_area.fifo_node_payld_full_i\,
      \gen_single_rank.empty_r_reg\ => \gen_single_rank.inst_cntr_n_0\,
      \gen_single_rank.empty_r_reg_0\ => \gen_single_rank.empty_r_reg_0\,
      \grant_i_reg[1]\ => \gen_single_rank.inst_cntr_n_1\,
      m_sc_areset_r => m_sc_areset_r,
      m_sc_recv(0) => m_sc_recv(0),
      s_sc_aclk => s_sc_aclk,
      s_sc_handshake(0) => s_sc_handshake(0),
      s_sc_send(0) => s_sc_send(0)
    );
\m_sc_send[0]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => empty_r,
      O => m_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized1\ is
  port (
    \gen_normal_area.fifo_node_payld_full_i\ : out STD_LOGIC;
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 33 downto 0 );
    s_sc_aclk : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    areset_r : in STD_LOGIC;
    \gen_single_rank.empty_r_reg_0\ : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_areset_r : in STD_LOGIC;
    s_sc_payld : in STD_LOGIC_VECTOR ( 33 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized1\ : entity is "sc_node_v1_0_10_reg_fifo";
end \design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized1\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized1\ is
  signal empty_r : STD_LOGIC;
  signal \^gen_normal_area.fifo_node_payld_full_i\ : STD_LOGIC;
  signal \gen_single_rank.inst_cntr_n_0\ : STD_LOGIC;
  signal \gen_single_rank.inst_cntr_n_1\ : STD_LOGIC;
begin
  \gen_normal_area.fifo_node_payld_full_i\ <= \^gen_normal_area.fifo_node_payld_full_i\;
\gen_single_rank.data_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(0),
      Q => m_sc_payld(0),
      R => '0'
    );
\gen_single_rank.data_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(1),
      Q => m_sc_payld(1),
      R => '0'
    );
\gen_single_rank.data_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(2),
      Q => m_sc_payld(2),
      R => '0'
    );
\gen_single_rank.data_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(3),
      Q => m_sc_payld(3),
      R => '0'
    );
\gen_single_rank.data_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(4),
      Q => m_sc_payld(4),
      R => '0'
    );
\gen_single_rank.data_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(5),
      Q => m_sc_payld(5),
      R => '0'
    );
\gen_single_rank.data_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(6),
      Q => m_sc_payld(6),
      R => '0'
    );
\gen_single_rank.data_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(7),
      Q => m_sc_payld(7),
      R => '0'
    );
\gen_single_rank.data_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(8),
      Q => m_sc_payld(8),
      R => '0'
    );
\gen_single_rank.data_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(9),
      Q => m_sc_payld(9),
      R => '0'
    );
\gen_single_rank.data_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(10),
      Q => m_sc_payld(10),
      R => '0'
    );
\gen_single_rank.data_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(11),
      Q => m_sc_payld(11),
      R => '0'
    );
\gen_single_rank.data_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(12),
      Q => m_sc_payld(12),
      R => '0'
    );
\gen_single_rank.data_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(13),
      Q => m_sc_payld(13),
      R => '0'
    );
\gen_single_rank.data_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(14),
      Q => m_sc_payld(14),
      R => '0'
    );
\gen_single_rank.data_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(15),
      Q => m_sc_payld(15),
      R => '0'
    );
\gen_single_rank.data_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(16),
      Q => m_sc_payld(16),
      R => '0'
    );
\gen_single_rank.data_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(17),
      Q => m_sc_payld(17),
      R => '0'
    );
\gen_single_rank.data_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(18),
      Q => m_sc_payld(18),
      R => '0'
    );
\gen_single_rank.data_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(19),
      Q => m_sc_payld(19),
      R => '0'
    );
\gen_single_rank.data_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(20),
      Q => m_sc_payld(20),
      R => '0'
    );
\gen_single_rank.data_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(21),
      Q => m_sc_payld(21),
      R => '0'
    );
\gen_single_rank.data_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(22),
      Q => m_sc_payld(22),
      R => '0'
    );
\gen_single_rank.data_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(23),
      Q => m_sc_payld(23),
      R => '0'
    );
\gen_single_rank.data_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(24),
      Q => m_sc_payld(24),
      R => '0'
    );
\gen_single_rank.data_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(25),
      Q => m_sc_payld(25),
      R => '0'
    );
\gen_single_rank.data_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(26),
      Q => m_sc_payld(26),
      R => '0'
    );
\gen_single_rank.data_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(27),
      Q => m_sc_payld(27),
      R => '0'
    );
\gen_single_rank.data_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(28),
      Q => m_sc_payld(28),
      R => '0'
    );
\gen_single_rank.data_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(29),
      Q => m_sc_payld(29),
      R => '0'
    );
\gen_single_rank.data_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(30),
      Q => m_sc_payld(30),
      R => '0'
    );
\gen_single_rank.data_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(31),
      Q => m_sc_payld(31),
      R => '0'
    );
\gen_single_rank.data_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(32),
      Q => m_sc_payld(32),
      R => '0'
    );
\gen_single_rank.data_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(33),
      Q => m_sc_payld(33),
      R => '0'
    );
\gen_single_rank.empty_r_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \gen_single_rank.inst_cntr_n_1\,
      Q => empty_r,
      R => '0'
    );
\gen_single_rank.full_r_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \gen_single_rank.inst_cntr_n_0\,
      Q => \^gen_normal_area.fifo_node_payld_full_i\,
      R => '0'
    );
\gen_single_rank.inst_cntr\: entity work.\design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0_1\
     port map (
      E(0) => E(0),
      areset_r => areset_r,
      empty_r => empty_r,
      \gen_normal_area.fifo_node_payld_full_i\ => \^gen_normal_area.fifo_node_payld_full_i\,
      \gen_single_rank.empty_r_reg\ => \gen_single_rank.inst_cntr_n_0\,
      \gen_single_rank.empty_r_reg_0\ => \gen_single_rank.empty_r_reg_0\,
      \grant_i_reg[1]\ => \gen_single_rank.inst_cntr_n_1\,
      m_sc_areset_r => m_sc_areset_r,
      m_sc_recv(0) => m_sc_recv(0),
      s_sc_aclk => s_sc_aclk,
      s_sc_send(0) => s_sc_send(0)
    );
\m_sc_send[0]_INST_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => empty_r,
      O => m_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized2\ is
  port (
    \gen_normal_area.fifo_node_payld_full_i\ : out STD_LOGIC;
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 35 downto 0 );
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall_late : in STD_LOGIC;
    areset_r : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_areset_r : in STD_LOGIC;
    s_sc_payld : in STD_LOGIC_VECTOR ( 36 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized2\ : entity is "sc_node_v1_0_10_reg_fifo";
end \design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized2\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized2\ is
  signal empty_r : STD_LOGIC;
  signal \gen_normal_area.fifo_node_payld_dout\ : STD_LOGIC_VECTOR ( 57 to 57 );
  signal \^gen_normal_area.fifo_node_payld_full_i\ : STD_LOGIC;
  signal \gen_single_rank.inst_cntr_n_0\ : STD_LOGIC;
  signal \gen_single_rank.inst_cntr_n_1\ : STD_LOGIC;
begin
  \gen_normal_area.fifo_node_payld_full_i\ <= \^gen_normal_area.fifo_node_payld_full_i\;
\gen_single_rank.data_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(1),
      Q => m_sc_payld(0),
      R => '0'
    );
\gen_single_rank.data_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(2),
      Q => m_sc_payld(1),
      R => '0'
    );
\gen_single_rank.data_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(3),
      Q => m_sc_payld(2),
      R => '0'
    );
\gen_single_rank.data_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(4),
      Q => m_sc_payld(3),
      R => '0'
    );
\gen_single_rank.data_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(5),
      Q => m_sc_payld(4),
      R => '0'
    );
\gen_single_rank.data_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(6),
      Q => m_sc_payld(5),
      R => '0'
    );
\gen_single_rank.data_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(7),
      Q => m_sc_payld(6),
      R => '0'
    );
\gen_single_rank.data_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(8),
      Q => m_sc_payld(7),
      R => '0'
    );
\gen_single_rank.data_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(9),
      Q => m_sc_payld(8),
      R => '0'
    );
\gen_single_rank.data_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(10),
      Q => m_sc_payld(9),
      R => '0'
    );
\gen_single_rank.data_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(11),
      Q => m_sc_payld(10),
      R => '0'
    );
\gen_single_rank.data_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(12),
      Q => m_sc_payld(11),
      R => '0'
    );
\gen_single_rank.data_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(13),
      Q => m_sc_payld(12),
      R => '0'
    );
\gen_single_rank.data_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(14),
      Q => m_sc_payld(13),
      R => '0'
    );
\gen_single_rank.data_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(15),
      Q => m_sc_payld(14),
      R => '0'
    );
\gen_single_rank.data_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(16),
      Q => m_sc_payld(15),
      R => '0'
    );
\gen_single_rank.data_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(17),
      Q => m_sc_payld(16),
      R => '0'
    );
\gen_single_rank.data_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(18),
      Q => m_sc_payld(17),
      R => '0'
    );
\gen_single_rank.data_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(19),
      Q => m_sc_payld(18),
      R => '0'
    );
\gen_single_rank.data_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(20),
      Q => m_sc_payld(19),
      R => '0'
    );
\gen_single_rank.data_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(21),
      Q => m_sc_payld(20),
      R => '0'
    );
\gen_single_rank.data_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(22),
      Q => m_sc_payld(21),
      R => '0'
    );
\gen_single_rank.data_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(23),
      Q => m_sc_payld(22),
      R => '0'
    );
\gen_single_rank.data_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(24),
      Q => m_sc_payld(23),
      R => '0'
    );
\gen_single_rank.data_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(25),
      Q => m_sc_payld(24),
      R => '0'
    );
\gen_single_rank.data_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(26),
      Q => m_sc_payld(25),
      R => '0'
    );
\gen_single_rank.data_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(27),
      Q => m_sc_payld(26),
      R => '0'
    );
\gen_single_rank.data_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(28),
      Q => m_sc_payld(27),
      R => '0'
    );
\gen_single_rank.data_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(29),
      Q => m_sc_payld(28),
      R => '0'
    );
\gen_single_rank.data_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(30),
      Q => m_sc_payld(29),
      R => '0'
    );
\gen_single_rank.data_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(31),
      Q => m_sc_payld(30),
      R => '0'
    );
\gen_single_rank.data_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(32),
      Q => m_sc_payld(31),
      R => '0'
    );
\gen_single_rank.data_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(33),
      Q => m_sc_payld(32),
      R => '0'
    );
\gen_single_rank.data_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(34),
      Q => m_sc_payld(33),
      R => '0'
    );
\gen_single_rank.data_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(35),
      Q => m_sc_payld(34),
      R => '0'
    );
\gen_single_rank.data_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(36),
      Q => m_sc_payld(35),
      R => '0'
    );
\gen_single_rank.data_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => E(0),
      D => s_sc_payld(0),
      Q => \gen_normal_area.fifo_node_payld_dout\(57),
      R => '0'
    );
\gen_single_rank.empty_r_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \gen_single_rank.inst_cntr_n_1\,
      Q => empty_r,
      R => '0'
    );
\gen_single_rank.full_r_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \gen_single_rank.inst_cntr_n_0\,
      Q => \^gen_normal_area.fifo_node_payld_full_i\,
      R => '0'
    );
\gen_single_rank.inst_cntr\: entity work.\design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized0\
     port map (
      E(0) => E(0),
      Q(0) => \gen_normal_area.fifo_node_payld_dout\(57),
      arb_stall_late => arb_stall_late,
      areset_r => areset_r,
      empty_r => empty_r,
      \gen_normal_area.fifo_node_payld_full_i\ => \^gen_normal_area.fifo_node_payld_full_i\,
      is_zero_r_reg_0 => \gen_single_rank.inst_cntr_n_0\,
      is_zero_r_reg_1 => \gen_single_rank.inst_cntr_n_1\,
      m_sc_areset_r => m_sc_areset_r,
      m_sc_recv(0) => m_sc_recv(0),
      s_sc_aclk => s_sc_aclk,
      s_sc_send(0) => s_sc_send(0)
    );
\m_sc_send[1]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \gen_normal_area.fifo_node_payld_dout\(57),
      I1 => empty_r,
      O => m_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized4\ is
  port (
    arb_stall_late : out STD_LOGIC;
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized4\ : entity is "sc_node_v1_0_10_si_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized4\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized4\ is
begin
inst_arb_stall_late: entity work.\design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7_9\
     port map (
      E(0) => E(0),
      arb_stall => arb_stall,
      arb_stall_late => arb_stall_late,
      s_sc_aclk => s_sc_aclk,
      s_sc_recv(0) => s_sc_recv(0),
      s_sc_send(0) => s_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized5\ is
  port (
    arb_stall_late : out STD_LOGIC;
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized5\ : entity is "sc_node_v1_0_10_si_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized5\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized5\ is
begin
inst_arb_stall_late: entity work.\design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7_6\
     port map (
      E(0) => E(0),
      arb_stall => arb_stall,
      arb_stall_late => arb_stall_late,
      s_sc_aclk => s_sc_aclk,
      s_sc_recv(0) => s_sc_recv(0),
      s_sc_send(0) => s_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized6\ is
  port (
    \grant_i_reg[1]\ : out STD_LOGIC;
    s_sc_handshake : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    \grant_i_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized6\ : entity is "sc_node_v1_0_10_si_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized6\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized6\ is
  signal areset_r : STD_LOGIC;
  signal \gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter_n_0\ : STD_LOGIC;
  signal \^grant_i_reg[1]\ : STD_LOGIC;
begin
  \grant_i_reg[1]\ <= \^grant_i_reg[1]\;
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\gen_si_handler.gen_arbiter_rr_normal_area.inst_arbiter\: entity work.design_1_axi_smc_0_sc_node_v1_0_10_arb_alg_rr_2
     port map (
      areset_r => areset_r,
      \grant_i_reg[1]_0\ => \^grant_i_reg[1]\,
      \grant_i_reg[1]_1\(0) => \grant_i_reg[1]_0\(0),
      \grant_i_reg[1]_2\ => \gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter_n_0\,
      s_sc_aclk => s_sc_aclk,
      s_sc_handshake(0) => s_sc_handshake(0),
      s_sc_send(0) => s_sc_send(0)
    );
\gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter\: entity work.\design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized1_3\
     port map (
      areset_r => areset_r,
      is_zero_r_reg_0 => \gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter_n_0\,
      is_zero_r_reg_1 => \^grant_i_reg[1]\,
      s_sc_aclk => s_sc_aclk,
      s_sc_req(0) => s_sc_req(0),
      s_sc_send(0) => s_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized7\ is
  port (
    \grant_i_reg[1]\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    \grant_i_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized7\ : entity is "sc_node_v1_0_10_si_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized7\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized7\ is
  signal areset_r : STD_LOGIC;
  signal \gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter_n_0\ : STD_LOGIC;
  signal \^grant_i_reg[1]\ : STD_LOGIC;
begin
  \grant_i_reg[1]\ <= \^grant_i_reg[1]\;
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\gen_si_handler.gen_arbiter_rr_normal_area.inst_arbiter\: entity work.design_1_axi_smc_0_sc_node_v1_0_10_arb_alg_rr
     port map (
      E(0) => E(0),
      areset_r => areset_r,
      \grant_i_reg[1]_0\ => \^grant_i_reg[1]\,
      \grant_i_reg[1]_1\(0) => \grant_i_reg[1]_0\(0),
      \grant_i_reg[1]_2\ => \gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter_n_0\,
      s_sc_aclk => s_sc_aclk,
      s_sc_send(0) => s_sc_send(0)
    );
\gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter\: entity work.\design_1_axi_smc_0_sc_util_v1_0_4_counter__parameterized1\
     port map (
      areset_r => areset_r,
      is_zero_r_reg_0 => \gen_si_handler.gen_request_counters.gen_req_counter[1].inst_req_counter_n_0\,
      is_zero_r_reg_1 => \^grant_i_reg[1]\,
      s_sc_aclk => s_sc_aclk,
      s_sc_req(0) => s_sc_req(0),
      s_sc_send(0) => s_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized8\ is
  port (
    arb_stall_late : out STD_LOGIC;
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized8\ : entity is "sc_node_v1_0_10_si_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized8\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized8\ is
begin
inst_arb_stall_late: entity work.\design_1_axi_smc_0_sc_util_v1_0_4_pipeline__parameterized7\
     port map (
      E(0) => E(0),
      arb_stall => arb_stall,
      arb_stall_late => arb_stall_late,
      s_sc_aclk => s_sc_aclk,
      s_sc_recv(0) => s_sc_recv(0),
      s_sc_send(0) => s_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_node_v1_0_10_top is
  port (
    s_sc_aclk : in STD_LOGIC;
    s_sc_aclken : in STD_LOGIC;
    s_sc_aresetn : in STD_LOGIC;
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 140 downto 0 );
    m_sc_aclk : in STD_LOGIC;
    m_sc_aclken : in STD_LOGIC;
    m_sc_aresetn : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 140 downto 0 );
    m_axis_arb_tvalid : out STD_LOGIC;
    m_axis_arb_tready : in STD_LOGIC;
    m_axis_arb_tdata : out STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axis_arb_tvalid : in STD_LOGIC;
    s_axis_arb_tready : out STD_LOGIC;
    s_axis_arb_tdata : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 2;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 141;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is "sc_node_v1_0_10_top";
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of design_1_axi_smc_0_sc_node_v1_0_10_top : entity is 16;
end design_1_axi_smc_0_sc_node_v1_0_10_top;

architecture STRUCTURE of design_1_axi_smc_0_sc_node_v1_0_10_top is
  signal \<const0>\ : STD_LOGIC;
  signal mi_handler_m_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of mi_handler_m_sc_areset : signal is std.standard.true;
  signal mi_handler_m_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of mi_handler_m_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset : signal is std.standard.true;
  signal s_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset_pipe : signal is std.standard.true;
  attribute DONT_TOUCH of s_sc_areset_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_sc_areset_reg : label is "yes";
begin
  m_axis_arb_tdata(15) <= \<const0>\;
  m_axis_arb_tdata(14) <= \<const0>\;
  m_axis_arb_tdata(13) <= \<const0>\;
  m_axis_arb_tdata(12) <= \<const0>\;
  m_axis_arb_tdata(11) <= \<const0>\;
  m_axis_arb_tdata(10) <= \<const0>\;
  m_axis_arb_tdata(9) <= \<const0>\;
  m_axis_arb_tdata(8) <= \<const0>\;
  m_axis_arb_tdata(7) <= \<const0>\;
  m_axis_arb_tdata(6) <= \<const0>\;
  m_axis_arb_tdata(5) <= \<const0>\;
  m_axis_arb_tdata(4) <= \<const0>\;
  m_axis_arb_tdata(3) <= \<const0>\;
  m_axis_arb_tdata(2) <= \<const0>\;
  m_axis_arb_tdata(1) <= \<const0>\;
  m_axis_arb_tdata(0) <= \<const0>\;
  m_axis_arb_tvalid <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(140) <= \<const0>\;
  m_sc_payld(139) <= \<const0>\;
  m_sc_payld(138) <= \<const0>\;
  m_sc_payld(137) <= \<const0>\;
  m_sc_payld(136) <= \<const0>\;
  m_sc_payld(135) <= \<const0>\;
  m_sc_payld(134) <= \<const0>\;
  m_sc_payld(133) <= \<const0>\;
  m_sc_payld(132) <= \<const0>\;
  m_sc_payld(131) <= \<const0>\;
  m_sc_payld(130) <= \<const0>\;
  m_sc_payld(129) <= \<const0>\;
  m_sc_payld(128) <= \<const0>\;
  m_sc_payld(127) <= \<const0>\;
  m_sc_payld(126) <= \<const0>\;
  m_sc_payld(125) <= \<const0>\;
  m_sc_payld(124) <= \<const0>\;
  m_sc_payld(123) <= \<const0>\;
  m_sc_payld(122) <= \<const0>\;
  m_sc_payld(121) <= \<const0>\;
  m_sc_payld(120) <= \<const0>\;
  m_sc_payld(119) <= \<const0>\;
  m_sc_payld(118) <= \<const0>\;
  m_sc_payld(117) <= \<const0>\;
  m_sc_payld(116) <= \<const0>\;
  m_sc_payld(115) <= \<const0>\;
  m_sc_payld(114) <= \<const0>\;
  m_sc_payld(113) <= \<const0>\;
  m_sc_payld(112) <= \<const0>\;
  m_sc_payld(111) <= \<const0>\;
  m_sc_payld(110) <= \<const0>\;
  m_sc_payld(109) <= \<const0>\;
  m_sc_payld(108) <= \<const0>\;
  m_sc_payld(107) <= \<const0>\;
  m_sc_payld(106) <= \<const0>\;
  m_sc_payld(105) <= \<const0>\;
  m_sc_payld(104) <= \<const0>\;
  m_sc_payld(103) <= \<const0>\;
  m_sc_payld(102) <= \<const0>\;
  m_sc_payld(101) <= \<const0>\;
  m_sc_payld(100) <= \<const0>\;
  m_sc_payld(99) <= \<const0>\;
  m_sc_payld(98) <= \<const0>\;
  m_sc_payld(97) <= \<const0>\;
  m_sc_payld(96) <= \<const0>\;
  m_sc_payld(95) <= \<const0>\;
  m_sc_payld(94) <= \<const0>\;
  m_sc_payld(93) <= \<const0>\;
  m_sc_payld(92) <= \<const0>\;
  m_sc_payld(91) <= \<const0>\;
  m_sc_payld(90) <= \<const0>\;
  m_sc_payld(89) <= \<const0>\;
  m_sc_payld(88) <= \<const0>\;
  m_sc_payld(87) <= \<const0>\;
  m_sc_payld(86) <= \<const0>\;
  m_sc_payld(85) <= \<const0>\;
  m_sc_payld(84) <= \<const0>\;
  m_sc_payld(83) <= \<const0>\;
  m_sc_payld(82) <= \<const0>\;
  m_sc_payld(81) <= \<const0>\;
  m_sc_payld(80) <= \<const0>\;
  m_sc_payld(79) <= \<const0>\;
  m_sc_payld(78) <= \<const0>\;
  m_sc_payld(77) <= \<const0>\;
  m_sc_payld(76) <= \<const0>\;
  m_sc_payld(75) <= \<const0>\;
  m_sc_payld(74) <= \<const0>\;
  m_sc_payld(73) <= \<const0>\;
  m_sc_payld(72) <= \<const0>\;
  m_sc_payld(71) <= \<const0>\;
  m_sc_payld(70) <= \<const0>\;
  m_sc_payld(69) <= \<const0>\;
  m_sc_payld(68) <= \<const0>\;
  m_sc_payld(67) <= \<const0>\;
  m_sc_payld(66) <= \<const0>\;
  m_sc_payld(65) <= \<const0>\;
  m_sc_payld(64) <= \<const0>\;
  m_sc_payld(63) <= \<const0>\;
  m_sc_payld(62) <= \<const0>\;
  m_sc_payld(61) <= \<const0>\;
  m_sc_payld(60) <= \<const0>\;
  m_sc_payld(59) <= \<const0>\;
  m_sc_payld(58) <= \<const0>\;
  m_sc_payld(57) <= \<const0>\;
  m_sc_payld(56) <= \<const0>\;
  m_sc_payld(55) <= \<const0>\;
  m_sc_payld(54) <= \<const0>\;
  m_sc_payld(53) <= \<const0>\;
  m_sc_payld(52) <= \<const0>\;
  m_sc_payld(51) <= \<const0>\;
  m_sc_payld(50) <= \<const0>\;
  m_sc_payld(49) <= \<const0>\;
  m_sc_payld(48) <= \<const0>\;
  m_sc_payld(47) <= \<const0>\;
  m_sc_payld(46) <= \<const0>\;
  m_sc_payld(45) <= \<const0>\;
  m_sc_payld(44) <= \<const0>\;
  m_sc_payld(43) <= \<const0>\;
  m_sc_payld(42) <= \<const0>\;
  m_sc_payld(41) <= \<const0>\;
  m_sc_payld(40) <= \<const0>\;
  m_sc_payld(39) <= \<const0>\;
  m_sc_payld(38) <= \<const0>\;
  m_sc_payld(37) <= \<const0>\;
  m_sc_payld(36) <= \<const0>\;
  m_sc_payld(35) <= \<const0>\;
  m_sc_payld(34) <= \<const0>\;
  m_sc_payld(33) <= \<const0>\;
  m_sc_payld(32) <= \<const0>\;
  m_sc_payld(31) <= \<const0>\;
  m_sc_payld(30) <= \<const0>\;
  m_sc_payld(29) <= \<const0>\;
  m_sc_payld(28) <= \<const0>\;
  m_sc_payld(27) <= \<const0>\;
  m_sc_payld(26) <= \<const0>\;
  m_sc_payld(25) <= \<const0>\;
  m_sc_payld(24) <= \<const0>\;
  m_sc_payld(23) <= \<const0>\;
  m_sc_payld(22) <= \<const0>\;
  m_sc_payld(21) <= \<const0>\;
  m_sc_payld(20) <= \<const0>\;
  m_sc_payld(19) <= \<const0>\;
  m_sc_payld(18) <= \<const0>\;
  m_sc_payld(17) <= \<const0>\;
  m_sc_payld(16) <= \<const0>\;
  m_sc_payld(15) <= \<const0>\;
  m_sc_payld(14) <= \<const0>\;
  m_sc_payld(13) <= \<const0>\;
  m_sc_payld(12) <= \<const0>\;
  m_sc_payld(11) <= \<const0>\;
  m_sc_payld(10) <= \<const0>\;
  m_sc_payld(9) <= \<const0>\;
  m_sc_payld(8) <= \<const0>\;
  m_sc_payld(7) <= \<const0>\;
  m_sc_payld(6) <= \<const0>\;
  m_sc_payld(5) <= \<const0>\;
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  m_sc_req(0) <= \<const0>\;
  s_axis_arb_tready <= \<const0>\;
  s_sc_recv(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_mi_handler: entity work.design_1_axi_smc_0_sc_node_v1_0_10_mi_handler
     port map (
      m_sc_send(0) => m_sc_send(0),
      \out\ => s_sc_areset_pipe,
      s_sc_aclk => s_sc_aclk,
      s_sc_send(0) => s_sc_send(0)
    );
mi_handler_m_sc_areset_pipe_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mi_handler_m_sc_areset,
      O => mi_handler_m_sc_areset_pipe
    );
s_sc_areset_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_areset,
      O => mi_handler_m_sc_areset
    );
s_sc_areset_pipe_inferred_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_sc_aresetn,
      O => s_sc_areset_pipe
    );
s_sc_areset_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => '0',
      Q => s_sc_areset,
      S => s_sc_areset_pipe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ is
  port (
    s_sc_aclk : in STD_LOGIC;
    s_sc_aclken : in STD_LOGIC;
    s_sc_aresetn : in STD_LOGIC;
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 140 downto 0 );
    m_sc_aclk : in STD_LOGIC;
    m_sc_aclken : in STD_LOGIC;
    m_sc_aresetn : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 140 downto 0 );
    m_axis_arb_tvalid : out STD_LOGIC;
    m_axis_arb_tready : in STD_LOGIC;
    m_axis_arb_tdata : out STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axis_arb_tvalid : in STD_LOGIC;
    s_axis_arb_tready : out STD_LOGIC;
    s_axis_arb_tdata : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 3;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 141;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is "sc_node_v1_0_10_top";
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ : entity is 16;
end \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\ is
  signal \<const0>\ : STD_LOGIC;
  signal mi_handler_m_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of mi_handler_m_sc_areset : signal is std.standard.true;
  signal mi_handler_m_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of mi_handler_m_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset : signal is std.standard.true;
  signal s_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset_pipe : signal is std.standard.true;
  attribute DONT_TOUCH of s_sc_areset_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_sc_areset_reg : label is "yes";
begin
  m_axis_arb_tdata(15) <= \<const0>\;
  m_axis_arb_tdata(14) <= \<const0>\;
  m_axis_arb_tdata(13) <= \<const0>\;
  m_axis_arb_tdata(12) <= \<const0>\;
  m_axis_arb_tdata(11) <= \<const0>\;
  m_axis_arb_tdata(10) <= \<const0>\;
  m_axis_arb_tdata(9) <= \<const0>\;
  m_axis_arb_tdata(8) <= \<const0>\;
  m_axis_arb_tdata(7) <= \<const0>\;
  m_axis_arb_tdata(6) <= \<const0>\;
  m_axis_arb_tdata(5) <= \<const0>\;
  m_axis_arb_tdata(4) <= \<const0>\;
  m_axis_arb_tdata(3) <= \<const0>\;
  m_axis_arb_tdata(2) <= \<const0>\;
  m_axis_arb_tdata(1) <= \<const0>\;
  m_axis_arb_tdata(0) <= \<const0>\;
  m_axis_arb_tvalid <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(140) <= \<const0>\;
  m_sc_payld(139) <= \<const0>\;
  m_sc_payld(138) <= \<const0>\;
  m_sc_payld(137) <= \<const0>\;
  m_sc_payld(136) <= \<const0>\;
  m_sc_payld(135) <= \<const0>\;
  m_sc_payld(134) <= \<const0>\;
  m_sc_payld(133) <= \<const0>\;
  m_sc_payld(132) <= \<const0>\;
  m_sc_payld(131) <= \<const0>\;
  m_sc_payld(130) <= \<const0>\;
  m_sc_payld(129) <= \<const0>\;
  m_sc_payld(128) <= \<const0>\;
  m_sc_payld(127) <= \<const0>\;
  m_sc_payld(126) <= \<const0>\;
  m_sc_payld(125) <= \<const0>\;
  m_sc_payld(124) <= \<const0>\;
  m_sc_payld(123) <= \<const0>\;
  m_sc_payld(122) <= \<const0>\;
  m_sc_payld(121) <= \<const0>\;
  m_sc_payld(120) <= \<const0>\;
  m_sc_payld(119) <= \<const0>\;
  m_sc_payld(118) <= \<const0>\;
  m_sc_payld(117) <= \<const0>\;
  m_sc_payld(116) <= \<const0>\;
  m_sc_payld(115) <= \<const0>\;
  m_sc_payld(114) <= \<const0>\;
  m_sc_payld(113) <= \<const0>\;
  m_sc_payld(112) <= \<const0>\;
  m_sc_payld(111) <= \<const0>\;
  m_sc_payld(110) <= \<const0>\;
  m_sc_payld(109) <= \<const0>\;
  m_sc_payld(108) <= \<const0>\;
  m_sc_payld(107) <= \<const0>\;
  m_sc_payld(106) <= \<const0>\;
  m_sc_payld(105) <= \<const0>\;
  m_sc_payld(104) <= \<const0>\;
  m_sc_payld(103) <= \<const0>\;
  m_sc_payld(102) <= \<const0>\;
  m_sc_payld(101) <= \<const0>\;
  m_sc_payld(100) <= \<const0>\;
  m_sc_payld(99) <= \<const0>\;
  m_sc_payld(98) <= \<const0>\;
  m_sc_payld(97) <= \<const0>\;
  m_sc_payld(96) <= \<const0>\;
  m_sc_payld(95) <= \<const0>\;
  m_sc_payld(94) <= \<const0>\;
  m_sc_payld(93) <= \<const0>\;
  m_sc_payld(92) <= \<const0>\;
  m_sc_payld(91) <= \<const0>\;
  m_sc_payld(90) <= \<const0>\;
  m_sc_payld(89) <= \<const0>\;
  m_sc_payld(88) <= \<const0>\;
  m_sc_payld(87) <= \<const0>\;
  m_sc_payld(86) <= \<const0>\;
  m_sc_payld(85) <= \<const0>\;
  m_sc_payld(84) <= \<const0>\;
  m_sc_payld(83) <= \<const0>\;
  m_sc_payld(82) <= \<const0>\;
  m_sc_payld(81) <= \<const0>\;
  m_sc_payld(80) <= \<const0>\;
  m_sc_payld(79) <= \<const0>\;
  m_sc_payld(78) <= \<const0>\;
  m_sc_payld(77) <= \<const0>\;
  m_sc_payld(76) <= \<const0>\;
  m_sc_payld(75) <= \<const0>\;
  m_sc_payld(74) <= \<const0>\;
  m_sc_payld(73) <= \<const0>\;
  m_sc_payld(72) <= \<const0>\;
  m_sc_payld(71) <= \<const0>\;
  m_sc_payld(70) <= \<const0>\;
  m_sc_payld(69) <= \<const0>\;
  m_sc_payld(68) <= \<const0>\;
  m_sc_payld(67) <= \<const0>\;
  m_sc_payld(66) <= \<const0>\;
  m_sc_payld(65) <= \<const0>\;
  m_sc_payld(64) <= \<const0>\;
  m_sc_payld(63) <= \<const0>\;
  m_sc_payld(62) <= \<const0>\;
  m_sc_payld(61) <= \<const0>\;
  m_sc_payld(60) <= \<const0>\;
  m_sc_payld(59) <= \<const0>\;
  m_sc_payld(58) <= \<const0>\;
  m_sc_payld(57) <= \<const0>\;
  m_sc_payld(56) <= \<const0>\;
  m_sc_payld(55) <= \<const0>\;
  m_sc_payld(54) <= \<const0>\;
  m_sc_payld(53) <= \<const0>\;
  m_sc_payld(52) <= \<const0>\;
  m_sc_payld(51) <= \<const0>\;
  m_sc_payld(50) <= \<const0>\;
  m_sc_payld(49) <= \<const0>\;
  m_sc_payld(48) <= \<const0>\;
  m_sc_payld(47) <= \<const0>\;
  m_sc_payld(46) <= \<const0>\;
  m_sc_payld(45) <= \<const0>\;
  m_sc_payld(44) <= \<const0>\;
  m_sc_payld(43) <= \<const0>\;
  m_sc_payld(42) <= \<const0>\;
  m_sc_payld(41) <= \<const0>\;
  m_sc_payld(40) <= \<const0>\;
  m_sc_payld(39) <= \<const0>\;
  m_sc_payld(38) <= \<const0>\;
  m_sc_payld(37) <= \<const0>\;
  m_sc_payld(36) <= \<const0>\;
  m_sc_payld(35) <= \<const0>\;
  m_sc_payld(34) <= \<const0>\;
  m_sc_payld(33) <= \<const0>\;
  m_sc_payld(32) <= \<const0>\;
  m_sc_payld(31) <= \<const0>\;
  m_sc_payld(30) <= \<const0>\;
  m_sc_payld(29) <= \<const0>\;
  m_sc_payld(28) <= \<const0>\;
  m_sc_payld(27) <= \<const0>\;
  m_sc_payld(26) <= \<const0>\;
  m_sc_payld(25) <= \<const0>\;
  m_sc_payld(24) <= \<const0>\;
  m_sc_payld(23) <= \<const0>\;
  m_sc_payld(22) <= \<const0>\;
  m_sc_payld(21) <= \<const0>\;
  m_sc_payld(20) <= \<const0>\;
  m_sc_payld(19) <= \<const0>\;
  m_sc_payld(18) <= \<const0>\;
  m_sc_payld(17) <= \<const0>\;
  m_sc_payld(16) <= \<const0>\;
  m_sc_payld(15) <= \<const0>\;
  m_sc_payld(14) <= \<const0>\;
  m_sc_payld(13) <= \<const0>\;
  m_sc_payld(12) <= \<const0>\;
  m_sc_payld(11) <= \<const0>\;
  m_sc_payld(10) <= \<const0>\;
  m_sc_payld(9) <= \<const0>\;
  m_sc_payld(8) <= \<const0>\;
  m_sc_payld(7) <= \<const0>\;
  m_sc_payld(6) <= \<const0>\;
  m_sc_payld(5) <= \<const0>\;
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  m_sc_req(0) <= \<const0>\;
  s_axis_arb_tready <= \<const0>\;
  s_sc_recv(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_mi_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized0\
     port map (
      m_sc_send(0) => m_sc_send(0),
      \out\ => s_sc_areset_pipe,
      s_sc_aclk => s_sc_aclk,
      s_sc_send(0) => s_sc_send(0)
    );
mi_handler_m_sc_areset_pipe_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mi_handler_m_sc_areset,
      O => mi_handler_m_sc_areset_pipe
    );
s_sc_areset_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_areset,
      O => mi_handler_m_sc_areset
    );
s_sc_areset_pipe_inferred_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_sc_aresetn,
      O => s_sc_areset_pipe
    );
s_sc_areset_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => '0',
      Q => s_sc_areset,
      S => s_sc_areset_pipe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ is
  port (
    s_sc_aclk : in STD_LOGIC;
    s_sc_aclken : in STD_LOGIC;
    s_sc_aresetn : in STD_LOGIC;
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 6 downto 0 );
    m_sc_aclk : in STD_LOGIC;
    m_sc_aclken : in STD_LOGIC;
    m_sc_aresetn : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 6 downto 0 );
    m_axis_arb_tvalid : out STD_LOGIC;
    m_axis_arb_tready : in STD_LOGIC;
    m_axis_arb_tdata : out STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axis_arb_tvalid : in STD_LOGIC;
    s_axis_arb_tready : out STD_LOGIC;
    s_axis_arb_tdata : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 4;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 7;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 3;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 3;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is "sc_node_v1_0_10_top";
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ : entity is 16;
end \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\ is
  signal \<const0>\ : STD_LOGIC;
  signal mi_handler_m_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of mi_handler_m_sc_areset : signal is std.standard.true;
  signal mi_handler_m_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of mi_handler_m_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset : signal is std.standard.true;
  signal s_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset_pipe : signal is std.standard.true;
  attribute DONT_TOUCH of s_sc_areset_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_sc_areset_reg : label is "yes";
begin
  m_axis_arb_tdata(15) <= \<const0>\;
  m_axis_arb_tdata(14) <= \<const0>\;
  m_axis_arb_tdata(13) <= \<const0>\;
  m_axis_arb_tdata(12) <= \<const0>\;
  m_axis_arb_tdata(11) <= \<const0>\;
  m_axis_arb_tdata(10) <= \<const0>\;
  m_axis_arb_tdata(9) <= \<const0>\;
  m_axis_arb_tdata(8) <= \<const0>\;
  m_axis_arb_tdata(7) <= \<const0>\;
  m_axis_arb_tdata(6) <= \<const0>\;
  m_axis_arb_tdata(5) <= \<const0>\;
  m_axis_arb_tdata(4) <= \<const0>\;
  m_axis_arb_tdata(3) <= \<const0>\;
  m_axis_arb_tdata(2) <= \<const0>\;
  m_axis_arb_tdata(1) <= \<const0>\;
  m_axis_arb_tdata(0) <= \<const0>\;
  m_axis_arb_tvalid <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(6) <= \<const0>\;
  m_sc_payld(5) <= \<const0>\;
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  s_axis_arb_tready <= \<const0>\;
  s_sc_recv(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_mi_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized1\
     port map (
      m_sc_recv(0) => m_sc_recv(0),
      m_sc_req(0) => m_sc_req(0),
      m_sc_send(0) => m_sc_send(0),
      \out\ => s_sc_areset_pipe,
      s_sc_aclk => s_sc_aclk,
      s_sc_send(0) => s_sc_send(0)
    );
mi_handler_m_sc_areset_pipe_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mi_handler_m_sc_areset,
      O => mi_handler_m_sc_areset_pipe
    );
s_sc_areset_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_areset,
      O => mi_handler_m_sc_areset
    );
s_sc_areset_pipe_inferred_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_sc_aresetn,
      O => s_sc_areset_pipe
    );
s_sc_areset_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => '0',
      Q => s_sc_areset,
      S => s_sc_areset_pipe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ is
  port (
    s_sc_aclk : in STD_LOGIC;
    s_sc_aclken : in STD_LOGIC;
    s_sc_aresetn : in STD_LOGIC;
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 52 downto 0 );
    m_sc_aclk : in STD_LOGIC;
    m_sc_aclken : in STD_LOGIC;
    m_sc_aresetn : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 52 downto 0 );
    m_axis_arb_tvalid : out STD_LOGIC;
    m_axis_arb_tready : in STD_LOGIC;
    m_axis_arb_tdata : out STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axis_arb_tvalid : in STD_LOGIC;
    s_axis_arb_tready : out STD_LOGIC;
    s_axis_arb_tdata : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 0;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 53;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 3;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 3;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is "sc_node_v1_0_10_top";
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ : entity is 16;
end \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\ is
  signal \<const0>\ : STD_LOGIC;
  signal mi_handler_m_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of mi_handler_m_sc_areset : signal is std.standard.true;
  signal mi_handler_m_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of mi_handler_m_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset : signal is std.standard.true;
  signal s_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset_pipe : signal is std.standard.true;
  attribute DONT_TOUCH of s_sc_areset_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_sc_areset_reg : label is "yes";
begin
  m_axis_arb_tdata(15) <= \<const0>\;
  m_axis_arb_tdata(14) <= \<const0>\;
  m_axis_arb_tdata(13) <= \<const0>\;
  m_axis_arb_tdata(12) <= \<const0>\;
  m_axis_arb_tdata(11) <= \<const0>\;
  m_axis_arb_tdata(10) <= \<const0>\;
  m_axis_arb_tdata(9) <= \<const0>\;
  m_axis_arb_tdata(8) <= \<const0>\;
  m_axis_arb_tdata(7) <= \<const0>\;
  m_axis_arb_tdata(6) <= \<const0>\;
  m_axis_arb_tdata(5) <= \<const0>\;
  m_axis_arb_tdata(4) <= \<const0>\;
  m_axis_arb_tdata(3) <= \<const0>\;
  m_axis_arb_tdata(2) <= \<const0>\;
  m_axis_arb_tdata(1) <= \<const0>\;
  m_axis_arb_tdata(0) <= \<const0>\;
  m_axis_arb_tvalid <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(52) <= \<const0>\;
  m_sc_payld(51) <= \<const0>\;
  m_sc_payld(50) <= \<const0>\;
  m_sc_payld(49) <= \<const0>\;
  m_sc_payld(48) <= \<const0>\;
  m_sc_payld(47) <= \<const0>\;
  m_sc_payld(46) <= \<const0>\;
  m_sc_payld(45) <= \<const0>\;
  m_sc_payld(44) <= \<const0>\;
  m_sc_payld(43) <= \<const0>\;
  m_sc_payld(42) <= \<const0>\;
  m_sc_payld(41) <= \<const0>\;
  m_sc_payld(40) <= \<const0>\;
  m_sc_payld(39) <= \<const0>\;
  m_sc_payld(38) <= \<const0>\;
  m_sc_payld(37) <= \<const0>\;
  m_sc_payld(36) <= \<const0>\;
  m_sc_payld(35) <= \<const0>\;
  m_sc_payld(34) <= \<const0>\;
  m_sc_payld(33) <= \<const0>\;
  m_sc_payld(32) <= \<const0>\;
  m_sc_payld(31) <= \<const0>\;
  m_sc_payld(30) <= \<const0>\;
  m_sc_payld(29) <= \<const0>\;
  m_sc_payld(28) <= \<const0>\;
  m_sc_payld(27) <= \<const0>\;
  m_sc_payld(26) <= \<const0>\;
  m_sc_payld(25) <= \<const0>\;
  m_sc_payld(24) <= \<const0>\;
  m_sc_payld(23) <= \<const0>\;
  m_sc_payld(22) <= \<const0>\;
  m_sc_payld(21) <= \<const0>\;
  m_sc_payld(20) <= \<const0>\;
  m_sc_payld(19) <= \<const0>\;
  m_sc_payld(18) <= \<const0>\;
  m_sc_payld(17) <= \<const0>\;
  m_sc_payld(16) <= \<const0>\;
  m_sc_payld(15) <= \<const0>\;
  m_sc_payld(14) <= \<const0>\;
  m_sc_payld(13) <= \<const0>\;
  m_sc_payld(12) <= \<const0>\;
  m_sc_payld(11) <= \<const0>\;
  m_sc_payld(10) <= \<const0>\;
  m_sc_payld(9) <= \<const0>\;
  m_sc_payld(8) <= \<const0>\;
  m_sc_payld(7) <= \<const0>\;
  m_sc_payld(6) <= \<const0>\;
  m_sc_payld(5) <= \<const0>\;
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  s_axis_arb_tready <= \<const0>\;
  s_sc_recv(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_mi_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized2\
     port map (
      m_sc_recv(0) => m_sc_recv(0),
      m_sc_req(0) => m_sc_req(0),
      m_sc_send(0) => m_sc_send(0),
      \out\ => s_sc_areset_pipe,
      s_sc_aclk => s_sc_aclk,
      s_sc_send(0) => s_sc_send(0)
    );
mi_handler_m_sc_areset_pipe_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mi_handler_m_sc_areset,
      O => mi_handler_m_sc_areset_pipe
    );
s_sc_areset_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_areset,
      O => mi_handler_m_sc_areset
    );
s_sc_areset_pipe_inferred_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_sc_aresetn,
      O => s_sc_areset_pipe
    );
s_sc_areset_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => '0',
      Q => s_sc_areset,
      S => s_sc_areset_pipe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ is
  port (
    s_sc_aclk : in STD_LOGIC;
    s_sc_aclken : in STD_LOGIC;
    s_sc_aresetn : in STD_LOGIC;
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 54 downto 0 );
    m_sc_aclk : in STD_LOGIC;
    m_sc_aclken : in STD_LOGIC;
    m_sc_aresetn : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 54 downto 0 );
    m_axis_arb_tvalid : out STD_LOGIC;
    m_axis_arb_tready : in STD_LOGIC;
    m_axis_arb_tdata : out STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axis_arb_tvalid : in STD_LOGIC;
    s_axis_arb_tready : out STD_LOGIC;
    s_axis_arb_tdata : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 55;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 2;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is "sc_node_v1_0_10_top";
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ : entity is 16;
end \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\ is
  signal \<const0>\ : STD_LOGIC;
  signal mi_handler_m_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of mi_handler_m_sc_areset : signal is std.standard.true;
  signal mi_handler_m_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of mi_handler_m_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset : signal is std.standard.true;
  signal s_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset_pipe : signal is std.standard.true;
  attribute DONT_TOUCH of s_sc_areset_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_sc_areset_reg : label is "yes";
begin
  m_axis_arb_tdata(15) <= \<const0>\;
  m_axis_arb_tdata(14) <= \<const0>\;
  m_axis_arb_tdata(13) <= \<const0>\;
  m_axis_arb_tdata(12) <= \<const0>\;
  m_axis_arb_tdata(11) <= \<const0>\;
  m_axis_arb_tdata(10) <= \<const0>\;
  m_axis_arb_tdata(9) <= \<const0>\;
  m_axis_arb_tdata(8) <= \<const0>\;
  m_axis_arb_tdata(7) <= \<const0>\;
  m_axis_arb_tdata(6) <= \<const0>\;
  m_axis_arb_tdata(5) <= \<const0>\;
  m_axis_arb_tdata(4) <= \<const0>\;
  m_axis_arb_tdata(3) <= \<const0>\;
  m_axis_arb_tdata(2) <= \<const0>\;
  m_axis_arb_tdata(1) <= \<const0>\;
  m_axis_arb_tdata(0) <= \<const0>\;
  m_axis_arb_tvalid <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(54) <= \<const0>\;
  m_sc_payld(53) <= \<const0>\;
  m_sc_payld(52) <= \<const0>\;
  m_sc_payld(51) <= \<const0>\;
  m_sc_payld(50) <= \<const0>\;
  m_sc_payld(49) <= \<const0>\;
  m_sc_payld(48) <= \<const0>\;
  m_sc_payld(47) <= \<const0>\;
  m_sc_payld(46) <= \<const0>\;
  m_sc_payld(45) <= \<const0>\;
  m_sc_payld(44) <= \<const0>\;
  m_sc_payld(43) <= \<const0>\;
  m_sc_payld(42) <= \<const0>\;
  m_sc_payld(41) <= \<const0>\;
  m_sc_payld(40) <= \<const0>\;
  m_sc_payld(39) <= \<const0>\;
  m_sc_payld(38) <= \<const0>\;
  m_sc_payld(37) <= \<const0>\;
  m_sc_payld(36) <= \<const0>\;
  m_sc_payld(35) <= \<const0>\;
  m_sc_payld(34) <= \<const0>\;
  m_sc_payld(33) <= \<const0>\;
  m_sc_payld(32) <= \<const0>\;
  m_sc_payld(31) <= \<const0>\;
  m_sc_payld(30) <= \<const0>\;
  m_sc_payld(29) <= \<const0>\;
  m_sc_payld(28) <= \<const0>\;
  m_sc_payld(27) <= \<const0>\;
  m_sc_payld(26) <= \<const0>\;
  m_sc_payld(25) <= \<const0>\;
  m_sc_payld(24) <= \<const0>\;
  m_sc_payld(23) <= \<const0>\;
  m_sc_payld(22) <= \<const0>\;
  m_sc_payld(21) <= \<const0>\;
  m_sc_payld(20) <= \<const0>\;
  m_sc_payld(19) <= \<const0>\;
  m_sc_payld(18) <= \<const0>\;
  m_sc_payld(17) <= \<const0>\;
  m_sc_payld(16) <= \<const0>\;
  m_sc_payld(15) <= \<const0>\;
  m_sc_payld(14) <= \<const0>\;
  m_sc_payld(13) <= \<const0>\;
  m_sc_payld(12) <= \<const0>\;
  m_sc_payld(11) <= \<const0>\;
  m_sc_payld(10) <= \<const0>\;
  m_sc_payld(9) <= \<const0>\;
  m_sc_payld(8) <= \<const0>\;
  m_sc_payld(7) <= \<const0>\;
  m_sc_payld(6) <= \<const0>\;
  m_sc_payld(5) <= \<const0>\;
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  m_sc_req(0) <= \<const0>\;
  s_axis_arb_tready <= \<const0>\;
  s_sc_recv(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_mi_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized3\
     port map (
      m_sc_send(0) => m_sc_send(0),
      \out\ => s_sc_areset_pipe,
      s_sc_aclk => s_sc_aclk,
      s_sc_send(0) => s_sc_send(0)
    );
mi_handler_m_sc_areset_pipe_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mi_handler_m_sc_areset,
      O => mi_handler_m_sc_areset_pipe
    );
s_sc_areset_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_areset,
      O => mi_handler_m_sc_areset
    );
s_sc_areset_pipe_inferred_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_sc_aresetn,
      O => s_sc_areset_pipe
    );
s_sc_areset_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => '0',
      Q => s_sc_areset,
      S => s_sc_areset_pipe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ is
  port (
    s_sc_aclk : in STD_LOGIC;
    s_sc_aclken : in STD_LOGIC;
    s_sc_aresetn : in STD_LOGIC;
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 140 downto 0 );
    m_sc_aclk : in STD_LOGIC;
    m_sc_aclken : in STD_LOGIC;
    m_sc_aresetn : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 140 downto 0 );
    m_axis_arb_tvalid : out STD_LOGIC;
    m_axis_arb_tready : in STD_LOGIC;
    m_axis_arb_tdata : out STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axis_arb_tvalid : in STD_LOGIC;
    s_axis_arb_tready : out STD_LOGIC;
    s_axis_arb_tdata : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 2;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 141;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is "sc_node_v1_0_10_top";
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ : entity is 16;
end \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\ is
  signal \<const0>\ : STD_LOGIC;
  signal mi_handler_m_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of mi_handler_m_sc_areset : signal is std.standard.true;
  signal mi_handler_m_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of mi_handler_m_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset : signal is std.standard.true;
  signal s_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset_pipe : signal is std.standard.true;
  attribute DONT_TOUCH of s_sc_areset_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_sc_areset_reg : label is "yes";
begin
  m_axis_arb_tdata(15) <= \<const0>\;
  m_axis_arb_tdata(14) <= \<const0>\;
  m_axis_arb_tdata(13) <= \<const0>\;
  m_axis_arb_tdata(12) <= \<const0>\;
  m_axis_arb_tdata(11) <= \<const0>\;
  m_axis_arb_tdata(10) <= \<const0>\;
  m_axis_arb_tdata(9) <= \<const0>\;
  m_axis_arb_tdata(8) <= \<const0>\;
  m_axis_arb_tdata(7) <= \<const0>\;
  m_axis_arb_tdata(6) <= \<const0>\;
  m_axis_arb_tdata(5) <= \<const0>\;
  m_axis_arb_tdata(4) <= \<const0>\;
  m_axis_arb_tdata(3) <= \<const0>\;
  m_axis_arb_tdata(2) <= \<const0>\;
  m_axis_arb_tdata(1) <= \<const0>\;
  m_axis_arb_tdata(0) <= \<const0>\;
  m_axis_arb_tvalid <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(140) <= \<const0>\;
  m_sc_payld(139) <= \<const0>\;
  m_sc_payld(138) <= \<const0>\;
  m_sc_payld(137) <= \<const0>\;
  m_sc_payld(136) <= \<const0>\;
  m_sc_payld(135) <= \<const0>\;
  m_sc_payld(134) <= \<const0>\;
  m_sc_payld(133) <= \<const0>\;
  m_sc_payld(132) <= \<const0>\;
  m_sc_payld(131) <= \<const0>\;
  m_sc_payld(130) <= \<const0>\;
  m_sc_payld(129) <= \<const0>\;
  m_sc_payld(128) <= \<const0>\;
  m_sc_payld(127) <= \<const0>\;
  m_sc_payld(126) <= \<const0>\;
  m_sc_payld(125) <= \<const0>\;
  m_sc_payld(124) <= \<const0>\;
  m_sc_payld(123) <= \<const0>\;
  m_sc_payld(122) <= \<const0>\;
  m_sc_payld(121) <= \<const0>\;
  m_sc_payld(120) <= \<const0>\;
  m_sc_payld(119) <= \<const0>\;
  m_sc_payld(118) <= \<const0>\;
  m_sc_payld(117) <= \<const0>\;
  m_sc_payld(116) <= \<const0>\;
  m_sc_payld(115) <= \<const0>\;
  m_sc_payld(114) <= \<const0>\;
  m_sc_payld(113) <= \<const0>\;
  m_sc_payld(112) <= \<const0>\;
  m_sc_payld(111) <= \<const0>\;
  m_sc_payld(110) <= \<const0>\;
  m_sc_payld(109) <= \<const0>\;
  m_sc_payld(108) <= \<const0>\;
  m_sc_payld(107) <= \<const0>\;
  m_sc_payld(106) <= \<const0>\;
  m_sc_payld(105) <= \<const0>\;
  m_sc_payld(104) <= \<const0>\;
  m_sc_payld(103) <= \<const0>\;
  m_sc_payld(102) <= \<const0>\;
  m_sc_payld(101) <= \<const0>\;
  m_sc_payld(100) <= \<const0>\;
  m_sc_payld(99) <= \<const0>\;
  m_sc_payld(98) <= \<const0>\;
  m_sc_payld(97) <= \<const0>\;
  m_sc_payld(96) <= \<const0>\;
  m_sc_payld(95) <= \<const0>\;
  m_sc_payld(94) <= \<const0>\;
  m_sc_payld(93) <= \<const0>\;
  m_sc_payld(92) <= \<const0>\;
  m_sc_payld(91) <= \<const0>\;
  m_sc_payld(90) <= \<const0>\;
  m_sc_payld(89) <= \<const0>\;
  m_sc_payld(88) <= \<const0>\;
  m_sc_payld(87) <= \<const0>\;
  m_sc_payld(86) <= \<const0>\;
  m_sc_payld(85) <= \<const0>\;
  m_sc_payld(84) <= \<const0>\;
  m_sc_payld(83) <= \<const0>\;
  m_sc_payld(82) <= \<const0>\;
  m_sc_payld(81) <= \<const0>\;
  m_sc_payld(80) <= \<const0>\;
  m_sc_payld(79) <= \<const0>\;
  m_sc_payld(78) <= \<const0>\;
  m_sc_payld(77) <= \<const0>\;
  m_sc_payld(76) <= \<const0>\;
  m_sc_payld(75) <= \<const0>\;
  m_sc_payld(74) <= \<const0>\;
  m_sc_payld(73) <= \<const0>\;
  m_sc_payld(72) <= \<const0>\;
  m_sc_payld(71) <= \<const0>\;
  m_sc_payld(70) <= \<const0>\;
  m_sc_payld(69) <= \<const0>\;
  m_sc_payld(68) <= \<const0>\;
  m_sc_payld(67) <= \<const0>\;
  m_sc_payld(66) <= \<const0>\;
  m_sc_payld(65) <= \<const0>\;
  m_sc_payld(64) <= \<const0>\;
  m_sc_payld(63) <= \<const0>\;
  m_sc_payld(62) <= \<const0>\;
  m_sc_payld(61) <= \<const0>\;
  m_sc_payld(60) <= \<const0>\;
  m_sc_payld(59) <= \<const0>\;
  m_sc_payld(58) <= \<const0>\;
  m_sc_payld(57) <= \<const0>\;
  m_sc_payld(56) <= \<const0>\;
  m_sc_payld(55) <= \<const0>\;
  m_sc_payld(54) <= \<const0>\;
  m_sc_payld(53) <= \<const0>\;
  m_sc_payld(52) <= \<const0>\;
  m_sc_payld(51) <= \<const0>\;
  m_sc_payld(50) <= \<const0>\;
  m_sc_payld(49) <= \<const0>\;
  m_sc_payld(48) <= \<const0>\;
  m_sc_payld(47) <= \<const0>\;
  m_sc_payld(46) <= \<const0>\;
  m_sc_payld(45) <= \<const0>\;
  m_sc_payld(44) <= \<const0>\;
  m_sc_payld(43) <= \<const0>\;
  m_sc_payld(42) <= \<const0>\;
  m_sc_payld(41) <= \<const0>\;
  m_sc_payld(40) <= \<const0>\;
  m_sc_payld(39) <= \<const0>\;
  m_sc_payld(38) <= \<const0>\;
  m_sc_payld(37) <= \<const0>\;
  m_sc_payld(36) <= \<const0>\;
  m_sc_payld(35) <= \<const0>\;
  m_sc_payld(34) <= \<const0>\;
  m_sc_payld(33) <= \<const0>\;
  m_sc_payld(32) <= \<const0>\;
  m_sc_payld(31) <= \<const0>\;
  m_sc_payld(30) <= \<const0>\;
  m_sc_payld(29) <= \<const0>\;
  m_sc_payld(28) <= \<const0>\;
  m_sc_payld(27) <= \<const0>\;
  m_sc_payld(26) <= \<const0>\;
  m_sc_payld(25) <= \<const0>\;
  m_sc_payld(24) <= \<const0>\;
  m_sc_payld(23) <= \<const0>\;
  m_sc_payld(22) <= \<const0>\;
  m_sc_payld(21) <= \<const0>\;
  m_sc_payld(20) <= \<const0>\;
  m_sc_payld(19) <= \<const0>\;
  m_sc_payld(18) <= \<const0>\;
  m_sc_payld(17) <= \<const0>\;
  m_sc_payld(16) <= \<const0>\;
  m_sc_payld(15) <= \<const0>\;
  m_sc_payld(14) <= \<const0>\;
  m_sc_payld(13) <= \<const0>\;
  m_sc_payld(12) <= \<const0>\;
  m_sc_payld(11) <= \<const0>\;
  m_sc_payld(10) <= \<const0>\;
  m_sc_payld(9) <= \<const0>\;
  m_sc_payld(8) <= \<const0>\;
  m_sc_payld(7) <= \<const0>\;
  m_sc_payld(6) <= \<const0>\;
  m_sc_payld(5) <= \<const0>\;
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  m_sc_req(0) <= \<const0>\;
  s_axis_arb_tready <= \<const0>\;
  s_sc_recv(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_mi_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized4\
     port map (
      m_sc_send(0) => m_sc_send(0),
      \out\ => s_sc_areset_pipe,
      s_sc_aclk => s_sc_aclk,
      s_sc_send(0) => s_sc_send(0)
    );
mi_handler_m_sc_areset_pipe_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mi_handler_m_sc_areset,
      O => mi_handler_m_sc_areset_pipe
    );
s_sc_areset_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_areset,
      O => mi_handler_m_sc_areset
    );
s_sc_areset_pipe_inferred_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_sc_aresetn,
      O => s_sc_areset_pipe
    );
s_sc_areset_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => '0',
      Q => s_sc_areset,
      S => s_sc_areset_pipe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ is
  port (
    s_sc_aclk : in STD_LOGIC;
    s_sc_aclken : in STD_LOGIC;
    s_sc_aresetn : in STD_LOGIC;
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 140 downto 0 );
    m_sc_aclk : in STD_LOGIC;
    m_sc_aclken : in STD_LOGIC;
    m_sc_aresetn : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 140 downto 0 );
    m_axis_arb_tvalid : out STD_LOGIC;
    m_axis_arb_tready : in STD_LOGIC;
    m_axis_arb_tdata : out STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axis_arb_tvalid : in STD_LOGIC;
    s_axis_arb_tready : out STD_LOGIC;
    s_axis_arb_tdata : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 3;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 141;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is "sc_node_v1_0_10_top";
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ : entity is 16;
end \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\ is
  signal \<const0>\ : STD_LOGIC;
  signal mi_handler_m_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of mi_handler_m_sc_areset : signal is std.standard.true;
  signal mi_handler_m_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of mi_handler_m_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset : signal is std.standard.true;
  signal s_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset_pipe : signal is std.standard.true;
  attribute DONT_TOUCH of s_sc_areset_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_sc_areset_reg : label is "yes";
begin
  m_axis_arb_tdata(15) <= \<const0>\;
  m_axis_arb_tdata(14) <= \<const0>\;
  m_axis_arb_tdata(13) <= \<const0>\;
  m_axis_arb_tdata(12) <= \<const0>\;
  m_axis_arb_tdata(11) <= \<const0>\;
  m_axis_arb_tdata(10) <= \<const0>\;
  m_axis_arb_tdata(9) <= \<const0>\;
  m_axis_arb_tdata(8) <= \<const0>\;
  m_axis_arb_tdata(7) <= \<const0>\;
  m_axis_arb_tdata(6) <= \<const0>\;
  m_axis_arb_tdata(5) <= \<const0>\;
  m_axis_arb_tdata(4) <= \<const0>\;
  m_axis_arb_tdata(3) <= \<const0>\;
  m_axis_arb_tdata(2) <= \<const0>\;
  m_axis_arb_tdata(1) <= \<const0>\;
  m_axis_arb_tdata(0) <= \<const0>\;
  m_axis_arb_tvalid <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(140) <= \<const0>\;
  m_sc_payld(139) <= \<const0>\;
  m_sc_payld(138) <= \<const0>\;
  m_sc_payld(137) <= \<const0>\;
  m_sc_payld(136) <= \<const0>\;
  m_sc_payld(135) <= \<const0>\;
  m_sc_payld(134) <= \<const0>\;
  m_sc_payld(133) <= \<const0>\;
  m_sc_payld(132) <= \<const0>\;
  m_sc_payld(131) <= \<const0>\;
  m_sc_payld(130) <= \<const0>\;
  m_sc_payld(129) <= \<const0>\;
  m_sc_payld(128) <= \<const0>\;
  m_sc_payld(127) <= \<const0>\;
  m_sc_payld(126) <= \<const0>\;
  m_sc_payld(125) <= \<const0>\;
  m_sc_payld(124) <= \<const0>\;
  m_sc_payld(123) <= \<const0>\;
  m_sc_payld(122) <= \<const0>\;
  m_sc_payld(121) <= \<const0>\;
  m_sc_payld(120) <= \<const0>\;
  m_sc_payld(119) <= \<const0>\;
  m_sc_payld(118) <= \<const0>\;
  m_sc_payld(117) <= \<const0>\;
  m_sc_payld(116) <= \<const0>\;
  m_sc_payld(115) <= \<const0>\;
  m_sc_payld(114) <= \<const0>\;
  m_sc_payld(113) <= \<const0>\;
  m_sc_payld(112) <= \<const0>\;
  m_sc_payld(111) <= \<const0>\;
  m_sc_payld(110) <= \<const0>\;
  m_sc_payld(109) <= \<const0>\;
  m_sc_payld(108) <= \<const0>\;
  m_sc_payld(107) <= \<const0>\;
  m_sc_payld(106) <= \<const0>\;
  m_sc_payld(105) <= \<const0>\;
  m_sc_payld(104) <= \<const0>\;
  m_sc_payld(103) <= \<const0>\;
  m_sc_payld(102) <= \<const0>\;
  m_sc_payld(101) <= \<const0>\;
  m_sc_payld(100) <= \<const0>\;
  m_sc_payld(99) <= \<const0>\;
  m_sc_payld(98) <= \<const0>\;
  m_sc_payld(97) <= \<const0>\;
  m_sc_payld(96) <= \<const0>\;
  m_sc_payld(95) <= \<const0>\;
  m_sc_payld(94) <= \<const0>\;
  m_sc_payld(93) <= \<const0>\;
  m_sc_payld(92) <= \<const0>\;
  m_sc_payld(91) <= \<const0>\;
  m_sc_payld(90) <= \<const0>\;
  m_sc_payld(89) <= \<const0>\;
  m_sc_payld(88) <= \<const0>\;
  m_sc_payld(87) <= \<const0>\;
  m_sc_payld(86) <= \<const0>\;
  m_sc_payld(85) <= \<const0>\;
  m_sc_payld(84) <= \<const0>\;
  m_sc_payld(83) <= \<const0>\;
  m_sc_payld(82) <= \<const0>\;
  m_sc_payld(81) <= \<const0>\;
  m_sc_payld(80) <= \<const0>\;
  m_sc_payld(79) <= \<const0>\;
  m_sc_payld(78) <= \<const0>\;
  m_sc_payld(77) <= \<const0>\;
  m_sc_payld(76) <= \<const0>\;
  m_sc_payld(75) <= \<const0>\;
  m_sc_payld(74) <= \<const0>\;
  m_sc_payld(73) <= \<const0>\;
  m_sc_payld(72) <= \<const0>\;
  m_sc_payld(71) <= \<const0>\;
  m_sc_payld(70) <= \<const0>\;
  m_sc_payld(69) <= \<const0>\;
  m_sc_payld(68) <= \<const0>\;
  m_sc_payld(67) <= \<const0>\;
  m_sc_payld(66) <= \<const0>\;
  m_sc_payld(65) <= \<const0>\;
  m_sc_payld(64) <= \<const0>\;
  m_sc_payld(63) <= \<const0>\;
  m_sc_payld(62) <= \<const0>\;
  m_sc_payld(61) <= \<const0>\;
  m_sc_payld(60) <= \<const0>\;
  m_sc_payld(59) <= \<const0>\;
  m_sc_payld(58) <= \<const0>\;
  m_sc_payld(57) <= \<const0>\;
  m_sc_payld(56) <= \<const0>\;
  m_sc_payld(55) <= \<const0>\;
  m_sc_payld(54) <= \<const0>\;
  m_sc_payld(53) <= \<const0>\;
  m_sc_payld(52) <= \<const0>\;
  m_sc_payld(51) <= \<const0>\;
  m_sc_payld(50) <= \<const0>\;
  m_sc_payld(49) <= \<const0>\;
  m_sc_payld(48) <= \<const0>\;
  m_sc_payld(47) <= \<const0>\;
  m_sc_payld(46) <= \<const0>\;
  m_sc_payld(45) <= \<const0>\;
  m_sc_payld(44) <= \<const0>\;
  m_sc_payld(43) <= \<const0>\;
  m_sc_payld(42) <= \<const0>\;
  m_sc_payld(41) <= \<const0>\;
  m_sc_payld(40) <= \<const0>\;
  m_sc_payld(39) <= \<const0>\;
  m_sc_payld(38) <= \<const0>\;
  m_sc_payld(37) <= \<const0>\;
  m_sc_payld(36) <= \<const0>\;
  m_sc_payld(35) <= \<const0>\;
  m_sc_payld(34) <= \<const0>\;
  m_sc_payld(33) <= \<const0>\;
  m_sc_payld(32) <= \<const0>\;
  m_sc_payld(31) <= \<const0>\;
  m_sc_payld(30) <= \<const0>\;
  m_sc_payld(29) <= \<const0>\;
  m_sc_payld(28) <= \<const0>\;
  m_sc_payld(27) <= \<const0>\;
  m_sc_payld(26) <= \<const0>\;
  m_sc_payld(25) <= \<const0>\;
  m_sc_payld(24) <= \<const0>\;
  m_sc_payld(23) <= \<const0>\;
  m_sc_payld(22) <= \<const0>\;
  m_sc_payld(21) <= \<const0>\;
  m_sc_payld(20) <= \<const0>\;
  m_sc_payld(19) <= \<const0>\;
  m_sc_payld(18) <= \<const0>\;
  m_sc_payld(17) <= \<const0>\;
  m_sc_payld(16) <= \<const0>\;
  m_sc_payld(15) <= \<const0>\;
  m_sc_payld(14) <= \<const0>\;
  m_sc_payld(13) <= \<const0>\;
  m_sc_payld(12) <= \<const0>\;
  m_sc_payld(11) <= \<const0>\;
  m_sc_payld(10) <= \<const0>\;
  m_sc_payld(9) <= \<const0>\;
  m_sc_payld(8) <= \<const0>\;
  m_sc_payld(7) <= \<const0>\;
  m_sc_payld(6) <= \<const0>\;
  m_sc_payld(5) <= \<const0>\;
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  m_sc_req(0) <= \<const0>\;
  s_axis_arb_tready <= \<const0>\;
  s_sc_recv(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_mi_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized5\
     port map (
      m_sc_send(0) => m_sc_send(0),
      \out\ => s_sc_areset_pipe,
      s_sc_aclk => s_sc_aclk,
      s_sc_send(0) => s_sc_send(0)
    );
mi_handler_m_sc_areset_pipe_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mi_handler_m_sc_areset,
      O => mi_handler_m_sc_areset_pipe
    );
s_sc_areset_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_areset,
      O => mi_handler_m_sc_areset
    );
s_sc_areset_pipe_inferred_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_sc_aresetn,
      O => s_sc_areset_pipe
    );
s_sc_areset_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => '0',
      Q => s_sc_areset,
      S => s_sc_areset_pipe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ is
  port (
    s_sc_aclk : in STD_LOGIC;
    s_sc_aclken : in STD_LOGIC;
    s_sc_aresetn : in STD_LOGIC;
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 6 downto 0 );
    m_sc_aclk : in STD_LOGIC;
    m_sc_aclken : in STD_LOGIC;
    m_sc_aresetn : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 6 downto 0 );
    m_axis_arb_tvalid : out STD_LOGIC;
    m_axis_arb_tready : in STD_LOGIC;
    m_axis_arb_tdata : out STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axis_arb_tvalid : in STD_LOGIC;
    s_axis_arb_tready : out STD_LOGIC;
    s_axis_arb_tdata : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 4;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 7;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 3;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 3;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is "sc_node_v1_0_10_top";
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ : entity is 16;
end \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\ is
  signal \<const0>\ : STD_LOGIC;
  signal mi_handler_m_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of mi_handler_m_sc_areset : signal is std.standard.true;
  signal mi_handler_m_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of mi_handler_m_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset : signal is std.standard.true;
  signal s_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset_pipe : signal is std.standard.true;
  attribute DONT_TOUCH of s_sc_areset_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_sc_areset_reg : label is "yes";
begin
  m_axis_arb_tdata(15) <= \<const0>\;
  m_axis_arb_tdata(14) <= \<const0>\;
  m_axis_arb_tdata(13) <= \<const0>\;
  m_axis_arb_tdata(12) <= \<const0>\;
  m_axis_arb_tdata(11) <= \<const0>\;
  m_axis_arb_tdata(10) <= \<const0>\;
  m_axis_arb_tdata(9) <= \<const0>\;
  m_axis_arb_tdata(8) <= \<const0>\;
  m_axis_arb_tdata(7) <= \<const0>\;
  m_axis_arb_tdata(6) <= \<const0>\;
  m_axis_arb_tdata(5) <= \<const0>\;
  m_axis_arb_tdata(4) <= \<const0>\;
  m_axis_arb_tdata(3) <= \<const0>\;
  m_axis_arb_tdata(2) <= \<const0>\;
  m_axis_arb_tdata(1) <= \<const0>\;
  m_axis_arb_tdata(0) <= \<const0>\;
  m_axis_arb_tvalid <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(6) <= \<const0>\;
  m_sc_payld(5) <= \<const0>\;
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  m_sc_req(0) <= \<const0>\;
  s_axis_arb_tready <= \<const0>\;
  s_sc_recv(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_mi_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized6\
     port map (
      m_sc_send(0) => m_sc_send(0),
      \out\ => s_sc_areset_pipe,
      s_sc_aclk => s_sc_aclk,
      s_sc_send(0) => s_sc_send(0)
    );
mi_handler_m_sc_areset_pipe_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mi_handler_m_sc_areset,
      O => mi_handler_m_sc_areset_pipe
    );
s_sc_areset_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_areset,
      O => mi_handler_m_sc_areset
    );
s_sc_areset_pipe_inferred_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_sc_aresetn,
      O => s_sc_areset_pipe
    );
s_sc_areset_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => '0',
      Q => s_sc_areset,
      S => s_sc_areset_pipe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ is
  port (
    s_sc_aclk : in STD_LOGIC;
    s_sc_aclken : in STD_LOGIC;
    s_sc_aresetn : in STD_LOGIC;
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 52 downto 0 );
    m_sc_aclk : in STD_LOGIC;
    m_sc_aclken : in STD_LOGIC;
    m_sc_aresetn : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 52 downto 0 );
    m_axis_arb_tvalid : out STD_LOGIC;
    m_axis_arb_tready : in STD_LOGIC;
    m_axis_arb_tdata : out STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axis_arb_tvalid : in STD_LOGIC;
    s_axis_arb_tready : out STD_LOGIC;
    s_axis_arb_tdata : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 0;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 53;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 3;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 512;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 3;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is "sc_node_v1_0_10_top";
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ : entity is 16;
end \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\ is
  signal \<const0>\ : STD_LOGIC;
  signal mi_handler_m_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of mi_handler_m_sc_areset : signal is std.standard.true;
  signal mi_handler_m_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of mi_handler_m_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset : signal is std.standard.true;
  signal s_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset_pipe : signal is std.standard.true;
  attribute DONT_TOUCH of s_sc_areset_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_sc_areset_reg : label is "yes";
begin
  m_axis_arb_tdata(15) <= \<const0>\;
  m_axis_arb_tdata(14) <= \<const0>\;
  m_axis_arb_tdata(13) <= \<const0>\;
  m_axis_arb_tdata(12) <= \<const0>\;
  m_axis_arb_tdata(11) <= \<const0>\;
  m_axis_arb_tdata(10) <= \<const0>\;
  m_axis_arb_tdata(9) <= \<const0>\;
  m_axis_arb_tdata(8) <= \<const0>\;
  m_axis_arb_tdata(7) <= \<const0>\;
  m_axis_arb_tdata(6) <= \<const0>\;
  m_axis_arb_tdata(5) <= \<const0>\;
  m_axis_arb_tdata(4) <= \<const0>\;
  m_axis_arb_tdata(3) <= \<const0>\;
  m_axis_arb_tdata(2) <= \<const0>\;
  m_axis_arb_tdata(1) <= \<const0>\;
  m_axis_arb_tdata(0) <= \<const0>\;
  m_axis_arb_tvalid <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(52) <= \<const0>\;
  m_sc_payld(51) <= \<const0>\;
  m_sc_payld(50) <= \<const0>\;
  m_sc_payld(49) <= \<const0>\;
  m_sc_payld(48) <= \<const0>\;
  m_sc_payld(47) <= \<const0>\;
  m_sc_payld(46) <= \<const0>\;
  m_sc_payld(45) <= \<const0>\;
  m_sc_payld(44) <= \<const0>\;
  m_sc_payld(43) <= \<const0>\;
  m_sc_payld(42) <= \<const0>\;
  m_sc_payld(41) <= \<const0>\;
  m_sc_payld(40) <= \<const0>\;
  m_sc_payld(39) <= \<const0>\;
  m_sc_payld(38) <= \<const0>\;
  m_sc_payld(37) <= \<const0>\;
  m_sc_payld(36) <= \<const0>\;
  m_sc_payld(35) <= \<const0>\;
  m_sc_payld(34) <= \<const0>\;
  m_sc_payld(33) <= \<const0>\;
  m_sc_payld(32) <= \<const0>\;
  m_sc_payld(31) <= \<const0>\;
  m_sc_payld(30) <= \<const0>\;
  m_sc_payld(29) <= \<const0>\;
  m_sc_payld(28) <= \<const0>\;
  m_sc_payld(27) <= \<const0>\;
  m_sc_payld(26) <= \<const0>\;
  m_sc_payld(25) <= \<const0>\;
  m_sc_payld(24) <= \<const0>\;
  m_sc_payld(23) <= \<const0>\;
  m_sc_payld(22) <= \<const0>\;
  m_sc_payld(21) <= \<const0>\;
  m_sc_payld(20) <= \<const0>\;
  m_sc_payld(19) <= \<const0>\;
  m_sc_payld(18) <= \<const0>\;
  m_sc_payld(17) <= \<const0>\;
  m_sc_payld(16) <= \<const0>\;
  m_sc_payld(15) <= \<const0>\;
  m_sc_payld(14) <= \<const0>\;
  m_sc_payld(13) <= \<const0>\;
  m_sc_payld(12) <= \<const0>\;
  m_sc_payld(11) <= \<const0>\;
  m_sc_payld(10) <= \<const0>\;
  m_sc_payld(9) <= \<const0>\;
  m_sc_payld(8) <= \<const0>\;
  m_sc_payld(7) <= \<const0>\;
  m_sc_payld(6) <= \<const0>\;
  m_sc_payld(5) <= \<const0>\;
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  m_sc_req(0) <= \<const0>\;
  s_axis_arb_tready <= \<const0>\;
  s_sc_recv(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_mi_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized7\
     port map (
      m_sc_send(0) => m_sc_send(0),
      \out\ => s_sc_areset_pipe,
      s_sc_aclk => s_sc_aclk,
      s_sc_send(0) => s_sc_send(0)
    );
mi_handler_m_sc_areset_pipe_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mi_handler_m_sc_areset,
      O => mi_handler_m_sc_areset_pipe
    );
s_sc_areset_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_areset,
      O => mi_handler_m_sc_areset
    );
s_sc_areset_pipe_inferred_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_sc_aresetn,
      O => s_sc_areset_pipe
    );
s_sc_areset_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => '0',
      Q => s_sc_areset,
      S => s_sc_areset_pipe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ is
  port (
    s_sc_aclk : in STD_LOGIC;
    s_sc_aclken : in STD_LOGIC;
    s_sc_aresetn : in STD_LOGIC;
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 54 downto 0 );
    m_sc_aclk : in STD_LOGIC;
    m_sc_aclken : in STD_LOGIC;
    m_sc_aresetn : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 54 downto 0 );
    m_axis_arb_tvalid : out STD_LOGIC;
    m_axis_arb_tready : in STD_LOGIC;
    m_axis_arb_tdata : out STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axis_arb_tvalid : in STD_LOGIC;
    s_axis_arb_tready : out STD_LOGIC;
    s_axis_arb_tdata : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 55;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 512;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 2;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is "sc_node_v1_0_10_top";
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ : entity is 16;
end \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\ is
  signal \<const0>\ : STD_LOGIC;
  signal mi_handler_m_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of mi_handler_m_sc_areset : signal is std.standard.true;
  signal mi_handler_m_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of mi_handler_m_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset : signal is std.standard.true;
  signal s_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset_pipe : signal is std.standard.true;
  attribute DONT_TOUCH of s_sc_areset_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_sc_areset_reg : label is "yes";
begin
  m_axis_arb_tdata(15) <= \<const0>\;
  m_axis_arb_tdata(14) <= \<const0>\;
  m_axis_arb_tdata(13) <= \<const0>\;
  m_axis_arb_tdata(12) <= \<const0>\;
  m_axis_arb_tdata(11) <= \<const0>\;
  m_axis_arb_tdata(10) <= \<const0>\;
  m_axis_arb_tdata(9) <= \<const0>\;
  m_axis_arb_tdata(8) <= \<const0>\;
  m_axis_arb_tdata(7) <= \<const0>\;
  m_axis_arb_tdata(6) <= \<const0>\;
  m_axis_arb_tdata(5) <= \<const0>\;
  m_axis_arb_tdata(4) <= \<const0>\;
  m_axis_arb_tdata(3) <= \<const0>\;
  m_axis_arb_tdata(2) <= \<const0>\;
  m_axis_arb_tdata(1) <= \<const0>\;
  m_axis_arb_tdata(0) <= \<const0>\;
  m_axis_arb_tvalid <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(54) <= \<const0>\;
  m_sc_payld(53) <= \<const0>\;
  m_sc_payld(52) <= \<const0>\;
  m_sc_payld(51) <= \<const0>\;
  m_sc_payld(50) <= \<const0>\;
  m_sc_payld(49) <= \<const0>\;
  m_sc_payld(48) <= \<const0>\;
  m_sc_payld(47) <= \<const0>\;
  m_sc_payld(46) <= \<const0>\;
  m_sc_payld(45) <= \<const0>\;
  m_sc_payld(44) <= \<const0>\;
  m_sc_payld(43) <= \<const0>\;
  m_sc_payld(42) <= \<const0>\;
  m_sc_payld(41) <= \<const0>\;
  m_sc_payld(40) <= \<const0>\;
  m_sc_payld(39) <= \<const0>\;
  m_sc_payld(38) <= \<const0>\;
  m_sc_payld(37) <= \<const0>\;
  m_sc_payld(36) <= \<const0>\;
  m_sc_payld(35) <= \<const0>\;
  m_sc_payld(34) <= \<const0>\;
  m_sc_payld(33) <= \<const0>\;
  m_sc_payld(32) <= \<const0>\;
  m_sc_payld(31) <= \<const0>\;
  m_sc_payld(30) <= \<const0>\;
  m_sc_payld(29) <= \<const0>\;
  m_sc_payld(28) <= \<const0>\;
  m_sc_payld(27) <= \<const0>\;
  m_sc_payld(26) <= \<const0>\;
  m_sc_payld(25) <= \<const0>\;
  m_sc_payld(24) <= \<const0>\;
  m_sc_payld(23) <= \<const0>\;
  m_sc_payld(22) <= \<const0>\;
  m_sc_payld(21) <= \<const0>\;
  m_sc_payld(20) <= \<const0>\;
  m_sc_payld(19) <= \<const0>\;
  m_sc_payld(18) <= \<const0>\;
  m_sc_payld(17) <= \<const0>\;
  m_sc_payld(16) <= \<const0>\;
  m_sc_payld(15) <= \<const0>\;
  m_sc_payld(14) <= \<const0>\;
  m_sc_payld(13) <= \<const0>\;
  m_sc_payld(12) <= \<const0>\;
  m_sc_payld(11) <= \<const0>\;
  m_sc_payld(10) <= \<const0>\;
  m_sc_payld(9) <= \<const0>\;
  m_sc_payld(8) <= \<const0>\;
  m_sc_payld(7) <= \<const0>\;
  m_sc_payld(6) <= \<const0>\;
  m_sc_payld(5) <= \<const0>\;
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  m_sc_req(0) <= \<const0>\;
  s_axis_arb_tready <= \<const0>\;
  s_sc_recv(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_mi_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized8\
     port map (
      m_sc_send(0) => m_sc_send(0),
      \out\ => s_sc_areset_pipe,
      s_sc_aclk => s_sc_aclk,
      s_sc_send(0) => s_sc_send(0)
    );
mi_handler_m_sc_areset_pipe_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mi_handler_m_sc_areset,
      O => mi_handler_m_sc_areset_pipe
    );
s_sc_areset_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_areset,
      O => mi_handler_m_sc_areset
    );
s_sc_areset_pipe_inferred_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_sc_aresetn,
      O => s_sc_areset_pipe
    );
s_sc_areset_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => '0',
      Q => s_sc_areset,
      S => s_sc_areset_pipe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_si_converter_v1_0_9_top is
  port (
    aclk : in STD_LOGIC;
    aclken : in STD_LOGIC;
    aresetn : in STD_LOGIC;
    s_axi_awid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awuser : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    s_axi_awvalid : in STD_LOGIC;
    s_axi_awready : out STD_LOGIC;
    s_axi_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_wlast : in STD_LOGIC;
    s_axi_wuser : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    s_axi_wvalid : in STD_LOGIC;
    s_axi_wready : out STD_LOGIC;
    s_axi_bid : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_buser : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    s_axi_bvalid : out STD_LOGIC;
    s_axi_bready : in STD_LOGIC;
    s_axi_arid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_araddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_aruser : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    s_axi_arvalid : in STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    s_axi_rid : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_rlast : out STD_LOGIC;
    s_axi_ruser : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    s_axi_rvalid : out STD_LOGIC;
    s_axi_rready : in STD_LOGIC;
    m_axi_awid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awaddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_awlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awuser : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    m_axi_awvalid : out STD_LOGIC;
    m_axi_awready : in STD_LOGIC;
    m_axi_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_wlast : out STD_LOGIC;
    m_axi_wuser : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    m_axi_wvalid : out STD_LOGIC;
    m_axi_wready : in STD_LOGIC;
    m_axi_bid : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_buser : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    m_axi_bvalid : in STD_LOGIC;
    m_axi_bready : out STD_LOGIC;
    m_axi_arid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_araddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_arlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aruser : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    m_axi_arvalid : out STD_LOGIC;
    m_axi_arready : in STD_LOGIC;
    m_axi_rid : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_rlast : in STD_LOGIC;
    m_axi_ruser : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    m_axi_rvalid : in STD_LOGIC;
    m_axi_rready : out STD_LOGIC
  );
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 32;
  attribute C_AXILITE_CONV : integer;
  attribute C_AXILITE_CONV of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 1;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is "1'b1";
  attribute C_HAS_BURST : integer;
  attribute C_HAS_BURST of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 1;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 1;
  attribute C_IS_CASCADED : integer;
  attribute C_IS_CASCADED of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 0;
  attribute C_LIMIT_READ_LENGTH : integer;
  attribute C_LIMIT_READ_LENGTH of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 0;
  attribute C_LIMIT_WRITE_LENGTH : integer;
  attribute C_LIMIT_WRITE_LENGTH of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 0;
  attribute C_MAX_RUSER_BITS_PER_BYTE : integer;
  attribute C_MAX_RUSER_BITS_PER_BYTE of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 0;
  attribute C_MAX_WUSER_BITS_PER_BYTE : integer;
  attribute C_MAX_WUSER_BITS_PER_BYTE of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 0;
  attribute C_MEP_IDENTIFIER_WIDTH : integer;
  attribute C_MEP_IDENTIFIER_WIDTH of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 1;
  attribute C_MSC_RDATA_WIDTH_ARRAY : string;
  attribute C_MSC_RDATA_WIDTH_ARRAY of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is "64'b0000000000000000000000000010000000000000000000000000000000100000";
  attribute C_MSC_WDATA_WIDTH_ARRAY : string;
  attribute C_MSC_WDATA_WIDTH_ARRAY of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is "64'b0000000000000000000000000010000000000000000000000000000000100000";
  attribute C_NUM_MSC : integer;
  attribute C_NUM_MSC of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 2;
  attribute C_NUM_READ_OUTSTANDING : integer;
  attribute C_NUM_READ_OUTSTANDING of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 8;
  attribute C_NUM_READ_THREADS : integer;
  attribute C_NUM_READ_THREADS of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 1;
  attribute C_NUM_SEG : integer;
  attribute C_NUM_SEG of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 1;
  attribute C_NUM_WRITE_OUTSTANDING : integer;
  attribute C_NUM_WRITE_OUTSTANDING of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 8;
  attribute C_NUM_WRITE_THREADS : integer;
  attribute C_NUM_WRITE_THREADS of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 1;
  attribute C_RDATA_WIDTH : integer;
  attribute C_RDATA_WIDTH of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 32;
  attribute C_READ_ACCEPTANCE : integer;
  attribute C_READ_ACCEPTANCE of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 32;
  attribute C_READ_WATERMARK : integer;
  attribute C_READ_WATERMARK of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 0;
  attribute C_SEP_PROTOCOL_ARRAY : integer;
  attribute C_SEP_PROTOCOL_ARRAY of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 2;
  attribute C_SEP_RDATA_WIDTH_ARRAY : integer;
  attribute C_SEP_RDATA_WIDTH_ARRAY of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 32;
  attribute C_SEP_WDATA_WIDTH_ARRAY : integer;
  attribute C_SEP_WDATA_WIDTH_ARRAY of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 32;
  attribute C_SINGLE_ISSUING : integer;
  attribute C_SINGLE_ISSUING of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 1;
  attribute C_SUPPORTS_NARROW : integer;
  attribute C_SUPPORTS_NARROW of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 0;
  attribute C_S_RUSER_BITS_PER_BYTE : integer;
  attribute C_S_RUSER_BITS_PER_BYTE of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 0;
  attribute C_S_WUSER_BITS_PER_BYTE : integer;
  attribute C_S_WUSER_BITS_PER_BYTE of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 0;
  attribute C_WDATA_WIDTH : integer;
  attribute C_WDATA_WIDTH of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 32;
  attribute C_WRITE_ACCEPTANCE : integer;
  attribute C_WRITE_ACCEPTANCE of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 32;
  attribute C_WRITE_WATERMARK : integer;
  attribute C_WRITE_WATERMARK of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is "sc_si_converter_v1_0_9_top";
  attribute P_EXOK : string;
  attribute P_EXOK of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is "2'b01";
  attribute P_FULLY_PIPELINED : integer;
  attribute P_FULLY_PIPELINED of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 2;
  attribute P_ID_WIDTH : integer;
  attribute P_ID_WIDTH of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 1;
  attribute P_MAX_RUSER_BITS_PER_BYTE : integer;
  attribute P_MAX_RUSER_BITS_PER_BYTE of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 1;
  attribute P_MAX_WUSER_BITS_PER_BYTE : integer;
  attribute P_MAX_WUSER_BITS_PER_BYTE of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 1;
  attribute P_NUM_READ_OUTSTANDING : integer;
  attribute P_NUM_READ_OUTSTANDING of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 16;
  attribute P_NUM_WRITE_OUTSTANDING : integer;
  attribute P_NUM_WRITE_OUTSTANDING of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 16;
  attribute P_R_DWBYTES : integer;
  attribute P_R_DWBYTES of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 4;
  attribute P_R_DWSIZE : integer;
  attribute P_R_DWSIZE of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 2;
  attribute P_S_RUSER_BITS_PER_BYTE : integer;
  attribute P_S_RUSER_BITS_PER_BYTE of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 1;
  attribute P_S_WUSER_BITS_PER_BYTE : integer;
  attribute P_S_WUSER_BITS_PER_BYTE of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 1;
  attribute P_W_DWBYTES : integer;
  attribute P_W_DWBYTES of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 4;
  attribute P_W_DWSIZE : integer;
  attribute P_W_DWSIZE of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 2;
  attribute P_ZERO_LATENCY : integer;
  attribute P_ZERO_LATENCY of design_1_axi_smc_0_sc_si_converter_v1_0_9_top : entity is 1;
end design_1_axi_smc_0_sc_si_converter_v1_0_9_top;

architecture STRUCTURE of design_1_axi_smc_0_sc_si_converter_v1_0_9_top is
  signal \<const0>\ : STD_LOGIC;
  signal areset : STD_LOGIC;
  signal areset_i_1_n_0 : STD_LOGIC;
  signal \^m_axi_araddr\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \^m_axi_aruser\ : STD_LOGIC_VECTOR ( 2 to 2 );
  signal \^m_axi_awaddr\ : STD_LOGIC_VECTOR ( 7 downto 0 );
begin
  m_axi_araddr(31) <= \<const0>\;
  m_axi_araddr(30) <= \<const0>\;
  m_axi_araddr(29) <= \<const0>\;
  m_axi_araddr(28) <= \<const0>\;
  m_axi_araddr(27) <= \<const0>\;
  m_axi_araddr(26) <= \<const0>\;
  m_axi_araddr(25) <= \<const0>\;
  m_axi_araddr(24) <= \<const0>\;
  m_axi_araddr(23) <= \<const0>\;
  m_axi_araddr(22) <= \<const0>\;
  m_axi_araddr(21) <= \<const0>\;
  m_axi_araddr(20) <= \<const0>\;
  m_axi_araddr(19) <= \<const0>\;
  m_axi_araddr(18) <= \<const0>\;
  m_axi_araddr(17) <= \<const0>\;
  m_axi_araddr(16) <= \<const0>\;
  m_axi_araddr(15) <= \<const0>\;
  m_axi_araddr(14) <= \<const0>\;
  m_axi_araddr(13) <= \<const0>\;
  m_axi_araddr(12) <= \<const0>\;
  m_axi_araddr(11) <= \<const0>\;
  m_axi_araddr(10) <= \<const0>\;
  m_axi_araddr(9) <= \<const0>\;
  m_axi_araddr(8) <= \<const0>\;
  m_axi_araddr(7 downto 0) <= \^m_axi_araddr\(7 downto 0);
  m_axi_arcache(3) <= \<const0>\;
  m_axi_arcache(2) <= \<const0>\;
  m_axi_arcache(1) <= \<const0>\;
  m_axi_arcache(0) <= \<const0>\;
  m_axi_arid(0) <= \<const0>\;
  m_axi_arlen(7) <= \<const0>\;
  m_axi_arlen(6) <= \<const0>\;
  m_axi_arlen(5) <= \<const0>\;
  m_axi_arlen(4) <= \<const0>\;
  m_axi_arlen(3) <= \<const0>\;
  m_axi_arlen(2) <= \<const0>\;
  m_axi_arlen(1) <= \<const0>\;
  m_axi_arlen(0) <= \<const0>\;
  m_axi_arlock(0) <= \<const0>\;
  m_axi_arqos(3) <= \<const0>\;
  m_axi_arqos(2) <= \<const0>\;
  m_axi_arqos(1) <= \<const0>\;
  m_axi_arqos(0) <= \<const0>\;
  m_axi_aruser(1023) <= \<const0>\;
  m_axi_aruser(1022) <= \<const0>\;
  m_axi_aruser(1021) <= \<const0>\;
  m_axi_aruser(1020) <= \<const0>\;
  m_axi_aruser(1019) <= \<const0>\;
  m_axi_aruser(1018) <= \<const0>\;
  m_axi_aruser(1017) <= \<const0>\;
  m_axi_aruser(1016) <= \<const0>\;
  m_axi_aruser(1015) <= \<const0>\;
  m_axi_aruser(1014) <= \<const0>\;
  m_axi_aruser(1013) <= \<const0>\;
  m_axi_aruser(1012) <= \<const0>\;
  m_axi_aruser(1011) <= \<const0>\;
  m_axi_aruser(1010) <= \<const0>\;
  m_axi_aruser(1009) <= \<const0>\;
  m_axi_aruser(1008) <= \<const0>\;
  m_axi_aruser(1007) <= \<const0>\;
  m_axi_aruser(1006) <= \<const0>\;
  m_axi_aruser(1005) <= \<const0>\;
  m_axi_aruser(1004) <= \<const0>\;
  m_axi_aruser(1003) <= \<const0>\;
  m_axi_aruser(1002) <= \<const0>\;
  m_axi_aruser(1001) <= \<const0>\;
  m_axi_aruser(1000) <= \<const0>\;
  m_axi_aruser(999) <= \<const0>\;
  m_axi_aruser(998) <= \<const0>\;
  m_axi_aruser(997) <= \<const0>\;
  m_axi_aruser(996) <= \<const0>\;
  m_axi_aruser(995) <= \<const0>\;
  m_axi_aruser(994) <= \<const0>\;
  m_axi_aruser(993) <= \<const0>\;
  m_axi_aruser(992) <= \<const0>\;
  m_axi_aruser(991) <= \<const0>\;
  m_axi_aruser(990) <= \<const0>\;
  m_axi_aruser(989) <= \<const0>\;
  m_axi_aruser(988) <= \<const0>\;
  m_axi_aruser(987) <= \<const0>\;
  m_axi_aruser(986) <= \<const0>\;
  m_axi_aruser(985) <= \<const0>\;
  m_axi_aruser(984) <= \<const0>\;
  m_axi_aruser(983) <= \<const0>\;
  m_axi_aruser(982) <= \<const0>\;
  m_axi_aruser(981) <= \<const0>\;
  m_axi_aruser(980) <= \<const0>\;
  m_axi_aruser(979) <= \<const0>\;
  m_axi_aruser(978) <= \<const0>\;
  m_axi_aruser(977) <= \<const0>\;
  m_axi_aruser(976) <= \<const0>\;
  m_axi_aruser(975) <= \<const0>\;
  m_axi_aruser(974) <= \<const0>\;
  m_axi_aruser(973) <= \<const0>\;
  m_axi_aruser(972) <= \<const0>\;
  m_axi_aruser(971) <= \<const0>\;
  m_axi_aruser(970) <= \<const0>\;
  m_axi_aruser(969) <= \<const0>\;
  m_axi_aruser(968) <= \<const0>\;
  m_axi_aruser(967) <= \<const0>\;
  m_axi_aruser(966) <= \<const0>\;
  m_axi_aruser(965) <= \<const0>\;
  m_axi_aruser(964) <= \<const0>\;
  m_axi_aruser(963) <= \<const0>\;
  m_axi_aruser(962) <= \<const0>\;
  m_axi_aruser(961) <= \<const0>\;
  m_axi_aruser(960) <= \<const0>\;
  m_axi_aruser(959) <= \<const0>\;
  m_axi_aruser(958) <= \<const0>\;
  m_axi_aruser(957) <= \<const0>\;
  m_axi_aruser(956) <= \<const0>\;
  m_axi_aruser(955) <= \<const0>\;
  m_axi_aruser(954) <= \<const0>\;
  m_axi_aruser(953) <= \<const0>\;
  m_axi_aruser(952) <= \<const0>\;
  m_axi_aruser(951) <= \<const0>\;
  m_axi_aruser(950) <= \<const0>\;
  m_axi_aruser(949) <= \<const0>\;
  m_axi_aruser(948) <= \<const0>\;
  m_axi_aruser(947) <= \<const0>\;
  m_axi_aruser(946) <= \<const0>\;
  m_axi_aruser(945) <= \<const0>\;
  m_axi_aruser(944) <= \<const0>\;
  m_axi_aruser(943) <= \<const0>\;
  m_axi_aruser(942) <= \<const0>\;
  m_axi_aruser(941) <= \<const0>\;
  m_axi_aruser(940) <= \<const0>\;
  m_axi_aruser(939) <= \<const0>\;
  m_axi_aruser(938) <= \<const0>\;
  m_axi_aruser(937) <= \<const0>\;
  m_axi_aruser(936) <= \<const0>\;
  m_axi_aruser(935) <= \<const0>\;
  m_axi_aruser(934) <= \<const0>\;
  m_axi_aruser(933) <= \<const0>\;
  m_axi_aruser(932) <= \<const0>\;
  m_axi_aruser(931) <= \<const0>\;
  m_axi_aruser(930) <= \<const0>\;
  m_axi_aruser(929) <= \<const0>\;
  m_axi_aruser(928) <= \<const0>\;
  m_axi_aruser(927) <= \<const0>\;
  m_axi_aruser(926) <= \<const0>\;
  m_axi_aruser(925) <= \<const0>\;
  m_axi_aruser(924) <= \<const0>\;
  m_axi_aruser(923) <= \<const0>\;
  m_axi_aruser(922) <= \<const0>\;
  m_axi_aruser(921) <= \<const0>\;
  m_axi_aruser(920) <= \<const0>\;
  m_axi_aruser(919) <= \<const0>\;
  m_axi_aruser(918) <= \<const0>\;
  m_axi_aruser(917) <= \<const0>\;
  m_axi_aruser(916) <= \<const0>\;
  m_axi_aruser(915) <= \<const0>\;
  m_axi_aruser(914) <= \<const0>\;
  m_axi_aruser(913) <= \<const0>\;
  m_axi_aruser(912) <= \<const0>\;
  m_axi_aruser(911) <= \<const0>\;
  m_axi_aruser(910) <= \<const0>\;
  m_axi_aruser(909) <= \<const0>\;
  m_axi_aruser(908) <= \<const0>\;
  m_axi_aruser(907) <= \<const0>\;
  m_axi_aruser(906) <= \<const0>\;
  m_axi_aruser(905) <= \<const0>\;
  m_axi_aruser(904) <= \<const0>\;
  m_axi_aruser(903) <= \<const0>\;
  m_axi_aruser(902) <= \<const0>\;
  m_axi_aruser(901) <= \<const0>\;
  m_axi_aruser(900) <= \<const0>\;
  m_axi_aruser(899) <= \<const0>\;
  m_axi_aruser(898) <= \<const0>\;
  m_axi_aruser(897) <= \<const0>\;
  m_axi_aruser(896) <= \<const0>\;
  m_axi_aruser(895) <= \<const0>\;
  m_axi_aruser(894) <= \<const0>\;
  m_axi_aruser(893) <= \<const0>\;
  m_axi_aruser(892) <= \<const0>\;
  m_axi_aruser(891) <= \<const0>\;
  m_axi_aruser(890) <= \<const0>\;
  m_axi_aruser(889) <= \<const0>\;
  m_axi_aruser(888) <= \<const0>\;
  m_axi_aruser(887) <= \<const0>\;
  m_axi_aruser(886) <= \<const0>\;
  m_axi_aruser(885) <= \<const0>\;
  m_axi_aruser(884) <= \<const0>\;
  m_axi_aruser(883) <= \<const0>\;
  m_axi_aruser(882) <= \<const0>\;
  m_axi_aruser(881) <= \<const0>\;
  m_axi_aruser(880) <= \<const0>\;
  m_axi_aruser(879) <= \<const0>\;
  m_axi_aruser(878) <= \<const0>\;
  m_axi_aruser(877) <= \<const0>\;
  m_axi_aruser(876) <= \<const0>\;
  m_axi_aruser(875) <= \<const0>\;
  m_axi_aruser(874) <= \<const0>\;
  m_axi_aruser(873) <= \<const0>\;
  m_axi_aruser(872) <= \<const0>\;
  m_axi_aruser(871) <= \<const0>\;
  m_axi_aruser(870) <= \<const0>\;
  m_axi_aruser(869) <= \<const0>\;
  m_axi_aruser(868) <= \<const0>\;
  m_axi_aruser(867) <= \<const0>\;
  m_axi_aruser(866) <= \<const0>\;
  m_axi_aruser(865) <= \<const0>\;
  m_axi_aruser(864) <= \<const0>\;
  m_axi_aruser(863) <= \<const0>\;
  m_axi_aruser(862) <= \<const0>\;
  m_axi_aruser(861) <= \<const0>\;
  m_axi_aruser(860) <= \<const0>\;
  m_axi_aruser(859) <= \<const0>\;
  m_axi_aruser(858) <= \<const0>\;
  m_axi_aruser(857) <= \<const0>\;
  m_axi_aruser(856) <= \<const0>\;
  m_axi_aruser(855) <= \<const0>\;
  m_axi_aruser(854) <= \<const0>\;
  m_axi_aruser(853) <= \<const0>\;
  m_axi_aruser(852) <= \<const0>\;
  m_axi_aruser(851) <= \<const0>\;
  m_axi_aruser(850) <= \<const0>\;
  m_axi_aruser(849) <= \<const0>\;
  m_axi_aruser(848) <= \<const0>\;
  m_axi_aruser(847) <= \<const0>\;
  m_axi_aruser(846) <= \<const0>\;
  m_axi_aruser(845) <= \<const0>\;
  m_axi_aruser(844) <= \<const0>\;
  m_axi_aruser(843) <= \<const0>\;
  m_axi_aruser(842) <= \<const0>\;
  m_axi_aruser(841) <= \<const0>\;
  m_axi_aruser(840) <= \<const0>\;
  m_axi_aruser(839) <= \<const0>\;
  m_axi_aruser(838) <= \<const0>\;
  m_axi_aruser(837) <= \<const0>\;
  m_axi_aruser(836) <= \<const0>\;
  m_axi_aruser(835) <= \<const0>\;
  m_axi_aruser(834) <= \<const0>\;
  m_axi_aruser(833) <= \<const0>\;
  m_axi_aruser(832) <= \<const0>\;
  m_axi_aruser(831) <= \<const0>\;
  m_axi_aruser(830) <= \<const0>\;
  m_axi_aruser(829) <= \<const0>\;
  m_axi_aruser(828) <= \<const0>\;
  m_axi_aruser(827) <= \<const0>\;
  m_axi_aruser(826) <= \<const0>\;
  m_axi_aruser(825) <= \<const0>\;
  m_axi_aruser(824) <= \<const0>\;
  m_axi_aruser(823) <= \<const0>\;
  m_axi_aruser(822) <= \<const0>\;
  m_axi_aruser(821) <= \<const0>\;
  m_axi_aruser(820) <= \<const0>\;
  m_axi_aruser(819) <= \<const0>\;
  m_axi_aruser(818) <= \<const0>\;
  m_axi_aruser(817) <= \<const0>\;
  m_axi_aruser(816) <= \<const0>\;
  m_axi_aruser(815) <= \<const0>\;
  m_axi_aruser(814) <= \<const0>\;
  m_axi_aruser(813) <= \<const0>\;
  m_axi_aruser(812) <= \<const0>\;
  m_axi_aruser(811) <= \<const0>\;
  m_axi_aruser(810) <= \<const0>\;
  m_axi_aruser(809) <= \<const0>\;
  m_axi_aruser(808) <= \<const0>\;
  m_axi_aruser(807) <= \<const0>\;
  m_axi_aruser(806) <= \<const0>\;
  m_axi_aruser(805) <= \<const0>\;
  m_axi_aruser(804) <= \<const0>\;
  m_axi_aruser(803) <= \<const0>\;
  m_axi_aruser(802) <= \<const0>\;
  m_axi_aruser(801) <= \<const0>\;
  m_axi_aruser(800) <= \<const0>\;
  m_axi_aruser(799) <= \<const0>\;
  m_axi_aruser(798) <= \<const0>\;
  m_axi_aruser(797) <= \<const0>\;
  m_axi_aruser(796) <= \<const0>\;
  m_axi_aruser(795) <= \<const0>\;
  m_axi_aruser(794) <= \<const0>\;
  m_axi_aruser(793) <= \<const0>\;
  m_axi_aruser(792) <= \<const0>\;
  m_axi_aruser(791) <= \<const0>\;
  m_axi_aruser(790) <= \<const0>\;
  m_axi_aruser(789) <= \<const0>\;
  m_axi_aruser(788) <= \<const0>\;
  m_axi_aruser(787) <= \<const0>\;
  m_axi_aruser(786) <= \<const0>\;
  m_axi_aruser(785) <= \<const0>\;
  m_axi_aruser(784) <= \<const0>\;
  m_axi_aruser(783) <= \<const0>\;
  m_axi_aruser(782) <= \<const0>\;
  m_axi_aruser(781) <= \<const0>\;
  m_axi_aruser(780) <= \<const0>\;
  m_axi_aruser(779) <= \<const0>\;
  m_axi_aruser(778) <= \<const0>\;
  m_axi_aruser(777) <= \<const0>\;
  m_axi_aruser(776) <= \<const0>\;
  m_axi_aruser(775) <= \<const0>\;
  m_axi_aruser(774) <= \<const0>\;
  m_axi_aruser(773) <= \<const0>\;
  m_axi_aruser(772) <= \<const0>\;
  m_axi_aruser(771) <= \<const0>\;
  m_axi_aruser(770) <= \<const0>\;
  m_axi_aruser(769) <= \<const0>\;
  m_axi_aruser(768) <= \<const0>\;
  m_axi_aruser(767) <= \<const0>\;
  m_axi_aruser(766) <= \<const0>\;
  m_axi_aruser(765) <= \<const0>\;
  m_axi_aruser(764) <= \<const0>\;
  m_axi_aruser(763) <= \<const0>\;
  m_axi_aruser(762) <= \<const0>\;
  m_axi_aruser(761) <= \<const0>\;
  m_axi_aruser(760) <= \<const0>\;
  m_axi_aruser(759) <= \<const0>\;
  m_axi_aruser(758) <= \<const0>\;
  m_axi_aruser(757) <= \<const0>\;
  m_axi_aruser(756) <= \<const0>\;
  m_axi_aruser(755) <= \<const0>\;
  m_axi_aruser(754) <= \<const0>\;
  m_axi_aruser(753) <= \<const0>\;
  m_axi_aruser(752) <= \<const0>\;
  m_axi_aruser(751) <= \<const0>\;
  m_axi_aruser(750) <= \<const0>\;
  m_axi_aruser(749) <= \<const0>\;
  m_axi_aruser(748) <= \<const0>\;
  m_axi_aruser(747) <= \<const0>\;
  m_axi_aruser(746) <= \<const0>\;
  m_axi_aruser(745) <= \<const0>\;
  m_axi_aruser(744) <= \<const0>\;
  m_axi_aruser(743) <= \<const0>\;
  m_axi_aruser(742) <= \<const0>\;
  m_axi_aruser(741) <= \<const0>\;
  m_axi_aruser(740) <= \<const0>\;
  m_axi_aruser(739) <= \<const0>\;
  m_axi_aruser(738) <= \<const0>\;
  m_axi_aruser(737) <= \<const0>\;
  m_axi_aruser(736) <= \<const0>\;
  m_axi_aruser(735) <= \<const0>\;
  m_axi_aruser(734) <= \<const0>\;
  m_axi_aruser(733) <= \<const0>\;
  m_axi_aruser(732) <= \<const0>\;
  m_axi_aruser(731) <= \<const0>\;
  m_axi_aruser(730) <= \<const0>\;
  m_axi_aruser(729) <= \<const0>\;
  m_axi_aruser(728) <= \<const0>\;
  m_axi_aruser(727) <= \<const0>\;
  m_axi_aruser(726) <= \<const0>\;
  m_axi_aruser(725) <= \<const0>\;
  m_axi_aruser(724) <= \<const0>\;
  m_axi_aruser(723) <= \<const0>\;
  m_axi_aruser(722) <= \<const0>\;
  m_axi_aruser(721) <= \<const0>\;
  m_axi_aruser(720) <= \<const0>\;
  m_axi_aruser(719) <= \<const0>\;
  m_axi_aruser(718) <= \<const0>\;
  m_axi_aruser(717) <= \<const0>\;
  m_axi_aruser(716) <= \<const0>\;
  m_axi_aruser(715) <= \<const0>\;
  m_axi_aruser(714) <= \<const0>\;
  m_axi_aruser(713) <= \<const0>\;
  m_axi_aruser(712) <= \<const0>\;
  m_axi_aruser(711) <= \<const0>\;
  m_axi_aruser(710) <= \<const0>\;
  m_axi_aruser(709) <= \<const0>\;
  m_axi_aruser(708) <= \<const0>\;
  m_axi_aruser(707) <= \<const0>\;
  m_axi_aruser(706) <= \<const0>\;
  m_axi_aruser(705) <= \<const0>\;
  m_axi_aruser(704) <= \<const0>\;
  m_axi_aruser(703) <= \<const0>\;
  m_axi_aruser(702) <= \<const0>\;
  m_axi_aruser(701) <= \<const0>\;
  m_axi_aruser(700) <= \<const0>\;
  m_axi_aruser(699) <= \<const0>\;
  m_axi_aruser(698) <= \<const0>\;
  m_axi_aruser(697) <= \<const0>\;
  m_axi_aruser(696) <= \<const0>\;
  m_axi_aruser(695) <= \<const0>\;
  m_axi_aruser(694) <= \<const0>\;
  m_axi_aruser(693) <= \<const0>\;
  m_axi_aruser(692) <= \<const0>\;
  m_axi_aruser(691) <= \<const0>\;
  m_axi_aruser(690) <= \<const0>\;
  m_axi_aruser(689) <= \<const0>\;
  m_axi_aruser(688) <= \<const0>\;
  m_axi_aruser(687) <= \<const0>\;
  m_axi_aruser(686) <= \<const0>\;
  m_axi_aruser(685) <= \<const0>\;
  m_axi_aruser(684) <= \<const0>\;
  m_axi_aruser(683) <= \<const0>\;
  m_axi_aruser(682) <= \<const0>\;
  m_axi_aruser(681) <= \<const0>\;
  m_axi_aruser(680) <= \<const0>\;
  m_axi_aruser(679) <= \<const0>\;
  m_axi_aruser(678) <= \<const0>\;
  m_axi_aruser(677) <= \<const0>\;
  m_axi_aruser(676) <= \<const0>\;
  m_axi_aruser(675) <= \<const0>\;
  m_axi_aruser(674) <= \<const0>\;
  m_axi_aruser(673) <= \<const0>\;
  m_axi_aruser(672) <= \<const0>\;
  m_axi_aruser(671) <= \<const0>\;
  m_axi_aruser(670) <= \<const0>\;
  m_axi_aruser(669) <= \<const0>\;
  m_axi_aruser(668) <= \<const0>\;
  m_axi_aruser(667) <= \<const0>\;
  m_axi_aruser(666) <= \<const0>\;
  m_axi_aruser(665) <= \<const0>\;
  m_axi_aruser(664) <= \<const0>\;
  m_axi_aruser(663) <= \<const0>\;
  m_axi_aruser(662) <= \<const0>\;
  m_axi_aruser(661) <= \<const0>\;
  m_axi_aruser(660) <= \<const0>\;
  m_axi_aruser(659) <= \<const0>\;
  m_axi_aruser(658) <= \<const0>\;
  m_axi_aruser(657) <= \<const0>\;
  m_axi_aruser(656) <= \<const0>\;
  m_axi_aruser(655) <= \<const0>\;
  m_axi_aruser(654) <= \<const0>\;
  m_axi_aruser(653) <= \<const0>\;
  m_axi_aruser(652) <= \<const0>\;
  m_axi_aruser(651) <= \<const0>\;
  m_axi_aruser(650) <= \<const0>\;
  m_axi_aruser(649) <= \<const0>\;
  m_axi_aruser(648) <= \<const0>\;
  m_axi_aruser(647) <= \<const0>\;
  m_axi_aruser(646) <= \<const0>\;
  m_axi_aruser(645) <= \<const0>\;
  m_axi_aruser(644) <= \<const0>\;
  m_axi_aruser(643) <= \<const0>\;
  m_axi_aruser(642) <= \<const0>\;
  m_axi_aruser(641) <= \<const0>\;
  m_axi_aruser(640) <= \<const0>\;
  m_axi_aruser(639) <= \<const0>\;
  m_axi_aruser(638) <= \<const0>\;
  m_axi_aruser(637) <= \<const0>\;
  m_axi_aruser(636) <= \<const0>\;
  m_axi_aruser(635) <= \<const0>\;
  m_axi_aruser(634) <= \<const0>\;
  m_axi_aruser(633) <= \<const0>\;
  m_axi_aruser(632) <= \<const0>\;
  m_axi_aruser(631) <= \<const0>\;
  m_axi_aruser(630) <= \<const0>\;
  m_axi_aruser(629) <= \<const0>\;
  m_axi_aruser(628) <= \<const0>\;
  m_axi_aruser(627) <= \<const0>\;
  m_axi_aruser(626) <= \<const0>\;
  m_axi_aruser(625) <= \<const0>\;
  m_axi_aruser(624) <= \<const0>\;
  m_axi_aruser(623) <= \<const0>\;
  m_axi_aruser(622) <= \<const0>\;
  m_axi_aruser(621) <= \<const0>\;
  m_axi_aruser(620) <= \<const0>\;
  m_axi_aruser(619) <= \<const0>\;
  m_axi_aruser(618) <= \<const0>\;
  m_axi_aruser(617) <= \<const0>\;
  m_axi_aruser(616) <= \<const0>\;
  m_axi_aruser(615) <= \<const0>\;
  m_axi_aruser(614) <= \<const0>\;
  m_axi_aruser(613) <= \<const0>\;
  m_axi_aruser(612) <= \<const0>\;
  m_axi_aruser(611) <= \<const0>\;
  m_axi_aruser(610) <= \<const0>\;
  m_axi_aruser(609) <= \<const0>\;
  m_axi_aruser(608) <= \<const0>\;
  m_axi_aruser(607) <= \<const0>\;
  m_axi_aruser(606) <= \<const0>\;
  m_axi_aruser(605) <= \<const0>\;
  m_axi_aruser(604) <= \<const0>\;
  m_axi_aruser(603) <= \<const0>\;
  m_axi_aruser(602) <= \<const0>\;
  m_axi_aruser(601) <= \<const0>\;
  m_axi_aruser(600) <= \<const0>\;
  m_axi_aruser(599) <= \<const0>\;
  m_axi_aruser(598) <= \<const0>\;
  m_axi_aruser(597) <= \<const0>\;
  m_axi_aruser(596) <= \<const0>\;
  m_axi_aruser(595) <= \<const0>\;
  m_axi_aruser(594) <= \<const0>\;
  m_axi_aruser(593) <= \<const0>\;
  m_axi_aruser(592) <= \<const0>\;
  m_axi_aruser(591) <= \<const0>\;
  m_axi_aruser(590) <= \<const0>\;
  m_axi_aruser(589) <= \<const0>\;
  m_axi_aruser(588) <= \<const0>\;
  m_axi_aruser(587) <= \<const0>\;
  m_axi_aruser(586) <= \<const0>\;
  m_axi_aruser(585) <= \<const0>\;
  m_axi_aruser(584) <= \<const0>\;
  m_axi_aruser(583) <= \<const0>\;
  m_axi_aruser(582) <= \<const0>\;
  m_axi_aruser(581) <= \<const0>\;
  m_axi_aruser(580) <= \<const0>\;
  m_axi_aruser(579) <= \<const0>\;
  m_axi_aruser(578) <= \<const0>\;
  m_axi_aruser(577) <= \<const0>\;
  m_axi_aruser(576) <= \<const0>\;
  m_axi_aruser(575) <= \<const0>\;
  m_axi_aruser(574) <= \<const0>\;
  m_axi_aruser(573) <= \<const0>\;
  m_axi_aruser(572) <= \<const0>\;
  m_axi_aruser(571) <= \<const0>\;
  m_axi_aruser(570) <= \<const0>\;
  m_axi_aruser(569) <= \<const0>\;
  m_axi_aruser(568) <= \<const0>\;
  m_axi_aruser(567) <= \<const0>\;
  m_axi_aruser(566) <= \<const0>\;
  m_axi_aruser(565) <= \<const0>\;
  m_axi_aruser(564) <= \<const0>\;
  m_axi_aruser(563) <= \<const0>\;
  m_axi_aruser(562) <= \<const0>\;
  m_axi_aruser(561) <= \<const0>\;
  m_axi_aruser(560) <= \<const0>\;
  m_axi_aruser(559) <= \<const0>\;
  m_axi_aruser(558) <= \<const0>\;
  m_axi_aruser(557) <= \<const0>\;
  m_axi_aruser(556) <= \<const0>\;
  m_axi_aruser(555) <= \<const0>\;
  m_axi_aruser(554) <= \<const0>\;
  m_axi_aruser(553) <= \<const0>\;
  m_axi_aruser(552) <= \<const0>\;
  m_axi_aruser(551) <= \<const0>\;
  m_axi_aruser(550) <= \<const0>\;
  m_axi_aruser(549) <= \<const0>\;
  m_axi_aruser(548) <= \<const0>\;
  m_axi_aruser(547) <= \<const0>\;
  m_axi_aruser(546) <= \<const0>\;
  m_axi_aruser(545) <= \<const0>\;
  m_axi_aruser(544) <= \<const0>\;
  m_axi_aruser(543) <= \<const0>\;
  m_axi_aruser(542) <= \<const0>\;
  m_axi_aruser(541) <= \<const0>\;
  m_axi_aruser(540) <= \<const0>\;
  m_axi_aruser(539) <= \<const0>\;
  m_axi_aruser(538) <= \<const0>\;
  m_axi_aruser(537) <= \<const0>\;
  m_axi_aruser(536) <= \<const0>\;
  m_axi_aruser(535) <= \<const0>\;
  m_axi_aruser(534) <= \<const0>\;
  m_axi_aruser(533) <= \<const0>\;
  m_axi_aruser(532) <= \<const0>\;
  m_axi_aruser(531) <= \<const0>\;
  m_axi_aruser(530) <= \<const0>\;
  m_axi_aruser(529) <= \<const0>\;
  m_axi_aruser(528) <= \<const0>\;
  m_axi_aruser(527) <= \<const0>\;
  m_axi_aruser(526) <= \<const0>\;
  m_axi_aruser(525) <= \<const0>\;
  m_axi_aruser(524) <= \<const0>\;
  m_axi_aruser(523) <= \<const0>\;
  m_axi_aruser(522) <= \<const0>\;
  m_axi_aruser(521) <= \<const0>\;
  m_axi_aruser(520) <= \<const0>\;
  m_axi_aruser(519) <= \<const0>\;
  m_axi_aruser(518) <= \<const0>\;
  m_axi_aruser(517) <= \<const0>\;
  m_axi_aruser(516) <= \<const0>\;
  m_axi_aruser(515) <= \<const0>\;
  m_axi_aruser(514) <= \<const0>\;
  m_axi_aruser(513) <= \<const0>\;
  m_axi_aruser(512) <= \<const0>\;
  m_axi_aruser(511) <= \<const0>\;
  m_axi_aruser(510) <= \<const0>\;
  m_axi_aruser(509) <= \<const0>\;
  m_axi_aruser(508) <= \<const0>\;
  m_axi_aruser(507) <= \<const0>\;
  m_axi_aruser(506) <= \<const0>\;
  m_axi_aruser(505) <= \<const0>\;
  m_axi_aruser(504) <= \<const0>\;
  m_axi_aruser(503) <= \<const0>\;
  m_axi_aruser(502) <= \<const0>\;
  m_axi_aruser(501) <= \<const0>\;
  m_axi_aruser(500) <= \<const0>\;
  m_axi_aruser(499) <= \<const0>\;
  m_axi_aruser(498) <= \<const0>\;
  m_axi_aruser(497) <= \<const0>\;
  m_axi_aruser(496) <= \<const0>\;
  m_axi_aruser(495) <= \<const0>\;
  m_axi_aruser(494) <= \<const0>\;
  m_axi_aruser(493) <= \<const0>\;
  m_axi_aruser(492) <= \<const0>\;
  m_axi_aruser(491) <= \<const0>\;
  m_axi_aruser(490) <= \<const0>\;
  m_axi_aruser(489) <= \<const0>\;
  m_axi_aruser(488) <= \<const0>\;
  m_axi_aruser(487) <= \<const0>\;
  m_axi_aruser(486) <= \<const0>\;
  m_axi_aruser(485) <= \<const0>\;
  m_axi_aruser(484) <= \<const0>\;
  m_axi_aruser(483) <= \<const0>\;
  m_axi_aruser(482) <= \<const0>\;
  m_axi_aruser(481) <= \<const0>\;
  m_axi_aruser(480) <= \<const0>\;
  m_axi_aruser(479) <= \<const0>\;
  m_axi_aruser(478) <= \<const0>\;
  m_axi_aruser(477) <= \<const0>\;
  m_axi_aruser(476) <= \<const0>\;
  m_axi_aruser(475) <= \<const0>\;
  m_axi_aruser(474) <= \<const0>\;
  m_axi_aruser(473) <= \<const0>\;
  m_axi_aruser(472) <= \<const0>\;
  m_axi_aruser(471) <= \<const0>\;
  m_axi_aruser(470) <= \<const0>\;
  m_axi_aruser(469) <= \<const0>\;
  m_axi_aruser(468) <= \<const0>\;
  m_axi_aruser(467) <= \<const0>\;
  m_axi_aruser(466) <= \<const0>\;
  m_axi_aruser(465) <= \<const0>\;
  m_axi_aruser(464) <= \<const0>\;
  m_axi_aruser(463) <= \<const0>\;
  m_axi_aruser(462) <= \<const0>\;
  m_axi_aruser(461) <= \<const0>\;
  m_axi_aruser(460) <= \<const0>\;
  m_axi_aruser(459) <= \<const0>\;
  m_axi_aruser(458) <= \<const0>\;
  m_axi_aruser(457) <= \<const0>\;
  m_axi_aruser(456) <= \<const0>\;
  m_axi_aruser(455) <= \<const0>\;
  m_axi_aruser(454) <= \<const0>\;
  m_axi_aruser(453) <= \<const0>\;
  m_axi_aruser(452) <= \<const0>\;
  m_axi_aruser(451) <= \<const0>\;
  m_axi_aruser(450) <= \<const0>\;
  m_axi_aruser(449) <= \<const0>\;
  m_axi_aruser(448) <= \<const0>\;
  m_axi_aruser(447) <= \<const0>\;
  m_axi_aruser(446) <= \<const0>\;
  m_axi_aruser(445) <= \<const0>\;
  m_axi_aruser(444) <= \<const0>\;
  m_axi_aruser(443) <= \<const0>\;
  m_axi_aruser(442) <= \<const0>\;
  m_axi_aruser(441) <= \<const0>\;
  m_axi_aruser(440) <= \<const0>\;
  m_axi_aruser(439) <= \<const0>\;
  m_axi_aruser(438) <= \<const0>\;
  m_axi_aruser(437) <= \<const0>\;
  m_axi_aruser(436) <= \<const0>\;
  m_axi_aruser(435) <= \<const0>\;
  m_axi_aruser(434) <= \<const0>\;
  m_axi_aruser(433) <= \<const0>\;
  m_axi_aruser(432) <= \<const0>\;
  m_axi_aruser(431) <= \<const0>\;
  m_axi_aruser(430) <= \<const0>\;
  m_axi_aruser(429) <= \<const0>\;
  m_axi_aruser(428) <= \<const0>\;
  m_axi_aruser(427) <= \<const0>\;
  m_axi_aruser(426) <= \<const0>\;
  m_axi_aruser(425) <= \<const0>\;
  m_axi_aruser(424) <= \<const0>\;
  m_axi_aruser(423) <= \<const0>\;
  m_axi_aruser(422) <= \<const0>\;
  m_axi_aruser(421) <= \<const0>\;
  m_axi_aruser(420) <= \<const0>\;
  m_axi_aruser(419) <= \<const0>\;
  m_axi_aruser(418) <= \<const0>\;
  m_axi_aruser(417) <= \<const0>\;
  m_axi_aruser(416) <= \<const0>\;
  m_axi_aruser(415) <= \<const0>\;
  m_axi_aruser(414) <= \<const0>\;
  m_axi_aruser(413) <= \<const0>\;
  m_axi_aruser(412) <= \<const0>\;
  m_axi_aruser(411) <= \<const0>\;
  m_axi_aruser(410) <= \<const0>\;
  m_axi_aruser(409) <= \<const0>\;
  m_axi_aruser(408) <= \<const0>\;
  m_axi_aruser(407) <= \<const0>\;
  m_axi_aruser(406) <= \<const0>\;
  m_axi_aruser(405) <= \<const0>\;
  m_axi_aruser(404) <= \<const0>\;
  m_axi_aruser(403) <= \<const0>\;
  m_axi_aruser(402) <= \<const0>\;
  m_axi_aruser(401) <= \<const0>\;
  m_axi_aruser(400) <= \<const0>\;
  m_axi_aruser(399) <= \<const0>\;
  m_axi_aruser(398) <= \<const0>\;
  m_axi_aruser(397) <= \<const0>\;
  m_axi_aruser(396) <= \<const0>\;
  m_axi_aruser(395) <= \<const0>\;
  m_axi_aruser(394) <= \<const0>\;
  m_axi_aruser(393) <= \<const0>\;
  m_axi_aruser(392) <= \<const0>\;
  m_axi_aruser(391) <= \<const0>\;
  m_axi_aruser(390) <= \<const0>\;
  m_axi_aruser(389) <= \<const0>\;
  m_axi_aruser(388) <= \<const0>\;
  m_axi_aruser(387) <= \<const0>\;
  m_axi_aruser(386) <= \<const0>\;
  m_axi_aruser(385) <= \<const0>\;
  m_axi_aruser(384) <= \<const0>\;
  m_axi_aruser(383) <= \<const0>\;
  m_axi_aruser(382) <= \<const0>\;
  m_axi_aruser(381) <= \<const0>\;
  m_axi_aruser(380) <= \<const0>\;
  m_axi_aruser(379) <= \<const0>\;
  m_axi_aruser(378) <= \<const0>\;
  m_axi_aruser(377) <= \<const0>\;
  m_axi_aruser(376) <= \<const0>\;
  m_axi_aruser(375) <= \<const0>\;
  m_axi_aruser(374) <= \<const0>\;
  m_axi_aruser(373) <= \<const0>\;
  m_axi_aruser(372) <= \<const0>\;
  m_axi_aruser(371) <= \<const0>\;
  m_axi_aruser(370) <= \<const0>\;
  m_axi_aruser(369) <= \<const0>\;
  m_axi_aruser(368) <= \<const0>\;
  m_axi_aruser(367) <= \<const0>\;
  m_axi_aruser(366) <= \<const0>\;
  m_axi_aruser(365) <= \<const0>\;
  m_axi_aruser(364) <= \<const0>\;
  m_axi_aruser(363) <= \<const0>\;
  m_axi_aruser(362) <= \<const0>\;
  m_axi_aruser(361) <= \<const0>\;
  m_axi_aruser(360) <= \<const0>\;
  m_axi_aruser(359) <= \<const0>\;
  m_axi_aruser(358) <= \<const0>\;
  m_axi_aruser(357) <= \<const0>\;
  m_axi_aruser(356) <= \<const0>\;
  m_axi_aruser(355) <= \<const0>\;
  m_axi_aruser(354) <= \<const0>\;
  m_axi_aruser(353) <= \<const0>\;
  m_axi_aruser(352) <= \<const0>\;
  m_axi_aruser(351) <= \<const0>\;
  m_axi_aruser(350) <= \<const0>\;
  m_axi_aruser(349) <= \<const0>\;
  m_axi_aruser(348) <= \<const0>\;
  m_axi_aruser(347) <= \<const0>\;
  m_axi_aruser(346) <= \<const0>\;
  m_axi_aruser(345) <= \<const0>\;
  m_axi_aruser(344) <= \<const0>\;
  m_axi_aruser(343) <= \<const0>\;
  m_axi_aruser(342) <= \<const0>\;
  m_axi_aruser(341) <= \<const0>\;
  m_axi_aruser(340) <= \<const0>\;
  m_axi_aruser(339) <= \<const0>\;
  m_axi_aruser(338) <= \<const0>\;
  m_axi_aruser(337) <= \<const0>\;
  m_axi_aruser(336) <= \<const0>\;
  m_axi_aruser(335) <= \<const0>\;
  m_axi_aruser(334) <= \<const0>\;
  m_axi_aruser(333) <= \<const0>\;
  m_axi_aruser(332) <= \<const0>\;
  m_axi_aruser(331) <= \<const0>\;
  m_axi_aruser(330) <= \<const0>\;
  m_axi_aruser(329) <= \<const0>\;
  m_axi_aruser(328) <= \<const0>\;
  m_axi_aruser(327) <= \<const0>\;
  m_axi_aruser(326) <= \<const0>\;
  m_axi_aruser(325) <= \<const0>\;
  m_axi_aruser(324) <= \<const0>\;
  m_axi_aruser(323) <= \<const0>\;
  m_axi_aruser(322) <= \<const0>\;
  m_axi_aruser(321) <= \<const0>\;
  m_axi_aruser(320) <= \<const0>\;
  m_axi_aruser(319) <= \<const0>\;
  m_axi_aruser(318) <= \<const0>\;
  m_axi_aruser(317) <= \<const0>\;
  m_axi_aruser(316) <= \<const0>\;
  m_axi_aruser(315) <= \<const0>\;
  m_axi_aruser(314) <= \<const0>\;
  m_axi_aruser(313) <= \<const0>\;
  m_axi_aruser(312) <= \<const0>\;
  m_axi_aruser(311) <= \<const0>\;
  m_axi_aruser(310) <= \<const0>\;
  m_axi_aruser(309) <= \<const0>\;
  m_axi_aruser(308) <= \<const0>\;
  m_axi_aruser(307) <= \<const0>\;
  m_axi_aruser(306) <= \<const0>\;
  m_axi_aruser(305) <= \<const0>\;
  m_axi_aruser(304) <= \<const0>\;
  m_axi_aruser(303) <= \<const0>\;
  m_axi_aruser(302) <= \<const0>\;
  m_axi_aruser(301) <= \<const0>\;
  m_axi_aruser(300) <= \<const0>\;
  m_axi_aruser(299) <= \<const0>\;
  m_axi_aruser(298) <= \<const0>\;
  m_axi_aruser(297) <= \<const0>\;
  m_axi_aruser(296) <= \<const0>\;
  m_axi_aruser(295) <= \<const0>\;
  m_axi_aruser(294) <= \<const0>\;
  m_axi_aruser(293) <= \<const0>\;
  m_axi_aruser(292) <= \<const0>\;
  m_axi_aruser(291) <= \<const0>\;
  m_axi_aruser(290) <= \<const0>\;
  m_axi_aruser(289) <= \<const0>\;
  m_axi_aruser(288) <= \<const0>\;
  m_axi_aruser(287) <= \<const0>\;
  m_axi_aruser(286) <= \<const0>\;
  m_axi_aruser(285) <= \<const0>\;
  m_axi_aruser(284) <= \<const0>\;
  m_axi_aruser(283) <= \<const0>\;
  m_axi_aruser(282) <= \<const0>\;
  m_axi_aruser(281) <= \<const0>\;
  m_axi_aruser(280) <= \<const0>\;
  m_axi_aruser(279) <= \<const0>\;
  m_axi_aruser(278) <= \<const0>\;
  m_axi_aruser(277) <= \<const0>\;
  m_axi_aruser(276) <= \<const0>\;
  m_axi_aruser(275) <= \<const0>\;
  m_axi_aruser(274) <= \<const0>\;
  m_axi_aruser(273) <= \<const0>\;
  m_axi_aruser(272) <= \<const0>\;
  m_axi_aruser(271) <= \<const0>\;
  m_axi_aruser(270) <= \<const0>\;
  m_axi_aruser(269) <= \<const0>\;
  m_axi_aruser(268) <= \<const0>\;
  m_axi_aruser(267) <= \<const0>\;
  m_axi_aruser(266) <= \<const0>\;
  m_axi_aruser(265) <= \<const0>\;
  m_axi_aruser(264) <= \<const0>\;
  m_axi_aruser(263) <= \<const0>\;
  m_axi_aruser(262) <= \<const0>\;
  m_axi_aruser(261) <= \<const0>\;
  m_axi_aruser(260) <= \<const0>\;
  m_axi_aruser(259) <= \<const0>\;
  m_axi_aruser(258) <= \<const0>\;
  m_axi_aruser(257) <= \<const0>\;
  m_axi_aruser(256) <= \<const0>\;
  m_axi_aruser(255) <= \<const0>\;
  m_axi_aruser(254) <= \<const0>\;
  m_axi_aruser(253) <= \<const0>\;
  m_axi_aruser(252) <= \<const0>\;
  m_axi_aruser(251) <= \<const0>\;
  m_axi_aruser(250) <= \<const0>\;
  m_axi_aruser(249) <= \<const0>\;
  m_axi_aruser(248) <= \<const0>\;
  m_axi_aruser(247) <= \<const0>\;
  m_axi_aruser(246) <= \<const0>\;
  m_axi_aruser(245) <= \<const0>\;
  m_axi_aruser(244) <= \<const0>\;
  m_axi_aruser(243) <= \<const0>\;
  m_axi_aruser(242) <= \<const0>\;
  m_axi_aruser(241) <= \<const0>\;
  m_axi_aruser(240) <= \<const0>\;
  m_axi_aruser(239) <= \<const0>\;
  m_axi_aruser(238) <= \<const0>\;
  m_axi_aruser(237) <= \<const0>\;
  m_axi_aruser(236) <= \<const0>\;
  m_axi_aruser(235) <= \<const0>\;
  m_axi_aruser(234) <= \<const0>\;
  m_axi_aruser(233) <= \<const0>\;
  m_axi_aruser(232) <= \<const0>\;
  m_axi_aruser(231) <= \<const0>\;
  m_axi_aruser(230) <= \<const0>\;
  m_axi_aruser(229) <= \<const0>\;
  m_axi_aruser(228) <= \<const0>\;
  m_axi_aruser(227) <= \<const0>\;
  m_axi_aruser(226) <= \<const0>\;
  m_axi_aruser(225) <= \<const0>\;
  m_axi_aruser(224) <= \<const0>\;
  m_axi_aruser(223) <= \<const0>\;
  m_axi_aruser(222) <= \<const0>\;
  m_axi_aruser(221) <= \<const0>\;
  m_axi_aruser(220) <= \<const0>\;
  m_axi_aruser(219) <= \<const0>\;
  m_axi_aruser(218) <= \<const0>\;
  m_axi_aruser(217) <= \<const0>\;
  m_axi_aruser(216) <= \<const0>\;
  m_axi_aruser(215) <= \<const0>\;
  m_axi_aruser(214) <= \<const0>\;
  m_axi_aruser(213) <= \<const0>\;
  m_axi_aruser(212) <= \<const0>\;
  m_axi_aruser(211) <= \<const0>\;
  m_axi_aruser(210) <= \<const0>\;
  m_axi_aruser(209) <= \<const0>\;
  m_axi_aruser(208) <= \<const0>\;
  m_axi_aruser(207) <= \<const0>\;
  m_axi_aruser(206) <= \<const0>\;
  m_axi_aruser(205) <= \<const0>\;
  m_axi_aruser(204) <= \<const0>\;
  m_axi_aruser(203) <= \<const0>\;
  m_axi_aruser(202) <= \<const0>\;
  m_axi_aruser(201) <= \<const0>\;
  m_axi_aruser(200) <= \<const0>\;
  m_axi_aruser(199) <= \<const0>\;
  m_axi_aruser(198) <= \<const0>\;
  m_axi_aruser(197) <= \<const0>\;
  m_axi_aruser(196) <= \<const0>\;
  m_axi_aruser(195) <= \<const0>\;
  m_axi_aruser(194) <= \<const0>\;
  m_axi_aruser(193) <= \<const0>\;
  m_axi_aruser(192) <= \<const0>\;
  m_axi_aruser(191) <= \<const0>\;
  m_axi_aruser(190) <= \<const0>\;
  m_axi_aruser(189) <= \<const0>\;
  m_axi_aruser(188) <= \<const0>\;
  m_axi_aruser(187) <= \<const0>\;
  m_axi_aruser(186) <= \<const0>\;
  m_axi_aruser(185) <= \<const0>\;
  m_axi_aruser(184) <= \<const0>\;
  m_axi_aruser(183) <= \<const0>\;
  m_axi_aruser(182) <= \<const0>\;
  m_axi_aruser(181) <= \<const0>\;
  m_axi_aruser(180) <= \<const0>\;
  m_axi_aruser(179) <= \<const0>\;
  m_axi_aruser(178) <= \<const0>\;
  m_axi_aruser(177) <= \<const0>\;
  m_axi_aruser(176) <= \<const0>\;
  m_axi_aruser(175) <= \<const0>\;
  m_axi_aruser(174) <= \<const0>\;
  m_axi_aruser(173) <= \<const0>\;
  m_axi_aruser(172) <= \<const0>\;
  m_axi_aruser(171) <= \<const0>\;
  m_axi_aruser(170) <= \<const0>\;
  m_axi_aruser(169) <= \<const0>\;
  m_axi_aruser(168) <= \<const0>\;
  m_axi_aruser(167) <= \<const0>\;
  m_axi_aruser(166) <= \<const0>\;
  m_axi_aruser(165) <= \<const0>\;
  m_axi_aruser(164) <= \<const0>\;
  m_axi_aruser(163) <= \<const0>\;
  m_axi_aruser(162) <= \<const0>\;
  m_axi_aruser(161) <= \<const0>\;
  m_axi_aruser(160) <= \<const0>\;
  m_axi_aruser(159) <= \<const0>\;
  m_axi_aruser(158) <= \<const0>\;
  m_axi_aruser(157) <= \<const0>\;
  m_axi_aruser(156) <= \<const0>\;
  m_axi_aruser(155) <= \<const0>\;
  m_axi_aruser(154) <= \<const0>\;
  m_axi_aruser(153) <= \<const0>\;
  m_axi_aruser(152) <= \<const0>\;
  m_axi_aruser(151) <= \<const0>\;
  m_axi_aruser(150) <= \<const0>\;
  m_axi_aruser(149) <= \<const0>\;
  m_axi_aruser(148) <= \<const0>\;
  m_axi_aruser(147) <= \<const0>\;
  m_axi_aruser(146) <= \<const0>\;
  m_axi_aruser(145) <= \<const0>\;
  m_axi_aruser(144) <= \<const0>\;
  m_axi_aruser(143) <= \<const0>\;
  m_axi_aruser(142) <= \<const0>\;
  m_axi_aruser(141) <= \<const0>\;
  m_axi_aruser(140) <= \<const0>\;
  m_axi_aruser(139) <= \<const0>\;
  m_axi_aruser(138) <= \<const0>\;
  m_axi_aruser(137) <= \<const0>\;
  m_axi_aruser(136) <= \<const0>\;
  m_axi_aruser(135) <= \<const0>\;
  m_axi_aruser(134) <= \<const0>\;
  m_axi_aruser(133) <= \<const0>\;
  m_axi_aruser(132) <= \<const0>\;
  m_axi_aruser(131) <= \<const0>\;
  m_axi_aruser(130) <= \<const0>\;
  m_axi_aruser(129) <= \<const0>\;
  m_axi_aruser(128) <= \<const0>\;
  m_axi_aruser(127) <= \<const0>\;
  m_axi_aruser(126) <= \<const0>\;
  m_axi_aruser(125) <= \<const0>\;
  m_axi_aruser(124) <= \<const0>\;
  m_axi_aruser(123) <= \<const0>\;
  m_axi_aruser(122) <= \<const0>\;
  m_axi_aruser(121) <= \<const0>\;
  m_axi_aruser(120) <= \<const0>\;
  m_axi_aruser(119) <= \<const0>\;
  m_axi_aruser(118) <= \<const0>\;
  m_axi_aruser(117) <= \<const0>\;
  m_axi_aruser(116) <= \<const0>\;
  m_axi_aruser(115) <= \<const0>\;
  m_axi_aruser(114) <= \<const0>\;
  m_axi_aruser(113) <= \<const0>\;
  m_axi_aruser(112) <= \<const0>\;
  m_axi_aruser(111) <= \<const0>\;
  m_axi_aruser(110) <= \<const0>\;
  m_axi_aruser(109) <= \<const0>\;
  m_axi_aruser(108) <= \<const0>\;
  m_axi_aruser(107) <= \<const0>\;
  m_axi_aruser(106) <= \<const0>\;
  m_axi_aruser(105) <= \<const0>\;
  m_axi_aruser(104) <= \<const0>\;
  m_axi_aruser(103) <= \<const0>\;
  m_axi_aruser(102) <= \<const0>\;
  m_axi_aruser(101) <= \<const0>\;
  m_axi_aruser(100) <= \<const0>\;
  m_axi_aruser(99) <= \<const0>\;
  m_axi_aruser(98) <= \<const0>\;
  m_axi_aruser(97) <= \<const0>\;
  m_axi_aruser(96) <= \<const0>\;
  m_axi_aruser(95) <= \<const0>\;
  m_axi_aruser(94) <= \<const0>\;
  m_axi_aruser(93) <= \<const0>\;
  m_axi_aruser(92) <= \<const0>\;
  m_axi_aruser(91) <= \<const0>\;
  m_axi_aruser(90) <= \<const0>\;
  m_axi_aruser(89) <= \<const0>\;
  m_axi_aruser(88) <= \<const0>\;
  m_axi_aruser(87) <= \<const0>\;
  m_axi_aruser(86) <= \<const0>\;
  m_axi_aruser(85) <= \<const0>\;
  m_axi_aruser(84) <= \<const0>\;
  m_axi_aruser(83) <= \<const0>\;
  m_axi_aruser(82) <= \<const0>\;
  m_axi_aruser(81) <= \<const0>\;
  m_axi_aruser(80) <= \<const0>\;
  m_axi_aruser(79) <= \<const0>\;
  m_axi_aruser(78) <= \<const0>\;
  m_axi_aruser(77) <= \<const0>\;
  m_axi_aruser(76) <= \<const0>\;
  m_axi_aruser(75) <= \<const0>\;
  m_axi_aruser(74) <= \<const0>\;
  m_axi_aruser(73) <= \<const0>\;
  m_axi_aruser(72) <= \<const0>\;
  m_axi_aruser(71) <= \<const0>\;
  m_axi_aruser(70) <= \<const0>\;
  m_axi_aruser(69) <= \<const0>\;
  m_axi_aruser(68) <= \<const0>\;
  m_axi_aruser(67) <= \<const0>\;
  m_axi_aruser(66) <= \<const0>\;
  m_axi_aruser(65) <= \<const0>\;
  m_axi_aruser(64) <= \<const0>\;
  m_axi_aruser(63) <= \<const0>\;
  m_axi_aruser(62) <= \<const0>\;
  m_axi_aruser(61) <= \<const0>\;
  m_axi_aruser(60) <= \<const0>\;
  m_axi_aruser(59) <= \<const0>\;
  m_axi_aruser(58) <= \<const0>\;
  m_axi_aruser(57) <= \<const0>\;
  m_axi_aruser(56) <= \<const0>\;
  m_axi_aruser(55) <= \<const0>\;
  m_axi_aruser(54) <= \<const0>\;
  m_axi_aruser(53) <= \<const0>\;
  m_axi_aruser(52) <= \<const0>\;
  m_axi_aruser(51) <= \<const0>\;
  m_axi_aruser(50) <= \<const0>\;
  m_axi_aruser(49) <= \<const0>\;
  m_axi_aruser(48) <= \<const0>\;
  m_axi_aruser(47) <= \<const0>\;
  m_axi_aruser(46) <= \<const0>\;
  m_axi_aruser(45) <= \<const0>\;
  m_axi_aruser(44) <= \<const0>\;
  m_axi_aruser(43) <= \<const0>\;
  m_axi_aruser(42) <= \<const0>\;
  m_axi_aruser(41) <= \<const0>\;
  m_axi_aruser(40) <= \<const0>\;
  m_axi_aruser(39) <= \<const0>\;
  m_axi_aruser(38) <= \<const0>\;
  m_axi_aruser(37) <= \<const0>\;
  m_axi_aruser(36) <= \<const0>\;
  m_axi_aruser(35) <= \<const0>\;
  m_axi_aruser(34) <= \<const0>\;
  m_axi_aruser(33) <= \<const0>\;
  m_axi_aruser(32) <= \<const0>\;
  m_axi_aruser(31) <= \<const0>\;
  m_axi_aruser(30) <= \<const0>\;
  m_axi_aruser(29) <= \<const0>\;
  m_axi_aruser(28) <= \<const0>\;
  m_axi_aruser(27) <= \<const0>\;
  m_axi_aruser(26) <= \<const0>\;
  m_axi_aruser(25) <= \<const0>\;
  m_axi_aruser(24) <= \<const0>\;
  m_axi_aruser(23) <= \<const0>\;
  m_axi_aruser(22) <= \<const0>\;
  m_axi_aruser(21) <= \<const0>\;
  m_axi_aruser(20) <= \<const0>\;
  m_axi_aruser(19) <= \<const0>\;
  m_axi_aruser(18) <= \<const0>\;
  m_axi_aruser(17) <= \<const0>\;
  m_axi_aruser(16) <= \<const0>\;
  m_axi_aruser(15) <= \<const0>\;
  m_axi_aruser(14) <= \<const0>\;
  m_axi_aruser(13) <= \<const0>\;
  m_axi_aruser(12) <= \<const0>\;
  m_axi_aruser(11) <= \<const0>\;
  m_axi_aruser(10) <= \<const0>\;
  m_axi_aruser(9) <= \<const0>\;
  m_axi_aruser(8) <= \<const0>\;
  m_axi_aruser(7) <= \<const0>\;
  m_axi_aruser(6) <= \<const0>\;
  m_axi_aruser(5) <= \<const0>\;
  m_axi_aruser(4) <= \<const0>\;
  m_axi_aruser(3) <= \<const0>\;
  m_axi_aruser(2) <= \^m_axi_aruser\(2);
  m_axi_aruser(1) <= \<const0>\;
  m_axi_aruser(0) <= \<const0>\;
  m_axi_awaddr(31) <= \<const0>\;
  m_axi_awaddr(30) <= \<const0>\;
  m_axi_awaddr(29) <= \<const0>\;
  m_axi_awaddr(28) <= \<const0>\;
  m_axi_awaddr(27) <= \<const0>\;
  m_axi_awaddr(26) <= \<const0>\;
  m_axi_awaddr(25) <= \<const0>\;
  m_axi_awaddr(24) <= \<const0>\;
  m_axi_awaddr(23) <= \<const0>\;
  m_axi_awaddr(22) <= \<const0>\;
  m_axi_awaddr(21) <= \<const0>\;
  m_axi_awaddr(20) <= \<const0>\;
  m_axi_awaddr(19) <= \<const0>\;
  m_axi_awaddr(18) <= \<const0>\;
  m_axi_awaddr(17) <= \<const0>\;
  m_axi_awaddr(16) <= \<const0>\;
  m_axi_awaddr(15) <= \<const0>\;
  m_axi_awaddr(14) <= \<const0>\;
  m_axi_awaddr(13) <= \<const0>\;
  m_axi_awaddr(12) <= \<const0>\;
  m_axi_awaddr(11) <= \<const0>\;
  m_axi_awaddr(10) <= \<const0>\;
  m_axi_awaddr(9) <= \<const0>\;
  m_axi_awaddr(8) <= \<const0>\;
  m_axi_awaddr(7 downto 0) <= \^m_axi_awaddr\(7 downto 0);
  m_axi_awcache(3) <= \<const0>\;
  m_axi_awcache(2) <= \<const0>\;
  m_axi_awcache(1) <= \<const0>\;
  m_axi_awcache(0) <= \<const0>\;
  m_axi_awid(0) <= \<const0>\;
  m_axi_awlen(7) <= \<const0>\;
  m_axi_awlen(6) <= \<const0>\;
  m_axi_awlen(5) <= \<const0>\;
  m_axi_awlen(4) <= \<const0>\;
  m_axi_awlen(3) <= \<const0>\;
  m_axi_awlen(2) <= \<const0>\;
  m_axi_awlen(1) <= \<const0>\;
  m_axi_awlen(0) <= \<const0>\;
  m_axi_awlock(0) <= \<const0>\;
  m_axi_awprot(2) <= \<const0>\;
  m_axi_awprot(1) <= \<const0>\;
  m_axi_awprot(0) <= \<const0>\;
  m_axi_awqos(3) <= \<const0>\;
  m_axi_awqos(2) <= \<const0>\;
  m_axi_awqos(1) <= \<const0>\;
  m_axi_awqos(0) <= \<const0>\;
  m_axi_awuser(1023) <= \<const0>\;
  m_axi_awuser(1022) <= \<const0>\;
  m_axi_awuser(1021) <= \<const0>\;
  m_axi_awuser(1020) <= \<const0>\;
  m_axi_awuser(1019) <= \<const0>\;
  m_axi_awuser(1018) <= \<const0>\;
  m_axi_awuser(1017) <= \<const0>\;
  m_axi_awuser(1016) <= \<const0>\;
  m_axi_awuser(1015) <= \<const0>\;
  m_axi_awuser(1014) <= \<const0>\;
  m_axi_awuser(1013) <= \<const0>\;
  m_axi_awuser(1012) <= \<const0>\;
  m_axi_awuser(1011) <= \<const0>\;
  m_axi_awuser(1010) <= \<const0>\;
  m_axi_awuser(1009) <= \<const0>\;
  m_axi_awuser(1008) <= \<const0>\;
  m_axi_awuser(1007) <= \<const0>\;
  m_axi_awuser(1006) <= \<const0>\;
  m_axi_awuser(1005) <= \<const0>\;
  m_axi_awuser(1004) <= \<const0>\;
  m_axi_awuser(1003) <= \<const0>\;
  m_axi_awuser(1002) <= \<const0>\;
  m_axi_awuser(1001) <= \<const0>\;
  m_axi_awuser(1000) <= \<const0>\;
  m_axi_awuser(999) <= \<const0>\;
  m_axi_awuser(998) <= \<const0>\;
  m_axi_awuser(997) <= \<const0>\;
  m_axi_awuser(996) <= \<const0>\;
  m_axi_awuser(995) <= \<const0>\;
  m_axi_awuser(994) <= \<const0>\;
  m_axi_awuser(993) <= \<const0>\;
  m_axi_awuser(992) <= \<const0>\;
  m_axi_awuser(991) <= \<const0>\;
  m_axi_awuser(990) <= \<const0>\;
  m_axi_awuser(989) <= \<const0>\;
  m_axi_awuser(988) <= \<const0>\;
  m_axi_awuser(987) <= \<const0>\;
  m_axi_awuser(986) <= \<const0>\;
  m_axi_awuser(985) <= \<const0>\;
  m_axi_awuser(984) <= \<const0>\;
  m_axi_awuser(983) <= \<const0>\;
  m_axi_awuser(982) <= \<const0>\;
  m_axi_awuser(981) <= \<const0>\;
  m_axi_awuser(980) <= \<const0>\;
  m_axi_awuser(979) <= \<const0>\;
  m_axi_awuser(978) <= \<const0>\;
  m_axi_awuser(977) <= \<const0>\;
  m_axi_awuser(976) <= \<const0>\;
  m_axi_awuser(975) <= \<const0>\;
  m_axi_awuser(974) <= \<const0>\;
  m_axi_awuser(973) <= \<const0>\;
  m_axi_awuser(972) <= \<const0>\;
  m_axi_awuser(971) <= \<const0>\;
  m_axi_awuser(970) <= \<const0>\;
  m_axi_awuser(969) <= \<const0>\;
  m_axi_awuser(968) <= \<const0>\;
  m_axi_awuser(967) <= \<const0>\;
  m_axi_awuser(966) <= \<const0>\;
  m_axi_awuser(965) <= \<const0>\;
  m_axi_awuser(964) <= \<const0>\;
  m_axi_awuser(963) <= \<const0>\;
  m_axi_awuser(962) <= \<const0>\;
  m_axi_awuser(961) <= \<const0>\;
  m_axi_awuser(960) <= \<const0>\;
  m_axi_awuser(959) <= \<const0>\;
  m_axi_awuser(958) <= \<const0>\;
  m_axi_awuser(957) <= \<const0>\;
  m_axi_awuser(956) <= \<const0>\;
  m_axi_awuser(955) <= \<const0>\;
  m_axi_awuser(954) <= \<const0>\;
  m_axi_awuser(953) <= \<const0>\;
  m_axi_awuser(952) <= \<const0>\;
  m_axi_awuser(951) <= \<const0>\;
  m_axi_awuser(950) <= \<const0>\;
  m_axi_awuser(949) <= \<const0>\;
  m_axi_awuser(948) <= \<const0>\;
  m_axi_awuser(947) <= \<const0>\;
  m_axi_awuser(946) <= \<const0>\;
  m_axi_awuser(945) <= \<const0>\;
  m_axi_awuser(944) <= \<const0>\;
  m_axi_awuser(943) <= \<const0>\;
  m_axi_awuser(942) <= \<const0>\;
  m_axi_awuser(941) <= \<const0>\;
  m_axi_awuser(940) <= \<const0>\;
  m_axi_awuser(939) <= \<const0>\;
  m_axi_awuser(938) <= \<const0>\;
  m_axi_awuser(937) <= \<const0>\;
  m_axi_awuser(936) <= \<const0>\;
  m_axi_awuser(935) <= \<const0>\;
  m_axi_awuser(934) <= \<const0>\;
  m_axi_awuser(933) <= \<const0>\;
  m_axi_awuser(932) <= \<const0>\;
  m_axi_awuser(931) <= \<const0>\;
  m_axi_awuser(930) <= \<const0>\;
  m_axi_awuser(929) <= \<const0>\;
  m_axi_awuser(928) <= \<const0>\;
  m_axi_awuser(927) <= \<const0>\;
  m_axi_awuser(926) <= \<const0>\;
  m_axi_awuser(925) <= \<const0>\;
  m_axi_awuser(924) <= \<const0>\;
  m_axi_awuser(923) <= \<const0>\;
  m_axi_awuser(922) <= \<const0>\;
  m_axi_awuser(921) <= \<const0>\;
  m_axi_awuser(920) <= \<const0>\;
  m_axi_awuser(919) <= \<const0>\;
  m_axi_awuser(918) <= \<const0>\;
  m_axi_awuser(917) <= \<const0>\;
  m_axi_awuser(916) <= \<const0>\;
  m_axi_awuser(915) <= \<const0>\;
  m_axi_awuser(914) <= \<const0>\;
  m_axi_awuser(913) <= \<const0>\;
  m_axi_awuser(912) <= \<const0>\;
  m_axi_awuser(911) <= \<const0>\;
  m_axi_awuser(910) <= \<const0>\;
  m_axi_awuser(909) <= \<const0>\;
  m_axi_awuser(908) <= \<const0>\;
  m_axi_awuser(907) <= \<const0>\;
  m_axi_awuser(906) <= \<const0>\;
  m_axi_awuser(905) <= \<const0>\;
  m_axi_awuser(904) <= \<const0>\;
  m_axi_awuser(903) <= \<const0>\;
  m_axi_awuser(902) <= \<const0>\;
  m_axi_awuser(901) <= \<const0>\;
  m_axi_awuser(900) <= \<const0>\;
  m_axi_awuser(899) <= \<const0>\;
  m_axi_awuser(898) <= \<const0>\;
  m_axi_awuser(897) <= \<const0>\;
  m_axi_awuser(896) <= \<const0>\;
  m_axi_awuser(895) <= \<const0>\;
  m_axi_awuser(894) <= \<const0>\;
  m_axi_awuser(893) <= \<const0>\;
  m_axi_awuser(892) <= \<const0>\;
  m_axi_awuser(891) <= \<const0>\;
  m_axi_awuser(890) <= \<const0>\;
  m_axi_awuser(889) <= \<const0>\;
  m_axi_awuser(888) <= \<const0>\;
  m_axi_awuser(887) <= \<const0>\;
  m_axi_awuser(886) <= \<const0>\;
  m_axi_awuser(885) <= \<const0>\;
  m_axi_awuser(884) <= \<const0>\;
  m_axi_awuser(883) <= \<const0>\;
  m_axi_awuser(882) <= \<const0>\;
  m_axi_awuser(881) <= \<const0>\;
  m_axi_awuser(880) <= \<const0>\;
  m_axi_awuser(879) <= \<const0>\;
  m_axi_awuser(878) <= \<const0>\;
  m_axi_awuser(877) <= \<const0>\;
  m_axi_awuser(876) <= \<const0>\;
  m_axi_awuser(875) <= \<const0>\;
  m_axi_awuser(874) <= \<const0>\;
  m_axi_awuser(873) <= \<const0>\;
  m_axi_awuser(872) <= \<const0>\;
  m_axi_awuser(871) <= \<const0>\;
  m_axi_awuser(870) <= \<const0>\;
  m_axi_awuser(869) <= \<const0>\;
  m_axi_awuser(868) <= \<const0>\;
  m_axi_awuser(867) <= \<const0>\;
  m_axi_awuser(866) <= \<const0>\;
  m_axi_awuser(865) <= \<const0>\;
  m_axi_awuser(864) <= \<const0>\;
  m_axi_awuser(863) <= \<const0>\;
  m_axi_awuser(862) <= \<const0>\;
  m_axi_awuser(861) <= \<const0>\;
  m_axi_awuser(860) <= \<const0>\;
  m_axi_awuser(859) <= \<const0>\;
  m_axi_awuser(858) <= \<const0>\;
  m_axi_awuser(857) <= \<const0>\;
  m_axi_awuser(856) <= \<const0>\;
  m_axi_awuser(855) <= \<const0>\;
  m_axi_awuser(854) <= \<const0>\;
  m_axi_awuser(853) <= \<const0>\;
  m_axi_awuser(852) <= \<const0>\;
  m_axi_awuser(851) <= \<const0>\;
  m_axi_awuser(850) <= \<const0>\;
  m_axi_awuser(849) <= \<const0>\;
  m_axi_awuser(848) <= \<const0>\;
  m_axi_awuser(847) <= \<const0>\;
  m_axi_awuser(846) <= \<const0>\;
  m_axi_awuser(845) <= \<const0>\;
  m_axi_awuser(844) <= \<const0>\;
  m_axi_awuser(843) <= \<const0>\;
  m_axi_awuser(842) <= \<const0>\;
  m_axi_awuser(841) <= \<const0>\;
  m_axi_awuser(840) <= \<const0>\;
  m_axi_awuser(839) <= \<const0>\;
  m_axi_awuser(838) <= \<const0>\;
  m_axi_awuser(837) <= \<const0>\;
  m_axi_awuser(836) <= \<const0>\;
  m_axi_awuser(835) <= \<const0>\;
  m_axi_awuser(834) <= \<const0>\;
  m_axi_awuser(833) <= \<const0>\;
  m_axi_awuser(832) <= \<const0>\;
  m_axi_awuser(831) <= \<const0>\;
  m_axi_awuser(830) <= \<const0>\;
  m_axi_awuser(829) <= \<const0>\;
  m_axi_awuser(828) <= \<const0>\;
  m_axi_awuser(827) <= \<const0>\;
  m_axi_awuser(826) <= \<const0>\;
  m_axi_awuser(825) <= \<const0>\;
  m_axi_awuser(824) <= \<const0>\;
  m_axi_awuser(823) <= \<const0>\;
  m_axi_awuser(822) <= \<const0>\;
  m_axi_awuser(821) <= \<const0>\;
  m_axi_awuser(820) <= \<const0>\;
  m_axi_awuser(819) <= \<const0>\;
  m_axi_awuser(818) <= \<const0>\;
  m_axi_awuser(817) <= \<const0>\;
  m_axi_awuser(816) <= \<const0>\;
  m_axi_awuser(815) <= \<const0>\;
  m_axi_awuser(814) <= \<const0>\;
  m_axi_awuser(813) <= \<const0>\;
  m_axi_awuser(812) <= \<const0>\;
  m_axi_awuser(811) <= \<const0>\;
  m_axi_awuser(810) <= \<const0>\;
  m_axi_awuser(809) <= \<const0>\;
  m_axi_awuser(808) <= \<const0>\;
  m_axi_awuser(807) <= \<const0>\;
  m_axi_awuser(806) <= \<const0>\;
  m_axi_awuser(805) <= \<const0>\;
  m_axi_awuser(804) <= \<const0>\;
  m_axi_awuser(803) <= \<const0>\;
  m_axi_awuser(802) <= \<const0>\;
  m_axi_awuser(801) <= \<const0>\;
  m_axi_awuser(800) <= \<const0>\;
  m_axi_awuser(799) <= \<const0>\;
  m_axi_awuser(798) <= \<const0>\;
  m_axi_awuser(797) <= \<const0>\;
  m_axi_awuser(796) <= \<const0>\;
  m_axi_awuser(795) <= \<const0>\;
  m_axi_awuser(794) <= \<const0>\;
  m_axi_awuser(793) <= \<const0>\;
  m_axi_awuser(792) <= \<const0>\;
  m_axi_awuser(791) <= \<const0>\;
  m_axi_awuser(790) <= \<const0>\;
  m_axi_awuser(789) <= \<const0>\;
  m_axi_awuser(788) <= \<const0>\;
  m_axi_awuser(787) <= \<const0>\;
  m_axi_awuser(786) <= \<const0>\;
  m_axi_awuser(785) <= \<const0>\;
  m_axi_awuser(784) <= \<const0>\;
  m_axi_awuser(783) <= \<const0>\;
  m_axi_awuser(782) <= \<const0>\;
  m_axi_awuser(781) <= \<const0>\;
  m_axi_awuser(780) <= \<const0>\;
  m_axi_awuser(779) <= \<const0>\;
  m_axi_awuser(778) <= \<const0>\;
  m_axi_awuser(777) <= \<const0>\;
  m_axi_awuser(776) <= \<const0>\;
  m_axi_awuser(775) <= \<const0>\;
  m_axi_awuser(774) <= \<const0>\;
  m_axi_awuser(773) <= \<const0>\;
  m_axi_awuser(772) <= \<const0>\;
  m_axi_awuser(771) <= \<const0>\;
  m_axi_awuser(770) <= \<const0>\;
  m_axi_awuser(769) <= \<const0>\;
  m_axi_awuser(768) <= \<const0>\;
  m_axi_awuser(767) <= \<const0>\;
  m_axi_awuser(766) <= \<const0>\;
  m_axi_awuser(765) <= \<const0>\;
  m_axi_awuser(764) <= \<const0>\;
  m_axi_awuser(763) <= \<const0>\;
  m_axi_awuser(762) <= \<const0>\;
  m_axi_awuser(761) <= \<const0>\;
  m_axi_awuser(760) <= \<const0>\;
  m_axi_awuser(759) <= \<const0>\;
  m_axi_awuser(758) <= \<const0>\;
  m_axi_awuser(757) <= \<const0>\;
  m_axi_awuser(756) <= \<const0>\;
  m_axi_awuser(755) <= \<const0>\;
  m_axi_awuser(754) <= \<const0>\;
  m_axi_awuser(753) <= \<const0>\;
  m_axi_awuser(752) <= \<const0>\;
  m_axi_awuser(751) <= \<const0>\;
  m_axi_awuser(750) <= \<const0>\;
  m_axi_awuser(749) <= \<const0>\;
  m_axi_awuser(748) <= \<const0>\;
  m_axi_awuser(747) <= \<const0>\;
  m_axi_awuser(746) <= \<const0>\;
  m_axi_awuser(745) <= \<const0>\;
  m_axi_awuser(744) <= \<const0>\;
  m_axi_awuser(743) <= \<const0>\;
  m_axi_awuser(742) <= \<const0>\;
  m_axi_awuser(741) <= \<const0>\;
  m_axi_awuser(740) <= \<const0>\;
  m_axi_awuser(739) <= \<const0>\;
  m_axi_awuser(738) <= \<const0>\;
  m_axi_awuser(737) <= \<const0>\;
  m_axi_awuser(736) <= \<const0>\;
  m_axi_awuser(735) <= \<const0>\;
  m_axi_awuser(734) <= \<const0>\;
  m_axi_awuser(733) <= \<const0>\;
  m_axi_awuser(732) <= \<const0>\;
  m_axi_awuser(731) <= \<const0>\;
  m_axi_awuser(730) <= \<const0>\;
  m_axi_awuser(729) <= \<const0>\;
  m_axi_awuser(728) <= \<const0>\;
  m_axi_awuser(727) <= \<const0>\;
  m_axi_awuser(726) <= \<const0>\;
  m_axi_awuser(725) <= \<const0>\;
  m_axi_awuser(724) <= \<const0>\;
  m_axi_awuser(723) <= \<const0>\;
  m_axi_awuser(722) <= \<const0>\;
  m_axi_awuser(721) <= \<const0>\;
  m_axi_awuser(720) <= \<const0>\;
  m_axi_awuser(719) <= \<const0>\;
  m_axi_awuser(718) <= \<const0>\;
  m_axi_awuser(717) <= \<const0>\;
  m_axi_awuser(716) <= \<const0>\;
  m_axi_awuser(715) <= \<const0>\;
  m_axi_awuser(714) <= \<const0>\;
  m_axi_awuser(713) <= \<const0>\;
  m_axi_awuser(712) <= \<const0>\;
  m_axi_awuser(711) <= \<const0>\;
  m_axi_awuser(710) <= \<const0>\;
  m_axi_awuser(709) <= \<const0>\;
  m_axi_awuser(708) <= \<const0>\;
  m_axi_awuser(707) <= \<const0>\;
  m_axi_awuser(706) <= \<const0>\;
  m_axi_awuser(705) <= \<const0>\;
  m_axi_awuser(704) <= \<const0>\;
  m_axi_awuser(703) <= \<const0>\;
  m_axi_awuser(702) <= \<const0>\;
  m_axi_awuser(701) <= \<const0>\;
  m_axi_awuser(700) <= \<const0>\;
  m_axi_awuser(699) <= \<const0>\;
  m_axi_awuser(698) <= \<const0>\;
  m_axi_awuser(697) <= \<const0>\;
  m_axi_awuser(696) <= \<const0>\;
  m_axi_awuser(695) <= \<const0>\;
  m_axi_awuser(694) <= \<const0>\;
  m_axi_awuser(693) <= \<const0>\;
  m_axi_awuser(692) <= \<const0>\;
  m_axi_awuser(691) <= \<const0>\;
  m_axi_awuser(690) <= \<const0>\;
  m_axi_awuser(689) <= \<const0>\;
  m_axi_awuser(688) <= \<const0>\;
  m_axi_awuser(687) <= \<const0>\;
  m_axi_awuser(686) <= \<const0>\;
  m_axi_awuser(685) <= \<const0>\;
  m_axi_awuser(684) <= \<const0>\;
  m_axi_awuser(683) <= \<const0>\;
  m_axi_awuser(682) <= \<const0>\;
  m_axi_awuser(681) <= \<const0>\;
  m_axi_awuser(680) <= \<const0>\;
  m_axi_awuser(679) <= \<const0>\;
  m_axi_awuser(678) <= \<const0>\;
  m_axi_awuser(677) <= \<const0>\;
  m_axi_awuser(676) <= \<const0>\;
  m_axi_awuser(675) <= \<const0>\;
  m_axi_awuser(674) <= \<const0>\;
  m_axi_awuser(673) <= \<const0>\;
  m_axi_awuser(672) <= \<const0>\;
  m_axi_awuser(671) <= \<const0>\;
  m_axi_awuser(670) <= \<const0>\;
  m_axi_awuser(669) <= \<const0>\;
  m_axi_awuser(668) <= \<const0>\;
  m_axi_awuser(667) <= \<const0>\;
  m_axi_awuser(666) <= \<const0>\;
  m_axi_awuser(665) <= \<const0>\;
  m_axi_awuser(664) <= \<const0>\;
  m_axi_awuser(663) <= \<const0>\;
  m_axi_awuser(662) <= \<const0>\;
  m_axi_awuser(661) <= \<const0>\;
  m_axi_awuser(660) <= \<const0>\;
  m_axi_awuser(659) <= \<const0>\;
  m_axi_awuser(658) <= \<const0>\;
  m_axi_awuser(657) <= \<const0>\;
  m_axi_awuser(656) <= \<const0>\;
  m_axi_awuser(655) <= \<const0>\;
  m_axi_awuser(654) <= \<const0>\;
  m_axi_awuser(653) <= \<const0>\;
  m_axi_awuser(652) <= \<const0>\;
  m_axi_awuser(651) <= \<const0>\;
  m_axi_awuser(650) <= \<const0>\;
  m_axi_awuser(649) <= \<const0>\;
  m_axi_awuser(648) <= \<const0>\;
  m_axi_awuser(647) <= \<const0>\;
  m_axi_awuser(646) <= \<const0>\;
  m_axi_awuser(645) <= \<const0>\;
  m_axi_awuser(644) <= \<const0>\;
  m_axi_awuser(643) <= \<const0>\;
  m_axi_awuser(642) <= \<const0>\;
  m_axi_awuser(641) <= \<const0>\;
  m_axi_awuser(640) <= \<const0>\;
  m_axi_awuser(639) <= \<const0>\;
  m_axi_awuser(638) <= \<const0>\;
  m_axi_awuser(637) <= \<const0>\;
  m_axi_awuser(636) <= \<const0>\;
  m_axi_awuser(635) <= \<const0>\;
  m_axi_awuser(634) <= \<const0>\;
  m_axi_awuser(633) <= \<const0>\;
  m_axi_awuser(632) <= \<const0>\;
  m_axi_awuser(631) <= \<const0>\;
  m_axi_awuser(630) <= \<const0>\;
  m_axi_awuser(629) <= \<const0>\;
  m_axi_awuser(628) <= \<const0>\;
  m_axi_awuser(627) <= \<const0>\;
  m_axi_awuser(626) <= \<const0>\;
  m_axi_awuser(625) <= \<const0>\;
  m_axi_awuser(624) <= \<const0>\;
  m_axi_awuser(623) <= \<const0>\;
  m_axi_awuser(622) <= \<const0>\;
  m_axi_awuser(621) <= \<const0>\;
  m_axi_awuser(620) <= \<const0>\;
  m_axi_awuser(619) <= \<const0>\;
  m_axi_awuser(618) <= \<const0>\;
  m_axi_awuser(617) <= \<const0>\;
  m_axi_awuser(616) <= \<const0>\;
  m_axi_awuser(615) <= \<const0>\;
  m_axi_awuser(614) <= \<const0>\;
  m_axi_awuser(613) <= \<const0>\;
  m_axi_awuser(612) <= \<const0>\;
  m_axi_awuser(611) <= \<const0>\;
  m_axi_awuser(610) <= \<const0>\;
  m_axi_awuser(609) <= \<const0>\;
  m_axi_awuser(608) <= \<const0>\;
  m_axi_awuser(607) <= \<const0>\;
  m_axi_awuser(606) <= \<const0>\;
  m_axi_awuser(605) <= \<const0>\;
  m_axi_awuser(604) <= \<const0>\;
  m_axi_awuser(603) <= \<const0>\;
  m_axi_awuser(602) <= \<const0>\;
  m_axi_awuser(601) <= \<const0>\;
  m_axi_awuser(600) <= \<const0>\;
  m_axi_awuser(599) <= \<const0>\;
  m_axi_awuser(598) <= \<const0>\;
  m_axi_awuser(597) <= \<const0>\;
  m_axi_awuser(596) <= \<const0>\;
  m_axi_awuser(595) <= \<const0>\;
  m_axi_awuser(594) <= \<const0>\;
  m_axi_awuser(593) <= \<const0>\;
  m_axi_awuser(592) <= \<const0>\;
  m_axi_awuser(591) <= \<const0>\;
  m_axi_awuser(590) <= \<const0>\;
  m_axi_awuser(589) <= \<const0>\;
  m_axi_awuser(588) <= \<const0>\;
  m_axi_awuser(587) <= \<const0>\;
  m_axi_awuser(586) <= \<const0>\;
  m_axi_awuser(585) <= \<const0>\;
  m_axi_awuser(584) <= \<const0>\;
  m_axi_awuser(583) <= \<const0>\;
  m_axi_awuser(582) <= \<const0>\;
  m_axi_awuser(581) <= \<const0>\;
  m_axi_awuser(580) <= \<const0>\;
  m_axi_awuser(579) <= \<const0>\;
  m_axi_awuser(578) <= \<const0>\;
  m_axi_awuser(577) <= \<const0>\;
  m_axi_awuser(576) <= \<const0>\;
  m_axi_awuser(575) <= \<const0>\;
  m_axi_awuser(574) <= \<const0>\;
  m_axi_awuser(573) <= \<const0>\;
  m_axi_awuser(572) <= \<const0>\;
  m_axi_awuser(571) <= \<const0>\;
  m_axi_awuser(570) <= \<const0>\;
  m_axi_awuser(569) <= \<const0>\;
  m_axi_awuser(568) <= \<const0>\;
  m_axi_awuser(567) <= \<const0>\;
  m_axi_awuser(566) <= \<const0>\;
  m_axi_awuser(565) <= \<const0>\;
  m_axi_awuser(564) <= \<const0>\;
  m_axi_awuser(563) <= \<const0>\;
  m_axi_awuser(562) <= \<const0>\;
  m_axi_awuser(561) <= \<const0>\;
  m_axi_awuser(560) <= \<const0>\;
  m_axi_awuser(559) <= \<const0>\;
  m_axi_awuser(558) <= \<const0>\;
  m_axi_awuser(557) <= \<const0>\;
  m_axi_awuser(556) <= \<const0>\;
  m_axi_awuser(555) <= \<const0>\;
  m_axi_awuser(554) <= \<const0>\;
  m_axi_awuser(553) <= \<const0>\;
  m_axi_awuser(552) <= \<const0>\;
  m_axi_awuser(551) <= \<const0>\;
  m_axi_awuser(550) <= \<const0>\;
  m_axi_awuser(549) <= \<const0>\;
  m_axi_awuser(548) <= \<const0>\;
  m_axi_awuser(547) <= \<const0>\;
  m_axi_awuser(546) <= \<const0>\;
  m_axi_awuser(545) <= \<const0>\;
  m_axi_awuser(544) <= \<const0>\;
  m_axi_awuser(543) <= \<const0>\;
  m_axi_awuser(542) <= \<const0>\;
  m_axi_awuser(541) <= \<const0>\;
  m_axi_awuser(540) <= \<const0>\;
  m_axi_awuser(539) <= \<const0>\;
  m_axi_awuser(538) <= \<const0>\;
  m_axi_awuser(537) <= \<const0>\;
  m_axi_awuser(536) <= \<const0>\;
  m_axi_awuser(535) <= \<const0>\;
  m_axi_awuser(534) <= \<const0>\;
  m_axi_awuser(533) <= \<const0>\;
  m_axi_awuser(532) <= \<const0>\;
  m_axi_awuser(531) <= \<const0>\;
  m_axi_awuser(530) <= \<const0>\;
  m_axi_awuser(529) <= \<const0>\;
  m_axi_awuser(528) <= \<const0>\;
  m_axi_awuser(527) <= \<const0>\;
  m_axi_awuser(526) <= \<const0>\;
  m_axi_awuser(525) <= \<const0>\;
  m_axi_awuser(524) <= \<const0>\;
  m_axi_awuser(523) <= \<const0>\;
  m_axi_awuser(522) <= \<const0>\;
  m_axi_awuser(521) <= \<const0>\;
  m_axi_awuser(520) <= \<const0>\;
  m_axi_awuser(519) <= \<const0>\;
  m_axi_awuser(518) <= \<const0>\;
  m_axi_awuser(517) <= \<const0>\;
  m_axi_awuser(516) <= \<const0>\;
  m_axi_awuser(515) <= \<const0>\;
  m_axi_awuser(514) <= \<const0>\;
  m_axi_awuser(513) <= \<const0>\;
  m_axi_awuser(512) <= \<const0>\;
  m_axi_awuser(511) <= \<const0>\;
  m_axi_awuser(510) <= \<const0>\;
  m_axi_awuser(509) <= \<const0>\;
  m_axi_awuser(508) <= \<const0>\;
  m_axi_awuser(507) <= \<const0>\;
  m_axi_awuser(506) <= \<const0>\;
  m_axi_awuser(505) <= \<const0>\;
  m_axi_awuser(504) <= \<const0>\;
  m_axi_awuser(503) <= \<const0>\;
  m_axi_awuser(502) <= \<const0>\;
  m_axi_awuser(501) <= \<const0>\;
  m_axi_awuser(500) <= \<const0>\;
  m_axi_awuser(499) <= \<const0>\;
  m_axi_awuser(498) <= \<const0>\;
  m_axi_awuser(497) <= \<const0>\;
  m_axi_awuser(496) <= \<const0>\;
  m_axi_awuser(495) <= \<const0>\;
  m_axi_awuser(494) <= \<const0>\;
  m_axi_awuser(493) <= \<const0>\;
  m_axi_awuser(492) <= \<const0>\;
  m_axi_awuser(491) <= \<const0>\;
  m_axi_awuser(490) <= \<const0>\;
  m_axi_awuser(489) <= \<const0>\;
  m_axi_awuser(488) <= \<const0>\;
  m_axi_awuser(487) <= \<const0>\;
  m_axi_awuser(486) <= \<const0>\;
  m_axi_awuser(485) <= \<const0>\;
  m_axi_awuser(484) <= \<const0>\;
  m_axi_awuser(483) <= \<const0>\;
  m_axi_awuser(482) <= \<const0>\;
  m_axi_awuser(481) <= \<const0>\;
  m_axi_awuser(480) <= \<const0>\;
  m_axi_awuser(479) <= \<const0>\;
  m_axi_awuser(478) <= \<const0>\;
  m_axi_awuser(477) <= \<const0>\;
  m_axi_awuser(476) <= \<const0>\;
  m_axi_awuser(475) <= \<const0>\;
  m_axi_awuser(474) <= \<const0>\;
  m_axi_awuser(473) <= \<const0>\;
  m_axi_awuser(472) <= \<const0>\;
  m_axi_awuser(471) <= \<const0>\;
  m_axi_awuser(470) <= \<const0>\;
  m_axi_awuser(469) <= \<const0>\;
  m_axi_awuser(468) <= \<const0>\;
  m_axi_awuser(467) <= \<const0>\;
  m_axi_awuser(466) <= \<const0>\;
  m_axi_awuser(465) <= \<const0>\;
  m_axi_awuser(464) <= \<const0>\;
  m_axi_awuser(463) <= \<const0>\;
  m_axi_awuser(462) <= \<const0>\;
  m_axi_awuser(461) <= \<const0>\;
  m_axi_awuser(460) <= \<const0>\;
  m_axi_awuser(459) <= \<const0>\;
  m_axi_awuser(458) <= \<const0>\;
  m_axi_awuser(457) <= \<const0>\;
  m_axi_awuser(456) <= \<const0>\;
  m_axi_awuser(455) <= \<const0>\;
  m_axi_awuser(454) <= \<const0>\;
  m_axi_awuser(453) <= \<const0>\;
  m_axi_awuser(452) <= \<const0>\;
  m_axi_awuser(451) <= \<const0>\;
  m_axi_awuser(450) <= \<const0>\;
  m_axi_awuser(449) <= \<const0>\;
  m_axi_awuser(448) <= \<const0>\;
  m_axi_awuser(447) <= \<const0>\;
  m_axi_awuser(446) <= \<const0>\;
  m_axi_awuser(445) <= \<const0>\;
  m_axi_awuser(444) <= \<const0>\;
  m_axi_awuser(443) <= \<const0>\;
  m_axi_awuser(442) <= \<const0>\;
  m_axi_awuser(441) <= \<const0>\;
  m_axi_awuser(440) <= \<const0>\;
  m_axi_awuser(439) <= \<const0>\;
  m_axi_awuser(438) <= \<const0>\;
  m_axi_awuser(437) <= \<const0>\;
  m_axi_awuser(436) <= \<const0>\;
  m_axi_awuser(435) <= \<const0>\;
  m_axi_awuser(434) <= \<const0>\;
  m_axi_awuser(433) <= \<const0>\;
  m_axi_awuser(432) <= \<const0>\;
  m_axi_awuser(431) <= \<const0>\;
  m_axi_awuser(430) <= \<const0>\;
  m_axi_awuser(429) <= \<const0>\;
  m_axi_awuser(428) <= \<const0>\;
  m_axi_awuser(427) <= \<const0>\;
  m_axi_awuser(426) <= \<const0>\;
  m_axi_awuser(425) <= \<const0>\;
  m_axi_awuser(424) <= \<const0>\;
  m_axi_awuser(423) <= \<const0>\;
  m_axi_awuser(422) <= \<const0>\;
  m_axi_awuser(421) <= \<const0>\;
  m_axi_awuser(420) <= \<const0>\;
  m_axi_awuser(419) <= \<const0>\;
  m_axi_awuser(418) <= \<const0>\;
  m_axi_awuser(417) <= \<const0>\;
  m_axi_awuser(416) <= \<const0>\;
  m_axi_awuser(415) <= \<const0>\;
  m_axi_awuser(414) <= \<const0>\;
  m_axi_awuser(413) <= \<const0>\;
  m_axi_awuser(412) <= \<const0>\;
  m_axi_awuser(411) <= \<const0>\;
  m_axi_awuser(410) <= \<const0>\;
  m_axi_awuser(409) <= \<const0>\;
  m_axi_awuser(408) <= \<const0>\;
  m_axi_awuser(407) <= \<const0>\;
  m_axi_awuser(406) <= \<const0>\;
  m_axi_awuser(405) <= \<const0>\;
  m_axi_awuser(404) <= \<const0>\;
  m_axi_awuser(403) <= \<const0>\;
  m_axi_awuser(402) <= \<const0>\;
  m_axi_awuser(401) <= \<const0>\;
  m_axi_awuser(400) <= \<const0>\;
  m_axi_awuser(399) <= \<const0>\;
  m_axi_awuser(398) <= \<const0>\;
  m_axi_awuser(397) <= \<const0>\;
  m_axi_awuser(396) <= \<const0>\;
  m_axi_awuser(395) <= \<const0>\;
  m_axi_awuser(394) <= \<const0>\;
  m_axi_awuser(393) <= \<const0>\;
  m_axi_awuser(392) <= \<const0>\;
  m_axi_awuser(391) <= \<const0>\;
  m_axi_awuser(390) <= \<const0>\;
  m_axi_awuser(389) <= \<const0>\;
  m_axi_awuser(388) <= \<const0>\;
  m_axi_awuser(387) <= \<const0>\;
  m_axi_awuser(386) <= \<const0>\;
  m_axi_awuser(385) <= \<const0>\;
  m_axi_awuser(384) <= \<const0>\;
  m_axi_awuser(383) <= \<const0>\;
  m_axi_awuser(382) <= \<const0>\;
  m_axi_awuser(381) <= \<const0>\;
  m_axi_awuser(380) <= \<const0>\;
  m_axi_awuser(379) <= \<const0>\;
  m_axi_awuser(378) <= \<const0>\;
  m_axi_awuser(377) <= \<const0>\;
  m_axi_awuser(376) <= \<const0>\;
  m_axi_awuser(375) <= \<const0>\;
  m_axi_awuser(374) <= \<const0>\;
  m_axi_awuser(373) <= \<const0>\;
  m_axi_awuser(372) <= \<const0>\;
  m_axi_awuser(371) <= \<const0>\;
  m_axi_awuser(370) <= \<const0>\;
  m_axi_awuser(369) <= \<const0>\;
  m_axi_awuser(368) <= \<const0>\;
  m_axi_awuser(367) <= \<const0>\;
  m_axi_awuser(366) <= \<const0>\;
  m_axi_awuser(365) <= \<const0>\;
  m_axi_awuser(364) <= \<const0>\;
  m_axi_awuser(363) <= \<const0>\;
  m_axi_awuser(362) <= \<const0>\;
  m_axi_awuser(361) <= \<const0>\;
  m_axi_awuser(360) <= \<const0>\;
  m_axi_awuser(359) <= \<const0>\;
  m_axi_awuser(358) <= \<const0>\;
  m_axi_awuser(357) <= \<const0>\;
  m_axi_awuser(356) <= \<const0>\;
  m_axi_awuser(355) <= \<const0>\;
  m_axi_awuser(354) <= \<const0>\;
  m_axi_awuser(353) <= \<const0>\;
  m_axi_awuser(352) <= \<const0>\;
  m_axi_awuser(351) <= \<const0>\;
  m_axi_awuser(350) <= \<const0>\;
  m_axi_awuser(349) <= \<const0>\;
  m_axi_awuser(348) <= \<const0>\;
  m_axi_awuser(347) <= \<const0>\;
  m_axi_awuser(346) <= \<const0>\;
  m_axi_awuser(345) <= \<const0>\;
  m_axi_awuser(344) <= \<const0>\;
  m_axi_awuser(343) <= \<const0>\;
  m_axi_awuser(342) <= \<const0>\;
  m_axi_awuser(341) <= \<const0>\;
  m_axi_awuser(340) <= \<const0>\;
  m_axi_awuser(339) <= \<const0>\;
  m_axi_awuser(338) <= \<const0>\;
  m_axi_awuser(337) <= \<const0>\;
  m_axi_awuser(336) <= \<const0>\;
  m_axi_awuser(335) <= \<const0>\;
  m_axi_awuser(334) <= \<const0>\;
  m_axi_awuser(333) <= \<const0>\;
  m_axi_awuser(332) <= \<const0>\;
  m_axi_awuser(331) <= \<const0>\;
  m_axi_awuser(330) <= \<const0>\;
  m_axi_awuser(329) <= \<const0>\;
  m_axi_awuser(328) <= \<const0>\;
  m_axi_awuser(327) <= \<const0>\;
  m_axi_awuser(326) <= \<const0>\;
  m_axi_awuser(325) <= \<const0>\;
  m_axi_awuser(324) <= \<const0>\;
  m_axi_awuser(323) <= \<const0>\;
  m_axi_awuser(322) <= \<const0>\;
  m_axi_awuser(321) <= \<const0>\;
  m_axi_awuser(320) <= \<const0>\;
  m_axi_awuser(319) <= \<const0>\;
  m_axi_awuser(318) <= \<const0>\;
  m_axi_awuser(317) <= \<const0>\;
  m_axi_awuser(316) <= \<const0>\;
  m_axi_awuser(315) <= \<const0>\;
  m_axi_awuser(314) <= \<const0>\;
  m_axi_awuser(313) <= \<const0>\;
  m_axi_awuser(312) <= \<const0>\;
  m_axi_awuser(311) <= \<const0>\;
  m_axi_awuser(310) <= \<const0>\;
  m_axi_awuser(309) <= \<const0>\;
  m_axi_awuser(308) <= \<const0>\;
  m_axi_awuser(307) <= \<const0>\;
  m_axi_awuser(306) <= \<const0>\;
  m_axi_awuser(305) <= \<const0>\;
  m_axi_awuser(304) <= \<const0>\;
  m_axi_awuser(303) <= \<const0>\;
  m_axi_awuser(302) <= \<const0>\;
  m_axi_awuser(301) <= \<const0>\;
  m_axi_awuser(300) <= \<const0>\;
  m_axi_awuser(299) <= \<const0>\;
  m_axi_awuser(298) <= \<const0>\;
  m_axi_awuser(297) <= \<const0>\;
  m_axi_awuser(296) <= \<const0>\;
  m_axi_awuser(295) <= \<const0>\;
  m_axi_awuser(294) <= \<const0>\;
  m_axi_awuser(293) <= \<const0>\;
  m_axi_awuser(292) <= \<const0>\;
  m_axi_awuser(291) <= \<const0>\;
  m_axi_awuser(290) <= \<const0>\;
  m_axi_awuser(289) <= \<const0>\;
  m_axi_awuser(288) <= \<const0>\;
  m_axi_awuser(287) <= \<const0>\;
  m_axi_awuser(286) <= \<const0>\;
  m_axi_awuser(285) <= \<const0>\;
  m_axi_awuser(284) <= \<const0>\;
  m_axi_awuser(283) <= \<const0>\;
  m_axi_awuser(282) <= \<const0>\;
  m_axi_awuser(281) <= \<const0>\;
  m_axi_awuser(280) <= \<const0>\;
  m_axi_awuser(279) <= \<const0>\;
  m_axi_awuser(278) <= \<const0>\;
  m_axi_awuser(277) <= \<const0>\;
  m_axi_awuser(276) <= \<const0>\;
  m_axi_awuser(275) <= \<const0>\;
  m_axi_awuser(274) <= \<const0>\;
  m_axi_awuser(273) <= \<const0>\;
  m_axi_awuser(272) <= \<const0>\;
  m_axi_awuser(271) <= \<const0>\;
  m_axi_awuser(270) <= \<const0>\;
  m_axi_awuser(269) <= \<const0>\;
  m_axi_awuser(268) <= \<const0>\;
  m_axi_awuser(267) <= \<const0>\;
  m_axi_awuser(266) <= \<const0>\;
  m_axi_awuser(265) <= \<const0>\;
  m_axi_awuser(264) <= \<const0>\;
  m_axi_awuser(263) <= \<const0>\;
  m_axi_awuser(262) <= \<const0>\;
  m_axi_awuser(261) <= \<const0>\;
  m_axi_awuser(260) <= \<const0>\;
  m_axi_awuser(259) <= \<const0>\;
  m_axi_awuser(258) <= \<const0>\;
  m_axi_awuser(257) <= \<const0>\;
  m_axi_awuser(256) <= \<const0>\;
  m_axi_awuser(255) <= \<const0>\;
  m_axi_awuser(254) <= \<const0>\;
  m_axi_awuser(253) <= \<const0>\;
  m_axi_awuser(252) <= \<const0>\;
  m_axi_awuser(251) <= \<const0>\;
  m_axi_awuser(250) <= \<const0>\;
  m_axi_awuser(249) <= \<const0>\;
  m_axi_awuser(248) <= \<const0>\;
  m_axi_awuser(247) <= \<const0>\;
  m_axi_awuser(246) <= \<const0>\;
  m_axi_awuser(245) <= \<const0>\;
  m_axi_awuser(244) <= \<const0>\;
  m_axi_awuser(243) <= \<const0>\;
  m_axi_awuser(242) <= \<const0>\;
  m_axi_awuser(241) <= \<const0>\;
  m_axi_awuser(240) <= \<const0>\;
  m_axi_awuser(239) <= \<const0>\;
  m_axi_awuser(238) <= \<const0>\;
  m_axi_awuser(237) <= \<const0>\;
  m_axi_awuser(236) <= \<const0>\;
  m_axi_awuser(235) <= \<const0>\;
  m_axi_awuser(234) <= \<const0>\;
  m_axi_awuser(233) <= \<const0>\;
  m_axi_awuser(232) <= \<const0>\;
  m_axi_awuser(231) <= \<const0>\;
  m_axi_awuser(230) <= \<const0>\;
  m_axi_awuser(229) <= \<const0>\;
  m_axi_awuser(228) <= \<const0>\;
  m_axi_awuser(227) <= \<const0>\;
  m_axi_awuser(226) <= \<const0>\;
  m_axi_awuser(225) <= \<const0>\;
  m_axi_awuser(224) <= \<const0>\;
  m_axi_awuser(223) <= \<const0>\;
  m_axi_awuser(222) <= \<const0>\;
  m_axi_awuser(221) <= \<const0>\;
  m_axi_awuser(220) <= \<const0>\;
  m_axi_awuser(219) <= \<const0>\;
  m_axi_awuser(218) <= \<const0>\;
  m_axi_awuser(217) <= \<const0>\;
  m_axi_awuser(216) <= \<const0>\;
  m_axi_awuser(215) <= \<const0>\;
  m_axi_awuser(214) <= \<const0>\;
  m_axi_awuser(213) <= \<const0>\;
  m_axi_awuser(212) <= \<const0>\;
  m_axi_awuser(211) <= \<const0>\;
  m_axi_awuser(210) <= \<const0>\;
  m_axi_awuser(209) <= \<const0>\;
  m_axi_awuser(208) <= \<const0>\;
  m_axi_awuser(207) <= \<const0>\;
  m_axi_awuser(206) <= \<const0>\;
  m_axi_awuser(205) <= \<const0>\;
  m_axi_awuser(204) <= \<const0>\;
  m_axi_awuser(203) <= \<const0>\;
  m_axi_awuser(202) <= \<const0>\;
  m_axi_awuser(201) <= \<const0>\;
  m_axi_awuser(200) <= \<const0>\;
  m_axi_awuser(199) <= \<const0>\;
  m_axi_awuser(198) <= \<const0>\;
  m_axi_awuser(197) <= \<const0>\;
  m_axi_awuser(196) <= \<const0>\;
  m_axi_awuser(195) <= \<const0>\;
  m_axi_awuser(194) <= \<const0>\;
  m_axi_awuser(193) <= \<const0>\;
  m_axi_awuser(192) <= \<const0>\;
  m_axi_awuser(191) <= \<const0>\;
  m_axi_awuser(190) <= \<const0>\;
  m_axi_awuser(189) <= \<const0>\;
  m_axi_awuser(188) <= \<const0>\;
  m_axi_awuser(187) <= \<const0>\;
  m_axi_awuser(186) <= \<const0>\;
  m_axi_awuser(185) <= \<const0>\;
  m_axi_awuser(184) <= \<const0>\;
  m_axi_awuser(183) <= \<const0>\;
  m_axi_awuser(182) <= \<const0>\;
  m_axi_awuser(181) <= \<const0>\;
  m_axi_awuser(180) <= \<const0>\;
  m_axi_awuser(179) <= \<const0>\;
  m_axi_awuser(178) <= \<const0>\;
  m_axi_awuser(177) <= \<const0>\;
  m_axi_awuser(176) <= \<const0>\;
  m_axi_awuser(175) <= \<const0>\;
  m_axi_awuser(174) <= \<const0>\;
  m_axi_awuser(173) <= \<const0>\;
  m_axi_awuser(172) <= \<const0>\;
  m_axi_awuser(171) <= \<const0>\;
  m_axi_awuser(170) <= \<const0>\;
  m_axi_awuser(169) <= \<const0>\;
  m_axi_awuser(168) <= \<const0>\;
  m_axi_awuser(167) <= \<const0>\;
  m_axi_awuser(166) <= \<const0>\;
  m_axi_awuser(165) <= \<const0>\;
  m_axi_awuser(164) <= \<const0>\;
  m_axi_awuser(163) <= \<const0>\;
  m_axi_awuser(162) <= \<const0>\;
  m_axi_awuser(161) <= \<const0>\;
  m_axi_awuser(160) <= \<const0>\;
  m_axi_awuser(159) <= \<const0>\;
  m_axi_awuser(158) <= \<const0>\;
  m_axi_awuser(157) <= \<const0>\;
  m_axi_awuser(156) <= \<const0>\;
  m_axi_awuser(155) <= \<const0>\;
  m_axi_awuser(154) <= \<const0>\;
  m_axi_awuser(153) <= \<const0>\;
  m_axi_awuser(152) <= \<const0>\;
  m_axi_awuser(151) <= \<const0>\;
  m_axi_awuser(150) <= \<const0>\;
  m_axi_awuser(149) <= \<const0>\;
  m_axi_awuser(148) <= \<const0>\;
  m_axi_awuser(147) <= \<const0>\;
  m_axi_awuser(146) <= \<const0>\;
  m_axi_awuser(145) <= \<const0>\;
  m_axi_awuser(144) <= \<const0>\;
  m_axi_awuser(143) <= \<const0>\;
  m_axi_awuser(142) <= \<const0>\;
  m_axi_awuser(141) <= \<const0>\;
  m_axi_awuser(140) <= \<const0>\;
  m_axi_awuser(139) <= \<const0>\;
  m_axi_awuser(138) <= \<const0>\;
  m_axi_awuser(137) <= \<const0>\;
  m_axi_awuser(136) <= \<const0>\;
  m_axi_awuser(135) <= \<const0>\;
  m_axi_awuser(134) <= \<const0>\;
  m_axi_awuser(133) <= \<const0>\;
  m_axi_awuser(132) <= \<const0>\;
  m_axi_awuser(131) <= \<const0>\;
  m_axi_awuser(130) <= \<const0>\;
  m_axi_awuser(129) <= \<const0>\;
  m_axi_awuser(128) <= \<const0>\;
  m_axi_awuser(127) <= \<const0>\;
  m_axi_awuser(126) <= \<const0>\;
  m_axi_awuser(125) <= \<const0>\;
  m_axi_awuser(124) <= \<const0>\;
  m_axi_awuser(123) <= \<const0>\;
  m_axi_awuser(122) <= \<const0>\;
  m_axi_awuser(121) <= \<const0>\;
  m_axi_awuser(120) <= \<const0>\;
  m_axi_awuser(119) <= \<const0>\;
  m_axi_awuser(118) <= \<const0>\;
  m_axi_awuser(117) <= \<const0>\;
  m_axi_awuser(116) <= \<const0>\;
  m_axi_awuser(115) <= \<const0>\;
  m_axi_awuser(114) <= \<const0>\;
  m_axi_awuser(113) <= \<const0>\;
  m_axi_awuser(112) <= \<const0>\;
  m_axi_awuser(111) <= \<const0>\;
  m_axi_awuser(110) <= \<const0>\;
  m_axi_awuser(109) <= \<const0>\;
  m_axi_awuser(108) <= \<const0>\;
  m_axi_awuser(107) <= \<const0>\;
  m_axi_awuser(106) <= \<const0>\;
  m_axi_awuser(105) <= \<const0>\;
  m_axi_awuser(104) <= \<const0>\;
  m_axi_awuser(103) <= \<const0>\;
  m_axi_awuser(102) <= \<const0>\;
  m_axi_awuser(101) <= \<const0>\;
  m_axi_awuser(100) <= \<const0>\;
  m_axi_awuser(99) <= \<const0>\;
  m_axi_awuser(98) <= \<const0>\;
  m_axi_awuser(97) <= \<const0>\;
  m_axi_awuser(96) <= \<const0>\;
  m_axi_awuser(95) <= \<const0>\;
  m_axi_awuser(94) <= \<const0>\;
  m_axi_awuser(93) <= \<const0>\;
  m_axi_awuser(92) <= \<const0>\;
  m_axi_awuser(91) <= \<const0>\;
  m_axi_awuser(90) <= \<const0>\;
  m_axi_awuser(89) <= \<const0>\;
  m_axi_awuser(88) <= \<const0>\;
  m_axi_awuser(87) <= \<const0>\;
  m_axi_awuser(86) <= \<const0>\;
  m_axi_awuser(85) <= \<const0>\;
  m_axi_awuser(84) <= \<const0>\;
  m_axi_awuser(83) <= \<const0>\;
  m_axi_awuser(82) <= \<const0>\;
  m_axi_awuser(81) <= \<const0>\;
  m_axi_awuser(80) <= \<const0>\;
  m_axi_awuser(79) <= \<const0>\;
  m_axi_awuser(78) <= \<const0>\;
  m_axi_awuser(77) <= \<const0>\;
  m_axi_awuser(76) <= \<const0>\;
  m_axi_awuser(75) <= \<const0>\;
  m_axi_awuser(74) <= \<const0>\;
  m_axi_awuser(73) <= \<const0>\;
  m_axi_awuser(72) <= \<const0>\;
  m_axi_awuser(71) <= \<const0>\;
  m_axi_awuser(70) <= \<const0>\;
  m_axi_awuser(69) <= \<const0>\;
  m_axi_awuser(68) <= \<const0>\;
  m_axi_awuser(67) <= \<const0>\;
  m_axi_awuser(66) <= \<const0>\;
  m_axi_awuser(65) <= \<const0>\;
  m_axi_awuser(64) <= \<const0>\;
  m_axi_awuser(63) <= \<const0>\;
  m_axi_awuser(62) <= \<const0>\;
  m_axi_awuser(61) <= \<const0>\;
  m_axi_awuser(60) <= \<const0>\;
  m_axi_awuser(59) <= \<const0>\;
  m_axi_awuser(58) <= \<const0>\;
  m_axi_awuser(57) <= \<const0>\;
  m_axi_awuser(56) <= \<const0>\;
  m_axi_awuser(55) <= \<const0>\;
  m_axi_awuser(54) <= \<const0>\;
  m_axi_awuser(53) <= \<const0>\;
  m_axi_awuser(52) <= \<const0>\;
  m_axi_awuser(51) <= \<const0>\;
  m_axi_awuser(50) <= \<const0>\;
  m_axi_awuser(49) <= \<const0>\;
  m_axi_awuser(48) <= \<const0>\;
  m_axi_awuser(47) <= \<const0>\;
  m_axi_awuser(46) <= \<const0>\;
  m_axi_awuser(45) <= \<const0>\;
  m_axi_awuser(44) <= \<const0>\;
  m_axi_awuser(43) <= \<const0>\;
  m_axi_awuser(42) <= \<const0>\;
  m_axi_awuser(41) <= \<const0>\;
  m_axi_awuser(40) <= \<const0>\;
  m_axi_awuser(39) <= \<const0>\;
  m_axi_awuser(38) <= \<const0>\;
  m_axi_awuser(37) <= \<const0>\;
  m_axi_awuser(36) <= \<const0>\;
  m_axi_awuser(35) <= \<const0>\;
  m_axi_awuser(34) <= \<const0>\;
  m_axi_awuser(33) <= \<const0>\;
  m_axi_awuser(32) <= \<const0>\;
  m_axi_awuser(31) <= \<const0>\;
  m_axi_awuser(30) <= \<const0>\;
  m_axi_awuser(29) <= \<const0>\;
  m_axi_awuser(28) <= \<const0>\;
  m_axi_awuser(27) <= \<const0>\;
  m_axi_awuser(26) <= \<const0>\;
  m_axi_awuser(25) <= \<const0>\;
  m_axi_awuser(24) <= \<const0>\;
  m_axi_awuser(23) <= \<const0>\;
  m_axi_awuser(22) <= \<const0>\;
  m_axi_awuser(21) <= \<const0>\;
  m_axi_awuser(20) <= \<const0>\;
  m_axi_awuser(19) <= \<const0>\;
  m_axi_awuser(18) <= \<const0>\;
  m_axi_awuser(17) <= \<const0>\;
  m_axi_awuser(16) <= \<const0>\;
  m_axi_awuser(15) <= \<const0>\;
  m_axi_awuser(14) <= \<const0>\;
  m_axi_awuser(13) <= \<const0>\;
  m_axi_awuser(12) <= \<const0>\;
  m_axi_awuser(11) <= \<const0>\;
  m_axi_awuser(10) <= \<const0>\;
  m_axi_awuser(9) <= \<const0>\;
  m_axi_awuser(8) <= \<const0>\;
  m_axi_awuser(7) <= \<const0>\;
  m_axi_awuser(6) <= \<const0>\;
  m_axi_awuser(5) <= \<const0>\;
  m_axi_awuser(4) <= \<const0>\;
  m_axi_awuser(3) <= \<const0>\;
  m_axi_awuser(2) <= \<const0>\;
  m_axi_awuser(1) <= \<const0>\;
  m_axi_awuser(0) <= \<const0>\;
  m_axi_wlast <= \<const0>\;
  m_axi_wuser(1023) <= \<const0>\;
  m_axi_wuser(1022) <= \<const0>\;
  m_axi_wuser(1021) <= \<const0>\;
  m_axi_wuser(1020) <= \<const0>\;
  m_axi_wuser(1019) <= \<const0>\;
  m_axi_wuser(1018) <= \<const0>\;
  m_axi_wuser(1017) <= \<const0>\;
  m_axi_wuser(1016) <= \<const0>\;
  m_axi_wuser(1015) <= \<const0>\;
  m_axi_wuser(1014) <= \<const0>\;
  m_axi_wuser(1013) <= \<const0>\;
  m_axi_wuser(1012) <= \<const0>\;
  m_axi_wuser(1011) <= \<const0>\;
  m_axi_wuser(1010) <= \<const0>\;
  m_axi_wuser(1009) <= \<const0>\;
  m_axi_wuser(1008) <= \<const0>\;
  m_axi_wuser(1007) <= \<const0>\;
  m_axi_wuser(1006) <= \<const0>\;
  m_axi_wuser(1005) <= \<const0>\;
  m_axi_wuser(1004) <= \<const0>\;
  m_axi_wuser(1003) <= \<const0>\;
  m_axi_wuser(1002) <= \<const0>\;
  m_axi_wuser(1001) <= \<const0>\;
  m_axi_wuser(1000) <= \<const0>\;
  m_axi_wuser(999) <= \<const0>\;
  m_axi_wuser(998) <= \<const0>\;
  m_axi_wuser(997) <= \<const0>\;
  m_axi_wuser(996) <= \<const0>\;
  m_axi_wuser(995) <= \<const0>\;
  m_axi_wuser(994) <= \<const0>\;
  m_axi_wuser(993) <= \<const0>\;
  m_axi_wuser(992) <= \<const0>\;
  m_axi_wuser(991) <= \<const0>\;
  m_axi_wuser(990) <= \<const0>\;
  m_axi_wuser(989) <= \<const0>\;
  m_axi_wuser(988) <= \<const0>\;
  m_axi_wuser(987) <= \<const0>\;
  m_axi_wuser(986) <= \<const0>\;
  m_axi_wuser(985) <= \<const0>\;
  m_axi_wuser(984) <= \<const0>\;
  m_axi_wuser(983) <= \<const0>\;
  m_axi_wuser(982) <= \<const0>\;
  m_axi_wuser(981) <= \<const0>\;
  m_axi_wuser(980) <= \<const0>\;
  m_axi_wuser(979) <= \<const0>\;
  m_axi_wuser(978) <= \<const0>\;
  m_axi_wuser(977) <= \<const0>\;
  m_axi_wuser(976) <= \<const0>\;
  m_axi_wuser(975) <= \<const0>\;
  m_axi_wuser(974) <= \<const0>\;
  m_axi_wuser(973) <= \<const0>\;
  m_axi_wuser(972) <= \<const0>\;
  m_axi_wuser(971) <= \<const0>\;
  m_axi_wuser(970) <= \<const0>\;
  m_axi_wuser(969) <= \<const0>\;
  m_axi_wuser(968) <= \<const0>\;
  m_axi_wuser(967) <= \<const0>\;
  m_axi_wuser(966) <= \<const0>\;
  m_axi_wuser(965) <= \<const0>\;
  m_axi_wuser(964) <= \<const0>\;
  m_axi_wuser(963) <= \<const0>\;
  m_axi_wuser(962) <= \<const0>\;
  m_axi_wuser(961) <= \<const0>\;
  m_axi_wuser(960) <= \<const0>\;
  m_axi_wuser(959) <= \<const0>\;
  m_axi_wuser(958) <= \<const0>\;
  m_axi_wuser(957) <= \<const0>\;
  m_axi_wuser(956) <= \<const0>\;
  m_axi_wuser(955) <= \<const0>\;
  m_axi_wuser(954) <= \<const0>\;
  m_axi_wuser(953) <= \<const0>\;
  m_axi_wuser(952) <= \<const0>\;
  m_axi_wuser(951) <= \<const0>\;
  m_axi_wuser(950) <= \<const0>\;
  m_axi_wuser(949) <= \<const0>\;
  m_axi_wuser(948) <= \<const0>\;
  m_axi_wuser(947) <= \<const0>\;
  m_axi_wuser(946) <= \<const0>\;
  m_axi_wuser(945) <= \<const0>\;
  m_axi_wuser(944) <= \<const0>\;
  m_axi_wuser(943) <= \<const0>\;
  m_axi_wuser(942) <= \<const0>\;
  m_axi_wuser(941) <= \<const0>\;
  m_axi_wuser(940) <= \<const0>\;
  m_axi_wuser(939) <= \<const0>\;
  m_axi_wuser(938) <= \<const0>\;
  m_axi_wuser(937) <= \<const0>\;
  m_axi_wuser(936) <= \<const0>\;
  m_axi_wuser(935) <= \<const0>\;
  m_axi_wuser(934) <= \<const0>\;
  m_axi_wuser(933) <= \<const0>\;
  m_axi_wuser(932) <= \<const0>\;
  m_axi_wuser(931) <= \<const0>\;
  m_axi_wuser(930) <= \<const0>\;
  m_axi_wuser(929) <= \<const0>\;
  m_axi_wuser(928) <= \<const0>\;
  m_axi_wuser(927) <= \<const0>\;
  m_axi_wuser(926) <= \<const0>\;
  m_axi_wuser(925) <= \<const0>\;
  m_axi_wuser(924) <= \<const0>\;
  m_axi_wuser(923) <= \<const0>\;
  m_axi_wuser(922) <= \<const0>\;
  m_axi_wuser(921) <= \<const0>\;
  m_axi_wuser(920) <= \<const0>\;
  m_axi_wuser(919) <= \<const0>\;
  m_axi_wuser(918) <= \<const0>\;
  m_axi_wuser(917) <= \<const0>\;
  m_axi_wuser(916) <= \<const0>\;
  m_axi_wuser(915) <= \<const0>\;
  m_axi_wuser(914) <= \<const0>\;
  m_axi_wuser(913) <= \<const0>\;
  m_axi_wuser(912) <= \<const0>\;
  m_axi_wuser(911) <= \<const0>\;
  m_axi_wuser(910) <= \<const0>\;
  m_axi_wuser(909) <= \<const0>\;
  m_axi_wuser(908) <= \<const0>\;
  m_axi_wuser(907) <= \<const0>\;
  m_axi_wuser(906) <= \<const0>\;
  m_axi_wuser(905) <= \<const0>\;
  m_axi_wuser(904) <= \<const0>\;
  m_axi_wuser(903) <= \<const0>\;
  m_axi_wuser(902) <= \<const0>\;
  m_axi_wuser(901) <= \<const0>\;
  m_axi_wuser(900) <= \<const0>\;
  m_axi_wuser(899) <= \<const0>\;
  m_axi_wuser(898) <= \<const0>\;
  m_axi_wuser(897) <= \<const0>\;
  m_axi_wuser(896) <= \<const0>\;
  m_axi_wuser(895) <= \<const0>\;
  m_axi_wuser(894) <= \<const0>\;
  m_axi_wuser(893) <= \<const0>\;
  m_axi_wuser(892) <= \<const0>\;
  m_axi_wuser(891) <= \<const0>\;
  m_axi_wuser(890) <= \<const0>\;
  m_axi_wuser(889) <= \<const0>\;
  m_axi_wuser(888) <= \<const0>\;
  m_axi_wuser(887) <= \<const0>\;
  m_axi_wuser(886) <= \<const0>\;
  m_axi_wuser(885) <= \<const0>\;
  m_axi_wuser(884) <= \<const0>\;
  m_axi_wuser(883) <= \<const0>\;
  m_axi_wuser(882) <= \<const0>\;
  m_axi_wuser(881) <= \<const0>\;
  m_axi_wuser(880) <= \<const0>\;
  m_axi_wuser(879) <= \<const0>\;
  m_axi_wuser(878) <= \<const0>\;
  m_axi_wuser(877) <= \<const0>\;
  m_axi_wuser(876) <= \<const0>\;
  m_axi_wuser(875) <= \<const0>\;
  m_axi_wuser(874) <= \<const0>\;
  m_axi_wuser(873) <= \<const0>\;
  m_axi_wuser(872) <= \<const0>\;
  m_axi_wuser(871) <= \<const0>\;
  m_axi_wuser(870) <= \<const0>\;
  m_axi_wuser(869) <= \<const0>\;
  m_axi_wuser(868) <= \<const0>\;
  m_axi_wuser(867) <= \<const0>\;
  m_axi_wuser(866) <= \<const0>\;
  m_axi_wuser(865) <= \<const0>\;
  m_axi_wuser(864) <= \<const0>\;
  m_axi_wuser(863) <= \<const0>\;
  m_axi_wuser(862) <= \<const0>\;
  m_axi_wuser(861) <= \<const0>\;
  m_axi_wuser(860) <= \<const0>\;
  m_axi_wuser(859) <= \<const0>\;
  m_axi_wuser(858) <= \<const0>\;
  m_axi_wuser(857) <= \<const0>\;
  m_axi_wuser(856) <= \<const0>\;
  m_axi_wuser(855) <= \<const0>\;
  m_axi_wuser(854) <= \<const0>\;
  m_axi_wuser(853) <= \<const0>\;
  m_axi_wuser(852) <= \<const0>\;
  m_axi_wuser(851) <= \<const0>\;
  m_axi_wuser(850) <= \<const0>\;
  m_axi_wuser(849) <= \<const0>\;
  m_axi_wuser(848) <= \<const0>\;
  m_axi_wuser(847) <= \<const0>\;
  m_axi_wuser(846) <= \<const0>\;
  m_axi_wuser(845) <= \<const0>\;
  m_axi_wuser(844) <= \<const0>\;
  m_axi_wuser(843) <= \<const0>\;
  m_axi_wuser(842) <= \<const0>\;
  m_axi_wuser(841) <= \<const0>\;
  m_axi_wuser(840) <= \<const0>\;
  m_axi_wuser(839) <= \<const0>\;
  m_axi_wuser(838) <= \<const0>\;
  m_axi_wuser(837) <= \<const0>\;
  m_axi_wuser(836) <= \<const0>\;
  m_axi_wuser(835) <= \<const0>\;
  m_axi_wuser(834) <= \<const0>\;
  m_axi_wuser(833) <= \<const0>\;
  m_axi_wuser(832) <= \<const0>\;
  m_axi_wuser(831) <= \<const0>\;
  m_axi_wuser(830) <= \<const0>\;
  m_axi_wuser(829) <= \<const0>\;
  m_axi_wuser(828) <= \<const0>\;
  m_axi_wuser(827) <= \<const0>\;
  m_axi_wuser(826) <= \<const0>\;
  m_axi_wuser(825) <= \<const0>\;
  m_axi_wuser(824) <= \<const0>\;
  m_axi_wuser(823) <= \<const0>\;
  m_axi_wuser(822) <= \<const0>\;
  m_axi_wuser(821) <= \<const0>\;
  m_axi_wuser(820) <= \<const0>\;
  m_axi_wuser(819) <= \<const0>\;
  m_axi_wuser(818) <= \<const0>\;
  m_axi_wuser(817) <= \<const0>\;
  m_axi_wuser(816) <= \<const0>\;
  m_axi_wuser(815) <= \<const0>\;
  m_axi_wuser(814) <= \<const0>\;
  m_axi_wuser(813) <= \<const0>\;
  m_axi_wuser(812) <= \<const0>\;
  m_axi_wuser(811) <= \<const0>\;
  m_axi_wuser(810) <= \<const0>\;
  m_axi_wuser(809) <= \<const0>\;
  m_axi_wuser(808) <= \<const0>\;
  m_axi_wuser(807) <= \<const0>\;
  m_axi_wuser(806) <= \<const0>\;
  m_axi_wuser(805) <= \<const0>\;
  m_axi_wuser(804) <= \<const0>\;
  m_axi_wuser(803) <= \<const0>\;
  m_axi_wuser(802) <= \<const0>\;
  m_axi_wuser(801) <= \<const0>\;
  m_axi_wuser(800) <= \<const0>\;
  m_axi_wuser(799) <= \<const0>\;
  m_axi_wuser(798) <= \<const0>\;
  m_axi_wuser(797) <= \<const0>\;
  m_axi_wuser(796) <= \<const0>\;
  m_axi_wuser(795) <= \<const0>\;
  m_axi_wuser(794) <= \<const0>\;
  m_axi_wuser(793) <= \<const0>\;
  m_axi_wuser(792) <= \<const0>\;
  m_axi_wuser(791) <= \<const0>\;
  m_axi_wuser(790) <= \<const0>\;
  m_axi_wuser(789) <= \<const0>\;
  m_axi_wuser(788) <= \<const0>\;
  m_axi_wuser(787) <= \<const0>\;
  m_axi_wuser(786) <= \<const0>\;
  m_axi_wuser(785) <= \<const0>\;
  m_axi_wuser(784) <= \<const0>\;
  m_axi_wuser(783) <= \<const0>\;
  m_axi_wuser(782) <= \<const0>\;
  m_axi_wuser(781) <= \<const0>\;
  m_axi_wuser(780) <= \<const0>\;
  m_axi_wuser(779) <= \<const0>\;
  m_axi_wuser(778) <= \<const0>\;
  m_axi_wuser(777) <= \<const0>\;
  m_axi_wuser(776) <= \<const0>\;
  m_axi_wuser(775) <= \<const0>\;
  m_axi_wuser(774) <= \<const0>\;
  m_axi_wuser(773) <= \<const0>\;
  m_axi_wuser(772) <= \<const0>\;
  m_axi_wuser(771) <= \<const0>\;
  m_axi_wuser(770) <= \<const0>\;
  m_axi_wuser(769) <= \<const0>\;
  m_axi_wuser(768) <= \<const0>\;
  m_axi_wuser(767) <= \<const0>\;
  m_axi_wuser(766) <= \<const0>\;
  m_axi_wuser(765) <= \<const0>\;
  m_axi_wuser(764) <= \<const0>\;
  m_axi_wuser(763) <= \<const0>\;
  m_axi_wuser(762) <= \<const0>\;
  m_axi_wuser(761) <= \<const0>\;
  m_axi_wuser(760) <= \<const0>\;
  m_axi_wuser(759) <= \<const0>\;
  m_axi_wuser(758) <= \<const0>\;
  m_axi_wuser(757) <= \<const0>\;
  m_axi_wuser(756) <= \<const0>\;
  m_axi_wuser(755) <= \<const0>\;
  m_axi_wuser(754) <= \<const0>\;
  m_axi_wuser(753) <= \<const0>\;
  m_axi_wuser(752) <= \<const0>\;
  m_axi_wuser(751) <= \<const0>\;
  m_axi_wuser(750) <= \<const0>\;
  m_axi_wuser(749) <= \<const0>\;
  m_axi_wuser(748) <= \<const0>\;
  m_axi_wuser(747) <= \<const0>\;
  m_axi_wuser(746) <= \<const0>\;
  m_axi_wuser(745) <= \<const0>\;
  m_axi_wuser(744) <= \<const0>\;
  m_axi_wuser(743) <= \<const0>\;
  m_axi_wuser(742) <= \<const0>\;
  m_axi_wuser(741) <= \<const0>\;
  m_axi_wuser(740) <= \<const0>\;
  m_axi_wuser(739) <= \<const0>\;
  m_axi_wuser(738) <= \<const0>\;
  m_axi_wuser(737) <= \<const0>\;
  m_axi_wuser(736) <= \<const0>\;
  m_axi_wuser(735) <= \<const0>\;
  m_axi_wuser(734) <= \<const0>\;
  m_axi_wuser(733) <= \<const0>\;
  m_axi_wuser(732) <= \<const0>\;
  m_axi_wuser(731) <= \<const0>\;
  m_axi_wuser(730) <= \<const0>\;
  m_axi_wuser(729) <= \<const0>\;
  m_axi_wuser(728) <= \<const0>\;
  m_axi_wuser(727) <= \<const0>\;
  m_axi_wuser(726) <= \<const0>\;
  m_axi_wuser(725) <= \<const0>\;
  m_axi_wuser(724) <= \<const0>\;
  m_axi_wuser(723) <= \<const0>\;
  m_axi_wuser(722) <= \<const0>\;
  m_axi_wuser(721) <= \<const0>\;
  m_axi_wuser(720) <= \<const0>\;
  m_axi_wuser(719) <= \<const0>\;
  m_axi_wuser(718) <= \<const0>\;
  m_axi_wuser(717) <= \<const0>\;
  m_axi_wuser(716) <= \<const0>\;
  m_axi_wuser(715) <= \<const0>\;
  m_axi_wuser(714) <= \<const0>\;
  m_axi_wuser(713) <= \<const0>\;
  m_axi_wuser(712) <= \<const0>\;
  m_axi_wuser(711) <= \<const0>\;
  m_axi_wuser(710) <= \<const0>\;
  m_axi_wuser(709) <= \<const0>\;
  m_axi_wuser(708) <= \<const0>\;
  m_axi_wuser(707) <= \<const0>\;
  m_axi_wuser(706) <= \<const0>\;
  m_axi_wuser(705) <= \<const0>\;
  m_axi_wuser(704) <= \<const0>\;
  m_axi_wuser(703) <= \<const0>\;
  m_axi_wuser(702) <= \<const0>\;
  m_axi_wuser(701) <= \<const0>\;
  m_axi_wuser(700) <= \<const0>\;
  m_axi_wuser(699) <= \<const0>\;
  m_axi_wuser(698) <= \<const0>\;
  m_axi_wuser(697) <= \<const0>\;
  m_axi_wuser(696) <= \<const0>\;
  m_axi_wuser(695) <= \<const0>\;
  m_axi_wuser(694) <= \<const0>\;
  m_axi_wuser(693) <= \<const0>\;
  m_axi_wuser(692) <= \<const0>\;
  m_axi_wuser(691) <= \<const0>\;
  m_axi_wuser(690) <= \<const0>\;
  m_axi_wuser(689) <= \<const0>\;
  m_axi_wuser(688) <= \<const0>\;
  m_axi_wuser(687) <= \<const0>\;
  m_axi_wuser(686) <= \<const0>\;
  m_axi_wuser(685) <= \<const0>\;
  m_axi_wuser(684) <= \<const0>\;
  m_axi_wuser(683) <= \<const0>\;
  m_axi_wuser(682) <= \<const0>\;
  m_axi_wuser(681) <= \<const0>\;
  m_axi_wuser(680) <= \<const0>\;
  m_axi_wuser(679) <= \<const0>\;
  m_axi_wuser(678) <= \<const0>\;
  m_axi_wuser(677) <= \<const0>\;
  m_axi_wuser(676) <= \<const0>\;
  m_axi_wuser(675) <= \<const0>\;
  m_axi_wuser(674) <= \<const0>\;
  m_axi_wuser(673) <= \<const0>\;
  m_axi_wuser(672) <= \<const0>\;
  m_axi_wuser(671) <= \<const0>\;
  m_axi_wuser(670) <= \<const0>\;
  m_axi_wuser(669) <= \<const0>\;
  m_axi_wuser(668) <= \<const0>\;
  m_axi_wuser(667) <= \<const0>\;
  m_axi_wuser(666) <= \<const0>\;
  m_axi_wuser(665) <= \<const0>\;
  m_axi_wuser(664) <= \<const0>\;
  m_axi_wuser(663) <= \<const0>\;
  m_axi_wuser(662) <= \<const0>\;
  m_axi_wuser(661) <= \<const0>\;
  m_axi_wuser(660) <= \<const0>\;
  m_axi_wuser(659) <= \<const0>\;
  m_axi_wuser(658) <= \<const0>\;
  m_axi_wuser(657) <= \<const0>\;
  m_axi_wuser(656) <= \<const0>\;
  m_axi_wuser(655) <= \<const0>\;
  m_axi_wuser(654) <= \<const0>\;
  m_axi_wuser(653) <= \<const0>\;
  m_axi_wuser(652) <= \<const0>\;
  m_axi_wuser(651) <= \<const0>\;
  m_axi_wuser(650) <= \<const0>\;
  m_axi_wuser(649) <= \<const0>\;
  m_axi_wuser(648) <= \<const0>\;
  m_axi_wuser(647) <= \<const0>\;
  m_axi_wuser(646) <= \<const0>\;
  m_axi_wuser(645) <= \<const0>\;
  m_axi_wuser(644) <= \<const0>\;
  m_axi_wuser(643) <= \<const0>\;
  m_axi_wuser(642) <= \<const0>\;
  m_axi_wuser(641) <= \<const0>\;
  m_axi_wuser(640) <= \<const0>\;
  m_axi_wuser(639) <= \<const0>\;
  m_axi_wuser(638) <= \<const0>\;
  m_axi_wuser(637) <= \<const0>\;
  m_axi_wuser(636) <= \<const0>\;
  m_axi_wuser(635) <= \<const0>\;
  m_axi_wuser(634) <= \<const0>\;
  m_axi_wuser(633) <= \<const0>\;
  m_axi_wuser(632) <= \<const0>\;
  m_axi_wuser(631) <= \<const0>\;
  m_axi_wuser(630) <= \<const0>\;
  m_axi_wuser(629) <= \<const0>\;
  m_axi_wuser(628) <= \<const0>\;
  m_axi_wuser(627) <= \<const0>\;
  m_axi_wuser(626) <= \<const0>\;
  m_axi_wuser(625) <= \<const0>\;
  m_axi_wuser(624) <= \<const0>\;
  m_axi_wuser(623) <= \<const0>\;
  m_axi_wuser(622) <= \<const0>\;
  m_axi_wuser(621) <= \<const0>\;
  m_axi_wuser(620) <= \<const0>\;
  m_axi_wuser(619) <= \<const0>\;
  m_axi_wuser(618) <= \<const0>\;
  m_axi_wuser(617) <= \<const0>\;
  m_axi_wuser(616) <= \<const0>\;
  m_axi_wuser(615) <= \<const0>\;
  m_axi_wuser(614) <= \<const0>\;
  m_axi_wuser(613) <= \<const0>\;
  m_axi_wuser(612) <= \<const0>\;
  m_axi_wuser(611) <= \<const0>\;
  m_axi_wuser(610) <= \<const0>\;
  m_axi_wuser(609) <= \<const0>\;
  m_axi_wuser(608) <= \<const0>\;
  m_axi_wuser(607) <= \<const0>\;
  m_axi_wuser(606) <= \<const0>\;
  m_axi_wuser(605) <= \<const0>\;
  m_axi_wuser(604) <= \<const0>\;
  m_axi_wuser(603) <= \<const0>\;
  m_axi_wuser(602) <= \<const0>\;
  m_axi_wuser(601) <= \<const0>\;
  m_axi_wuser(600) <= \<const0>\;
  m_axi_wuser(599) <= \<const0>\;
  m_axi_wuser(598) <= \<const0>\;
  m_axi_wuser(597) <= \<const0>\;
  m_axi_wuser(596) <= \<const0>\;
  m_axi_wuser(595) <= \<const0>\;
  m_axi_wuser(594) <= \<const0>\;
  m_axi_wuser(593) <= \<const0>\;
  m_axi_wuser(592) <= \<const0>\;
  m_axi_wuser(591) <= \<const0>\;
  m_axi_wuser(590) <= \<const0>\;
  m_axi_wuser(589) <= \<const0>\;
  m_axi_wuser(588) <= \<const0>\;
  m_axi_wuser(587) <= \<const0>\;
  m_axi_wuser(586) <= \<const0>\;
  m_axi_wuser(585) <= \<const0>\;
  m_axi_wuser(584) <= \<const0>\;
  m_axi_wuser(583) <= \<const0>\;
  m_axi_wuser(582) <= \<const0>\;
  m_axi_wuser(581) <= \<const0>\;
  m_axi_wuser(580) <= \<const0>\;
  m_axi_wuser(579) <= \<const0>\;
  m_axi_wuser(578) <= \<const0>\;
  m_axi_wuser(577) <= \<const0>\;
  m_axi_wuser(576) <= \<const0>\;
  m_axi_wuser(575) <= \<const0>\;
  m_axi_wuser(574) <= \<const0>\;
  m_axi_wuser(573) <= \<const0>\;
  m_axi_wuser(572) <= \<const0>\;
  m_axi_wuser(571) <= \<const0>\;
  m_axi_wuser(570) <= \<const0>\;
  m_axi_wuser(569) <= \<const0>\;
  m_axi_wuser(568) <= \<const0>\;
  m_axi_wuser(567) <= \<const0>\;
  m_axi_wuser(566) <= \<const0>\;
  m_axi_wuser(565) <= \<const0>\;
  m_axi_wuser(564) <= \<const0>\;
  m_axi_wuser(563) <= \<const0>\;
  m_axi_wuser(562) <= \<const0>\;
  m_axi_wuser(561) <= \<const0>\;
  m_axi_wuser(560) <= \<const0>\;
  m_axi_wuser(559) <= \<const0>\;
  m_axi_wuser(558) <= \<const0>\;
  m_axi_wuser(557) <= \<const0>\;
  m_axi_wuser(556) <= \<const0>\;
  m_axi_wuser(555) <= \<const0>\;
  m_axi_wuser(554) <= \<const0>\;
  m_axi_wuser(553) <= \<const0>\;
  m_axi_wuser(552) <= \<const0>\;
  m_axi_wuser(551) <= \<const0>\;
  m_axi_wuser(550) <= \<const0>\;
  m_axi_wuser(549) <= \<const0>\;
  m_axi_wuser(548) <= \<const0>\;
  m_axi_wuser(547) <= \<const0>\;
  m_axi_wuser(546) <= \<const0>\;
  m_axi_wuser(545) <= \<const0>\;
  m_axi_wuser(544) <= \<const0>\;
  m_axi_wuser(543) <= \<const0>\;
  m_axi_wuser(542) <= \<const0>\;
  m_axi_wuser(541) <= \<const0>\;
  m_axi_wuser(540) <= \<const0>\;
  m_axi_wuser(539) <= \<const0>\;
  m_axi_wuser(538) <= \<const0>\;
  m_axi_wuser(537) <= \<const0>\;
  m_axi_wuser(536) <= \<const0>\;
  m_axi_wuser(535) <= \<const0>\;
  m_axi_wuser(534) <= \<const0>\;
  m_axi_wuser(533) <= \<const0>\;
  m_axi_wuser(532) <= \<const0>\;
  m_axi_wuser(531) <= \<const0>\;
  m_axi_wuser(530) <= \<const0>\;
  m_axi_wuser(529) <= \<const0>\;
  m_axi_wuser(528) <= \<const0>\;
  m_axi_wuser(527) <= \<const0>\;
  m_axi_wuser(526) <= \<const0>\;
  m_axi_wuser(525) <= \<const0>\;
  m_axi_wuser(524) <= \<const0>\;
  m_axi_wuser(523) <= \<const0>\;
  m_axi_wuser(522) <= \<const0>\;
  m_axi_wuser(521) <= \<const0>\;
  m_axi_wuser(520) <= \<const0>\;
  m_axi_wuser(519) <= \<const0>\;
  m_axi_wuser(518) <= \<const0>\;
  m_axi_wuser(517) <= \<const0>\;
  m_axi_wuser(516) <= \<const0>\;
  m_axi_wuser(515) <= \<const0>\;
  m_axi_wuser(514) <= \<const0>\;
  m_axi_wuser(513) <= \<const0>\;
  m_axi_wuser(512) <= \<const0>\;
  m_axi_wuser(511) <= \<const0>\;
  m_axi_wuser(510) <= \<const0>\;
  m_axi_wuser(509) <= \<const0>\;
  m_axi_wuser(508) <= \<const0>\;
  m_axi_wuser(507) <= \<const0>\;
  m_axi_wuser(506) <= \<const0>\;
  m_axi_wuser(505) <= \<const0>\;
  m_axi_wuser(504) <= \<const0>\;
  m_axi_wuser(503) <= \<const0>\;
  m_axi_wuser(502) <= \<const0>\;
  m_axi_wuser(501) <= \<const0>\;
  m_axi_wuser(500) <= \<const0>\;
  m_axi_wuser(499) <= \<const0>\;
  m_axi_wuser(498) <= \<const0>\;
  m_axi_wuser(497) <= \<const0>\;
  m_axi_wuser(496) <= \<const0>\;
  m_axi_wuser(495) <= \<const0>\;
  m_axi_wuser(494) <= \<const0>\;
  m_axi_wuser(493) <= \<const0>\;
  m_axi_wuser(492) <= \<const0>\;
  m_axi_wuser(491) <= \<const0>\;
  m_axi_wuser(490) <= \<const0>\;
  m_axi_wuser(489) <= \<const0>\;
  m_axi_wuser(488) <= \<const0>\;
  m_axi_wuser(487) <= \<const0>\;
  m_axi_wuser(486) <= \<const0>\;
  m_axi_wuser(485) <= \<const0>\;
  m_axi_wuser(484) <= \<const0>\;
  m_axi_wuser(483) <= \<const0>\;
  m_axi_wuser(482) <= \<const0>\;
  m_axi_wuser(481) <= \<const0>\;
  m_axi_wuser(480) <= \<const0>\;
  m_axi_wuser(479) <= \<const0>\;
  m_axi_wuser(478) <= \<const0>\;
  m_axi_wuser(477) <= \<const0>\;
  m_axi_wuser(476) <= \<const0>\;
  m_axi_wuser(475) <= \<const0>\;
  m_axi_wuser(474) <= \<const0>\;
  m_axi_wuser(473) <= \<const0>\;
  m_axi_wuser(472) <= \<const0>\;
  m_axi_wuser(471) <= \<const0>\;
  m_axi_wuser(470) <= \<const0>\;
  m_axi_wuser(469) <= \<const0>\;
  m_axi_wuser(468) <= \<const0>\;
  m_axi_wuser(467) <= \<const0>\;
  m_axi_wuser(466) <= \<const0>\;
  m_axi_wuser(465) <= \<const0>\;
  m_axi_wuser(464) <= \<const0>\;
  m_axi_wuser(463) <= \<const0>\;
  m_axi_wuser(462) <= \<const0>\;
  m_axi_wuser(461) <= \<const0>\;
  m_axi_wuser(460) <= \<const0>\;
  m_axi_wuser(459) <= \<const0>\;
  m_axi_wuser(458) <= \<const0>\;
  m_axi_wuser(457) <= \<const0>\;
  m_axi_wuser(456) <= \<const0>\;
  m_axi_wuser(455) <= \<const0>\;
  m_axi_wuser(454) <= \<const0>\;
  m_axi_wuser(453) <= \<const0>\;
  m_axi_wuser(452) <= \<const0>\;
  m_axi_wuser(451) <= \<const0>\;
  m_axi_wuser(450) <= \<const0>\;
  m_axi_wuser(449) <= \<const0>\;
  m_axi_wuser(448) <= \<const0>\;
  m_axi_wuser(447) <= \<const0>\;
  m_axi_wuser(446) <= \<const0>\;
  m_axi_wuser(445) <= \<const0>\;
  m_axi_wuser(444) <= \<const0>\;
  m_axi_wuser(443) <= \<const0>\;
  m_axi_wuser(442) <= \<const0>\;
  m_axi_wuser(441) <= \<const0>\;
  m_axi_wuser(440) <= \<const0>\;
  m_axi_wuser(439) <= \<const0>\;
  m_axi_wuser(438) <= \<const0>\;
  m_axi_wuser(437) <= \<const0>\;
  m_axi_wuser(436) <= \<const0>\;
  m_axi_wuser(435) <= \<const0>\;
  m_axi_wuser(434) <= \<const0>\;
  m_axi_wuser(433) <= \<const0>\;
  m_axi_wuser(432) <= \<const0>\;
  m_axi_wuser(431) <= \<const0>\;
  m_axi_wuser(430) <= \<const0>\;
  m_axi_wuser(429) <= \<const0>\;
  m_axi_wuser(428) <= \<const0>\;
  m_axi_wuser(427) <= \<const0>\;
  m_axi_wuser(426) <= \<const0>\;
  m_axi_wuser(425) <= \<const0>\;
  m_axi_wuser(424) <= \<const0>\;
  m_axi_wuser(423) <= \<const0>\;
  m_axi_wuser(422) <= \<const0>\;
  m_axi_wuser(421) <= \<const0>\;
  m_axi_wuser(420) <= \<const0>\;
  m_axi_wuser(419) <= \<const0>\;
  m_axi_wuser(418) <= \<const0>\;
  m_axi_wuser(417) <= \<const0>\;
  m_axi_wuser(416) <= \<const0>\;
  m_axi_wuser(415) <= \<const0>\;
  m_axi_wuser(414) <= \<const0>\;
  m_axi_wuser(413) <= \<const0>\;
  m_axi_wuser(412) <= \<const0>\;
  m_axi_wuser(411) <= \<const0>\;
  m_axi_wuser(410) <= \<const0>\;
  m_axi_wuser(409) <= \<const0>\;
  m_axi_wuser(408) <= \<const0>\;
  m_axi_wuser(407) <= \<const0>\;
  m_axi_wuser(406) <= \<const0>\;
  m_axi_wuser(405) <= \<const0>\;
  m_axi_wuser(404) <= \<const0>\;
  m_axi_wuser(403) <= \<const0>\;
  m_axi_wuser(402) <= \<const0>\;
  m_axi_wuser(401) <= \<const0>\;
  m_axi_wuser(400) <= \<const0>\;
  m_axi_wuser(399) <= \<const0>\;
  m_axi_wuser(398) <= \<const0>\;
  m_axi_wuser(397) <= \<const0>\;
  m_axi_wuser(396) <= \<const0>\;
  m_axi_wuser(395) <= \<const0>\;
  m_axi_wuser(394) <= \<const0>\;
  m_axi_wuser(393) <= \<const0>\;
  m_axi_wuser(392) <= \<const0>\;
  m_axi_wuser(391) <= \<const0>\;
  m_axi_wuser(390) <= \<const0>\;
  m_axi_wuser(389) <= \<const0>\;
  m_axi_wuser(388) <= \<const0>\;
  m_axi_wuser(387) <= \<const0>\;
  m_axi_wuser(386) <= \<const0>\;
  m_axi_wuser(385) <= \<const0>\;
  m_axi_wuser(384) <= \<const0>\;
  m_axi_wuser(383) <= \<const0>\;
  m_axi_wuser(382) <= \<const0>\;
  m_axi_wuser(381) <= \<const0>\;
  m_axi_wuser(380) <= \<const0>\;
  m_axi_wuser(379) <= \<const0>\;
  m_axi_wuser(378) <= \<const0>\;
  m_axi_wuser(377) <= \<const0>\;
  m_axi_wuser(376) <= \<const0>\;
  m_axi_wuser(375) <= \<const0>\;
  m_axi_wuser(374) <= \<const0>\;
  m_axi_wuser(373) <= \<const0>\;
  m_axi_wuser(372) <= \<const0>\;
  m_axi_wuser(371) <= \<const0>\;
  m_axi_wuser(370) <= \<const0>\;
  m_axi_wuser(369) <= \<const0>\;
  m_axi_wuser(368) <= \<const0>\;
  m_axi_wuser(367) <= \<const0>\;
  m_axi_wuser(366) <= \<const0>\;
  m_axi_wuser(365) <= \<const0>\;
  m_axi_wuser(364) <= \<const0>\;
  m_axi_wuser(363) <= \<const0>\;
  m_axi_wuser(362) <= \<const0>\;
  m_axi_wuser(361) <= \<const0>\;
  m_axi_wuser(360) <= \<const0>\;
  m_axi_wuser(359) <= \<const0>\;
  m_axi_wuser(358) <= \<const0>\;
  m_axi_wuser(357) <= \<const0>\;
  m_axi_wuser(356) <= \<const0>\;
  m_axi_wuser(355) <= \<const0>\;
  m_axi_wuser(354) <= \<const0>\;
  m_axi_wuser(353) <= \<const0>\;
  m_axi_wuser(352) <= \<const0>\;
  m_axi_wuser(351) <= \<const0>\;
  m_axi_wuser(350) <= \<const0>\;
  m_axi_wuser(349) <= \<const0>\;
  m_axi_wuser(348) <= \<const0>\;
  m_axi_wuser(347) <= \<const0>\;
  m_axi_wuser(346) <= \<const0>\;
  m_axi_wuser(345) <= \<const0>\;
  m_axi_wuser(344) <= \<const0>\;
  m_axi_wuser(343) <= \<const0>\;
  m_axi_wuser(342) <= \<const0>\;
  m_axi_wuser(341) <= \<const0>\;
  m_axi_wuser(340) <= \<const0>\;
  m_axi_wuser(339) <= \<const0>\;
  m_axi_wuser(338) <= \<const0>\;
  m_axi_wuser(337) <= \<const0>\;
  m_axi_wuser(336) <= \<const0>\;
  m_axi_wuser(335) <= \<const0>\;
  m_axi_wuser(334) <= \<const0>\;
  m_axi_wuser(333) <= \<const0>\;
  m_axi_wuser(332) <= \<const0>\;
  m_axi_wuser(331) <= \<const0>\;
  m_axi_wuser(330) <= \<const0>\;
  m_axi_wuser(329) <= \<const0>\;
  m_axi_wuser(328) <= \<const0>\;
  m_axi_wuser(327) <= \<const0>\;
  m_axi_wuser(326) <= \<const0>\;
  m_axi_wuser(325) <= \<const0>\;
  m_axi_wuser(324) <= \<const0>\;
  m_axi_wuser(323) <= \<const0>\;
  m_axi_wuser(322) <= \<const0>\;
  m_axi_wuser(321) <= \<const0>\;
  m_axi_wuser(320) <= \<const0>\;
  m_axi_wuser(319) <= \<const0>\;
  m_axi_wuser(318) <= \<const0>\;
  m_axi_wuser(317) <= \<const0>\;
  m_axi_wuser(316) <= \<const0>\;
  m_axi_wuser(315) <= \<const0>\;
  m_axi_wuser(314) <= \<const0>\;
  m_axi_wuser(313) <= \<const0>\;
  m_axi_wuser(312) <= \<const0>\;
  m_axi_wuser(311) <= \<const0>\;
  m_axi_wuser(310) <= \<const0>\;
  m_axi_wuser(309) <= \<const0>\;
  m_axi_wuser(308) <= \<const0>\;
  m_axi_wuser(307) <= \<const0>\;
  m_axi_wuser(306) <= \<const0>\;
  m_axi_wuser(305) <= \<const0>\;
  m_axi_wuser(304) <= \<const0>\;
  m_axi_wuser(303) <= \<const0>\;
  m_axi_wuser(302) <= \<const0>\;
  m_axi_wuser(301) <= \<const0>\;
  m_axi_wuser(300) <= \<const0>\;
  m_axi_wuser(299) <= \<const0>\;
  m_axi_wuser(298) <= \<const0>\;
  m_axi_wuser(297) <= \<const0>\;
  m_axi_wuser(296) <= \<const0>\;
  m_axi_wuser(295) <= \<const0>\;
  m_axi_wuser(294) <= \<const0>\;
  m_axi_wuser(293) <= \<const0>\;
  m_axi_wuser(292) <= \<const0>\;
  m_axi_wuser(291) <= \<const0>\;
  m_axi_wuser(290) <= \<const0>\;
  m_axi_wuser(289) <= \<const0>\;
  m_axi_wuser(288) <= \<const0>\;
  m_axi_wuser(287) <= \<const0>\;
  m_axi_wuser(286) <= \<const0>\;
  m_axi_wuser(285) <= \<const0>\;
  m_axi_wuser(284) <= \<const0>\;
  m_axi_wuser(283) <= \<const0>\;
  m_axi_wuser(282) <= \<const0>\;
  m_axi_wuser(281) <= \<const0>\;
  m_axi_wuser(280) <= \<const0>\;
  m_axi_wuser(279) <= \<const0>\;
  m_axi_wuser(278) <= \<const0>\;
  m_axi_wuser(277) <= \<const0>\;
  m_axi_wuser(276) <= \<const0>\;
  m_axi_wuser(275) <= \<const0>\;
  m_axi_wuser(274) <= \<const0>\;
  m_axi_wuser(273) <= \<const0>\;
  m_axi_wuser(272) <= \<const0>\;
  m_axi_wuser(271) <= \<const0>\;
  m_axi_wuser(270) <= \<const0>\;
  m_axi_wuser(269) <= \<const0>\;
  m_axi_wuser(268) <= \<const0>\;
  m_axi_wuser(267) <= \<const0>\;
  m_axi_wuser(266) <= \<const0>\;
  m_axi_wuser(265) <= \<const0>\;
  m_axi_wuser(264) <= \<const0>\;
  m_axi_wuser(263) <= \<const0>\;
  m_axi_wuser(262) <= \<const0>\;
  m_axi_wuser(261) <= \<const0>\;
  m_axi_wuser(260) <= \<const0>\;
  m_axi_wuser(259) <= \<const0>\;
  m_axi_wuser(258) <= \<const0>\;
  m_axi_wuser(257) <= \<const0>\;
  m_axi_wuser(256) <= \<const0>\;
  m_axi_wuser(255) <= \<const0>\;
  m_axi_wuser(254) <= \<const0>\;
  m_axi_wuser(253) <= \<const0>\;
  m_axi_wuser(252) <= \<const0>\;
  m_axi_wuser(251) <= \<const0>\;
  m_axi_wuser(250) <= \<const0>\;
  m_axi_wuser(249) <= \<const0>\;
  m_axi_wuser(248) <= \<const0>\;
  m_axi_wuser(247) <= \<const0>\;
  m_axi_wuser(246) <= \<const0>\;
  m_axi_wuser(245) <= \<const0>\;
  m_axi_wuser(244) <= \<const0>\;
  m_axi_wuser(243) <= \<const0>\;
  m_axi_wuser(242) <= \<const0>\;
  m_axi_wuser(241) <= \<const0>\;
  m_axi_wuser(240) <= \<const0>\;
  m_axi_wuser(239) <= \<const0>\;
  m_axi_wuser(238) <= \<const0>\;
  m_axi_wuser(237) <= \<const0>\;
  m_axi_wuser(236) <= \<const0>\;
  m_axi_wuser(235) <= \<const0>\;
  m_axi_wuser(234) <= \<const0>\;
  m_axi_wuser(233) <= \<const0>\;
  m_axi_wuser(232) <= \<const0>\;
  m_axi_wuser(231) <= \<const0>\;
  m_axi_wuser(230) <= \<const0>\;
  m_axi_wuser(229) <= \<const0>\;
  m_axi_wuser(228) <= \<const0>\;
  m_axi_wuser(227) <= \<const0>\;
  m_axi_wuser(226) <= \<const0>\;
  m_axi_wuser(225) <= \<const0>\;
  m_axi_wuser(224) <= \<const0>\;
  m_axi_wuser(223) <= \<const0>\;
  m_axi_wuser(222) <= \<const0>\;
  m_axi_wuser(221) <= \<const0>\;
  m_axi_wuser(220) <= \<const0>\;
  m_axi_wuser(219) <= \<const0>\;
  m_axi_wuser(218) <= \<const0>\;
  m_axi_wuser(217) <= \<const0>\;
  m_axi_wuser(216) <= \<const0>\;
  m_axi_wuser(215) <= \<const0>\;
  m_axi_wuser(214) <= \<const0>\;
  m_axi_wuser(213) <= \<const0>\;
  m_axi_wuser(212) <= \<const0>\;
  m_axi_wuser(211) <= \<const0>\;
  m_axi_wuser(210) <= \<const0>\;
  m_axi_wuser(209) <= \<const0>\;
  m_axi_wuser(208) <= \<const0>\;
  m_axi_wuser(207) <= \<const0>\;
  m_axi_wuser(206) <= \<const0>\;
  m_axi_wuser(205) <= \<const0>\;
  m_axi_wuser(204) <= \<const0>\;
  m_axi_wuser(203) <= \<const0>\;
  m_axi_wuser(202) <= \<const0>\;
  m_axi_wuser(201) <= \<const0>\;
  m_axi_wuser(200) <= \<const0>\;
  m_axi_wuser(199) <= \<const0>\;
  m_axi_wuser(198) <= \<const0>\;
  m_axi_wuser(197) <= \<const0>\;
  m_axi_wuser(196) <= \<const0>\;
  m_axi_wuser(195) <= \<const0>\;
  m_axi_wuser(194) <= \<const0>\;
  m_axi_wuser(193) <= \<const0>\;
  m_axi_wuser(192) <= \<const0>\;
  m_axi_wuser(191) <= \<const0>\;
  m_axi_wuser(190) <= \<const0>\;
  m_axi_wuser(189) <= \<const0>\;
  m_axi_wuser(188) <= \<const0>\;
  m_axi_wuser(187) <= \<const0>\;
  m_axi_wuser(186) <= \<const0>\;
  m_axi_wuser(185) <= \<const0>\;
  m_axi_wuser(184) <= \<const0>\;
  m_axi_wuser(183) <= \<const0>\;
  m_axi_wuser(182) <= \<const0>\;
  m_axi_wuser(181) <= \<const0>\;
  m_axi_wuser(180) <= \<const0>\;
  m_axi_wuser(179) <= \<const0>\;
  m_axi_wuser(178) <= \<const0>\;
  m_axi_wuser(177) <= \<const0>\;
  m_axi_wuser(176) <= \<const0>\;
  m_axi_wuser(175) <= \<const0>\;
  m_axi_wuser(174) <= \<const0>\;
  m_axi_wuser(173) <= \<const0>\;
  m_axi_wuser(172) <= \<const0>\;
  m_axi_wuser(171) <= \<const0>\;
  m_axi_wuser(170) <= \<const0>\;
  m_axi_wuser(169) <= \<const0>\;
  m_axi_wuser(168) <= \<const0>\;
  m_axi_wuser(167) <= \<const0>\;
  m_axi_wuser(166) <= \<const0>\;
  m_axi_wuser(165) <= \<const0>\;
  m_axi_wuser(164) <= \<const0>\;
  m_axi_wuser(163) <= \<const0>\;
  m_axi_wuser(162) <= \<const0>\;
  m_axi_wuser(161) <= \<const0>\;
  m_axi_wuser(160) <= \<const0>\;
  m_axi_wuser(159) <= \<const0>\;
  m_axi_wuser(158) <= \<const0>\;
  m_axi_wuser(157) <= \<const0>\;
  m_axi_wuser(156) <= \<const0>\;
  m_axi_wuser(155) <= \<const0>\;
  m_axi_wuser(154) <= \<const0>\;
  m_axi_wuser(153) <= \<const0>\;
  m_axi_wuser(152) <= \<const0>\;
  m_axi_wuser(151) <= \<const0>\;
  m_axi_wuser(150) <= \<const0>\;
  m_axi_wuser(149) <= \<const0>\;
  m_axi_wuser(148) <= \<const0>\;
  m_axi_wuser(147) <= \<const0>\;
  m_axi_wuser(146) <= \<const0>\;
  m_axi_wuser(145) <= \<const0>\;
  m_axi_wuser(144) <= \<const0>\;
  m_axi_wuser(143) <= \<const0>\;
  m_axi_wuser(142) <= \<const0>\;
  m_axi_wuser(141) <= \<const0>\;
  m_axi_wuser(140) <= \<const0>\;
  m_axi_wuser(139) <= \<const0>\;
  m_axi_wuser(138) <= \<const0>\;
  m_axi_wuser(137) <= \<const0>\;
  m_axi_wuser(136) <= \<const0>\;
  m_axi_wuser(135) <= \<const0>\;
  m_axi_wuser(134) <= \<const0>\;
  m_axi_wuser(133) <= \<const0>\;
  m_axi_wuser(132) <= \<const0>\;
  m_axi_wuser(131) <= \<const0>\;
  m_axi_wuser(130) <= \<const0>\;
  m_axi_wuser(129) <= \<const0>\;
  m_axi_wuser(128) <= \<const0>\;
  m_axi_wuser(127) <= \<const0>\;
  m_axi_wuser(126) <= \<const0>\;
  m_axi_wuser(125) <= \<const0>\;
  m_axi_wuser(124) <= \<const0>\;
  m_axi_wuser(123) <= \<const0>\;
  m_axi_wuser(122) <= \<const0>\;
  m_axi_wuser(121) <= \<const0>\;
  m_axi_wuser(120) <= \<const0>\;
  m_axi_wuser(119) <= \<const0>\;
  m_axi_wuser(118) <= \<const0>\;
  m_axi_wuser(117) <= \<const0>\;
  m_axi_wuser(116) <= \<const0>\;
  m_axi_wuser(115) <= \<const0>\;
  m_axi_wuser(114) <= \<const0>\;
  m_axi_wuser(113) <= \<const0>\;
  m_axi_wuser(112) <= \<const0>\;
  m_axi_wuser(111) <= \<const0>\;
  m_axi_wuser(110) <= \<const0>\;
  m_axi_wuser(109) <= \<const0>\;
  m_axi_wuser(108) <= \<const0>\;
  m_axi_wuser(107) <= \<const0>\;
  m_axi_wuser(106) <= \<const0>\;
  m_axi_wuser(105) <= \<const0>\;
  m_axi_wuser(104) <= \<const0>\;
  m_axi_wuser(103) <= \<const0>\;
  m_axi_wuser(102) <= \<const0>\;
  m_axi_wuser(101) <= \<const0>\;
  m_axi_wuser(100) <= \<const0>\;
  m_axi_wuser(99) <= \<const0>\;
  m_axi_wuser(98) <= \<const0>\;
  m_axi_wuser(97) <= \<const0>\;
  m_axi_wuser(96) <= \<const0>\;
  m_axi_wuser(95) <= \<const0>\;
  m_axi_wuser(94) <= \<const0>\;
  m_axi_wuser(93) <= \<const0>\;
  m_axi_wuser(92) <= \<const0>\;
  m_axi_wuser(91) <= \<const0>\;
  m_axi_wuser(90) <= \<const0>\;
  m_axi_wuser(89) <= \<const0>\;
  m_axi_wuser(88) <= \<const0>\;
  m_axi_wuser(87) <= \<const0>\;
  m_axi_wuser(86) <= \<const0>\;
  m_axi_wuser(85) <= \<const0>\;
  m_axi_wuser(84) <= \<const0>\;
  m_axi_wuser(83) <= \<const0>\;
  m_axi_wuser(82) <= \<const0>\;
  m_axi_wuser(81) <= \<const0>\;
  m_axi_wuser(80) <= \<const0>\;
  m_axi_wuser(79) <= \<const0>\;
  m_axi_wuser(78) <= \<const0>\;
  m_axi_wuser(77) <= \<const0>\;
  m_axi_wuser(76) <= \<const0>\;
  m_axi_wuser(75) <= \<const0>\;
  m_axi_wuser(74) <= \<const0>\;
  m_axi_wuser(73) <= \<const0>\;
  m_axi_wuser(72) <= \<const0>\;
  m_axi_wuser(71) <= \<const0>\;
  m_axi_wuser(70) <= \<const0>\;
  m_axi_wuser(69) <= \<const0>\;
  m_axi_wuser(68) <= \<const0>\;
  m_axi_wuser(67) <= \<const0>\;
  m_axi_wuser(66) <= \<const0>\;
  m_axi_wuser(65) <= \<const0>\;
  m_axi_wuser(64) <= \<const0>\;
  m_axi_wuser(63) <= \<const0>\;
  m_axi_wuser(62) <= \<const0>\;
  m_axi_wuser(61) <= \<const0>\;
  m_axi_wuser(60) <= \<const0>\;
  m_axi_wuser(59) <= \<const0>\;
  m_axi_wuser(58) <= \<const0>\;
  m_axi_wuser(57) <= \<const0>\;
  m_axi_wuser(56) <= \<const0>\;
  m_axi_wuser(55) <= \<const0>\;
  m_axi_wuser(54) <= \<const0>\;
  m_axi_wuser(53) <= \<const0>\;
  m_axi_wuser(52) <= \<const0>\;
  m_axi_wuser(51) <= \<const0>\;
  m_axi_wuser(50) <= \<const0>\;
  m_axi_wuser(49) <= \<const0>\;
  m_axi_wuser(48) <= \<const0>\;
  m_axi_wuser(47) <= \<const0>\;
  m_axi_wuser(46) <= \<const0>\;
  m_axi_wuser(45) <= \<const0>\;
  m_axi_wuser(44) <= \<const0>\;
  m_axi_wuser(43) <= \<const0>\;
  m_axi_wuser(42) <= \<const0>\;
  m_axi_wuser(41) <= \<const0>\;
  m_axi_wuser(40) <= \<const0>\;
  m_axi_wuser(39) <= \<const0>\;
  m_axi_wuser(38) <= \<const0>\;
  m_axi_wuser(37) <= \<const0>\;
  m_axi_wuser(36) <= \<const0>\;
  m_axi_wuser(35) <= \<const0>\;
  m_axi_wuser(34) <= \<const0>\;
  m_axi_wuser(33) <= \<const0>\;
  m_axi_wuser(32) <= \<const0>\;
  m_axi_wuser(31) <= \<const0>\;
  m_axi_wuser(30) <= \<const0>\;
  m_axi_wuser(29) <= \<const0>\;
  m_axi_wuser(28) <= \<const0>\;
  m_axi_wuser(27) <= \<const0>\;
  m_axi_wuser(26) <= \<const0>\;
  m_axi_wuser(25) <= \<const0>\;
  m_axi_wuser(24) <= \<const0>\;
  m_axi_wuser(23) <= \<const0>\;
  m_axi_wuser(22) <= \<const0>\;
  m_axi_wuser(21) <= \<const0>\;
  m_axi_wuser(20) <= \<const0>\;
  m_axi_wuser(19) <= \<const0>\;
  m_axi_wuser(18) <= \<const0>\;
  m_axi_wuser(17) <= \<const0>\;
  m_axi_wuser(16) <= \<const0>\;
  m_axi_wuser(15) <= \<const0>\;
  m_axi_wuser(14) <= \<const0>\;
  m_axi_wuser(13) <= \<const0>\;
  m_axi_wuser(12) <= \<const0>\;
  m_axi_wuser(11) <= \<const0>\;
  m_axi_wuser(10) <= \<const0>\;
  m_axi_wuser(9) <= \<const0>\;
  m_axi_wuser(8) <= \<const0>\;
  m_axi_wuser(7) <= \<const0>\;
  m_axi_wuser(6) <= \<const0>\;
  m_axi_wuser(5) <= \<const0>\;
  m_axi_wuser(4) <= \<const0>\;
  m_axi_wuser(3) <= \<const0>\;
  m_axi_wuser(2) <= \<const0>\;
  m_axi_wuser(1) <= \<const0>\;
  m_axi_wuser(0) <= \<const0>\;
  s_axi_bid(0) <= \<const0>\;
  s_axi_buser(1023) <= \<const0>\;
  s_axi_buser(1022) <= \<const0>\;
  s_axi_buser(1021) <= \<const0>\;
  s_axi_buser(1020) <= \<const0>\;
  s_axi_buser(1019) <= \<const0>\;
  s_axi_buser(1018) <= \<const0>\;
  s_axi_buser(1017) <= \<const0>\;
  s_axi_buser(1016) <= \<const0>\;
  s_axi_buser(1015) <= \<const0>\;
  s_axi_buser(1014) <= \<const0>\;
  s_axi_buser(1013) <= \<const0>\;
  s_axi_buser(1012) <= \<const0>\;
  s_axi_buser(1011) <= \<const0>\;
  s_axi_buser(1010) <= \<const0>\;
  s_axi_buser(1009) <= \<const0>\;
  s_axi_buser(1008) <= \<const0>\;
  s_axi_buser(1007) <= \<const0>\;
  s_axi_buser(1006) <= \<const0>\;
  s_axi_buser(1005) <= \<const0>\;
  s_axi_buser(1004) <= \<const0>\;
  s_axi_buser(1003) <= \<const0>\;
  s_axi_buser(1002) <= \<const0>\;
  s_axi_buser(1001) <= \<const0>\;
  s_axi_buser(1000) <= \<const0>\;
  s_axi_buser(999) <= \<const0>\;
  s_axi_buser(998) <= \<const0>\;
  s_axi_buser(997) <= \<const0>\;
  s_axi_buser(996) <= \<const0>\;
  s_axi_buser(995) <= \<const0>\;
  s_axi_buser(994) <= \<const0>\;
  s_axi_buser(993) <= \<const0>\;
  s_axi_buser(992) <= \<const0>\;
  s_axi_buser(991) <= \<const0>\;
  s_axi_buser(990) <= \<const0>\;
  s_axi_buser(989) <= \<const0>\;
  s_axi_buser(988) <= \<const0>\;
  s_axi_buser(987) <= \<const0>\;
  s_axi_buser(986) <= \<const0>\;
  s_axi_buser(985) <= \<const0>\;
  s_axi_buser(984) <= \<const0>\;
  s_axi_buser(983) <= \<const0>\;
  s_axi_buser(982) <= \<const0>\;
  s_axi_buser(981) <= \<const0>\;
  s_axi_buser(980) <= \<const0>\;
  s_axi_buser(979) <= \<const0>\;
  s_axi_buser(978) <= \<const0>\;
  s_axi_buser(977) <= \<const0>\;
  s_axi_buser(976) <= \<const0>\;
  s_axi_buser(975) <= \<const0>\;
  s_axi_buser(974) <= \<const0>\;
  s_axi_buser(973) <= \<const0>\;
  s_axi_buser(972) <= \<const0>\;
  s_axi_buser(971) <= \<const0>\;
  s_axi_buser(970) <= \<const0>\;
  s_axi_buser(969) <= \<const0>\;
  s_axi_buser(968) <= \<const0>\;
  s_axi_buser(967) <= \<const0>\;
  s_axi_buser(966) <= \<const0>\;
  s_axi_buser(965) <= \<const0>\;
  s_axi_buser(964) <= \<const0>\;
  s_axi_buser(963) <= \<const0>\;
  s_axi_buser(962) <= \<const0>\;
  s_axi_buser(961) <= \<const0>\;
  s_axi_buser(960) <= \<const0>\;
  s_axi_buser(959) <= \<const0>\;
  s_axi_buser(958) <= \<const0>\;
  s_axi_buser(957) <= \<const0>\;
  s_axi_buser(956) <= \<const0>\;
  s_axi_buser(955) <= \<const0>\;
  s_axi_buser(954) <= \<const0>\;
  s_axi_buser(953) <= \<const0>\;
  s_axi_buser(952) <= \<const0>\;
  s_axi_buser(951) <= \<const0>\;
  s_axi_buser(950) <= \<const0>\;
  s_axi_buser(949) <= \<const0>\;
  s_axi_buser(948) <= \<const0>\;
  s_axi_buser(947) <= \<const0>\;
  s_axi_buser(946) <= \<const0>\;
  s_axi_buser(945) <= \<const0>\;
  s_axi_buser(944) <= \<const0>\;
  s_axi_buser(943) <= \<const0>\;
  s_axi_buser(942) <= \<const0>\;
  s_axi_buser(941) <= \<const0>\;
  s_axi_buser(940) <= \<const0>\;
  s_axi_buser(939) <= \<const0>\;
  s_axi_buser(938) <= \<const0>\;
  s_axi_buser(937) <= \<const0>\;
  s_axi_buser(936) <= \<const0>\;
  s_axi_buser(935) <= \<const0>\;
  s_axi_buser(934) <= \<const0>\;
  s_axi_buser(933) <= \<const0>\;
  s_axi_buser(932) <= \<const0>\;
  s_axi_buser(931) <= \<const0>\;
  s_axi_buser(930) <= \<const0>\;
  s_axi_buser(929) <= \<const0>\;
  s_axi_buser(928) <= \<const0>\;
  s_axi_buser(927) <= \<const0>\;
  s_axi_buser(926) <= \<const0>\;
  s_axi_buser(925) <= \<const0>\;
  s_axi_buser(924) <= \<const0>\;
  s_axi_buser(923) <= \<const0>\;
  s_axi_buser(922) <= \<const0>\;
  s_axi_buser(921) <= \<const0>\;
  s_axi_buser(920) <= \<const0>\;
  s_axi_buser(919) <= \<const0>\;
  s_axi_buser(918) <= \<const0>\;
  s_axi_buser(917) <= \<const0>\;
  s_axi_buser(916) <= \<const0>\;
  s_axi_buser(915) <= \<const0>\;
  s_axi_buser(914) <= \<const0>\;
  s_axi_buser(913) <= \<const0>\;
  s_axi_buser(912) <= \<const0>\;
  s_axi_buser(911) <= \<const0>\;
  s_axi_buser(910) <= \<const0>\;
  s_axi_buser(909) <= \<const0>\;
  s_axi_buser(908) <= \<const0>\;
  s_axi_buser(907) <= \<const0>\;
  s_axi_buser(906) <= \<const0>\;
  s_axi_buser(905) <= \<const0>\;
  s_axi_buser(904) <= \<const0>\;
  s_axi_buser(903) <= \<const0>\;
  s_axi_buser(902) <= \<const0>\;
  s_axi_buser(901) <= \<const0>\;
  s_axi_buser(900) <= \<const0>\;
  s_axi_buser(899) <= \<const0>\;
  s_axi_buser(898) <= \<const0>\;
  s_axi_buser(897) <= \<const0>\;
  s_axi_buser(896) <= \<const0>\;
  s_axi_buser(895) <= \<const0>\;
  s_axi_buser(894) <= \<const0>\;
  s_axi_buser(893) <= \<const0>\;
  s_axi_buser(892) <= \<const0>\;
  s_axi_buser(891) <= \<const0>\;
  s_axi_buser(890) <= \<const0>\;
  s_axi_buser(889) <= \<const0>\;
  s_axi_buser(888) <= \<const0>\;
  s_axi_buser(887) <= \<const0>\;
  s_axi_buser(886) <= \<const0>\;
  s_axi_buser(885) <= \<const0>\;
  s_axi_buser(884) <= \<const0>\;
  s_axi_buser(883) <= \<const0>\;
  s_axi_buser(882) <= \<const0>\;
  s_axi_buser(881) <= \<const0>\;
  s_axi_buser(880) <= \<const0>\;
  s_axi_buser(879) <= \<const0>\;
  s_axi_buser(878) <= \<const0>\;
  s_axi_buser(877) <= \<const0>\;
  s_axi_buser(876) <= \<const0>\;
  s_axi_buser(875) <= \<const0>\;
  s_axi_buser(874) <= \<const0>\;
  s_axi_buser(873) <= \<const0>\;
  s_axi_buser(872) <= \<const0>\;
  s_axi_buser(871) <= \<const0>\;
  s_axi_buser(870) <= \<const0>\;
  s_axi_buser(869) <= \<const0>\;
  s_axi_buser(868) <= \<const0>\;
  s_axi_buser(867) <= \<const0>\;
  s_axi_buser(866) <= \<const0>\;
  s_axi_buser(865) <= \<const0>\;
  s_axi_buser(864) <= \<const0>\;
  s_axi_buser(863) <= \<const0>\;
  s_axi_buser(862) <= \<const0>\;
  s_axi_buser(861) <= \<const0>\;
  s_axi_buser(860) <= \<const0>\;
  s_axi_buser(859) <= \<const0>\;
  s_axi_buser(858) <= \<const0>\;
  s_axi_buser(857) <= \<const0>\;
  s_axi_buser(856) <= \<const0>\;
  s_axi_buser(855) <= \<const0>\;
  s_axi_buser(854) <= \<const0>\;
  s_axi_buser(853) <= \<const0>\;
  s_axi_buser(852) <= \<const0>\;
  s_axi_buser(851) <= \<const0>\;
  s_axi_buser(850) <= \<const0>\;
  s_axi_buser(849) <= \<const0>\;
  s_axi_buser(848) <= \<const0>\;
  s_axi_buser(847) <= \<const0>\;
  s_axi_buser(846) <= \<const0>\;
  s_axi_buser(845) <= \<const0>\;
  s_axi_buser(844) <= \<const0>\;
  s_axi_buser(843) <= \<const0>\;
  s_axi_buser(842) <= \<const0>\;
  s_axi_buser(841) <= \<const0>\;
  s_axi_buser(840) <= \<const0>\;
  s_axi_buser(839) <= \<const0>\;
  s_axi_buser(838) <= \<const0>\;
  s_axi_buser(837) <= \<const0>\;
  s_axi_buser(836) <= \<const0>\;
  s_axi_buser(835) <= \<const0>\;
  s_axi_buser(834) <= \<const0>\;
  s_axi_buser(833) <= \<const0>\;
  s_axi_buser(832) <= \<const0>\;
  s_axi_buser(831) <= \<const0>\;
  s_axi_buser(830) <= \<const0>\;
  s_axi_buser(829) <= \<const0>\;
  s_axi_buser(828) <= \<const0>\;
  s_axi_buser(827) <= \<const0>\;
  s_axi_buser(826) <= \<const0>\;
  s_axi_buser(825) <= \<const0>\;
  s_axi_buser(824) <= \<const0>\;
  s_axi_buser(823) <= \<const0>\;
  s_axi_buser(822) <= \<const0>\;
  s_axi_buser(821) <= \<const0>\;
  s_axi_buser(820) <= \<const0>\;
  s_axi_buser(819) <= \<const0>\;
  s_axi_buser(818) <= \<const0>\;
  s_axi_buser(817) <= \<const0>\;
  s_axi_buser(816) <= \<const0>\;
  s_axi_buser(815) <= \<const0>\;
  s_axi_buser(814) <= \<const0>\;
  s_axi_buser(813) <= \<const0>\;
  s_axi_buser(812) <= \<const0>\;
  s_axi_buser(811) <= \<const0>\;
  s_axi_buser(810) <= \<const0>\;
  s_axi_buser(809) <= \<const0>\;
  s_axi_buser(808) <= \<const0>\;
  s_axi_buser(807) <= \<const0>\;
  s_axi_buser(806) <= \<const0>\;
  s_axi_buser(805) <= \<const0>\;
  s_axi_buser(804) <= \<const0>\;
  s_axi_buser(803) <= \<const0>\;
  s_axi_buser(802) <= \<const0>\;
  s_axi_buser(801) <= \<const0>\;
  s_axi_buser(800) <= \<const0>\;
  s_axi_buser(799) <= \<const0>\;
  s_axi_buser(798) <= \<const0>\;
  s_axi_buser(797) <= \<const0>\;
  s_axi_buser(796) <= \<const0>\;
  s_axi_buser(795) <= \<const0>\;
  s_axi_buser(794) <= \<const0>\;
  s_axi_buser(793) <= \<const0>\;
  s_axi_buser(792) <= \<const0>\;
  s_axi_buser(791) <= \<const0>\;
  s_axi_buser(790) <= \<const0>\;
  s_axi_buser(789) <= \<const0>\;
  s_axi_buser(788) <= \<const0>\;
  s_axi_buser(787) <= \<const0>\;
  s_axi_buser(786) <= \<const0>\;
  s_axi_buser(785) <= \<const0>\;
  s_axi_buser(784) <= \<const0>\;
  s_axi_buser(783) <= \<const0>\;
  s_axi_buser(782) <= \<const0>\;
  s_axi_buser(781) <= \<const0>\;
  s_axi_buser(780) <= \<const0>\;
  s_axi_buser(779) <= \<const0>\;
  s_axi_buser(778) <= \<const0>\;
  s_axi_buser(777) <= \<const0>\;
  s_axi_buser(776) <= \<const0>\;
  s_axi_buser(775) <= \<const0>\;
  s_axi_buser(774) <= \<const0>\;
  s_axi_buser(773) <= \<const0>\;
  s_axi_buser(772) <= \<const0>\;
  s_axi_buser(771) <= \<const0>\;
  s_axi_buser(770) <= \<const0>\;
  s_axi_buser(769) <= \<const0>\;
  s_axi_buser(768) <= \<const0>\;
  s_axi_buser(767) <= \<const0>\;
  s_axi_buser(766) <= \<const0>\;
  s_axi_buser(765) <= \<const0>\;
  s_axi_buser(764) <= \<const0>\;
  s_axi_buser(763) <= \<const0>\;
  s_axi_buser(762) <= \<const0>\;
  s_axi_buser(761) <= \<const0>\;
  s_axi_buser(760) <= \<const0>\;
  s_axi_buser(759) <= \<const0>\;
  s_axi_buser(758) <= \<const0>\;
  s_axi_buser(757) <= \<const0>\;
  s_axi_buser(756) <= \<const0>\;
  s_axi_buser(755) <= \<const0>\;
  s_axi_buser(754) <= \<const0>\;
  s_axi_buser(753) <= \<const0>\;
  s_axi_buser(752) <= \<const0>\;
  s_axi_buser(751) <= \<const0>\;
  s_axi_buser(750) <= \<const0>\;
  s_axi_buser(749) <= \<const0>\;
  s_axi_buser(748) <= \<const0>\;
  s_axi_buser(747) <= \<const0>\;
  s_axi_buser(746) <= \<const0>\;
  s_axi_buser(745) <= \<const0>\;
  s_axi_buser(744) <= \<const0>\;
  s_axi_buser(743) <= \<const0>\;
  s_axi_buser(742) <= \<const0>\;
  s_axi_buser(741) <= \<const0>\;
  s_axi_buser(740) <= \<const0>\;
  s_axi_buser(739) <= \<const0>\;
  s_axi_buser(738) <= \<const0>\;
  s_axi_buser(737) <= \<const0>\;
  s_axi_buser(736) <= \<const0>\;
  s_axi_buser(735) <= \<const0>\;
  s_axi_buser(734) <= \<const0>\;
  s_axi_buser(733) <= \<const0>\;
  s_axi_buser(732) <= \<const0>\;
  s_axi_buser(731) <= \<const0>\;
  s_axi_buser(730) <= \<const0>\;
  s_axi_buser(729) <= \<const0>\;
  s_axi_buser(728) <= \<const0>\;
  s_axi_buser(727) <= \<const0>\;
  s_axi_buser(726) <= \<const0>\;
  s_axi_buser(725) <= \<const0>\;
  s_axi_buser(724) <= \<const0>\;
  s_axi_buser(723) <= \<const0>\;
  s_axi_buser(722) <= \<const0>\;
  s_axi_buser(721) <= \<const0>\;
  s_axi_buser(720) <= \<const0>\;
  s_axi_buser(719) <= \<const0>\;
  s_axi_buser(718) <= \<const0>\;
  s_axi_buser(717) <= \<const0>\;
  s_axi_buser(716) <= \<const0>\;
  s_axi_buser(715) <= \<const0>\;
  s_axi_buser(714) <= \<const0>\;
  s_axi_buser(713) <= \<const0>\;
  s_axi_buser(712) <= \<const0>\;
  s_axi_buser(711) <= \<const0>\;
  s_axi_buser(710) <= \<const0>\;
  s_axi_buser(709) <= \<const0>\;
  s_axi_buser(708) <= \<const0>\;
  s_axi_buser(707) <= \<const0>\;
  s_axi_buser(706) <= \<const0>\;
  s_axi_buser(705) <= \<const0>\;
  s_axi_buser(704) <= \<const0>\;
  s_axi_buser(703) <= \<const0>\;
  s_axi_buser(702) <= \<const0>\;
  s_axi_buser(701) <= \<const0>\;
  s_axi_buser(700) <= \<const0>\;
  s_axi_buser(699) <= \<const0>\;
  s_axi_buser(698) <= \<const0>\;
  s_axi_buser(697) <= \<const0>\;
  s_axi_buser(696) <= \<const0>\;
  s_axi_buser(695) <= \<const0>\;
  s_axi_buser(694) <= \<const0>\;
  s_axi_buser(693) <= \<const0>\;
  s_axi_buser(692) <= \<const0>\;
  s_axi_buser(691) <= \<const0>\;
  s_axi_buser(690) <= \<const0>\;
  s_axi_buser(689) <= \<const0>\;
  s_axi_buser(688) <= \<const0>\;
  s_axi_buser(687) <= \<const0>\;
  s_axi_buser(686) <= \<const0>\;
  s_axi_buser(685) <= \<const0>\;
  s_axi_buser(684) <= \<const0>\;
  s_axi_buser(683) <= \<const0>\;
  s_axi_buser(682) <= \<const0>\;
  s_axi_buser(681) <= \<const0>\;
  s_axi_buser(680) <= \<const0>\;
  s_axi_buser(679) <= \<const0>\;
  s_axi_buser(678) <= \<const0>\;
  s_axi_buser(677) <= \<const0>\;
  s_axi_buser(676) <= \<const0>\;
  s_axi_buser(675) <= \<const0>\;
  s_axi_buser(674) <= \<const0>\;
  s_axi_buser(673) <= \<const0>\;
  s_axi_buser(672) <= \<const0>\;
  s_axi_buser(671) <= \<const0>\;
  s_axi_buser(670) <= \<const0>\;
  s_axi_buser(669) <= \<const0>\;
  s_axi_buser(668) <= \<const0>\;
  s_axi_buser(667) <= \<const0>\;
  s_axi_buser(666) <= \<const0>\;
  s_axi_buser(665) <= \<const0>\;
  s_axi_buser(664) <= \<const0>\;
  s_axi_buser(663) <= \<const0>\;
  s_axi_buser(662) <= \<const0>\;
  s_axi_buser(661) <= \<const0>\;
  s_axi_buser(660) <= \<const0>\;
  s_axi_buser(659) <= \<const0>\;
  s_axi_buser(658) <= \<const0>\;
  s_axi_buser(657) <= \<const0>\;
  s_axi_buser(656) <= \<const0>\;
  s_axi_buser(655) <= \<const0>\;
  s_axi_buser(654) <= \<const0>\;
  s_axi_buser(653) <= \<const0>\;
  s_axi_buser(652) <= \<const0>\;
  s_axi_buser(651) <= \<const0>\;
  s_axi_buser(650) <= \<const0>\;
  s_axi_buser(649) <= \<const0>\;
  s_axi_buser(648) <= \<const0>\;
  s_axi_buser(647) <= \<const0>\;
  s_axi_buser(646) <= \<const0>\;
  s_axi_buser(645) <= \<const0>\;
  s_axi_buser(644) <= \<const0>\;
  s_axi_buser(643) <= \<const0>\;
  s_axi_buser(642) <= \<const0>\;
  s_axi_buser(641) <= \<const0>\;
  s_axi_buser(640) <= \<const0>\;
  s_axi_buser(639) <= \<const0>\;
  s_axi_buser(638) <= \<const0>\;
  s_axi_buser(637) <= \<const0>\;
  s_axi_buser(636) <= \<const0>\;
  s_axi_buser(635) <= \<const0>\;
  s_axi_buser(634) <= \<const0>\;
  s_axi_buser(633) <= \<const0>\;
  s_axi_buser(632) <= \<const0>\;
  s_axi_buser(631) <= \<const0>\;
  s_axi_buser(630) <= \<const0>\;
  s_axi_buser(629) <= \<const0>\;
  s_axi_buser(628) <= \<const0>\;
  s_axi_buser(627) <= \<const0>\;
  s_axi_buser(626) <= \<const0>\;
  s_axi_buser(625) <= \<const0>\;
  s_axi_buser(624) <= \<const0>\;
  s_axi_buser(623) <= \<const0>\;
  s_axi_buser(622) <= \<const0>\;
  s_axi_buser(621) <= \<const0>\;
  s_axi_buser(620) <= \<const0>\;
  s_axi_buser(619) <= \<const0>\;
  s_axi_buser(618) <= \<const0>\;
  s_axi_buser(617) <= \<const0>\;
  s_axi_buser(616) <= \<const0>\;
  s_axi_buser(615) <= \<const0>\;
  s_axi_buser(614) <= \<const0>\;
  s_axi_buser(613) <= \<const0>\;
  s_axi_buser(612) <= \<const0>\;
  s_axi_buser(611) <= \<const0>\;
  s_axi_buser(610) <= \<const0>\;
  s_axi_buser(609) <= \<const0>\;
  s_axi_buser(608) <= \<const0>\;
  s_axi_buser(607) <= \<const0>\;
  s_axi_buser(606) <= \<const0>\;
  s_axi_buser(605) <= \<const0>\;
  s_axi_buser(604) <= \<const0>\;
  s_axi_buser(603) <= \<const0>\;
  s_axi_buser(602) <= \<const0>\;
  s_axi_buser(601) <= \<const0>\;
  s_axi_buser(600) <= \<const0>\;
  s_axi_buser(599) <= \<const0>\;
  s_axi_buser(598) <= \<const0>\;
  s_axi_buser(597) <= \<const0>\;
  s_axi_buser(596) <= \<const0>\;
  s_axi_buser(595) <= \<const0>\;
  s_axi_buser(594) <= \<const0>\;
  s_axi_buser(593) <= \<const0>\;
  s_axi_buser(592) <= \<const0>\;
  s_axi_buser(591) <= \<const0>\;
  s_axi_buser(590) <= \<const0>\;
  s_axi_buser(589) <= \<const0>\;
  s_axi_buser(588) <= \<const0>\;
  s_axi_buser(587) <= \<const0>\;
  s_axi_buser(586) <= \<const0>\;
  s_axi_buser(585) <= \<const0>\;
  s_axi_buser(584) <= \<const0>\;
  s_axi_buser(583) <= \<const0>\;
  s_axi_buser(582) <= \<const0>\;
  s_axi_buser(581) <= \<const0>\;
  s_axi_buser(580) <= \<const0>\;
  s_axi_buser(579) <= \<const0>\;
  s_axi_buser(578) <= \<const0>\;
  s_axi_buser(577) <= \<const0>\;
  s_axi_buser(576) <= \<const0>\;
  s_axi_buser(575) <= \<const0>\;
  s_axi_buser(574) <= \<const0>\;
  s_axi_buser(573) <= \<const0>\;
  s_axi_buser(572) <= \<const0>\;
  s_axi_buser(571) <= \<const0>\;
  s_axi_buser(570) <= \<const0>\;
  s_axi_buser(569) <= \<const0>\;
  s_axi_buser(568) <= \<const0>\;
  s_axi_buser(567) <= \<const0>\;
  s_axi_buser(566) <= \<const0>\;
  s_axi_buser(565) <= \<const0>\;
  s_axi_buser(564) <= \<const0>\;
  s_axi_buser(563) <= \<const0>\;
  s_axi_buser(562) <= \<const0>\;
  s_axi_buser(561) <= \<const0>\;
  s_axi_buser(560) <= \<const0>\;
  s_axi_buser(559) <= \<const0>\;
  s_axi_buser(558) <= \<const0>\;
  s_axi_buser(557) <= \<const0>\;
  s_axi_buser(556) <= \<const0>\;
  s_axi_buser(555) <= \<const0>\;
  s_axi_buser(554) <= \<const0>\;
  s_axi_buser(553) <= \<const0>\;
  s_axi_buser(552) <= \<const0>\;
  s_axi_buser(551) <= \<const0>\;
  s_axi_buser(550) <= \<const0>\;
  s_axi_buser(549) <= \<const0>\;
  s_axi_buser(548) <= \<const0>\;
  s_axi_buser(547) <= \<const0>\;
  s_axi_buser(546) <= \<const0>\;
  s_axi_buser(545) <= \<const0>\;
  s_axi_buser(544) <= \<const0>\;
  s_axi_buser(543) <= \<const0>\;
  s_axi_buser(542) <= \<const0>\;
  s_axi_buser(541) <= \<const0>\;
  s_axi_buser(540) <= \<const0>\;
  s_axi_buser(539) <= \<const0>\;
  s_axi_buser(538) <= \<const0>\;
  s_axi_buser(537) <= \<const0>\;
  s_axi_buser(536) <= \<const0>\;
  s_axi_buser(535) <= \<const0>\;
  s_axi_buser(534) <= \<const0>\;
  s_axi_buser(533) <= \<const0>\;
  s_axi_buser(532) <= \<const0>\;
  s_axi_buser(531) <= \<const0>\;
  s_axi_buser(530) <= \<const0>\;
  s_axi_buser(529) <= \<const0>\;
  s_axi_buser(528) <= \<const0>\;
  s_axi_buser(527) <= \<const0>\;
  s_axi_buser(526) <= \<const0>\;
  s_axi_buser(525) <= \<const0>\;
  s_axi_buser(524) <= \<const0>\;
  s_axi_buser(523) <= \<const0>\;
  s_axi_buser(522) <= \<const0>\;
  s_axi_buser(521) <= \<const0>\;
  s_axi_buser(520) <= \<const0>\;
  s_axi_buser(519) <= \<const0>\;
  s_axi_buser(518) <= \<const0>\;
  s_axi_buser(517) <= \<const0>\;
  s_axi_buser(516) <= \<const0>\;
  s_axi_buser(515) <= \<const0>\;
  s_axi_buser(514) <= \<const0>\;
  s_axi_buser(513) <= \<const0>\;
  s_axi_buser(512) <= \<const0>\;
  s_axi_buser(511) <= \<const0>\;
  s_axi_buser(510) <= \<const0>\;
  s_axi_buser(509) <= \<const0>\;
  s_axi_buser(508) <= \<const0>\;
  s_axi_buser(507) <= \<const0>\;
  s_axi_buser(506) <= \<const0>\;
  s_axi_buser(505) <= \<const0>\;
  s_axi_buser(504) <= \<const0>\;
  s_axi_buser(503) <= \<const0>\;
  s_axi_buser(502) <= \<const0>\;
  s_axi_buser(501) <= \<const0>\;
  s_axi_buser(500) <= \<const0>\;
  s_axi_buser(499) <= \<const0>\;
  s_axi_buser(498) <= \<const0>\;
  s_axi_buser(497) <= \<const0>\;
  s_axi_buser(496) <= \<const0>\;
  s_axi_buser(495) <= \<const0>\;
  s_axi_buser(494) <= \<const0>\;
  s_axi_buser(493) <= \<const0>\;
  s_axi_buser(492) <= \<const0>\;
  s_axi_buser(491) <= \<const0>\;
  s_axi_buser(490) <= \<const0>\;
  s_axi_buser(489) <= \<const0>\;
  s_axi_buser(488) <= \<const0>\;
  s_axi_buser(487) <= \<const0>\;
  s_axi_buser(486) <= \<const0>\;
  s_axi_buser(485) <= \<const0>\;
  s_axi_buser(484) <= \<const0>\;
  s_axi_buser(483) <= \<const0>\;
  s_axi_buser(482) <= \<const0>\;
  s_axi_buser(481) <= \<const0>\;
  s_axi_buser(480) <= \<const0>\;
  s_axi_buser(479) <= \<const0>\;
  s_axi_buser(478) <= \<const0>\;
  s_axi_buser(477) <= \<const0>\;
  s_axi_buser(476) <= \<const0>\;
  s_axi_buser(475) <= \<const0>\;
  s_axi_buser(474) <= \<const0>\;
  s_axi_buser(473) <= \<const0>\;
  s_axi_buser(472) <= \<const0>\;
  s_axi_buser(471) <= \<const0>\;
  s_axi_buser(470) <= \<const0>\;
  s_axi_buser(469) <= \<const0>\;
  s_axi_buser(468) <= \<const0>\;
  s_axi_buser(467) <= \<const0>\;
  s_axi_buser(466) <= \<const0>\;
  s_axi_buser(465) <= \<const0>\;
  s_axi_buser(464) <= \<const0>\;
  s_axi_buser(463) <= \<const0>\;
  s_axi_buser(462) <= \<const0>\;
  s_axi_buser(461) <= \<const0>\;
  s_axi_buser(460) <= \<const0>\;
  s_axi_buser(459) <= \<const0>\;
  s_axi_buser(458) <= \<const0>\;
  s_axi_buser(457) <= \<const0>\;
  s_axi_buser(456) <= \<const0>\;
  s_axi_buser(455) <= \<const0>\;
  s_axi_buser(454) <= \<const0>\;
  s_axi_buser(453) <= \<const0>\;
  s_axi_buser(452) <= \<const0>\;
  s_axi_buser(451) <= \<const0>\;
  s_axi_buser(450) <= \<const0>\;
  s_axi_buser(449) <= \<const0>\;
  s_axi_buser(448) <= \<const0>\;
  s_axi_buser(447) <= \<const0>\;
  s_axi_buser(446) <= \<const0>\;
  s_axi_buser(445) <= \<const0>\;
  s_axi_buser(444) <= \<const0>\;
  s_axi_buser(443) <= \<const0>\;
  s_axi_buser(442) <= \<const0>\;
  s_axi_buser(441) <= \<const0>\;
  s_axi_buser(440) <= \<const0>\;
  s_axi_buser(439) <= \<const0>\;
  s_axi_buser(438) <= \<const0>\;
  s_axi_buser(437) <= \<const0>\;
  s_axi_buser(436) <= \<const0>\;
  s_axi_buser(435) <= \<const0>\;
  s_axi_buser(434) <= \<const0>\;
  s_axi_buser(433) <= \<const0>\;
  s_axi_buser(432) <= \<const0>\;
  s_axi_buser(431) <= \<const0>\;
  s_axi_buser(430) <= \<const0>\;
  s_axi_buser(429) <= \<const0>\;
  s_axi_buser(428) <= \<const0>\;
  s_axi_buser(427) <= \<const0>\;
  s_axi_buser(426) <= \<const0>\;
  s_axi_buser(425) <= \<const0>\;
  s_axi_buser(424) <= \<const0>\;
  s_axi_buser(423) <= \<const0>\;
  s_axi_buser(422) <= \<const0>\;
  s_axi_buser(421) <= \<const0>\;
  s_axi_buser(420) <= \<const0>\;
  s_axi_buser(419) <= \<const0>\;
  s_axi_buser(418) <= \<const0>\;
  s_axi_buser(417) <= \<const0>\;
  s_axi_buser(416) <= \<const0>\;
  s_axi_buser(415) <= \<const0>\;
  s_axi_buser(414) <= \<const0>\;
  s_axi_buser(413) <= \<const0>\;
  s_axi_buser(412) <= \<const0>\;
  s_axi_buser(411) <= \<const0>\;
  s_axi_buser(410) <= \<const0>\;
  s_axi_buser(409) <= \<const0>\;
  s_axi_buser(408) <= \<const0>\;
  s_axi_buser(407) <= \<const0>\;
  s_axi_buser(406) <= \<const0>\;
  s_axi_buser(405) <= \<const0>\;
  s_axi_buser(404) <= \<const0>\;
  s_axi_buser(403) <= \<const0>\;
  s_axi_buser(402) <= \<const0>\;
  s_axi_buser(401) <= \<const0>\;
  s_axi_buser(400) <= \<const0>\;
  s_axi_buser(399) <= \<const0>\;
  s_axi_buser(398) <= \<const0>\;
  s_axi_buser(397) <= \<const0>\;
  s_axi_buser(396) <= \<const0>\;
  s_axi_buser(395) <= \<const0>\;
  s_axi_buser(394) <= \<const0>\;
  s_axi_buser(393) <= \<const0>\;
  s_axi_buser(392) <= \<const0>\;
  s_axi_buser(391) <= \<const0>\;
  s_axi_buser(390) <= \<const0>\;
  s_axi_buser(389) <= \<const0>\;
  s_axi_buser(388) <= \<const0>\;
  s_axi_buser(387) <= \<const0>\;
  s_axi_buser(386) <= \<const0>\;
  s_axi_buser(385) <= \<const0>\;
  s_axi_buser(384) <= \<const0>\;
  s_axi_buser(383) <= \<const0>\;
  s_axi_buser(382) <= \<const0>\;
  s_axi_buser(381) <= \<const0>\;
  s_axi_buser(380) <= \<const0>\;
  s_axi_buser(379) <= \<const0>\;
  s_axi_buser(378) <= \<const0>\;
  s_axi_buser(377) <= \<const0>\;
  s_axi_buser(376) <= \<const0>\;
  s_axi_buser(375) <= \<const0>\;
  s_axi_buser(374) <= \<const0>\;
  s_axi_buser(373) <= \<const0>\;
  s_axi_buser(372) <= \<const0>\;
  s_axi_buser(371) <= \<const0>\;
  s_axi_buser(370) <= \<const0>\;
  s_axi_buser(369) <= \<const0>\;
  s_axi_buser(368) <= \<const0>\;
  s_axi_buser(367) <= \<const0>\;
  s_axi_buser(366) <= \<const0>\;
  s_axi_buser(365) <= \<const0>\;
  s_axi_buser(364) <= \<const0>\;
  s_axi_buser(363) <= \<const0>\;
  s_axi_buser(362) <= \<const0>\;
  s_axi_buser(361) <= \<const0>\;
  s_axi_buser(360) <= \<const0>\;
  s_axi_buser(359) <= \<const0>\;
  s_axi_buser(358) <= \<const0>\;
  s_axi_buser(357) <= \<const0>\;
  s_axi_buser(356) <= \<const0>\;
  s_axi_buser(355) <= \<const0>\;
  s_axi_buser(354) <= \<const0>\;
  s_axi_buser(353) <= \<const0>\;
  s_axi_buser(352) <= \<const0>\;
  s_axi_buser(351) <= \<const0>\;
  s_axi_buser(350) <= \<const0>\;
  s_axi_buser(349) <= \<const0>\;
  s_axi_buser(348) <= \<const0>\;
  s_axi_buser(347) <= \<const0>\;
  s_axi_buser(346) <= \<const0>\;
  s_axi_buser(345) <= \<const0>\;
  s_axi_buser(344) <= \<const0>\;
  s_axi_buser(343) <= \<const0>\;
  s_axi_buser(342) <= \<const0>\;
  s_axi_buser(341) <= \<const0>\;
  s_axi_buser(340) <= \<const0>\;
  s_axi_buser(339) <= \<const0>\;
  s_axi_buser(338) <= \<const0>\;
  s_axi_buser(337) <= \<const0>\;
  s_axi_buser(336) <= \<const0>\;
  s_axi_buser(335) <= \<const0>\;
  s_axi_buser(334) <= \<const0>\;
  s_axi_buser(333) <= \<const0>\;
  s_axi_buser(332) <= \<const0>\;
  s_axi_buser(331) <= \<const0>\;
  s_axi_buser(330) <= \<const0>\;
  s_axi_buser(329) <= \<const0>\;
  s_axi_buser(328) <= \<const0>\;
  s_axi_buser(327) <= \<const0>\;
  s_axi_buser(326) <= \<const0>\;
  s_axi_buser(325) <= \<const0>\;
  s_axi_buser(324) <= \<const0>\;
  s_axi_buser(323) <= \<const0>\;
  s_axi_buser(322) <= \<const0>\;
  s_axi_buser(321) <= \<const0>\;
  s_axi_buser(320) <= \<const0>\;
  s_axi_buser(319) <= \<const0>\;
  s_axi_buser(318) <= \<const0>\;
  s_axi_buser(317) <= \<const0>\;
  s_axi_buser(316) <= \<const0>\;
  s_axi_buser(315) <= \<const0>\;
  s_axi_buser(314) <= \<const0>\;
  s_axi_buser(313) <= \<const0>\;
  s_axi_buser(312) <= \<const0>\;
  s_axi_buser(311) <= \<const0>\;
  s_axi_buser(310) <= \<const0>\;
  s_axi_buser(309) <= \<const0>\;
  s_axi_buser(308) <= \<const0>\;
  s_axi_buser(307) <= \<const0>\;
  s_axi_buser(306) <= \<const0>\;
  s_axi_buser(305) <= \<const0>\;
  s_axi_buser(304) <= \<const0>\;
  s_axi_buser(303) <= \<const0>\;
  s_axi_buser(302) <= \<const0>\;
  s_axi_buser(301) <= \<const0>\;
  s_axi_buser(300) <= \<const0>\;
  s_axi_buser(299) <= \<const0>\;
  s_axi_buser(298) <= \<const0>\;
  s_axi_buser(297) <= \<const0>\;
  s_axi_buser(296) <= \<const0>\;
  s_axi_buser(295) <= \<const0>\;
  s_axi_buser(294) <= \<const0>\;
  s_axi_buser(293) <= \<const0>\;
  s_axi_buser(292) <= \<const0>\;
  s_axi_buser(291) <= \<const0>\;
  s_axi_buser(290) <= \<const0>\;
  s_axi_buser(289) <= \<const0>\;
  s_axi_buser(288) <= \<const0>\;
  s_axi_buser(287) <= \<const0>\;
  s_axi_buser(286) <= \<const0>\;
  s_axi_buser(285) <= \<const0>\;
  s_axi_buser(284) <= \<const0>\;
  s_axi_buser(283) <= \<const0>\;
  s_axi_buser(282) <= \<const0>\;
  s_axi_buser(281) <= \<const0>\;
  s_axi_buser(280) <= \<const0>\;
  s_axi_buser(279) <= \<const0>\;
  s_axi_buser(278) <= \<const0>\;
  s_axi_buser(277) <= \<const0>\;
  s_axi_buser(276) <= \<const0>\;
  s_axi_buser(275) <= \<const0>\;
  s_axi_buser(274) <= \<const0>\;
  s_axi_buser(273) <= \<const0>\;
  s_axi_buser(272) <= \<const0>\;
  s_axi_buser(271) <= \<const0>\;
  s_axi_buser(270) <= \<const0>\;
  s_axi_buser(269) <= \<const0>\;
  s_axi_buser(268) <= \<const0>\;
  s_axi_buser(267) <= \<const0>\;
  s_axi_buser(266) <= \<const0>\;
  s_axi_buser(265) <= \<const0>\;
  s_axi_buser(264) <= \<const0>\;
  s_axi_buser(263) <= \<const0>\;
  s_axi_buser(262) <= \<const0>\;
  s_axi_buser(261) <= \<const0>\;
  s_axi_buser(260) <= \<const0>\;
  s_axi_buser(259) <= \<const0>\;
  s_axi_buser(258) <= \<const0>\;
  s_axi_buser(257) <= \<const0>\;
  s_axi_buser(256) <= \<const0>\;
  s_axi_buser(255) <= \<const0>\;
  s_axi_buser(254) <= \<const0>\;
  s_axi_buser(253) <= \<const0>\;
  s_axi_buser(252) <= \<const0>\;
  s_axi_buser(251) <= \<const0>\;
  s_axi_buser(250) <= \<const0>\;
  s_axi_buser(249) <= \<const0>\;
  s_axi_buser(248) <= \<const0>\;
  s_axi_buser(247) <= \<const0>\;
  s_axi_buser(246) <= \<const0>\;
  s_axi_buser(245) <= \<const0>\;
  s_axi_buser(244) <= \<const0>\;
  s_axi_buser(243) <= \<const0>\;
  s_axi_buser(242) <= \<const0>\;
  s_axi_buser(241) <= \<const0>\;
  s_axi_buser(240) <= \<const0>\;
  s_axi_buser(239) <= \<const0>\;
  s_axi_buser(238) <= \<const0>\;
  s_axi_buser(237) <= \<const0>\;
  s_axi_buser(236) <= \<const0>\;
  s_axi_buser(235) <= \<const0>\;
  s_axi_buser(234) <= \<const0>\;
  s_axi_buser(233) <= \<const0>\;
  s_axi_buser(232) <= \<const0>\;
  s_axi_buser(231) <= \<const0>\;
  s_axi_buser(230) <= \<const0>\;
  s_axi_buser(229) <= \<const0>\;
  s_axi_buser(228) <= \<const0>\;
  s_axi_buser(227) <= \<const0>\;
  s_axi_buser(226) <= \<const0>\;
  s_axi_buser(225) <= \<const0>\;
  s_axi_buser(224) <= \<const0>\;
  s_axi_buser(223) <= \<const0>\;
  s_axi_buser(222) <= \<const0>\;
  s_axi_buser(221) <= \<const0>\;
  s_axi_buser(220) <= \<const0>\;
  s_axi_buser(219) <= \<const0>\;
  s_axi_buser(218) <= \<const0>\;
  s_axi_buser(217) <= \<const0>\;
  s_axi_buser(216) <= \<const0>\;
  s_axi_buser(215) <= \<const0>\;
  s_axi_buser(214) <= \<const0>\;
  s_axi_buser(213) <= \<const0>\;
  s_axi_buser(212) <= \<const0>\;
  s_axi_buser(211) <= \<const0>\;
  s_axi_buser(210) <= \<const0>\;
  s_axi_buser(209) <= \<const0>\;
  s_axi_buser(208) <= \<const0>\;
  s_axi_buser(207) <= \<const0>\;
  s_axi_buser(206) <= \<const0>\;
  s_axi_buser(205) <= \<const0>\;
  s_axi_buser(204) <= \<const0>\;
  s_axi_buser(203) <= \<const0>\;
  s_axi_buser(202) <= \<const0>\;
  s_axi_buser(201) <= \<const0>\;
  s_axi_buser(200) <= \<const0>\;
  s_axi_buser(199) <= \<const0>\;
  s_axi_buser(198) <= \<const0>\;
  s_axi_buser(197) <= \<const0>\;
  s_axi_buser(196) <= \<const0>\;
  s_axi_buser(195) <= \<const0>\;
  s_axi_buser(194) <= \<const0>\;
  s_axi_buser(193) <= \<const0>\;
  s_axi_buser(192) <= \<const0>\;
  s_axi_buser(191) <= \<const0>\;
  s_axi_buser(190) <= \<const0>\;
  s_axi_buser(189) <= \<const0>\;
  s_axi_buser(188) <= \<const0>\;
  s_axi_buser(187) <= \<const0>\;
  s_axi_buser(186) <= \<const0>\;
  s_axi_buser(185) <= \<const0>\;
  s_axi_buser(184) <= \<const0>\;
  s_axi_buser(183) <= \<const0>\;
  s_axi_buser(182) <= \<const0>\;
  s_axi_buser(181) <= \<const0>\;
  s_axi_buser(180) <= \<const0>\;
  s_axi_buser(179) <= \<const0>\;
  s_axi_buser(178) <= \<const0>\;
  s_axi_buser(177) <= \<const0>\;
  s_axi_buser(176) <= \<const0>\;
  s_axi_buser(175) <= \<const0>\;
  s_axi_buser(174) <= \<const0>\;
  s_axi_buser(173) <= \<const0>\;
  s_axi_buser(172) <= \<const0>\;
  s_axi_buser(171) <= \<const0>\;
  s_axi_buser(170) <= \<const0>\;
  s_axi_buser(169) <= \<const0>\;
  s_axi_buser(168) <= \<const0>\;
  s_axi_buser(167) <= \<const0>\;
  s_axi_buser(166) <= \<const0>\;
  s_axi_buser(165) <= \<const0>\;
  s_axi_buser(164) <= \<const0>\;
  s_axi_buser(163) <= \<const0>\;
  s_axi_buser(162) <= \<const0>\;
  s_axi_buser(161) <= \<const0>\;
  s_axi_buser(160) <= \<const0>\;
  s_axi_buser(159) <= \<const0>\;
  s_axi_buser(158) <= \<const0>\;
  s_axi_buser(157) <= \<const0>\;
  s_axi_buser(156) <= \<const0>\;
  s_axi_buser(155) <= \<const0>\;
  s_axi_buser(154) <= \<const0>\;
  s_axi_buser(153) <= \<const0>\;
  s_axi_buser(152) <= \<const0>\;
  s_axi_buser(151) <= \<const0>\;
  s_axi_buser(150) <= \<const0>\;
  s_axi_buser(149) <= \<const0>\;
  s_axi_buser(148) <= \<const0>\;
  s_axi_buser(147) <= \<const0>\;
  s_axi_buser(146) <= \<const0>\;
  s_axi_buser(145) <= \<const0>\;
  s_axi_buser(144) <= \<const0>\;
  s_axi_buser(143) <= \<const0>\;
  s_axi_buser(142) <= \<const0>\;
  s_axi_buser(141) <= \<const0>\;
  s_axi_buser(140) <= \<const0>\;
  s_axi_buser(139) <= \<const0>\;
  s_axi_buser(138) <= \<const0>\;
  s_axi_buser(137) <= \<const0>\;
  s_axi_buser(136) <= \<const0>\;
  s_axi_buser(135) <= \<const0>\;
  s_axi_buser(134) <= \<const0>\;
  s_axi_buser(133) <= \<const0>\;
  s_axi_buser(132) <= \<const0>\;
  s_axi_buser(131) <= \<const0>\;
  s_axi_buser(130) <= \<const0>\;
  s_axi_buser(129) <= \<const0>\;
  s_axi_buser(128) <= \<const0>\;
  s_axi_buser(127) <= \<const0>\;
  s_axi_buser(126) <= \<const0>\;
  s_axi_buser(125) <= \<const0>\;
  s_axi_buser(124) <= \<const0>\;
  s_axi_buser(123) <= \<const0>\;
  s_axi_buser(122) <= \<const0>\;
  s_axi_buser(121) <= \<const0>\;
  s_axi_buser(120) <= \<const0>\;
  s_axi_buser(119) <= \<const0>\;
  s_axi_buser(118) <= \<const0>\;
  s_axi_buser(117) <= \<const0>\;
  s_axi_buser(116) <= \<const0>\;
  s_axi_buser(115) <= \<const0>\;
  s_axi_buser(114) <= \<const0>\;
  s_axi_buser(113) <= \<const0>\;
  s_axi_buser(112) <= \<const0>\;
  s_axi_buser(111) <= \<const0>\;
  s_axi_buser(110) <= \<const0>\;
  s_axi_buser(109) <= \<const0>\;
  s_axi_buser(108) <= \<const0>\;
  s_axi_buser(107) <= \<const0>\;
  s_axi_buser(106) <= \<const0>\;
  s_axi_buser(105) <= \<const0>\;
  s_axi_buser(104) <= \<const0>\;
  s_axi_buser(103) <= \<const0>\;
  s_axi_buser(102) <= \<const0>\;
  s_axi_buser(101) <= \<const0>\;
  s_axi_buser(100) <= \<const0>\;
  s_axi_buser(99) <= \<const0>\;
  s_axi_buser(98) <= \<const0>\;
  s_axi_buser(97) <= \<const0>\;
  s_axi_buser(96) <= \<const0>\;
  s_axi_buser(95) <= \<const0>\;
  s_axi_buser(94) <= \<const0>\;
  s_axi_buser(93) <= \<const0>\;
  s_axi_buser(92) <= \<const0>\;
  s_axi_buser(91) <= \<const0>\;
  s_axi_buser(90) <= \<const0>\;
  s_axi_buser(89) <= \<const0>\;
  s_axi_buser(88) <= \<const0>\;
  s_axi_buser(87) <= \<const0>\;
  s_axi_buser(86) <= \<const0>\;
  s_axi_buser(85) <= \<const0>\;
  s_axi_buser(84) <= \<const0>\;
  s_axi_buser(83) <= \<const0>\;
  s_axi_buser(82) <= \<const0>\;
  s_axi_buser(81) <= \<const0>\;
  s_axi_buser(80) <= \<const0>\;
  s_axi_buser(79) <= \<const0>\;
  s_axi_buser(78) <= \<const0>\;
  s_axi_buser(77) <= \<const0>\;
  s_axi_buser(76) <= \<const0>\;
  s_axi_buser(75) <= \<const0>\;
  s_axi_buser(74) <= \<const0>\;
  s_axi_buser(73) <= \<const0>\;
  s_axi_buser(72) <= \<const0>\;
  s_axi_buser(71) <= \<const0>\;
  s_axi_buser(70) <= \<const0>\;
  s_axi_buser(69) <= \<const0>\;
  s_axi_buser(68) <= \<const0>\;
  s_axi_buser(67) <= \<const0>\;
  s_axi_buser(66) <= \<const0>\;
  s_axi_buser(65) <= \<const0>\;
  s_axi_buser(64) <= \<const0>\;
  s_axi_buser(63) <= \<const0>\;
  s_axi_buser(62) <= \<const0>\;
  s_axi_buser(61) <= \<const0>\;
  s_axi_buser(60) <= \<const0>\;
  s_axi_buser(59) <= \<const0>\;
  s_axi_buser(58) <= \<const0>\;
  s_axi_buser(57) <= \<const0>\;
  s_axi_buser(56) <= \<const0>\;
  s_axi_buser(55) <= \<const0>\;
  s_axi_buser(54) <= \<const0>\;
  s_axi_buser(53) <= \<const0>\;
  s_axi_buser(52) <= \<const0>\;
  s_axi_buser(51) <= \<const0>\;
  s_axi_buser(50) <= \<const0>\;
  s_axi_buser(49) <= \<const0>\;
  s_axi_buser(48) <= \<const0>\;
  s_axi_buser(47) <= \<const0>\;
  s_axi_buser(46) <= \<const0>\;
  s_axi_buser(45) <= \<const0>\;
  s_axi_buser(44) <= \<const0>\;
  s_axi_buser(43) <= \<const0>\;
  s_axi_buser(42) <= \<const0>\;
  s_axi_buser(41) <= \<const0>\;
  s_axi_buser(40) <= \<const0>\;
  s_axi_buser(39) <= \<const0>\;
  s_axi_buser(38) <= \<const0>\;
  s_axi_buser(37) <= \<const0>\;
  s_axi_buser(36) <= \<const0>\;
  s_axi_buser(35) <= \<const0>\;
  s_axi_buser(34) <= \<const0>\;
  s_axi_buser(33) <= \<const0>\;
  s_axi_buser(32) <= \<const0>\;
  s_axi_buser(31) <= \<const0>\;
  s_axi_buser(30) <= \<const0>\;
  s_axi_buser(29) <= \<const0>\;
  s_axi_buser(28) <= \<const0>\;
  s_axi_buser(27) <= \<const0>\;
  s_axi_buser(26) <= \<const0>\;
  s_axi_buser(25) <= \<const0>\;
  s_axi_buser(24) <= \<const0>\;
  s_axi_buser(23) <= \<const0>\;
  s_axi_buser(22) <= \<const0>\;
  s_axi_buser(21) <= \<const0>\;
  s_axi_buser(20) <= \<const0>\;
  s_axi_buser(19) <= \<const0>\;
  s_axi_buser(18) <= \<const0>\;
  s_axi_buser(17) <= \<const0>\;
  s_axi_buser(16) <= \<const0>\;
  s_axi_buser(15) <= \<const0>\;
  s_axi_buser(14) <= \<const0>\;
  s_axi_buser(13) <= \<const0>\;
  s_axi_buser(12) <= \<const0>\;
  s_axi_buser(11) <= \<const0>\;
  s_axi_buser(10) <= \<const0>\;
  s_axi_buser(9) <= \<const0>\;
  s_axi_buser(8) <= \<const0>\;
  s_axi_buser(7) <= \<const0>\;
  s_axi_buser(6) <= \<const0>\;
  s_axi_buser(5) <= \<const0>\;
  s_axi_buser(4) <= \<const0>\;
  s_axi_buser(3) <= \<const0>\;
  s_axi_buser(2) <= \<const0>\;
  s_axi_buser(1) <= \<const0>\;
  s_axi_buser(0) <= \<const0>\;
  s_axi_rid(0) <= \<const0>\;
  s_axi_ruser(1023) <= \<const0>\;
  s_axi_ruser(1022) <= \<const0>\;
  s_axi_ruser(1021) <= \<const0>\;
  s_axi_ruser(1020) <= \<const0>\;
  s_axi_ruser(1019) <= \<const0>\;
  s_axi_ruser(1018) <= \<const0>\;
  s_axi_ruser(1017) <= \<const0>\;
  s_axi_ruser(1016) <= \<const0>\;
  s_axi_ruser(1015) <= \<const0>\;
  s_axi_ruser(1014) <= \<const0>\;
  s_axi_ruser(1013) <= \<const0>\;
  s_axi_ruser(1012) <= \<const0>\;
  s_axi_ruser(1011) <= \<const0>\;
  s_axi_ruser(1010) <= \<const0>\;
  s_axi_ruser(1009) <= \<const0>\;
  s_axi_ruser(1008) <= \<const0>\;
  s_axi_ruser(1007) <= \<const0>\;
  s_axi_ruser(1006) <= \<const0>\;
  s_axi_ruser(1005) <= \<const0>\;
  s_axi_ruser(1004) <= \<const0>\;
  s_axi_ruser(1003) <= \<const0>\;
  s_axi_ruser(1002) <= \<const0>\;
  s_axi_ruser(1001) <= \<const0>\;
  s_axi_ruser(1000) <= \<const0>\;
  s_axi_ruser(999) <= \<const0>\;
  s_axi_ruser(998) <= \<const0>\;
  s_axi_ruser(997) <= \<const0>\;
  s_axi_ruser(996) <= \<const0>\;
  s_axi_ruser(995) <= \<const0>\;
  s_axi_ruser(994) <= \<const0>\;
  s_axi_ruser(993) <= \<const0>\;
  s_axi_ruser(992) <= \<const0>\;
  s_axi_ruser(991) <= \<const0>\;
  s_axi_ruser(990) <= \<const0>\;
  s_axi_ruser(989) <= \<const0>\;
  s_axi_ruser(988) <= \<const0>\;
  s_axi_ruser(987) <= \<const0>\;
  s_axi_ruser(986) <= \<const0>\;
  s_axi_ruser(985) <= \<const0>\;
  s_axi_ruser(984) <= \<const0>\;
  s_axi_ruser(983) <= \<const0>\;
  s_axi_ruser(982) <= \<const0>\;
  s_axi_ruser(981) <= \<const0>\;
  s_axi_ruser(980) <= \<const0>\;
  s_axi_ruser(979) <= \<const0>\;
  s_axi_ruser(978) <= \<const0>\;
  s_axi_ruser(977) <= \<const0>\;
  s_axi_ruser(976) <= \<const0>\;
  s_axi_ruser(975) <= \<const0>\;
  s_axi_ruser(974) <= \<const0>\;
  s_axi_ruser(973) <= \<const0>\;
  s_axi_ruser(972) <= \<const0>\;
  s_axi_ruser(971) <= \<const0>\;
  s_axi_ruser(970) <= \<const0>\;
  s_axi_ruser(969) <= \<const0>\;
  s_axi_ruser(968) <= \<const0>\;
  s_axi_ruser(967) <= \<const0>\;
  s_axi_ruser(966) <= \<const0>\;
  s_axi_ruser(965) <= \<const0>\;
  s_axi_ruser(964) <= \<const0>\;
  s_axi_ruser(963) <= \<const0>\;
  s_axi_ruser(962) <= \<const0>\;
  s_axi_ruser(961) <= \<const0>\;
  s_axi_ruser(960) <= \<const0>\;
  s_axi_ruser(959) <= \<const0>\;
  s_axi_ruser(958) <= \<const0>\;
  s_axi_ruser(957) <= \<const0>\;
  s_axi_ruser(956) <= \<const0>\;
  s_axi_ruser(955) <= \<const0>\;
  s_axi_ruser(954) <= \<const0>\;
  s_axi_ruser(953) <= \<const0>\;
  s_axi_ruser(952) <= \<const0>\;
  s_axi_ruser(951) <= \<const0>\;
  s_axi_ruser(950) <= \<const0>\;
  s_axi_ruser(949) <= \<const0>\;
  s_axi_ruser(948) <= \<const0>\;
  s_axi_ruser(947) <= \<const0>\;
  s_axi_ruser(946) <= \<const0>\;
  s_axi_ruser(945) <= \<const0>\;
  s_axi_ruser(944) <= \<const0>\;
  s_axi_ruser(943) <= \<const0>\;
  s_axi_ruser(942) <= \<const0>\;
  s_axi_ruser(941) <= \<const0>\;
  s_axi_ruser(940) <= \<const0>\;
  s_axi_ruser(939) <= \<const0>\;
  s_axi_ruser(938) <= \<const0>\;
  s_axi_ruser(937) <= \<const0>\;
  s_axi_ruser(936) <= \<const0>\;
  s_axi_ruser(935) <= \<const0>\;
  s_axi_ruser(934) <= \<const0>\;
  s_axi_ruser(933) <= \<const0>\;
  s_axi_ruser(932) <= \<const0>\;
  s_axi_ruser(931) <= \<const0>\;
  s_axi_ruser(930) <= \<const0>\;
  s_axi_ruser(929) <= \<const0>\;
  s_axi_ruser(928) <= \<const0>\;
  s_axi_ruser(927) <= \<const0>\;
  s_axi_ruser(926) <= \<const0>\;
  s_axi_ruser(925) <= \<const0>\;
  s_axi_ruser(924) <= \<const0>\;
  s_axi_ruser(923) <= \<const0>\;
  s_axi_ruser(922) <= \<const0>\;
  s_axi_ruser(921) <= \<const0>\;
  s_axi_ruser(920) <= \<const0>\;
  s_axi_ruser(919) <= \<const0>\;
  s_axi_ruser(918) <= \<const0>\;
  s_axi_ruser(917) <= \<const0>\;
  s_axi_ruser(916) <= \<const0>\;
  s_axi_ruser(915) <= \<const0>\;
  s_axi_ruser(914) <= \<const0>\;
  s_axi_ruser(913) <= \<const0>\;
  s_axi_ruser(912) <= \<const0>\;
  s_axi_ruser(911) <= \<const0>\;
  s_axi_ruser(910) <= \<const0>\;
  s_axi_ruser(909) <= \<const0>\;
  s_axi_ruser(908) <= \<const0>\;
  s_axi_ruser(907) <= \<const0>\;
  s_axi_ruser(906) <= \<const0>\;
  s_axi_ruser(905) <= \<const0>\;
  s_axi_ruser(904) <= \<const0>\;
  s_axi_ruser(903) <= \<const0>\;
  s_axi_ruser(902) <= \<const0>\;
  s_axi_ruser(901) <= \<const0>\;
  s_axi_ruser(900) <= \<const0>\;
  s_axi_ruser(899) <= \<const0>\;
  s_axi_ruser(898) <= \<const0>\;
  s_axi_ruser(897) <= \<const0>\;
  s_axi_ruser(896) <= \<const0>\;
  s_axi_ruser(895) <= \<const0>\;
  s_axi_ruser(894) <= \<const0>\;
  s_axi_ruser(893) <= \<const0>\;
  s_axi_ruser(892) <= \<const0>\;
  s_axi_ruser(891) <= \<const0>\;
  s_axi_ruser(890) <= \<const0>\;
  s_axi_ruser(889) <= \<const0>\;
  s_axi_ruser(888) <= \<const0>\;
  s_axi_ruser(887) <= \<const0>\;
  s_axi_ruser(886) <= \<const0>\;
  s_axi_ruser(885) <= \<const0>\;
  s_axi_ruser(884) <= \<const0>\;
  s_axi_ruser(883) <= \<const0>\;
  s_axi_ruser(882) <= \<const0>\;
  s_axi_ruser(881) <= \<const0>\;
  s_axi_ruser(880) <= \<const0>\;
  s_axi_ruser(879) <= \<const0>\;
  s_axi_ruser(878) <= \<const0>\;
  s_axi_ruser(877) <= \<const0>\;
  s_axi_ruser(876) <= \<const0>\;
  s_axi_ruser(875) <= \<const0>\;
  s_axi_ruser(874) <= \<const0>\;
  s_axi_ruser(873) <= \<const0>\;
  s_axi_ruser(872) <= \<const0>\;
  s_axi_ruser(871) <= \<const0>\;
  s_axi_ruser(870) <= \<const0>\;
  s_axi_ruser(869) <= \<const0>\;
  s_axi_ruser(868) <= \<const0>\;
  s_axi_ruser(867) <= \<const0>\;
  s_axi_ruser(866) <= \<const0>\;
  s_axi_ruser(865) <= \<const0>\;
  s_axi_ruser(864) <= \<const0>\;
  s_axi_ruser(863) <= \<const0>\;
  s_axi_ruser(862) <= \<const0>\;
  s_axi_ruser(861) <= \<const0>\;
  s_axi_ruser(860) <= \<const0>\;
  s_axi_ruser(859) <= \<const0>\;
  s_axi_ruser(858) <= \<const0>\;
  s_axi_ruser(857) <= \<const0>\;
  s_axi_ruser(856) <= \<const0>\;
  s_axi_ruser(855) <= \<const0>\;
  s_axi_ruser(854) <= \<const0>\;
  s_axi_ruser(853) <= \<const0>\;
  s_axi_ruser(852) <= \<const0>\;
  s_axi_ruser(851) <= \<const0>\;
  s_axi_ruser(850) <= \<const0>\;
  s_axi_ruser(849) <= \<const0>\;
  s_axi_ruser(848) <= \<const0>\;
  s_axi_ruser(847) <= \<const0>\;
  s_axi_ruser(846) <= \<const0>\;
  s_axi_ruser(845) <= \<const0>\;
  s_axi_ruser(844) <= \<const0>\;
  s_axi_ruser(843) <= \<const0>\;
  s_axi_ruser(842) <= \<const0>\;
  s_axi_ruser(841) <= \<const0>\;
  s_axi_ruser(840) <= \<const0>\;
  s_axi_ruser(839) <= \<const0>\;
  s_axi_ruser(838) <= \<const0>\;
  s_axi_ruser(837) <= \<const0>\;
  s_axi_ruser(836) <= \<const0>\;
  s_axi_ruser(835) <= \<const0>\;
  s_axi_ruser(834) <= \<const0>\;
  s_axi_ruser(833) <= \<const0>\;
  s_axi_ruser(832) <= \<const0>\;
  s_axi_ruser(831) <= \<const0>\;
  s_axi_ruser(830) <= \<const0>\;
  s_axi_ruser(829) <= \<const0>\;
  s_axi_ruser(828) <= \<const0>\;
  s_axi_ruser(827) <= \<const0>\;
  s_axi_ruser(826) <= \<const0>\;
  s_axi_ruser(825) <= \<const0>\;
  s_axi_ruser(824) <= \<const0>\;
  s_axi_ruser(823) <= \<const0>\;
  s_axi_ruser(822) <= \<const0>\;
  s_axi_ruser(821) <= \<const0>\;
  s_axi_ruser(820) <= \<const0>\;
  s_axi_ruser(819) <= \<const0>\;
  s_axi_ruser(818) <= \<const0>\;
  s_axi_ruser(817) <= \<const0>\;
  s_axi_ruser(816) <= \<const0>\;
  s_axi_ruser(815) <= \<const0>\;
  s_axi_ruser(814) <= \<const0>\;
  s_axi_ruser(813) <= \<const0>\;
  s_axi_ruser(812) <= \<const0>\;
  s_axi_ruser(811) <= \<const0>\;
  s_axi_ruser(810) <= \<const0>\;
  s_axi_ruser(809) <= \<const0>\;
  s_axi_ruser(808) <= \<const0>\;
  s_axi_ruser(807) <= \<const0>\;
  s_axi_ruser(806) <= \<const0>\;
  s_axi_ruser(805) <= \<const0>\;
  s_axi_ruser(804) <= \<const0>\;
  s_axi_ruser(803) <= \<const0>\;
  s_axi_ruser(802) <= \<const0>\;
  s_axi_ruser(801) <= \<const0>\;
  s_axi_ruser(800) <= \<const0>\;
  s_axi_ruser(799) <= \<const0>\;
  s_axi_ruser(798) <= \<const0>\;
  s_axi_ruser(797) <= \<const0>\;
  s_axi_ruser(796) <= \<const0>\;
  s_axi_ruser(795) <= \<const0>\;
  s_axi_ruser(794) <= \<const0>\;
  s_axi_ruser(793) <= \<const0>\;
  s_axi_ruser(792) <= \<const0>\;
  s_axi_ruser(791) <= \<const0>\;
  s_axi_ruser(790) <= \<const0>\;
  s_axi_ruser(789) <= \<const0>\;
  s_axi_ruser(788) <= \<const0>\;
  s_axi_ruser(787) <= \<const0>\;
  s_axi_ruser(786) <= \<const0>\;
  s_axi_ruser(785) <= \<const0>\;
  s_axi_ruser(784) <= \<const0>\;
  s_axi_ruser(783) <= \<const0>\;
  s_axi_ruser(782) <= \<const0>\;
  s_axi_ruser(781) <= \<const0>\;
  s_axi_ruser(780) <= \<const0>\;
  s_axi_ruser(779) <= \<const0>\;
  s_axi_ruser(778) <= \<const0>\;
  s_axi_ruser(777) <= \<const0>\;
  s_axi_ruser(776) <= \<const0>\;
  s_axi_ruser(775) <= \<const0>\;
  s_axi_ruser(774) <= \<const0>\;
  s_axi_ruser(773) <= \<const0>\;
  s_axi_ruser(772) <= \<const0>\;
  s_axi_ruser(771) <= \<const0>\;
  s_axi_ruser(770) <= \<const0>\;
  s_axi_ruser(769) <= \<const0>\;
  s_axi_ruser(768) <= \<const0>\;
  s_axi_ruser(767) <= \<const0>\;
  s_axi_ruser(766) <= \<const0>\;
  s_axi_ruser(765) <= \<const0>\;
  s_axi_ruser(764) <= \<const0>\;
  s_axi_ruser(763) <= \<const0>\;
  s_axi_ruser(762) <= \<const0>\;
  s_axi_ruser(761) <= \<const0>\;
  s_axi_ruser(760) <= \<const0>\;
  s_axi_ruser(759) <= \<const0>\;
  s_axi_ruser(758) <= \<const0>\;
  s_axi_ruser(757) <= \<const0>\;
  s_axi_ruser(756) <= \<const0>\;
  s_axi_ruser(755) <= \<const0>\;
  s_axi_ruser(754) <= \<const0>\;
  s_axi_ruser(753) <= \<const0>\;
  s_axi_ruser(752) <= \<const0>\;
  s_axi_ruser(751) <= \<const0>\;
  s_axi_ruser(750) <= \<const0>\;
  s_axi_ruser(749) <= \<const0>\;
  s_axi_ruser(748) <= \<const0>\;
  s_axi_ruser(747) <= \<const0>\;
  s_axi_ruser(746) <= \<const0>\;
  s_axi_ruser(745) <= \<const0>\;
  s_axi_ruser(744) <= \<const0>\;
  s_axi_ruser(743) <= \<const0>\;
  s_axi_ruser(742) <= \<const0>\;
  s_axi_ruser(741) <= \<const0>\;
  s_axi_ruser(740) <= \<const0>\;
  s_axi_ruser(739) <= \<const0>\;
  s_axi_ruser(738) <= \<const0>\;
  s_axi_ruser(737) <= \<const0>\;
  s_axi_ruser(736) <= \<const0>\;
  s_axi_ruser(735) <= \<const0>\;
  s_axi_ruser(734) <= \<const0>\;
  s_axi_ruser(733) <= \<const0>\;
  s_axi_ruser(732) <= \<const0>\;
  s_axi_ruser(731) <= \<const0>\;
  s_axi_ruser(730) <= \<const0>\;
  s_axi_ruser(729) <= \<const0>\;
  s_axi_ruser(728) <= \<const0>\;
  s_axi_ruser(727) <= \<const0>\;
  s_axi_ruser(726) <= \<const0>\;
  s_axi_ruser(725) <= \<const0>\;
  s_axi_ruser(724) <= \<const0>\;
  s_axi_ruser(723) <= \<const0>\;
  s_axi_ruser(722) <= \<const0>\;
  s_axi_ruser(721) <= \<const0>\;
  s_axi_ruser(720) <= \<const0>\;
  s_axi_ruser(719) <= \<const0>\;
  s_axi_ruser(718) <= \<const0>\;
  s_axi_ruser(717) <= \<const0>\;
  s_axi_ruser(716) <= \<const0>\;
  s_axi_ruser(715) <= \<const0>\;
  s_axi_ruser(714) <= \<const0>\;
  s_axi_ruser(713) <= \<const0>\;
  s_axi_ruser(712) <= \<const0>\;
  s_axi_ruser(711) <= \<const0>\;
  s_axi_ruser(710) <= \<const0>\;
  s_axi_ruser(709) <= \<const0>\;
  s_axi_ruser(708) <= \<const0>\;
  s_axi_ruser(707) <= \<const0>\;
  s_axi_ruser(706) <= \<const0>\;
  s_axi_ruser(705) <= \<const0>\;
  s_axi_ruser(704) <= \<const0>\;
  s_axi_ruser(703) <= \<const0>\;
  s_axi_ruser(702) <= \<const0>\;
  s_axi_ruser(701) <= \<const0>\;
  s_axi_ruser(700) <= \<const0>\;
  s_axi_ruser(699) <= \<const0>\;
  s_axi_ruser(698) <= \<const0>\;
  s_axi_ruser(697) <= \<const0>\;
  s_axi_ruser(696) <= \<const0>\;
  s_axi_ruser(695) <= \<const0>\;
  s_axi_ruser(694) <= \<const0>\;
  s_axi_ruser(693) <= \<const0>\;
  s_axi_ruser(692) <= \<const0>\;
  s_axi_ruser(691) <= \<const0>\;
  s_axi_ruser(690) <= \<const0>\;
  s_axi_ruser(689) <= \<const0>\;
  s_axi_ruser(688) <= \<const0>\;
  s_axi_ruser(687) <= \<const0>\;
  s_axi_ruser(686) <= \<const0>\;
  s_axi_ruser(685) <= \<const0>\;
  s_axi_ruser(684) <= \<const0>\;
  s_axi_ruser(683) <= \<const0>\;
  s_axi_ruser(682) <= \<const0>\;
  s_axi_ruser(681) <= \<const0>\;
  s_axi_ruser(680) <= \<const0>\;
  s_axi_ruser(679) <= \<const0>\;
  s_axi_ruser(678) <= \<const0>\;
  s_axi_ruser(677) <= \<const0>\;
  s_axi_ruser(676) <= \<const0>\;
  s_axi_ruser(675) <= \<const0>\;
  s_axi_ruser(674) <= \<const0>\;
  s_axi_ruser(673) <= \<const0>\;
  s_axi_ruser(672) <= \<const0>\;
  s_axi_ruser(671) <= \<const0>\;
  s_axi_ruser(670) <= \<const0>\;
  s_axi_ruser(669) <= \<const0>\;
  s_axi_ruser(668) <= \<const0>\;
  s_axi_ruser(667) <= \<const0>\;
  s_axi_ruser(666) <= \<const0>\;
  s_axi_ruser(665) <= \<const0>\;
  s_axi_ruser(664) <= \<const0>\;
  s_axi_ruser(663) <= \<const0>\;
  s_axi_ruser(662) <= \<const0>\;
  s_axi_ruser(661) <= \<const0>\;
  s_axi_ruser(660) <= \<const0>\;
  s_axi_ruser(659) <= \<const0>\;
  s_axi_ruser(658) <= \<const0>\;
  s_axi_ruser(657) <= \<const0>\;
  s_axi_ruser(656) <= \<const0>\;
  s_axi_ruser(655) <= \<const0>\;
  s_axi_ruser(654) <= \<const0>\;
  s_axi_ruser(653) <= \<const0>\;
  s_axi_ruser(652) <= \<const0>\;
  s_axi_ruser(651) <= \<const0>\;
  s_axi_ruser(650) <= \<const0>\;
  s_axi_ruser(649) <= \<const0>\;
  s_axi_ruser(648) <= \<const0>\;
  s_axi_ruser(647) <= \<const0>\;
  s_axi_ruser(646) <= \<const0>\;
  s_axi_ruser(645) <= \<const0>\;
  s_axi_ruser(644) <= \<const0>\;
  s_axi_ruser(643) <= \<const0>\;
  s_axi_ruser(642) <= \<const0>\;
  s_axi_ruser(641) <= \<const0>\;
  s_axi_ruser(640) <= \<const0>\;
  s_axi_ruser(639) <= \<const0>\;
  s_axi_ruser(638) <= \<const0>\;
  s_axi_ruser(637) <= \<const0>\;
  s_axi_ruser(636) <= \<const0>\;
  s_axi_ruser(635) <= \<const0>\;
  s_axi_ruser(634) <= \<const0>\;
  s_axi_ruser(633) <= \<const0>\;
  s_axi_ruser(632) <= \<const0>\;
  s_axi_ruser(631) <= \<const0>\;
  s_axi_ruser(630) <= \<const0>\;
  s_axi_ruser(629) <= \<const0>\;
  s_axi_ruser(628) <= \<const0>\;
  s_axi_ruser(627) <= \<const0>\;
  s_axi_ruser(626) <= \<const0>\;
  s_axi_ruser(625) <= \<const0>\;
  s_axi_ruser(624) <= \<const0>\;
  s_axi_ruser(623) <= \<const0>\;
  s_axi_ruser(622) <= \<const0>\;
  s_axi_ruser(621) <= \<const0>\;
  s_axi_ruser(620) <= \<const0>\;
  s_axi_ruser(619) <= \<const0>\;
  s_axi_ruser(618) <= \<const0>\;
  s_axi_ruser(617) <= \<const0>\;
  s_axi_ruser(616) <= \<const0>\;
  s_axi_ruser(615) <= \<const0>\;
  s_axi_ruser(614) <= \<const0>\;
  s_axi_ruser(613) <= \<const0>\;
  s_axi_ruser(612) <= \<const0>\;
  s_axi_ruser(611) <= \<const0>\;
  s_axi_ruser(610) <= \<const0>\;
  s_axi_ruser(609) <= \<const0>\;
  s_axi_ruser(608) <= \<const0>\;
  s_axi_ruser(607) <= \<const0>\;
  s_axi_ruser(606) <= \<const0>\;
  s_axi_ruser(605) <= \<const0>\;
  s_axi_ruser(604) <= \<const0>\;
  s_axi_ruser(603) <= \<const0>\;
  s_axi_ruser(602) <= \<const0>\;
  s_axi_ruser(601) <= \<const0>\;
  s_axi_ruser(600) <= \<const0>\;
  s_axi_ruser(599) <= \<const0>\;
  s_axi_ruser(598) <= \<const0>\;
  s_axi_ruser(597) <= \<const0>\;
  s_axi_ruser(596) <= \<const0>\;
  s_axi_ruser(595) <= \<const0>\;
  s_axi_ruser(594) <= \<const0>\;
  s_axi_ruser(593) <= \<const0>\;
  s_axi_ruser(592) <= \<const0>\;
  s_axi_ruser(591) <= \<const0>\;
  s_axi_ruser(590) <= \<const0>\;
  s_axi_ruser(589) <= \<const0>\;
  s_axi_ruser(588) <= \<const0>\;
  s_axi_ruser(587) <= \<const0>\;
  s_axi_ruser(586) <= \<const0>\;
  s_axi_ruser(585) <= \<const0>\;
  s_axi_ruser(584) <= \<const0>\;
  s_axi_ruser(583) <= \<const0>\;
  s_axi_ruser(582) <= \<const0>\;
  s_axi_ruser(581) <= \<const0>\;
  s_axi_ruser(580) <= \<const0>\;
  s_axi_ruser(579) <= \<const0>\;
  s_axi_ruser(578) <= \<const0>\;
  s_axi_ruser(577) <= \<const0>\;
  s_axi_ruser(576) <= \<const0>\;
  s_axi_ruser(575) <= \<const0>\;
  s_axi_ruser(574) <= \<const0>\;
  s_axi_ruser(573) <= \<const0>\;
  s_axi_ruser(572) <= \<const0>\;
  s_axi_ruser(571) <= \<const0>\;
  s_axi_ruser(570) <= \<const0>\;
  s_axi_ruser(569) <= \<const0>\;
  s_axi_ruser(568) <= \<const0>\;
  s_axi_ruser(567) <= \<const0>\;
  s_axi_ruser(566) <= \<const0>\;
  s_axi_ruser(565) <= \<const0>\;
  s_axi_ruser(564) <= \<const0>\;
  s_axi_ruser(563) <= \<const0>\;
  s_axi_ruser(562) <= \<const0>\;
  s_axi_ruser(561) <= \<const0>\;
  s_axi_ruser(560) <= \<const0>\;
  s_axi_ruser(559) <= \<const0>\;
  s_axi_ruser(558) <= \<const0>\;
  s_axi_ruser(557) <= \<const0>\;
  s_axi_ruser(556) <= \<const0>\;
  s_axi_ruser(555) <= \<const0>\;
  s_axi_ruser(554) <= \<const0>\;
  s_axi_ruser(553) <= \<const0>\;
  s_axi_ruser(552) <= \<const0>\;
  s_axi_ruser(551) <= \<const0>\;
  s_axi_ruser(550) <= \<const0>\;
  s_axi_ruser(549) <= \<const0>\;
  s_axi_ruser(548) <= \<const0>\;
  s_axi_ruser(547) <= \<const0>\;
  s_axi_ruser(546) <= \<const0>\;
  s_axi_ruser(545) <= \<const0>\;
  s_axi_ruser(544) <= \<const0>\;
  s_axi_ruser(543) <= \<const0>\;
  s_axi_ruser(542) <= \<const0>\;
  s_axi_ruser(541) <= \<const0>\;
  s_axi_ruser(540) <= \<const0>\;
  s_axi_ruser(539) <= \<const0>\;
  s_axi_ruser(538) <= \<const0>\;
  s_axi_ruser(537) <= \<const0>\;
  s_axi_ruser(536) <= \<const0>\;
  s_axi_ruser(535) <= \<const0>\;
  s_axi_ruser(534) <= \<const0>\;
  s_axi_ruser(533) <= \<const0>\;
  s_axi_ruser(532) <= \<const0>\;
  s_axi_ruser(531) <= \<const0>\;
  s_axi_ruser(530) <= \<const0>\;
  s_axi_ruser(529) <= \<const0>\;
  s_axi_ruser(528) <= \<const0>\;
  s_axi_ruser(527) <= \<const0>\;
  s_axi_ruser(526) <= \<const0>\;
  s_axi_ruser(525) <= \<const0>\;
  s_axi_ruser(524) <= \<const0>\;
  s_axi_ruser(523) <= \<const0>\;
  s_axi_ruser(522) <= \<const0>\;
  s_axi_ruser(521) <= \<const0>\;
  s_axi_ruser(520) <= \<const0>\;
  s_axi_ruser(519) <= \<const0>\;
  s_axi_ruser(518) <= \<const0>\;
  s_axi_ruser(517) <= \<const0>\;
  s_axi_ruser(516) <= \<const0>\;
  s_axi_ruser(515) <= \<const0>\;
  s_axi_ruser(514) <= \<const0>\;
  s_axi_ruser(513) <= \<const0>\;
  s_axi_ruser(512) <= \<const0>\;
  s_axi_ruser(511) <= \<const0>\;
  s_axi_ruser(510) <= \<const0>\;
  s_axi_ruser(509) <= \<const0>\;
  s_axi_ruser(508) <= \<const0>\;
  s_axi_ruser(507) <= \<const0>\;
  s_axi_ruser(506) <= \<const0>\;
  s_axi_ruser(505) <= \<const0>\;
  s_axi_ruser(504) <= \<const0>\;
  s_axi_ruser(503) <= \<const0>\;
  s_axi_ruser(502) <= \<const0>\;
  s_axi_ruser(501) <= \<const0>\;
  s_axi_ruser(500) <= \<const0>\;
  s_axi_ruser(499) <= \<const0>\;
  s_axi_ruser(498) <= \<const0>\;
  s_axi_ruser(497) <= \<const0>\;
  s_axi_ruser(496) <= \<const0>\;
  s_axi_ruser(495) <= \<const0>\;
  s_axi_ruser(494) <= \<const0>\;
  s_axi_ruser(493) <= \<const0>\;
  s_axi_ruser(492) <= \<const0>\;
  s_axi_ruser(491) <= \<const0>\;
  s_axi_ruser(490) <= \<const0>\;
  s_axi_ruser(489) <= \<const0>\;
  s_axi_ruser(488) <= \<const0>\;
  s_axi_ruser(487) <= \<const0>\;
  s_axi_ruser(486) <= \<const0>\;
  s_axi_ruser(485) <= \<const0>\;
  s_axi_ruser(484) <= \<const0>\;
  s_axi_ruser(483) <= \<const0>\;
  s_axi_ruser(482) <= \<const0>\;
  s_axi_ruser(481) <= \<const0>\;
  s_axi_ruser(480) <= \<const0>\;
  s_axi_ruser(479) <= \<const0>\;
  s_axi_ruser(478) <= \<const0>\;
  s_axi_ruser(477) <= \<const0>\;
  s_axi_ruser(476) <= \<const0>\;
  s_axi_ruser(475) <= \<const0>\;
  s_axi_ruser(474) <= \<const0>\;
  s_axi_ruser(473) <= \<const0>\;
  s_axi_ruser(472) <= \<const0>\;
  s_axi_ruser(471) <= \<const0>\;
  s_axi_ruser(470) <= \<const0>\;
  s_axi_ruser(469) <= \<const0>\;
  s_axi_ruser(468) <= \<const0>\;
  s_axi_ruser(467) <= \<const0>\;
  s_axi_ruser(466) <= \<const0>\;
  s_axi_ruser(465) <= \<const0>\;
  s_axi_ruser(464) <= \<const0>\;
  s_axi_ruser(463) <= \<const0>\;
  s_axi_ruser(462) <= \<const0>\;
  s_axi_ruser(461) <= \<const0>\;
  s_axi_ruser(460) <= \<const0>\;
  s_axi_ruser(459) <= \<const0>\;
  s_axi_ruser(458) <= \<const0>\;
  s_axi_ruser(457) <= \<const0>\;
  s_axi_ruser(456) <= \<const0>\;
  s_axi_ruser(455) <= \<const0>\;
  s_axi_ruser(454) <= \<const0>\;
  s_axi_ruser(453) <= \<const0>\;
  s_axi_ruser(452) <= \<const0>\;
  s_axi_ruser(451) <= \<const0>\;
  s_axi_ruser(450) <= \<const0>\;
  s_axi_ruser(449) <= \<const0>\;
  s_axi_ruser(448) <= \<const0>\;
  s_axi_ruser(447) <= \<const0>\;
  s_axi_ruser(446) <= \<const0>\;
  s_axi_ruser(445) <= \<const0>\;
  s_axi_ruser(444) <= \<const0>\;
  s_axi_ruser(443) <= \<const0>\;
  s_axi_ruser(442) <= \<const0>\;
  s_axi_ruser(441) <= \<const0>\;
  s_axi_ruser(440) <= \<const0>\;
  s_axi_ruser(439) <= \<const0>\;
  s_axi_ruser(438) <= \<const0>\;
  s_axi_ruser(437) <= \<const0>\;
  s_axi_ruser(436) <= \<const0>\;
  s_axi_ruser(435) <= \<const0>\;
  s_axi_ruser(434) <= \<const0>\;
  s_axi_ruser(433) <= \<const0>\;
  s_axi_ruser(432) <= \<const0>\;
  s_axi_ruser(431) <= \<const0>\;
  s_axi_ruser(430) <= \<const0>\;
  s_axi_ruser(429) <= \<const0>\;
  s_axi_ruser(428) <= \<const0>\;
  s_axi_ruser(427) <= \<const0>\;
  s_axi_ruser(426) <= \<const0>\;
  s_axi_ruser(425) <= \<const0>\;
  s_axi_ruser(424) <= \<const0>\;
  s_axi_ruser(423) <= \<const0>\;
  s_axi_ruser(422) <= \<const0>\;
  s_axi_ruser(421) <= \<const0>\;
  s_axi_ruser(420) <= \<const0>\;
  s_axi_ruser(419) <= \<const0>\;
  s_axi_ruser(418) <= \<const0>\;
  s_axi_ruser(417) <= \<const0>\;
  s_axi_ruser(416) <= \<const0>\;
  s_axi_ruser(415) <= \<const0>\;
  s_axi_ruser(414) <= \<const0>\;
  s_axi_ruser(413) <= \<const0>\;
  s_axi_ruser(412) <= \<const0>\;
  s_axi_ruser(411) <= \<const0>\;
  s_axi_ruser(410) <= \<const0>\;
  s_axi_ruser(409) <= \<const0>\;
  s_axi_ruser(408) <= \<const0>\;
  s_axi_ruser(407) <= \<const0>\;
  s_axi_ruser(406) <= \<const0>\;
  s_axi_ruser(405) <= \<const0>\;
  s_axi_ruser(404) <= \<const0>\;
  s_axi_ruser(403) <= \<const0>\;
  s_axi_ruser(402) <= \<const0>\;
  s_axi_ruser(401) <= \<const0>\;
  s_axi_ruser(400) <= \<const0>\;
  s_axi_ruser(399) <= \<const0>\;
  s_axi_ruser(398) <= \<const0>\;
  s_axi_ruser(397) <= \<const0>\;
  s_axi_ruser(396) <= \<const0>\;
  s_axi_ruser(395) <= \<const0>\;
  s_axi_ruser(394) <= \<const0>\;
  s_axi_ruser(393) <= \<const0>\;
  s_axi_ruser(392) <= \<const0>\;
  s_axi_ruser(391) <= \<const0>\;
  s_axi_ruser(390) <= \<const0>\;
  s_axi_ruser(389) <= \<const0>\;
  s_axi_ruser(388) <= \<const0>\;
  s_axi_ruser(387) <= \<const0>\;
  s_axi_ruser(386) <= \<const0>\;
  s_axi_ruser(385) <= \<const0>\;
  s_axi_ruser(384) <= \<const0>\;
  s_axi_ruser(383) <= \<const0>\;
  s_axi_ruser(382) <= \<const0>\;
  s_axi_ruser(381) <= \<const0>\;
  s_axi_ruser(380) <= \<const0>\;
  s_axi_ruser(379) <= \<const0>\;
  s_axi_ruser(378) <= \<const0>\;
  s_axi_ruser(377) <= \<const0>\;
  s_axi_ruser(376) <= \<const0>\;
  s_axi_ruser(375) <= \<const0>\;
  s_axi_ruser(374) <= \<const0>\;
  s_axi_ruser(373) <= \<const0>\;
  s_axi_ruser(372) <= \<const0>\;
  s_axi_ruser(371) <= \<const0>\;
  s_axi_ruser(370) <= \<const0>\;
  s_axi_ruser(369) <= \<const0>\;
  s_axi_ruser(368) <= \<const0>\;
  s_axi_ruser(367) <= \<const0>\;
  s_axi_ruser(366) <= \<const0>\;
  s_axi_ruser(365) <= \<const0>\;
  s_axi_ruser(364) <= \<const0>\;
  s_axi_ruser(363) <= \<const0>\;
  s_axi_ruser(362) <= \<const0>\;
  s_axi_ruser(361) <= \<const0>\;
  s_axi_ruser(360) <= \<const0>\;
  s_axi_ruser(359) <= \<const0>\;
  s_axi_ruser(358) <= \<const0>\;
  s_axi_ruser(357) <= \<const0>\;
  s_axi_ruser(356) <= \<const0>\;
  s_axi_ruser(355) <= \<const0>\;
  s_axi_ruser(354) <= \<const0>\;
  s_axi_ruser(353) <= \<const0>\;
  s_axi_ruser(352) <= \<const0>\;
  s_axi_ruser(351) <= \<const0>\;
  s_axi_ruser(350) <= \<const0>\;
  s_axi_ruser(349) <= \<const0>\;
  s_axi_ruser(348) <= \<const0>\;
  s_axi_ruser(347) <= \<const0>\;
  s_axi_ruser(346) <= \<const0>\;
  s_axi_ruser(345) <= \<const0>\;
  s_axi_ruser(344) <= \<const0>\;
  s_axi_ruser(343) <= \<const0>\;
  s_axi_ruser(342) <= \<const0>\;
  s_axi_ruser(341) <= \<const0>\;
  s_axi_ruser(340) <= \<const0>\;
  s_axi_ruser(339) <= \<const0>\;
  s_axi_ruser(338) <= \<const0>\;
  s_axi_ruser(337) <= \<const0>\;
  s_axi_ruser(336) <= \<const0>\;
  s_axi_ruser(335) <= \<const0>\;
  s_axi_ruser(334) <= \<const0>\;
  s_axi_ruser(333) <= \<const0>\;
  s_axi_ruser(332) <= \<const0>\;
  s_axi_ruser(331) <= \<const0>\;
  s_axi_ruser(330) <= \<const0>\;
  s_axi_ruser(329) <= \<const0>\;
  s_axi_ruser(328) <= \<const0>\;
  s_axi_ruser(327) <= \<const0>\;
  s_axi_ruser(326) <= \<const0>\;
  s_axi_ruser(325) <= \<const0>\;
  s_axi_ruser(324) <= \<const0>\;
  s_axi_ruser(323) <= \<const0>\;
  s_axi_ruser(322) <= \<const0>\;
  s_axi_ruser(321) <= \<const0>\;
  s_axi_ruser(320) <= \<const0>\;
  s_axi_ruser(319) <= \<const0>\;
  s_axi_ruser(318) <= \<const0>\;
  s_axi_ruser(317) <= \<const0>\;
  s_axi_ruser(316) <= \<const0>\;
  s_axi_ruser(315) <= \<const0>\;
  s_axi_ruser(314) <= \<const0>\;
  s_axi_ruser(313) <= \<const0>\;
  s_axi_ruser(312) <= \<const0>\;
  s_axi_ruser(311) <= \<const0>\;
  s_axi_ruser(310) <= \<const0>\;
  s_axi_ruser(309) <= \<const0>\;
  s_axi_ruser(308) <= \<const0>\;
  s_axi_ruser(307) <= \<const0>\;
  s_axi_ruser(306) <= \<const0>\;
  s_axi_ruser(305) <= \<const0>\;
  s_axi_ruser(304) <= \<const0>\;
  s_axi_ruser(303) <= \<const0>\;
  s_axi_ruser(302) <= \<const0>\;
  s_axi_ruser(301) <= \<const0>\;
  s_axi_ruser(300) <= \<const0>\;
  s_axi_ruser(299) <= \<const0>\;
  s_axi_ruser(298) <= \<const0>\;
  s_axi_ruser(297) <= \<const0>\;
  s_axi_ruser(296) <= \<const0>\;
  s_axi_ruser(295) <= \<const0>\;
  s_axi_ruser(294) <= \<const0>\;
  s_axi_ruser(293) <= \<const0>\;
  s_axi_ruser(292) <= \<const0>\;
  s_axi_ruser(291) <= \<const0>\;
  s_axi_ruser(290) <= \<const0>\;
  s_axi_ruser(289) <= \<const0>\;
  s_axi_ruser(288) <= \<const0>\;
  s_axi_ruser(287) <= \<const0>\;
  s_axi_ruser(286) <= \<const0>\;
  s_axi_ruser(285) <= \<const0>\;
  s_axi_ruser(284) <= \<const0>\;
  s_axi_ruser(283) <= \<const0>\;
  s_axi_ruser(282) <= \<const0>\;
  s_axi_ruser(281) <= \<const0>\;
  s_axi_ruser(280) <= \<const0>\;
  s_axi_ruser(279) <= \<const0>\;
  s_axi_ruser(278) <= \<const0>\;
  s_axi_ruser(277) <= \<const0>\;
  s_axi_ruser(276) <= \<const0>\;
  s_axi_ruser(275) <= \<const0>\;
  s_axi_ruser(274) <= \<const0>\;
  s_axi_ruser(273) <= \<const0>\;
  s_axi_ruser(272) <= \<const0>\;
  s_axi_ruser(271) <= \<const0>\;
  s_axi_ruser(270) <= \<const0>\;
  s_axi_ruser(269) <= \<const0>\;
  s_axi_ruser(268) <= \<const0>\;
  s_axi_ruser(267) <= \<const0>\;
  s_axi_ruser(266) <= \<const0>\;
  s_axi_ruser(265) <= \<const0>\;
  s_axi_ruser(264) <= \<const0>\;
  s_axi_ruser(263) <= \<const0>\;
  s_axi_ruser(262) <= \<const0>\;
  s_axi_ruser(261) <= \<const0>\;
  s_axi_ruser(260) <= \<const0>\;
  s_axi_ruser(259) <= \<const0>\;
  s_axi_ruser(258) <= \<const0>\;
  s_axi_ruser(257) <= \<const0>\;
  s_axi_ruser(256) <= \<const0>\;
  s_axi_ruser(255) <= \<const0>\;
  s_axi_ruser(254) <= \<const0>\;
  s_axi_ruser(253) <= \<const0>\;
  s_axi_ruser(252) <= \<const0>\;
  s_axi_ruser(251) <= \<const0>\;
  s_axi_ruser(250) <= \<const0>\;
  s_axi_ruser(249) <= \<const0>\;
  s_axi_ruser(248) <= \<const0>\;
  s_axi_ruser(247) <= \<const0>\;
  s_axi_ruser(246) <= \<const0>\;
  s_axi_ruser(245) <= \<const0>\;
  s_axi_ruser(244) <= \<const0>\;
  s_axi_ruser(243) <= \<const0>\;
  s_axi_ruser(242) <= \<const0>\;
  s_axi_ruser(241) <= \<const0>\;
  s_axi_ruser(240) <= \<const0>\;
  s_axi_ruser(239) <= \<const0>\;
  s_axi_ruser(238) <= \<const0>\;
  s_axi_ruser(237) <= \<const0>\;
  s_axi_ruser(236) <= \<const0>\;
  s_axi_ruser(235) <= \<const0>\;
  s_axi_ruser(234) <= \<const0>\;
  s_axi_ruser(233) <= \<const0>\;
  s_axi_ruser(232) <= \<const0>\;
  s_axi_ruser(231) <= \<const0>\;
  s_axi_ruser(230) <= \<const0>\;
  s_axi_ruser(229) <= \<const0>\;
  s_axi_ruser(228) <= \<const0>\;
  s_axi_ruser(227) <= \<const0>\;
  s_axi_ruser(226) <= \<const0>\;
  s_axi_ruser(225) <= \<const0>\;
  s_axi_ruser(224) <= \<const0>\;
  s_axi_ruser(223) <= \<const0>\;
  s_axi_ruser(222) <= \<const0>\;
  s_axi_ruser(221) <= \<const0>\;
  s_axi_ruser(220) <= \<const0>\;
  s_axi_ruser(219) <= \<const0>\;
  s_axi_ruser(218) <= \<const0>\;
  s_axi_ruser(217) <= \<const0>\;
  s_axi_ruser(216) <= \<const0>\;
  s_axi_ruser(215) <= \<const0>\;
  s_axi_ruser(214) <= \<const0>\;
  s_axi_ruser(213) <= \<const0>\;
  s_axi_ruser(212) <= \<const0>\;
  s_axi_ruser(211) <= \<const0>\;
  s_axi_ruser(210) <= \<const0>\;
  s_axi_ruser(209) <= \<const0>\;
  s_axi_ruser(208) <= \<const0>\;
  s_axi_ruser(207) <= \<const0>\;
  s_axi_ruser(206) <= \<const0>\;
  s_axi_ruser(205) <= \<const0>\;
  s_axi_ruser(204) <= \<const0>\;
  s_axi_ruser(203) <= \<const0>\;
  s_axi_ruser(202) <= \<const0>\;
  s_axi_ruser(201) <= \<const0>\;
  s_axi_ruser(200) <= \<const0>\;
  s_axi_ruser(199) <= \<const0>\;
  s_axi_ruser(198) <= \<const0>\;
  s_axi_ruser(197) <= \<const0>\;
  s_axi_ruser(196) <= \<const0>\;
  s_axi_ruser(195) <= \<const0>\;
  s_axi_ruser(194) <= \<const0>\;
  s_axi_ruser(193) <= \<const0>\;
  s_axi_ruser(192) <= \<const0>\;
  s_axi_ruser(191) <= \<const0>\;
  s_axi_ruser(190) <= \<const0>\;
  s_axi_ruser(189) <= \<const0>\;
  s_axi_ruser(188) <= \<const0>\;
  s_axi_ruser(187) <= \<const0>\;
  s_axi_ruser(186) <= \<const0>\;
  s_axi_ruser(185) <= \<const0>\;
  s_axi_ruser(184) <= \<const0>\;
  s_axi_ruser(183) <= \<const0>\;
  s_axi_ruser(182) <= \<const0>\;
  s_axi_ruser(181) <= \<const0>\;
  s_axi_ruser(180) <= \<const0>\;
  s_axi_ruser(179) <= \<const0>\;
  s_axi_ruser(178) <= \<const0>\;
  s_axi_ruser(177) <= \<const0>\;
  s_axi_ruser(176) <= \<const0>\;
  s_axi_ruser(175) <= \<const0>\;
  s_axi_ruser(174) <= \<const0>\;
  s_axi_ruser(173) <= \<const0>\;
  s_axi_ruser(172) <= \<const0>\;
  s_axi_ruser(171) <= \<const0>\;
  s_axi_ruser(170) <= \<const0>\;
  s_axi_ruser(169) <= \<const0>\;
  s_axi_ruser(168) <= \<const0>\;
  s_axi_ruser(167) <= \<const0>\;
  s_axi_ruser(166) <= \<const0>\;
  s_axi_ruser(165) <= \<const0>\;
  s_axi_ruser(164) <= \<const0>\;
  s_axi_ruser(163) <= \<const0>\;
  s_axi_ruser(162) <= \<const0>\;
  s_axi_ruser(161) <= \<const0>\;
  s_axi_ruser(160) <= \<const0>\;
  s_axi_ruser(159) <= \<const0>\;
  s_axi_ruser(158) <= \<const0>\;
  s_axi_ruser(157) <= \<const0>\;
  s_axi_ruser(156) <= \<const0>\;
  s_axi_ruser(155) <= \<const0>\;
  s_axi_ruser(154) <= \<const0>\;
  s_axi_ruser(153) <= \<const0>\;
  s_axi_ruser(152) <= \<const0>\;
  s_axi_ruser(151) <= \<const0>\;
  s_axi_ruser(150) <= \<const0>\;
  s_axi_ruser(149) <= \<const0>\;
  s_axi_ruser(148) <= \<const0>\;
  s_axi_ruser(147) <= \<const0>\;
  s_axi_ruser(146) <= \<const0>\;
  s_axi_ruser(145) <= \<const0>\;
  s_axi_ruser(144) <= \<const0>\;
  s_axi_ruser(143) <= \<const0>\;
  s_axi_ruser(142) <= \<const0>\;
  s_axi_ruser(141) <= \<const0>\;
  s_axi_ruser(140) <= \<const0>\;
  s_axi_ruser(139) <= \<const0>\;
  s_axi_ruser(138) <= \<const0>\;
  s_axi_ruser(137) <= \<const0>\;
  s_axi_ruser(136) <= \<const0>\;
  s_axi_ruser(135) <= \<const0>\;
  s_axi_ruser(134) <= \<const0>\;
  s_axi_ruser(133) <= \<const0>\;
  s_axi_ruser(132) <= \<const0>\;
  s_axi_ruser(131) <= \<const0>\;
  s_axi_ruser(130) <= \<const0>\;
  s_axi_ruser(129) <= \<const0>\;
  s_axi_ruser(128) <= \<const0>\;
  s_axi_ruser(127) <= \<const0>\;
  s_axi_ruser(126) <= \<const0>\;
  s_axi_ruser(125) <= \<const0>\;
  s_axi_ruser(124) <= \<const0>\;
  s_axi_ruser(123) <= \<const0>\;
  s_axi_ruser(122) <= \<const0>\;
  s_axi_ruser(121) <= \<const0>\;
  s_axi_ruser(120) <= \<const0>\;
  s_axi_ruser(119) <= \<const0>\;
  s_axi_ruser(118) <= \<const0>\;
  s_axi_ruser(117) <= \<const0>\;
  s_axi_ruser(116) <= \<const0>\;
  s_axi_ruser(115) <= \<const0>\;
  s_axi_ruser(114) <= \<const0>\;
  s_axi_ruser(113) <= \<const0>\;
  s_axi_ruser(112) <= \<const0>\;
  s_axi_ruser(111) <= \<const0>\;
  s_axi_ruser(110) <= \<const0>\;
  s_axi_ruser(109) <= \<const0>\;
  s_axi_ruser(108) <= \<const0>\;
  s_axi_ruser(107) <= \<const0>\;
  s_axi_ruser(106) <= \<const0>\;
  s_axi_ruser(105) <= \<const0>\;
  s_axi_ruser(104) <= \<const0>\;
  s_axi_ruser(103) <= \<const0>\;
  s_axi_ruser(102) <= \<const0>\;
  s_axi_ruser(101) <= \<const0>\;
  s_axi_ruser(100) <= \<const0>\;
  s_axi_ruser(99) <= \<const0>\;
  s_axi_ruser(98) <= \<const0>\;
  s_axi_ruser(97) <= \<const0>\;
  s_axi_ruser(96) <= \<const0>\;
  s_axi_ruser(95) <= \<const0>\;
  s_axi_ruser(94) <= \<const0>\;
  s_axi_ruser(93) <= \<const0>\;
  s_axi_ruser(92) <= \<const0>\;
  s_axi_ruser(91) <= \<const0>\;
  s_axi_ruser(90) <= \<const0>\;
  s_axi_ruser(89) <= \<const0>\;
  s_axi_ruser(88) <= \<const0>\;
  s_axi_ruser(87) <= \<const0>\;
  s_axi_ruser(86) <= \<const0>\;
  s_axi_ruser(85) <= \<const0>\;
  s_axi_ruser(84) <= \<const0>\;
  s_axi_ruser(83) <= \<const0>\;
  s_axi_ruser(82) <= \<const0>\;
  s_axi_ruser(81) <= \<const0>\;
  s_axi_ruser(80) <= \<const0>\;
  s_axi_ruser(79) <= \<const0>\;
  s_axi_ruser(78) <= \<const0>\;
  s_axi_ruser(77) <= \<const0>\;
  s_axi_ruser(76) <= \<const0>\;
  s_axi_ruser(75) <= \<const0>\;
  s_axi_ruser(74) <= \<const0>\;
  s_axi_ruser(73) <= \<const0>\;
  s_axi_ruser(72) <= \<const0>\;
  s_axi_ruser(71) <= \<const0>\;
  s_axi_ruser(70) <= \<const0>\;
  s_axi_ruser(69) <= \<const0>\;
  s_axi_ruser(68) <= \<const0>\;
  s_axi_ruser(67) <= \<const0>\;
  s_axi_ruser(66) <= \<const0>\;
  s_axi_ruser(65) <= \<const0>\;
  s_axi_ruser(64) <= \<const0>\;
  s_axi_ruser(63) <= \<const0>\;
  s_axi_ruser(62) <= \<const0>\;
  s_axi_ruser(61) <= \<const0>\;
  s_axi_ruser(60) <= \<const0>\;
  s_axi_ruser(59) <= \<const0>\;
  s_axi_ruser(58) <= \<const0>\;
  s_axi_ruser(57) <= \<const0>\;
  s_axi_ruser(56) <= \<const0>\;
  s_axi_ruser(55) <= \<const0>\;
  s_axi_ruser(54) <= \<const0>\;
  s_axi_ruser(53) <= \<const0>\;
  s_axi_ruser(52) <= \<const0>\;
  s_axi_ruser(51) <= \<const0>\;
  s_axi_ruser(50) <= \<const0>\;
  s_axi_ruser(49) <= \<const0>\;
  s_axi_ruser(48) <= \<const0>\;
  s_axi_ruser(47) <= \<const0>\;
  s_axi_ruser(46) <= \<const0>\;
  s_axi_ruser(45) <= \<const0>\;
  s_axi_ruser(44) <= \<const0>\;
  s_axi_ruser(43) <= \<const0>\;
  s_axi_ruser(42) <= \<const0>\;
  s_axi_ruser(41) <= \<const0>\;
  s_axi_ruser(40) <= \<const0>\;
  s_axi_ruser(39) <= \<const0>\;
  s_axi_ruser(38) <= \<const0>\;
  s_axi_ruser(37) <= \<const0>\;
  s_axi_ruser(36) <= \<const0>\;
  s_axi_ruser(35) <= \<const0>\;
  s_axi_ruser(34) <= \<const0>\;
  s_axi_ruser(33) <= \<const0>\;
  s_axi_ruser(32) <= \<const0>\;
  s_axi_ruser(31) <= \<const0>\;
  s_axi_ruser(30) <= \<const0>\;
  s_axi_ruser(29) <= \<const0>\;
  s_axi_ruser(28) <= \<const0>\;
  s_axi_ruser(27) <= \<const0>\;
  s_axi_ruser(26) <= \<const0>\;
  s_axi_ruser(25) <= \<const0>\;
  s_axi_ruser(24) <= \<const0>\;
  s_axi_ruser(23) <= \<const0>\;
  s_axi_ruser(22) <= \<const0>\;
  s_axi_ruser(21) <= \<const0>\;
  s_axi_ruser(20) <= \<const0>\;
  s_axi_ruser(19) <= \<const0>\;
  s_axi_ruser(18) <= \<const0>\;
  s_axi_ruser(17) <= \<const0>\;
  s_axi_ruser(16) <= \<const0>\;
  s_axi_ruser(15) <= \<const0>\;
  s_axi_ruser(14) <= \<const0>\;
  s_axi_ruser(13) <= \<const0>\;
  s_axi_ruser(12) <= \<const0>\;
  s_axi_ruser(11) <= \<const0>\;
  s_axi_ruser(10) <= \<const0>\;
  s_axi_ruser(9) <= \<const0>\;
  s_axi_ruser(8) <= \<const0>\;
  s_axi_ruser(7) <= \<const0>\;
  s_axi_ruser(6) <= \<const0>\;
  s_axi_ruser(5) <= \<const0>\;
  s_axi_ruser(4) <= \<const0>\;
  s_axi_ruser(3) <= \<const0>\;
  s_axi_ruser(2) <= \<const0>\;
  s_axi_ruser(1) <= \<const0>\;
  s_axi_ruser(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
areset_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => aresetn,
      O => areset_i_1_n_0
    );
areset_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => areset_i_1_n_0,
      Q => areset,
      R => '0'
    );
\gen_axilite_conv.axilite_conv_inst\: entity work.design_1_axi_smc_0_sc_si_converter_v1_0_9_axilite_conv
     port map (
      aclk => aclk,
      areset => areset,
      m_axi_araddr(7 downto 0) => \^m_axi_araddr\(7 downto 0),
      m_axi_arprot(2 downto 0) => m_axi_arprot(2 downto 0),
      m_axi_arready => m_axi_arready,
      m_axi_aruser(0) => \^m_axi_aruser\(2),
      m_axi_arvalid_i_reg_0 => m_axi_arvalid,
      m_axi_awaddr(7 downto 0) => \^m_axi_awaddr\(7 downto 0),
      m_axi_awready => m_axi_awready,
      m_axi_awvalid => m_axi_awvalid,
      m_axi_bready_i_reg_0 => m_axi_bready,
      m_axi_bresp(1 downto 0) => m_axi_bresp(1 downto 0),
      m_axi_bvalid => m_axi_bvalid,
      m_axi_rdata(31 downto 0) => m_axi_rdata(31 downto 0),
      m_axi_rready => m_axi_rready,
      m_axi_rresp(1 downto 0) => m_axi_rresp(1 downto 0),
      m_axi_rvalid => m_axi_rvalid,
      m_axi_wdata(31 downto 0) => m_axi_wdata(31 downto 0),
      m_axi_wready => m_axi_wready,
      m_axi_wstrb(3 downto 0) => m_axi_wstrb(3 downto 0),
      m_axi_wvalid => m_axi_wvalid,
      s_axi_araddr(7 downto 0) => s_axi_araddr(7 downto 0),
      s_axi_arlen(3 downto 0) => s_axi_arlen(3 downto 0),
      s_axi_arprot(2 downto 0) => s_axi_arprot(2 downto 0),
      s_axi_arready => s_axi_arready,
      s_axi_arsize(1 downto 0) => s_axi_arsize(1 downto 0),
      s_axi_arvalid => s_axi_arvalid,
      s_axi_awaddr(7 downto 0) => s_axi_awaddr(7 downto 0),
      s_axi_awready => s_axi_awready,
      s_axi_awsize(2 downto 0) => s_axi_awsize(2 downto 0),
      s_axi_awvalid => s_axi_awvalid,
      s_axi_bready => s_axi_bready,
      s_axi_bresp(1 downto 0) => s_axi_bresp(1 downto 0),
      s_axi_bvalid_i_reg_0 => s_axi_bvalid,
      s_axi_rdata(31 downto 0) => s_axi_rdata(31 downto 0),
      s_axi_rlast => s_axi_rlast,
      s_axi_rready => s_axi_rready,
      s_axi_rresp(1 downto 0) => s_axi_rresp(1 downto 0),
      s_axi_rvalid => s_axi_rvalid,
      s_axi_wdata(31 downto 0) => s_axi_wdata(31 downto 0),
      s_axi_wlast => s_axi_wlast,
      s_axi_wready => s_axi_wready,
      s_axi_wstrb(3 downto 0) => s_axi_wstrb(3 downto 0),
      s_axi_wvalid => s_axi_wvalid
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\ is
  port (
    aclk : in STD_LOGIC;
    aclken : in STD_LOGIC;
    connectivity : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_req : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 13 downto 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_recv : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 6 downto 0 )
  );
  attribute C_CONNECTIVITY : string;
  attribute C_CONNECTIVITY of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\ : entity is "2'b11";
  attribute C_M_PIPELINES : string;
  attribute C_M_PIPELINES of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\ : entity is "32'b00000000000000000000000000000000";
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\ : entity is 1;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\ : entity is 2;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\ : entity is 7;
  attribute C_S_LATENCY : string;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\ : entity is "32'b00000000000000000000000000000000";
  attribute C_S_PIPELINES : string;
  attribute C_S_PIPELINES of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\ : entity is "32'b00000000000000000000000000000000";
  attribute C_TESTING_MODE : integer;
  attribute C_TESTING_MODE of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\ : entity is 0;
  attribute K_MAX_INFO_WIDTH : integer;
  attribute K_MAX_INFO_WIDTH of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\ : entity is 1;
  attribute LP_LOG_NUM_SI : string;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\ : entity is "32'b00000000000000000000000000000001";
  attribute LP_MUX_IMPL : string;
  attribute LP_MUX_IMPL of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\ : entity is "32'b00000000000000000000000000000000";
  attribute LP_M_SC_SEL_MI_PIPELINE_DEPTH : string;
  attribute LP_M_SC_SEL_MI_PIPELINE_DEPTH of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\ : entity is "32'b00000000000000000000000000000000";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\ : entity is "sc_switchboard_v1_0_6_top";
end \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\ is
  signal \<const0>\ : STD_LOGIC;
  signal \^m_sc_payld\ : STD_LOGIC_VECTOR ( 6 downto 5 );
begin
  m_sc_info(1) <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(6 downto 5) <= \^m_sc_payld\(6 downto 5);
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  m_sc_req(1) <= \<const0>\;
  m_sc_req(0) <= \<const0>\;
  m_sc_send(1) <= \<const0>\;
  m_sc_send(0) <= \<const0>\;
  s_sc_recv(1) <= \<const0>\;
  s_sc_recv(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\gen_mi[0].inst_mux_payld\: entity work.\design_1_axi_smc_0_sc_util_v1_0_4_mux__parameterized1\
     port map (
      m_sc_payld(1 downto 0) => \^m_sc_payld\(6 downto 5),
      m_sc_recv(0) => m_sc_recv(1),
      s_sc_payld(1 downto 0) => s_sc_payld(13 downto 12)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\ is
  port (
    aclk : in STD_LOGIC;
    aclken : in STD_LOGIC;
    connectivity : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_req : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 105 downto 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_recv : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 52 downto 0 )
  );
  attribute C_CONNECTIVITY : string;
  attribute C_CONNECTIVITY of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\ : entity is "2'b11";
  attribute C_M_PIPELINES : string;
  attribute C_M_PIPELINES of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\ : entity is "32'b00000000000000000000000000000000";
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\ : entity is 1;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\ : entity is 2;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\ : entity is 53;
  attribute C_S_LATENCY : string;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\ : entity is "32'b00000000000000000000000000000000";
  attribute C_S_PIPELINES : string;
  attribute C_S_PIPELINES of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\ : entity is "32'b00000000000000000000000000000000";
  attribute C_TESTING_MODE : integer;
  attribute C_TESTING_MODE of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\ : entity is 0;
  attribute K_MAX_INFO_WIDTH : integer;
  attribute K_MAX_INFO_WIDTH of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\ : entity is 1;
  attribute LP_LOG_NUM_SI : string;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\ : entity is "32'b00000000000000000000000000000001";
  attribute LP_MUX_IMPL : string;
  attribute LP_MUX_IMPL of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\ : entity is "32'b00000000000000000000000000000000";
  attribute LP_M_SC_SEL_MI_PIPELINE_DEPTH : string;
  attribute LP_M_SC_SEL_MI_PIPELINE_DEPTH of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\ : entity is "32'b00000000000000000000000000000000";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\ : entity is "sc_switchboard_v1_0_6_top";
end \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\ is
  signal \<const0>\ : STD_LOGIC;
  signal \^m_sc_payld\ : STD_LOGIC_VECTOR ( 52 downto 18 );
begin
  m_sc_info(1) <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(52 downto 21) <= \^m_sc_payld\(52 downto 21);
  m_sc_payld(20) <= \<const0>\;
  m_sc_payld(19 downto 18) <= \^m_sc_payld\(19 downto 18);
  m_sc_payld(17) <= \<const0>\;
  m_sc_payld(16) <= \<const0>\;
  m_sc_payld(15) <= \<const0>\;
  m_sc_payld(14) <= \<const0>\;
  m_sc_payld(13) <= \<const0>\;
  m_sc_payld(12) <= \<const0>\;
  m_sc_payld(11) <= \<const0>\;
  m_sc_payld(10) <= \<const0>\;
  m_sc_payld(9) <= \<const0>\;
  m_sc_payld(8) <= \<const0>\;
  m_sc_payld(7) <= \<const0>\;
  m_sc_payld(6) <= \<const0>\;
  m_sc_payld(5) <= \<const0>\;
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  m_sc_req(1) <= \<const0>\;
  m_sc_req(0) <= \<const0>\;
  m_sc_send(1) <= \<const0>\;
  m_sc_send(0) <= \<const0>\;
  s_sc_recv(1) <= \<const0>\;
  s_sc_recv(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\gen_mi[0].inst_mux_payld\: entity work.\design_1_axi_smc_0_sc_util_v1_0_4_mux__parameterized3\
     port map (
      m_sc_payld(33 downto 2) => \^m_sc_payld\(52 downto 21),
      m_sc_payld(1 downto 0) => \^m_sc_payld\(19 downto 18),
      m_sc_recv(0) => m_sc_recv(1),
      s_sc_payld(33 downto 2) => s_sc_payld(105 downto 74),
      s_sc_payld(1 downto 0) => s_sc_payld(72 downto 71)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top is
  port (
    mep_identifier : in STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    aclken : in STD_LOGIC;
    aresetn : in STD_LOGIC;
    s_axi_awid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awuser : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    s_axi_awvalid : in STD_LOGIC;
    s_axi_awready : out STD_LOGIC;
    s_axi_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_wlast : in STD_LOGIC;
    s_axi_wuser : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    s_axi_wvalid : in STD_LOGIC;
    s_axi_wready : out STD_LOGIC;
    s_axi_bid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    s_axi_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_buser : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    s_axi_bvalid : out STD_LOGIC;
    s_axi_bready : in STD_LOGIC;
    s_axi_arid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    s_axi_araddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_aruser : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    s_axi_arvalid : in STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    s_axi_rid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    s_axi_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_rlast : out STD_LOGIC;
    s_axi_ruser : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    s_axi_rvalid : out STD_LOGIC;
    s_axi_rready : in STD_LOGIC;
    m_axi_awid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awaddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_awlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awuser : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    m_axi_awvalid : out STD_LOGIC;
    m_axi_awready : in STD_LOGIC;
    m_axi_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_wlast : out STD_LOGIC;
    m_axi_wuser : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    m_axi_wvalid : out STD_LOGIC;
    m_axi_wready : in STD_LOGIC;
    m_axi_bid : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_buser : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    m_axi_bvalid : in STD_LOGIC;
    m_axi_bready : out STD_LOGIC;
    m_axi_arid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_araddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_arlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aruser : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    m_axi_arvalid : out STD_LOGIC;
    m_axi_arready : in STD_LOGIC;
    m_axi_rid : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_rlast : in STD_LOGIC;
    m_axi_ruser : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    m_axi_rvalid : in STD_LOGIC;
    m_axi_rready : out STD_LOGIC
  );
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 32;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is "1'b1";
  attribute C_FAMILY : string;
  attribute C_FAMILY of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is "zynq";
  attribute C_IS_CASCADED : integer;
  attribute C_IS_CASCADED of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 0;
  attribute C_MEP_IDENTIFIER : string;
  attribute C_MEP_IDENTIFIER of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is "1'b0";
  attribute C_MEP_IDENTIFIER_WIDTH : integer;
  attribute C_MEP_IDENTIFIER_WIDTH of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 1;
  attribute C_M_ID_WIDTH : integer;
  attribute C_M_ID_WIDTH of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 1;
  attribute C_NUM_READ_OUTSTANDING : integer;
  attribute C_NUM_READ_OUTSTANDING of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 8;
  attribute C_NUM_READ_THREADS : integer;
  attribute C_NUM_READ_THREADS of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 1;
  attribute C_NUM_WRITE_OUTSTANDING : integer;
  attribute C_NUM_WRITE_OUTSTANDING of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 8;
  attribute C_NUM_WRITE_THREADS : integer;
  attribute C_NUM_WRITE_THREADS of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 1;
  attribute C_RDATA_WIDTH : integer;
  attribute C_RDATA_WIDTH of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 32;
  attribute C_READ_ACCEPTANCE : integer;
  attribute C_READ_ACCEPTANCE of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 32;
  attribute C_SEP_ROUTE_WIDTH : integer;
  attribute C_SEP_ROUTE_WIDTH of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 1;
  attribute C_SINGLE_ISSUING : integer;
  attribute C_SINGLE_ISSUING of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 1;
  attribute C_SUPPORTS_READ_DEADLOCK : integer;
  attribute C_SUPPORTS_READ_DEADLOCK of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 0;
  attribute C_SUPPORTS_WRITE_DEADLOCK : integer;
  attribute C_SUPPORTS_WRITE_DEADLOCK of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 0;
  attribute C_S_ID_WIDTH : integer;
  attribute C_S_ID_WIDTH of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 12;
  attribute C_WDATA_WIDTH : integer;
  attribute C_WDATA_WIDTH of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 32;
  attribute C_WRITE_ACCEPTANCE : integer;
  attribute C_WRITE_ACCEPTANCE of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 32;
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is "yes";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is "sc_transaction_regulator_v1_0_8_top";
  attribute P_FULLY_PIPELINED : integer;
  attribute P_FULLY_PIPELINED of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 2;
  attribute P_ID_BUFFER_WIDTH : integer;
  attribute P_ID_BUFFER_WIDTH of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 12;
  attribute P_M_THREAD_ID_WIDTH : integer;
  attribute P_M_THREAD_ID_WIDTH of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 1;
  attribute P_NUM_READ_OUTSTANDING : integer;
  attribute P_NUM_READ_OUTSTANDING of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 16;
  attribute P_NUM_WRITE_OUTSTANDING : integer;
  attribute P_NUM_WRITE_OUTSTANDING of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 16;
  attribute P_R_QUEUE_SIZE : integer;
  attribute P_R_QUEUE_SIZE of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 4;
  attribute P_S_ID_WIDTH : integer;
  attribute P_S_ID_WIDTH of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 12;
  attribute P_W_QUEUE_SIZE : integer;
  attribute P_W_QUEUE_SIZE of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 4;
  attribute P_ZERO_LATENCY : integer;
  attribute P_ZERO_LATENCY of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top : entity is 1;
end design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top;

architecture STRUCTURE of design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top is
  signal \<const0>\ : STD_LOGIC;
  signal areset : STD_LOGIC;
  signal areset_i_1_n_0 : STD_LOGIC;
  signal \gen_endpoint.gen_r_singleorder.r_singleorder_n_0\ : STD_LOGIC;
  signal \gen_endpoint.gen_r_singleorder.r_singleorder_n_1\ : STD_LOGIC;
  signal p_0_in : STD_LOGIC;
begin
  m_axi_araddr(31) <= \<const0>\;
  m_axi_araddr(30) <= \<const0>\;
  m_axi_araddr(29) <= \<const0>\;
  m_axi_araddr(28) <= \<const0>\;
  m_axi_araddr(27) <= \<const0>\;
  m_axi_araddr(26) <= \<const0>\;
  m_axi_araddr(25) <= \<const0>\;
  m_axi_araddr(24) <= \<const0>\;
  m_axi_araddr(23) <= \<const0>\;
  m_axi_araddr(22) <= \<const0>\;
  m_axi_araddr(21) <= \<const0>\;
  m_axi_araddr(20) <= \<const0>\;
  m_axi_araddr(19) <= \<const0>\;
  m_axi_araddr(18) <= \<const0>\;
  m_axi_araddr(17) <= \<const0>\;
  m_axi_araddr(16) <= \<const0>\;
  m_axi_araddr(15) <= \<const0>\;
  m_axi_araddr(14) <= \<const0>\;
  m_axi_araddr(13) <= \<const0>\;
  m_axi_araddr(12) <= \<const0>\;
  m_axi_araddr(11) <= \<const0>\;
  m_axi_araddr(10) <= \<const0>\;
  m_axi_araddr(9) <= \<const0>\;
  m_axi_araddr(8) <= \<const0>\;
  m_axi_araddr(7) <= \<const0>\;
  m_axi_araddr(6) <= \<const0>\;
  m_axi_araddr(5) <= \<const0>\;
  m_axi_araddr(4) <= \<const0>\;
  m_axi_araddr(3) <= \<const0>\;
  m_axi_araddr(2) <= \<const0>\;
  m_axi_araddr(1) <= \<const0>\;
  m_axi_araddr(0) <= \<const0>\;
  m_axi_arburst(1) <= \<const0>\;
  m_axi_arburst(0) <= \<const0>\;
  m_axi_arcache(3) <= \<const0>\;
  m_axi_arcache(2) <= \<const0>\;
  m_axi_arcache(1) <= \<const0>\;
  m_axi_arcache(0) <= \<const0>\;
  m_axi_arid(0) <= \<const0>\;
  m_axi_arlen(7) <= \<const0>\;
  m_axi_arlen(6) <= \<const0>\;
  m_axi_arlen(5) <= \<const0>\;
  m_axi_arlen(4) <= \<const0>\;
  m_axi_arlen(3) <= \<const0>\;
  m_axi_arlen(2) <= \<const0>\;
  m_axi_arlen(1) <= \<const0>\;
  m_axi_arlen(0) <= \<const0>\;
  m_axi_arlock(0) <= \<const0>\;
  m_axi_arprot(2) <= \<const0>\;
  m_axi_arprot(1) <= \<const0>\;
  m_axi_arprot(0) <= \<const0>\;
  m_axi_arqos(3) <= \<const0>\;
  m_axi_arqos(2) <= \<const0>\;
  m_axi_arqos(1) <= \<const0>\;
  m_axi_arqos(0) <= \<const0>\;
  m_axi_arsize(2) <= \<const0>\;
  m_axi_arsize(1) <= \<const0>\;
  m_axi_arsize(0) <= \<const0>\;
  m_axi_aruser(1023) <= \<const0>\;
  m_axi_aruser(1022) <= \<const0>\;
  m_axi_aruser(1021) <= \<const0>\;
  m_axi_aruser(1020) <= \<const0>\;
  m_axi_aruser(1019) <= \<const0>\;
  m_axi_aruser(1018) <= \<const0>\;
  m_axi_aruser(1017) <= \<const0>\;
  m_axi_aruser(1016) <= \<const0>\;
  m_axi_aruser(1015) <= \<const0>\;
  m_axi_aruser(1014) <= \<const0>\;
  m_axi_aruser(1013) <= \<const0>\;
  m_axi_aruser(1012) <= \<const0>\;
  m_axi_aruser(1011) <= \<const0>\;
  m_axi_aruser(1010) <= \<const0>\;
  m_axi_aruser(1009) <= \<const0>\;
  m_axi_aruser(1008) <= \<const0>\;
  m_axi_aruser(1007) <= \<const0>\;
  m_axi_aruser(1006) <= \<const0>\;
  m_axi_aruser(1005) <= \<const0>\;
  m_axi_aruser(1004) <= \<const0>\;
  m_axi_aruser(1003) <= \<const0>\;
  m_axi_aruser(1002) <= \<const0>\;
  m_axi_aruser(1001) <= \<const0>\;
  m_axi_aruser(1000) <= \<const0>\;
  m_axi_aruser(999) <= \<const0>\;
  m_axi_aruser(998) <= \<const0>\;
  m_axi_aruser(997) <= \<const0>\;
  m_axi_aruser(996) <= \<const0>\;
  m_axi_aruser(995) <= \<const0>\;
  m_axi_aruser(994) <= \<const0>\;
  m_axi_aruser(993) <= \<const0>\;
  m_axi_aruser(992) <= \<const0>\;
  m_axi_aruser(991) <= \<const0>\;
  m_axi_aruser(990) <= \<const0>\;
  m_axi_aruser(989) <= \<const0>\;
  m_axi_aruser(988) <= \<const0>\;
  m_axi_aruser(987) <= \<const0>\;
  m_axi_aruser(986) <= \<const0>\;
  m_axi_aruser(985) <= \<const0>\;
  m_axi_aruser(984) <= \<const0>\;
  m_axi_aruser(983) <= \<const0>\;
  m_axi_aruser(982) <= \<const0>\;
  m_axi_aruser(981) <= \<const0>\;
  m_axi_aruser(980) <= \<const0>\;
  m_axi_aruser(979) <= \<const0>\;
  m_axi_aruser(978) <= \<const0>\;
  m_axi_aruser(977) <= \<const0>\;
  m_axi_aruser(976) <= \<const0>\;
  m_axi_aruser(975) <= \<const0>\;
  m_axi_aruser(974) <= \<const0>\;
  m_axi_aruser(973) <= \<const0>\;
  m_axi_aruser(972) <= \<const0>\;
  m_axi_aruser(971) <= \<const0>\;
  m_axi_aruser(970) <= \<const0>\;
  m_axi_aruser(969) <= \<const0>\;
  m_axi_aruser(968) <= \<const0>\;
  m_axi_aruser(967) <= \<const0>\;
  m_axi_aruser(966) <= \<const0>\;
  m_axi_aruser(965) <= \<const0>\;
  m_axi_aruser(964) <= \<const0>\;
  m_axi_aruser(963) <= \<const0>\;
  m_axi_aruser(962) <= \<const0>\;
  m_axi_aruser(961) <= \<const0>\;
  m_axi_aruser(960) <= \<const0>\;
  m_axi_aruser(959) <= \<const0>\;
  m_axi_aruser(958) <= \<const0>\;
  m_axi_aruser(957) <= \<const0>\;
  m_axi_aruser(956) <= \<const0>\;
  m_axi_aruser(955) <= \<const0>\;
  m_axi_aruser(954) <= \<const0>\;
  m_axi_aruser(953) <= \<const0>\;
  m_axi_aruser(952) <= \<const0>\;
  m_axi_aruser(951) <= \<const0>\;
  m_axi_aruser(950) <= \<const0>\;
  m_axi_aruser(949) <= \<const0>\;
  m_axi_aruser(948) <= \<const0>\;
  m_axi_aruser(947) <= \<const0>\;
  m_axi_aruser(946) <= \<const0>\;
  m_axi_aruser(945) <= \<const0>\;
  m_axi_aruser(944) <= \<const0>\;
  m_axi_aruser(943) <= \<const0>\;
  m_axi_aruser(942) <= \<const0>\;
  m_axi_aruser(941) <= \<const0>\;
  m_axi_aruser(940) <= \<const0>\;
  m_axi_aruser(939) <= \<const0>\;
  m_axi_aruser(938) <= \<const0>\;
  m_axi_aruser(937) <= \<const0>\;
  m_axi_aruser(936) <= \<const0>\;
  m_axi_aruser(935) <= \<const0>\;
  m_axi_aruser(934) <= \<const0>\;
  m_axi_aruser(933) <= \<const0>\;
  m_axi_aruser(932) <= \<const0>\;
  m_axi_aruser(931) <= \<const0>\;
  m_axi_aruser(930) <= \<const0>\;
  m_axi_aruser(929) <= \<const0>\;
  m_axi_aruser(928) <= \<const0>\;
  m_axi_aruser(927) <= \<const0>\;
  m_axi_aruser(926) <= \<const0>\;
  m_axi_aruser(925) <= \<const0>\;
  m_axi_aruser(924) <= \<const0>\;
  m_axi_aruser(923) <= \<const0>\;
  m_axi_aruser(922) <= \<const0>\;
  m_axi_aruser(921) <= \<const0>\;
  m_axi_aruser(920) <= \<const0>\;
  m_axi_aruser(919) <= \<const0>\;
  m_axi_aruser(918) <= \<const0>\;
  m_axi_aruser(917) <= \<const0>\;
  m_axi_aruser(916) <= \<const0>\;
  m_axi_aruser(915) <= \<const0>\;
  m_axi_aruser(914) <= \<const0>\;
  m_axi_aruser(913) <= \<const0>\;
  m_axi_aruser(912) <= \<const0>\;
  m_axi_aruser(911) <= \<const0>\;
  m_axi_aruser(910) <= \<const0>\;
  m_axi_aruser(909) <= \<const0>\;
  m_axi_aruser(908) <= \<const0>\;
  m_axi_aruser(907) <= \<const0>\;
  m_axi_aruser(906) <= \<const0>\;
  m_axi_aruser(905) <= \<const0>\;
  m_axi_aruser(904) <= \<const0>\;
  m_axi_aruser(903) <= \<const0>\;
  m_axi_aruser(902) <= \<const0>\;
  m_axi_aruser(901) <= \<const0>\;
  m_axi_aruser(900) <= \<const0>\;
  m_axi_aruser(899) <= \<const0>\;
  m_axi_aruser(898) <= \<const0>\;
  m_axi_aruser(897) <= \<const0>\;
  m_axi_aruser(896) <= \<const0>\;
  m_axi_aruser(895) <= \<const0>\;
  m_axi_aruser(894) <= \<const0>\;
  m_axi_aruser(893) <= \<const0>\;
  m_axi_aruser(892) <= \<const0>\;
  m_axi_aruser(891) <= \<const0>\;
  m_axi_aruser(890) <= \<const0>\;
  m_axi_aruser(889) <= \<const0>\;
  m_axi_aruser(888) <= \<const0>\;
  m_axi_aruser(887) <= \<const0>\;
  m_axi_aruser(886) <= \<const0>\;
  m_axi_aruser(885) <= \<const0>\;
  m_axi_aruser(884) <= \<const0>\;
  m_axi_aruser(883) <= \<const0>\;
  m_axi_aruser(882) <= \<const0>\;
  m_axi_aruser(881) <= \<const0>\;
  m_axi_aruser(880) <= \<const0>\;
  m_axi_aruser(879) <= \<const0>\;
  m_axi_aruser(878) <= \<const0>\;
  m_axi_aruser(877) <= \<const0>\;
  m_axi_aruser(876) <= \<const0>\;
  m_axi_aruser(875) <= \<const0>\;
  m_axi_aruser(874) <= \<const0>\;
  m_axi_aruser(873) <= \<const0>\;
  m_axi_aruser(872) <= \<const0>\;
  m_axi_aruser(871) <= \<const0>\;
  m_axi_aruser(870) <= \<const0>\;
  m_axi_aruser(869) <= \<const0>\;
  m_axi_aruser(868) <= \<const0>\;
  m_axi_aruser(867) <= \<const0>\;
  m_axi_aruser(866) <= \<const0>\;
  m_axi_aruser(865) <= \<const0>\;
  m_axi_aruser(864) <= \<const0>\;
  m_axi_aruser(863) <= \<const0>\;
  m_axi_aruser(862) <= \<const0>\;
  m_axi_aruser(861) <= \<const0>\;
  m_axi_aruser(860) <= \<const0>\;
  m_axi_aruser(859) <= \<const0>\;
  m_axi_aruser(858) <= \<const0>\;
  m_axi_aruser(857) <= \<const0>\;
  m_axi_aruser(856) <= \<const0>\;
  m_axi_aruser(855) <= \<const0>\;
  m_axi_aruser(854) <= \<const0>\;
  m_axi_aruser(853) <= \<const0>\;
  m_axi_aruser(852) <= \<const0>\;
  m_axi_aruser(851) <= \<const0>\;
  m_axi_aruser(850) <= \<const0>\;
  m_axi_aruser(849) <= \<const0>\;
  m_axi_aruser(848) <= \<const0>\;
  m_axi_aruser(847) <= \<const0>\;
  m_axi_aruser(846) <= \<const0>\;
  m_axi_aruser(845) <= \<const0>\;
  m_axi_aruser(844) <= \<const0>\;
  m_axi_aruser(843) <= \<const0>\;
  m_axi_aruser(842) <= \<const0>\;
  m_axi_aruser(841) <= \<const0>\;
  m_axi_aruser(840) <= \<const0>\;
  m_axi_aruser(839) <= \<const0>\;
  m_axi_aruser(838) <= \<const0>\;
  m_axi_aruser(837) <= \<const0>\;
  m_axi_aruser(836) <= \<const0>\;
  m_axi_aruser(835) <= \<const0>\;
  m_axi_aruser(834) <= \<const0>\;
  m_axi_aruser(833) <= \<const0>\;
  m_axi_aruser(832) <= \<const0>\;
  m_axi_aruser(831) <= \<const0>\;
  m_axi_aruser(830) <= \<const0>\;
  m_axi_aruser(829) <= \<const0>\;
  m_axi_aruser(828) <= \<const0>\;
  m_axi_aruser(827) <= \<const0>\;
  m_axi_aruser(826) <= \<const0>\;
  m_axi_aruser(825) <= \<const0>\;
  m_axi_aruser(824) <= \<const0>\;
  m_axi_aruser(823) <= \<const0>\;
  m_axi_aruser(822) <= \<const0>\;
  m_axi_aruser(821) <= \<const0>\;
  m_axi_aruser(820) <= \<const0>\;
  m_axi_aruser(819) <= \<const0>\;
  m_axi_aruser(818) <= \<const0>\;
  m_axi_aruser(817) <= \<const0>\;
  m_axi_aruser(816) <= \<const0>\;
  m_axi_aruser(815) <= \<const0>\;
  m_axi_aruser(814) <= \<const0>\;
  m_axi_aruser(813) <= \<const0>\;
  m_axi_aruser(812) <= \<const0>\;
  m_axi_aruser(811) <= \<const0>\;
  m_axi_aruser(810) <= \<const0>\;
  m_axi_aruser(809) <= \<const0>\;
  m_axi_aruser(808) <= \<const0>\;
  m_axi_aruser(807) <= \<const0>\;
  m_axi_aruser(806) <= \<const0>\;
  m_axi_aruser(805) <= \<const0>\;
  m_axi_aruser(804) <= \<const0>\;
  m_axi_aruser(803) <= \<const0>\;
  m_axi_aruser(802) <= \<const0>\;
  m_axi_aruser(801) <= \<const0>\;
  m_axi_aruser(800) <= \<const0>\;
  m_axi_aruser(799) <= \<const0>\;
  m_axi_aruser(798) <= \<const0>\;
  m_axi_aruser(797) <= \<const0>\;
  m_axi_aruser(796) <= \<const0>\;
  m_axi_aruser(795) <= \<const0>\;
  m_axi_aruser(794) <= \<const0>\;
  m_axi_aruser(793) <= \<const0>\;
  m_axi_aruser(792) <= \<const0>\;
  m_axi_aruser(791) <= \<const0>\;
  m_axi_aruser(790) <= \<const0>\;
  m_axi_aruser(789) <= \<const0>\;
  m_axi_aruser(788) <= \<const0>\;
  m_axi_aruser(787) <= \<const0>\;
  m_axi_aruser(786) <= \<const0>\;
  m_axi_aruser(785) <= \<const0>\;
  m_axi_aruser(784) <= \<const0>\;
  m_axi_aruser(783) <= \<const0>\;
  m_axi_aruser(782) <= \<const0>\;
  m_axi_aruser(781) <= \<const0>\;
  m_axi_aruser(780) <= \<const0>\;
  m_axi_aruser(779) <= \<const0>\;
  m_axi_aruser(778) <= \<const0>\;
  m_axi_aruser(777) <= \<const0>\;
  m_axi_aruser(776) <= \<const0>\;
  m_axi_aruser(775) <= \<const0>\;
  m_axi_aruser(774) <= \<const0>\;
  m_axi_aruser(773) <= \<const0>\;
  m_axi_aruser(772) <= \<const0>\;
  m_axi_aruser(771) <= \<const0>\;
  m_axi_aruser(770) <= \<const0>\;
  m_axi_aruser(769) <= \<const0>\;
  m_axi_aruser(768) <= \<const0>\;
  m_axi_aruser(767) <= \<const0>\;
  m_axi_aruser(766) <= \<const0>\;
  m_axi_aruser(765) <= \<const0>\;
  m_axi_aruser(764) <= \<const0>\;
  m_axi_aruser(763) <= \<const0>\;
  m_axi_aruser(762) <= \<const0>\;
  m_axi_aruser(761) <= \<const0>\;
  m_axi_aruser(760) <= \<const0>\;
  m_axi_aruser(759) <= \<const0>\;
  m_axi_aruser(758) <= \<const0>\;
  m_axi_aruser(757) <= \<const0>\;
  m_axi_aruser(756) <= \<const0>\;
  m_axi_aruser(755) <= \<const0>\;
  m_axi_aruser(754) <= \<const0>\;
  m_axi_aruser(753) <= \<const0>\;
  m_axi_aruser(752) <= \<const0>\;
  m_axi_aruser(751) <= \<const0>\;
  m_axi_aruser(750) <= \<const0>\;
  m_axi_aruser(749) <= \<const0>\;
  m_axi_aruser(748) <= \<const0>\;
  m_axi_aruser(747) <= \<const0>\;
  m_axi_aruser(746) <= \<const0>\;
  m_axi_aruser(745) <= \<const0>\;
  m_axi_aruser(744) <= \<const0>\;
  m_axi_aruser(743) <= \<const0>\;
  m_axi_aruser(742) <= \<const0>\;
  m_axi_aruser(741) <= \<const0>\;
  m_axi_aruser(740) <= \<const0>\;
  m_axi_aruser(739) <= \<const0>\;
  m_axi_aruser(738) <= \<const0>\;
  m_axi_aruser(737) <= \<const0>\;
  m_axi_aruser(736) <= \<const0>\;
  m_axi_aruser(735) <= \<const0>\;
  m_axi_aruser(734) <= \<const0>\;
  m_axi_aruser(733) <= \<const0>\;
  m_axi_aruser(732) <= \<const0>\;
  m_axi_aruser(731) <= \<const0>\;
  m_axi_aruser(730) <= \<const0>\;
  m_axi_aruser(729) <= \<const0>\;
  m_axi_aruser(728) <= \<const0>\;
  m_axi_aruser(727) <= \<const0>\;
  m_axi_aruser(726) <= \<const0>\;
  m_axi_aruser(725) <= \<const0>\;
  m_axi_aruser(724) <= \<const0>\;
  m_axi_aruser(723) <= \<const0>\;
  m_axi_aruser(722) <= \<const0>\;
  m_axi_aruser(721) <= \<const0>\;
  m_axi_aruser(720) <= \<const0>\;
  m_axi_aruser(719) <= \<const0>\;
  m_axi_aruser(718) <= \<const0>\;
  m_axi_aruser(717) <= \<const0>\;
  m_axi_aruser(716) <= \<const0>\;
  m_axi_aruser(715) <= \<const0>\;
  m_axi_aruser(714) <= \<const0>\;
  m_axi_aruser(713) <= \<const0>\;
  m_axi_aruser(712) <= \<const0>\;
  m_axi_aruser(711) <= \<const0>\;
  m_axi_aruser(710) <= \<const0>\;
  m_axi_aruser(709) <= \<const0>\;
  m_axi_aruser(708) <= \<const0>\;
  m_axi_aruser(707) <= \<const0>\;
  m_axi_aruser(706) <= \<const0>\;
  m_axi_aruser(705) <= \<const0>\;
  m_axi_aruser(704) <= \<const0>\;
  m_axi_aruser(703) <= \<const0>\;
  m_axi_aruser(702) <= \<const0>\;
  m_axi_aruser(701) <= \<const0>\;
  m_axi_aruser(700) <= \<const0>\;
  m_axi_aruser(699) <= \<const0>\;
  m_axi_aruser(698) <= \<const0>\;
  m_axi_aruser(697) <= \<const0>\;
  m_axi_aruser(696) <= \<const0>\;
  m_axi_aruser(695) <= \<const0>\;
  m_axi_aruser(694) <= \<const0>\;
  m_axi_aruser(693) <= \<const0>\;
  m_axi_aruser(692) <= \<const0>\;
  m_axi_aruser(691) <= \<const0>\;
  m_axi_aruser(690) <= \<const0>\;
  m_axi_aruser(689) <= \<const0>\;
  m_axi_aruser(688) <= \<const0>\;
  m_axi_aruser(687) <= \<const0>\;
  m_axi_aruser(686) <= \<const0>\;
  m_axi_aruser(685) <= \<const0>\;
  m_axi_aruser(684) <= \<const0>\;
  m_axi_aruser(683) <= \<const0>\;
  m_axi_aruser(682) <= \<const0>\;
  m_axi_aruser(681) <= \<const0>\;
  m_axi_aruser(680) <= \<const0>\;
  m_axi_aruser(679) <= \<const0>\;
  m_axi_aruser(678) <= \<const0>\;
  m_axi_aruser(677) <= \<const0>\;
  m_axi_aruser(676) <= \<const0>\;
  m_axi_aruser(675) <= \<const0>\;
  m_axi_aruser(674) <= \<const0>\;
  m_axi_aruser(673) <= \<const0>\;
  m_axi_aruser(672) <= \<const0>\;
  m_axi_aruser(671) <= \<const0>\;
  m_axi_aruser(670) <= \<const0>\;
  m_axi_aruser(669) <= \<const0>\;
  m_axi_aruser(668) <= \<const0>\;
  m_axi_aruser(667) <= \<const0>\;
  m_axi_aruser(666) <= \<const0>\;
  m_axi_aruser(665) <= \<const0>\;
  m_axi_aruser(664) <= \<const0>\;
  m_axi_aruser(663) <= \<const0>\;
  m_axi_aruser(662) <= \<const0>\;
  m_axi_aruser(661) <= \<const0>\;
  m_axi_aruser(660) <= \<const0>\;
  m_axi_aruser(659) <= \<const0>\;
  m_axi_aruser(658) <= \<const0>\;
  m_axi_aruser(657) <= \<const0>\;
  m_axi_aruser(656) <= \<const0>\;
  m_axi_aruser(655) <= \<const0>\;
  m_axi_aruser(654) <= \<const0>\;
  m_axi_aruser(653) <= \<const0>\;
  m_axi_aruser(652) <= \<const0>\;
  m_axi_aruser(651) <= \<const0>\;
  m_axi_aruser(650) <= \<const0>\;
  m_axi_aruser(649) <= \<const0>\;
  m_axi_aruser(648) <= \<const0>\;
  m_axi_aruser(647) <= \<const0>\;
  m_axi_aruser(646) <= \<const0>\;
  m_axi_aruser(645) <= \<const0>\;
  m_axi_aruser(644) <= \<const0>\;
  m_axi_aruser(643) <= \<const0>\;
  m_axi_aruser(642) <= \<const0>\;
  m_axi_aruser(641) <= \<const0>\;
  m_axi_aruser(640) <= \<const0>\;
  m_axi_aruser(639) <= \<const0>\;
  m_axi_aruser(638) <= \<const0>\;
  m_axi_aruser(637) <= \<const0>\;
  m_axi_aruser(636) <= \<const0>\;
  m_axi_aruser(635) <= \<const0>\;
  m_axi_aruser(634) <= \<const0>\;
  m_axi_aruser(633) <= \<const0>\;
  m_axi_aruser(632) <= \<const0>\;
  m_axi_aruser(631) <= \<const0>\;
  m_axi_aruser(630) <= \<const0>\;
  m_axi_aruser(629) <= \<const0>\;
  m_axi_aruser(628) <= \<const0>\;
  m_axi_aruser(627) <= \<const0>\;
  m_axi_aruser(626) <= \<const0>\;
  m_axi_aruser(625) <= \<const0>\;
  m_axi_aruser(624) <= \<const0>\;
  m_axi_aruser(623) <= \<const0>\;
  m_axi_aruser(622) <= \<const0>\;
  m_axi_aruser(621) <= \<const0>\;
  m_axi_aruser(620) <= \<const0>\;
  m_axi_aruser(619) <= \<const0>\;
  m_axi_aruser(618) <= \<const0>\;
  m_axi_aruser(617) <= \<const0>\;
  m_axi_aruser(616) <= \<const0>\;
  m_axi_aruser(615) <= \<const0>\;
  m_axi_aruser(614) <= \<const0>\;
  m_axi_aruser(613) <= \<const0>\;
  m_axi_aruser(612) <= \<const0>\;
  m_axi_aruser(611) <= \<const0>\;
  m_axi_aruser(610) <= \<const0>\;
  m_axi_aruser(609) <= \<const0>\;
  m_axi_aruser(608) <= \<const0>\;
  m_axi_aruser(607) <= \<const0>\;
  m_axi_aruser(606) <= \<const0>\;
  m_axi_aruser(605) <= \<const0>\;
  m_axi_aruser(604) <= \<const0>\;
  m_axi_aruser(603) <= \<const0>\;
  m_axi_aruser(602) <= \<const0>\;
  m_axi_aruser(601) <= \<const0>\;
  m_axi_aruser(600) <= \<const0>\;
  m_axi_aruser(599) <= \<const0>\;
  m_axi_aruser(598) <= \<const0>\;
  m_axi_aruser(597) <= \<const0>\;
  m_axi_aruser(596) <= \<const0>\;
  m_axi_aruser(595) <= \<const0>\;
  m_axi_aruser(594) <= \<const0>\;
  m_axi_aruser(593) <= \<const0>\;
  m_axi_aruser(592) <= \<const0>\;
  m_axi_aruser(591) <= \<const0>\;
  m_axi_aruser(590) <= \<const0>\;
  m_axi_aruser(589) <= \<const0>\;
  m_axi_aruser(588) <= \<const0>\;
  m_axi_aruser(587) <= \<const0>\;
  m_axi_aruser(586) <= \<const0>\;
  m_axi_aruser(585) <= \<const0>\;
  m_axi_aruser(584) <= \<const0>\;
  m_axi_aruser(583) <= \<const0>\;
  m_axi_aruser(582) <= \<const0>\;
  m_axi_aruser(581) <= \<const0>\;
  m_axi_aruser(580) <= \<const0>\;
  m_axi_aruser(579) <= \<const0>\;
  m_axi_aruser(578) <= \<const0>\;
  m_axi_aruser(577) <= \<const0>\;
  m_axi_aruser(576) <= \<const0>\;
  m_axi_aruser(575) <= \<const0>\;
  m_axi_aruser(574) <= \<const0>\;
  m_axi_aruser(573) <= \<const0>\;
  m_axi_aruser(572) <= \<const0>\;
  m_axi_aruser(571) <= \<const0>\;
  m_axi_aruser(570) <= \<const0>\;
  m_axi_aruser(569) <= \<const0>\;
  m_axi_aruser(568) <= \<const0>\;
  m_axi_aruser(567) <= \<const0>\;
  m_axi_aruser(566) <= \<const0>\;
  m_axi_aruser(565) <= \<const0>\;
  m_axi_aruser(564) <= \<const0>\;
  m_axi_aruser(563) <= \<const0>\;
  m_axi_aruser(562) <= \<const0>\;
  m_axi_aruser(561) <= \<const0>\;
  m_axi_aruser(560) <= \<const0>\;
  m_axi_aruser(559) <= \<const0>\;
  m_axi_aruser(558) <= \<const0>\;
  m_axi_aruser(557) <= \<const0>\;
  m_axi_aruser(556) <= \<const0>\;
  m_axi_aruser(555) <= \<const0>\;
  m_axi_aruser(554) <= \<const0>\;
  m_axi_aruser(553) <= \<const0>\;
  m_axi_aruser(552) <= \<const0>\;
  m_axi_aruser(551) <= \<const0>\;
  m_axi_aruser(550) <= \<const0>\;
  m_axi_aruser(549) <= \<const0>\;
  m_axi_aruser(548) <= \<const0>\;
  m_axi_aruser(547) <= \<const0>\;
  m_axi_aruser(546) <= \<const0>\;
  m_axi_aruser(545) <= \<const0>\;
  m_axi_aruser(544) <= \<const0>\;
  m_axi_aruser(543) <= \<const0>\;
  m_axi_aruser(542) <= \<const0>\;
  m_axi_aruser(541) <= \<const0>\;
  m_axi_aruser(540) <= \<const0>\;
  m_axi_aruser(539) <= \<const0>\;
  m_axi_aruser(538) <= \<const0>\;
  m_axi_aruser(537) <= \<const0>\;
  m_axi_aruser(536) <= \<const0>\;
  m_axi_aruser(535) <= \<const0>\;
  m_axi_aruser(534) <= \<const0>\;
  m_axi_aruser(533) <= \<const0>\;
  m_axi_aruser(532) <= \<const0>\;
  m_axi_aruser(531) <= \<const0>\;
  m_axi_aruser(530) <= \<const0>\;
  m_axi_aruser(529) <= \<const0>\;
  m_axi_aruser(528) <= \<const0>\;
  m_axi_aruser(527) <= \<const0>\;
  m_axi_aruser(526) <= \<const0>\;
  m_axi_aruser(525) <= \<const0>\;
  m_axi_aruser(524) <= \<const0>\;
  m_axi_aruser(523) <= \<const0>\;
  m_axi_aruser(522) <= \<const0>\;
  m_axi_aruser(521) <= \<const0>\;
  m_axi_aruser(520) <= \<const0>\;
  m_axi_aruser(519) <= \<const0>\;
  m_axi_aruser(518) <= \<const0>\;
  m_axi_aruser(517) <= \<const0>\;
  m_axi_aruser(516) <= \<const0>\;
  m_axi_aruser(515) <= \<const0>\;
  m_axi_aruser(514) <= \<const0>\;
  m_axi_aruser(513) <= \<const0>\;
  m_axi_aruser(512) <= \<const0>\;
  m_axi_aruser(511) <= \<const0>\;
  m_axi_aruser(510) <= \<const0>\;
  m_axi_aruser(509) <= \<const0>\;
  m_axi_aruser(508) <= \<const0>\;
  m_axi_aruser(507) <= \<const0>\;
  m_axi_aruser(506) <= \<const0>\;
  m_axi_aruser(505) <= \<const0>\;
  m_axi_aruser(504) <= \<const0>\;
  m_axi_aruser(503) <= \<const0>\;
  m_axi_aruser(502) <= \<const0>\;
  m_axi_aruser(501) <= \<const0>\;
  m_axi_aruser(500) <= \<const0>\;
  m_axi_aruser(499) <= \<const0>\;
  m_axi_aruser(498) <= \<const0>\;
  m_axi_aruser(497) <= \<const0>\;
  m_axi_aruser(496) <= \<const0>\;
  m_axi_aruser(495) <= \<const0>\;
  m_axi_aruser(494) <= \<const0>\;
  m_axi_aruser(493) <= \<const0>\;
  m_axi_aruser(492) <= \<const0>\;
  m_axi_aruser(491) <= \<const0>\;
  m_axi_aruser(490) <= \<const0>\;
  m_axi_aruser(489) <= \<const0>\;
  m_axi_aruser(488) <= \<const0>\;
  m_axi_aruser(487) <= \<const0>\;
  m_axi_aruser(486) <= \<const0>\;
  m_axi_aruser(485) <= \<const0>\;
  m_axi_aruser(484) <= \<const0>\;
  m_axi_aruser(483) <= \<const0>\;
  m_axi_aruser(482) <= \<const0>\;
  m_axi_aruser(481) <= \<const0>\;
  m_axi_aruser(480) <= \<const0>\;
  m_axi_aruser(479) <= \<const0>\;
  m_axi_aruser(478) <= \<const0>\;
  m_axi_aruser(477) <= \<const0>\;
  m_axi_aruser(476) <= \<const0>\;
  m_axi_aruser(475) <= \<const0>\;
  m_axi_aruser(474) <= \<const0>\;
  m_axi_aruser(473) <= \<const0>\;
  m_axi_aruser(472) <= \<const0>\;
  m_axi_aruser(471) <= \<const0>\;
  m_axi_aruser(470) <= \<const0>\;
  m_axi_aruser(469) <= \<const0>\;
  m_axi_aruser(468) <= \<const0>\;
  m_axi_aruser(467) <= \<const0>\;
  m_axi_aruser(466) <= \<const0>\;
  m_axi_aruser(465) <= \<const0>\;
  m_axi_aruser(464) <= \<const0>\;
  m_axi_aruser(463) <= \<const0>\;
  m_axi_aruser(462) <= \<const0>\;
  m_axi_aruser(461) <= \<const0>\;
  m_axi_aruser(460) <= \<const0>\;
  m_axi_aruser(459) <= \<const0>\;
  m_axi_aruser(458) <= \<const0>\;
  m_axi_aruser(457) <= \<const0>\;
  m_axi_aruser(456) <= \<const0>\;
  m_axi_aruser(455) <= \<const0>\;
  m_axi_aruser(454) <= \<const0>\;
  m_axi_aruser(453) <= \<const0>\;
  m_axi_aruser(452) <= \<const0>\;
  m_axi_aruser(451) <= \<const0>\;
  m_axi_aruser(450) <= \<const0>\;
  m_axi_aruser(449) <= \<const0>\;
  m_axi_aruser(448) <= \<const0>\;
  m_axi_aruser(447) <= \<const0>\;
  m_axi_aruser(446) <= \<const0>\;
  m_axi_aruser(445) <= \<const0>\;
  m_axi_aruser(444) <= \<const0>\;
  m_axi_aruser(443) <= \<const0>\;
  m_axi_aruser(442) <= \<const0>\;
  m_axi_aruser(441) <= \<const0>\;
  m_axi_aruser(440) <= \<const0>\;
  m_axi_aruser(439) <= \<const0>\;
  m_axi_aruser(438) <= \<const0>\;
  m_axi_aruser(437) <= \<const0>\;
  m_axi_aruser(436) <= \<const0>\;
  m_axi_aruser(435) <= \<const0>\;
  m_axi_aruser(434) <= \<const0>\;
  m_axi_aruser(433) <= \<const0>\;
  m_axi_aruser(432) <= \<const0>\;
  m_axi_aruser(431) <= \<const0>\;
  m_axi_aruser(430) <= \<const0>\;
  m_axi_aruser(429) <= \<const0>\;
  m_axi_aruser(428) <= \<const0>\;
  m_axi_aruser(427) <= \<const0>\;
  m_axi_aruser(426) <= \<const0>\;
  m_axi_aruser(425) <= \<const0>\;
  m_axi_aruser(424) <= \<const0>\;
  m_axi_aruser(423) <= \<const0>\;
  m_axi_aruser(422) <= \<const0>\;
  m_axi_aruser(421) <= \<const0>\;
  m_axi_aruser(420) <= \<const0>\;
  m_axi_aruser(419) <= \<const0>\;
  m_axi_aruser(418) <= \<const0>\;
  m_axi_aruser(417) <= \<const0>\;
  m_axi_aruser(416) <= \<const0>\;
  m_axi_aruser(415) <= \<const0>\;
  m_axi_aruser(414) <= \<const0>\;
  m_axi_aruser(413) <= \<const0>\;
  m_axi_aruser(412) <= \<const0>\;
  m_axi_aruser(411) <= \<const0>\;
  m_axi_aruser(410) <= \<const0>\;
  m_axi_aruser(409) <= \<const0>\;
  m_axi_aruser(408) <= \<const0>\;
  m_axi_aruser(407) <= \<const0>\;
  m_axi_aruser(406) <= \<const0>\;
  m_axi_aruser(405) <= \<const0>\;
  m_axi_aruser(404) <= \<const0>\;
  m_axi_aruser(403) <= \<const0>\;
  m_axi_aruser(402) <= \<const0>\;
  m_axi_aruser(401) <= \<const0>\;
  m_axi_aruser(400) <= \<const0>\;
  m_axi_aruser(399) <= \<const0>\;
  m_axi_aruser(398) <= \<const0>\;
  m_axi_aruser(397) <= \<const0>\;
  m_axi_aruser(396) <= \<const0>\;
  m_axi_aruser(395) <= \<const0>\;
  m_axi_aruser(394) <= \<const0>\;
  m_axi_aruser(393) <= \<const0>\;
  m_axi_aruser(392) <= \<const0>\;
  m_axi_aruser(391) <= \<const0>\;
  m_axi_aruser(390) <= \<const0>\;
  m_axi_aruser(389) <= \<const0>\;
  m_axi_aruser(388) <= \<const0>\;
  m_axi_aruser(387) <= \<const0>\;
  m_axi_aruser(386) <= \<const0>\;
  m_axi_aruser(385) <= \<const0>\;
  m_axi_aruser(384) <= \<const0>\;
  m_axi_aruser(383) <= \<const0>\;
  m_axi_aruser(382) <= \<const0>\;
  m_axi_aruser(381) <= \<const0>\;
  m_axi_aruser(380) <= \<const0>\;
  m_axi_aruser(379) <= \<const0>\;
  m_axi_aruser(378) <= \<const0>\;
  m_axi_aruser(377) <= \<const0>\;
  m_axi_aruser(376) <= \<const0>\;
  m_axi_aruser(375) <= \<const0>\;
  m_axi_aruser(374) <= \<const0>\;
  m_axi_aruser(373) <= \<const0>\;
  m_axi_aruser(372) <= \<const0>\;
  m_axi_aruser(371) <= \<const0>\;
  m_axi_aruser(370) <= \<const0>\;
  m_axi_aruser(369) <= \<const0>\;
  m_axi_aruser(368) <= \<const0>\;
  m_axi_aruser(367) <= \<const0>\;
  m_axi_aruser(366) <= \<const0>\;
  m_axi_aruser(365) <= \<const0>\;
  m_axi_aruser(364) <= \<const0>\;
  m_axi_aruser(363) <= \<const0>\;
  m_axi_aruser(362) <= \<const0>\;
  m_axi_aruser(361) <= \<const0>\;
  m_axi_aruser(360) <= \<const0>\;
  m_axi_aruser(359) <= \<const0>\;
  m_axi_aruser(358) <= \<const0>\;
  m_axi_aruser(357) <= \<const0>\;
  m_axi_aruser(356) <= \<const0>\;
  m_axi_aruser(355) <= \<const0>\;
  m_axi_aruser(354) <= \<const0>\;
  m_axi_aruser(353) <= \<const0>\;
  m_axi_aruser(352) <= \<const0>\;
  m_axi_aruser(351) <= \<const0>\;
  m_axi_aruser(350) <= \<const0>\;
  m_axi_aruser(349) <= \<const0>\;
  m_axi_aruser(348) <= \<const0>\;
  m_axi_aruser(347) <= \<const0>\;
  m_axi_aruser(346) <= \<const0>\;
  m_axi_aruser(345) <= \<const0>\;
  m_axi_aruser(344) <= \<const0>\;
  m_axi_aruser(343) <= \<const0>\;
  m_axi_aruser(342) <= \<const0>\;
  m_axi_aruser(341) <= \<const0>\;
  m_axi_aruser(340) <= \<const0>\;
  m_axi_aruser(339) <= \<const0>\;
  m_axi_aruser(338) <= \<const0>\;
  m_axi_aruser(337) <= \<const0>\;
  m_axi_aruser(336) <= \<const0>\;
  m_axi_aruser(335) <= \<const0>\;
  m_axi_aruser(334) <= \<const0>\;
  m_axi_aruser(333) <= \<const0>\;
  m_axi_aruser(332) <= \<const0>\;
  m_axi_aruser(331) <= \<const0>\;
  m_axi_aruser(330) <= \<const0>\;
  m_axi_aruser(329) <= \<const0>\;
  m_axi_aruser(328) <= \<const0>\;
  m_axi_aruser(327) <= \<const0>\;
  m_axi_aruser(326) <= \<const0>\;
  m_axi_aruser(325) <= \<const0>\;
  m_axi_aruser(324) <= \<const0>\;
  m_axi_aruser(323) <= \<const0>\;
  m_axi_aruser(322) <= \<const0>\;
  m_axi_aruser(321) <= \<const0>\;
  m_axi_aruser(320) <= \<const0>\;
  m_axi_aruser(319) <= \<const0>\;
  m_axi_aruser(318) <= \<const0>\;
  m_axi_aruser(317) <= \<const0>\;
  m_axi_aruser(316) <= \<const0>\;
  m_axi_aruser(315) <= \<const0>\;
  m_axi_aruser(314) <= \<const0>\;
  m_axi_aruser(313) <= \<const0>\;
  m_axi_aruser(312) <= \<const0>\;
  m_axi_aruser(311) <= \<const0>\;
  m_axi_aruser(310) <= \<const0>\;
  m_axi_aruser(309) <= \<const0>\;
  m_axi_aruser(308) <= \<const0>\;
  m_axi_aruser(307) <= \<const0>\;
  m_axi_aruser(306) <= \<const0>\;
  m_axi_aruser(305) <= \<const0>\;
  m_axi_aruser(304) <= \<const0>\;
  m_axi_aruser(303) <= \<const0>\;
  m_axi_aruser(302) <= \<const0>\;
  m_axi_aruser(301) <= \<const0>\;
  m_axi_aruser(300) <= \<const0>\;
  m_axi_aruser(299) <= \<const0>\;
  m_axi_aruser(298) <= \<const0>\;
  m_axi_aruser(297) <= \<const0>\;
  m_axi_aruser(296) <= \<const0>\;
  m_axi_aruser(295) <= \<const0>\;
  m_axi_aruser(294) <= \<const0>\;
  m_axi_aruser(293) <= \<const0>\;
  m_axi_aruser(292) <= \<const0>\;
  m_axi_aruser(291) <= \<const0>\;
  m_axi_aruser(290) <= \<const0>\;
  m_axi_aruser(289) <= \<const0>\;
  m_axi_aruser(288) <= \<const0>\;
  m_axi_aruser(287) <= \<const0>\;
  m_axi_aruser(286) <= \<const0>\;
  m_axi_aruser(285) <= \<const0>\;
  m_axi_aruser(284) <= \<const0>\;
  m_axi_aruser(283) <= \<const0>\;
  m_axi_aruser(282) <= \<const0>\;
  m_axi_aruser(281) <= \<const0>\;
  m_axi_aruser(280) <= \<const0>\;
  m_axi_aruser(279) <= \<const0>\;
  m_axi_aruser(278) <= \<const0>\;
  m_axi_aruser(277) <= \<const0>\;
  m_axi_aruser(276) <= \<const0>\;
  m_axi_aruser(275) <= \<const0>\;
  m_axi_aruser(274) <= \<const0>\;
  m_axi_aruser(273) <= \<const0>\;
  m_axi_aruser(272) <= \<const0>\;
  m_axi_aruser(271) <= \<const0>\;
  m_axi_aruser(270) <= \<const0>\;
  m_axi_aruser(269) <= \<const0>\;
  m_axi_aruser(268) <= \<const0>\;
  m_axi_aruser(267) <= \<const0>\;
  m_axi_aruser(266) <= \<const0>\;
  m_axi_aruser(265) <= \<const0>\;
  m_axi_aruser(264) <= \<const0>\;
  m_axi_aruser(263) <= \<const0>\;
  m_axi_aruser(262) <= \<const0>\;
  m_axi_aruser(261) <= \<const0>\;
  m_axi_aruser(260) <= \<const0>\;
  m_axi_aruser(259) <= \<const0>\;
  m_axi_aruser(258) <= \<const0>\;
  m_axi_aruser(257) <= \<const0>\;
  m_axi_aruser(256) <= \<const0>\;
  m_axi_aruser(255) <= \<const0>\;
  m_axi_aruser(254) <= \<const0>\;
  m_axi_aruser(253) <= \<const0>\;
  m_axi_aruser(252) <= \<const0>\;
  m_axi_aruser(251) <= \<const0>\;
  m_axi_aruser(250) <= \<const0>\;
  m_axi_aruser(249) <= \<const0>\;
  m_axi_aruser(248) <= \<const0>\;
  m_axi_aruser(247) <= \<const0>\;
  m_axi_aruser(246) <= \<const0>\;
  m_axi_aruser(245) <= \<const0>\;
  m_axi_aruser(244) <= \<const0>\;
  m_axi_aruser(243) <= \<const0>\;
  m_axi_aruser(242) <= \<const0>\;
  m_axi_aruser(241) <= \<const0>\;
  m_axi_aruser(240) <= \<const0>\;
  m_axi_aruser(239) <= \<const0>\;
  m_axi_aruser(238) <= \<const0>\;
  m_axi_aruser(237) <= \<const0>\;
  m_axi_aruser(236) <= \<const0>\;
  m_axi_aruser(235) <= \<const0>\;
  m_axi_aruser(234) <= \<const0>\;
  m_axi_aruser(233) <= \<const0>\;
  m_axi_aruser(232) <= \<const0>\;
  m_axi_aruser(231) <= \<const0>\;
  m_axi_aruser(230) <= \<const0>\;
  m_axi_aruser(229) <= \<const0>\;
  m_axi_aruser(228) <= \<const0>\;
  m_axi_aruser(227) <= \<const0>\;
  m_axi_aruser(226) <= \<const0>\;
  m_axi_aruser(225) <= \<const0>\;
  m_axi_aruser(224) <= \<const0>\;
  m_axi_aruser(223) <= \<const0>\;
  m_axi_aruser(222) <= \<const0>\;
  m_axi_aruser(221) <= \<const0>\;
  m_axi_aruser(220) <= \<const0>\;
  m_axi_aruser(219) <= \<const0>\;
  m_axi_aruser(218) <= \<const0>\;
  m_axi_aruser(217) <= \<const0>\;
  m_axi_aruser(216) <= \<const0>\;
  m_axi_aruser(215) <= \<const0>\;
  m_axi_aruser(214) <= \<const0>\;
  m_axi_aruser(213) <= \<const0>\;
  m_axi_aruser(212) <= \<const0>\;
  m_axi_aruser(211) <= \<const0>\;
  m_axi_aruser(210) <= \<const0>\;
  m_axi_aruser(209) <= \<const0>\;
  m_axi_aruser(208) <= \<const0>\;
  m_axi_aruser(207) <= \<const0>\;
  m_axi_aruser(206) <= \<const0>\;
  m_axi_aruser(205) <= \<const0>\;
  m_axi_aruser(204) <= \<const0>\;
  m_axi_aruser(203) <= \<const0>\;
  m_axi_aruser(202) <= \<const0>\;
  m_axi_aruser(201) <= \<const0>\;
  m_axi_aruser(200) <= \<const0>\;
  m_axi_aruser(199) <= \<const0>\;
  m_axi_aruser(198) <= \<const0>\;
  m_axi_aruser(197) <= \<const0>\;
  m_axi_aruser(196) <= \<const0>\;
  m_axi_aruser(195) <= \<const0>\;
  m_axi_aruser(194) <= \<const0>\;
  m_axi_aruser(193) <= \<const0>\;
  m_axi_aruser(192) <= \<const0>\;
  m_axi_aruser(191) <= \<const0>\;
  m_axi_aruser(190) <= \<const0>\;
  m_axi_aruser(189) <= \<const0>\;
  m_axi_aruser(188) <= \<const0>\;
  m_axi_aruser(187) <= \<const0>\;
  m_axi_aruser(186) <= \<const0>\;
  m_axi_aruser(185) <= \<const0>\;
  m_axi_aruser(184) <= \<const0>\;
  m_axi_aruser(183) <= \<const0>\;
  m_axi_aruser(182) <= \<const0>\;
  m_axi_aruser(181) <= \<const0>\;
  m_axi_aruser(180) <= \<const0>\;
  m_axi_aruser(179) <= \<const0>\;
  m_axi_aruser(178) <= \<const0>\;
  m_axi_aruser(177) <= \<const0>\;
  m_axi_aruser(176) <= \<const0>\;
  m_axi_aruser(175) <= \<const0>\;
  m_axi_aruser(174) <= \<const0>\;
  m_axi_aruser(173) <= \<const0>\;
  m_axi_aruser(172) <= \<const0>\;
  m_axi_aruser(171) <= \<const0>\;
  m_axi_aruser(170) <= \<const0>\;
  m_axi_aruser(169) <= \<const0>\;
  m_axi_aruser(168) <= \<const0>\;
  m_axi_aruser(167) <= \<const0>\;
  m_axi_aruser(166) <= \<const0>\;
  m_axi_aruser(165) <= \<const0>\;
  m_axi_aruser(164) <= \<const0>\;
  m_axi_aruser(163) <= \<const0>\;
  m_axi_aruser(162) <= \<const0>\;
  m_axi_aruser(161) <= \<const0>\;
  m_axi_aruser(160) <= \<const0>\;
  m_axi_aruser(159) <= \<const0>\;
  m_axi_aruser(158) <= \<const0>\;
  m_axi_aruser(157) <= \<const0>\;
  m_axi_aruser(156) <= \<const0>\;
  m_axi_aruser(155) <= \<const0>\;
  m_axi_aruser(154) <= \<const0>\;
  m_axi_aruser(153) <= \<const0>\;
  m_axi_aruser(152) <= \<const0>\;
  m_axi_aruser(151) <= \<const0>\;
  m_axi_aruser(150) <= \<const0>\;
  m_axi_aruser(149) <= \<const0>\;
  m_axi_aruser(148) <= \<const0>\;
  m_axi_aruser(147) <= \<const0>\;
  m_axi_aruser(146) <= \<const0>\;
  m_axi_aruser(145) <= \<const0>\;
  m_axi_aruser(144) <= \<const0>\;
  m_axi_aruser(143) <= \<const0>\;
  m_axi_aruser(142) <= \<const0>\;
  m_axi_aruser(141) <= \<const0>\;
  m_axi_aruser(140) <= \<const0>\;
  m_axi_aruser(139) <= \<const0>\;
  m_axi_aruser(138) <= \<const0>\;
  m_axi_aruser(137) <= \<const0>\;
  m_axi_aruser(136) <= \<const0>\;
  m_axi_aruser(135) <= \<const0>\;
  m_axi_aruser(134) <= \<const0>\;
  m_axi_aruser(133) <= \<const0>\;
  m_axi_aruser(132) <= \<const0>\;
  m_axi_aruser(131) <= \<const0>\;
  m_axi_aruser(130) <= \<const0>\;
  m_axi_aruser(129) <= \<const0>\;
  m_axi_aruser(128) <= \<const0>\;
  m_axi_aruser(127) <= \<const0>\;
  m_axi_aruser(126) <= \<const0>\;
  m_axi_aruser(125) <= \<const0>\;
  m_axi_aruser(124) <= \<const0>\;
  m_axi_aruser(123) <= \<const0>\;
  m_axi_aruser(122) <= \<const0>\;
  m_axi_aruser(121) <= \<const0>\;
  m_axi_aruser(120) <= \<const0>\;
  m_axi_aruser(119) <= \<const0>\;
  m_axi_aruser(118) <= \<const0>\;
  m_axi_aruser(117) <= \<const0>\;
  m_axi_aruser(116) <= \<const0>\;
  m_axi_aruser(115) <= \<const0>\;
  m_axi_aruser(114) <= \<const0>\;
  m_axi_aruser(113) <= \<const0>\;
  m_axi_aruser(112) <= \<const0>\;
  m_axi_aruser(111) <= \<const0>\;
  m_axi_aruser(110) <= \<const0>\;
  m_axi_aruser(109) <= \<const0>\;
  m_axi_aruser(108) <= \<const0>\;
  m_axi_aruser(107) <= \<const0>\;
  m_axi_aruser(106) <= \<const0>\;
  m_axi_aruser(105) <= \<const0>\;
  m_axi_aruser(104) <= \<const0>\;
  m_axi_aruser(103) <= \<const0>\;
  m_axi_aruser(102) <= \<const0>\;
  m_axi_aruser(101) <= \<const0>\;
  m_axi_aruser(100) <= \<const0>\;
  m_axi_aruser(99) <= \<const0>\;
  m_axi_aruser(98) <= \<const0>\;
  m_axi_aruser(97) <= \<const0>\;
  m_axi_aruser(96) <= \<const0>\;
  m_axi_aruser(95) <= \<const0>\;
  m_axi_aruser(94) <= \<const0>\;
  m_axi_aruser(93) <= \<const0>\;
  m_axi_aruser(92) <= \<const0>\;
  m_axi_aruser(91) <= \<const0>\;
  m_axi_aruser(90) <= \<const0>\;
  m_axi_aruser(89) <= \<const0>\;
  m_axi_aruser(88) <= \<const0>\;
  m_axi_aruser(87) <= \<const0>\;
  m_axi_aruser(86) <= \<const0>\;
  m_axi_aruser(85) <= \<const0>\;
  m_axi_aruser(84) <= \<const0>\;
  m_axi_aruser(83) <= \<const0>\;
  m_axi_aruser(82) <= \<const0>\;
  m_axi_aruser(81) <= \<const0>\;
  m_axi_aruser(80) <= \<const0>\;
  m_axi_aruser(79) <= \<const0>\;
  m_axi_aruser(78) <= \<const0>\;
  m_axi_aruser(77) <= \<const0>\;
  m_axi_aruser(76) <= \<const0>\;
  m_axi_aruser(75) <= \<const0>\;
  m_axi_aruser(74) <= \<const0>\;
  m_axi_aruser(73) <= \<const0>\;
  m_axi_aruser(72) <= \<const0>\;
  m_axi_aruser(71) <= \<const0>\;
  m_axi_aruser(70) <= \<const0>\;
  m_axi_aruser(69) <= \<const0>\;
  m_axi_aruser(68) <= \<const0>\;
  m_axi_aruser(67) <= \<const0>\;
  m_axi_aruser(66) <= \<const0>\;
  m_axi_aruser(65) <= \<const0>\;
  m_axi_aruser(64) <= \<const0>\;
  m_axi_aruser(63) <= \<const0>\;
  m_axi_aruser(62) <= \<const0>\;
  m_axi_aruser(61) <= \<const0>\;
  m_axi_aruser(60) <= \<const0>\;
  m_axi_aruser(59) <= \<const0>\;
  m_axi_aruser(58) <= \<const0>\;
  m_axi_aruser(57) <= \<const0>\;
  m_axi_aruser(56) <= \<const0>\;
  m_axi_aruser(55) <= \<const0>\;
  m_axi_aruser(54) <= \<const0>\;
  m_axi_aruser(53) <= \<const0>\;
  m_axi_aruser(52) <= \<const0>\;
  m_axi_aruser(51) <= \<const0>\;
  m_axi_aruser(50) <= \<const0>\;
  m_axi_aruser(49) <= \<const0>\;
  m_axi_aruser(48) <= \<const0>\;
  m_axi_aruser(47) <= \<const0>\;
  m_axi_aruser(46) <= \<const0>\;
  m_axi_aruser(45) <= \<const0>\;
  m_axi_aruser(44) <= \<const0>\;
  m_axi_aruser(43) <= \<const0>\;
  m_axi_aruser(42) <= \<const0>\;
  m_axi_aruser(41) <= \<const0>\;
  m_axi_aruser(40) <= \<const0>\;
  m_axi_aruser(39) <= \<const0>\;
  m_axi_aruser(38) <= \<const0>\;
  m_axi_aruser(37) <= \<const0>\;
  m_axi_aruser(36) <= \<const0>\;
  m_axi_aruser(35) <= \<const0>\;
  m_axi_aruser(34) <= \<const0>\;
  m_axi_aruser(33) <= \<const0>\;
  m_axi_aruser(32) <= \<const0>\;
  m_axi_aruser(31) <= \<const0>\;
  m_axi_aruser(30) <= \<const0>\;
  m_axi_aruser(29) <= \<const0>\;
  m_axi_aruser(28) <= \<const0>\;
  m_axi_aruser(27) <= \<const0>\;
  m_axi_aruser(26) <= \<const0>\;
  m_axi_aruser(25) <= \<const0>\;
  m_axi_aruser(24) <= \<const0>\;
  m_axi_aruser(23) <= \<const0>\;
  m_axi_aruser(22) <= \<const0>\;
  m_axi_aruser(21) <= \<const0>\;
  m_axi_aruser(20) <= \<const0>\;
  m_axi_aruser(19) <= \<const0>\;
  m_axi_aruser(18) <= \<const0>\;
  m_axi_aruser(17) <= \<const0>\;
  m_axi_aruser(16) <= \<const0>\;
  m_axi_aruser(15) <= \<const0>\;
  m_axi_aruser(14) <= \<const0>\;
  m_axi_aruser(13) <= \<const0>\;
  m_axi_aruser(12) <= \<const0>\;
  m_axi_aruser(11) <= \<const0>\;
  m_axi_aruser(10) <= \<const0>\;
  m_axi_aruser(9) <= \<const0>\;
  m_axi_aruser(8) <= \<const0>\;
  m_axi_aruser(7) <= \<const0>\;
  m_axi_aruser(6) <= \<const0>\;
  m_axi_aruser(5) <= \<const0>\;
  m_axi_aruser(4) <= \<const0>\;
  m_axi_aruser(3) <= \<const0>\;
  m_axi_aruser(2) <= \<const0>\;
  m_axi_aruser(1) <= \<const0>\;
  m_axi_aruser(0) <= \<const0>\;
  m_axi_awaddr(31) <= \<const0>\;
  m_axi_awaddr(30) <= \<const0>\;
  m_axi_awaddr(29) <= \<const0>\;
  m_axi_awaddr(28) <= \<const0>\;
  m_axi_awaddr(27) <= \<const0>\;
  m_axi_awaddr(26) <= \<const0>\;
  m_axi_awaddr(25) <= \<const0>\;
  m_axi_awaddr(24) <= \<const0>\;
  m_axi_awaddr(23) <= \<const0>\;
  m_axi_awaddr(22) <= \<const0>\;
  m_axi_awaddr(21) <= \<const0>\;
  m_axi_awaddr(20) <= \<const0>\;
  m_axi_awaddr(19) <= \<const0>\;
  m_axi_awaddr(18) <= \<const0>\;
  m_axi_awaddr(17) <= \<const0>\;
  m_axi_awaddr(16) <= \<const0>\;
  m_axi_awaddr(15) <= \<const0>\;
  m_axi_awaddr(14) <= \<const0>\;
  m_axi_awaddr(13) <= \<const0>\;
  m_axi_awaddr(12) <= \<const0>\;
  m_axi_awaddr(11) <= \<const0>\;
  m_axi_awaddr(10) <= \<const0>\;
  m_axi_awaddr(9) <= \<const0>\;
  m_axi_awaddr(8) <= \<const0>\;
  m_axi_awaddr(7) <= \<const0>\;
  m_axi_awaddr(6) <= \<const0>\;
  m_axi_awaddr(5) <= \<const0>\;
  m_axi_awaddr(4) <= \<const0>\;
  m_axi_awaddr(3) <= \<const0>\;
  m_axi_awaddr(2) <= \<const0>\;
  m_axi_awaddr(1) <= \<const0>\;
  m_axi_awaddr(0) <= \<const0>\;
  m_axi_awburst(1) <= \<const0>\;
  m_axi_awburst(0) <= \<const0>\;
  m_axi_awcache(3) <= \<const0>\;
  m_axi_awcache(2) <= \<const0>\;
  m_axi_awcache(1) <= \<const0>\;
  m_axi_awcache(0) <= \<const0>\;
  m_axi_awid(0) <= \<const0>\;
  m_axi_awlen(7) <= \<const0>\;
  m_axi_awlen(6) <= \<const0>\;
  m_axi_awlen(5) <= \<const0>\;
  m_axi_awlen(4) <= \<const0>\;
  m_axi_awlen(3) <= \<const0>\;
  m_axi_awlen(2) <= \<const0>\;
  m_axi_awlen(1) <= \<const0>\;
  m_axi_awlen(0) <= \<const0>\;
  m_axi_awlock(0) <= \<const0>\;
  m_axi_awprot(2) <= \<const0>\;
  m_axi_awprot(1) <= \<const0>\;
  m_axi_awprot(0) <= \<const0>\;
  m_axi_awqos(3) <= \<const0>\;
  m_axi_awqos(2) <= \<const0>\;
  m_axi_awqos(1) <= \<const0>\;
  m_axi_awqos(0) <= \<const0>\;
  m_axi_awsize(2) <= \<const0>\;
  m_axi_awsize(1) <= \<const0>\;
  m_axi_awsize(0) <= \<const0>\;
  m_axi_awuser(1023) <= \<const0>\;
  m_axi_awuser(1022) <= \<const0>\;
  m_axi_awuser(1021) <= \<const0>\;
  m_axi_awuser(1020) <= \<const0>\;
  m_axi_awuser(1019) <= \<const0>\;
  m_axi_awuser(1018) <= \<const0>\;
  m_axi_awuser(1017) <= \<const0>\;
  m_axi_awuser(1016) <= \<const0>\;
  m_axi_awuser(1015) <= \<const0>\;
  m_axi_awuser(1014) <= \<const0>\;
  m_axi_awuser(1013) <= \<const0>\;
  m_axi_awuser(1012) <= \<const0>\;
  m_axi_awuser(1011) <= \<const0>\;
  m_axi_awuser(1010) <= \<const0>\;
  m_axi_awuser(1009) <= \<const0>\;
  m_axi_awuser(1008) <= \<const0>\;
  m_axi_awuser(1007) <= \<const0>\;
  m_axi_awuser(1006) <= \<const0>\;
  m_axi_awuser(1005) <= \<const0>\;
  m_axi_awuser(1004) <= \<const0>\;
  m_axi_awuser(1003) <= \<const0>\;
  m_axi_awuser(1002) <= \<const0>\;
  m_axi_awuser(1001) <= \<const0>\;
  m_axi_awuser(1000) <= \<const0>\;
  m_axi_awuser(999) <= \<const0>\;
  m_axi_awuser(998) <= \<const0>\;
  m_axi_awuser(997) <= \<const0>\;
  m_axi_awuser(996) <= \<const0>\;
  m_axi_awuser(995) <= \<const0>\;
  m_axi_awuser(994) <= \<const0>\;
  m_axi_awuser(993) <= \<const0>\;
  m_axi_awuser(992) <= \<const0>\;
  m_axi_awuser(991) <= \<const0>\;
  m_axi_awuser(990) <= \<const0>\;
  m_axi_awuser(989) <= \<const0>\;
  m_axi_awuser(988) <= \<const0>\;
  m_axi_awuser(987) <= \<const0>\;
  m_axi_awuser(986) <= \<const0>\;
  m_axi_awuser(985) <= \<const0>\;
  m_axi_awuser(984) <= \<const0>\;
  m_axi_awuser(983) <= \<const0>\;
  m_axi_awuser(982) <= \<const0>\;
  m_axi_awuser(981) <= \<const0>\;
  m_axi_awuser(980) <= \<const0>\;
  m_axi_awuser(979) <= \<const0>\;
  m_axi_awuser(978) <= \<const0>\;
  m_axi_awuser(977) <= \<const0>\;
  m_axi_awuser(976) <= \<const0>\;
  m_axi_awuser(975) <= \<const0>\;
  m_axi_awuser(974) <= \<const0>\;
  m_axi_awuser(973) <= \<const0>\;
  m_axi_awuser(972) <= \<const0>\;
  m_axi_awuser(971) <= \<const0>\;
  m_axi_awuser(970) <= \<const0>\;
  m_axi_awuser(969) <= \<const0>\;
  m_axi_awuser(968) <= \<const0>\;
  m_axi_awuser(967) <= \<const0>\;
  m_axi_awuser(966) <= \<const0>\;
  m_axi_awuser(965) <= \<const0>\;
  m_axi_awuser(964) <= \<const0>\;
  m_axi_awuser(963) <= \<const0>\;
  m_axi_awuser(962) <= \<const0>\;
  m_axi_awuser(961) <= \<const0>\;
  m_axi_awuser(960) <= \<const0>\;
  m_axi_awuser(959) <= \<const0>\;
  m_axi_awuser(958) <= \<const0>\;
  m_axi_awuser(957) <= \<const0>\;
  m_axi_awuser(956) <= \<const0>\;
  m_axi_awuser(955) <= \<const0>\;
  m_axi_awuser(954) <= \<const0>\;
  m_axi_awuser(953) <= \<const0>\;
  m_axi_awuser(952) <= \<const0>\;
  m_axi_awuser(951) <= \<const0>\;
  m_axi_awuser(950) <= \<const0>\;
  m_axi_awuser(949) <= \<const0>\;
  m_axi_awuser(948) <= \<const0>\;
  m_axi_awuser(947) <= \<const0>\;
  m_axi_awuser(946) <= \<const0>\;
  m_axi_awuser(945) <= \<const0>\;
  m_axi_awuser(944) <= \<const0>\;
  m_axi_awuser(943) <= \<const0>\;
  m_axi_awuser(942) <= \<const0>\;
  m_axi_awuser(941) <= \<const0>\;
  m_axi_awuser(940) <= \<const0>\;
  m_axi_awuser(939) <= \<const0>\;
  m_axi_awuser(938) <= \<const0>\;
  m_axi_awuser(937) <= \<const0>\;
  m_axi_awuser(936) <= \<const0>\;
  m_axi_awuser(935) <= \<const0>\;
  m_axi_awuser(934) <= \<const0>\;
  m_axi_awuser(933) <= \<const0>\;
  m_axi_awuser(932) <= \<const0>\;
  m_axi_awuser(931) <= \<const0>\;
  m_axi_awuser(930) <= \<const0>\;
  m_axi_awuser(929) <= \<const0>\;
  m_axi_awuser(928) <= \<const0>\;
  m_axi_awuser(927) <= \<const0>\;
  m_axi_awuser(926) <= \<const0>\;
  m_axi_awuser(925) <= \<const0>\;
  m_axi_awuser(924) <= \<const0>\;
  m_axi_awuser(923) <= \<const0>\;
  m_axi_awuser(922) <= \<const0>\;
  m_axi_awuser(921) <= \<const0>\;
  m_axi_awuser(920) <= \<const0>\;
  m_axi_awuser(919) <= \<const0>\;
  m_axi_awuser(918) <= \<const0>\;
  m_axi_awuser(917) <= \<const0>\;
  m_axi_awuser(916) <= \<const0>\;
  m_axi_awuser(915) <= \<const0>\;
  m_axi_awuser(914) <= \<const0>\;
  m_axi_awuser(913) <= \<const0>\;
  m_axi_awuser(912) <= \<const0>\;
  m_axi_awuser(911) <= \<const0>\;
  m_axi_awuser(910) <= \<const0>\;
  m_axi_awuser(909) <= \<const0>\;
  m_axi_awuser(908) <= \<const0>\;
  m_axi_awuser(907) <= \<const0>\;
  m_axi_awuser(906) <= \<const0>\;
  m_axi_awuser(905) <= \<const0>\;
  m_axi_awuser(904) <= \<const0>\;
  m_axi_awuser(903) <= \<const0>\;
  m_axi_awuser(902) <= \<const0>\;
  m_axi_awuser(901) <= \<const0>\;
  m_axi_awuser(900) <= \<const0>\;
  m_axi_awuser(899) <= \<const0>\;
  m_axi_awuser(898) <= \<const0>\;
  m_axi_awuser(897) <= \<const0>\;
  m_axi_awuser(896) <= \<const0>\;
  m_axi_awuser(895) <= \<const0>\;
  m_axi_awuser(894) <= \<const0>\;
  m_axi_awuser(893) <= \<const0>\;
  m_axi_awuser(892) <= \<const0>\;
  m_axi_awuser(891) <= \<const0>\;
  m_axi_awuser(890) <= \<const0>\;
  m_axi_awuser(889) <= \<const0>\;
  m_axi_awuser(888) <= \<const0>\;
  m_axi_awuser(887) <= \<const0>\;
  m_axi_awuser(886) <= \<const0>\;
  m_axi_awuser(885) <= \<const0>\;
  m_axi_awuser(884) <= \<const0>\;
  m_axi_awuser(883) <= \<const0>\;
  m_axi_awuser(882) <= \<const0>\;
  m_axi_awuser(881) <= \<const0>\;
  m_axi_awuser(880) <= \<const0>\;
  m_axi_awuser(879) <= \<const0>\;
  m_axi_awuser(878) <= \<const0>\;
  m_axi_awuser(877) <= \<const0>\;
  m_axi_awuser(876) <= \<const0>\;
  m_axi_awuser(875) <= \<const0>\;
  m_axi_awuser(874) <= \<const0>\;
  m_axi_awuser(873) <= \<const0>\;
  m_axi_awuser(872) <= \<const0>\;
  m_axi_awuser(871) <= \<const0>\;
  m_axi_awuser(870) <= \<const0>\;
  m_axi_awuser(869) <= \<const0>\;
  m_axi_awuser(868) <= \<const0>\;
  m_axi_awuser(867) <= \<const0>\;
  m_axi_awuser(866) <= \<const0>\;
  m_axi_awuser(865) <= \<const0>\;
  m_axi_awuser(864) <= \<const0>\;
  m_axi_awuser(863) <= \<const0>\;
  m_axi_awuser(862) <= \<const0>\;
  m_axi_awuser(861) <= \<const0>\;
  m_axi_awuser(860) <= \<const0>\;
  m_axi_awuser(859) <= \<const0>\;
  m_axi_awuser(858) <= \<const0>\;
  m_axi_awuser(857) <= \<const0>\;
  m_axi_awuser(856) <= \<const0>\;
  m_axi_awuser(855) <= \<const0>\;
  m_axi_awuser(854) <= \<const0>\;
  m_axi_awuser(853) <= \<const0>\;
  m_axi_awuser(852) <= \<const0>\;
  m_axi_awuser(851) <= \<const0>\;
  m_axi_awuser(850) <= \<const0>\;
  m_axi_awuser(849) <= \<const0>\;
  m_axi_awuser(848) <= \<const0>\;
  m_axi_awuser(847) <= \<const0>\;
  m_axi_awuser(846) <= \<const0>\;
  m_axi_awuser(845) <= \<const0>\;
  m_axi_awuser(844) <= \<const0>\;
  m_axi_awuser(843) <= \<const0>\;
  m_axi_awuser(842) <= \<const0>\;
  m_axi_awuser(841) <= \<const0>\;
  m_axi_awuser(840) <= \<const0>\;
  m_axi_awuser(839) <= \<const0>\;
  m_axi_awuser(838) <= \<const0>\;
  m_axi_awuser(837) <= \<const0>\;
  m_axi_awuser(836) <= \<const0>\;
  m_axi_awuser(835) <= \<const0>\;
  m_axi_awuser(834) <= \<const0>\;
  m_axi_awuser(833) <= \<const0>\;
  m_axi_awuser(832) <= \<const0>\;
  m_axi_awuser(831) <= \<const0>\;
  m_axi_awuser(830) <= \<const0>\;
  m_axi_awuser(829) <= \<const0>\;
  m_axi_awuser(828) <= \<const0>\;
  m_axi_awuser(827) <= \<const0>\;
  m_axi_awuser(826) <= \<const0>\;
  m_axi_awuser(825) <= \<const0>\;
  m_axi_awuser(824) <= \<const0>\;
  m_axi_awuser(823) <= \<const0>\;
  m_axi_awuser(822) <= \<const0>\;
  m_axi_awuser(821) <= \<const0>\;
  m_axi_awuser(820) <= \<const0>\;
  m_axi_awuser(819) <= \<const0>\;
  m_axi_awuser(818) <= \<const0>\;
  m_axi_awuser(817) <= \<const0>\;
  m_axi_awuser(816) <= \<const0>\;
  m_axi_awuser(815) <= \<const0>\;
  m_axi_awuser(814) <= \<const0>\;
  m_axi_awuser(813) <= \<const0>\;
  m_axi_awuser(812) <= \<const0>\;
  m_axi_awuser(811) <= \<const0>\;
  m_axi_awuser(810) <= \<const0>\;
  m_axi_awuser(809) <= \<const0>\;
  m_axi_awuser(808) <= \<const0>\;
  m_axi_awuser(807) <= \<const0>\;
  m_axi_awuser(806) <= \<const0>\;
  m_axi_awuser(805) <= \<const0>\;
  m_axi_awuser(804) <= \<const0>\;
  m_axi_awuser(803) <= \<const0>\;
  m_axi_awuser(802) <= \<const0>\;
  m_axi_awuser(801) <= \<const0>\;
  m_axi_awuser(800) <= \<const0>\;
  m_axi_awuser(799) <= \<const0>\;
  m_axi_awuser(798) <= \<const0>\;
  m_axi_awuser(797) <= \<const0>\;
  m_axi_awuser(796) <= \<const0>\;
  m_axi_awuser(795) <= \<const0>\;
  m_axi_awuser(794) <= \<const0>\;
  m_axi_awuser(793) <= \<const0>\;
  m_axi_awuser(792) <= \<const0>\;
  m_axi_awuser(791) <= \<const0>\;
  m_axi_awuser(790) <= \<const0>\;
  m_axi_awuser(789) <= \<const0>\;
  m_axi_awuser(788) <= \<const0>\;
  m_axi_awuser(787) <= \<const0>\;
  m_axi_awuser(786) <= \<const0>\;
  m_axi_awuser(785) <= \<const0>\;
  m_axi_awuser(784) <= \<const0>\;
  m_axi_awuser(783) <= \<const0>\;
  m_axi_awuser(782) <= \<const0>\;
  m_axi_awuser(781) <= \<const0>\;
  m_axi_awuser(780) <= \<const0>\;
  m_axi_awuser(779) <= \<const0>\;
  m_axi_awuser(778) <= \<const0>\;
  m_axi_awuser(777) <= \<const0>\;
  m_axi_awuser(776) <= \<const0>\;
  m_axi_awuser(775) <= \<const0>\;
  m_axi_awuser(774) <= \<const0>\;
  m_axi_awuser(773) <= \<const0>\;
  m_axi_awuser(772) <= \<const0>\;
  m_axi_awuser(771) <= \<const0>\;
  m_axi_awuser(770) <= \<const0>\;
  m_axi_awuser(769) <= \<const0>\;
  m_axi_awuser(768) <= \<const0>\;
  m_axi_awuser(767) <= \<const0>\;
  m_axi_awuser(766) <= \<const0>\;
  m_axi_awuser(765) <= \<const0>\;
  m_axi_awuser(764) <= \<const0>\;
  m_axi_awuser(763) <= \<const0>\;
  m_axi_awuser(762) <= \<const0>\;
  m_axi_awuser(761) <= \<const0>\;
  m_axi_awuser(760) <= \<const0>\;
  m_axi_awuser(759) <= \<const0>\;
  m_axi_awuser(758) <= \<const0>\;
  m_axi_awuser(757) <= \<const0>\;
  m_axi_awuser(756) <= \<const0>\;
  m_axi_awuser(755) <= \<const0>\;
  m_axi_awuser(754) <= \<const0>\;
  m_axi_awuser(753) <= \<const0>\;
  m_axi_awuser(752) <= \<const0>\;
  m_axi_awuser(751) <= \<const0>\;
  m_axi_awuser(750) <= \<const0>\;
  m_axi_awuser(749) <= \<const0>\;
  m_axi_awuser(748) <= \<const0>\;
  m_axi_awuser(747) <= \<const0>\;
  m_axi_awuser(746) <= \<const0>\;
  m_axi_awuser(745) <= \<const0>\;
  m_axi_awuser(744) <= \<const0>\;
  m_axi_awuser(743) <= \<const0>\;
  m_axi_awuser(742) <= \<const0>\;
  m_axi_awuser(741) <= \<const0>\;
  m_axi_awuser(740) <= \<const0>\;
  m_axi_awuser(739) <= \<const0>\;
  m_axi_awuser(738) <= \<const0>\;
  m_axi_awuser(737) <= \<const0>\;
  m_axi_awuser(736) <= \<const0>\;
  m_axi_awuser(735) <= \<const0>\;
  m_axi_awuser(734) <= \<const0>\;
  m_axi_awuser(733) <= \<const0>\;
  m_axi_awuser(732) <= \<const0>\;
  m_axi_awuser(731) <= \<const0>\;
  m_axi_awuser(730) <= \<const0>\;
  m_axi_awuser(729) <= \<const0>\;
  m_axi_awuser(728) <= \<const0>\;
  m_axi_awuser(727) <= \<const0>\;
  m_axi_awuser(726) <= \<const0>\;
  m_axi_awuser(725) <= \<const0>\;
  m_axi_awuser(724) <= \<const0>\;
  m_axi_awuser(723) <= \<const0>\;
  m_axi_awuser(722) <= \<const0>\;
  m_axi_awuser(721) <= \<const0>\;
  m_axi_awuser(720) <= \<const0>\;
  m_axi_awuser(719) <= \<const0>\;
  m_axi_awuser(718) <= \<const0>\;
  m_axi_awuser(717) <= \<const0>\;
  m_axi_awuser(716) <= \<const0>\;
  m_axi_awuser(715) <= \<const0>\;
  m_axi_awuser(714) <= \<const0>\;
  m_axi_awuser(713) <= \<const0>\;
  m_axi_awuser(712) <= \<const0>\;
  m_axi_awuser(711) <= \<const0>\;
  m_axi_awuser(710) <= \<const0>\;
  m_axi_awuser(709) <= \<const0>\;
  m_axi_awuser(708) <= \<const0>\;
  m_axi_awuser(707) <= \<const0>\;
  m_axi_awuser(706) <= \<const0>\;
  m_axi_awuser(705) <= \<const0>\;
  m_axi_awuser(704) <= \<const0>\;
  m_axi_awuser(703) <= \<const0>\;
  m_axi_awuser(702) <= \<const0>\;
  m_axi_awuser(701) <= \<const0>\;
  m_axi_awuser(700) <= \<const0>\;
  m_axi_awuser(699) <= \<const0>\;
  m_axi_awuser(698) <= \<const0>\;
  m_axi_awuser(697) <= \<const0>\;
  m_axi_awuser(696) <= \<const0>\;
  m_axi_awuser(695) <= \<const0>\;
  m_axi_awuser(694) <= \<const0>\;
  m_axi_awuser(693) <= \<const0>\;
  m_axi_awuser(692) <= \<const0>\;
  m_axi_awuser(691) <= \<const0>\;
  m_axi_awuser(690) <= \<const0>\;
  m_axi_awuser(689) <= \<const0>\;
  m_axi_awuser(688) <= \<const0>\;
  m_axi_awuser(687) <= \<const0>\;
  m_axi_awuser(686) <= \<const0>\;
  m_axi_awuser(685) <= \<const0>\;
  m_axi_awuser(684) <= \<const0>\;
  m_axi_awuser(683) <= \<const0>\;
  m_axi_awuser(682) <= \<const0>\;
  m_axi_awuser(681) <= \<const0>\;
  m_axi_awuser(680) <= \<const0>\;
  m_axi_awuser(679) <= \<const0>\;
  m_axi_awuser(678) <= \<const0>\;
  m_axi_awuser(677) <= \<const0>\;
  m_axi_awuser(676) <= \<const0>\;
  m_axi_awuser(675) <= \<const0>\;
  m_axi_awuser(674) <= \<const0>\;
  m_axi_awuser(673) <= \<const0>\;
  m_axi_awuser(672) <= \<const0>\;
  m_axi_awuser(671) <= \<const0>\;
  m_axi_awuser(670) <= \<const0>\;
  m_axi_awuser(669) <= \<const0>\;
  m_axi_awuser(668) <= \<const0>\;
  m_axi_awuser(667) <= \<const0>\;
  m_axi_awuser(666) <= \<const0>\;
  m_axi_awuser(665) <= \<const0>\;
  m_axi_awuser(664) <= \<const0>\;
  m_axi_awuser(663) <= \<const0>\;
  m_axi_awuser(662) <= \<const0>\;
  m_axi_awuser(661) <= \<const0>\;
  m_axi_awuser(660) <= \<const0>\;
  m_axi_awuser(659) <= \<const0>\;
  m_axi_awuser(658) <= \<const0>\;
  m_axi_awuser(657) <= \<const0>\;
  m_axi_awuser(656) <= \<const0>\;
  m_axi_awuser(655) <= \<const0>\;
  m_axi_awuser(654) <= \<const0>\;
  m_axi_awuser(653) <= \<const0>\;
  m_axi_awuser(652) <= \<const0>\;
  m_axi_awuser(651) <= \<const0>\;
  m_axi_awuser(650) <= \<const0>\;
  m_axi_awuser(649) <= \<const0>\;
  m_axi_awuser(648) <= \<const0>\;
  m_axi_awuser(647) <= \<const0>\;
  m_axi_awuser(646) <= \<const0>\;
  m_axi_awuser(645) <= \<const0>\;
  m_axi_awuser(644) <= \<const0>\;
  m_axi_awuser(643) <= \<const0>\;
  m_axi_awuser(642) <= \<const0>\;
  m_axi_awuser(641) <= \<const0>\;
  m_axi_awuser(640) <= \<const0>\;
  m_axi_awuser(639) <= \<const0>\;
  m_axi_awuser(638) <= \<const0>\;
  m_axi_awuser(637) <= \<const0>\;
  m_axi_awuser(636) <= \<const0>\;
  m_axi_awuser(635) <= \<const0>\;
  m_axi_awuser(634) <= \<const0>\;
  m_axi_awuser(633) <= \<const0>\;
  m_axi_awuser(632) <= \<const0>\;
  m_axi_awuser(631) <= \<const0>\;
  m_axi_awuser(630) <= \<const0>\;
  m_axi_awuser(629) <= \<const0>\;
  m_axi_awuser(628) <= \<const0>\;
  m_axi_awuser(627) <= \<const0>\;
  m_axi_awuser(626) <= \<const0>\;
  m_axi_awuser(625) <= \<const0>\;
  m_axi_awuser(624) <= \<const0>\;
  m_axi_awuser(623) <= \<const0>\;
  m_axi_awuser(622) <= \<const0>\;
  m_axi_awuser(621) <= \<const0>\;
  m_axi_awuser(620) <= \<const0>\;
  m_axi_awuser(619) <= \<const0>\;
  m_axi_awuser(618) <= \<const0>\;
  m_axi_awuser(617) <= \<const0>\;
  m_axi_awuser(616) <= \<const0>\;
  m_axi_awuser(615) <= \<const0>\;
  m_axi_awuser(614) <= \<const0>\;
  m_axi_awuser(613) <= \<const0>\;
  m_axi_awuser(612) <= \<const0>\;
  m_axi_awuser(611) <= \<const0>\;
  m_axi_awuser(610) <= \<const0>\;
  m_axi_awuser(609) <= \<const0>\;
  m_axi_awuser(608) <= \<const0>\;
  m_axi_awuser(607) <= \<const0>\;
  m_axi_awuser(606) <= \<const0>\;
  m_axi_awuser(605) <= \<const0>\;
  m_axi_awuser(604) <= \<const0>\;
  m_axi_awuser(603) <= \<const0>\;
  m_axi_awuser(602) <= \<const0>\;
  m_axi_awuser(601) <= \<const0>\;
  m_axi_awuser(600) <= \<const0>\;
  m_axi_awuser(599) <= \<const0>\;
  m_axi_awuser(598) <= \<const0>\;
  m_axi_awuser(597) <= \<const0>\;
  m_axi_awuser(596) <= \<const0>\;
  m_axi_awuser(595) <= \<const0>\;
  m_axi_awuser(594) <= \<const0>\;
  m_axi_awuser(593) <= \<const0>\;
  m_axi_awuser(592) <= \<const0>\;
  m_axi_awuser(591) <= \<const0>\;
  m_axi_awuser(590) <= \<const0>\;
  m_axi_awuser(589) <= \<const0>\;
  m_axi_awuser(588) <= \<const0>\;
  m_axi_awuser(587) <= \<const0>\;
  m_axi_awuser(586) <= \<const0>\;
  m_axi_awuser(585) <= \<const0>\;
  m_axi_awuser(584) <= \<const0>\;
  m_axi_awuser(583) <= \<const0>\;
  m_axi_awuser(582) <= \<const0>\;
  m_axi_awuser(581) <= \<const0>\;
  m_axi_awuser(580) <= \<const0>\;
  m_axi_awuser(579) <= \<const0>\;
  m_axi_awuser(578) <= \<const0>\;
  m_axi_awuser(577) <= \<const0>\;
  m_axi_awuser(576) <= \<const0>\;
  m_axi_awuser(575) <= \<const0>\;
  m_axi_awuser(574) <= \<const0>\;
  m_axi_awuser(573) <= \<const0>\;
  m_axi_awuser(572) <= \<const0>\;
  m_axi_awuser(571) <= \<const0>\;
  m_axi_awuser(570) <= \<const0>\;
  m_axi_awuser(569) <= \<const0>\;
  m_axi_awuser(568) <= \<const0>\;
  m_axi_awuser(567) <= \<const0>\;
  m_axi_awuser(566) <= \<const0>\;
  m_axi_awuser(565) <= \<const0>\;
  m_axi_awuser(564) <= \<const0>\;
  m_axi_awuser(563) <= \<const0>\;
  m_axi_awuser(562) <= \<const0>\;
  m_axi_awuser(561) <= \<const0>\;
  m_axi_awuser(560) <= \<const0>\;
  m_axi_awuser(559) <= \<const0>\;
  m_axi_awuser(558) <= \<const0>\;
  m_axi_awuser(557) <= \<const0>\;
  m_axi_awuser(556) <= \<const0>\;
  m_axi_awuser(555) <= \<const0>\;
  m_axi_awuser(554) <= \<const0>\;
  m_axi_awuser(553) <= \<const0>\;
  m_axi_awuser(552) <= \<const0>\;
  m_axi_awuser(551) <= \<const0>\;
  m_axi_awuser(550) <= \<const0>\;
  m_axi_awuser(549) <= \<const0>\;
  m_axi_awuser(548) <= \<const0>\;
  m_axi_awuser(547) <= \<const0>\;
  m_axi_awuser(546) <= \<const0>\;
  m_axi_awuser(545) <= \<const0>\;
  m_axi_awuser(544) <= \<const0>\;
  m_axi_awuser(543) <= \<const0>\;
  m_axi_awuser(542) <= \<const0>\;
  m_axi_awuser(541) <= \<const0>\;
  m_axi_awuser(540) <= \<const0>\;
  m_axi_awuser(539) <= \<const0>\;
  m_axi_awuser(538) <= \<const0>\;
  m_axi_awuser(537) <= \<const0>\;
  m_axi_awuser(536) <= \<const0>\;
  m_axi_awuser(535) <= \<const0>\;
  m_axi_awuser(534) <= \<const0>\;
  m_axi_awuser(533) <= \<const0>\;
  m_axi_awuser(532) <= \<const0>\;
  m_axi_awuser(531) <= \<const0>\;
  m_axi_awuser(530) <= \<const0>\;
  m_axi_awuser(529) <= \<const0>\;
  m_axi_awuser(528) <= \<const0>\;
  m_axi_awuser(527) <= \<const0>\;
  m_axi_awuser(526) <= \<const0>\;
  m_axi_awuser(525) <= \<const0>\;
  m_axi_awuser(524) <= \<const0>\;
  m_axi_awuser(523) <= \<const0>\;
  m_axi_awuser(522) <= \<const0>\;
  m_axi_awuser(521) <= \<const0>\;
  m_axi_awuser(520) <= \<const0>\;
  m_axi_awuser(519) <= \<const0>\;
  m_axi_awuser(518) <= \<const0>\;
  m_axi_awuser(517) <= \<const0>\;
  m_axi_awuser(516) <= \<const0>\;
  m_axi_awuser(515) <= \<const0>\;
  m_axi_awuser(514) <= \<const0>\;
  m_axi_awuser(513) <= \<const0>\;
  m_axi_awuser(512) <= \<const0>\;
  m_axi_awuser(511) <= \<const0>\;
  m_axi_awuser(510) <= \<const0>\;
  m_axi_awuser(509) <= \<const0>\;
  m_axi_awuser(508) <= \<const0>\;
  m_axi_awuser(507) <= \<const0>\;
  m_axi_awuser(506) <= \<const0>\;
  m_axi_awuser(505) <= \<const0>\;
  m_axi_awuser(504) <= \<const0>\;
  m_axi_awuser(503) <= \<const0>\;
  m_axi_awuser(502) <= \<const0>\;
  m_axi_awuser(501) <= \<const0>\;
  m_axi_awuser(500) <= \<const0>\;
  m_axi_awuser(499) <= \<const0>\;
  m_axi_awuser(498) <= \<const0>\;
  m_axi_awuser(497) <= \<const0>\;
  m_axi_awuser(496) <= \<const0>\;
  m_axi_awuser(495) <= \<const0>\;
  m_axi_awuser(494) <= \<const0>\;
  m_axi_awuser(493) <= \<const0>\;
  m_axi_awuser(492) <= \<const0>\;
  m_axi_awuser(491) <= \<const0>\;
  m_axi_awuser(490) <= \<const0>\;
  m_axi_awuser(489) <= \<const0>\;
  m_axi_awuser(488) <= \<const0>\;
  m_axi_awuser(487) <= \<const0>\;
  m_axi_awuser(486) <= \<const0>\;
  m_axi_awuser(485) <= \<const0>\;
  m_axi_awuser(484) <= \<const0>\;
  m_axi_awuser(483) <= \<const0>\;
  m_axi_awuser(482) <= \<const0>\;
  m_axi_awuser(481) <= \<const0>\;
  m_axi_awuser(480) <= \<const0>\;
  m_axi_awuser(479) <= \<const0>\;
  m_axi_awuser(478) <= \<const0>\;
  m_axi_awuser(477) <= \<const0>\;
  m_axi_awuser(476) <= \<const0>\;
  m_axi_awuser(475) <= \<const0>\;
  m_axi_awuser(474) <= \<const0>\;
  m_axi_awuser(473) <= \<const0>\;
  m_axi_awuser(472) <= \<const0>\;
  m_axi_awuser(471) <= \<const0>\;
  m_axi_awuser(470) <= \<const0>\;
  m_axi_awuser(469) <= \<const0>\;
  m_axi_awuser(468) <= \<const0>\;
  m_axi_awuser(467) <= \<const0>\;
  m_axi_awuser(466) <= \<const0>\;
  m_axi_awuser(465) <= \<const0>\;
  m_axi_awuser(464) <= \<const0>\;
  m_axi_awuser(463) <= \<const0>\;
  m_axi_awuser(462) <= \<const0>\;
  m_axi_awuser(461) <= \<const0>\;
  m_axi_awuser(460) <= \<const0>\;
  m_axi_awuser(459) <= \<const0>\;
  m_axi_awuser(458) <= \<const0>\;
  m_axi_awuser(457) <= \<const0>\;
  m_axi_awuser(456) <= \<const0>\;
  m_axi_awuser(455) <= \<const0>\;
  m_axi_awuser(454) <= \<const0>\;
  m_axi_awuser(453) <= \<const0>\;
  m_axi_awuser(452) <= \<const0>\;
  m_axi_awuser(451) <= \<const0>\;
  m_axi_awuser(450) <= \<const0>\;
  m_axi_awuser(449) <= \<const0>\;
  m_axi_awuser(448) <= \<const0>\;
  m_axi_awuser(447) <= \<const0>\;
  m_axi_awuser(446) <= \<const0>\;
  m_axi_awuser(445) <= \<const0>\;
  m_axi_awuser(444) <= \<const0>\;
  m_axi_awuser(443) <= \<const0>\;
  m_axi_awuser(442) <= \<const0>\;
  m_axi_awuser(441) <= \<const0>\;
  m_axi_awuser(440) <= \<const0>\;
  m_axi_awuser(439) <= \<const0>\;
  m_axi_awuser(438) <= \<const0>\;
  m_axi_awuser(437) <= \<const0>\;
  m_axi_awuser(436) <= \<const0>\;
  m_axi_awuser(435) <= \<const0>\;
  m_axi_awuser(434) <= \<const0>\;
  m_axi_awuser(433) <= \<const0>\;
  m_axi_awuser(432) <= \<const0>\;
  m_axi_awuser(431) <= \<const0>\;
  m_axi_awuser(430) <= \<const0>\;
  m_axi_awuser(429) <= \<const0>\;
  m_axi_awuser(428) <= \<const0>\;
  m_axi_awuser(427) <= \<const0>\;
  m_axi_awuser(426) <= \<const0>\;
  m_axi_awuser(425) <= \<const0>\;
  m_axi_awuser(424) <= \<const0>\;
  m_axi_awuser(423) <= \<const0>\;
  m_axi_awuser(422) <= \<const0>\;
  m_axi_awuser(421) <= \<const0>\;
  m_axi_awuser(420) <= \<const0>\;
  m_axi_awuser(419) <= \<const0>\;
  m_axi_awuser(418) <= \<const0>\;
  m_axi_awuser(417) <= \<const0>\;
  m_axi_awuser(416) <= \<const0>\;
  m_axi_awuser(415) <= \<const0>\;
  m_axi_awuser(414) <= \<const0>\;
  m_axi_awuser(413) <= \<const0>\;
  m_axi_awuser(412) <= \<const0>\;
  m_axi_awuser(411) <= \<const0>\;
  m_axi_awuser(410) <= \<const0>\;
  m_axi_awuser(409) <= \<const0>\;
  m_axi_awuser(408) <= \<const0>\;
  m_axi_awuser(407) <= \<const0>\;
  m_axi_awuser(406) <= \<const0>\;
  m_axi_awuser(405) <= \<const0>\;
  m_axi_awuser(404) <= \<const0>\;
  m_axi_awuser(403) <= \<const0>\;
  m_axi_awuser(402) <= \<const0>\;
  m_axi_awuser(401) <= \<const0>\;
  m_axi_awuser(400) <= \<const0>\;
  m_axi_awuser(399) <= \<const0>\;
  m_axi_awuser(398) <= \<const0>\;
  m_axi_awuser(397) <= \<const0>\;
  m_axi_awuser(396) <= \<const0>\;
  m_axi_awuser(395) <= \<const0>\;
  m_axi_awuser(394) <= \<const0>\;
  m_axi_awuser(393) <= \<const0>\;
  m_axi_awuser(392) <= \<const0>\;
  m_axi_awuser(391) <= \<const0>\;
  m_axi_awuser(390) <= \<const0>\;
  m_axi_awuser(389) <= \<const0>\;
  m_axi_awuser(388) <= \<const0>\;
  m_axi_awuser(387) <= \<const0>\;
  m_axi_awuser(386) <= \<const0>\;
  m_axi_awuser(385) <= \<const0>\;
  m_axi_awuser(384) <= \<const0>\;
  m_axi_awuser(383) <= \<const0>\;
  m_axi_awuser(382) <= \<const0>\;
  m_axi_awuser(381) <= \<const0>\;
  m_axi_awuser(380) <= \<const0>\;
  m_axi_awuser(379) <= \<const0>\;
  m_axi_awuser(378) <= \<const0>\;
  m_axi_awuser(377) <= \<const0>\;
  m_axi_awuser(376) <= \<const0>\;
  m_axi_awuser(375) <= \<const0>\;
  m_axi_awuser(374) <= \<const0>\;
  m_axi_awuser(373) <= \<const0>\;
  m_axi_awuser(372) <= \<const0>\;
  m_axi_awuser(371) <= \<const0>\;
  m_axi_awuser(370) <= \<const0>\;
  m_axi_awuser(369) <= \<const0>\;
  m_axi_awuser(368) <= \<const0>\;
  m_axi_awuser(367) <= \<const0>\;
  m_axi_awuser(366) <= \<const0>\;
  m_axi_awuser(365) <= \<const0>\;
  m_axi_awuser(364) <= \<const0>\;
  m_axi_awuser(363) <= \<const0>\;
  m_axi_awuser(362) <= \<const0>\;
  m_axi_awuser(361) <= \<const0>\;
  m_axi_awuser(360) <= \<const0>\;
  m_axi_awuser(359) <= \<const0>\;
  m_axi_awuser(358) <= \<const0>\;
  m_axi_awuser(357) <= \<const0>\;
  m_axi_awuser(356) <= \<const0>\;
  m_axi_awuser(355) <= \<const0>\;
  m_axi_awuser(354) <= \<const0>\;
  m_axi_awuser(353) <= \<const0>\;
  m_axi_awuser(352) <= \<const0>\;
  m_axi_awuser(351) <= \<const0>\;
  m_axi_awuser(350) <= \<const0>\;
  m_axi_awuser(349) <= \<const0>\;
  m_axi_awuser(348) <= \<const0>\;
  m_axi_awuser(347) <= \<const0>\;
  m_axi_awuser(346) <= \<const0>\;
  m_axi_awuser(345) <= \<const0>\;
  m_axi_awuser(344) <= \<const0>\;
  m_axi_awuser(343) <= \<const0>\;
  m_axi_awuser(342) <= \<const0>\;
  m_axi_awuser(341) <= \<const0>\;
  m_axi_awuser(340) <= \<const0>\;
  m_axi_awuser(339) <= \<const0>\;
  m_axi_awuser(338) <= \<const0>\;
  m_axi_awuser(337) <= \<const0>\;
  m_axi_awuser(336) <= \<const0>\;
  m_axi_awuser(335) <= \<const0>\;
  m_axi_awuser(334) <= \<const0>\;
  m_axi_awuser(333) <= \<const0>\;
  m_axi_awuser(332) <= \<const0>\;
  m_axi_awuser(331) <= \<const0>\;
  m_axi_awuser(330) <= \<const0>\;
  m_axi_awuser(329) <= \<const0>\;
  m_axi_awuser(328) <= \<const0>\;
  m_axi_awuser(327) <= \<const0>\;
  m_axi_awuser(326) <= \<const0>\;
  m_axi_awuser(325) <= \<const0>\;
  m_axi_awuser(324) <= \<const0>\;
  m_axi_awuser(323) <= \<const0>\;
  m_axi_awuser(322) <= \<const0>\;
  m_axi_awuser(321) <= \<const0>\;
  m_axi_awuser(320) <= \<const0>\;
  m_axi_awuser(319) <= \<const0>\;
  m_axi_awuser(318) <= \<const0>\;
  m_axi_awuser(317) <= \<const0>\;
  m_axi_awuser(316) <= \<const0>\;
  m_axi_awuser(315) <= \<const0>\;
  m_axi_awuser(314) <= \<const0>\;
  m_axi_awuser(313) <= \<const0>\;
  m_axi_awuser(312) <= \<const0>\;
  m_axi_awuser(311) <= \<const0>\;
  m_axi_awuser(310) <= \<const0>\;
  m_axi_awuser(309) <= \<const0>\;
  m_axi_awuser(308) <= \<const0>\;
  m_axi_awuser(307) <= \<const0>\;
  m_axi_awuser(306) <= \<const0>\;
  m_axi_awuser(305) <= \<const0>\;
  m_axi_awuser(304) <= \<const0>\;
  m_axi_awuser(303) <= \<const0>\;
  m_axi_awuser(302) <= \<const0>\;
  m_axi_awuser(301) <= \<const0>\;
  m_axi_awuser(300) <= \<const0>\;
  m_axi_awuser(299) <= \<const0>\;
  m_axi_awuser(298) <= \<const0>\;
  m_axi_awuser(297) <= \<const0>\;
  m_axi_awuser(296) <= \<const0>\;
  m_axi_awuser(295) <= \<const0>\;
  m_axi_awuser(294) <= \<const0>\;
  m_axi_awuser(293) <= \<const0>\;
  m_axi_awuser(292) <= \<const0>\;
  m_axi_awuser(291) <= \<const0>\;
  m_axi_awuser(290) <= \<const0>\;
  m_axi_awuser(289) <= \<const0>\;
  m_axi_awuser(288) <= \<const0>\;
  m_axi_awuser(287) <= \<const0>\;
  m_axi_awuser(286) <= \<const0>\;
  m_axi_awuser(285) <= \<const0>\;
  m_axi_awuser(284) <= \<const0>\;
  m_axi_awuser(283) <= \<const0>\;
  m_axi_awuser(282) <= \<const0>\;
  m_axi_awuser(281) <= \<const0>\;
  m_axi_awuser(280) <= \<const0>\;
  m_axi_awuser(279) <= \<const0>\;
  m_axi_awuser(278) <= \<const0>\;
  m_axi_awuser(277) <= \<const0>\;
  m_axi_awuser(276) <= \<const0>\;
  m_axi_awuser(275) <= \<const0>\;
  m_axi_awuser(274) <= \<const0>\;
  m_axi_awuser(273) <= \<const0>\;
  m_axi_awuser(272) <= \<const0>\;
  m_axi_awuser(271) <= \<const0>\;
  m_axi_awuser(270) <= \<const0>\;
  m_axi_awuser(269) <= \<const0>\;
  m_axi_awuser(268) <= \<const0>\;
  m_axi_awuser(267) <= \<const0>\;
  m_axi_awuser(266) <= \<const0>\;
  m_axi_awuser(265) <= \<const0>\;
  m_axi_awuser(264) <= \<const0>\;
  m_axi_awuser(263) <= \<const0>\;
  m_axi_awuser(262) <= \<const0>\;
  m_axi_awuser(261) <= \<const0>\;
  m_axi_awuser(260) <= \<const0>\;
  m_axi_awuser(259) <= \<const0>\;
  m_axi_awuser(258) <= \<const0>\;
  m_axi_awuser(257) <= \<const0>\;
  m_axi_awuser(256) <= \<const0>\;
  m_axi_awuser(255) <= \<const0>\;
  m_axi_awuser(254) <= \<const0>\;
  m_axi_awuser(253) <= \<const0>\;
  m_axi_awuser(252) <= \<const0>\;
  m_axi_awuser(251) <= \<const0>\;
  m_axi_awuser(250) <= \<const0>\;
  m_axi_awuser(249) <= \<const0>\;
  m_axi_awuser(248) <= \<const0>\;
  m_axi_awuser(247) <= \<const0>\;
  m_axi_awuser(246) <= \<const0>\;
  m_axi_awuser(245) <= \<const0>\;
  m_axi_awuser(244) <= \<const0>\;
  m_axi_awuser(243) <= \<const0>\;
  m_axi_awuser(242) <= \<const0>\;
  m_axi_awuser(241) <= \<const0>\;
  m_axi_awuser(240) <= \<const0>\;
  m_axi_awuser(239) <= \<const0>\;
  m_axi_awuser(238) <= \<const0>\;
  m_axi_awuser(237) <= \<const0>\;
  m_axi_awuser(236) <= \<const0>\;
  m_axi_awuser(235) <= \<const0>\;
  m_axi_awuser(234) <= \<const0>\;
  m_axi_awuser(233) <= \<const0>\;
  m_axi_awuser(232) <= \<const0>\;
  m_axi_awuser(231) <= \<const0>\;
  m_axi_awuser(230) <= \<const0>\;
  m_axi_awuser(229) <= \<const0>\;
  m_axi_awuser(228) <= \<const0>\;
  m_axi_awuser(227) <= \<const0>\;
  m_axi_awuser(226) <= \<const0>\;
  m_axi_awuser(225) <= \<const0>\;
  m_axi_awuser(224) <= \<const0>\;
  m_axi_awuser(223) <= \<const0>\;
  m_axi_awuser(222) <= \<const0>\;
  m_axi_awuser(221) <= \<const0>\;
  m_axi_awuser(220) <= \<const0>\;
  m_axi_awuser(219) <= \<const0>\;
  m_axi_awuser(218) <= \<const0>\;
  m_axi_awuser(217) <= \<const0>\;
  m_axi_awuser(216) <= \<const0>\;
  m_axi_awuser(215) <= \<const0>\;
  m_axi_awuser(214) <= \<const0>\;
  m_axi_awuser(213) <= \<const0>\;
  m_axi_awuser(212) <= \<const0>\;
  m_axi_awuser(211) <= \<const0>\;
  m_axi_awuser(210) <= \<const0>\;
  m_axi_awuser(209) <= \<const0>\;
  m_axi_awuser(208) <= \<const0>\;
  m_axi_awuser(207) <= \<const0>\;
  m_axi_awuser(206) <= \<const0>\;
  m_axi_awuser(205) <= \<const0>\;
  m_axi_awuser(204) <= \<const0>\;
  m_axi_awuser(203) <= \<const0>\;
  m_axi_awuser(202) <= \<const0>\;
  m_axi_awuser(201) <= \<const0>\;
  m_axi_awuser(200) <= \<const0>\;
  m_axi_awuser(199) <= \<const0>\;
  m_axi_awuser(198) <= \<const0>\;
  m_axi_awuser(197) <= \<const0>\;
  m_axi_awuser(196) <= \<const0>\;
  m_axi_awuser(195) <= \<const0>\;
  m_axi_awuser(194) <= \<const0>\;
  m_axi_awuser(193) <= \<const0>\;
  m_axi_awuser(192) <= \<const0>\;
  m_axi_awuser(191) <= \<const0>\;
  m_axi_awuser(190) <= \<const0>\;
  m_axi_awuser(189) <= \<const0>\;
  m_axi_awuser(188) <= \<const0>\;
  m_axi_awuser(187) <= \<const0>\;
  m_axi_awuser(186) <= \<const0>\;
  m_axi_awuser(185) <= \<const0>\;
  m_axi_awuser(184) <= \<const0>\;
  m_axi_awuser(183) <= \<const0>\;
  m_axi_awuser(182) <= \<const0>\;
  m_axi_awuser(181) <= \<const0>\;
  m_axi_awuser(180) <= \<const0>\;
  m_axi_awuser(179) <= \<const0>\;
  m_axi_awuser(178) <= \<const0>\;
  m_axi_awuser(177) <= \<const0>\;
  m_axi_awuser(176) <= \<const0>\;
  m_axi_awuser(175) <= \<const0>\;
  m_axi_awuser(174) <= \<const0>\;
  m_axi_awuser(173) <= \<const0>\;
  m_axi_awuser(172) <= \<const0>\;
  m_axi_awuser(171) <= \<const0>\;
  m_axi_awuser(170) <= \<const0>\;
  m_axi_awuser(169) <= \<const0>\;
  m_axi_awuser(168) <= \<const0>\;
  m_axi_awuser(167) <= \<const0>\;
  m_axi_awuser(166) <= \<const0>\;
  m_axi_awuser(165) <= \<const0>\;
  m_axi_awuser(164) <= \<const0>\;
  m_axi_awuser(163) <= \<const0>\;
  m_axi_awuser(162) <= \<const0>\;
  m_axi_awuser(161) <= \<const0>\;
  m_axi_awuser(160) <= \<const0>\;
  m_axi_awuser(159) <= \<const0>\;
  m_axi_awuser(158) <= \<const0>\;
  m_axi_awuser(157) <= \<const0>\;
  m_axi_awuser(156) <= \<const0>\;
  m_axi_awuser(155) <= \<const0>\;
  m_axi_awuser(154) <= \<const0>\;
  m_axi_awuser(153) <= \<const0>\;
  m_axi_awuser(152) <= \<const0>\;
  m_axi_awuser(151) <= \<const0>\;
  m_axi_awuser(150) <= \<const0>\;
  m_axi_awuser(149) <= \<const0>\;
  m_axi_awuser(148) <= \<const0>\;
  m_axi_awuser(147) <= \<const0>\;
  m_axi_awuser(146) <= \<const0>\;
  m_axi_awuser(145) <= \<const0>\;
  m_axi_awuser(144) <= \<const0>\;
  m_axi_awuser(143) <= \<const0>\;
  m_axi_awuser(142) <= \<const0>\;
  m_axi_awuser(141) <= \<const0>\;
  m_axi_awuser(140) <= \<const0>\;
  m_axi_awuser(139) <= \<const0>\;
  m_axi_awuser(138) <= \<const0>\;
  m_axi_awuser(137) <= \<const0>\;
  m_axi_awuser(136) <= \<const0>\;
  m_axi_awuser(135) <= \<const0>\;
  m_axi_awuser(134) <= \<const0>\;
  m_axi_awuser(133) <= \<const0>\;
  m_axi_awuser(132) <= \<const0>\;
  m_axi_awuser(131) <= \<const0>\;
  m_axi_awuser(130) <= \<const0>\;
  m_axi_awuser(129) <= \<const0>\;
  m_axi_awuser(128) <= \<const0>\;
  m_axi_awuser(127) <= \<const0>\;
  m_axi_awuser(126) <= \<const0>\;
  m_axi_awuser(125) <= \<const0>\;
  m_axi_awuser(124) <= \<const0>\;
  m_axi_awuser(123) <= \<const0>\;
  m_axi_awuser(122) <= \<const0>\;
  m_axi_awuser(121) <= \<const0>\;
  m_axi_awuser(120) <= \<const0>\;
  m_axi_awuser(119) <= \<const0>\;
  m_axi_awuser(118) <= \<const0>\;
  m_axi_awuser(117) <= \<const0>\;
  m_axi_awuser(116) <= \<const0>\;
  m_axi_awuser(115) <= \<const0>\;
  m_axi_awuser(114) <= \<const0>\;
  m_axi_awuser(113) <= \<const0>\;
  m_axi_awuser(112) <= \<const0>\;
  m_axi_awuser(111) <= \<const0>\;
  m_axi_awuser(110) <= \<const0>\;
  m_axi_awuser(109) <= \<const0>\;
  m_axi_awuser(108) <= \<const0>\;
  m_axi_awuser(107) <= \<const0>\;
  m_axi_awuser(106) <= \<const0>\;
  m_axi_awuser(105) <= \<const0>\;
  m_axi_awuser(104) <= \<const0>\;
  m_axi_awuser(103) <= \<const0>\;
  m_axi_awuser(102) <= \<const0>\;
  m_axi_awuser(101) <= \<const0>\;
  m_axi_awuser(100) <= \<const0>\;
  m_axi_awuser(99) <= \<const0>\;
  m_axi_awuser(98) <= \<const0>\;
  m_axi_awuser(97) <= \<const0>\;
  m_axi_awuser(96) <= \<const0>\;
  m_axi_awuser(95) <= \<const0>\;
  m_axi_awuser(94) <= \<const0>\;
  m_axi_awuser(93) <= \<const0>\;
  m_axi_awuser(92) <= \<const0>\;
  m_axi_awuser(91) <= \<const0>\;
  m_axi_awuser(90) <= \<const0>\;
  m_axi_awuser(89) <= \<const0>\;
  m_axi_awuser(88) <= \<const0>\;
  m_axi_awuser(87) <= \<const0>\;
  m_axi_awuser(86) <= \<const0>\;
  m_axi_awuser(85) <= \<const0>\;
  m_axi_awuser(84) <= \<const0>\;
  m_axi_awuser(83) <= \<const0>\;
  m_axi_awuser(82) <= \<const0>\;
  m_axi_awuser(81) <= \<const0>\;
  m_axi_awuser(80) <= \<const0>\;
  m_axi_awuser(79) <= \<const0>\;
  m_axi_awuser(78) <= \<const0>\;
  m_axi_awuser(77) <= \<const0>\;
  m_axi_awuser(76) <= \<const0>\;
  m_axi_awuser(75) <= \<const0>\;
  m_axi_awuser(74) <= \<const0>\;
  m_axi_awuser(73) <= \<const0>\;
  m_axi_awuser(72) <= \<const0>\;
  m_axi_awuser(71) <= \<const0>\;
  m_axi_awuser(70) <= \<const0>\;
  m_axi_awuser(69) <= \<const0>\;
  m_axi_awuser(68) <= \<const0>\;
  m_axi_awuser(67) <= \<const0>\;
  m_axi_awuser(66) <= \<const0>\;
  m_axi_awuser(65) <= \<const0>\;
  m_axi_awuser(64) <= \<const0>\;
  m_axi_awuser(63) <= \<const0>\;
  m_axi_awuser(62) <= \<const0>\;
  m_axi_awuser(61) <= \<const0>\;
  m_axi_awuser(60) <= \<const0>\;
  m_axi_awuser(59) <= \<const0>\;
  m_axi_awuser(58) <= \<const0>\;
  m_axi_awuser(57) <= \<const0>\;
  m_axi_awuser(56) <= \<const0>\;
  m_axi_awuser(55) <= \<const0>\;
  m_axi_awuser(54) <= \<const0>\;
  m_axi_awuser(53) <= \<const0>\;
  m_axi_awuser(52) <= \<const0>\;
  m_axi_awuser(51) <= \<const0>\;
  m_axi_awuser(50) <= \<const0>\;
  m_axi_awuser(49) <= \<const0>\;
  m_axi_awuser(48) <= \<const0>\;
  m_axi_awuser(47) <= \<const0>\;
  m_axi_awuser(46) <= \<const0>\;
  m_axi_awuser(45) <= \<const0>\;
  m_axi_awuser(44) <= \<const0>\;
  m_axi_awuser(43) <= \<const0>\;
  m_axi_awuser(42) <= \<const0>\;
  m_axi_awuser(41) <= \<const0>\;
  m_axi_awuser(40) <= \<const0>\;
  m_axi_awuser(39) <= \<const0>\;
  m_axi_awuser(38) <= \<const0>\;
  m_axi_awuser(37) <= \<const0>\;
  m_axi_awuser(36) <= \<const0>\;
  m_axi_awuser(35) <= \<const0>\;
  m_axi_awuser(34) <= \<const0>\;
  m_axi_awuser(33) <= \<const0>\;
  m_axi_awuser(32) <= \<const0>\;
  m_axi_awuser(31) <= \<const0>\;
  m_axi_awuser(30) <= \<const0>\;
  m_axi_awuser(29) <= \<const0>\;
  m_axi_awuser(28) <= \<const0>\;
  m_axi_awuser(27) <= \<const0>\;
  m_axi_awuser(26) <= \<const0>\;
  m_axi_awuser(25) <= \<const0>\;
  m_axi_awuser(24) <= \<const0>\;
  m_axi_awuser(23) <= \<const0>\;
  m_axi_awuser(22) <= \<const0>\;
  m_axi_awuser(21) <= \<const0>\;
  m_axi_awuser(20) <= \<const0>\;
  m_axi_awuser(19) <= \<const0>\;
  m_axi_awuser(18) <= \<const0>\;
  m_axi_awuser(17) <= \<const0>\;
  m_axi_awuser(16) <= \<const0>\;
  m_axi_awuser(15) <= \<const0>\;
  m_axi_awuser(14) <= \<const0>\;
  m_axi_awuser(13) <= \<const0>\;
  m_axi_awuser(12) <= \<const0>\;
  m_axi_awuser(11) <= \<const0>\;
  m_axi_awuser(10) <= \<const0>\;
  m_axi_awuser(9) <= \<const0>\;
  m_axi_awuser(8) <= \<const0>\;
  m_axi_awuser(7) <= \<const0>\;
  m_axi_awuser(6) <= \<const0>\;
  m_axi_awuser(5) <= \<const0>\;
  m_axi_awuser(4) <= \<const0>\;
  m_axi_awuser(3) <= \<const0>\;
  m_axi_awuser(2) <= \<const0>\;
  m_axi_awuser(1) <= \<const0>\;
  m_axi_awuser(0) <= \<const0>\;
  m_axi_bready <= \<const0>\;
  m_axi_rready <= \<const0>\;
  m_axi_wdata(31) <= \<const0>\;
  m_axi_wdata(30) <= \<const0>\;
  m_axi_wdata(29) <= \<const0>\;
  m_axi_wdata(28) <= \<const0>\;
  m_axi_wdata(27) <= \<const0>\;
  m_axi_wdata(26) <= \<const0>\;
  m_axi_wdata(25) <= \<const0>\;
  m_axi_wdata(24) <= \<const0>\;
  m_axi_wdata(23) <= \<const0>\;
  m_axi_wdata(22) <= \<const0>\;
  m_axi_wdata(21) <= \<const0>\;
  m_axi_wdata(20) <= \<const0>\;
  m_axi_wdata(19) <= \<const0>\;
  m_axi_wdata(18) <= \<const0>\;
  m_axi_wdata(17) <= \<const0>\;
  m_axi_wdata(16) <= \<const0>\;
  m_axi_wdata(15) <= \<const0>\;
  m_axi_wdata(14) <= \<const0>\;
  m_axi_wdata(13) <= \<const0>\;
  m_axi_wdata(12) <= \<const0>\;
  m_axi_wdata(11) <= \<const0>\;
  m_axi_wdata(10) <= \<const0>\;
  m_axi_wdata(9) <= \<const0>\;
  m_axi_wdata(8) <= \<const0>\;
  m_axi_wdata(7) <= \<const0>\;
  m_axi_wdata(6) <= \<const0>\;
  m_axi_wdata(5) <= \<const0>\;
  m_axi_wdata(4) <= \<const0>\;
  m_axi_wdata(3) <= \<const0>\;
  m_axi_wdata(2) <= \<const0>\;
  m_axi_wdata(1) <= \<const0>\;
  m_axi_wdata(0) <= \<const0>\;
  m_axi_wlast <= \<const0>\;
  m_axi_wstrb(3) <= \<const0>\;
  m_axi_wstrb(2) <= \<const0>\;
  m_axi_wstrb(1) <= \<const0>\;
  m_axi_wstrb(0) <= \<const0>\;
  m_axi_wuser(1023) <= \<const0>\;
  m_axi_wuser(1022) <= \<const0>\;
  m_axi_wuser(1021) <= \<const0>\;
  m_axi_wuser(1020) <= \<const0>\;
  m_axi_wuser(1019) <= \<const0>\;
  m_axi_wuser(1018) <= \<const0>\;
  m_axi_wuser(1017) <= \<const0>\;
  m_axi_wuser(1016) <= \<const0>\;
  m_axi_wuser(1015) <= \<const0>\;
  m_axi_wuser(1014) <= \<const0>\;
  m_axi_wuser(1013) <= \<const0>\;
  m_axi_wuser(1012) <= \<const0>\;
  m_axi_wuser(1011) <= \<const0>\;
  m_axi_wuser(1010) <= \<const0>\;
  m_axi_wuser(1009) <= \<const0>\;
  m_axi_wuser(1008) <= \<const0>\;
  m_axi_wuser(1007) <= \<const0>\;
  m_axi_wuser(1006) <= \<const0>\;
  m_axi_wuser(1005) <= \<const0>\;
  m_axi_wuser(1004) <= \<const0>\;
  m_axi_wuser(1003) <= \<const0>\;
  m_axi_wuser(1002) <= \<const0>\;
  m_axi_wuser(1001) <= \<const0>\;
  m_axi_wuser(1000) <= \<const0>\;
  m_axi_wuser(999) <= \<const0>\;
  m_axi_wuser(998) <= \<const0>\;
  m_axi_wuser(997) <= \<const0>\;
  m_axi_wuser(996) <= \<const0>\;
  m_axi_wuser(995) <= \<const0>\;
  m_axi_wuser(994) <= \<const0>\;
  m_axi_wuser(993) <= \<const0>\;
  m_axi_wuser(992) <= \<const0>\;
  m_axi_wuser(991) <= \<const0>\;
  m_axi_wuser(990) <= \<const0>\;
  m_axi_wuser(989) <= \<const0>\;
  m_axi_wuser(988) <= \<const0>\;
  m_axi_wuser(987) <= \<const0>\;
  m_axi_wuser(986) <= \<const0>\;
  m_axi_wuser(985) <= \<const0>\;
  m_axi_wuser(984) <= \<const0>\;
  m_axi_wuser(983) <= \<const0>\;
  m_axi_wuser(982) <= \<const0>\;
  m_axi_wuser(981) <= \<const0>\;
  m_axi_wuser(980) <= \<const0>\;
  m_axi_wuser(979) <= \<const0>\;
  m_axi_wuser(978) <= \<const0>\;
  m_axi_wuser(977) <= \<const0>\;
  m_axi_wuser(976) <= \<const0>\;
  m_axi_wuser(975) <= \<const0>\;
  m_axi_wuser(974) <= \<const0>\;
  m_axi_wuser(973) <= \<const0>\;
  m_axi_wuser(972) <= \<const0>\;
  m_axi_wuser(971) <= \<const0>\;
  m_axi_wuser(970) <= \<const0>\;
  m_axi_wuser(969) <= \<const0>\;
  m_axi_wuser(968) <= \<const0>\;
  m_axi_wuser(967) <= \<const0>\;
  m_axi_wuser(966) <= \<const0>\;
  m_axi_wuser(965) <= \<const0>\;
  m_axi_wuser(964) <= \<const0>\;
  m_axi_wuser(963) <= \<const0>\;
  m_axi_wuser(962) <= \<const0>\;
  m_axi_wuser(961) <= \<const0>\;
  m_axi_wuser(960) <= \<const0>\;
  m_axi_wuser(959) <= \<const0>\;
  m_axi_wuser(958) <= \<const0>\;
  m_axi_wuser(957) <= \<const0>\;
  m_axi_wuser(956) <= \<const0>\;
  m_axi_wuser(955) <= \<const0>\;
  m_axi_wuser(954) <= \<const0>\;
  m_axi_wuser(953) <= \<const0>\;
  m_axi_wuser(952) <= \<const0>\;
  m_axi_wuser(951) <= \<const0>\;
  m_axi_wuser(950) <= \<const0>\;
  m_axi_wuser(949) <= \<const0>\;
  m_axi_wuser(948) <= \<const0>\;
  m_axi_wuser(947) <= \<const0>\;
  m_axi_wuser(946) <= \<const0>\;
  m_axi_wuser(945) <= \<const0>\;
  m_axi_wuser(944) <= \<const0>\;
  m_axi_wuser(943) <= \<const0>\;
  m_axi_wuser(942) <= \<const0>\;
  m_axi_wuser(941) <= \<const0>\;
  m_axi_wuser(940) <= \<const0>\;
  m_axi_wuser(939) <= \<const0>\;
  m_axi_wuser(938) <= \<const0>\;
  m_axi_wuser(937) <= \<const0>\;
  m_axi_wuser(936) <= \<const0>\;
  m_axi_wuser(935) <= \<const0>\;
  m_axi_wuser(934) <= \<const0>\;
  m_axi_wuser(933) <= \<const0>\;
  m_axi_wuser(932) <= \<const0>\;
  m_axi_wuser(931) <= \<const0>\;
  m_axi_wuser(930) <= \<const0>\;
  m_axi_wuser(929) <= \<const0>\;
  m_axi_wuser(928) <= \<const0>\;
  m_axi_wuser(927) <= \<const0>\;
  m_axi_wuser(926) <= \<const0>\;
  m_axi_wuser(925) <= \<const0>\;
  m_axi_wuser(924) <= \<const0>\;
  m_axi_wuser(923) <= \<const0>\;
  m_axi_wuser(922) <= \<const0>\;
  m_axi_wuser(921) <= \<const0>\;
  m_axi_wuser(920) <= \<const0>\;
  m_axi_wuser(919) <= \<const0>\;
  m_axi_wuser(918) <= \<const0>\;
  m_axi_wuser(917) <= \<const0>\;
  m_axi_wuser(916) <= \<const0>\;
  m_axi_wuser(915) <= \<const0>\;
  m_axi_wuser(914) <= \<const0>\;
  m_axi_wuser(913) <= \<const0>\;
  m_axi_wuser(912) <= \<const0>\;
  m_axi_wuser(911) <= \<const0>\;
  m_axi_wuser(910) <= \<const0>\;
  m_axi_wuser(909) <= \<const0>\;
  m_axi_wuser(908) <= \<const0>\;
  m_axi_wuser(907) <= \<const0>\;
  m_axi_wuser(906) <= \<const0>\;
  m_axi_wuser(905) <= \<const0>\;
  m_axi_wuser(904) <= \<const0>\;
  m_axi_wuser(903) <= \<const0>\;
  m_axi_wuser(902) <= \<const0>\;
  m_axi_wuser(901) <= \<const0>\;
  m_axi_wuser(900) <= \<const0>\;
  m_axi_wuser(899) <= \<const0>\;
  m_axi_wuser(898) <= \<const0>\;
  m_axi_wuser(897) <= \<const0>\;
  m_axi_wuser(896) <= \<const0>\;
  m_axi_wuser(895) <= \<const0>\;
  m_axi_wuser(894) <= \<const0>\;
  m_axi_wuser(893) <= \<const0>\;
  m_axi_wuser(892) <= \<const0>\;
  m_axi_wuser(891) <= \<const0>\;
  m_axi_wuser(890) <= \<const0>\;
  m_axi_wuser(889) <= \<const0>\;
  m_axi_wuser(888) <= \<const0>\;
  m_axi_wuser(887) <= \<const0>\;
  m_axi_wuser(886) <= \<const0>\;
  m_axi_wuser(885) <= \<const0>\;
  m_axi_wuser(884) <= \<const0>\;
  m_axi_wuser(883) <= \<const0>\;
  m_axi_wuser(882) <= \<const0>\;
  m_axi_wuser(881) <= \<const0>\;
  m_axi_wuser(880) <= \<const0>\;
  m_axi_wuser(879) <= \<const0>\;
  m_axi_wuser(878) <= \<const0>\;
  m_axi_wuser(877) <= \<const0>\;
  m_axi_wuser(876) <= \<const0>\;
  m_axi_wuser(875) <= \<const0>\;
  m_axi_wuser(874) <= \<const0>\;
  m_axi_wuser(873) <= \<const0>\;
  m_axi_wuser(872) <= \<const0>\;
  m_axi_wuser(871) <= \<const0>\;
  m_axi_wuser(870) <= \<const0>\;
  m_axi_wuser(869) <= \<const0>\;
  m_axi_wuser(868) <= \<const0>\;
  m_axi_wuser(867) <= \<const0>\;
  m_axi_wuser(866) <= \<const0>\;
  m_axi_wuser(865) <= \<const0>\;
  m_axi_wuser(864) <= \<const0>\;
  m_axi_wuser(863) <= \<const0>\;
  m_axi_wuser(862) <= \<const0>\;
  m_axi_wuser(861) <= \<const0>\;
  m_axi_wuser(860) <= \<const0>\;
  m_axi_wuser(859) <= \<const0>\;
  m_axi_wuser(858) <= \<const0>\;
  m_axi_wuser(857) <= \<const0>\;
  m_axi_wuser(856) <= \<const0>\;
  m_axi_wuser(855) <= \<const0>\;
  m_axi_wuser(854) <= \<const0>\;
  m_axi_wuser(853) <= \<const0>\;
  m_axi_wuser(852) <= \<const0>\;
  m_axi_wuser(851) <= \<const0>\;
  m_axi_wuser(850) <= \<const0>\;
  m_axi_wuser(849) <= \<const0>\;
  m_axi_wuser(848) <= \<const0>\;
  m_axi_wuser(847) <= \<const0>\;
  m_axi_wuser(846) <= \<const0>\;
  m_axi_wuser(845) <= \<const0>\;
  m_axi_wuser(844) <= \<const0>\;
  m_axi_wuser(843) <= \<const0>\;
  m_axi_wuser(842) <= \<const0>\;
  m_axi_wuser(841) <= \<const0>\;
  m_axi_wuser(840) <= \<const0>\;
  m_axi_wuser(839) <= \<const0>\;
  m_axi_wuser(838) <= \<const0>\;
  m_axi_wuser(837) <= \<const0>\;
  m_axi_wuser(836) <= \<const0>\;
  m_axi_wuser(835) <= \<const0>\;
  m_axi_wuser(834) <= \<const0>\;
  m_axi_wuser(833) <= \<const0>\;
  m_axi_wuser(832) <= \<const0>\;
  m_axi_wuser(831) <= \<const0>\;
  m_axi_wuser(830) <= \<const0>\;
  m_axi_wuser(829) <= \<const0>\;
  m_axi_wuser(828) <= \<const0>\;
  m_axi_wuser(827) <= \<const0>\;
  m_axi_wuser(826) <= \<const0>\;
  m_axi_wuser(825) <= \<const0>\;
  m_axi_wuser(824) <= \<const0>\;
  m_axi_wuser(823) <= \<const0>\;
  m_axi_wuser(822) <= \<const0>\;
  m_axi_wuser(821) <= \<const0>\;
  m_axi_wuser(820) <= \<const0>\;
  m_axi_wuser(819) <= \<const0>\;
  m_axi_wuser(818) <= \<const0>\;
  m_axi_wuser(817) <= \<const0>\;
  m_axi_wuser(816) <= \<const0>\;
  m_axi_wuser(815) <= \<const0>\;
  m_axi_wuser(814) <= \<const0>\;
  m_axi_wuser(813) <= \<const0>\;
  m_axi_wuser(812) <= \<const0>\;
  m_axi_wuser(811) <= \<const0>\;
  m_axi_wuser(810) <= \<const0>\;
  m_axi_wuser(809) <= \<const0>\;
  m_axi_wuser(808) <= \<const0>\;
  m_axi_wuser(807) <= \<const0>\;
  m_axi_wuser(806) <= \<const0>\;
  m_axi_wuser(805) <= \<const0>\;
  m_axi_wuser(804) <= \<const0>\;
  m_axi_wuser(803) <= \<const0>\;
  m_axi_wuser(802) <= \<const0>\;
  m_axi_wuser(801) <= \<const0>\;
  m_axi_wuser(800) <= \<const0>\;
  m_axi_wuser(799) <= \<const0>\;
  m_axi_wuser(798) <= \<const0>\;
  m_axi_wuser(797) <= \<const0>\;
  m_axi_wuser(796) <= \<const0>\;
  m_axi_wuser(795) <= \<const0>\;
  m_axi_wuser(794) <= \<const0>\;
  m_axi_wuser(793) <= \<const0>\;
  m_axi_wuser(792) <= \<const0>\;
  m_axi_wuser(791) <= \<const0>\;
  m_axi_wuser(790) <= \<const0>\;
  m_axi_wuser(789) <= \<const0>\;
  m_axi_wuser(788) <= \<const0>\;
  m_axi_wuser(787) <= \<const0>\;
  m_axi_wuser(786) <= \<const0>\;
  m_axi_wuser(785) <= \<const0>\;
  m_axi_wuser(784) <= \<const0>\;
  m_axi_wuser(783) <= \<const0>\;
  m_axi_wuser(782) <= \<const0>\;
  m_axi_wuser(781) <= \<const0>\;
  m_axi_wuser(780) <= \<const0>\;
  m_axi_wuser(779) <= \<const0>\;
  m_axi_wuser(778) <= \<const0>\;
  m_axi_wuser(777) <= \<const0>\;
  m_axi_wuser(776) <= \<const0>\;
  m_axi_wuser(775) <= \<const0>\;
  m_axi_wuser(774) <= \<const0>\;
  m_axi_wuser(773) <= \<const0>\;
  m_axi_wuser(772) <= \<const0>\;
  m_axi_wuser(771) <= \<const0>\;
  m_axi_wuser(770) <= \<const0>\;
  m_axi_wuser(769) <= \<const0>\;
  m_axi_wuser(768) <= \<const0>\;
  m_axi_wuser(767) <= \<const0>\;
  m_axi_wuser(766) <= \<const0>\;
  m_axi_wuser(765) <= \<const0>\;
  m_axi_wuser(764) <= \<const0>\;
  m_axi_wuser(763) <= \<const0>\;
  m_axi_wuser(762) <= \<const0>\;
  m_axi_wuser(761) <= \<const0>\;
  m_axi_wuser(760) <= \<const0>\;
  m_axi_wuser(759) <= \<const0>\;
  m_axi_wuser(758) <= \<const0>\;
  m_axi_wuser(757) <= \<const0>\;
  m_axi_wuser(756) <= \<const0>\;
  m_axi_wuser(755) <= \<const0>\;
  m_axi_wuser(754) <= \<const0>\;
  m_axi_wuser(753) <= \<const0>\;
  m_axi_wuser(752) <= \<const0>\;
  m_axi_wuser(751) <= \<const0>\;
  m_axi_wuser(750) <= \<const0>\;
  m_axi_wuser(749) <= \<const0>\;
  m_axi_wuser(748) <= \<const0>\;
  m_axi_wuser(747) <= \<const0>\;
  m_axi_wuser(746) <= \<const0>\;
  m_axi_wuser(745) <= \<const0>\;
  m_axi_wuser(744) <= \<const0>\;
  m_axi_wuser(743) <= \<const0>\;
  m_axi_wuser(742) <= \<const0>\;
  m_axi_wuser(741) <= \<const0>\;
  m_axi_wuser(740) <= \<const0>\;
  m_axi_wuser(739) <= \<const0>\;
  m_axi_wuser(738) <= \<const0>\;
  m_axi_wuser(737) <= \<const0>\;
  m_axi_wuser(736) <= \<const0>\;
  m_axi_wuser(735) <= \<const0>\;
  m_axi_wuser(734) <= \<const0>\;
  m_axi_wuser(733) <= \<const0>\;
  m_axi_wuser(732) <= \<const0>\;
  m_axi_wuser(731) <= \<const0>\;
  m_axi_wuser(730) <= \<const0>\;
  m_axi_wuser(729) <= \<const0>\;
  m_axi_wuser(728) <= \<const0>\;
  m_axi_wuser(727) <= \<const0>\;
  m_axi_wuser(726) <= \<const0>\;
  m_axi_wuser(725) <= \<const0>\;
  m_axi_wuser(724) <= \<const0>\;
  m_axi_wuser(723) <= \<const0>\;
  m_axi_wuser(722) <= \<const0>\;
  m_axi_wuser(721) <= \<const0>\;
  m_axi_wuser(720) <= \<const0>\;
  m_axi_wuser(719) <= \<const0>\;
  m_axi_wuser(718) <= \<const0>\;
  m_axi_wuser(717) <= \<const0>\;
  m_axi_wuser(716) <= \<const0>\;
  m_axi_wuser(715) <= \<const0>\;
  m_axi_wuser(714) <= \<const0>\;
  m_axi_wuser(713) <= \<const0>\;
  m_axi_wuser(712) <= \<const0>\;
  m_axi_wuser(711) <= \<const0>\;
  m_axi_wuser(710) <= \<const0>\;
  m_axi_wuser(709) <= \<const0>\;
  m_axi_wuser(708) <= \<const0>\;
  m_axi_wuser(707) <= \<const0>\;
  m_axi_wuser(706) <= \<const0>\;
  m_axi_wuser(705) <= \<const0>\;
  m_axi_wuser(704) <= \<const0>\;
  m_axi_wuser(703) <= \<const0>\;
  m_axi_wuser(702) <= \<const0>\;
  m_axi_wuser(701) <= \<const0>\;
  m_axi_wuser(700) <= \<const0>\;
  m_axi_wuser(699) <= \<const0>\;
  m_axi_wuser(698) <= \<const0>\;
  m_axi_wuser(697) <= \<const0>\;
  m_axi_wuser(696) <= \<const0>\;
  m_axi_wuser(695) <= \<const0>\;
  m_axi_wuser(694) <= \<const0>\;
  m_axi_wuser(693) <= \<const0>\;
  m_axi_wuser(692) <= \<const0>\;
  m_axi_wuser(691) <= \<const0>\;
  m_axi_wuser(690) <= \<const0>\;
  m_axi_wuser(689) <= \<const0>\;
  m_axi_wuser(688) <= \<const0>\;
  m_axi_wuser(687) <= \<const0>\;
  m_axi_wuser(686) <= \<const0>\;
  m_axi_wuser(685) <= \<const0>\;
  m_axi_wuser(684) <= \<const0>\;
  m_axi_wuser(683) <= \<const0>\;
  m_axi_wuser(682) <= \<const0>\;
  m_axi_wuser(681) <= \<const0>\;
  m_axi_wuser(680) <= \<const0>\;
  m_axi_wuser(679) <= \<const0>\;
  m_axi_wuser(678) <= \<const0>\;
  m_axi_wuser(677) <= \<const0>\;
  m_axi_wuser(676) <= \<const0>\;
  m_axi_wuser(675) <= \<const0>\;
  m_axi_wuser(674) <= \<const0>\;
  m_axi_wuser(673) <= \<const0>\;
  m_axi_wuser(672) <= \<const0>\;
  m_axi_wuser(671) <= \<const0>\;
  m_axi_wuser(670) <= \<const0>\;
  m_axi_wuser(669) <= \<const0>\;
  m_axi_wuser(668) <= \<const0>\;
  m_axi_wuser(667) <= \<const0>\;
  m_axi_wuser(666) <= \<const0>\;
  m_axi_wuser(665) <= \<const0>\;
  m_axi_wuser(664) <= \<const0>\;
  m_axi_wuser(663) <= \<const0>\;
  m_axi_wuser(662) <= \<const0>\;
  m_axi_wuser(661) <= \<const0>\;
  m_axi_wuser(660) <= \<const0>\;
  m_axi_wuser(659) <= \<const0>\;
  m_axi_wuser(658) <= \<const0>\;
  m_axi_wuser(657) <= \<const0>\;
  m_axi_wuser(656) <= \<const0>\;
  m_axi_wuser(655) <= \<const0>\;
  m_axi_wuser(654) <= \<const0>\;
  m_axi_wuser(653) <= \<const0>\;
  m_axi_wuser(652) <= \<const0>\;
  m_axi_wuser(651) <= \<const0>\;
  m_axi_wuser(650) <= \<const0>\;
  m_axi_wuser(649) <= \<const0>\;
  m_axi_wuser(648) <= \<const0>\;
  m_axi_wuser(647) <= \<const0>\;
  m_axi_wuser(646) <= \<const0>\;
  m_axi_wuser(645) <= \<const0>\;
  m_axi_wuser(644) <= \<const0>\;
  m_axi_wuser(643) <= \<const0>\;
  m_axi_wuser(642) <= \<const0>\;
  m_axi_wuser(641) <= \<const0>\;
  m_axi_wuser(640) <= \<const0>\;
  m_axi_wuser(639) <= \<const0>\;
  m_axi_wuser(638) <= \<const0>\;
  m_axi_wuser(637) <= \<const0>\;
  m_axi_wuser(636) <= \<const0>\;
  m_axi_wuser(635) <= \<const0>\;
  m_axi_wuser(634) <= \<const0>\;
  m_axi_wuser(633) <= \<const0>\;
  m_axi_wuser(632) <= \<const0>\;
  m_axi_wuser(631) <= \<const0>\;
  m_axi_wuser(630) <= \<const0>\;
  m_axi_wuser(629) <= \<const0>\;
  m_axi_wuser(628) <= \<const0>\;
  m_axi_wuser(627) <= \<const0>\;
  m_axi_wuser(626) <= \<const0>\;
  m_axi_wuser(625) <= \<const0>\;
  m_axi_wuser(624) <= \<const0>\;
  m_axi_wuser(623) <= \<const0>\;
  m_axi_wuser(622) <= \<const0>\;
  m_axi_wuser(621) <= \<const0>\;
  m_axi_wuser(620) <= \<const0>\;
  m_axi_wuser(619) <= \<const0>\;
  m_axi_wuser(618) <= \<const0>\;
  m_axi_wuser(617) <= \<const0>\;
  m_axi_wuser(616) <= \<const0>\;
  m_axi_wuser(615) <= \<const0>\;
  m_axi_wuser(614) <= \<const0>\;
  m_axi_wuser(613) <= \<const0>\;
  m_axi_wuser(612) <= \<const0>\;
  m_axi_wuser(611) <= \<const0>\;
  m_axi_wuser(610) <= \<const0>\;
  m_axi_wuser(609) <= \<const0>\;
  m_axi_wuser(608) <= \<const0>\;
  m_axi_wuser(607) <= \<const0>\;
  m_axi_wuser(606) <= \<const0>\;
  m_axi_wuser(605) <= \<const0>\;
  m_axi_wuser(604) <= \<const0>\;
  m_axi_wuser(603) <= \<const0>\;
  m_axi_wuser(602) <= \<const0>\;
  m_axi_wuser(601) <= \<const0>\;
  m_axi_wuser(600) <= \<const0>\;
  m_axi_wuser(599) <= \<const0>\;
  m_axi_wuser(598) <= \<const0>\;
  m_axi_wuser(597) <= \<const0>\;
  m_axi_wuser(596) <= \<const0>\;
  m_axi_wuser(595) <= \<const0>\;
  m_axi_wuser(594) <= \<const0>\;
  m_axi_wuser(593) <= \<const0>\;
  m_axi_wuser(592) <= \<const0>\;
  m_axi_wuser(591) <= \<const0>\;
  m_axi_wuser(590) <= \<const0>\;
  m_axi_wuser(589) <= \<const0>\;
  m_axi_wuser(588) <= \<const0>\;
  m_axi_wuser(587) <= \<const0>\;
  m_axi_wuser(586) <= \<const0>\;
  m_axi_wuser(585) <= \<const0>\;
  m_axi_wuser(584) <= \<const0>\;
  m_axi_wuser(583) <= \<const0>\;
  m_axi_wuser(582) <= \<const0>\;
  m_axi_wuser(581) <= \<const0>\;
  m_axi_wuser(580) <= \<const0>\;
  m_axi_wuser(579) <= \<const0>\;
  m_axi_wuser(578) <= \<const0>\;
  m_axi_wuser(577) <= \<const0>\;
  m_axi_wuser(576) <= \<const0>\;
  m_axi_wuser(575) <= \<const0>\;
  m_axi_wuser(574) <= \<const0>\;
  m_axi_wuser(573) <= \<const0>\;
  m_axi_wuser(572) <= \<const0>\;
  m_axi_wuser(571) <= \<const0>\;
  m_axi_wuser(570) <= \<const0>\;
  m_axi_wuser(569) <= \<const0>\;
  m_axi_wuser(568) <= \<const0>\;
  m_axi_wuser(567) <= \<const0>\;
  m_axi_wuser(566) <= \<const0>\;
  m_axi_wuser(565) <= \<const0>\;
  m_axi_wuser(564) <= \<const0>\;
  m_axi_wuser(563) <= \<const0>\;
  m_axi_wuser(562) <= \<const0>\;
  m_axi_wuser(561) <= \<const0>\;
  m_axi_wuser(560) <= \<const0>\;
  m_axi_wuser(559) <= \<const0>\;
  m_axi_wuser(558) <= \<const0>\;
  m_axi_wuser(557) <= \<const0>\;
  m_axi_wuser(556) <= \<const0>\;
  m_axi_wuser(555) <= \<const0>\;
  m_axi_wuser(554) <= \<const0>\;
  m_axi_wuser(553) <= \<const0>\;
  m_axi_wuser(552) <= \<const0>\;
  m_axi_wuser(551) <= \<const0>\;
  m_axi_wuser(550) <= \<const0>\;
  m_axi_wuser(549) <= \<const0>\;
  m_axi_wuser(548) <= \<const0>\;
  m_axi_wuser(547) <= \<const0>\;
  m_axi_wuser(546) <= \<const0>\;
  m_axi_wuser(545) <= \<const0>\;
  m_axi_wuser(544) <= \<const0>\;
  m_axi_wuser(543) <= \<const0>\;
  m_axi_wuser(542) <= \<const0>\;
  m_axi_wuser(541) <= \<const0>\;
  m_axi_wuser(540) <= \<const0>\;
  m_axi_wuser(539) <= \<const0>\;
  m_axi_wuser(538) <= \<const0>\;
  m_axi_wuser(537) <= \<const0>\;
  m_axi_wuser(536) <= \<const0>\;
  m_axi_wuser(535) <= \<const0>\;
  m_axi_wuser(534) <= \<const0>\;
  m_axi_wuser(533) <= \<const0>\;
  m_axi_wuser(532) <= \<const0>\;
  m_axi_wuser(531) <= \<const0>\;
  m_axi_wuser(530) <= \<const0>\;
  m_axi_wuser(529) <= \<const0>\;
  m_axi_wuser(528) <= \<const0>\;
  m_axi_wuser(527) <= \<const0>\;
  m_axi_wuser(526) <= \<const0>\;
  m_axi_wuser(525) <= \<const0>\;
  m_axi_wuser(524) <= \<const0>\;
  m_axi_wuser(523) <= \<const0>\;
  m_axi_wuser(522) <= \<const0>\;
  m_axi_wuser(521) <= \<const0>\;
  m_axi_wuser(520) <= \<const0>\;
  m_axi_wuser(519) <= \<const0>\;
  m_axi_wuser(518) <= \<const0>\;
  m_axi_wuser(517) <= \<const0>\;
  m_axi_wuser(516) <= \<const0>\;
  m_axi_wuser(515) <= \<const0>\;
  m_axi_wuser(514) <= \<const0>\;
  m_axi_wuser(513) <= \<const0>\;
  m_axi_wuser(512) <= \<const0>\;
  m_axi_wuser(511) <= \<const0>\;
  m_axi_wuser(510) <= \<const0>\;
  m_axi_wuser(509) <= \<const0>\;
  m_axi_wuser(508) <= \<const0>\;
  m_axi_wuser(507) <= \<const0>\;
  m_axi_wuser(506) <= \<const0>\;
  m_axi_wuser(505) <= \<const0>\;
  m_axi_wuser(504) <= \<const0>\;
  m_axi_wuser(503) <= \<const0>\;
  m_axi_wuser(502) <= \<const0>\;
  m_axi_wuser(501) <= \<const0>\;
  m_axi_wuser(500) <= \<const0>\;
  m_axi_wuser(499) <= \<const0>\;
  m_axi_wuser(498) <= \<const0>\;
  m_axi_wuser(497) <= \<const0>\;
  m_axi_wuser(496) <= \<const0>\;
  m_axi_wuser(495) <= \<const0>\;
  m_axi_wuser(494) <= \<const0>\;
  m_axi_wuser(493) <= \<const0>\;
  m_axi_wuser(492) <= \<const0>\;
  m_axi_wuser(491) <= \<const0>\;
  m_axi_wuser(490) <= \<const0>\;
  m_axi_wuser(489) <= \<const0>\;
  m_axi_wuser(488) <= \<const0>\;
  m_axi_wuser(487) <= \<const0>\;
  m_axi_wuser(486) <= \<const0>\;
  m_axi_wuser(485) <= \<const0>\;
  m_axi_wuser(484) <= \<const0>\;
  m_axi_wuser(483) <= \<const0>\;
  m_axi_wuser(482) <= \<const0>\;
  m_axi_wuser(481) <= \<const0>\;
  m_axi_wuser(480) <= \<const0>\;
  m_axi_wuser(479) <= \<const0>\;
  m_axi_wuser(478) <= \<const0>\;
  m_axi_wuser(477) <= \<const0>\;
  m_axi_wuser(476) <= \<const0>\;
  m_axi_wuser(475) <= \<const0>\;
  m_axi_wuser(474) <= \<const0>\;
  m_axi_wuser(473) <= \<const0>\;
  m_axi_wuser(472) <= \<const0>\;
  m_axi_wuser(471) <= \<const0>\;
  m_axi_wuser(470) <= \<const0>\;
  m_axi_wuser(469) <= \<const0>\;
  m_axi_wuser(468) <= \<const0>\;
  m_axi_wuser(467) <= \<const0>\;
  m_axi_wuser(466) <= \<const0>\;
  m_axi_wuser(465) <= \<const0>\;
  m_axi_wuser(464) <= \<const0>\;
  m_axi_wuser(463) <= \<const0>\;
  m_axi_wuser(462) <= \<const0>\;
  m_axi_wuser(461) <= \<const0>\;
  m_axi_wuser(460) <= \<const0>\;
  m_axi_wuser(459) <= \<const0>\;
  m_axi_wuser(458) <= \<const0>\;
  m_axi_wuser(457) <= \<const0>\;
  m_axi_wuser(456) <= \<const0>\;
  m_axi_wuser(455) <= \<const0>\;
  m_axi_wuser(454) <= \<const0>\;
  m_axi_wuser(453) <= \<const0>\;
  m_axi_wuser(452) <= \<const0>\;
  m_axi_wuser(451) <= \<const0>\;
  m_axi_wuser(450) <= \<const0>\;
  m_axi_wuser(449) <= \<const0>\;
  m_axi_wuser(448) <= \<const0>\;
  m_axi_wuser(447) <= \<const0>\;
  m_axi_wuser(446) <= \<const0>\;
  m_axi_wuser(445) <= \<const0>\;
  m_axi_wuser(444) <= \<const0>\;
  m_axi_wuser(443) <= \<const0>\;
  m_axi_wuser(442) <= \<const0>\;
  m_axi_wuser(441) <= \<const0>\;
  m_axi_wuser(440) <= \<const0>\;
  m_axi_wuser(439) <= \<const0>\;
  m_axi_wuser(438) <= \<const0>\;
  m_axi_wuser(437) <= \<const0>\;
  m_axi_wuser(436) <= \<const0>\;
  m_axi_wuser(435) <= \<const0>\;
  m_axi_wuser(434) <= \<const0>\;
  m_axi_wuser(433) <= \<const0>\;
  m_axi_wuser(432) <= \<const0>\;
  m_axi_wuser(431) <= \<const0>\;
  m_axi_wuser(430) <= \<const0>\;
  m_axi_wuser(429) <= \<const0>\;
  m_axi_wuser(428) <= \<const0>\;
  m_axi_wuser(427) <= \<const0>\;
  m_axi_wuser(426) <= \<const0>\;
  m_axi_wuser(425) <= \<const0>\;
  m_axi_wuser(424) <= \<const0>\;
  m_axi_wuser(423) <= \<const0>\;
  m_axi_wuser(422) <= \<const0>\;
  m_axi_wuser(421) <= \<const0>\;
  m_axi_wuser(420) <= \<const0>\;
  m_axi_wuser(419) <= \<const0>\;
  m_axi_wuser(418) <= \<const0>\;
  m_axi_wuser(417) <= \<const0>\;
  m_axi_wuser(416) <= \<const0>\;
  m_axi_wuser(415) <= \<const0>\;
  m_axi_wuser(414) <= \<const0>\;
  m_axi_wuser(413) <= \<const0>\;
  m_axi_wuser(412) <= \<const0>\;
  m_axi_wuser(411) <= \<const0>\;
  m_axi_wuser(410) <= \<const0>\;
  m_axi_wuser(409) <= \<const0>\;
  m_axi_wuser(408) <= \<const0>\;
  m_axi_wuser(407) <= \<const0>\;
  m_axi_wuser(406) <= \<const0>\;
  m_axi_wuser(405) <= \<const0>\;
  m_axi_wuser(404) <= \<const0>\;
  m_axi_wuser(403) <= \<const0>\;
  m_axi_wuser(402) <= \<const0>\;
  m_axi_wuser(401) <= \<const0>\;
  m_axi_wuser(400) <= \<const0>\;
  m_axi_wuser(399) <= \<const0>\;
  m_axi_wuser(398) <= \<const0>\;
  m_axi_wuser(397) <= \<const0>\;
  m_axi_wuser(396) <= \<const0>\;
  m_axi_wuser(395) <= \<const0>\;
  m_axi_wuser(394) <= \<const0>\;
  m_axi_wuser(393) <= \<const0>\;
  m_axi_wuser(392) <= \<const0>\;
  m_axi_wuser(391) <= \<const0>\;
  m_axi_wuser(390) <= \<const0>\;
  m_axi_wuser(389) <= \<const0>\;
  m_axi_wuser(388) <= \<const0>\;
  m_axi_wuser(387) <= \<const0>\;
  m_axi_wuser(386) <= \<const0>\;
  m_axi_wuser(385) <= \<const0>\;
  m_axi_wuser(384) <= \<const0>\;
  m_axi_wuser(383) <= \<const0>\;
  m_axi_wuser(382) <= \<const0>\;
  m_axi_wuser(381) <= \<const0>\;
  m_axi_wuser(380) <= \<const0>\;
  m_axi_wuser(379) <= \<const0>\;
  m_axi_wuser(378) <= \<const0>\;
  m_axi_wuser(377) <= \<const0>\;
  m_axi_wuser(376) <= \<const0>\;
  m_axi_wuser(375) <= \<const0>\;
  m_axi_wuser(374) <= \<const0>\;
  m_axi_wuser(373) <= \<const0>\;
  m_axi_wuser(372) <= \<const0>\;
  m_axi_wuser(371) <= \<const0>\;
  m_axi_wuser(370) <= \<const0>\;
  m_axi_wuser(369) <= \<const0>\;
  m_axi_wuser(368) <= \<const0>\;
  m_axi_wuser(367) <= \<const0>\;
  m_axi_wuser(366) <= \<const0>\;
  m_axi_wuser(365) <= \<const0>\;
  m_axi_wuser(364) <= \<const0>\;
  m_axi_wuser(363) <= \<const0>\;
  m_axi_wuser(362) <= \<const0>\;
  m_axi_wuser(361) <= \<const0>\;
  m_axi_wuser(360) <= \<const0>\;
  m_axi_wuser(359) <= \<const0>\;
  m_axi_wuser(358) <= \<const0>\;
  m_axi_wuser(357) <= \<const0>\;
  m_axi_wuser(356) <= \<const0>\;
  m_axi_wuser(355) <= \<const0>\;
  m_axi_wuser(354) <= \<const0>\;
  m_axi_wuser(353) <= \<const0>\;
  m_axi_wuser(352) <= \<const0>\;
  m_axi_wuser(351) <= \<const0>\;
  m_axi_wuser(350) <= \<const0>\;
  m_axi_wuser(349) <= \<const0>\;
  m_axi_wuser(348) <= \<const0>\;
  m_axi_wuser(347) <= \<const0>\;
  m_axi_wuser(346) <= \<const0>\;
  m_axi_wuser(345) <= \<const0>\;
  m_axi_wuser(344) <= \<const0>\;
  m_axi_wuser(343) <= \<const0>\;
  m_axi_wuser(342) <= \<const0>\;
  m_axi_wuser(341) <= \<const0>\;
  m_axi_wuser(340) <= \<const0>\;
  m_axi_wuser(339) <= \<const0>\;
  m_axi_wuser(338) <= \<const0>\;
  m_axi_wuser(337) <= \<const0>\;
  m_axi_wuser(336) <= \<const0>\;
  m_axi_wuser(335) <= \<const0>\;
  m_axi_wuser(334) <= \<const0>\;
  m_axi_wuser(333) <= \<const0>\;
  m_axi_wuser(332) <= \<const0>\;
  m_axi_wuser(331) <= \<const0>\;
  m_axi_wuser(330) <= \<const0>\;
  m_axi_wuser(329) <= \<const0>\;
  m_axi_wuser(328) <= \<const0>\;
  m_axi_wuser(327) <= \<const0>\;
  m_axi_wuser(326) <= \<const0>\;
  m_axi_wuser(325) <= \<const0>\;
  m_axi_wuser(324) <= \<const0>\;
  m_axi_wuser(323) <= \<const0>\;
  m_axi_wuser(322) <= \<const0>\;
  m_axi_wuser(321) <= \<const0>\;
  m_axi_wuser(320) <= \<const0>\;
  m_axi_wuser(319) <= \<const0>\;
  m_axi_wuser(318) <= \<const0>\;
  m_axi_wuser(317) <= \<const0>\;
  m_axi_wuser(316) <= \<const0>\;
  m_axi_wuser(315) <= \<const0>\;
  m_axi_wuser(314) <= \<const0>\;
  m_axi_wuser(313) <= \<const0>\;
  m_axi_wuser(312) <= \<const0>\;
  m_axi_wuser(311) <= \<const0>\;
  m_axi_wuser(310) <= \<const0>\;
  m_axi_wuser(309) <= \<const0>\;
  m_axi_wuser(308) <= \<const0>\;
  m_axi_wuser(307) <= \<const0>\;
  m_axi_wuser(306) <= \<const0>\;
  m_axi_wuser(305) <= \<const0>\;
  m_axi_wuser(304) <= \<const0>\;
  m_axi_wuser(303) <= \<const0>\;
  m_axi_wuser(302) <= \<const0>\;
  m_axi_wuser(301) <= \<const0>\;
  m_axi_wuser(300) <= \<const0>\;
  m_axi_wuser(299) <= \<const0>\;
  m_axi_wuser(298) <= \<const0>\;
  m_axi_wuser(297) <= \<const0>\;
  m_axi_wuser(296) <= \<const0>\;
  m_axi_wuser(295) <= \<const0>\;
  m_axi_wuser(294) <= \<const0>\;
  m_axi_wuser(293) <= \<const0>\;
  m_axi_wuser(292) <= \<const0>\;
  m_axi_wuser(291) <= \<const0>\;
  m_axi_wuser(290) <= \<const0>\;
  m_axi_wuser(289) <= \<const0>\;
  m_axi_wuser(288) <= \<const0>\;
  m_axi_wuser(287) <= \<const0>\;
  m_axi_wuser(286) <= \<const0>\;
  m_axi_wuser(285) <= \<const0>\;
  m_axi_wuser(284) <= \<const0>\;
  m_axi_wuser(283) <= \<const0>\;
  m_axi_wuser(282) <= \<const0>\;
  m_axi_wuser(281) <= \<const0>\;
  m_axi_wuser(280) <= \<const0>\;
  m_axi_wuser(279) <= \<const0>\;
  m_axi_wuser(278) <= \<const0>\;
  m_axi_wuser(277) <= \<const0>\;
  m_axi_wuser(276) <= \<const0>\;
  m_axi_wuser(275) <= \<const0>\;
  m_axi_wuser(274) <= \<const0>\;
  m_axi_wuser(273) <= \<const0>\;
  m_axi_wuser(272) <= \<const0>\;
  m_axi_wuser(271) <= \<const0>\;
  m_axi_wuser(270) <= \<const0>\;
  m_axi_wuser(269) <= \<const0>\;
  m_axi_wuser(268) <= \<const0>\;
  m_axi_wuser(267) <= \<const0>\;
  m_axi_wuser(266) <= \<const0>\;
  m_axi_wuser(265) <= \<const0>\;
  m_axi_wuser(264) <= \<const0>\;
  m_axi_wuser(263) <= \<const0>\;
  m_axi_wuser(262) <= \<const0>\;
  m_axi_wuser(261) <= \<const0>\;
  m_axi_wuser(260) <= \<const0>\;
  m_axi_wuser(259) <= \<const0>\;
  m_axi_wuser(258) <= \<const0>\;
  m_axi_wuser(257) <= \<const0>\;
  m_axi_wuser(256) <= \<const0>\;
  m_axi_wuser(255) <= \<const0>\;
  m_axi_wuser(254) <= \<const0>\;
  m_axi_wuser(253) <= \<const0>\;
  m_axi_wuser(252) <= \<const0>\;
  m_axi_wuser(251) <= \<const0>\;
  m_axi_wuser(250) <= \<const0>\;
  m_axi_wuser(249) <= \<const0>\;
  m_axi_wuser(248) <= \<const0>\;
  m_axi_wuser(247) <= \<const0>\;
  m_axi_wuser(246) <= \<const0>\;
  m_axi_wuser(245) <= \<const0>\;
  m_axi_wuser(244) <= \<const0>\;
  m_axi_wuser(243) <= \<const0>\;
  m_axi_wuser(242) <= \<const0>\;
  m_axi_wuser(241) <= \<const0>\;
  m_axi_wuser(240) <= \<const0>\;
  m_axi_wuser(239) <= \<const0>\;
  m_axi_wuser(238) <= \<const0>\;
  m_axi_wuser(237) <= \<const0>\;
  m_axi_wuser(236) <= \<const0>\;
  m_axi_wuser(235) <= \<const0>\;
  m_axi_wuser(234) <= \<const0>\;
  m_axi_wuser(233) <= \<const0>\;
  m_axi_wuser(232) <= \<const0>\;
  m_axi_wuser(231) <= \<const0>\;
  m_axi_wuser(230) <= \<const0>\;
  m_axi_wuser(229) <= \<const0>\;
  m_axi_wuser(228) <= \<const0>\;
  m_axi_wuser(227) <= \<const0>\;
  m_axi_wuser(226) <= \<const0>\;
  m_axi_wuser(225) <= \<const0>\;
  m_axi_wuser(224) <= \<const0>\;
  m_axi_wuser(223) <= \<const0>\;
  m_axi_wuser(222) <= \<const0>\;
  m_axi_wuser(221) <= \<const0>\;
  m_axi_wuser(220) <= \<const0>\;
  m_axi_wuser(219) <= \<const0>\;
  m_axi_wuser(218) <= \<const0>\;
  m_axi_wuser(217) <= \<const0>\;
  m_axi_wuser(216) <= \<const0>\;
  m_axi_wuser(215) <= \<const0>\;
  m_axi_wuser(214) <= \<const0>\;
  m_axi_wuser(213) <= \<const0>\;
  m_axi_wuser(212) <= \<const0>\;
  m_axi_wuser(211) <= \<const0>\;
  m_axi_wuser(210) <= \<const0>\;
  m_axi_wuser(209) <= \<const0>\;
  m_axi_wuser(208) <= \<const0>\;
  m_axi_wuser(207) <= \<const0>\;
  m_axi_wuser(206) <= \<const0>\;
  m_axi_wuser(205) <= \<const0>\;
  m_axi_wuser(204) <= \<const0>\;
  m_axi_wuser(203) <= \<const0>\;
  m_axi_wuser(202) <= \<const0>\;
  m_axi_wuser(201) <= \<const0>\;
  m_axi_wuser(200) <= \<const0>\;
  m_axi_wuser(199) <= \<const0>\;
  m_axi_wuser(198) <= \<const0>\;
  m_axi_wuser(197) <= \<const0>\;
  m_axi_wuser(196) <= \<const0>\;
  m_axi_wuser(195) <= \<const0>\;
  m_axi_wuser(194) <= \<const0>\;
  m_axi_wuser(193) <= \<const0>\;
  m_axi_wuser(192) <= \<const0>\;
  m_axi_wuser(191) <= \<const0>\;
  m_axi_wuser(190) <= \<const0>\;
  m_axi_wuser(189) <= \<const0>\;
  m_axi_wuser(188) <= \<const0>\;
  m_axi_wuser(187) <= \<const0>\;
  m_axi_wuser(186) <= \<const0>\;
  m_axi_wuser(185) <= \<const0>\;
  m_axi_wuser(184) <= \<const0>\;
  m_axi_wuser(183) <= \<const0>\;
  m_axi_wuser(182) <= \<const0>\;
  m_axi_wuser(181) <= \<const0>\;
  m_axi_wuser(180) <= \<const0>\;
  m_axi_wuser(179) <= \<const0>\;
  m_axi_wuser(178) <= \<const0>\;
  m_axi_wuser(177) <= \<const0>\;
  m_axi_wuser(176) <= \<const0>\;
  m_axi_wuser(175) <= \<const0>\;
  m_axi_wuser(174) <= \<const0>\;
  m_axi_wuser(173) <= \<const0>\;
  m_axi_wuser(172) <= \<const0>\;
  m_axi_wuser(171) <= \<const0>\;
  m_axi_wuser(170) <= \<const0>\;
  m_axi_wuser(169) <= \<const0>\;
  m_axi_wuser(168) <= \<const0>\;
  m_axi_wuser(167) <= \<const0>\;
  m_axi_wuser(166) <= \<const0>\;
  m_axi_wuser(165) <= \<const0>\;
  m_axi_wuser(164) <= \<const0>\;
  m_axi_wuser(163) <= \<const0>\;
  m_axi_wuser(162) <= \<const0>\;
  m_axi_wuser(161) <= \<const0>\;
  m_axi_wuser(160) <= \<const0>\;
  m_axi_wuser(159) <= \<const0>\;
  m_axi_wuser(158) <= \<const0>\;
  m_axi_wuser(157) <= \<const0>\;
  m_axi_wuser(156) <= \<const0>\;
  m_axi_wuser(155) <= \<const0>\;
  m_axi_wuser(154) <= \<const0>\;
  m_axi_wuser(153) <= \<const0>\;
  m_axi_wuser(152) <= \<const0>\;
  m_axi_wuser(151) <= \<const0>\;
  m_axi_wuser(150) <= \<const0>\;
  m_axi_wuser(149) <= \<const0>\;
  m_axi_wuser(148) <= \<const0>\;
  m_axi_wuser(147) <= \<const0>\;
  m_axi_wuser(146) <= \<const0>\;
  m_axi_wuser(145) <= \<const0>\;
  m_axi_wuser(144) <= \<const0>\;
  m_axi_wuser(143) <= \<const0>\;
  m_axi_wuser(142) <= \<const0>\;
  m_axi_wuser(141) <= \<const0>\;
  m_axi_wuser(140) <= \<const0>\;
  m_axi_wuser(139) <= \<const0>\;
  m_axi_wuser(138) <= \<const0>\;
  m_axi_wuser(137) <= \<const0>\;
  m_axi_wuser(136) <= \<const0>\;
  m_axi_wuser(135) <= \<const0>\;
  m_axi_wuser(134) <= \<const0>\;
  m_axi_wuser(133) <= \<const0>\;
  m_axi_wuser(132) <= \<const0>\;
  m_axi_wuser(131) <= \<const0>\;
  m_axi_wuser(130) <= \<const0>\;
  m_axi_wuser(129) <= \<const0>\;
  m_axi_wuser(128) <= \<const0>\;
  m_axi_wuser(127) <= \<const0>\;
  m_axi_wuser(126) <= \<const0>\;
  m_axi_wuser(125) <= \<const0>\;
  m_axi_wuser(124) <= \<const0>\;
  m_axi_wuser(123) <= \<const0>\;
  m_axi_wuser(122) <= \<const0>\;
  m_axi_wuser(121) <= \<const0>\;
  m_axi_wuser(120) <= \<const0>\;
  m_axi_wuser(119) <= \<const0>\;
  m_axi_wuser(118) <= \<const0>\;
  m_axi_wuser(117) <= \<const0>\;
  m_axi_wuser(116) <= \<const0>\;
  m_axi_wuser(115) <= \<const0>\;
  m_axi_wuser(114) <= \<const0>\;
  m_axi_wuser(113) <= \<const0>\;
  m_axi_wuser(112) <= \<const0>\;
  m_axi_wuser(111) <= \<const0>\;
  m_axi_wuser(110) <= \<const0>\;
  m_axi_wuser(109) <= \<const0>\;
  m_axi_wuser(108) <= \<const0>\;
  m_axi_wuser(107) <= \<const0>\;
  m_axi_wuser(106) <= \<const0>\;
  m_axi_wuser(105) <= \<const0>\;
  m_axi_wuser(104) <= \<const0>\;
  m_axi_wuser(103) <= \<const0>\;
  m_axi_wuser(102) <= \<const0>\;
  m_axi_wuser(101) <= \<const0>\;
  m_axi_wuser(100) <= \<const0>\;
  m_axi_wuser(99) <= \<const0>\;
  m_axi_wuser(98) <= \<const0>\;
  m_axi_wuser(97) <= \<const0>\;
  m_axi_wuser(96) <= \<const0>\;
  m_axi_wuser(95) <= \<const0>\;
  m_axi_wuser(94) <= \<const0>\;
  m_axi_wuser(93) <= \<const0>\;
  m_axi_wuser(92) <= \<const0>\;
  m_axi_wuser(91) <= \<const0>\;
  m_axi_wuser(90) <= \<const0>\;
  m_axi_wuser(89) <= \<const0>\;
  m_axi_wuser(88) <= \<const0>\;
  m_axi_wuser(87) <= \<const0>\;
  m_axi_wuser(86) <= \<const0>\;
  m_axi_wuser(85) <= \<const0>\;
  m_axi_wuser(84) <= \<const0>\;
  m_axi_wuser(83) <= \<const0>\;
  m_axi_wuser(82) <= \<const0>\;
  m_axi_wuser(81) <= \<const0>\;
  m_axi_wuser(80) <= \<const0>\;
  m_axi_wuser(79) <= \<const0>\;
  m_axi_wuser(78) <= \<const0>\;
  m_axi_wuser(77) <= \<const0>\;
  m_axi_wuser(76) <= \<const0>\;
  m_axi_wuser(75) <= \<const0>\;
  m_axi_wuser(74) <= \<const0>\;
  m_axi_wuser(73) <= \<const0>\;
  m_axi_wuser(72) <= \<const0>\;
  m_axi_wuser(71) <= \<const0>\;
  m_axi_wuser(70) <= \<const0>\;
  m_axi_wuser(69) <= \<const0>\;
  m_axi_wuser(68) <= \<const0>\;
  m_axi_wuser(67) <= \<const0>\;
  m_axi_wuser(66) <= \<const0>\;
  m_axi_wuser(65) <= \<const0>\;
  m_axi_wuser(64) <= \<const0>\;
  m_axi_wuser(63) <= \<const0>\;
  m_axi_wuser(62) <= \<const0>\;
  m_axi_wuser(61) <= \<const0>\;
  m_axi_wuser(60) <= \<const0>\;
  m_axi_wuser(59) <= \<const0>\;
  m_axi_wuser(58) <= \<const0>\;
  m_axi_wuser(57) <= \<const0>\;
  m_axi_wuser(56) <= \<const0>\;
  m_axi_wuser(55) <= \<const0>\;
  m_axi_wuser(54) <= \<const0>\;
  m_axi_wuser(53) <= \<const0>\;
  m_axi_wuser(52) <= \<const0>\;
  m_axi_wuser(51) <= \<const0>\;
  m_axi_wuser(50) <= \<const0>\;
  m_axi_wuser(49) <= \<const0>\;
  m_axi_wuser(48) <= \<const0>\;
  m_axi_wuser(47) <= \<const0>\;
  m_axi_wuser(46) <= \<const0>\;
  m_axi_wuser(45) <= \<const0>\;
  m_axi_wuser(44) <= \<const0>\;
  m_axi_wuser(43) <= \<const0>\;
  m_axi_wuser(42) <= \<const0>\;
  m_axi_wuser(41) <= \<const0>\;
  m_axi_wuser(40) <= \<const0>\;
  m_axi_wuser(39) <= \<const0>\;
  m_axi_wuser(38) <= \<const0>\;
  m_axi_wuser(37) <= \<const0>\;
  m_axi_wuser(36) <= \<const0>\;
  m_axi_wuser(35) <= \<const0>\;
  m_axi_wuser(34) <= \<const0>\;
  m_axi_wuser(33) <= \<const0>\;
  m_axi_wuser(32) <= \<const0>\;
  m_axi_wuser(31) <= \<const0>\;
  m_axi_wuser(30) <= \<const0>\;
  m_axi_wuser(29) <= \<const0>\;
  m_axi_wuser(28) <= \<const0>\;
  m_axi_wuser(27) <= \<const0>\;
  m_axi_wuser(26) <= \<const0>\;
  m_axi_wuser(25) <= \<const0>\;
  m_axi_wuser(24) <= \<const0>\;
  m_axi_wuser(23) <= \<const0>\;
  m_axi_wuser(22) <= \<const0>\;
  m_axi_wuser(21) <= \<const0>\;
  m_axi_wuser(20) <= \<const0>\;
  m_axi_wuser(19) <= \<const0>\;
  m_axi_wuser(18) <= \<const0>\;
  m_axi_wuser(17) <= \<const0>\;
  m_axi_wuser(16) <= \<const0>\;
  m_axi_wuser(15) <= \<const0>\;
  m_axi_wuser(14) <= \<const0>\;
  m_axi_wuser(13) <= \<const0>\;
  m_axi_wuser(12) <= \<const0>\;
  m_axi_wuser(11) <= \<const0>\;
  m_axi_wuser(10) <= \<const0>\;
  m_axi_wuser(9) <= \<const0>\;
  m_axi_wuser(8) <= \<const0>\;
  m_axi_wuser(7) <= \<const0>\;
  m_axi_wuser(6) <= \<const0>\;
  m_axi_wuser(5) <= \<const0>\;
  m_axi_wuser(4) <= \<const0>\;
  m_axi_wuser(3) <= \<const0>\;
  m_axi_wuser(2) <= \<const0>\;
  m_axi_wuser(1) <= \<const0>\;
  m_axi_wuser(0) <= \<const0>\;
  m_axi_wvalid <= \<const0>\;
  s_axi_bresp(1) <= \<const0>\;
  s_axi_bresp(0) <= \<const0>\;
  s_axi_buser(1023) <= \<const0>\;
  s_axi_buser(1022) <= \<const0>\;
  s_axi_buser(1021) <= \<const0>\;
  s_axi_buser(1020) <= \<const0>\;
  s_axi_buser(1019) <= \<const0>\;
  s_axi_buser(1018) <= \<const0>\;
  s_axi_buser(1017) <= \<const0>\;
  s_axi_buser(1016) <= \<const0>\;
  s_axi_buser(1015) <= \<const0>\;
  s_axi_buser(1014) <= \<const0>\;
  s_axi_buser(1013) <= \<const0>\;
  s_axi_buser(1012) <= \<const0>\;
  s_axi_buser(1011) <= \<const0>\;
  s_axi_buser(1010) <= \<const0>\;
  s_axi_buser(1009) <= \<const0>\;
  s_axi_buser(1008) <= \<const0>\;
  s_axi_buser(1007) <= \<const0>\;
  s_axi_buser(1006) <= \<const0>\;
  s_axi_buser(1005) <= \<const0>\;
  s_axi_buser(1004) <= \<const0>\;
  s_axi_buser(1003) <= \<const0>\;
  s_axi_buser(1002) <= \<const0>\;
  s_axi_buser(1001) <= \<const0>\;
  s_axi_buser(1000) <= \<const0>\;
  s_axi_buser(999) <= \<const0>\;
  s_axi_buser(998) <= \<const0>\;
  s_axi_buser(997) <= \<const0>\;
  s_axi_buser(996) <= \<const0>\;
  s_axi_buser(995) <= \<const0>\;
  s_axi_buser(994) <= \<const0>\;
  s_axi_buser(993) <= \<const0>\;
  s_axi_buser(992) <= \<const0>\;
  s_axi_buser(991) <= \<const0>\;
  s_axi_buser(990) <= \<const0>\;
  s_axi_buser(989) <= \<const0>\;
  s_axi_buser(988) <= \<const0>\;
  s_axi_buser(987) <= \<const0>\;
  s_axi_buser(986) <= \<const0>\;
  s_axi_buser(985) <= \<const0>\;
  s_axi_buser(984) <= \<const0>\;
  s_axi_buser(983) <= \<const0>\;
  s_axi_buser(982) <= \<const0>\;
  s_axi_buser(981) <= \<const0>\;
  s_axi_buser(980) <= \<const0>\;
  s_axi_buser(979) <= \<const0>\;
  s_axi_buser(978) <= \<const0>\;
  s_axi_buser(977) <= \<const0>\;
  s_axi_buser(976) <= \<const0>\;
  s_axi_buser(975) <= \<const0>\;
  s_axi_buser(974) <= \<const0>\;
  s_axi_buser(973) <= \<const0>\;
  s_axi_buser(972) <= \<const0>\;
  s_axi_buser(971) <= \<const0>\;
  s_axi_buser(970) <= \<const0>\;
  s_axi_buser(969) <= \<const0>\;
  s_axi_buser(968) <= \<const0>\;
  s_axi_buser(967) <= \<const0>\;
  s_axi_buser(966) <= \<const0>\;
  s_axi_buser(965) <= \<const0>\;
  s_axi_buser(964) <= \<const0>\;
  s_axi_buser(963) <= \<const0>\;
  s_axi_buser(962) <= \<const0>\;
  s_axi_buser(961) <= \<const0>\;
  s_axi_buser(960) <= \<const0>\;
  s_axi_buser(959) <= \<const0>\;
  s_axi_buser(958) <= \<const0>\;
  s_axi_buser(957) <= \<const0>\;
  s_axi_buser(956) <= \<const0>\;
  s_axi_buser(955) <= \<const0>\;
  s_axi_buser(954) <= \<const0>\;
  s_axi_buser(953) <= \<const0>\;
  s_axi_buser(952) <= \<const0>\;
  s_axi_buser(951) <= \<const0>\;
  s_axi_buser(950) <= \<const0>\;
  s_axi_buser(949) <= \<const0>\;
  s_axi_buser(948) <= \<const0>\;
  s_axi_buser(947) <= \<const0>\;
  s_axi_buser(946) <= \<const0>\;
  s_axi_buser(945) <= \<const0>\;
  s_axi_buser(944) <= \<const0>\;
  s_axi_buser(943) <= \<const0>\;
  s_axi_buser(942) <= \<const0>\;
  s_axi_buser(941) <= \<const0>\;
  s_axi_buser(940) <= \<const0>\;
  s_axi_buser(939) <= \<const0>\;
  s_axi_buser(938) <= \<const0>\;
  s_axi_buser(937) <= \<const0>\;
  s_axi_buser(936) <= \<const0>\;
  s_axi_buser(935) <= \<const0>\;
  s_axi_buser(934) <= \<const0>\;
  s_axi_buser(933) <= \<const0>\;
  s_axi_buser(932) <= \<const0>\;
  s_axi_buser(931) <= \<const0>\;
  s_axi_buser(930) <= \<const0>\;
  s_axi_buser(929) <= \<const0>\;
  s_axi_buser(928) <= \<const0>\;
  s_axi_buser(927) <= \<const0>\;
  s_axi_buser(926) <= \<const0>\;
  s_axi_buser(925) <= \<const0>\;
  s_axi_buser(924) <= \<const0>\;
  s_axi_buser(923) <= \<const0>\;
  s_axi_buser(922) <= \<const0>\;
  s_axi_buser(921) <= \<const0>\;
  s_axi_buser(920) <= \<const0>\;
  s_axi_buser(919) <= \<const0>\;
  s_axi_buser(918) <= \<const0>\;
  s_axi_buser(917) <= \<const0>\;
  s_axi_buser(916) <= \<const0>\;
  s_axi_buser(915) <= \<const0>\;
  s_axi_buser(914) <= \<const0>\;
  s_axi_buser(913) <= \<const0>\;
  s_axi_buser(912) <= \<const0>\;
  s_axi_buser(911) <= \<const0>\;
  s_axi_buser(910) <= \<const0>\;
  s_axi_buser(909) <= \<const0>\;
  s_axi_buser(908) <= \<const0>\;
  s_axi_buser(907) <= \<const0>\;
  s_axi_buser(906) <= \<const0>\;
  s_axi_buser(905) <= \<const0>\;
  s_axi_buser(904) <= \<const0>\;
  s_axi_buser(903) <= \<const0>\;
  s_axi_buser(902) <= \<const0>\;
  s_axi_buser(901) <= \<const0>\;
  s_axi_buser(900) <= \<const0>\;
  s_axi_buser(899) <= \<const0>\;
  s_axi_buser(898) <= \<const0>\;
  s_axi_buser(897) <= \<const0>\;
  s_axi_buser(896) <= \<const0>\;
  s_axi_buser(895) <= \<const0>\;
  s_axi_buser(894) <= \<const0>\;
  s_axi_buser(893) <= \<const0>\;
  s_axi_buser(892) <= \<const0>\;
  s_axi_buser(891) <= \<const0>\;
  s_axi_buser(890) <= \<const0>\;
  s_axi_buser(889) <= \<const0>\;
  s_axi_buser(888) <= \<const0>\;
  s_axi_buser(887) <= \<const0>\;
  s_axi_buser(886) <= \<const0>\;
  s_axi_buser(885) <= \<const0>\;
  s_axi_buser(884) <= \<const0>\;
  s_axi_buser(883) <= \<const0>\;
  s_axi_buser(882) <= \<const0>\;
  s_axi_buser(881) <= \<const0>\;
  s_axi_buser(880) <= \<const0>\;
  s_axi_buser(879) <= \<const0>\;
  s_axi_buser(878) <= \<const0>\;
  s_axi_buser(877) <= \<const0>\;
  s_axi_buser(876) <= \<const0>\;
  s_axi_buser(875) <= \<const0>\;
  s_axi_buser(874) <= \<const0>\;
  s_axi_buser(873) <= \<const0>\;
  s_axi_buser(872) <= \<const0>\;
  s_axi_buser(871) <= \<const0>\;
  s_axi_buser(870) <= \<const0>\;
  s_axi_buser(869) <= \<const0>\;
  s_axi_buser(868) <= \<const0>\;
  s_axi_buser(867) <= \<const0>\;
  s_axi_buser(866) <= \<const0>\;
  s_axi_buser(865) <= \<const0>\;
  s_axi_buser(864) <= \<const0>\;
  s_axi_buser(863) <= \<const0>\;
  s_axi_buser(862) <= \<const0>\;
  s_axi_buser(861) <= \<const0>\;
  s_axi_buser(860) <= \<const0>\;
  s_axi_buser(859) <= \<const0>\;
  s_axi_buser(858) <= \<const0>\;
  s_axi_buser(857) <= \<const0>\;
  s_axi_buser(856) <= \<const0>\;
  s_axi_buser(855) <= \<const0>\;
  s_axi_buser(854) <= \<const0>\;
  s_axi_buser(853) <= \<const0>\;
  s_axi_buser(852) <= \<const0>\;
  s_axi_buser(851) <= \<const0>\;
  s_axi_buser(850) <= \<const0>\;
  s_axi_buser(849) <= \<const0>\;
  s_axi_buser(848) <= \<const0>\;
  s_axi_buser(847) <= \<const0>\;
  s_axi_buser(846) <= \<const0>\;
  s_axi_buser(845) <= \<const0>\;
  s_axi_buser(844) <= \<const0>\;
  s_axi_buser(843) <= \<const0>\;
  s_axi_buser(842) <= \<const0>\;
  s_axi_buser(841) <= \<const0>\;
  s_axi_buser(840) <= \<const0>\;
  s_axi_buser(839) <= \<const0>\;
  s_axi_buser(838) <= \<const0>\;
  s_axi_buser(837) <= \<const0>\;
  s_axi_buser(836) <= \<const0>\;
  s_axi_buser(835) <= \<const0>\;
  s_axi_buser(834) <= \<const0>\;
  s_axi_buser(833) <= \<const0>\;
  s_axi_buser(832) <= \<const0>\;
  s_axi_buser(831) <= \<const0>\;
  s_axi_buser(830) <= \<const0>\;
  s_axi_buser(829) <= \<const0>\;
  s_axi_buser(828) <= \<const0>\;
  s_axi_buser(827) <= \<const0>\;
  s_axi_buser(826) <= \<const0>\;
  s_axi_buser(825) <= \<const0>\;
  s_axi_buser(824) <= \<const0>\;
  s_axi_buser(823) <= \<const0>\;
  s_axi_buser(822) <= \<const0>\;
  s_axi_buser(821) <= \<const0>\;
  s_axi_buser(820) <= \<const0>\;
  s_axi_buser(819) <= \<const0>\;
  s_axi_buser(818) <= \<const0>\;
  s_axi_buser(817) <= \<const0>\;
  s_axi_buser(816) <= \<const0>\;
  s_axi_buser(815) <= \<const0>\;
  s_axi_buser(814) <= \<const0>\;
  s_axi_buser(813) <= \<const0>\;
  s_axi_buser(812) <= \<const0>\;
  s_axi_buser(811) <= \<const0>\;
  s_axi_buser(810) <= \<const0>\;
  s_axi_buser(809) <= \<const0>\;
  s_axi_buser(808) <= \<const0>\;
  s_axi_buser(807) <= \<const0>\;
  s_axi_buser(806) <= \<const0>\;
  s_axi_buser(805) <= \<const0>\;
  s_axi_buser(804) <= \<const0>\;
  s_axi_buser(803) <= \<const0>\;
  s_axi_buser(802) <= \<const0>\;
  s_axi_buser(801) <= \<const0>\;
  s_axi_buser(800) <= \<const0>\;
  s_axi_buser(799) <= \<const0>\;
  s_axi_buser(798) <= \<const0>\;
  s_axi_buser(797) <= \<const0>\;
  s_axi_buser(796) <= \<const0>\;
  s_axi_buser(795) <= \<const0>\;
  s_axi_buser(794) <= \<const0>\;
  s_axi_buser(793) <= \<const0>\;
  s_axi_buser(792) <= \<const0>\;
  s_axi_buser(791) <= \<const0>\;
  s_axi_buser(790) <= \<const0>\;
  s_axi_buser(789) <= \<const0>\;
  s_axi_buser(788) <= \<const0>\;
  s_axi_buser(787) <= \<const0>\;
  s_axi_buser(786) <= \<const0>\;
  s_axi_buser(785) <= \<const0>\;
  s_axi_buser(784) <= \<const0>\;
  s_axi_buser(783) <= \<const0>\;
  s_axi_buser(782) <= \<const0>\;
  s_axi_buser(781) <= \<const0>\;
  s_axi_buser(780) <= \<const0>\;
  s_axi_buser(779) <= \<const0>\;
  s_axi_buser(778) <= \<const0>\;
  s_axi_buser(777) <= \<const0>\;
  s_axi_buser(776) <= \<const0>\;
  s_axi_buser(775) <= \<const0>\;
  s_axi_buser(774) <= \<const0>\;
  s_axi_buser(773) <= \<const0>\;
  s_axi_buser(772) <= \<const0>\;
  s_axi_buser(771) <= \<const0>\;
  s_axi_buser(770) <= \<const0>\;
  s_axi_buser(769) <= \<const0>\;
  s_axi_buser(768) <= \<const0>\;
  s_axi_buser(767) <= \<const0>\;
  s_axi_buser(766) <= \<const0>\;
  s_axi_buser(765) <= \<const0>\;
  s_axi_buser(764) <= \<const0>\;
  s_axi_buser(763) <= \<const0>\;
  s_axi_buser(762) <= \<const0>\;
  s_axi_buser(761) <= \<const0>\;
  s_axi_buser(760) <= \<const0>\;
  s_axi_buser(759) <= \<const0>\;
  s_axi_buser(758) <= \<const0>\;
  s_axi_buser(757) <= \<const0>\;
  s_axi_buser(756) <= \<const0>\;
  s_axi_buser(755) <= \<const0>\;
  s_axi_buser(754) <= \<const0>\;
  s_axi_buser(753) <= \<const0>\;
  s_axi_buser(752) <= \<const0>\;
  s_axi_buser(751) <= \<const0>\;
  s_axi_buser(750) <= \<const0>\;
  s_axi_buser(749) <= \<const0>\;
  s_axi_buser(748) <= \<const0>\;
  s_axi_buser(747) <= \<const0>\;
  s_axi_buser(746) <= \<const0>\;
  s_axi_buser(745) <= \<const0>\;
  s_axi_buser(744) <= \<const0>\;
  s_axi_buser(743) <= \<const0>\;
  s_axi_buser(742) <= \<const0>\;
  s_axi_buser(741) <= \<const0>\;
  s_axi_buser(740) <= \<const0>\;
  s_axi_buser(739) <= \<const0>\;
  s_axi_buser(738) <= \<const0>\;
  s_axi_buser(737) <= \<const0>\;
  s_axi_buser(736) <= \<const0>\;
  s_axi_buser(735) <= \<const0>\;
  s_axi_buser(734) <= \<const0>\;
  s_axi_buser(733) <= \<const0>\;
  s_axi_buser(732) <= \<const0>\;
  s_axi_buser(731) <= \<const0>\;
  s_axi_buser(730) <= \<const0>\;
  s_axi_buser(729) <= \<const0>\;
  s_axi_buser(728) <= \<const0>\;
  s_axi_buser(727) <= \<const0>\;
  s_axi_buser(726) <= \<const0>\;
  s_axi_buser(725) <= \<const0>\;
  s_axi_buser(724) <= \<const0>\;
  s_axi_buser(723) <= \<const0>\;
  s_axi_buser(722) <= \<const0>\;
  s_axi_buser(721) <= \<const0>\;
  s_axi_buser(720) <= \<const0>\;
  s_axi_buser(719) <= \<const0>\;
  s_axi_buser(718) <= \<const0>\;
  s_axi_buser(717) <= \<const0>\;
  s_axi_buser(716) <= \<const0>\;
  s_axi_buser(715) <= \<const0>\;
  s_axi_buser(714) <= \<const0>\;
  s_axi_buser(713) <= \<const0>\;
  s_axi_buser(712) <= \<const0>\;
  s_axi_buser(711) <= \<const0>\;
  s_axi_buser(710) <= \<const0>\;
  s_axi_buser(709) <= \<const0>\;
  s_axi_buser(708) <= \<const0>\;
  s_axi_buser(707) <= \<const0>\;
  s_axi_buser(706) <= \<const0>\;
  s_axi_buser(705) <= \<const0>\;
  s_axi_buser(704) <= \<const0>\;
  s_axi_buser(703) <= \<const0>\;
  s_axi_buser(702) <= \<const0>\;
  s_axi_buser(701) <= \<const0>\;
  s_axi_buser(700) <= \<const0>\;
  s_axi_buser(699) <= \<const0>\;
  s_axi_buser(698) <= \<const0>\;
  s_axi_buser(697) <= \<const0>\;
  s_axi_buser(696) <= \<const0>\;
  s_axi_buser(695) <= \<const0>\;
  s_axi_buser(694) <= \<const0>\;
  s_axi_buser(693) <= \<const0>\;
  s_axi_buser(692) <= \<const0>\;
  s_axi_buser(691) <= \<const0>\;
  s_axi_buser(690) <= \<const0>\;
  s_axi_buser(689) <= \<const0>\;
  s_axi_buser(688) <= \<const0>\;
  s_axi_buser(687) <= \<const0>\;
  s_axi_buser(686) <= \<const0>\;
  s_axi_buser(685) <= \<const0>\;
  s_axi_buser(684) <= \<const0>\;
  s_axi_buser(683) <= \<const0>\;
  s_axi_buser(682) <= \<const0>\;
  s_axi_buser(681) <= \<const0>\;
  s_axi_buser(680) <= \<const0>\;
  s_axi_buser(679) <= \<const0>\;
  s_axi_buser(678) <= \<const0>\;
  s_axi_buser(677) <= \<const0>\;
  s_axi_buser(676) <= \<const0>\;
  s_axi_buser(675) <= \<const0>\;
  s_axi_buser(674) <= \<const0>\;
  s_axi_buser(673) <= \<const0>\;
  s_axi_buser(672) <= \<const0>\;
  s_axi_buser(671) <= \<const0>\;
  s_axi_buser(670) <= \<const0>\;
  s_axi_buser(669) <= \<const0>\;
  s_axi_buser(668) <= \<const0>\;
  s_axi_buser(667) <= \<const0>\;
  s_axi_buser(666) <= \<const0>\;
  s_axi_buser(665) <= \<const0>\;
  s_axi_buser(664) <= \<const0>\;
  s_axi_buser(663) <= \<const0>\;
  s_axi_buser(662) <= \<const0>\;
  s_axi_buser(661) <= \<const0>\;
  s_axi_buser(660) <= \<const0>\;
  s_axi_buser(659) <= \<const0>\;
  s_axi_buser(658) <= \<const0>\;
  s_axi_buser(657) <= \<const0>\;
  s_axi_buser(656) <= \<const0>\;
  s_axi_buser(655) <= \<const0>\;
  s_axi_buser(654) <= \<const0>\;
  s_axi_buser(653) <= \<const0>\;
  s_axi_buser(652) <= \<const0>\;
  s_axi_buser(651) <= \<const0>\;
  s_axi_buser(650) <= \<const0>\;
  s_axi_buser(649) <= \<const0>\;
  s_axi_buser(648) <= \<const0>\;
  s_axi_buser(647) <= \<const0>\;
  s_axi_buser(646) <= \<const0>\;
  s_axi_buser(645) <= \<const0>\;
  s_axi_buser(644) <= \<const0>\;
  s_axi_buser(643) <= \<const0>\;
  s_axi_buser(642) <= \<const0>\;
  s_axi_buser(641) <= \<const0>\;
  s_axi_buser(640) <= \<const0>\;
  s_axi_buser(639) <= \<const0>\;
  s_axi_buser(638) <= \<const0>\;
  s_axi_buser(637) <= \<const0>\;
  s_axi_buser(636) <= \<const0>\;
  s_axi_buser(635) <= \<const0>\;
  s_axi_buser(634) <= \<const0>\;
  s_axi_buser(633) <= \<const0>\;
  s_axi_buser(632) <= \<const0>\;
  s_axi_buser(631) <= \<const0>\;
  s_axi_buser(630) <= \<const0>\;
  s_axi_buser(629) <= \<const0>\;
  s_axi_buser(628) <= \<const0>\;
  s_axi_buser(627) <= \<const0>\;
  s_axi_buser(626) <= \<const0>\;
  s_axi_buser(625) <= \<const0>\;
  s_axi_buser(624) <= \<const0>\;
  s_axi_buser(623) <= \<const0>\;
  s_axi_buser(622) <= \<const0>\;
  s_axi_buser(621) <= \<const0>\;
  s_axi_buser(620) <= \<const0>\;
  s_axi_buser(619) <= \<const0>\;
  s_axi_buser(618) <= \<const0>\;
  s_axi_buser(617) <= \<const0>\;
  s_axi_buser(616) <= \<const0>\;
  s_axi_buser(615) <= \<const0>\;
  s_axi_buser(614) <= \<const0>\;
  s_axi_buser(613) <= \<const0>\;
  s_axi_buser(612) <= \<const0>\;
  s_axi_buser(611) <= \<const0>\;
  s_axi_buser(610) <= \<const0>\;
  s_axi_buser(609) <= \<const0>\;
  s_axi_buser(608) <= \<const0>\;
  s_axi_buser(607) <= \<const0>\;
  s_axi_buser(606) <= \<const0>\;
  s_axi_buser(605) <= \<const0>\;
  s_axi_buser(604) <= \<const0>\;
  s_axi_buser(603) <= \<const0>\;
  s_axi_buser(602) <= \<const0>\;
  s_axi_buser(601) <= \<const0>\;
  s_axi_buser(600) <= \<const0>\;
  s_axi_buser(599) <= \<const0>\;
  s_axi_buser(598) <= \<const0>\;
  s_axi_buser(597) <= \<const0>\;
  s_axi_buser(596) <= \<const0>\;
  s_axi_buser(595) <= \<const0>\;
  s_axi_buser(594) <= \<const0>\;
  s_axi_buser(593) <= \<const0>\;
  s_axi_buser(592) <= \<const0>\;
  s_axi_buser(591) <= \<const0>\;
  s_axi_buser(590) <= \<const0>\;
  s_axi_buser(589) <= \<const0>\;
  s_axi_buser(588) <= \<const0>\;
  s_axi_buser(587) <= \<const0>\;
  s_axi_buser(586) <= \<const0>\;
  s_axi_buser(585) <= \<const0>\;
  s_axi_buser(584) <= \<const0>\;
  s_axi_buser(583) <= \<const0>\;
  s_axi_buser(582) <= \<const0>\;
  s_axi_buser(581) <= \<const0>\;
  s_axi_buser(580) <= \<const0>\;
  s_axi_buser(579) <= \<const0>\;
  s_axi_buser(578) <= \<const0>\;
  s_axi_buser(577) <= \<const0>\;
  s_axi_buser(576) <= \<const0>\;
  s_axi_buser(575) <= \<const0>\;
  s_axi_buser(574) <= \<const0>\;
  s_axi_buser(573) <= \<const0>\;
  s_axi_buser(572) <= \<const0>\;
  s_axi_buser(571) <= \<const0>\;
  s_axi_buser(570) <= \<const0>\;
  s_axi_buser(569) <= \<const0>\;
  s_axi_buser(568) <= \<const0>\;
  s_axi_buser(567) <= \<const0>\;
  s_axi_buser(566) <= \<const0>\;
  s_axi_buser(565) <= \<const0>\;
  s_axi_buser(564) <= \<const0>\;
  s_axi_buser(563) <= \<const0>\;
  s_axi_buser(562) <= \<const0>\;
  s_axi_buser(561) <= \<const0>\;
  s_axi_buser(560) <= \<const0>\;
  s_axi_buser(559) <= \<const0>\;
  s_axi_buser(558) <= \<const0>\;
  s_axi_buser(557) <= \<const0>\;
  s_axi_buser(556) <= \<const0>\;
  s_axi_buser(555) <= \<const0>\;
  s_axi_buser(554) <= \<const0>\;
  s_axi_buser(553) <= \<const0>\;
  s_axi_buser(552) <= \<const0>\;
  s_axi_buser(551) <= \<const0>\;
  s_axi_buser(550) <= \<const0>\;
  s_axi_buser(549) <= \<const0>\;
  s_axi_buser(548) <= \<const0>\;
  s_axi_buser(547) <= \<const0>\;
  s_axi_buser(546) <= \<const0>\;
  s_axi_buser(545) <= \<const0>\;
  s_axi_buser(544) <= \<const0>\;
  s_axi_buser(543) <= \<const0>\;
  s_axi_buser(542) <= \<const0>\;
  s_axi_buser(541) <= \<const0>\;
  s_axi_buser(540) <= \<const0>\;
  s_axi_buser(539) <= \<const0>\;
  s_axi_buser(538) <= \<const0>\;
  s_axi_buser(537) <= \<const0>\;
  s_axi_buser(536) <= \<const0>\;
  s_axi_buser(535) <= \<const0>\;
  s_axi_buser(534) <= \<const0>\;
  s_axi_buser(533) <= \<const0>\;
  s_axi_buser(532) <= \<const0>\;
  s_axi_buser(531) <= \<const0>\;
  s_axi_buser(530) <= \<const0>\;
  s_axi_buser(529) <= \<const0>\;
  s_axi_buser(528) <= \<const0>\;
  s_axi_buser(527) <= \<const0>\;
  s_axi_buser(526) <= \<const0>\;
  s_axi_buser(525) <= \<const0>\;
  s_axi_buser(524) <= \<const0>\;
  s_axi_buser(523) <= \<const0>\;
  s_axi_buser(522) <= \<const0>\;
  s_axi_buser(521) <= \<const0>\;
  s_axi_buser(520) <= \<const0>\;
  s_axi_buser(519) <= \<const0>\;
  s_axi_buser(518) <= \<const0>\;
  s_axi_buser(517) <= \<const0>\;
  s_axi_buser(516) <= \<const0>\;
  s_axi_buser(515) <= \<const0>\;
  s_axi_buser(514) <= \<const0>\;
  s_axi_buser(513) <= \<const0>\;
  s_axi_buser(512) <= \<const0>\;
  s_axi_buser(511) <= \<const0>\;
  s_axi_buser(510) <= \<const0>\;
  s_axi_buser(509) <= \<const0>\;
  s_axi_buser(508) <= \<const0>\;
  s_axi_buser(507) <= \<const0>\;
  s_axi_buser(506) <= \<const0>\;
  s_axi_buser(505) <= \<const0>\;
  s_axi_buser(504) <= \<const0>\;
  s_axi_buser(503) <= \<const0>\;
  s_axi_buser(502) <= \<const0>\;
  s_axi_buser(501) <= \<const0>\;
  s_axi_buser(500) <= \<const0>\;
  s_axi_buser(499) <= \<const0>\;
  s_axi_buser(498) <= \<const0>\;
  s_axi_buser(497) <= \<const0>\;
  s_axi_buser(496) <= \<const0>\;
  s_axi_buser(495) <= \<const0>\;
  s_axi_buser(494) <= \<const0>\;
  s_axi_buser(493) <= \<const0>\;
  s_axi_buser(492) <= \<const0>\;
  s_axi_buser(491) <= \<const0>\;
  s_axi_buser(490) <= \<const0>\;
  s_axi_buser(489) <= \<const0>\;
  s_axi_buser(488) <= \<const0>\;
  s_axi_buser(487) <= \<const0>\;
  s_axi_buser(486) <= \<const0>\;
  s_axi_buser(485) <= \<const0>\;
  s_axi_buser(484) <= \<const0>\;
  s_axi_buser(483) <= \<const0>\;
  s_axi_buser(482) <= \<const0>\;
  s_axi_buser(481) <= \<const0>\;
  s_axi_buser(480) <= \<const0>\;
  s_axi_buser(479) <= \<const0>\;
  s_axi_buser(478) <= \<const0>\;
  s_axi_buser(477) <= \<const0>\;
  s_axi_buser(476) <= \<const0>\;
  s_axi_buser(475) <= \<const0>\;
  s_axi_buser(474) <= \<const0>\;
  s_axi_buser(473) <= \<const0>\;
  s_axi_buser(472) <= \<const0>\;
  s_axi_buser(471) <= \<const0>\;
  s_axi_buser(470) <= \<const0>\;
  s_axi_buser(469) <= \<const0>\;
  s_axi_buser(468) <= \<const0>\;
  s_axi_buser(467) <= \<const0>\;
  s_axi_buser(466) <= \<const0>\;
  s_axi_buser(465) <= \<const0>\;
  s_axi_buser(464) <= \<const0>\;
  s_axi_buser(463) <= \<const0>\;
  s_axi_buser(462) <= \<const0>\;
  s_axi_buser(461) <= \<const0>\;
  s_axi_buser(460) <= \<const0>\;
  s_axi_buser(459) <= \<const0>\;
  s_axi_buser(458) <= \<const0>\;
  s_axi_buser(457) <= \<const0>\;
  s_axi_buser(456) <= \<const0>\;
  s_axi_buser(455) <= \<const0>\;
  s_axi_buser(454) <= \<const0>\;
  s_axi_buser(453) <= \<const0>\;
  s_axi_buser(452) <= \<const0>\;
  s_axi_buser(451) <= \<const0>\;
  s_axi_buser(450) <= \<const0>\;
  s_axi_buser(449) <= \<const0>\;
  s_axi_buser(448) <= \<const0>\;
  s_axi_buser(447) <= \<const0>\;
  s_axi_buser(446) <= \<const0>\;
  s_axi_buser(445) <= \<const0>\;
  s_axi_buser(444) <= \<const0>\;
  s_axi_buser(443) <= \<const0>\;
  s_axi_buser(442) <= \<const0>\;
  s_axi_buser(441) <= \<const0>\;
  s_axi_buser(440) <= \<const0>\;
  s_axi_buser(439) <= \<const0>\;
  s_axi_buser(438) <= \<const0>\;
  s_axi_buser(437) <= \<const0>\;
  s_axi_buser(436) <= \<const0>\;
  s_axi_buser(435) <= \<const0>\;
  s_axi_buser(434) <= \<const0>\;
  s_axi_buser(433) <= \<const0>\;
  s_axi_buser(432) <= \<const0>\;
  s_axi_buser(431) <= \<const0>\;
  s_axi_buser(430) <= \<const0>\;
  s_axi_buser(429) <= \<const0>\;
  s_axi_buser(428) <= \<const0>\;
  s_axi_buser(427) <= \<const0>\;
  s_axi_buser(426) <= \<const0>\;
  s_axi_buser(425) <= \<const0>\;
  s_axi_buser(424) <= \<const0>\;
  s_axi_buser(423) <= \<const0>\;
  s_axi_buser(422) <= \<const0>\;
  s_axi_buser(421) <= \<const0>\;
  s_axi_buser(420) <= \<const0>\;
  s_axi_buser(419) <= \<const0>\;
  s_axi_buser(418) <= \<const0>\;
  s_axi_buser(417) <= \<const0>\;
  s_axi_buser(416) <= \<const0>\;
  s_axi_buser(415) <= \<const0>\;
  s_axi_buser(414) <= \<const0>\;
  s_axi_buser(413) <= \<const0>\;
  s_axi_buser(412) <= \<const0>\;
  s_axi_buser(411) <= \<const0>\;
  s_axi_buser(410) <= \<const0>\;
  s_axi_buser(409) <= \<const0>\;
  s_axi_buser(408) <= \<const0>\;
  s_axi_buser(407) <= \<const0>\;
  s_axi_buser(406) <= \<const0>\;
  s_axi_buser(405) <= \<const0>\;
  s_axi_buser(404) <= \<const0>\;
  s_axi_buser(403) <= \<const0>\;
  s_axi_buser(402) <= \<const0>\;
  s_axi_buser(401) <= \<const0>\;
  s_axi_buser(400) <= \<const0>\;
  s_axi_buser(399) <= \<const0>\;
  s_axi_buser(398) <= \<const0>\;
  s_axi_buser(397) <= \<const0>\;
  s_axi_buser(396) <= \<const0>\;
  s_axi_buser(395) <= \<const0>\;
  s_axi_buser(394) <= \<const0>\;
  s_axi_buser(393) <= \<const0>\;
  s_axi_buser(392) <= \<const0>\;
  s_axi_buser(391) <= \<const0>\;
  s_axi_buser(390) <= \<const0>\;
  s_axi_buser(389) <= \<const0>\;
  s_axi_buser(388) <= \<const0>\;
  s_axi_buser(387) <= \<const0>\;
  s_axi_buser(386) <= \<const0>\;
  s_axi_buser(385) <= \<const0>\;
  s_axi_buser(384) <= \<const0>\;
  s_axi_buser(383) <= \<const0>\;
  s_axi_buser(382) <= \<const0>\;
  s_axi_buser(381) <= \<const0>\;
  s_axi_buser(380) <= \<const0>\;
  s_axi_buser(379) <= \<const0>\;
  s_axi_buser(378) <= \<const0>\;
  s_axi_buser(377) <= \<const0>\;
  s_axi_buser(376) <= \<const0>\;
  s_axi_buser(375) <= \<const0>\;
  s_axi_buser(374) <= \<const0>\;
  s_axi_buser(373) <= \<const0>\;
  s_axi_buser(372) <= \<const0>\;
  s_axi_buser(371) <= \<const0>\;
  s_axi_buser(370) <= \<const0>\;
  s_axi_buser(369) <= \<const0>\;
  s_axi_buser(368) <= \<const0>\;
  s_axi_buser(367) <= \<const0>\;
  s_axi_buser(366) <= \<const0>\;
  s_axi_buser(365) <= \<const0>\;
  s_axi_buser(364) <= \<const0>\;
  s_axi_buser(363) <= \<const0>\;
  s_axi_buser(362) <= \<const0>\;
  s_axi_buser(361) <= \<const0>\;
  s_axi_buser(360) <= \<const0>\;
  s_axi_buser(359) <= \<const0>\;
  s_axi_buser(358) <= \<const0>\;
  s_axi_buser(357) <= \<const0>\;
  s_axi_buser(356) <= \<const0>\;
  s_axi_buser(355) <= \<const0>\;
  s_axi_buser(354) <= \<const0>\;
  s_axi_buser(353) <= \<const0>\;
  s_axi_buser(352) <= \<const0>\;
  s_axi_buser(351) <= \<const0>\;
  s_axi_buser(350) <= \<const0>\;
  s_axi_buser(349) <= \<const0>\;
  s_axi_buser(348) <= \<const0>\;
  s_axi_buser(347) <= \<const0>\;
  s_axi_buser(346) <= \<const0>\;
  s_axi_buser(345) <= \<const0>\;
  s_axi_buser(344) <= \<const0>\;
  s_axi_buser(343) <= \<const0>\;
  s_axi_buser(342) <= \<const0>\;
  s_axi_buser(341) <= \<const0>\;
  s_axi_buser(340) <= \<const0>\;
  s_axi_buser(339) <= \<const0>\;
  s_axi_buser(338) <= \<const0>\;
  s_axi_buser(337) <= \<const0>\;
  s_axi_buser(336) <= \<const0>\;
  s_axi_buser(335) <= \<const0>\;
  s_axi_buser(334) <= \<const0>\;
  s_axi_buser(333) <= \<const0>\;
  s_axi_buser(332) <= \<const0>\;
  s_axi_buser(331) <= \<const0>\;
  s_axi_buser(330) <= \<const0>\;
  s_axi_buser(329) <= \<const0>\;
  s_axi_buser(328) <= \<const0>\;
  s_axi_buser(327) <= \<const0>\;
  s_axi_buser(326) <= \<const0>\;
  s_axi_buser(325) <= \<const0>\;
  s_axi_buser(324) <= \<const0>\;
  s_axi_buser(323) <= \<const0>\;
  s_axi_buser(322) <= \<const0>\;
  s_axi_buser(321) <= \<const0>\;
  s_axi_buser(320) <= \<const0>\;
  s_axi_buser(319) <= \<const0>\;
  s_axi_buser(318) <= \<const0>\;
  s_axi_buser(317) <= \<const0>\;
  s_axi_buser(316) <= \<const0>\;
  s_axi_buser(315) <= \<const0>\;
  s_axi_buser(314) <= \<const0>\;
  s_axi_buser(313) <= \<const0>\;
  s_axi_buser(312) <= \<const0>\;
  s_axi_buser(311) <= \<const0>\;
  s_axi_buser(310) <= \<const0>\;
  s_axi_buser(309) <= \<const0>\;
  s_axi_buser(308) <= \<const0>\;
  s_axi_buser(307) <= \<const0>\;
  s_axi_buser(306) <= \<const0>\;
  s_axi_buser(305) <= \<const0>\;
  s_axi_buser(304) <= \<const0>\;
  s_axi_buser(303) <= \<const0>\;
  s_axi_buser(302) <= \<const0>\;
  s_axi_buser(301) <= \<const0>\;
  s_axi_buser(300) <= \<const0>\;
  s_axi_buser(299) <= \<const0>\;
  s_axi_buser(298) <= \<const0>\;
  s_axi_buser(297) <= \<const0>\;
  s_axi_buser(296) <= \<const0>\;
  s_axi_buser(295) <= \<const0>\;
  s_axi_buser(294) <= \<const0>\;
  s_axi_buser(293) <= \<const0>\;
  s_axi_buser(292) <= \<const0>\;
  s_axi_buser(291) <= \<const0>\;
  s_axi_buser(290) <= \<const0>\;
  s_axi_buser(289) <= \<const0>\;
  s_axi_buser(288) <= \<const0>\;
  s_axi_buser(287) <= \<const0>\;
  s_axi_buser(286) <= \<const0>\;
  s_axi_buser(285) <= \<const0>\;
  s_axi_buser(284) <= \<const0>\;
  s_axi_buser(283) <= \<const0>\;
  s_axi_buser(282) <= \<const0>\;
  s_axi_buser(281) <= \<const0>\;
  s_axi_buser(280) <= \<const0>\;
  s_axi_buser(279) <= \<const0>\;
  s_axi_buser(278) <= \<const0>\;
  s_axi_buser(277) <= \<const0>\;
  s_axi_buser(276) <= \<const0>\;
  s_axi_buser(275) <= \<const0>\;
  s_axi_buser(274) <= \<const0>\;
  s_axi_buser(273) <= \<const0>\;
  s_axi_buser(272) <= \<const0>\;
  s_axi_buser(271) <= \<const0>\;
  s_axi_buser(270) <= \<const0>\;
  s_axi_buser(269) <= \<const0>\;
  s_axi_buser(268) <= \<const0>\;
  s_axi_buser(267) <= \<const0>\;
  s_axi_buser(266) <= \<const0>\;
  s_axi_buser(265) <= \<const0>\;
  s_axi_buser(264) <= \<const0>\;
  s_axi_buser(263) <= \<const0>\;
  s_axi_buser(262) <= \<const0>\;
  s_axi_buser(261) <= \<const0>\;
  s_axi_buser(260) <= \<const0>\;
  s_axi_buser(259) <= \<const0>\;
  s_axi_buser(258) <= \<const0>\;
  s_axi_buser(257) <= \<const0>\;
  s_axi_buser(256) <= \<const0>\;
  s_axi_buser(255) <= \<const0>\;
  s_axi_buser(254) <= \<const0>\;
  s_axi_buser(253) <= \<const0>\;
  s_axi_buser(252) <= \<const0>\;
  s_axi_buser(251) <= \<const0>\;
  s_axi_buser(250) <= \<const0>\;
  s_axi_buser(249) <= \<const0>\;
  s_axi_buser(248) <= \<const0>\;
  s_axi_buser(247) <= \<const0>\;
  s_axi_buser(246) <= \<const0>\;
  s_axi_buser(245) <= \<const0>\;
  s_axi_buser(244) <= \<const0>\;
  s_axi_buser(243) <= \<const0>\;
  s_axi_buser(242) <= \<const0>\;
  s_axi_buser(241) <= \<const0>\;
  s_axi_buser(240) <= \<const0>\;
  s_axi_buser(239) <= \<const0>\;
  s_axi_buser(238) <= \<const0>\;
  s_axi_buser(237) <= \<const0>\;
  s_axi_buser(236) <= \<const0>\;
  s_axi_buser(235) <= \<const0>\;
  s_axi_buser(234) <= \<const0>\;
  s_axi_buser(233) <= \<const0>\;
  s_axi_buser(232) <= \<const0>\;
  s_axi_buser(231) <= \<const0>\;
  s_axi_buser(230) <= \<const0>\;
  s_axi_buser(229) <= \<const0>\;
  s_axi_buser(228) <= \<const0>\;
  s_axi_buser(227) <= \<const0>\;
  s_axi_buser(226) <= \<const0>\;
  s_axi_buser(225) <= \<const0>\;
  s_axi_buser(224) <= \<const0>\;
  s_axi_buser(223) <= \<const0>\;
  s_axi_buser(222) <= \<const0>\;
  s_axi_buser(221) <= \<const0>\;
  s_axi_buser(220) <= \<const0>\;
  s_axi_buser(219) <= \<const0>\;
  s_axi_buser(218) <= \<const0>\;
  s_axi_buser(217) <= \<const0>\;
  s_axi_buser(216) <= \<const0>\;
  s_axi_buser(215) <= \<const0>\;
  s_axi_buser(214) <= \<const0>\;
  s_axi_buser(213) <= \<const0>\;
  s_axi_buser(212) <= \<const0>\;
  s_axi_buser(211) <= \<const0>\;
  s_axi_buser(210) <= \<const0>\;
  s_axi_buser(209) <= \<const0>\;
  s_axi_buser(208) <= \<const0>\;
  s_axi_buser(207) <= \<const0>\;
  s_axi_buser(206) <= \<const0>\;
  s_axi_buser(205) <= \<const0>\;
  s_axi_buser(204) <= \<const0>\;
  s_axi_buser(203) <= \<const0>\;
  s_axi_buser(202) <= \<const0>\;
  s_axi_buser(201) <= \<const0>\;
  s_axi_buser(200) <= \<const0>\;
  s_axi_buser(199) <= \<const0>\;
  s_axi_buser(198) <= \<const0>\;
  s_axi_buser(197) <= \<const0>\;
  s_axi_buser(196) <= \<const0>\;
  s_axi_buser(195) <= \<const0>\;
  s_axi_buser(194) <= \<const0>\;
  s_axi_buser(193) <= \<const0>\;
  s_axi_buser(192) <= \<const0>\;
  s_axi_buser(191) <= \<const0>\;
  s_axi_buser(190) <= \<const0>\;
  s_axi_buser(189) <= \<const0>\;
  s_axi_buser(188) <= \<const0>\;
  s_axi_buser(187) <= \<const0>\;
  s_axi_buser(186) <= \<const0>\;
  s_axi_buser(185) <= \<const0>\;
  s_axi_buser(184) <= \<const0>\;
  s_axi_buser(183) <= \<const0>\;
  s_axi_buser(182) <= \<const0>\;
  s_axi_buser(181) <= \<const0>\;
  s_axi_buser(180) <= \<const0>\;
  s_axi_buser(179) <= \<const0>\;
  s_axi_buser(178) <= \<const0>\;
  s_axi_buser(177) <= \<const0>\;
  s_axi_buser(176) <= \<const0>\;
  s_axi_buser(175) <= \<const0>\;
  s_axi_buser(174) <= \<const0>\;
  s_axi_buser(173) <= \<const0>\;
  s_axi_buser(172) <= \<const0>\;
  s_axi_buser(171) <= \<const0>\;
  s_axi_buser(170) <= \<const0>\;
  s_axi_buser(169) <= \<const0>\;
  s_axi_buser(168) <= \<const0>\;
  s_axi_buser(167) <= \<const0>\;
  s_axi_buser(166) <= \<const0>\;
  s_axi_buser(165) <= \<const0>\;
  s_axi_buser(164) <= \<const0>\;
  s_axi_buser(163) <= \<const0>\;
  s_axi_buser(162) <= \<const0>\;
  s_axi_buser(161) <= \<const0>\;
  s_axi_buser(160) <= \<const0>\;
  s_axi_buser(159) <= \<const0>\;
  s_axi_buser(158) <= \<const0>\;
  s_axi_buser(157) <= \<const0>\;
  s_axi_buser(156) <= \<const0>\;
  s_axi_buser(155) <= \<const0>\;
  s_axi_buser(154) <= \<const0>\;
  s_axi_buser(153) <= \<const0>\;
  s_axi_buser(152) <= \<const0>\;
  s_axi_buser(151) <= \<const0>\;
  s_axi_buser(150) <= \<const0>\;
  s_axi_buser(149) <= \<const0>\;
  s_axi_buser(148) <= \<const0>\;
  s_axi_buser(147) <= \<const0>\;
  s_axi_buser(146) <= \<const0>\;
  s_axi_buser(145) <= \<const0>\;
  s_axi_buser(144) <= \<const0>\;
  s_axi_buser(143) <= \<const0>\;
  s_axi_buser(142) <= \<const0>\;
  s_axi_buser(141) <= \<const0>\;
  s_axi_buser(140) <= \<const0>\;
  s_axi_buser(139) <= \<const0>\;
  s_axi_buser(138) <= \<const0>\;
  s_axi_buser(137) <= \<const0>\;
  s_axi_buser(136) <= \<const0>\;
  s_axi_buser(135) <= \<const0>\;
  s_axi_buser(134) <= \<const0>\;
  s_axi_buser(133) <= \<const0>\;
  s_axi_buser(132) <= \<const0>\;
  s_axi_buser(131) <= \<const0>\;
  s_axi_buser(130) <= \<const0>\;
  s_axi_buser(129) <= \<const0>\;
  s_axi_buser(128) <= \<const0>\;
  s_axi_buser(127) <= \<const0>\;
  s_axi_buser(126) <= \<const0>\;
  s_axi_buser(125) <= \<const0>\;
  s_axi_buser(124) <= \<const0>\;
  s_axi_buser(123) <= \<const0>\;
  s_axi_buser(122) <= \<const0>\;
  s_axi_buser(121) <= \<const0>\;
  s_axi_buser(120) <= \<const0>\;
  s_axi_buser(119) <= \<const0>\;
  s_axi_buser(118) <= \<const0>\;
  s_axi_buser(117) <= \<const0>\;
  s_axi_buser(116) <= \<const0>\;
  s_axi_buser(115) <= \<const0>\;
  s_axi_buser(114) <= \<const0>\;
  s_axi_buser(113) <= \<const0>\;
  s_axi_buser(112) <= \<const0>\;
  s_axi_buser(111) <= \<const0>\;
  s_axi_buser(110) <= \<const0>\;
  s_axi_buser(109) <= \<const0>\;
  s_axi_buser(108) <= \<const0>\;
  s_axi_buser(107) <= \<const0>\;
  s_axi_buser(106) <= \<const0>\;
  s_axi_buser(105) <= \<const0>\;
  s_axi_buser(104) <= \<const0>\;
  s_axi_buser(103) <= \<const0>\;
  s_axi_buser(102) <= \<const0>\;
  s_axi_buser(101) <= \<const0>\;
  s_axi_buser(100) <= \<const0>\;
  s_axi_buser(99) <= \<const0>\;
  s_axi_buser(98) <= \<const0>\;
  s_axi_buser(97) <= \<const0>\;
  s_axi_buser(96) <= \<const0>\;
  s_axi_buser(95) <= \<const0>\;
  s_axi_buser(94) <= \<const0>\;
  s_axi_buser(93) <= \<const0>\;
  s_axi_buser(92) <= \<const0>\;
  s_axi_buser(91) <= \<const0>\;
  s_axi_buser(90) <= \<const0>\;
  s_axi_buser(89) <= \<const0>\;
  s_axi_buser(88) <= \<const0>\;
  s_axi_buser(87) <= \<const0>\;
  s_axi_buser(86) <= \<const0>\;
  s_axi_buser(85) <= \<const0>\;
  s_axi_buser(84) <= \<const0>\;
  s_axi_buser(83) <= \<const0>\;
  s_axi_buser(82) <= \<const0>\;
  s_axi_buser(81) <= \<const0>\;
  s_axi_buser(80) <= \<const0>\;
  s_axi_buser(79) <= \<const0>\;
  s_axi_buser(78) <= \<const0>\;
  s_axi_buser(77) <= \<const0>\;
  s_axi_buser(76) <= \<const0>\;
  s_axi_buser(75) <= \<const0>\;
  s_axi_buser(74) <= \<const0>\;
  s_axi_buser(73) <= \<const0>\;
  s_axi_buser(72) <= \<const0>\;
  s_axi_buser(71) <= \<const0>\;
  s_axi_buser(70) <= \<const0>\;
  s_axi_buser(69) <= \<const0>\;
  s_axi_buser(68) <= \<const0>\;
  s_axi_buser(67) <= \<const0>\;
  s_axi_buser(66) <= \<const0>\;
  s_axi_buser(65) <= \<const0>\;
  s_axi_buser(64) <= \<const0>\;
  s_axi_buser(63) <= \<const0>\;
  s_axi_buser(62) <= \<const0>\;
  s_axi_buser(61) <= \<const0>\;
  s_axi_buser(60) <= \<const0>\;
  s_axi_buser(59) <= \<const0>\;
  s_axi_buser(58) <= \<const0>\;
  s_axi_buser(57) <= \<const0>\;
  s_axi_buser(56) <= \<const0>\;
  s_axi_buser(55) <= \<const0>\;
  s_axi_buser(54) <= \<const0>\;
  s_axi_buser(53) <= \<const0>\;
  s_axi_buser(52) <= \<const0>\;
  s_axi_buser(51) <= \<const0>\;
  s_axi_buser(50) <= \<const0>\;
  s_axi_buser(49) <= \<const0>\;
  s_axi_buser(48) <= \<const0>\;
  s_axi_buser(47) <= \<const0>\;
  s_axi_buser(46) <= \<const0>\;
  s_axi_buser(45) <= \<const0>\;
  s_axi_buser(44) <= \<const0>\;
  s_axi_buser(43) <= \<const0>\;
  s_axi_buser(42) <= \<const0>\;
  s_axi_buser(41) <= \<const0>\;
  s_axi_buser(40) <= \<const0>\;
  s_axi_buser(39) <= \<const0>\;
  s_axi_buser(38) <= \<const0>\;
  s_axi_buser(37) <= \<const0>\;
  s_axi_buser(36) <= \<const0>\;
  s_axi_buser(35) <= \<const0>\;
  s_axi_buser(34) <= \<const0>\;
  s_axi_buser(33) <= \<const0>\;
  s_axi_buser(32) <= \<const0>\;
  s_axi_buser(31) <= \<const0>\;
  s_axi_buser(30) <= \<const0>\;
  s_axi_buser(29) <= \<const0>\;
  s_axi_buser(28) <= \<const0>\;
  s_axi_buser(27) <= \<const0>\;
  s_axi_buser(26) <= \<const0>\;
  s_axi_buser(25) <= \<const0>\;
  s_axi_buser(24) <= \<const0>\;
  s_axi_buser(23) <= \<const0>\;
  s_axi_buser(22) <= \<const0>\;
  s_axi_buser(21) <= \<const0>\;
  s_axi_buser(20) <= \<const0>\;
  s_axi_buser(19) <= \<const0>\;
  s_axi_buser(18) <= \<const0>\;
  s_axi_buser(17) <= \<const0>\;
  s_axi_buser(16) <= \<const0>\;
  s_axi_buser(15) <= \<const0>\;
  s_axi_buser(14) <= \<const0>\;
  s_axi_buser(13) <= \<const0>\;
  s_axi_buser(12) <= \<const0>\;
  s_axi_buser(11) <= \<const0>\;
  s_axi_buser(10) <= \<const0>\;
  s_axi_buser(9) <= \<const0>\;
  s_axi_buser(8) <= \<const0>\;
  s_axi_buser(7) <= \<const0>\;
  s_axi_buser(6) <= \<const0>\;
  s_axi_buser(5) <= \<const0>\;
  s_axi_buser(4) <= \<const0>\;
  s_axi_buser(3) <= \<const0>\;
  s_axi_buser(2) <= \<const0>\;
  s_axi_buser(1) <= \<const0>\;
  s_axi_buser(0) <= \<const0>\;
  s_axi_bvalid <= \<const0>\;
  s_axi_rdata(31) <= \<const0>\;
  s_axi_rdata(30) <= \<const0>\;
  s_axi_rdata(29) <= \<const0>\;
  s_axi_rdata(28) <= \<const0>\;
  s_axi_rdata(27) <= \<const0>\;
  s_axi_rdata(26) <= \<const0>\;
  s_axi_rdata(25) <= \<const0>\;
  s_axi_rdata(24) <= \<const0>\;
  s_axi_rdata(23) <= \<const0>\;
  s_axi_rdata(22) <= \<const0>\;
  s_axi_rdata(21) <= \<const0>\;
  s_axi_rdata(20) <= \<const0>\;
  s_axi_rdata(19) <= \<const0>\;
  s_axi_rdata(18) <= \<const0>\;
  s_axi_rdata(17) <= \<const0>\;
  s_axi_rdata(16) <= \<const0>\;
  s_axi_rdata(15) <= \<const0>\;
  s_axi_rdata(14) <= \<const0>\;
  s_axi_rdata(13) <= \<const0>\;
  s_axi_rdata(12) <= \<const0>\;
  s_axi_rdata(11) <= \<const0>\;
  s_axi_rdata(10) <= \<const0>\;
  s_axi_rdata(9) <= \<const0>\;
  s_axi_rdata(8) <= \<const0>\;
  s_axi_rdata(7) <= \<const0>\;
  s_axi_rdata(6) <= \<const0>\;
  s_axi_rdata(5) <= \<const0>\;
  s_axi_rdata(4) <= \<const0>\;
  s_axi_rdata(3) <= \<const0>\;
  s_axi_rdata(2) <= \<const0>\;
  s_axi_rdata(1) <= \<const0>\;
  s_axi_rdata(0) <= \<const0>\;
  s_axi_rlast <= \<const0>\;
  s_axi_rresp(1) <= \<const0>\;
  s_axi_rresp(0) <= \<const0>\;
  s_axi_ruser(1023) <= \<const0>\;
  s_axi_ruser(1022) <= \<const0>\;
  s_axi_ruser(1021) <= \<const0>\;
  s_axi_ruser(1020) <= \<const0>\;
  s_axi_ruser(1019) <= \<const0>\;
  s_axi_ruser(1018) <= \<const0>\;
  s_axi_ruser(1017) <= \<const0>\;
  s_axi_ruser(1016) <= \<const0>\;
  s_axi_ruser(1015) <= \<const0>\;
  s_axi_ruser(1014) <= \<const0>\;
  s_axi_ruser(1013) <= \<const0>\;
  s_axi_ruser(1012) <= \<const0>\;
  s_axi_ruser(1011) <= \<const0>\;
  s_axi_ruser(1010) <= \<const0>\;
  s_axi_ruser(1009) <= \<const0>\;
  s_axi_ruser(1008) <= \<const0>\;
  s_axi_ruser(1007) <= \<const0>\;
  s_axi_ruser(1006) <= \<const0>\;
  s_axi_ruser(1005) <= \<const0>\;
  s_axi_ruser(1004) <= \<const0>\;
  s_axi_ruser(1003) <= \<const0>\;
  s_axi_ruser(1002) <= \<const0>\;
  s_axi_ruser(1001) <= \<const0>\;
  s_axi_ruser(1000) <= \<const0>\;
  s_axi_ruser(999) <= \<const0>\;
  s_axi_ruser(998) <= \<const0>\;
  s_axi_ruser(997) <= \<const0>\;
  s_axi_ruser(996) <= \<const0>\;
  s_axi_ruser(995) <= \<const0>\;
  s_axi_ruser(994) <= \<const0>\;
  s_axi_ruser(993) <= \<const0>\;
  s_axi_ruser(992) <= \<const0>\;
  s_axi_ruser(991) <= \<const0>\;
  s_axi_ruser(990) <= \<const0>\;
  s_axi_ruser(989) <= \<const0>\;
  s_axi_ruser(988) <= \<const0>\;
  s_axi_ruser(987) <= \<const0>\;
  s_axi_ruser(986) <= \<const0>\;
  s_axi_ruser(985) <= \<const0>\;
  s_axi_ruser(984) <= \<const0>\;
  s_axi_ruser(983) <= \<const0>\;
  s_axi_ruser(982) <= \<const0>\;
  s_axi_ruser(981) <= \<const0>\;
  s_axi_ruser(980) <= \<const0>\;
  s_axi_ruser(979) <= \<const0>\;
  s_axi_ruser(978) <= \<const0>\;
  s_axi_ruser(977) <= \<const0>\;
  s_axi_ruser(976) <= \<const0>\;
  s_axi_ruser(975) <= \<const0>\;
  s_axi_ruser(974) <= \<const0>\;
  s_axi_ruser(973) <= \<const0>\;
  s_axi_ruser(972) <= \<const0>\;
  s_axi_ruser(971) <= \<const0>\;
  s_axi_ruser(970) <= \<const0>\;
  s_axi_ruser(969) <= \<const0>\;
  s_axi_ruser(968) <= \<const0>\;
  s_axi_ruser(967) <= \<const0>\;
  s_axi_ruser(966) <= \<const0>\;
  s_axi_ruser(965) <= \<const0>\;
  s_axi_ruser(964) <= \<const0>\;
  s_axi_ruser(963) <= \<const0>\;
  s_axi_ruser(962) <= \<const0>\;
  s_axi_ruser(961) <= \<const0>\;
  s_axi_ruser(960) <= \<const0>\;
  s_axi_ruser(959) <= \<const0>\;
  s_axi_ruser(958) <= \<const0>\;
  s_axi_ruser(957) <= \<const0>\;
  s_axi_ruser(956) <= \<const0>\;
  s_axi_ruser(955) <= \<const0>\;
  s_axi_ruser(954) <= \<const0>\;
  s_axi_ruser(953) <= \<const0>\;
  s_axi_ruser(952) <= \<const0>\;
  s_axi_ruser(951) <= \<const0>\;
  s_axi_ruser(950) <= \<const0>\;
  s_axi_ruser(949) <= \<const0>\;
  s_axi_ruser(948) <= \<const0>\;
  s_axi_ruser(947) <= \<const0>\;
  s_axi_ruser(946) <= \<const0>\;
  s_axi_ruser(945) <= \<const0>\;
  s_axi_ruser(944) <= \<const0>\;
  s_axi_ruser(943) <= \<const0>\;
  s_axi_ruser(942) <= \<const0>\;
  s_axi_ruser(941) <= \<const0>\;
  s_axi_ruser(940) <= \<const0>\;
  s_axi_ruser(939) <= \<const0>\;
  s_axi_ruser(938) <= \<const0>\;
  s_axi_ruser(937) <= \<const0>\;
  s_axi_ruser(936) <= \<const0>\;
  s_axi_ruser(935) <= \<const0>\;
  s_axi_ruser(934) <= \<const0>\;
  s_axi_ruser(933) <= \<const0>\;
  s_axi_ruser(932) <= \<const0>\;
  s_axi_ruser(931) <= \<const0>\;
  s_axi_ruser(930) <= \<const0>\;
  s_axi_ruser(929) <= \<const0>\;
  s_axi_ruser(928) <= \<const0>\;
  s_axi_ruser(927) <= \<const0>\;
  s_axi_ruser(926) <= \<const0>\;
  s_axi_ruser(925) <= \<const0>\;
  s_axi_ruser(924) <= \<const0>\;
  s_axi_ruser(923) <= \<const0>\;
  s_axi_ruser(922) <= \<const0>\;
  s_axi_ruser(921) <= \<const0>\;
  s_axi_ruser(920) <= \<const0>\;
  s_axi_ruser(919) <= \<const0>\;
  s_axi_ruser(918) <= \<const0>\;
  s_axi_ruser(917) <= \<const0>\;
  s_axi_ruser(916) <= \<const0>\;
  s_axi_ruser(915) <= \<const0>\;
  s_axi_ruser(914) <= \<const0>\;
  s_axi_ruser(913) <= \<const0>\;
  s_axi_ruser(912) <= \<const0>\;
  s_axi_ruser(911) <= \<const0>\;
  s_axi_ruser(910) <= \<const0>\;
  s_axi_ruser(909) <= \<const0>\;
  s_axi_ruser(908) <= \<const0>\;
  s_axi_ruser(907) <= \<const0>\;
  s_axi_ruser(906) <= \<const0>\;
  s_axi_ruser(905) <= \<const0>\;
  s_axi_ruser(904) <= \<const0>\;
  s_axi_ruser(903) <= \<const0>\;
  s_axi_ruser(902) <= \<const0>\;
  s_axi_ruser(901) <= \<const0>\;
  s_axi_ruser(900) <= \<const0>\;
  s_axi_ruser(899) <= \<const0>\;
  s_axi_ruser(898) <= \<const0>\;
  s_axi_ruser(897) <= \<const0>\;
  s_axi_ruser(896) <= \<const0>\;
  s_axi_ruser(895) <= \<const0>\;
  s_axi_ruser(894) <= \<const0>\;
  s_axi_ruser(893) <= \<const0>\;
  s_axi_ruser(892) <= \<const0>\;
  s_axi_ruser(891) <= \<const0>\;
  s_axi_ruser(890) <= \<const0>\;
  s_axi_ruser(889) <= \<const0>\;
  s_axi_ruser(888) <= \<const0>\;
  s_axi_ruser(887) <= \<const0>\;
  s_axi_ruser(886) <= \<const0>\;
  s_axi_ruser(885) <= \<const0>\;
  s_axi_ruser(884) <= \<const0>\;
  s_axi_ruser(883) <= \<const0>\;
  s_axi_ruser(882) <= \<const0>\;
  s_axi_ruser(881) <= \<const0>\;
  s_axi_ruser(880) <= \<const0>\;
  s_axi_ruser(879) <= \<const0>\;
  s_axi_ruser(878) <= \<const0>\;
  s_axi_ruser(877) <= \<const0>\;
  s_axi_ruser(876) <= \<const0>\;
  s_axi_ruser(875) <= \<const0>\;
  s_axi_ruser(874) <= \<const0>\;
  s_axi_ruser(873) <= \<const0>\;
  s_axi_ruser(872) <= \<const0>\;
  s_axi_ruser(871) <= \<const0>\;
  s_axi_ruser(870) <= \<const0>\;
  s_axi_ruser(869) <= \<const0>\;
  s_axi_ruser(868) <= \<const0>\;
  s_axi_ruser(867) <= \<const0>\;
  s_axi_ruser(866) <= \<const0>\;
  s_axi_ruser(865) <= \<const0>\;
  s_axi_ruser(864) <= \<const0>\;
  s_axi_ruser(863) <= \<const0>\;
  s_axi_ruser(862) <= \<const0>\;
  s_axi_ruser(861) <= \<const0>\;
  s_axi_ruser(860) <= \<const0>\;
  s_axi_ruser(859) <= \<const0>\;
  s_axi_ruser(858) <= \<const0>\;
  s_axi_ruser(857) <= \<const0>\;
  s_axi_ruser(856) <= \<const0>\;
  s_axi_ruser(855) <= \<const0>\;
  s_axi_ruser(854) <= \<const0>\;
  s_axi_ruser(853) <= \<const0>\;
  s_axi_ruser(852) <= \<const0>\;
  s_axi_ruser(851) <= \<const0>\;
  s_axi_ruser(850) <= \<const0>\;
  s_axi_ruser(849) <= \<const0>\;
  s_axi_ruser(848) <= \<const0>\;
  s_axi_ruser(847) <= \<const0>\;
  s_axi_ruser(846) <= \<const0>\;
  s_axi_ruser(845) <= \<const0>\;
  s_axi_ruser(844) <= \<const0>\;
  s_axi_ruser(843) <= \<const0>\;
  s_axi_ruser(842) <= \<const0>\;
  s_axi_ruser(841) <= \<const0>\;
  s_axi_ruser(840) <= \<const0>\;
  s_axi_ruser(839) <= \<const0>\;
  s_axi_ruser(838) <= \<const0>\;
  s_axi_ruser(837) <= \<const0>\;
  s_axi_ruser(836) <= \<const0>\;
  s_axi_ruser(835) <= \<const0>\;
  s_axi_ruser(834) <= \<const0>\;
  s_axi_ruser(833) <= \<const0>\;
  s_axi_ruser(832) <= \<const0>\;
  s_axi_ruser(831) <= \<const0>\;
  s_axi_ruser(830) <= \<const0>\;
  s_axi_ruser(829) <= \<const0>\;
  s_axi_ruser(828) <= \<const0>\;
  s_axi_ruser(827) <= \<const0>\;
  s_axi_ruser(826) <= \<const0>\;
  s_axi_ruser(825) <= \<const0>\;
  s_axi_ruser(824) <= \<const0>\;
  s_axi_ruser(823) <= \<const0>\;
  s_axi_ruser(822) <= \<const0>\;
  s_axi_ruser(821) <= \<const0>\;
  s_axi_ruser(820) <= \<const0>\;
  s_axi_ruser(819) <= \<const0>\;
  s_axi_ruser(818) <= \<const0>\;
  s_axi_ruser(817) <= \<const0>\;
  s_axi_ruser(816) <= \<const0>\;
  s_axi_ruser(815) <= \<const0>\;
  s_axi_ruser(814) <= \<const0>\;
  s_axi_ruser(813) <= \<const0>\;
  s_axi_ruser(812) <= \<const0>\;
  s_axi_ruser(811) <= \<const0>\;
  s_axi_ruser(810) <= \<const0>\;
  s_axi_ruser(809) <= \<const0>\;
  s_axi_ruser(808) <= \<const0>\;
  s_axi_ruser(807) <= \<const0>\;
  s_axi_ruser(806) <= \<const0>\;
  s_axi_ruser(805) <= \<const0>\;
  s_axi_ruser(804) <= \<const0>\;
  s_axi_ruser(803) <= \<const0>\;
  s_axi_ruser(802) <= \<const0>\;
  s_axi_ruser(801) <= \<const0>\;
  s_axi_ruser(800) <= \<const0>\;
  s_axi_ruser(799) <= \<const0>\;
  s_axi_ruser(798) <= \<const0>\;
  s_axi_ruser(797) <= \<const0>\;
  s_axi_ruser(796) <= \<const0>\;
  s_axi_ruser(795) <= \<const0>\;
  s_axi_ruser(794) <= \<const0>\;
  s_axi_ruser(793) <= \<const0>\;
  s_axi_ruser(792) <= \<const0>\;
  s_axi_ruser(791) <= \<const0>\;
  s_axi_ruser(790) <= \<const0>\;
  s_axi_ruser(789) <= \<const0>\;
  s_axi_ruser(788) <= \<const0>\;
  s_axi_ruser(787) <= \<const0>\;
  s_axi_ruser(786) <= \<const0>\;
  s_axi_ruser(785) <= \<const0>\;
  s_axi_ruser(784) <= \<const0>\;
  s_axi_ruser(783) <= \<const0>\;
  s_axi_ruser(782) <= \<const0>\;
  s_axi_ruser(781) <= \<const0>\;
  s_axi_ruser(780) <= \<const0>\;
  s_axi_ruser(779) <= \<const0>\;
  s_axi_ruser(778) <= \<const0>\;
  s_axi_ruser(777) <= \<const0>\;
  s_axi_ruser(776) <= \<const0>\;
  s_axi_ruser(775) <= \<const0>\;
  s_axi_ruser(774) <= \<const0>\;
  s_axi_ruser(773) <= \<const0>\;
  s_axi_ruser(772) <= \<const0>\;
  s_axi_ruser(771) <= \<const0>\;
  s_axi_ruser(770) <= \<const0>\;
  s_axi_ruser(769) <= \<const0>\;
  s_axi_ruser(768) <= \<const0>\;
  s_axi_ruser(767) <= \<const0>\;
  s_axi_ruser(766) <= \<const0>\;
  s_axi_ruser(765) <= \<const0>\;
  s_axi_ruser(764) <= \<const0>\;
  s_axi_ruser(763) <= \<const0>\;
  s_axi_ruser(762) <= \<const0>\;
  s_axi_ruser(761) <= \<const0>\;
  s_axi_ruser(760) <= \<const0>\;
  s_axi_ruser(759) <= \<const0>\;
  s_axi_ruser(758) <= \<const0>\;
  s_axi_ruser(757) <= \<const0>\;
  s_axi_ruser(756) <= \<const0>\;
  s_axi_ruser(755) <= \<const0>\;
  s_axi_ruser(754) <= \<const0>\;
  s_axi_ruser(753) <= \<const0>\;
  s_axi_ruser(752) <= \<const0>\;
  s_axi_ruser(751) <= \<const0>\;
  s_axi_ruser(750) <= \<const0>\;
  s_axi_ruser(749) <= \<const0>\;
  s_axi_ruser(748) <= \<const0>\;
  s_axi_ruser(747) <= \<const0>\;
  s_axi_ruser(746) <= \<const0>\;
  s_axi_ruser(745) <= \<const0>\;
  s_axi_ruser(744) <= \<const0>\;
  s_axi_ruser(743) <= \<const0>\;
  s_axi_ruser(742) <= \<const0>\;
  s_axi_ruser(741) <= \<const0>\;
  s_axi_ruser(740) <= \<const0>\;
  s_axi_ruser(739) <= \<const0>\;
  s_axi_ruser(738) <= \<const0>\;
  s_axi_ruser(737) <= \<const0>\;
  s_axi_ruser(736) <= \<const0>\;
  s_axi_ruser(735) <= \<const0>\;
  s_axi_ruser(734) <= \<const0>\;
  s_axi_ruser(733) <= \<const0>\;
  s_axi_ruser(732) <= \<const0>\;
  s_axi_ruser(731) <= \<const0>\;
  s_axi_ruser(730) <= \<const0>\;
  s_axi_ruser(729) <= \<const0>\;
  s_axi_ruser(728) <= \<const0>\;
  s_axi_ruser(727) <= \<const0>\;
  s_axi_ruser(726) <= \<const0>\;
  s_axi_ruser(725) <= \<const0>\;
  s_axi_ruser(724) <= \<const0>\;
  s_axi_ruser(723) <= \<const0>\;
  s_axi_ruser(722) <= \<const0>\;
  s_axi_ruser(721) <= \<const0>\;
  s_axi_ruser(720) <= \<const0>\;
  s_axi_ruser(719) <= \<const0>\;
  s_axi_ruser(718) <= \<const0>\;
  s_axi_ruser(717) <= \<const0>\;
  s_axi_ruser(716) <= \<const0>\;
  s_axi_ruser(715) <= \<const0>\;
  s_axi_ruser(714) <= \<const0>\;
  s_axi_ruser(713) <= \<const0>\;
  s_axi_ruser(712) <= \<const0>\;
  s_axi_ruser(711) <= \<const0>\;
  s_axi_ruser(710) <= \<const0>\;
  s_axi_ruser(709) <= \<const0>\;
  s_axi_ruser(708) <= \<const0>\;
  s_axi_ruser(707) <= \<const0>\;
  s_axi_ruser(706) <= \<const0>\;
  s_axi_ruser(705) <= \<const0>\;
  s_axi_ruser(704) <= \<const0>\;
  s_axi_ruser(703) <= \<const0>\;
  s_axi_ruser(702) <= \<const0>\;
  s_axi_ruser(701) <= \<const0>\;
  s_axi_ruser(700) <= \<const0>\;
  s_axi_ruser(699) <= \<const0>\;
  s_axi_ruser(698) <= \<const0>\;
  s_axi_ruser(697) <= \<const0>\;
  s_axi_ruser(696) <= \<const0>\;
  s_axi_ruser(695) <= \<const0>\;
  s_axi_ruser(694) <= \<const0>\;
  s_axi_ruser(693) <= \<const0>\;
  s_axi_ruser(692) <= \<const0>\;
  s_axi_ruser(691) <= \<const0>\;
  s_axi_ruser(690) <= \<const0>\;
  s_axi_ruser(689) <= \<const0>\;
  s_axi_ruser(688) <= \<const0>\;
  s_axi_ruser(687) <= \<const0>\;
  s_axi_ruser(686) <= \<const0>\;
  s_axi_ruser(685) <= \<const0>\;
  s_axi_ruser(684) <= \<const0>\;
  s_axi_ruser(683) <= \<const0>\;
  s_axi_ruser(682) <= \<const0>\;
  s_axi_ruser(681) <= \<const0>\;
  s_axi_ruser(680) <= \<const0>\;
  s_axi_ruser(679) <= \<const0>\;
  s_axi_ruser(678) <= \<const0>\;
  s_axi_ruser(677) <= \<const0>\;
  s_axi_ruser(676) <= \<const0>\;
  s_axi_ruser(675) <= \<const0>\;
  s_axi_ruser(674) <= \<const0>\;
  s_axi_ruser(673) <= \<const0>\;
  s_axi_ruser(672) <= \<const0>\;
  s_axi_ruser(671) <= \<const0>\;
  s_axi_ruser(670) <= \<const0>\;
  s_axi_ruser(669) <= \<const0>\;
  s_axi_ruser(668) <= \<const0>\;
  s_axi_ruser(667) <= \<const0>\;
  s_axi_ruser(666) <= \<const0>\;
  s_axi_ruser(665) <= \<const0>\;
  s_axi_ruser(664) <= \<const0>\;
  s_axi_ruser(663) <= \<const0>\;
  s_axi_ruser(662) <= \<const0>\;
  s_axi_ruser(661) <= \<const0>\;
  s_axi_ruser(660) <= \<const0>\;
  s_axi_ruser(659) <= \<const0>\;
  s_axi_ruser(658) <= \<const0>\;
  s_axi_ruser(657) <= \<const0>\;
  s_axi_ruser(656) <= \<const0>\;
  s_axi_ruser(655) <= \<const0>\;
  s_axi_ruser(654) <= \<const0>\;
  s_axi_ruser(653) <= \<const0>\;
  s_axi_ruser(652) <= \<const0>\;
  s_axi_ruser(651) <= \<const0>\;
  s_axi_ruser(650) <= \<const0>\;
  s_axi_ruser(649) <= \<const0>\;
  s_axi_ruser(648) <= \<const0>\;
  s_axi_ruser(647) <= \<const0>\;
  s_axi_ruser(646) <= \<const0>\;
  s_axi_ruser(645) <= \<const0>\;
  s_axi_ruser(644) <= \<const0>\;
  s_axi_ruser(643) <= \<const0>\;
  s_axi_ruser(642) <= \<const0>\;
  s_axi_ruser(641) <= \<const0>\;
  s_axi_ruser(640) <= \<const0>\;
  s_axi_ruser(639) <= \<const0>\;
  s_axi_ruser(638) <= \<const0>\;
  s_axi_ruser(637) <= \<const0>\;
  s_axi_ruser(636) <= \<const0>\;
  s_axi_ruser(635) <= \<const0>\;
  s_axi_ruser(634) <= \<const0>\;
  s_axi_ruser(633) <= \<const0>\;
  s_axi_ruser(632) <= \<const0>\;
  s_axi_ruser(631) <= \<const0>\;
  s_axi_ruser(630) <= \<const0>\;
  s_axi_ruser(629) <= \<const0>\;
  s_axi_ruser(628) <= \<const0>\;
  s_axi_ruser(627) <= \<const0>\;
  s_axi_ruser(626) <= \<const0>\;
  s_axi_ruser(625) <= \<const0>\;
  s_axi_ruser(624) <= \<const0>\;
  s_axi_ruser(623) <= \<const0>\;
  s_axi_ruser(622) <= \<const0>\;
  s_axi_ruser(621) <= \<const0>\;
  s_axi_ruser(620) <= \<const0>\;
  s_axi_ruser(619) <= \<const0>\;
  s_axi_ruser(618) <= \<const0>\;
  s_axi_ruser(617) <= \<const0>\;
  s_axi_ruser(616) <= \<const0>\;
  s_axi_ruser(615) <= \<const0>\;
  s_axi_ruser(614) <= \<const0>\;
  s_axi_ruser(613) <= \<const0>\;
  s_axi_ruser(612) <= \<const0>\;
  s_axi_ruser(611) <= \<const0>\;
  s_axi_ruser(610) <= \<const0>\;
  s_axi_ruser(609) <= \<const0>\;
  s_axi_ruser(608) <= \<const0>\;
  s_axi_ruser(607) <= \<const0>\;
  s_axi_ruser(606) <= \<const0>\;
  s_axi_ruser(605) <= \<const0>\;
  s_axi_ruser(604) <= \<const0>\;
  s_axi_ruser(603) <= \<const0>\;
  s_axi_ruser(602) <= \<const0>\;
  s_axi_ruser(601) <= \<const0>\;
  s_axi_ruser(600) <= \<const0>\;
  s_axi_ruser(599) <= \<const0>\;
  s_axi_ruser(598) <= \<const0>\;
  s_axi_ruser(597) <= \<const0>\;
  s_axi_ruser(596) <= \<const0>\;
  s_axi_ruser(595) <= \<const0>\;
  s_axi_ruser(594) <= \<const0>\;
  s_axi_ruser(593) <= \<const0>\;
  s_axi_ruser(592) <= \<const0>\;
  s_axi_ruser(591) <= \<const0>\;
  s_axi_ruser(590) <= \<const0>\;
  s_axi_ruser(589) <= \<const0>\;
  s_axi_ruser(588) <= \<const0>\;
  s_axi_ruser(587) <= \<const0>\;
  s_axi_ruser(586) <= \<const0>\;
  s_axi_ruser(585) <= \<const0>\;
  s_axi_ruser(584) <= \<const0>\;
  s_axi_ruser(583) <= \<const0>\;
  s_axi_ruser(582) <= \<const0>\;
  s_axi_ruser(581) <= \<const0>\;
  s_axi_ruser(580) <= \<const0>\;
  s_axi_ruser(579) <= \<const0>\;
  s_axi_ruser(578) <= \<const0>\;
  s_axi_ruser(577) <= \<const0>\;
  s_axi_ruser(576) <= \<const0>\;
  s_axi_ruser(575) <= \<const0>\;
  s_axi_ruser(574) <= \<const0>\;
  s_axi_ruser(573) <= \<const0>\;
  s_axi_ruser(572) <= \<const0>\;
  s_axi_ruser(571) <= \<const0>\;
  s_axi_ruser(570) <= \<const0>\;
  s_axi_ruser(569) <= \<const0>\;
  s_axi_ruser(568) <= \<const0>\;
  s_axi_ruser(567) <= \<const0>\;
  s_axi_ruser(566) <= \<const0>\;
  s_axi_ruser(565) <= \<const0>\;
  s_axi_ruser(564) <= \<const0>\;
  s_axi_ruser(563) <= \<const0>\;
  s_axi_ruser(562) <= \<const0>\;
  s_axi_ruser(561) <= \<const0>\;
  s_axi_ruser(560) <= \<const0>\;
  s_axi_ruser(559) <= \<const0>\;
  s_axi_ruser(558) <= \<const0>\;
  s_axi_ruser(557) <= \<const0>\;
  s_axi_ruser(556) <= \<const0>\;
  s_axi_ruser(555) <= \<const0>\;
  s_axi_ruser(554) <= \<const0>\;
  s_axi_ruser(553) <= \<const0>\;
  s_axi_ruser(552) <= \<const0>\;
  s_axi_ruser(551) <= \<const0>\;
  s_axi_ruser(550) <= \<const0>\;
  s_axi_ruser(549) <= \<const0>\;
  s_axi_ruser(548) <= \<const0>\;
  s_axi_ruser(547) <= \<const0>\;
  s_axi_ruser(546) <= \<const0>\;
  s_axi_ruser(545) <= \<const0>\;
  s_axi_ruser(544) <= \<const0>\;
  s_axi_ruser(543) <= \<const0>\;
  s_axi_ruser(542) <= \<const0>\;
  s_axi_ruser(541) <= \<const0>\;
  s_axi_ruser(540) <= \<const0>\;
  s_axi_ruser(539) <= \<const0>\;
  s_axi_ruser(538) <= \<const0>\;
  s_axi_ruser(537) <= \<const0>\;
  s_axi_ruser(536) <= \<const0>\;
  s_axi_ruser(535) <= \<const0>\;
  s_axi_ruser(534) <= \<const0>\;
  s_axi_ruser(533) <= \<const0>\;
  s_axi_ruser(532) <= \<const0>\;
  s_axi_ruser(531) <= \<const0>\;
  s_axi_ruser(530) <= \<const0>\;
  s_axi_ruser(529) <= \<const0>\;
  s_axi_ruser(528) <= \<const0>\;
  s_axi_ruser(527) <= \<const0>\;
  s_axi_ruser(526) <= \<const0>\;
  s_axi_ruser(525) <= \<const0>\;
  s_axi_ruser(524) <= \<const0>\;
  s_axi_ruser(523) <= \<const0>\;
  s_axi_ruser(522) <= \<const0>\;
  s_axi_ruser(521) <= \<const0>\;
  s_axi_ruser(520) <= \<const0>\;
  s_axi_ruser(519) <= \<const0>\;
  s_axi_ruser(518) <= \<const0>\;
  s_axi_ruser(517) <= \<const0>\;
  s_axi_ruser(516) <= \<const0>\;
  s_axi_ruser(515) <= \<const0>\;
  s_axi_ruser(514) <= \<const0>\;
  s_axi_ruser(513) <= \<const0>\;
  s_axi_ruser(512) <= \<const0>\;
  s_axi_ruser(511) <= \<const0>\;
  s_axi_ruser(510) <= \<const0>\;
  s_axi_ruser(509) <= \<const0>\;
  s_axi_ruser(508) <= \<const0>\;
  s_axi_ruser(507) <= \<const0>\;
  s_axi_ruser(506) <= \<const0>\;
  s_axi_ruser(505) <= \<const0>\;
  s_axi_ruser(504) <= \<const0>\;
  s_axi_ruser(503) <= \<const0>\;
  s_axi_ruser(502) <= \<const0>\;
  s_axi_ruser(501) <= \<const0>\;
  s_axi_ruser(500) <= \<const0>\;
  s_axi_ruser(499) <= \<const0>\;
  s_axi_ruser(498) <= \<const0>\;
  s_axi_ruser(497) <= \<const0>\;
  s_axi_ruser(496) <= \<const0>\;
  s_axi_ruser(495) <= \<const0>\;
  s_axi_ruser(494) <= \<const0>\;
  s_axi_ruser(493) <= \<const0>\;
  s_axi_ruser(492) <= \<const0>\;
  s_axi_ruser(491) <= \<const0>\;
  s_axi_ruser(490) <= \<const0>\;
  s_axi_ruser(489) <= \<const0>\;
  s_axi_ruser(488) <= \<const0>\;
  s_axi_ruser(487) <= \<const0>\;
  s_axi_ruser(486) <= \<const0>\;
  s_axi_ruser(485) <= \<const0>\;
  s_axi_ruser(484) <= \<const0>\;
  s_axi_ruser(483) <= \<const0>\;
  s_axi_ruser(482) <= \<const0>\;
  s_axi_ruser(481) <= \<const0>\;
  s_axi_ruser(480) <= \<const0>\;
  s_axi_ruser(479) <= \<const0>\;
  s_axi_ruser(478) <= \<const0>\;
  s_axi_ruser(477) <= \<const0>\;
  s_axi_ruser(476) <= \<const0>\;
  s_axi_ruser(475) <= \<const0>\;
  s_axi_ruser(474) <= \<const0>\;
  s_axi_ruser(473) <= \<const0>\;
  s_axi_ruser(472) <= \<const0>\;
  s_axi_ruser(471) <= \<const0>\;
  s_axi_ruser(470) <= \<const0>\;
  s_axi_ruser(469) <= \<const0>\;
  s_axi_ruser(468) <= \<const0>\;
  s_axi_ruser(467) <= \<const0>\;
  s_axi_ruser(466) <= \<const0>\;
  s_axi_ruser(465) <= \<const0>\;
  s_axi_ruser(464) <= \<const0>\;
  s_axi_ruser(463) <= \<const0>\;
  s_axi_ruser(462) <= \<const0>\;
  s_axi_ruser(461) <= \<const0>\;
  s_axi_ruser(460) <= \<const0>\;
  s_axi_ruser(459) <= \<const0>\;
  s_axi_ruser(458) <= \<const0>\;
  s_axi_ruser(457) <= \<const0>\;
  s_axi_ruser(456) <= \<const0>\;
  s_axi_ruser(455) <= \<const0>\;
  s_axi_ruser(454) <= \<const0>\;
  s_axi_ruser(453) <= \<const0>\;
  s_axi_ruser(452) <= \<const0>\;
  s_axi_ruser(451) <= \<const0>\;
  s_axi_ruser(450) <= \<const0>\;
  s_axi_ruser(449) <= \<const0>\;
  s_axi_ruser(448) <= \<const0>\;
  s_axi_ruser(447) <= \<const0>\;
  s_axi_ruser(446) <= \<const0>\;
  s_axi_ruser(445) <= \<const0>\;
  s_axi_ruser(444) <= \<const0>\;
  s_axi_ruser(443) <= \<const0>\;
  s_axi_ruser(442) <= \<const0>\;
  s_axi_ruser(441) <= \<const0>\;
  s_axi_ruser(440) <= \<const0>\;
  s_axi_ruser(439) <= \<const0>\;
  s_axi_ruser(438) <= \<const0>\;
  s_axi_ruser(437) <= \<const0>\;
  s_axi_ruser(436) <= \<const0>\;
  s_axi_ruser(435) <= \<const0>\;
  s_axi_ruser(434) <= \<const0>\;
  s_axi_ruser(433) <= \<const0>\;
  s_axi_ruser(432) <= \<const0>\;
  s_axi_ruser(431) <= \<const0>\;
  s_axi_ruser(430) <= \<const0>\;
  s_axi_ruser(429) <= \<const0>\;
  s_axi_ruser(428) <= \<const0>\;
  s_axi_ruser(427) <= \<const0>\;
  s_axi_ruser(426) <= \<const0>\;
  s_axi_ruser(425) <= \<const0>\;
  s_axi_ruser(424) <= \<const0>\;
  s_axi_ruser(423) <= \<const0>\;
  s_axi_ruser(422) <= \<const0>\;
  s_axi_ruser(421) <= \<const0>\;
  s_axi_ruser(420) <= \<const0>\;
  s_axi_ruser(419) <= \<const0>\;
  s_axi_ruser(418) <= \<const0>\;
  s_axi_ruser(417) <= \<const0>\;
  s_axi_ruser(416) <= \<const0>\;
  s_axi_ruser(415) <= \<const0>\;
  s_axi_ruser(414) <= \<const0>\;
  s_axi_ruser(413) <= \<const0>\;
  s_axi_ruser(412) <= \<const0>\;
  s_axi_ruser(411) <= \<const0>\;
  s_axi_ruser(410) <= \<const0>\;
  s_axi_ruser(409) <= \<const0>\;
  s_axi_ruser(408) <= \<const0>\;
  s_axi_ruser(407) <= \<const0>\;
  s_axi_ruser(406) <= \<const0>\;
  s_axi_ruser(405) <= \<const0>\;
  s_axi_ruser(404) <= \<const0>\;
  s_axi_ruser(403) <= \<const0>\;
  s_axi_ruser(402) <= \<const0>\;
  s_axi_ruser(401) <= \<const0>\;
  s_axi_ruser(400) <= \<const0>\;
  s_axi_ruser(399) <= \<const0>\;
  s_axi_ruser(398) <= \<const0>\;
  s_axi_ruser(397) <= \<const0>\;
  s_axi_ruser(396) <= \<const0>\;
  s_axi_ruser(395) <= \<const0>\;
  s_axi_ruser(394) <= \<const0>\;
  s_axi_ruser(393) <= \<const0>\;
  s_axi_ruser(392) <= \<const0>\;
  s_axi_ruser(391) <= \<const0>\;
  s_axi_ruser(390) <= \<const0>\;
  s_axi_ruser(389) <= \<const0>\;
  s_axi_ruser(388) <= \<const0>\;
  s_axi_ruser(387) <= \<const0>\;
  s_axi_ruser(386) <= \<const0>\;
  s_axi_ruser(385) <= \<const0>\;
  s_axi_ruser(384) <= \<const0>\;
  s_axi_ruser(383) <= \<const0>\;
  s_axi_ruser(382) <= \<const0>\;
  s_axi_ruser(381) <= \<const0>\;
  s_axi_ruser(380) <= \<const0>\;
  s_axi_ruser(379) <= \<const0>\;
  s_axi_ruser(378) <= \<const0>\;
  s_axi_ruser(377) <= \<const0>\;
  s_axi_ruser(376) <= \<const0>\;
  s_axi_ruser(375) <= \<const0>\;
  s_axi_ruser(374) <= \<const0>\;
  s_axi_ruser(373) <= \<const0>\;
  s_axi_ruser(372) <= \<const0>\;
  s_axi_ruser(371) <= \<const0>\;
  s_axi_ruser(370) <= \<const0>\;
  s_axi_ruser(369) <= \<const0>\;
  s_axi_ruser(368) <= \<const0>\;
  s_axi_ruser(367) <= \<const0>\;
  s_axi_ruser(366) <= \<const0>\;
  s_axi_ruser(365) <= \<const0>\;
  s_axi_ruser(364) <= \<const0>\;
  s_axi_ruser(363) <= \<const0>\;
  s_axi_ruser(362) <= \<const0>\;
  s_axi_ruser(361) <= \<const0>\;
  s_axi_ruser(360) <= \<const0>\;
  s_axi_ruser(359) <= \<const0>\;
  s_axi_ruser(358) <= \<const0>\;
  s_axi_ruser(357) <= \<const0>\;
  s_axi_ruser(356) <= \<const0>\;
  s_axi_ruser(355) <= \<const0>\;
  s_axi_ruser(354) <= \<const0>\;
  s_axi_ruser(353) <= \<const0>\;
  s_axi_ruser(352) <= \<const0>\;
  s_axi_ruser(351) <= \<const0>\;
  s_axi_ruser(350) <= \<const0>\;
  s_axi_ruser(349) <= \<const0>\;
  s_axi_ruser(348) <= \<const0>\;
  s_axi_ruser(347) <= \<const0>\;
  s_axi_ruser(346) <= \<const0>\;
  s_axi_ruser(345) <= \<const0>\;
  s_axi_ruser(344) <= \<const0>\;
  s_axi_ruser(343) <= \<const0>\;
  s_axi_ruser(342) <= \<const0>\;
  s_axi_ruser(341) <= \<const0>\;
  s_axi_ruser(340) <= \<const0>\;
  s_axi_ruser(339) <= \<const0>\;
  s_axi_ruser(338) <= \<const0>\;
  s_axi_ruser(337) <= \<const0>\;
  s_axi_ruser(336) <= \<const0>\;
  s_axi_ruser(335) <= \<const0>\;
  s_axi_ruser(334) <= \<const0>\;
  s_axi_ruser(333) <= \<const0>\;
  s_axi_ruser(332) <= \<const0>\;
  s_axi_ruser(331) <= \<const0>\;
  s_axi_ruser(330) <= \<const0>\;
  s_axi_ruser(329) <= \<const0>\;
  s_axi_ruser(328) <= \<const0>\;
  s_axi_ruser(327) <= \<const0>\;
  s_axi_ruser(326) <= \<const0>\;
  s_axi_ruser(325) <= \<const0>\;
  s_axi_ruser(324) <= \<const0>\;
  s_axi_ruser(323) <= \<const0>\;
  s_axi_ruser(322) <= \<const0>\;
  s_axi_ruser(321) <= \<const0>\;
  s_axi_ruser(320) <= \<const0>\;
  s_axi_ruser(319) <= \<const0>\;
  s_axi_ruser(318) <= \<const0>\;
  s_axi_ruser(317) <= \<const0>\;
  s_axi_ruser(316) <= \<const0>\;
  s_axi_ruser(315) <= \<const0>\;
  s_axi_ruser(314) <= \<const0>\;
  s_axi_ruser(313) <= \<const0>\;
  s_axi_ruser(312) <= \<const0>\;
  s_axi_ruser(311) <= \<const0>\;
  s_axi_ruser(310) <= \<const0>\;
  s_axi_ruser(309) <= \<const0>\;
  s_axi_ruser(308) <= \<const0>\;
  s_axi_ruser(307) <= \<const0>\;
  s_axi_ruser(306) <= \<const0>\;
  s_axi_ruser(305) <= \<const0>\;
  s_axi_ruser(304) <= \<const0>\;
  s_axi_ruser(303) <= \<const0>\;
  s_axi_ruser(302) <= \<const0>\;
  s_axi_ruser(301) <= \<const0>\;
  s_axi_ruser(300) <= \<const0>\;
  s_axi_ruser(299) <= \<const0>\;
  s_axi_ruser(298) <= \<const0>\;
  s_axi_ruser(297) <= \<const0>\;
  s_axi_ruser(296) <= \<const0>\;
  s_axi_ruser(295) <= \<const0>\;
  s_axi_ruser(294) <= \<const0>\;
  s_axi_ruser(293) <= \<const0>\;
  s_axi_ruser(292) <= \<const0>\;
  s_axi_ruser(291) <= \<const0>\;
  s_axi_ruser(290) <= \<const0>\;
  s_axi_ruser(289) <= \<const0>\;
  s_axi_ruser(288) <= \<const0>\;
  s_axi_ruser(287) <= \<const0>\;
  s_axi_ruser(286) <= \<const0>\;
  s_axi_ruser(285) <= \<const0>\;
  s_axi_ruser(284) <= \<const0>\;
  s_axi_ruser(283) <= \<const0>\;
  s_axi_ruser(282) <= \<const0>\;
  s_axi_ruser(281) <= \<const0>\;
  s_axi_ruser(280) <= \<const0>\;
  s_axi_ruser(279) <= \<const0>\;
  s_axi_ruser(278) <= \<const0>\;
  s_axi_ruser(277) <= \<const0>\;
  s_axi_ruser(276) <= \<const0>\;
  s_axi_ruser(275) <= \<const0>\;
  s_axi_ruser(274) <= \<const0>\;
  s_axi_ruser(273) <= \<const0>\;
  s_axi_ruser(272) <= \<const0>\;
  s_axi_ruser(271) <= \<const0>\;
  s_axi_ruser(270) <= \<const0>\;
  s_axi_ruser(269) <= \<const0>\;
  s_axi_ruser(268) <= \<const0>\;
  s_axi_ruser(267) <= \<const0>\;
  s_axi_ruser(266) <= \<const0>\;
  s_axi_ruser(265) <= \<const0>\;
  s_axi_ruser(264) <= \<const0>\;
  s_axi_ruser(263) <= \<const0>\;
  s_axi_ruser(262) <= \<const0>\;
  s_axi_ruser(261) <= \<const0>\;
  s_axi_ruser(260) <= \<const0>\;
  s_axi_ruser(259) <= \<const0>\;
  s_axi_ruser(258) <= \<const0>\;
  s_axi_ruser(257) <= \<const0>\;
  s_axi_ruser(256) <= \<const0>\;
  s_axi_ruser(255) <= \<const0>\;
  s_axi_ruser(254) <= \<const0>\;
  s_axi_ruser(253) <= \<const0>\;
  s_axi_ruser(252) <= \<const0>\;
  s_axi_ruser(251) <= \<const0>\;
  s_axi_ruser(250) <= \<const0>\;
  s_axi_ruser(249) <= \<const0>\;
  s_axi_ruser(248) <= \<const0>\;
  s_axi_ruser(247) <= \<const0>\;
  s_axi_ruser(246) <= \<const0>\;
  s_axi_ruser(245) <= \<const0>\;
  s_axi_ruser(244) <= \<const0>\;
  s_axi_ruser(243) <= \<const0>\;
  s_axi_ruser(242) <= \<const0>\;
  s_axi_ruser(241) <= \<const0>\;
  s_axi_ruser(240) <= \<const0>\;
  s_axi_ruser(239) <= \<const0>\;
  s_axi_ruser(238) <= \<const0>\;
  s_axi_ruser(237) <= \<const0>\;
  s_axi_ruser(236) <= \<const0>\;
  s_axi_ruser(235) <= \<const0>\;
  s_axi_ruser(234) <= \<const0>\;
  s_axi_ruser(233) <= \<const0>\;
  s_axi_ruser(232) <= \<const0>\;
  s_axi_ruser(231) <= \<const0>\;
  s_axi_ruser(230) <= \<const0>\;
  s_axi_ruser(229) <= \<const0>\;
  s_axi_ruser(228) <= \<const0>\;
  s_axi_ruser(227) <= \<const0>\;
  s_axi_ruser(226) <= \<const0>\;
  s_axi_ruser(225) <= \<const0>\;
  s_axi_ruser(224) <= \<const0>\;
  s_axi_ruser(223) <= \<const0>\;
  s_axi_ruser(222) <= \<const0>\;
  s_axi_ruser(221) <= \<const0>\;
  s_axi_ruser(220) <= \<const0>\;
  s_axi_ruser(219) <= \<const0>\;
  s_axi_ruser(218) <= \<const0>\;
  s_axi_ruser(217) <= \<const0>\;
  s_axi_ruser(216) <= \<const0>\;
  s_axi_ruser(215) <= \<const0>\;
  s_axi_ruser(214) <= \<const0>\;
  s_axi_ruser(213) <= \<const0>\;
  s_axi_ruser(212) <= \<const0>\;
  s_axi_ruser(211) <= \<const0>\;
  s_axi_ruser(210) <= \<const0>\;
  s_axi_ruser(209) <= \<const0>\;
  s_axi_ruser(208) <= \<const0>\;
  s_axi_ruser(207) <= \<const0>\;
  s_axi_ruser(206) <= \<const0>\;
  s_axi_ruser(205) <= \<const0>\;
  s_axi_ruser(204) <= \<const0>\;
  s_axi_ruser(203) <= \<const0>\;
  s_axi_ruser(202) <= \<const0>\;
  s_axi_ruser(201) <= \<const0>\;
  s_axi_ruser(200) <= \<const0>\;
  s_axi_ruser(199) <= \<const0>\;
  s_axi_ruser(198) <= \<const0>\;
  s_axi_ruser(197) <= \<const0>\;
  s_axi_ruser(196) <= \<const0>\;
  s_axi_ruser(195) <= \<const0>\;
  s_axi_ruser(194) <= \<const0>\;
  s_axi_ruser(193) <= \<const0>\;
  s_axi_ruser(192) <= \<const0>\;
  s_axi_ruser(191) <= \<const0>\;
  s_axi_ruser(190) <= \<const0>\;
  s_axi_ruser(189) <= \<const0>\;
  s_axi_ruser(188) <= \<const0>\;
  s_axi_ruser(187) <= \<const0>\;
  s_axi_ruser(186) <= \<const0>\;
  s_axi_ruser(185) <= \<const0>\;
  s_axi_ruser(184) <= \<const0>\;
  s_axi_ruser(183) <= \<const0>\;
  s_axi_ruser(182) <= \<const0>\;
  s_axi_ruser(181) <= \<const0>\;
  s_axi_ruser(180) <= \<const0>\;
  s_axi_ruser(179) <= \<const0>\;
  s_axi_ruser(178) <= \<const0>\;
  s_axi_ruser(177) <= \<const0>\;
  s_axi_ruser(176) <= \<const0>\;
  s_axi_ruser(175) <= \<const0>\;
  s_axi_ruser(174) <= \<const0>\;
  s_axi_ruser(173) <= \<const0>\;
  s_axi_ruser(172) <= \<const0>\;
  s_axi_ruser(171) <= \<const0>\;
  s_axi_ruser(170) <= \<const0>\;
  s_axi_ruser(169) <= \<const0>\;
  s_axi_ruser(168) <= \<const0>\;
  s_axi_ruser(167) <= \<const0>\;
  s_axi_ruser(166) <= \<const0>\;
  s_axi_ruser(165) <= \<const0>\;
  s_axi_ruser(164) <= \<const0>\;
  s_axi_ruser(163) <= \<const0>\;
  s_axi_ruser(162) <= \<const0>\;
  s_axi_ruser(161) <= \<const0>\;
  s_axi_ruser(160) <= \<const0>\;
  s_axi_ruser(159) <= \<const0>\;
  s_axi_ruser(158) <= \<const0>\;
  s_axi_ruser(157) <= \<const0>\;
  s_axi_ruser(156) <= \<const0>\;
  s_axi_ruser(155) <= \<const0>\;
  s_axi_ruser(154) <= \<const0>\;
  s_axi_ruser(153) <= \<const0>\;
  s_axi_ruser(152) <= \<const0>\;
  s_axi_ruser(151) <= \<const0>\;
  s_axi_ruser(150) <= \<const0>\;
  s_axi_ruser(149) <= \<const0>\;
  s_axi_ruser(148) <= \<const0>\;
  s_axi_ruser(147) <= \<const0>\;
  s_axi_ruser(146) <= \<const0>\;
  s_axi_ruser(145) <= \<const0>\;
  s_axi_ruser(144) <= \<const0>\;
  s_axi_ruser(143) <= \<const0>\;
  s_axi_ruser(142) <= \<const0>\;
  s_axi_ruser(141) <= \<const0>\;
  s_axi_ruser(140) <= \<const0>\;
  s_axi_ruser(139) <= \<const0>\;
  s_axi_ruser(138) <= \<const0>\;
  s_axi_ruser(137) <= \<const0>\;
  s_axi_ruser(136) <= \<const0>\;
  s_axi_ruser(135) <= \<const0>\;
  s_axi_ruser(134) <= \<const0>\;
  s_axi_ruser(133) <= \<const0>\;
  s_axi_ruser(132) <= \<const0>\;
  s_axi_ruser(131) <= \<const0>\;
  s_axi_ruser(130) <= \<const0>\;
  s_axi_ruser(129) <= \<const0>\;
  s_axi_ruser(128) <= \<const0>\;
  s_axi_ruser(127) <= \<const0>\;
  s_axi_ruser(126) <= \<const0>\;
  s_axi_ruser(125) <= \<const0>\;
  s_axi_ruser(124) <= \<const0>\;
  s_axi_ruser(123) <= \<const0>\;
  s_axi_ruser(122) <= \<const0>\;
  s_axi_ruser(121) <= \<const0>\;
  s_axi_ruser(120) <= \<const0>\;
  s_axi_ruser(119) <= \<const0>\;
  s_axi_ruser(118) <= \<const0>\;
  s_axi_ruser(117) <= \<const0>\;
  s_axi_ruser(116) <= \<const0>\;
  s_axi_ruser(115) <= \<const0>\;
  s_axi_ruser(114) <= \<const0>\;
  s_axi_ruser(113) <= \<const0>\;
  s_axi_ruser(112) <= \<const0>\;
  s_axi_ruser(111) <= \<const0>\;
  s_axi_ruser(110) <= \<const0>\;
  s_axi_ruser(109) <= \<const0>\;
  s_axi_ruser(108) <= \<const0>\;
  s_axi_ruser(107) <= \<const0>\;
  s_axi_ruser(106) <= \<const0>\;
  s_axi_ruser(105) <= \<const0>\;
  s_axi_ruser(104) <= \<const0>\;
  s_axi_ruser(103) <= \<const0>\;
  s_axi_ruser(102) <= \<const0>\;
  s_axi_ruser(101) <= \<const0>\;
  s_axi_ruser(100) <= \<const0>\;
  s_axi_ruser(99) <= \<const0>\;
  s_axi_ruser(98) <= \<const0>\;
  s_axi_ruser(97) <= \<const0>\;
  s_axi_ruser(96) <= \<const0>\;
  s_axi_ruser(95) <= \<const0>\;
  s_axi_ruser(94) <= \<const0>\;
  s_axi_ruser(93) <= \<const0>\;
  s_axi_ruser(92) <= \<const0>\;
  s_axi_ruser(91) <= \<const0>\;
  s_axi_ruser(90) <= \<const0>\;
  s_axi_ruser(89) <= \<const0>\;
  s_axi_ruser(88) <= \<const0>\;
  s_axi_ruser(87) <= \<const0>\;
  s_axi_ruser(86) <= \<const0>\;
  s_axi_ruser(85) <= \<const0>\;
  s_axi_ruser(84) <= \<const0>\;
  s_axi_ruser(83) <= \<const0>\;
  s_axi_ruser(82) <= \<const0>\;
  s_axi_ruser(81) <= \<const0>\;
  s_axi_ruser(80) <= \<const0>\;
  s_axi_ruser(79) <= \<const0>\;
  s_axi_ruser(78) <= \<const0>\;
  s_axi_ruser(77) <= \<const0>\;
  s_axi_ruser(76) <= \<const0>\;
  s_axi_ruser(75) <= \<const0>\;
  s_axi_ruser(74) <= \<const0>\;
  s_axi_ruser(73) <= \<const0>\;
  s_axi_ruser(72) <= \<const0>\;
  s_axi_ruser(71) <= \<const0>\;
  s_axi_ruser(70) <= \<const0>\;
  s_axi_ruser(69) <= \<const0>\;
  s_axi_ruser(68) <= \<const0>\;
  s_axi_ruser(67) <= \<const0>\;
  s_axi_ruser(66) <= \<const0>\;
  s_axi_ruser(65) <= \<const0>\;
  s_axi_ruser(64) <= \<const0>\;
  s_axi_ruser(63) <= \<const0>\;
  s_axi_ruser(62) <= \<const0>\;
  s_axi_ruser(61) <= \<const0>\;
  s_axi_ruser(60) <= \<const0>\;
  s_axi_ruser(59) <= \<const0>\;
  s_axi_ruser(58) <= \<const0>\;
  s_axi_ruser(57) <= \<const0>\;
  s_axi_ruser(56) <= \<const0>\;
  s_axi_ruser(55) <= \<const0>\;
  s_axi_ruser(54) <= \<const0>\;
  s_axi_ruser(53) <= \<const0>\;
  s_axi_ruser(52) <= \<const0>\;
  s_axi_ruser(51) <= \<const0>\;
  s_axi_ruser(50) <= \<const0>\;
  s_axi_ruser(49) <= \<const0>\;
  s_axi_ruser(48) <= \<const0>\;
  s_axi_ruser(47) <= \<const0>\;
  s_axi_ruser(46) <= \<const0>\;
  s_axi_ruser(45) <= \<const0>\;
  s_axi_ruser(44) <= \<const0>\;
  s_axi_ruser(43) <= \<const0>\;
  s_axi_ruser(42) <= \<const0>\;
  s_axi_ruser(41) <= \<const0>\;
  s_axi_ruser(40) <= \<const0>\;
  s_axi_ruser(39) <= \<const0>\;
  s_axi_ruser(38) <= \<const0>\;
  s_axi_ruser(37) <= \<const0>\;
  s_axi_ruser(36) <= \<const0>\;
  s_axi_ruser(35) <= \<const0>\;
  s_axi_ruser(34) <= \<const0>\;
  s_axi_ruser(33) <= \<const0>\;
  s_axi_ruser(32) <= \<const0>\;
  s_axi_ruser(31) <= \<const0>\;
  s_axi_ruser(30) <= \<const0>\;
  s_axi_ruser(29) <= \<const0>\;
  s_axi_ruser(28) <= \<const0>\;
  s_axi_ruser(27) <= \<const0>\;
  s_axi_ruser(26) <= \<const0>\;
  s_axi_ruser(25) <= \<const0>\;
  s_axi_ruser(24) <= \<const0>\;
  s_axi_ruser(23) <= \<const0>\;
  s_axi_ruser(22) <= \<const0>\;
  s_axi_ruser(21) <= \<const0>\;
  s_axi_ruser(20) <= \<const0>\;
  s_axi_ruser(19) <= \<const0>\;
  s_axi_ruser(18) <= \<const0>\;
  s_axi_ruser(17) <= \<const0>\;
  s_axi_ruser(16) <= \<const0>\;
  s_axi_ruser(15) <= \<const0>\;
  s_axi_ruser(14) <= \<const0>\;
  s_axi_ruser(13) <= \<const0>\;
  s_axi_ruser(12) <= \<const0>\;
  s_axi_ruser(11) <= \<const0>\;
  s_axi_ruser(10) <= \<const0>\;
  s_axi_ruser(9) <= \<const0>\;
  s_axi_ruser(8) <= \<const0>\;
  s_axi_ruser(7) <= \<const0>\;
  s_axi_ruser(6) <= \<const0>\;
  s_axi_ruser(5) <= \<const0>\;
  s_axi_ruser(4) <= \<const0>\;
  s_axi_ruser(3) <= \<const0>\;
  s_axi_ruser(2) <= \<const0>\;
  s_axi_ruser(1) <= \<const0>\;
  s_axi_ruser(0) <= \<const0>\;
  s_axi_rvalid <= \<const0>\;
  s_axi_wready <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
areset_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => aresetn,
      O => areset_i_1_n_0
    );
areset_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => areset_i_1_n_0,
      Q => areset,
      R => '0'
    );
\gen_endpoint.gen_r_singleorder.r_singleorder\: entity work.design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_singleorder
     port map (
      aclk => aclk,
      areset => areset,
      \gen_id_reg.aresetn_d_reg[0]_0\ => \gen_endpoint.gen_r_singleorder.r_singleorder_n_0\,
      \gen_id_reg.aresetn_d_reg[0]_1\ => \gen_endpoint.gen_r_singleorder.r_singleorder_n_1\,
      m_axi_arready => m_axi_arready,
      m_axi_arvalid => m_axi_arvalid,
      m_axi_rlast => m_axi_rlast,
      m_axi_rvalid => m_axi_rvalid,
      p_0_in => p_0_in,
      s_axi_arid(11 downto 0) => s_axi_arid(11 downto 0),
      s_axi_arready => s_axi_arready,
      s_axi_arvalid => s_axi_arvalid,
      s_axi_rid(11 downto 0) => s_axi_rid(11 downto 0),
      s_axi_rready => s_axi_rready
    );
\gen_endpoint.gen_w_singleorder.w_singleorder\: entity work.design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_singleorder_14
     port map (
      aclk => aclk,
      \gen_id_reg.aresetn_d_reg[1]_0\ => \gen_endpoint.gen_r_singleorder.r_singleorder_n_1\,
      \gen_id_reg.s_single_aready_i_reg_0\ => \gen_endpoint.gen_r_singleorder.r_singleorder_n_0\,
      m_axi_awready => m_axi_awready,
      m_axi_awvalid => m_axi_awvalid,
      m_axi_bvalid => m_axi_bvalid,
      p_0_in => p_0_in,
      s_axi_awid(11 downto 0) => s_axi_awid(11 downto 0),
      s_axi_awready => s_axi_awready,
      s_axi_awvalid => s_axi_awvalid,
      s_axi_bid(11 downto 0) => s_axi_bid(11 downto 0),
      s_axi_bready => s_axi_bready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_util_v1_0_4_axic_reg_srl_fifo is
  port (
    wroute_vacancy : out STD_LOGIC;
    m_axi_wuser : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    areset : in STD_LOGIC;
    \gen_pipelined.state_reg[2]_0\ : in STD_LOGIC;
    \gen_pipelined.state_reg[1]_0\ : in STD_LOGIC;
    s_axi_awvalid : in STD_LOGIC;
    \gen_pipelined.state_reg[2]_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_util_v1_0_4_axic_reg_srl_fifo : entity is "sc_util_v1_0_4_axic_reg_srl_fifo";
end design_1_axi_smc_0_sc_util_v1_0_4_axic_reg_srl_fifo;

architecture STRUCTURE of design_1_axi_smc_0_sc_util_v1_0_4_axic_reg_srl_fifo is
  signal \fifoaddr[0]_i_1_n_0\ : STD_LOGIC;
  signal \fifoaddr[1]_i_1_n_0\ : STD_LOGIC;
  signal \fifoaddr[2]_i_1_n_0\ : STD_LOGIC;
  signal \fifoaddr[3]_i_1_n_0\ : STD_LOGIC;
  signal \fifoaddr[3]_i_2_n_0\ : STD_LOGIC;
  signal \fifoaddr[3]_i_3_n_0\ : STD_LOGIC;
  signal fifoaddr_afull_i_1_n_0 : STD_LOGIC;
  signal fifoaddr_afull_i_2_n_0 : STD_LOGIC;
  signal fifoaddr_afull_i_3_n_0 : STD_LOGIC;
  signal fifoaddr_reg : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \gen_pipelined.mesg_reg[2]_i_1_n_0\ : STD_LOGIC;
  signal \gen_pipelined.state[0]_i_1_n_0\ : STD_LOGIC;
  signal \gen_pipelined.state[0]_i_2_n_0\ : STD_LOGIC;
  signal \gen_pipelined.state[1]_i_1_n_0\ : STD_LOGIC;
  signal \gen_pipelined.state[2]_i_1_n_0\ : STD_LOGIC;
  signal \gen_pipelined.state_reg_n_0_[0]\ : STD_LOGIC;
  signal \gen_pipelined.state_reg_n_0_[1]\ : STD_LOGIC;
  signal \^m_axi_wuser\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal p_1_out : STD_LOGIC;
  signal sel0 : STD_LOGIC_VECTOR ( 4 to 4 );
  signal \^wroute_vacancy\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \fifoaddr[0]_i_1\ : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of \fifoaddr[1]_i_1\ : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of \fifoaddr[2]_i_1\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of \fifoaddr[3]_i_2\ : label is "soft_lutpair29";
  attribute FSM_ENCODING : string;
  attribute FSM_ENCODING of \gen_pipelined.state_reg[0]\ : label is "none";
  attribute FSM_ENCODING of \gen_pipelined.state_reg[1]\ : label is "none";
  attribute FSM_ENCODING of \gen_pipelined.state_reg[2]\ : label is "none";
begin
  m_axi_wuser(0) <= \^m_axi_wuser\(0);
  wroute_vacancy <= \^wroute_vacancy\;
\fifoaddr[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => fifoaddr_reg(0),
      O => \fifoaddr[0]_i_1_n_0\
    );
\fifoaddr[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"69"
    )
        port map (
      I0 => \fifoaddr[3]_i_3_n_0\,
      I1 => fifoaddr_reg(0),
      I2 => fifoaddr_reg(1),
      O => \fifoaddr[1]_i_1_n_0\
    );
\fifoaddr[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"78E1"
    )
        port map (
      I0 => fifoaddr_reg(0),
      I1 => \fifoaddr[3]_i_3_n_0\,
      I2 => fifoaddr_reg(2),
      I3 => fifoaddr_reg(1),
      O => \fifoaddr[2]_i_1_n_0\
    );
\fifoaddr[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A6AA040000000000"
    )
        port map (
      I0 => \gen_pipelined.state_reg[2]_0\,
      I1 => \^wroute_vacancy\,
      I2 => \gen_pipelined.state_reg[1]_0\,
      I3 => s_axi_awvalid,
      I4 => \gen_pipelined.state_reg_n_0_[0]\,
      I5 => \gen_pipelined.state_reg_n_0_[1]\,
      O => \fifoaddr[3]_i_1_n_0\
    );
\fifoaddr[3]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAA9"
    )
        port map (
      I0 => fifoaddr_reg(3),
      I1 => fifoaddr_reg(1),
      I2 => fifoaddr_reg(0),
      I3 => \fifoaddr[3]_i_3_n_0\,
      I4 => fifoaddr_reg(2),
      O => \fifoaddr[3]_i_2_n_0\
    );
\fifoaddr[3]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00004000"
    )
        port map (
      I0 => \gen_pipelined.state_reg[1]_0\,
      I1 => s_axi_awvalid,
      I2 => \^wroute_vacancy\,
      I3 => \gen_pipelined.state_reg_n_0_[1]\,
      I4 => \gen_pipelined.state_reg[2]_0\,
      O => \fifoaddr[3]_i_3_n_0\
    );
fifoaddr_afull_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFCFFFFF02000200"
    )
        port map (
      I0 => \fifoaddr[3]_i_3_n_0\,
      I1 => fifoaddr_afull_i_2_n_0,
      I2 => fifoaddr_reg(1),
      I3 => fifoaddr_reg(0),
      I4 => fifoaddr_afull_i_3_n_0,
      I5 => sel0(4),
      O => fifoaddr_afull_i_1_n_0
    );
fifoaddr_afull_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => fifoaddr_reg(2),
      I1 => fifoaddr_reg(3),
      O => fifoaddr_afull_i_2_n_0
    );
fifoaddr_afull_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8808888800000000"
    )
        port map (
      I0 => \gen_pipelined.state_reg_n_0_[1]\,
      I1 => \gen_pipelined.state_reg_n_0_[0]\,
      I2 => s_axi_awvalid,
      I3 => \gen_pipelined.state_reg[1]_0\,
      I4 => \^wroute_vacancy\,
      I5 => \gen_pipelined.state_reg[2]_0\,
      O => fifoaddr_afull_i_3_n_0
    );
fifoaddr_afull_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => fifoaddr_afull_i_1_n_0,
      Q => sel0(4),
      R => areset
    );
\fifoaddr_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk,
      CE => \fifoaddr[3]_i_1_n_0\,
      D => \fifoaddr[0]_i_1_n_0\,
      Q => fifoaddr_reg(0),
      S => areset
    );
\fifoaddr_reg[1]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk,
      CE => \fifoaddr[3]_i_1_n_0\,
      D => \fifoaddr[1]_i_1_n_0\,
      Q => fifoaddr_reg(1),
      S => areset
    );
\fifoaddr_reg[2]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk,
      CE => \fifoaddr[3]_i_1_n_0\,
      D => \fifoaddr[2]_i_1_n_0\,
      Q => fifoaddr_reg(2),
      S => areset
    );
\fifoaddr_reg[3]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk,
      CE => \fifoaddr[3]_i_1_n_0\,
      D => \fifoaddr[3]_i_2_n_0\,
      Q => fifoaddr_reg(3),
      S => areset
    );
\gen_pipelined.mesg_reg[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFFFFFFFAFFF0F3F"
    )
        port map (
      I0 => p_1_out,
      I1 => \^wroute_vacancy\,
      I2 => \gen_pipelined.state_reg_n_0_[1]\,
      I3 => \gen_pipelined.state_reg_n_0_[0]\,
      I4 => \gen_pipelined.state_reg[2]_0\,
      I5 => \^m_axi_wuser\(0),
      O => \gen_pipelined.mesg_reg[2]_i_1_n_0\
    );
\gen_pipelined.mesg_reg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_pipelined.mesg_reg[2]_i_1_n_0\,
      Q => \^m_axi_wuser\(0),
      R => '0'
    );
\gen_pipelined.state[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FBFB300000000000"
    )
        port map (
      I0 => \gen_pipelined.state[0]_i_2_n_0\,
      I1 => \gen_pipelined.state_reg[2]_0\,
      I2 => \gen_pipelined.state_reg[2]_1\,
      I3 => \^wroute_vacancy\,
      I4 => \gen_pipelined.state_reg_n_0_[0]\,
      I5 => \gen_pipelined.state_reg_n_0_[1]\,
      O => \gen_pipelined.state[0]_i_1_n_0\
    );
\gen_pipelined.state[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFEFFF"
    )
        port map (
      I0 => fifoaddr_reg(0),
      I1 => fifoaddr_reg(1),
      I2 => \^wroute_vacancy\,
      I3 => \gen_pipelined.state_reg_n_0_[0]\,
      I4 => fifoaddr_reg(2),
      I5 => fifoaddr_reg(3),
      O => \gen_pipelined.state[0]_i_2_n_0\
    );
\gen_pipelined.state[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF750000003000"
    )
        port map (
      I0 => \gen_pipelined.state_reg[2]_0\,
      I1 => \gen_pipelined.state_reg[1]_0\,
      I2 => s_axi_awvalid,
      I3 => \^wroute_vacancy\,
      I4 => \gen_pipelined.state_reg_n_0_[0]\,
      I5 => \gen_pipelined.state_reg_n_0_[1]\,
      O => \gen_pipelined.state[1]_i_1_n_0\
    );
\gen_pipelined.state[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DFCCFFFFFFFFFFFF"
    )
        port map (
      I0 => sel0(4),
      I1 => \gen_pipelined.state_reg[2]_0\,
      I2 => \gen_pipelined.state_reg[2]_1\,
      I3 => \^wroute_vacancy\,
      I4 => \gen_pipelined.state_reg_n_0_[0]\,
      I5 => \gen_pipelined.state_reg_n_0_[1]\,
      O => \gen_pipelined.state[2]_i_1_n_0\
    );
\gen_pipelined.state_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_pipelined.state[0]_i_1_n_0\,
      Q => \gen_pipelined.state_reg_n_0_[0]\,
      R => areset
    );
\gen_pipelined.state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_pipelined.state[1]_i_1_n_0\,
      Q => \gen_pipelined.state_reg_n_0_[1]\,
      R => areset
    );
\gen_pipelined.state_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_pipelined.state[2]_i_1_n_0\,
      Q => \^wroute_vacancy\,
      R => areset
    );
\gen_srls[2].srl_nx1\: entity work.design_1_axi_smc_0_sc_util_v1_0_4_srl_rtl
     port map (
      Q(3 downto 0) => fifoaddr_reg(3 downto 0),
      aclk => aclk,
      p_1_out => p_1_out,
      s_axi_awvalid => s_axi_awvalid,
      \shift_reg_reg[0]_srl16_0\ => \gen_pipelined.state_reg_n_0_[1]\,
      \shift_reg_reg[0]_srl16_1\ => \^wroute_vacancy\,
      \shift_reg_reg[0]_srl16_2\ => \gen_pipelined.state_reg_n_0_[0]\,
      \shift_reg_reg[0]_srl16_3\ => \gen_pipelined.state_reg[1]_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_boutsw_0 is
  port (
    S_SC_B_payld : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M01_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M01_AXI_bready : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_boutsw_0 : entity is "bd_afc3_boutsw_0";
end design_1_axi_smc_0_bd_afc3_boutsw_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_boutsw_0 is
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_inst_m_sc_req_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_sc_send_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_s_sc_recv_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute C_CONNECTIVITY : string;
  attribute C_CONNECTIVITY of inst : label is "2'b11";
  attribute C_M_PIPELINES : string;
  attribute C_M_PIPELINES of inst : label is "32'b00000000000000000000000000000000";
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 1;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 2;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 7;
  attribute C_S_LATENCY : string;
  attribute C_S_LATENCY of inst : label is "32'b00000000000000000000000000000000";
  attribute C_S_PIPELINES : string;
  attribute C_S_PIPELINES of inst : label is "32'b00000000000000000000000000000000";
  attribute C_TESTING_MODE : integer;
  attribute C_TESTING_MODE of inst : label is 0;
  attribute K_MAX_INFO_WIDTH : integer;
  attribute K_MAX_INFO_WIDTH of inst : label is 1;
  attribute LP_LOG_NUM_SI : string;
  attribute LP_LOG_NUM_SI of inst : label is "32'b00000000000000000000000000000001";
  attribute LP_MUX_IMPL : string;
  attribute LP_MUX_IMPL of inst : label is "32'b00000000000000000000000000000000";
  attribute LP_M_SC_SEL_MI_PIPELINE_DEPTH : string;
  attribute LP_M_SC_SEL_MI_PIPELINE_DEPTH of inst : label is "32'b00000000000000000000000000000000";
begin
inst: entity work.\design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized2\
     port map (
      aclk => '0',
      aclken => '1',
      connectivity(1 downto 0) => B"11",
      m_sc_info(1 downto 0) => NLW_inst_m_sc_info_UNCONNECTED(1 downto 0),
      m_sc_payld(6 downto 5) => S_SC_B_payld(1 downto 0),
      m_sc_payld(4 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(4 downto 0),
      m_sc_recv(1) => M01_AXI_bready,
      m_sc_recv(0) => '0',
      m_sc_req(1 downto 0) => NLW_inst_m_sc_req_UNCONNECTED(1 downto 0),
      m_sc_send(1 downto 0) => NLW_inst_m_sc_send_UNCONNECTED(1 downto 0),
      s_sc_info(1 downto 0) => B"00",
      s_sc_payld(13 downto 12) => M01_AXI_bresp(1 downto 0),
      s_sc_payld(11 downto 0) => B"000000000000",
      s_sc_recv(1 downto 0) => NLW_inst_s_sc_recv_UNCONNECTED(1 downto 0),
      s_sc_req(1 downto 0) => B"00",
      s_sc_send(1 downto 0) => B"00"
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_m01arn_0 is
  port (
    M_SC_AR_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_arvalid : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_m01arn_0 : entity is "bd_afc3_m01arn_0";
end design_1_axi_smc_0_bd_afc3_m01arn_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_m01arn_0 is
  signal NLW_inst_m_axis_arb_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axis_arb_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axis_arb_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 140 downto 0 );
  signal NLW_inst_m_sc_req_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_sc_recv_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of inst : label is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of inst : label is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of inst : label is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of inst : label is 2;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of inst : label is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of inst : label is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of inst : label is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of inst : label is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of inst : label is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of inst : label is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of inst : label is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of inst : label is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 141;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of inst : label is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of inst : label is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of inst : label is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of inst : label is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of inst : label is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of inst : label is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of inst : label is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of inst : label is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of inst : label is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of inst : label is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of inst : label is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of inst : label is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of inst : label is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of inst : label is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of inst : label is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of inst : label is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of inst : label is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of inst : label is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of inst : label is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of inst : label is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of inst : label is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of inst : label is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of inst : label is 0;
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of inst : label is 16;
begin
inst: entity work.design_1_axi_smc_0_sc_node_v1_0_10_top
     port map (
      m_axis_arb_tdata(15 downto 0) => NLW_inst_m_axis_arb_tdata_UNCONNECTED(15 downto 0),
      m_axis_arb_tready => '1',
      m_axis_arb_tvalid => NLW_inst_m_axis_arb_tvalid_UNCONNECTED,
      m_sc_aclk => '0',
      m_sc_aclken => '1',
      m_sc_aresetn => '0',
      m_sc_info(0) => NLW_inst_m_sc_info_UNCONNECTED(0),
      m_sc_payld(140 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(140 downto 0),
      m_sc_recv(0) => '0',
      m_sc_req(0) => NLW_inst_m_sc_req_UNCONNECTED(0),
      m_sc_send(0) => M_SC_AR_send(0),
      s_axis_arb_tdata(15 downto 0) => B"0000000000000000",
      s_axis_arb_tready => NLW_inst_s_axis_arb_tready_UNCONNECTED,
      s_axis_arb_tvalid => '0',
      s_sc_aclk => aclk,
      s_sc_aclken => '1',
      s_sc_aresetn => interconnect_aresetn(0),
      s_sc_info(0) => '1',
      s_sc_payld(140 downto 0) => B"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      s_sc_recv(0) => NLW_inst_s_sc_recv_UNCONNECTED(0),
      s_sc_req(0) => '0',
      s_sc_send(0) => M01_AXI_arvalid(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_m01awn_0 is
  port (
    M_SC_AW_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_awvalid : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_m01awn_0 : entity is "bd_afc3_m01awn_0";
end design_1_axi_smc_0_bd_afc3_m01awn_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_m01awn_0 is
  signal NLW_inst_m_axis_arb_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axis_arb_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axis_arb_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 140 downto 0 );
  signal NLW_inst_m_sc_req_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_sc_recv_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of inst : label is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of inst : label is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of inst : label is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of inst : label is 3;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of inst : label is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of inst : label is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of inst : label is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of inst : label is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of inst : label is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of inst : label is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of inst : label is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of inst : label is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 141;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of inst : label is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of inst : label is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of inst : label is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of inst : label is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of inst : label is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of inst : label is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of inst : label is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of inst : label is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of inst : label is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of inst : label is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of inst : label is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of inst : label is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of inst : label is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of inst : label is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of inst : label is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of inst : label is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of inst : label is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of inst : label is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of inst : label is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of inst : label is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of inst : label is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of inst : label is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of inst : label is 0;
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of inst : label is 16;
begin
inst: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized0\
     port map (
      m_axis_arb_tdata(15 downto 0) => NLW_inst_m_axis_arb_tdata_UNCONNECTED(15 downto 0),
      m_axis_arb_tready => '1',
      m_axis_arb_tvalid => NLW_inst_m_axis_arb_tvalid_UNCONNECTED,
      m_sc_aclk => '0',
      m_sc_aclken => '1',
      m_sc_aresetn => '0',
      m_sc_info(0) => NLW_inst_m_sc_info_UNCONNECTED(0),
      m_sc_payld(140 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(140 downto 0),
      m_sc_recv(0) => '0',
      m_sc_req(0) => NLW_inst_m_sc_req_UNCONNECTED(0),
      m_sc_send(0) => M_SC_AW_send(0),
      s_axis_arb_tdata(15 downto 0) => B"0000000000000000",
      s_axis_arb_tready => NLW_inst_s_axis_arb_tready_UNCONNECTED,
      s_axis_arb_tvalid => '0',
      s_sc_aclk => aclk,
      s_sc_aclken => '1',
      s_sc_aresetn => interconnect_aresetn(0),
      s_sc_info(0) => '1',
      s_sc_payld(140 downto 0) => B"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      s_sc_recv(0) => NLW_inst_s_sc_recv_UNCONNECTED(0),
      s_sc_req(0) => '0',
      s_sc_send(0) => M01_AXI_awvalid(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_m01bn_0 is
  port (
    M_SC_B_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_B_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_bvalid : in STD_LOGIC;
    M01_AXI_bready : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_m01bn_0 : entity is "bd_afc3_m01bn_0";
end design_1_axi_smc_0_bd_afc3_m01bn_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_m01bn_0 is
  signal NLW_inst_m_axis_arb_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axis_arb_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axis_arb_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 6 downto 0 );
  signal NLW_inst_s_sc_recv_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of inst : label is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of inst : label is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of inst : label is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of inst : label is 4;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of inst : label is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of inst : label is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of inst : label is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of inst : label is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of inst : label is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of inst : label is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of inst : label is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of inst : label is 1;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 7;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of inst : label is 3;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of inst : label is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of inst : label is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of inst : label is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of inst : label is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of inst : label is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of inst : label is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of inst : label is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of inst : label is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of inst : label is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of inst : label is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of inst : label is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of inst : label is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of inst : label is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of inst : label is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of inst : label is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of inst : label is 3;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of inst : label is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of inst : label is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of inst : label is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of inst : label is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of inst : label is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of inst : label is 0;
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of inst : label is 16;
begin
inst: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized1\
     port map (
      m_axis_arb_tdata(15 downto 0) => NLW_inst_m_axis_arb_tdata_UNCONNECTED(15 downto 0),
      m_axis_arb_tready => '1',
      m_axis_arb_tvalid => NLW_inst_m_axis_arb_tvalid_UNCONNECTED,
      m_sc_aclk => '0',
      m_sc_aclken => '1',
      m_sc_aresetn => '0',
      m_sc_info(0) => NLW_inst_m_sc_info_UNCONNECTED(0),
      m_sc_payld(6 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(6 downto 0),
      m_sc_recv(0) => M01_AXI_bready,
      m_sc_req(0) => M_SC_B_req(0),
      m_sc_send(0) => M_SC_B_send(0),
      s_axis_arb_tdata(15 downto 0) => B"0000000000000000",
      s_axis_arb_tready => NLW_inst_s_axis_arb_tready_UNCONNECTED,
      s_axis_arb_tvalid => '0',
      s_sc_aclk => aclk,
      s_sc_aclken => '1',
      s_sc_aresetn => interconnect_aresetn(0),
      s_sc_info(0) => '0',
      s_sc_payld(6 downto 0) => B"0000000",
      s_sc_recv(0) => NLW_inst_s_sc_recv_UNCONNECTED(0),
      s_sc_req(0) => '0',
      s_sc_send(0) => M01_AXI_bvalid
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_m01e_0 is
  port (
    M_SC_AW_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_W_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AR_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_awvalid : out STD_LOGIC;
    M01_AXI_wvalid : out STD_LOGIC;
    M01_AXI_arvalid : out STD_LOGIC;
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AW_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_W_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_bready : in STD_LOGIC;
    M_SC_AR_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_rready : in STD_LOGIC;
    M01_AXI_awready : in STD_LOGIC;
    M01_AXI_wready : in STD_LOGIC;
    M01_AXI_bvalid : in STD_LOGIC;
    M01_AXI_arready : in STD_LOGIC;
    M01_AXI_rvalid : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_m01e_0 : entity is "bd_afc3_m01e_0";
end design_1_axi_smc_0_bd_afc3_m01e_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_m01e_0 is
  signal NLW_inst_m_axi_bready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axi_rready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axi_wlast_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axi_bvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axi_rlast_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axi_rvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axi_araddr_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_m_axi_arburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_axi_arcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_arid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_arlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_m_axi_arlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_arprot_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_m_axi_arqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_arsize_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_m_axi_aruser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_awaddr_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_m_axi_awburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_axi_awcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_awid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_awlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_m_axi_awlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_awprot_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_m_axi_awqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_awsize_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_m_axi_awuser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_wdata_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_inst_m_axi_wid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_wstrb_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_wuser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_axi_bid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_axi_bresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_s_axi_buser_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  signal NLW_inst_s_axi_rdata_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_inst_s_axi_rid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_axi_rresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_s_axi_ruser_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 8;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "1'b0";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_HAS_LOCK : integer;
  attribute C_HAS_LOCK of inst : label is 0;
  attribute C_IS_CASCADED : integer;
  attribute C_IS_CASCADED of inst : label is 0;
  attribute C_MAX_RUSER_BITS_PER_BYTE : integer;
  attribute C_MAX_RUSER_BITS_PER_BYTE of inst : label is 0;
  attribute C_MAX_WUSER_BITS_PER_BYTE : integer;
  attribute C_MAX_WUSER_BITS_PER_BYTE of inst : label is 0;
  attribute C_MEP_IDENTIFIER_WIDTH : integer;
  attribute C_MEP_IDENTIFIER_WIDTH of inst : label is 1;
  attribute C_M_ARUSER_WIDTH : integer;
  attribute C_M_ARUSER_WIDTH of inst : label is 0;
  attribute C_M_AWUSER_WIDTH : integer;
  attribute C_M_AWUSER_WIDTH of inst : label is 0;
  attribute C_M_BUSER_WIDTH : integer;
  attribute C_M_BUSER_WIDTH of inst : label is 0;
  attribute C_M_ID_WIDTH : integer;
  attribute C_M_ID_WIDTH of inst : label is 0;
  attribute C_M_LIMIT_READ_LENGTH : integer;
  attribute C_M_LIMIT_READ_LENGTH of inst : label is 0;
  attribute C_M_LIMIT_WRITE_LENGTH : integer;
  attribute C_M_LIMIT_WRITE_LENGTH of inst : label is 0;
  attribute C_M_PROTOCOL : integer;
  attribute C_M_PROTOCOL of inst : label is 2;
  attribute C_M_RUSER_BITS_PER_BYTE : integer;
  attribute C_M_RUSER_BITS_PER_BYTE of inst : label is 0;
  attribute C_M_RUSER_WIDTH : integer;
  attribute C_M_RUSER_WIDTH of inst : label is 0;
  attribute C_M_WUSER_BITS_PER_BYTE : integer;
  attribute C_M_WUSER_BITS_PER_BYTE of inst : label is 0;
  attribute C_M_WUSER_WIDTH : integer;
  attribute C_M_WUSER_WIDTH of inst : label is 0;
  attribute C_NUM_MSC : integer;
  attribute C_NUM_MSC of inst : label is 2;
  attribute C_NUM_READ_OUTSTANDING : integer;
  attribute C_NUM_READ_OUTSTANDING of inst : label is 8;
  attribute C_NUM_WRITE_OUTSTANDING : integer;
  attribute C_NUM_WRITE_OUTSTANDING of inst : label is 8;
  attribute C_RDATA_WIDTH : integer;
  attribute C_RDATA_WIDTH of inst : label is 32;
  attribute C_READ_ACCEPTANCE : integer;
  attribute C_READ_ACCEPTANCE of inst : label is 32;
  attribute C_SINGLE_ISSUING : integer;
  attribute C_SINGLE_ISSUING of inst : label is 1;
  attribute C_SSC_ROUTE_ARRAY : string;
  attribute C_SSC_ROUTE_ARRAY of inst : label is "6'b101111";
  attribute C_SSC_ROUTE_WIDTH : integer;
  attribute C_SSC_ROUTE_WIDTH of inst : label is 3;
  attribute C_S_ID_WIDTH : integer;
  attribute C_S_ID_WIDTH of inst : label is 1;
  attribute C_WDATA_WIDTH : integer;
  attribute C_WDATA_WIDTH of inst : label is 32;
  attribute C_WRITE_ACCEPTANCE : integer;
  attribute C_WRITE_ACCEPTANCE of inst : label is 32;
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of inst : label is "yes";
  attribute P_BYPASS : integer;
  attribute P_BYPASS of inst : label is 0;
  attribute P_FULLY_PIPELINED : integer;
  attribute P_FULLY_PIPELINED of inst : label is 2;
  attribute P_NUM_READ_OUTSTANDING : integer;
  attribute P_NUM_READ_OUTSTANDING of inst : label is 16;
  attribute P_NUM_WRITE_OUTSTANDING : integer;
  attribute P_NUM_WRITE_OUTSTANDING of inst : label is 16;
  attribute P_ZERO_LATENCY : integer;
  attribute P_ZERO_LATENCY of inst : label is 1;
begin
inst: entity work.design_1_axi_smc_0_sc_exit_v1_0_9_top
     port map (
      aclk => aclk,
      aclken => '1',
      aresetn => interconnect_aresetn(0),
      m_axi_araddr(7 downto 0) => NLW_inst_m_axi_araddr_UNCONNECTED(7 downto 0),
      m_axi_arburst(1 downto 0) => NLW_inst_m_axi_arburst_UNCONNECTED(1 downto 0),
      m_axi_arcache(3 downto 0) => NLW_inst_m_axi_arcache_UNCONNECTED(3 downto 0),
      m_axi_arid(0) => NLW_inst_m_axi_arid_UNCONNECTED(0),
      m_axi_arlen(7 downto 0) => NLW_inst_m_axi_arlen_UNCONNECTED(7 downto 0),
      m_axi_arlock(0) => NLW_inst_m_axi_arlock_UNCONNECTED(0),
      m_axi_arprot(2 downto 0) => NLW_inst_m_axi_arprot_UNCONNECTED(2 downto 0),
      m_axi_arqos(3 downto 0) => NLW_inst_m_axi_arqos_UNCONNECTED(3 downto 0),
      m_axi_arready => M01_AXI_arready,
      m_axi_arsize(2 downto 0) => NLW_inst_m_axi_arsize_UNCONNECTED(2 downto 0),
      m_axi_aruser(0) => NLW_inst_m_axi_aruser_UNCONNECTED(0),
      m_axi_arvalid => M01_AXI_arvalid,
      m_axi_awaddr(7 downto 0) => NLW_inst_m_axi_awaddr_UNCONNECTED(7 downto 0),
      m_axi_awburst(1 downto 0) => NLW_inst_m_axi_awburst_UNCONNECTED(1 downto 0),
      m_axi_awcache(3 downto 0) => NLW_inst_m_axi_awcache_UNCONNECTED(3 downto 0),
      m_axi_awid(0) => NLW_inst_m_axi_awid_UNCONNECTED(0),
      m_axi_awlen(7 downto 0) => NLW_inst_m_axi_awlen_UNCONNECTED(7 downto 0),
      m_axi_awlock(0) => NLW_inst_m_axi_awlock_UNCONNECTED(0),
      m_axi_awprot(2 downto 0) => NLW_inst_m_axi_awprot_UNCONNECTED(2 downto 0),
      m_axi_awqos(3 downto 0) => NLW_inst_m_axi_awqos_UNCONNECTED(3 downto 0),
      m_axi_awready => M01_AXI_awready,
      m_axi_awsize(2 downto 0) => NLW_inst_m_axi_awsize_UNCONNECTED(2 downto 0),
      m_axi_awuser(0) => NLW_inst_m_axi_awuser_UNCONNECTED(0),
      m_axi_awvalid => M01_AXI_awvalid,
      m_axi_bid(0) => '0',
      m_axi_bready => NLW_inst_m_axi_bready_UNCONNECTED,
      m_axi_bresp(1 downto 0) => B"00",
      m_axi_buser(0) => '0',
      m_axi_bvalid => M01_AXI_bvalid,
      m_axi_rdata(31 downto 0) => B"00000000000000000000000000000000",
      m_axi_rid(0) => '0',
      m_axi_rlast => '1',
      m_axi_rready => NLW_inst_m_axi_rready_UNCONNECTED,
      m_axi_rresp(1 downto 0) => B"00",
      m_axi_ruser(0) => '0',
      m_axi_rvalid => M01_AXI_rvalid,
      m_axi_wdata(31 downto 0) => NLW_inst_m_axi_wdata_UNCONNECTED(31 downto 0),
      m_axi_wid(0) => NLW_inst_m_axi_wid_UNCONNECTED(0),
      m_axi_wlast => NLW_inst_m_axi_wlast_UNCONNECTED,
      m_axi_wready => M01_AXI_wready,
      m_axi_wstrb(3 downto 0) => NLW_inst_m_axi_wstrb_UNCONNECTED(3 downto 0),
      m_axi_wuser(0) => NLW_inst_m_axi_wuser_UNCONNECTED(0),
      m_axi_wvalid => M01_AXI_wvalid,
      s_axi_araddr(7 downto 0) => B"00000000",
      s_axi_arcache(3 downto 0) => B"0000",
      s_axi_arid(0) => '0',
      s_axi_arlen(7 downto 0) => B"00000000",
      s_axi_arlock(0) => '0',
      s_axi_arprot(2 downto 0) => B"000",
      s_axi_arqos(3 downto 0) => B"0000",
      s_axi_arready => M_SC_AR_recv(0),
      s_axi_aruser(1023 downto
      s_axi_arvalid => M_SC_AR_send(0),
      s_axi_awaddr(7 downto 0) => B"00000000",
      s_axi_awcache(3 downto 0) => B"0000",
      s_axi_awid(0) => '0',
      s_axi_awlen(7 downto 0) => B"00000000",
      s_axi_awlock(0) => '0',
      s_axi_awprot(2 downto 0) => B"000",
      s_axi_awqos(3 downto 0) => B"0000",
      s_axi_awready => M_SC_AW_recv(0),
      s_axi_awuser(1023 downto
      s_axi_awvalid => M_SC_AW_send(0),
      s_axi_bid(0) => NLW_inst_s_axi_bid_UNCONNECTED(0),
      s_axi_bready => M01_AXI_bready,
      s_axi_bresp(1 downto 0) => NLW_inst_s_axi_bresp_UNCONNECTED(1 downto 0),
      s_axi_buser(1023 downto 0) => NLW_inst_s_axi_buser_UNCONNECTED(1023 downto 0),
      s_axi_bvalid => NLW_inst_s_axi_bvalid_UNCONNECTED,
      s_axi_rdata(31 downto 0) => NLW_inst_s_axi_rdata_UNCONNECTED(31 downto 0),
      s_axi_rid(0) => NLW_inst_s_axi_rid_UNCONNECTED(0),
      s_axi_rlast => NLW_inst_s_axi_rlast_UNCONNECTED,
      s_axi_rready => M01_AXI_rready,
      s_axi_rresp(1 downto 0) => NLW_inst_s_axi_rresp_UNCONNECTED(1 downto 0),
      s_axi_ruser(1023 downto 0) => NLW_inst_s_axi_ruser_UNCONNECTED(1023 downto 0),
      s_axi_rvalid => NLW_inst_s_axi_rvalid_UNCONNECTED,
      s_axi_wdata(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_wlast => '0',
      s_axi_wready => M_SC_W_recv(0),
      s_axi_wstrb(3 downto 0) => B"0000",
      s_axi_wuser(1023 downto
      s_axi_wvalid => M_SC_W_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_m01rn_0 is
  port (
    M_SC_R_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_R_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_rvalid : in STD_LOGIC;
    M01_AXI_rready : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_m01rn_0 : entity is "bd_afc3_m01rn_0";
end design_1_axi_smc_0_bd_afc3_m01rn_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_m01rn_0 is
  signal NLW_inst_m_axis_arb_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axis_arb_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axis_arb_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 52 downto 0 );
  signal NLW_inst_s_sc_recv_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of inst : label is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of inst : label is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of inst : label is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of inst : label is 0;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of inst : label is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of inst : label is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of inst : label is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of inst : label is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of inst : label is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of inst : label is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of inst : label is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of inst : label is 1;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 53;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of inst : label is 3;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of inst : label is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of inst : label is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of inst : label is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of inst : label is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of inst : label is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of inst : label is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of inst : label is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of inst : label is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of inst : label is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of inst : label is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of inst : label is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of inst : label is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of inst : label is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of inst : label is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of inst : label is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of inst : label is 3;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of inst : label is 1;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of inst : label is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of inst : label is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of inst : label is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of inst : label is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of inst : label is 0;
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of inst : label is 16;
begin
inst: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized2\
     port map (
      m_axis_arb_tdata(15 downto 0) => NLW_inst_m_axis_arb_tdata_UNCONNECTED(15 downto 0),
      m_axis_arb_tready => '1',
      m_axis_arb_tvalid => NLW_inst_m_axis_arb_tvalid_UNCONNECTED,
      m_sc_aclk => '0',
      m_sc_aclken => '1',
      m_sc_aresetn => '0',
      m_sc_info(0) => NLW_inst_m_sc_info_UNCONNECTED(0),
      m_sc_payld(52 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(52 downto 0),
      m_sc_recv(0) => M01_AXI_rready,
      m_sc_req(0) => M_SC_R_req(0),
      m_sc_send(0) => M_SC_R_send(0),
      s_axis_arb_tdata(15 downto 0) => B"0000000000000000",
      s_axis_arb_tready => NLW_inst_s_axis_arb_tready_UNCONNECTED,
      s_axis_arb_tvalid => '0',
      s_sc_aclk => aclk,
      s_sc_aclken => '1',
      s_sc_aresetn => interconnect_aresetn(0),
      s_sc_info(0) => '0',
      s_sc_payld(52 downto 0) => B"00000000000000000000000000000000000000000000000000000",
      s_sc_recv(0) => NLW_inst_s_sc_recv_UNCONNECTED(0),
      s_sc_req(0) => '0',
      s_sc_send(0) => M01_AXI_rvalid
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_m01wn_0 is
  port (
    M_SC_W_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_wvalid : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_m01wn_0 : entity is "bd_afc3_m01wn_0";
end design_1_axi_smc_0_bd_afc3_m01wn_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_m01wn_0 is
  signal NLW_inst_m_axis_arb_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axis_arb_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axis_arb_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 54 downto 0 );
  signal NLW_inst_m_sc_req_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_sc_recv_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of inst : label is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of inst : label is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of inst : label is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of inst : label is 1;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of inst : label is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of inst : label is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of inst : label is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of inst : label is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of inst : label is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of inst : label is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of inst : label is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of inst : label is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 55;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of inst : label is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of inst : label is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of inst : label is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of inst : label is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of inst : label is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of inst : label is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of inst : label is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of inst : label is 2;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of inst : label is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of inst : label is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of inst : label is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of inst : label is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of inst : label is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of inst : label is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of inst : label is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of inst : label is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of inst : label is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of inst : label is 1;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of inst : label is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of inst : label is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of inst : label is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of inst : label is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of inst : label is 0;
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of inst : label is 16;
begin
inst: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized3\
     port map (
      m_axis_arb_tdata(15 downto 0) => NLW_inst_m_axis_arb_tdata_UNCONNECTED(15 downto 0),
      m_axis_arb_tready => '1',
      m_axis_arb_tvalid => NLW_inst_m_axis_arb_tvalid_UNCONNECTED,
      m_sc_aclk => '0',
      m_sc_aclken => '1',
      m_sc_aresetn => '0',
      m_sc_info(0) => NLW_inst_m_sc_info_UNCONNECTED(0),
      m_sc_payld(54 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(54 downto 0),
      m_sc_recv(0) => '0',
      m_sc_req(0) => NLW_inst_m_sc_req_UNCONNECTED(0),
      m_sc_send(0) => M_SC_W_send(0),
      s_axis_arb_tdata(15 downto 0) => B"0000000000000000",
      s_axis_arb_tready => NLW_inst_s_axis_arb_tready_UNCONNECTED,
      s_axis_arb_tvalid => '0',
      s_sc_aclk => aclk,
      s_sc_aclken => '1',
      s_sc_aresetn => interconnect_aresetn(0),
      s_sc_info(0) => '0',
      s_sc_payld(54 downto 0) => B"0000000000000000000000000000000000000000000000000000000",
      s_sc_recv(0) => NLW_inst_s_sc_recv_UNCONNECTED(0),
      s_sc_req(0) => '0',
      s_sc_send(0) => M01_AXI_wvalid(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_routsw_0 is
  port (
    m_sc_payld : out STD_LOGIC_VECTOR ( 33 downto 0 );
    S01_SC_R_payld : in STD_LOGIC_VECTOR ( 33 downto 0 );
    M01_AXI_rready : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_routsw_0 : entity is "bd_afc3_routsw_0";
end design_1_axi_smc_0_bd_afc3_routsw_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_routsw_0 is
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 20 downto 0 );
  signal NLW_inst_m_sc_req_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_sc_send_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_s_sc_recv_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute C_CONNECTIVITY : string;
  attribute C_CONNECTIVITY of inst : label is "2'b11";
  attribute C_M_PIPELINES : string;
  attribute C_M_PIPELINES of inst : label is "32'b00000000000000000000000000000000";
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 1;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 2;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 53;
  attribute C_S_LATENCY : string;
  attribute C_S_LATENCY of inst : label is "32'b00000000000000000000000000000000";
  attribute C_S_PIPELINES : string;
  attribute C_S_PIPELINES of inst : label is "32'b00000000000000000000000000000000";
  attribute C_TESTING_MODE : integer;
  attribute C_TESTING_MODE of inst : label is 0;
  attribute K_MAX_INFO_WIDTH : integer;
  attribute K_MAX_INFO_WIDTH of inst : label is 1;
  attribute LP_LOG_NUM_SI : string;
  attribute LP_LOG_NUM_SI of inst : label is "32'b00000000000000000000000000000001";
  attribute LP_MUX_IMPL : string;
  attribute LP_MUX_IMPL of inst : label is "32'b00000000000000000000000000000000";
  attribute LP_M_SC_SEL_MI_PIPELINE_DEPTH : string;
  attribute LP_M_SC_SEL_MI_PIPELINE_DEPTH of inst : label is "32'b00000000000000000000000000000000";
begin
inst: entity work.\design_1_axi_smc_0_sc_switchboard_v1_0_6_top__parameterized4\
     port map (
      aclk => '0',
      aclken => '1',
      connectivity(1 downto 0) => B"11",
      m_sc_info(1 downto 0) => NLW_inst_m_sc_info_UNCONNECTED(1 downto 0),
      m_sc_payld(52 downto 21) => m_sc_payld(33 downto 2),
      m_sc_payld(20) => NLW_inst_m_sc_payld_UNCONNECTED(20),
      m_sc_payld(19 downto 18) => m_sc_payld(1 downto 0),
      m_sc_payld(17 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(17 downto 0),
      m_sc_recv(1) => M01_AXI_rready,
      m_sc_recv(0) => '0',
      m_sc_req(1 downto 0) => NLW_inst_m_sc_req_UNCONNECTED(1 downto 0),
      m_sc_send(1 downto 0) => NLW_inst_m_sc_send_UNCONNECTED(1 downto 0),
      s_sc_info(1 downto 0) => B"00",
      s_sc_payld(105 downto 74) => S01_SC_R_payld(33 downto 2),
      s_sc_payld(73) => '0',
      s_sc_payld(72 downto 71) => S01_SC_R_payld(1 downto 0),
      s_sc_payld(70 downto 0) => B"00000000000000000000000000000000000000000000000000000000000000000000000",
      s_sc_recv(1 downto 0) => NLW_inst_s_sc_recv_UNCONNECTED(1 downto 0),
      s_sc_req(1 downto 0) => B"00",
      s_sc_send(1 downto 0) => B"00"
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_s00sic_0 is
  port (
    s_axi_awready : out STD_LOGIC;
    s_axi_wready : out STD_LOGIC;
    s_axi_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_bvalid : out STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    s_axi_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_rlast : out STD_LOGIC;
    s_axi_rvalid : out STD_LOGIC;
    S_SC_AW_payld : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_awvalid : out STD_LOGIC;
    S_SC_W_payld : out STD_LOGIC_VECTOR ( 35 downto 0 );
    m_axi_wvalid : out STD_LOGIC;
    m_axi_bready : out STD_LOGIC;
    S_SC_AR_payld : out STD_LOGIC_VECTOR ( 11 downto 0 );
    m_axi_arvalid : out STD_LOGIC;
    m_axi_rready : out STD_LOGIC;
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awaddr : in STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \aw_incr_reg[2]\ : in STD_LOGIC;
    S00_AXI_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S00_AXI_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_wlast : in STD_LOGIC;
    s_axi_wready_i_reg : in STD_LOGIC;
    S00_AXI_bready : in STD_LOGIC;
    m_axi_araddr : in STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_arlen : in STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arsize : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \FSM_sequential_r_state_reg[0]\ : in STD_LOGIC;
    S00_AXI_rready : in STD_LOGIC;
    S_SC_AW_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_W_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_B_payld : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_SC_B_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AR_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_R_payld : in STD_LOGIC_VECTOR ( 33 downto 0 );
    M_SC_R_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_s00sic_0 : entity is "bd_afc3_s00sic_0";
end design_1_axi_smc_0_bd_afc3_s00sic_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_s00sic_0 is
  signal NLW_inst_m_axi_wlast_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axi_araddr_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 8 );
  signal NLW_inst_m_axi_arcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_arid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_arlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_m_axi_arlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_arqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_aruser_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  signal NLW_inst_m_axi_awaddr_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 8 );
  signal NLW_inst_m_axi_awcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_awid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_awlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_m_axi_awlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_awprot_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_m_axi_awqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_awuser_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  signal NLW_inst_m_axi_wuser_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  signal NLW_inst_s_axi_bid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_axi_buser_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  signal NLW_inst_s_axi_rid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_axi_ruser_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_AXILITE_CONV : integer;
  attribute C_AXILITE_CONV of inst : label is 1;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "1'b1";
  attribute C_HAS_BURST : integer;
  attribute C_HAS_BURST of inst : label is 1;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_IS_CASCADED : integer;
  attribute C_IS_CASCADED of inst : label is 0;
  attribute C_LIMIT_READ_LENGTH : integer;
  attribute C_LIMIT_READ_LENGTH of inst : label is 0;
  attribute C_LIMIT_WRITE_LENGTH : integer;
  attribute C_LIMIT_WRITE_LENGTH of inst : label is 0;
  attribute C_MAX_RUSER_BITS_PER_BYTE : integer;
  attribute C_MAX_RUSER_BITS_PER_BYTE of inst : label is 0;
  attribute C_MAX_WUSER_BITS_PER_BYTE : integer;
  attribute C_MAX_WUSER_BITS_PER_BYTE of inst : label is 0;
  attribute C_MEP_IDENTIFIER_WIDTH : integer;
  attribute C_MEP_IDENTIFIER_WIDTH of inst : label is 1;
  attribute C_MSC_RDATA_WIDTH_ARRAY : string;
  attribute C_MSC_RDATA_WIDTH_ARRAY of inst : label is "64'b0000000000000000000000000010000000000000000000000000000000100000";
  attribute C_MSC_WDATA_WIDTH_ARRAY : string;
  attribute C_MSC_WDATA_WIDTH_ARRAY of inst : label is "64'b0000000000000000000000000010000000000000000000000000000000100000";
  attribute C_NUM_MSC : integer;
  attribute C_NUM_MSC of inst : label is 2;
  attribute C_NUM_READ_OUTSTANDING : integer;
  attribute C_NUM_READ_OUTSTANDING of inst : label is 8;
  attribute C_NUM_READ_THREADS : integer;
  attribute C_NUM_READ_THREADS of inst : label is 1;
  attribute C_NUM_SEG : integer;
  attribute C_NUM_SEG of inst : label is 1;
  attribute C_NUM_WRITE_OUTSTANDING : integer;
  attribute C_NUM_WRITE_OUTSTANDING of inst : label is 8;
  attribute C_NUM_WRITE_THREADS : integer;
  attribute C_NUM_WRITE_THREADS of inst : label is 1;
  attribute C_RDATA_WIDTH : integer;
  attribute C_RDATA_WIDTH of inst : label is 32;
  attribute C_READ_ACCEPTANCE : integer;
  attribute C_READ_ACCEPTANCE of inst : label is 32;
  attribute C_READ_WATERMARK : integer;
  attribute C_READ_WATERMARK of inst : label is 0;
  attribute C_SEP_PROTOCOL_ARRAY : integer;
  attribute C_SEP_PROTOCOL_ARRAY of inst : label is 2;
  attribute C_SEP_RDATA_WIDTH_ARRAY : integer;
  attribute C_SEP_RDATA_WIDTH_ARRAY of inst : label is 32;
  attribute C_SEP_WDATA_WIDTH_ARRAY : integer;
  attribute C_SEP_WDATA_WIDTH_ARRAY of inst : label is 32;
  attribute C_SINGLE_ISSUING : integer;
  attribute C_SINGLE_ISSUING of inst : label is 1;
  attribute C_SUPPORTS_NARROW : integer;
  attribute C_SUPPORTS_NARROW of inst : label is 0;
  attribute C_S_RUSER_BITS_PER_BYTE : integer;
  attribute C_S_RUSER_BITS_PER_BYTE of inst : label is 0;
  attribute C_S_WUSER_BITS_PER_BYTE : integer;
  attribute C_S_WUSER_BITS_PER_BYTE of inst : label is 0;
  attribute C_WDATA_WIDTH : integer;
  attribute C_WDATA_WIDTH of inst : label is 32;
  attribute C_WRITE_ACCEPTANCE : integer;
  attribute C_WRITE_ACCEPTANCE of inst : label is 32;
  attribute C_WRITE_WATERMARK : integer;
  attribute C_WRITE_WATERMARK of inst : label is 0;
  attribute P_EXOK : string;
  attribute P_EXOK of inst : label is "2'b01";
  attribute P_FULLY_PIPELINED : integer;
  attribute P_FULLY_PIPELINED of inst : label is 2;
  attribute P_ID_WIDTH : integer;
  attribute P_ID_WIDTH of inst : label is 1;
  attribute P_MAX_RUSER_BITS_PER_BYTE : integer;
  attribute P_MAX_RUSER_BITS_PER_BYTE of inst : label is 1;
  attribute P_MAX_WUSER_BITS_PER_BYTE : integer;
  attribute P_MAX_WUSER_BITS_PER_BYTE of inst : label is 1;
  attribute P_NUM_READ_OUTSTANDING : integer;
  attribute P_NUM_READ_OUTSTANDING of inst : label is 16;
  attribute P_NUM_WRITE_OUTSTANDING : integer;
  attribute P_NUM_WRITE_OUTSTANDING of inst : label is 16;
  attribute P_R_DWBYTES : integer;
  attribute P_R_DWBYTES of inst : label is 4;
  attribute P_R_DWSIZE : integer;
  attribute P_R_DWSIZE of inst : label is 2;
  attribute P_S_RUSER_BITS_PER_BYTE : integer;
  attribute P_S_RUSER_BITS_PER_BYTE of inst : label is 1;
  attribute P_S_WUSER_BITS_PER_BYTE : integer;
  attribute P_S_WUSER_BITS_PER_BYTE of inst : label is 1;
  attribute P_W_DWBYTES : integer;
  attribute P_W_DWBYTES of inst : label is 4;
  attribute P_W_DWSIZE : integer;
  attribute P_W_DWSIZE of inst : label is 2;
  attribute P_ZERO_LATENCY : integer;
  attribute P_ZERO_LATENCY of inst : label is 1;
begin
inst: entity work.design_1_axi_smc_0_sc_si_converter_v1_0_9_top
     port map (
      aclk => aclk,
      aclken => '1',
      aresetn => interconnect_aresetn(0),
      m_axi_araddr(31 downto 8) => NLW_inst_m_axi_araddr_UNCONNECTED(31 downto 8),
      m_axi_araddr(7 downto 0) => S_SC_AR_payld(8 downto 1),
      m_axi_arcache(3 downto 0) => NLW_inst_m_axi_arcache_UNCONNECTED(3 downto 0),
      m_axi_arid(0) => NLW_inst_m_axi_arid_UNCONNECTED(0),
      m_axi_arlen(7 downto 0) => NLW_inst_m_axi_arlen_UNCONNECTED(7 downto 0),
      m_axi_arlock(0) => NLW_inst_m_axi_arlock_UNCONNECTED(0),
      m_axi_arprot(2 downto 0) => S_SC_AR_payld(11 downto 9),
      m_axi_arqos(3 downto 0) => NLW_inst_m_axi_arqos_UNCONNECTED(3 downto 0),
      m_axi_arready => S_SC_AR_recv(0),
      m_axi_aruser(1023 downto 3) => NLW_inst_m_axi_aruser_UNCONNECTED(1023 downto 3),
      m_axi_aruser(2) => S_SC_AR_payld(0),
      m_axi_aruser(1 downto 0) => NLW_inst_m_axi_aruser_UNCONNECTED(1 downto 0),
      m_axi_arvalid => m_axi_arvalid,
      m_axi_awaddr(31 downto 8) => NLW_inst_m_axi_awaddr_UNCONNECTED(31 downto 8),
      m_axi_awaddr(7 downto 0) => S_SC_AW_payld(7 downto 0),
      m_axi_awcache(3 downto 0) => NLW_inst_m_axi_awcache_UNCONNECTED(3 downto 0),
      m_axi_awid(0) => NLW_inst_m_axi_awid_UNCONNECTED(0),
      m_axi_awlen(7 downto 0) => NLW_inst_m_axi_awlen_UNCONNECTED(7 downto 0),
      m_axi_awlock(0) => NLW_inst_m_axi_awlock_UNCONNECTED(0),
      m_axi_awprot(2 downto 0) => NLW_inst_m_axi_awprot_UNCONNECTED(2 downto 0),
      m_axi_awqos(3 downto 0) => NLW_inst_m_axi_awqos_UNCONNECTED(3 downto 0),
      m_axi_awready => S_SC_AW_recv(0),
      m_axi_awuser(1023 downto 0) => NLW_inst_m_axi_awuser_UNCONNECTED(1023 downto 0),
      m_axi_awvalid => m_axi_awvalid,
      m_axi_bid(0) => '0',
      m_axi_bready => m_axi_bready,
      m_axi_bresp(1 downto 0) => M_SC_B_payld(1 downto 0),
      m_axi_buser(1023 downto
      m_axi_bvalid => M_SC_B_send(0),
      m_axi_rdata(31 downto 0) => M_SC_R_payld(33 downto 2),
      m_axi_rid(0) => '0',
      m_axi_rlast => '0',
      m_axi_rready => m_axi_rready,
      m_axi_rresp(1 downto 0) => M_SC_R_payld(1 downto 0),
      m_axi_ruser(1023 downto
      m_axi_rvalid => M_SC_R_send(0),
      m_axi_wdata(31 downto 24) => S_SC_W_payld(35 downto 28),
      m_axi_wdata(23 downto 16) => S_SC_W_payld(26 downto 19),
      m_axi_wdata(15 downto 8) => S_SC_W_payld(17 downto 10),
      m_axi_wdata(7 downto 0) => S_SC_W_payld(8 downto 1),
      m_axi_wlast => NLW_inst_m_axi_wlast_UNCONNECTED,
      m_axi_wready => S_SC_W_recv(0),
      m_axi_wstrb(3) => S_SC_W_payld(27),
      m_axi_wstrb(2) => S_SC_W_payld(18),
      m_axi_wstrb(1) => S_SC_W_payld(9),
      m_axi_wstrb(0) => S_SC_W_payld(0),
      m_axi_wuser(1023 downto 0) => NLW_inst_m_axi_wuser_UNCONNECTED(1023 downto 0),
      m_axi_wvalid => m_axi_wvalid,
      s_axi_araddr(31 downto 8) => B"000000000000000000000000",
      s_axi_araddr(7 downto 0) => m_axi_araddr(7 downto 0),
      s_axi_arburst(1 downto 0) => B"00",
      s_axi_arcache(3 downto 0) => B"0000",
      s_axi_arid(0) => '0',
      s_axi_arlen(7 downto 4) => B"0000",
      s_axi_arlen(3 downto 0) => m_axi_arlen(3 downto 0),
      s_axi_arlock(0) => '0',
      s_axi_arprot(2 downto 0) => m_axi_arprot(2 downto 0),
      s_axi_arqos(3 downto 0) => B"0000",
      s_axi_arready => s_axi_arready,
      s_axi_arsize(2) => '0',
      s_axi_arsize(1 downto 0) => m_axi_arsize(1 downto 0),
      s_axi_aruser(1023 downto
      s_axi_arvalid => \FSM_sequential_r_state_reg[0]\,
      s_axi_awaddr(31 downto 8) => B"000000000000000000000000",
      s_axi_awaddr(7 downto 0) => m_axi_awaddr(7 downto 0),
      s_axi_awburst(1 downto 0) => B"00",
      s_axi_awcache(3 downto 0) => B"0000",
      s_axi_awid(0) => '0',
      s_axi_awlen(7 downto 0) => B"00000000",
      s_axi_awlock(0) => '0',
      s_axi_awprot(2 downto 0) => B"000",
      s_axi_awqos(3 downto 0) => B"0000",
      s_axi_awready => s_axi_awready,
      s_axi_awsize(2 downto 0) => m_axi_awsize(2 downto 0),
      s_axi_awuser(1023 downto
      s_axi_awvalid => \aw_incr_reg[2]\,
      s_axi_bid(0) => NLW_inst_s_axi_bid_UNCONNECTED(0),
      s_axi_bready => S00_AXI_bready,
      s_axi_bresp(1 downto 0) => s_axi_bresp(1 downto 0),
      s_axi_buser(1023 downto 0) => NLW_inst_s_axi_buser_UNCONNECTED(1023 downto 0),
      s_axi_bvalid => s_axi_bvalid,
      s_axi_rdata(31 downto 0) => s_axi_rdata(31 downto 0),
      s_axi_rid(0) => NLW_inst_s_axi_rid_UNCONNECTED(0),
      s_axi_rlast => s_axi_rlast,
      s_axi_rready => S00_AXI_rready,
      s_axi_rresp(1 downto 0) => s_axi_rresp(1 downto 0),
      s_axi_ruser(1023 downto 0) => NLW_inst_s_axi_ruser_UNCONNECTED(1023 downto 0),
      s_axi_rvalid => s_axi_rvalid,
      s_axi_wdata(31 downto 0) => S00_AXI_wdata(31 downto 0),
      s_axi_wlast => S00_AXI_wlast,
      s_axi_wready => s_axi_wready,
      s_axi_wstrb(3 downto 0) => S00_AXI_wstrb(3 downto 0),
      s_axi_wuser(1023 downto
      s_axi_wvalid => s_axi_wready_i_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_s00tr_0 is
  port (
    s_axi_awready : out STD_LOGIC;
    s_axi_bid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    s_axi_arready : out STD_LOGIC;
    s_axi_rid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    m_axi_awvalid : out STD_LOGIC;
    m_axi_arvalid : out STD_LOGIC;
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    \gen_id_reg.s_rid_i_reg[0]\ : in STD_LOGIC;
    S00_AXI_bready : in STD_LOGIC;
    m_axi_arid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    \gen_id_reg.s_single_aready_i_reg\ : in STD_LOGIC;
    S00_AXI_rready : in STD_LOGIC;
    \gen_id_reg.s_rid_i_reg[0]_0\ : in STD_LOGIC;
    s_axi_bvalid : in STD_LOGIC;
    \gen_id_reg.s_single_aready_i_reg_0\ : in STD_LOGIC;
    s_axi_rlast : in STD_LOGIC;
    s_axi_rvalid : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_s00tr_0 : entity is "bd_afc3_s00tr_0";
end design_1_axi_smc_0_bd_afc3_s00tr_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_s00tr_0 is
  signal NLW_inst_m_axi_bready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axi_rready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axi_wlast_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axi_wvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axi_bvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axi_rlast_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axi_rvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axi_wready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axi_araddr_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_inst_m_axi_arburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_axi_arcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_arid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_arlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_m_axi_arlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_arprot_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_m_axi_arqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_arsize_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_m_axi_aruser_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  signal NLW_inst_m_axi_awaddr_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_inst_m_axi_awburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_axi_awcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_awid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_awlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_m_axi_awlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_awprot_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_m_axi_awqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_awsize_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_inst_m_axi_awuser_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  signal NLW_inst_m_axi_wdata_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_inst_m_axi_wstrb_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_wuser_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  signal NLW_inst_s_axi_bresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_s_axi_buser_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  signal NLW_inst_s_axi_rdata_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_inst_s_axi_rresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_s_axi_ruser_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "1'b1";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_IS_CASCADED : integer;
  attribute C_IS_CASCADED of inst : label is 0;
  attribute C_MEP_IDENTIFIER : string;
  attribute C_MEP_IDENTIFIER of inst : label is "1'b0";
  attribute C_MEP_IDENTIFIER_WIDTH : integer;
  attribute C_MEP_IDENTIFIER_WIDTH of inst : label is 1;
  attribute C_M_ID_WIDTH : integer;
  attribute C_M_ID_WIDTH of inst : label is 1;
  attribute C_NUM_READ_OUTSTANDING : integer;
  attribute C_NUM_READ_OUTSTANDING of inst : label is 8;
  attribute C_NUM_READ_THREADS : integer;
  attribute C_NUM_READ_THREADS of inst : label is 1;
  attribute C_NUM_WRITE_OUTSTANDING : integer;
  attribute C_NUM_WRITE_OUTSTANDING of inst : label is 8;
  attribute C_NUM_WRITE_THREADS : integer;
  attribute C_NUM_WRITE_THREADS of inst : label is 1;
  attribute C_RDATA_WIDTH : integer;
  attribute C_RDATA_WIDTH of inst : label is 32;
  attribute C_READ_ACCEPTANCE : integer;
  attribute C_READ_ACCEPTANCE of inst : label is 32;
  attribute C_SEP_ROUTE_WIDTH : integer;
  attribute C_SEP_ROUTE_WIDTH of inst : label is 1;
  attribute C_SINGLE_ISSUING : integer;
  attribute C_SINGLE_ISSUING of inst : label is 1;
  attribute C_SUPPORTS_READ_DEADLOCK : integer;
  attribute C_SUPPORTS_READ_DEADLOCK of inst : label is 0;
  attribute C_SUPPORTS_WRITE_DEADLOCK : integer;
  attribute C_SUPPORTS_WRITE_DEADLOCK of inst : label is 0;
  attribute C_S_ID_WIDTH : integer;
  attribute C_S_ID_WIDTH of inst : label is 12;
  attribute C_WDATA_WIDTH : integer;
  attribute C_WDATA_WIDTH of inst : label is 32;
  attribute C_WRITE_ACCEPTANCE : integer;
  attribute C_WRITE_ACCEPTANCE of inst : label is 32;
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of inst : label is "yes";
  attribute P_FULLY_PIPELINED : integer;
  attribute P_FULLY_PIPELINED of inst : label is 2;
  attribute P_ID_BUFFER_WIDTH : integer;
  attribute P_ID_BUFFER_WIDTH of inst : label is 12;
  attribute P_M_THREAD_ID_WIDTH : integer;
  attribute P_M_THREAD_ID_WIDTH of inst : label is 1;
  attribute P_NUM_READ_OUTSTANDING : integer;
  attribute P_NUM_READ_OUTSTANDING of inst : label is 16;
  attribute P_NUM_WRITE_OUTSTANDING : integer;
  attribute P_NUM_WRITE_OUTSTANDING of inst : label is 16;
  attribute P_R_QUEUE_SIZE : integer;
  attribute P_R_QUEUE_SIZE of inst : label is 4;
  attribute P_S_ID_WIDTH : integer;
  attribute P_S_ID_WIDTH of inst : label is 12;
  attribute P_W_QUEUE_SIZE : integer;
  attribute P_W_QUEUE_SIZE of inst : label is 4;
  attribute P_ZERO_LATENCY : integer;
  attribute P_ZERO_LATENCY of inst : label is 1;
begin
inst: entity work.design_1_axi_smc_0_sc_transaction_regulator_v1_0_8_top
     port map (
      aclk => aclk,
      aclken => '1',
      aresetn => interconnect_aresetn(0),
      m_axi_araddr(31 downto 0) => NLW_inst_m_axi_araddr_UNCONNECTED(31 downto 0),
      m_axi_arburst(1 downto 0) => NLW_inst_m_axi_arburst_UNCONNECTED(1 downto 0),
      m_axi_arcache(3 downto 0) => NLW_inst_m_axi_arcache_UNCONNECTED(3 downto 0),
      m_axi_arid(0) => NLW_inst_m_axi_arid_UNCONNECTED(0),
      m_axi_arlen(7 downto 0) => NLW_inst_m_axi_arlen_UNCONNECTED(7 downto 0),
      m_axi_arlock(0) => NLW_inst_m_axi_arlock_UNCONNECTED(0),
      m_axi_arprot(2 downto 0) => NLW_inst_m_axi_arprot_UNCONNECTED(2 downto 0),
      m_axi_arqos(3 downto 0) => NLW_inst_m_axi_arqos_UNCONNECTED(3 downto 0),
      m_axi_arready => \gen_id_reg.s_single_aready_i_reg_0\,
      m_axi_arsize(2 downto 0) => NLW_inst_m_axi_arsize_UNCONNECTED(2 downto 0),
      m_axi_aruser(1023 downto 0) => NLW_inst_m_axi_aruser_UNCONNECTED(1023 downto 0),
      m_axi_arvalid => m_axi_arvalid,
      m_axi_awaddr(31 downto 0) => NLW_inst_m_axi_awaddr_UNCONNECTED(31 downto 0),
      m_axi_awburst(1 downto 0) => NLW_inst_m_axi_awburst_UNCONNECTED(1 downto 0),
      m_axi_awcache(3 downto 0) => NLW_inst_m_axi_awcache_UNCONNECTED(3 downto 0),
      m_axi_awid(0) => NLW_inst_m_axi_awid_UNCONNECTED(0),
      m_axi_awlen(7 downto 0) => NLW_inst_m_axi_awlen_UNCONNECTED(7 downto 0),
      m_axi_awlock(0) => NLW_inst_m_axi_awlock_UNCONNECTED(0),
      m_axi_awprot(2 downto 0) => NLW_inst_m_axi_awprot_UNCONNECTED(2 downto 0),
      m_axi_awqos(3 downto 0) => NLW_inst_m_axi_awqos_UNCONNECTED(3 downto 0),
      m_axi_awready => \gen_id_reg.s_rid_i_reg[0]_0\,
      m_axi_awsize(2 downto 0) => NLW_inst_m_axi_awsize_UNCONNECTED(2 downto 0),
      m_axi_awuser(1023 downto 0) => NLW_inst_m_axi_awuser_UNCONNECTED(1023 downto 0),
      m_axi_awvalid => m_axi_awvalid,
      m_axi_bid(0) => '0',
      m_axi_bready => NLW_inst_m_axi_bready_UNCONNECTED,
      m_axi_bresp(1 downto 0) => B"00",
      m_axi_buser(1023 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      m_axi_bvalid => s_axi_bvalid,
      m_axi_rdata(31 downto 0) => B"00000000000000000000000000000000",
      m_axi_rid(0) => '0',
      m_axi_rlast => s_axi_rlast,
      m_axi_rready => NLW_inst_m_axi_rready_UNCONNECTED,
      m_axi_rresp(1 downto 0) => B"00",
      m_axi_ruser(1023 downto
      m_axi_rvalid => s_axi_rvalid,
      m_axi_wdata(31 downto 0) => NLW_inst_m_axi_wdata_UNCONNECTED(31 downto 0),
      m_axi_wlast => NLW_inst_m_axi_wlast_UNCONNECTED,
      m_axi_wready => '0',
      m_axi_wstrb(3 downto 0) => NLW_inst_m_axi_wstrb_UNCONNECTED(3 downto 0),
      m_axi_wuser(1023 downto 0) => NLW_inst_m_axi_wuser_UNCONNECTED(1023 downto 0),
      m_axi_wvalid => NLW_inst_m_axi_wvalid_UNCONNECTED,
      mep_identifier(0) => '0',
      s_axi_araddr(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_arburst(1 downto 0) => B"00",
      s_axi_arcache(3 downto 0) => B"0000",
      s_axi_arid(11 downto 0) => m_axi_arid(11 downto 0),
      s_axi_arlen(7 downto 0) => B"00000000",
      s_axi_arlock(0) => '0',
      s_axi_arprot(2 downto 0) => B"000",
      s_axi_arqos(3 downto 0) => B"0000",
      s_axi_arready => s_axi_arready,
      s_axi_arsize(2 downto 0) => B"000",
      s_axi_aruser(1023 downto
      s_axi_arvalid => \gen_id_reg.s_single_aready_i_reg\,
      s_axi_awaddr(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_awburst(1 downto 0) => B"00",
      s_axi_awcache(3 downto 0) => B"0000",
      s_axi_awid(11 downto 0) => m_axi_awid(11 downto 0),
      s_axi_awlen(7 downto 0) => B"00000000",
      s_axi_awlock(0) => '0',
      s_axi_awprot(2 downto 0) => B"000",
      s_axi_awqos(3 downto 0) => B"0000",
      s_axi_awready => s_axi_awready,
      s_axi_awsize(2 downto 0) => B"000",
      s_axi_awuser(1023 downto
      s_axi_awvalid => \gen_id_reg.s_rid_i_reg[0]\,
      s_axi_bid(11 downto 0) => s_axi_bid(11 downto 0),
      s_axi_bready => S00_AXI_bready,
      s_axi_bresp(1 downto 0) => NLW_inst_s_axi_bresp_UNCONNECTED(1 downto 0),
      s_axi_buser(1023 downto 0) => NLW_inst_s_axi_buser_UNCONNECTED(1023 downto 0),
      s_axi_bvalid => NLW_inst_s_axi_bvalid_UNCONNECTED,
      s_axi_rdata(31 downto 0) => NLW_inst_s_axi_rdata_UNCONNECTED(31 downto 0),
      s_axi_rid(11 downto 0) => s_axi_rid(11 downto 0),
      s_axi_rlast => NLW_inst_s_axi_rlast_UNCONNECTED,
      s_axi_rready => S00_AXI_rready,
      s_axi_rresp(1 downto 0) => NLW_inst_s_axi_rresp_UNCONNECTED(1 downto 0),
      s_axi_ruser(1023 downto 0) => NLW_inst_s_axi_ruser_UNCONNECTED(1023 downto 0),
      s_axi_rvalid => NLW_inst_s_axi_rvalid_UNCONNECTED,
      s_axi_wdata(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_wlast => '0',
      s_axi_wready => NLW_inst_s_axi_wready_UNCONNECTED,
      s_axi_wstrb(3 downto 0) => B"0000",
      s_axi_wuser(1023 downto
      s_axi_wvalid => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_sarn_0 is
  port (
    M_SC_AR_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AR_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_sarn_0 : entity is "bd_afc3_sarn_0";
end design_1_axi_smc_0_bd_afc3_sarn_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_sarn_0 is
  signal NLW_inst_m_axis_arb_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axis_arb_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axis_arb_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 140 downto 0 );
  signal NLW_inst_m_sc_req_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_sc_recv_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of inst : label is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of inst : label is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of inst : label is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of inst : label is 2;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of inst : label is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of inst : label is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of inst : label is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of inst : label is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of inst : label is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of inst : label is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of inst : label is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of inst : label is 1;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 141;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of inst : label is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of inst : label is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of inst : label is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of inst : label is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of inst : label is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of inst : label is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of inst : label is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of inst : label is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of inst : label is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of inst : label is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of inst : label is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of inst : label is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of inst : label is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of inst : label is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of inst : label is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of inst : label is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of inst : label is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of inst : label is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of inst : label is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of inst : label is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of inst : label is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of inst : label is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of inst : label is 0;
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of inst : label is 16;
begin
inst: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized4\
     port map (
      m_axis_arb_tdata(15 downto 0) => NLW_inst_m_axis_arb_tdata_UNCONNECTED(15 downto 0),
      m_axis_arb_tready => '1',
      m_axis_arb_tvalid => NLW_inst_m_axis_arb_tvalid_UNCONNECTED,
      m_sc_aclk => '0',
      m_sc_aclken => '1',
      m_sc_aresetn => '0',
      m_sc_info(0) => NLW_inst_m_sc_info_UNCONNECTED(0),
      m_sc_payld(140 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(140 downto 0),
      m_sc_recv(0) => '0',
      m_sc_req(0) => NLW_inst_m_sc_req_UNCONNECTED(0),
      m_sc_send(0) => M_SC_AR_send(0),
      s_axis_arb_tdata(15 downto 0) => B"0000000000000000",
      s_axis_arb_tready => NLW_inst_s_axis_arb_tready_UNCONNECTED,
      s_axis_arb_tvalid => '0',
      s_sc_aclk => aclk,
      s_sc_aclken => '1',
      s_sc_aresetn => interconnect_aresetn(0),
      s_sc_info(0) => '0',
      s_sc_payld(140 downto 0) => B"000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000",
      s_sc_recv(0) => NLW_inst_s_sc_recv_UNCONNECTED(0),
      s_sc_req(0) => '0',
      s_sc_send(0) => S_SC_AR_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_sawn_0 is
  port (
    M_SC_AW_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AW_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_sawn_0 : entity is "bd_afc3_sawn_0";
end design_1_axi_smc_0_bd_afc3_sawn_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_sawn_0 is
  signal NLW_inst_m_axis_arb_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axis_arb_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axis_arb_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 140 downto 0 );
  signal NLW_inst_m_sc_req_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_sc_recv_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of inst : label is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of inst : label is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of inst : label is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of inst : label is 3;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of inst : label is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of inst : label is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of inst : label is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of inst : label is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of inst : label is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of inst : label is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of inst : label is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of inst : label is 1;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 141;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of inst : label is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of inst : label is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of inst : label is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of inst : label is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of inst : label is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of inst : label is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of inst : label is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of inst : label is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of inst : label is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of inst : label is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of inst : label is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of inst : label is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of inst : label is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of inst : label is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of inst : label is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of inst : label is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of inst : label is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of inst : label is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of inst : label is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of inst : label is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of inst : label is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of inst : label is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of inst : label is 0;
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of inst : label is 16;
begin
inst: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized5\
     port map (
      m_axis_arb_tdata(15 downto 0) => NLW_inst_m_axis_arb_tdata_UNCONNECTED(15 downto 0),
      m_axis_arb_tready => '1',
      m_axis_arb_tvalid => NLW_inst_m_axis_arb_tvalid_UNCONNECTED,
      m_sc_aclk => '0',
      m_sc_aclken => '1',
      m_sc_aresetn => '0',
      m_sc_info(0) => NLW_inst_m_sc_info_UNCONNECTED(0),
      m_sc_payld(140 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(140 downto 0),
      m_sc_recv(0) => '0',
      m_sc_req(0) => NLW_inst_m_sc_req_UNCONNECTED(0),
      m_sc_send(0) => M_SC_AW_send(0),
      s_axis_arb_tdata(15 downto 0) => B"0000000000000000",
      s_axis_arb_tready => NLW_inst_s_axis_arb_tready_UNCONNECTED,
      s_axis_arb_tvalid => '0',
      s_sc_aclk => aclk,
      s_sc_aclken => '1',
      s_sc_aresetn => interconnect_aresetn(0),
      s_sc_info(0) => '0',
      s_sc_payld(140 downto 0) => B"000000000000000000000000000000000000000000000000000110000000000100000000000000000000000000000000000000000000000000000000000000000000000000000",
      s_sc_recv(0) => NLW_inst_s_sc_recv_UNCONNECTED(0),
      s_sc_req(0) => '0',
      s_sc_send(0) => S_SC_AW_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_sbn_0 is
  port (
    M_SC_B_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    \s_axi_bresp_i_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_sbn_0 : entity is "bd_afc3_sbn_0";
end design_1_axi_smc_0_bd_afc3_sbn_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_sbn_0 is
  signal NLW_inst_m_axis_arb_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axis_arb_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axis_arb_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 6 downto 0 );
  signal NLW_inst_m_sc_req_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_sc_recv_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of inst : label is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of inst : label is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of inst : label is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of inst : label is 4;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of inst : label is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of inst : label is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of inst : label is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of inst : label is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of inst : label is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of inst : label is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of inst : label is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of inst : label is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 7;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of inst : label is 3;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of inst : label is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of inst : label is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of inst : label is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of inst : label is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of inst : label is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of inst : label is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of inst : label is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of inst : label is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of inst : label is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of inst : label is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of inst : label is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of inst : label is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of inst : label is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of inst : label is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of inst : label is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of inst : label is 3;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of inst : label is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of inst : label is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of inst : label is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of inst : label is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of inst : label is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of inst : label is 0;
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of inst : label is 16;
begin
inst: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized6\
     port map (
      m_axis_arb_tdata(15 downto 0) => NLW_inst_m_axis_arb_tdata_UNCONNECTED(15 downto 0),
      m_axis_arb_tready => '1',
      m_axis_arb_tvalid => NLW_inst_m_axis_arb_tvalid_UNCONNECTED,
      m_sc_aclk => '0',
      m_sc_aclken => '1',
      m_sc_aresetn => '0',
      m_sc_info(0) => NLW_inst_m_sc_info_UNCONNECTED(0),
      m_sc_payld(6 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(6 downto 0),
      m_sc_recv(0) => '0',
      m_sc_req(0) => NLW_inst_m_sc_req_UNCONNECTED(0),
      m_sc_send(0) => M_SC_B_send(0),
      s_axis_arb_tdata(15 downto 0) => B"0000000000000000",
      s_axis_arb_tready => NLW_inst_s_axis_arb_tready_UNCONNECTED,
      s_axis_arb_tvalid => '0',
      s_sc_aclk => aclk,
      s_sc_aclken => '1',
      s_sc_aresetn => interconnect_aresetn(0),
      s_sc_info(0) => '0',
      s_sc_payld(6 downto 0) => B"0000000",
      s_sc_recv(0) => NLW_inst_s_sc_recv_UNCONNECTED(0),
      s_sc_req(0) => '0',
      s_sc_send(0) => \s_axi_bresp_i_reg[1]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_srn_0 is
  port (
    M_SC_R_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    \FSM_sequential_r_state_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_srn_0 : entity is "bd_afc3_srn_0";
end design_1_axi_smc_0_bd_afc3_srn_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_srn_0 is
  signal NLW_inst_m_axis_arb_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axis_arb_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axis_arb_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 52 downto 0 );
  signal NLW_inst_m_sc_req_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_sc_recv_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of inst : label is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of inst : label is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of inst : label is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of inst : label is 0;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of inst : label is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of inst : label is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of inst : label is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of inst : label is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of inst : label is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of inst : label is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of inst : label is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of inst : label is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 53;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of inst : label is 3;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of inst : label is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of inst : label is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of inst : label is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of inst : label is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of inst : label is 512;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of inst : label is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of inst : label is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of inst : label is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of inst : label is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of inst : label is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of inst : label is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of inst : label is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of inst : label is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of inst : label is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of inst : label is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of inst : label is 3;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of inst : label is 1;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of inst : label is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of inst : label is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of inst : label is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of inst : label is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of inst : label is 0;
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of inst : label is 16;
begin
inst: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized7\
     port map (
      m_axis_arb_tdata(15 downto 0) => NLW_inst_m_axis_arb_tdata_UNCONNECTED(15 downto 0),
      m_axis_arb_tready => '1',
      m_axis_arb_tvalid => NLW_inst_m_axis_arb_tvalid_UNCONNECTED,
      m_sc_aclk => '0',
      m_sc_aclken => '1',
      m_sc_aresetn => '0',
      m_sc_info(0) => NLW_inst_m_sc_info_UNCONNECTED(0),
      m_sc_payld(52 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(52 downto 0),
      m_sc_recv(0) => '0',
      m_sc_req(0) => NLW_inst_m_sc_req_UNCONNECTED(0),
      m_sc_send(0) => M_SC_R_send(0),
      s_axis_arb_tdata(15 downto 0) => B"0000000000000000",
      s_axis_arb_tready => NLW_inst_s_axis_arb_tready_UNCONNECTED,
      s_axis_arb_tvalid => '0',
      s_sc_aclk => aclk,
      s_sc_aclken => '1',
      s_sc_aresetn => interconnect_aresetn(0),
      s_sc_info(0) => '0',
      s_sc_payld(52 downto 0) => B"00000000000000000000000000000000000000000000000000000",
      s_sc_recv(0) => NLW_inst_s_sc_recv_UNCONNECTED(0),
      s_sc_req(0) => '0',
      s_sc_send(0) => \FSM_sequential_r_state_reg[0]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_swn_0 is
  port (
    M_SC_W_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_W_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_swn_0 : entity is "bd_afc3_swn_0";
end design_1_axi_smc_0_bd_afc3_swn_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_swn_0 is
  signal NLW_inst_m_axis_arb_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axis_arb_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axis_arb_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 54 downto 0 );
  signal NLW_inst_m_sc_req_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_sc_recv_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of inst : label is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of inst : label is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of inst : label is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of inst : label is 1;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of inst : label is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of inst : label is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of inst : label is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of inst : label is 5;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of inst : label is 2;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of inst : label is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of inst : label is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of inst : label is 1;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 55;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of inst : label is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of inst : label is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of inst : label is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of inst : label is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of inst : label is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of inst : label is 512;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of inst : label is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of inst : label is 2;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of inst : label is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of inst : label is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of inst : label is 2;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of inst : label is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of inst : label is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of inst : label is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of inst : label is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of inst : label is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of inst : label is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of inst : label is 1;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of inst : label is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of inst : label is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of inst : label is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of inst : label is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of inst : label is 0;
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of inst : label is 16;
begin
inst: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized8\
     port map (
      m_axis_arb_tdata(15 downto 0) => NLW_inst_m_axis_arb_tdata_UNCONNECTED(15 downto 0),
      m_axis_arb_tready => '1',
      m_axis_arb_tvalid => NLW_inst_m_axis_arb_tvalid_UNCONNECTED,
      m_sc_aclk => '0',
      m_sc_aclken => '1',
      m_sc_aresetn => '0',
      m_sc_info(0) => NLW_inst_m_sc_info_UNCONNECTED(0),
      m_sc_payld(54 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(54 downto 0),
      m_sc_recv(0) => '0',
      m_sc_req(0) => NLW_inst_m_sc_req_UNCONNECTED(0),
      m_sc_send(0) => M_SC_W_send(0),
      s_axis_arb_tdata(15 downto 0) => B"0000000000000000",
      s_axis_arb_tready => NLW_inst_s_axis_arb_tready_UNCONNECTED,
      s_axis_arb_tvalid => '0',
      s_sc_aclk => aclk,
      s_sc_aclken => '1',
      s_sc_aresetn => interconnect_aresetn(0),
      s_sc_info(0) => '0',
      s_sc_payld(54 downto 0) => B"0000000000000000000000000000000000000000000000000000000",
      s_sc_recv(0) => NLW_inst_s_sc_recv_UNCONNECTED(0),
      s_sc_req(0) => '0',
      s_sc_send(0) => S_SC_W_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_proc_sys_reset is
  port (
    interconnect_aresetn : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    aresetn : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_proc_sys_reset : entity is "proc_sys_reset";
end design_1_axi_smc_0_proc_sys_reset;

architecture STRUCTURE of design_1_axi_smc_0_proc_sys_reset is
  signal SEQ_n_0 : STD_LOGIC;
  signal lpf_int : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N\ : label is "PRIMITIVE";
begin
\ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => SEQ_n_0,
      Q => interconnect_aresetn(0),
      R => '0'
    );
EXT_LPF: entity work.design_1_axi_smc_0_lpf
     port map (
      aclk => aclk,
      aresetn => aresetn,
      lpf_int => lpf_int
    );
SEQ: entity work.design_1_axi_smc_0_sequence_psr
     port map (
      aclk => aclk,
      bsr_reg_0 => SEQ_n_0,
      lpf_int => lpf_int
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_comblock_0_0 is
  port (
    reg0_i : in STD_LOGIC_VECTOR ( 10 downto 0 );
    reg1_i : in STD_LOGIC_VECTOR ( 10 downto 0 );
    reg0_o : out STD_LOGIC_VECTOR ( 0 to 0 );
    axil_aclk : in STD_LOGIC;
    axil_aresetn : in STD_LOGIC;
    axil_awaddr : in STD_LOGIC_VECTOR ( 7 downto 0 );
    axil_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    axil_awvalid : in STD_LOGIC;
    axil_awready : out STD_LOGIC;
    axil_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    axil_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axil_wvalid : in STD_LOGIC;
    axil_wready : out STD_LOGIC;
    axil_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    axil_bvalid : out STD_LOGIC;
    axil_bready : in STD_LOGIC;
    axil_araddr : in STD_LOGIC_VECTOR ( 7 downto 0 );
    axil_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    axil_arvalid : in STD_LOGIC;
    axil_arready : out STD_LOGIC;
    axil_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    axil_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    axil_rvalid : out STD_LOGIC;
    axil_rready : in STD_LOGIC
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of design_1_comblock_0_0 : entity is "design_1_comblock_0_0,axi_comblock,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of design_1_comblock_0_0 : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of design_1_comblock_0_0 : entity is "axi_comblock,Vivado 2019.2";
  attribute ip_definition_source : string;
  attribute ip_definition_source of design_1_comblock_0_0 : entity is "package_project";
end design_1_comblock_0_0;

architecture STRUCTURE of design_1_comblock_0_0 is
  signal \<const0>\ : STD_LOGIC;
  signal \^axil_rdata\ : STD_LOGIC_VECTOR ( 10 downto 0 );
  attribute x_interface_info : string;
  attribute x_interface_info of axil_aclk : signal is "xilinx.com:signal:clock:1.0 axil_aclk CLK";
  attribute x_interface_parameter : string;
  attribute x_interface_parameter of axil_aclk : signal is "XIL_INTERFACENAME axil_aclk, ASSOCIATED_RESET axil_aresetn, ASSOCIATED_BUSIF AXIL, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, INSERT_VIP 0";
  attribute x_interface_info of axil_aresetn : signal is "xilinx.com:signal:reset:1.0 axil_aresetn RST";
  attribute x_interface_parameter of axil_aresetn : signal is "XIL_INTERFACENAME axil_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0";
  attribute x_interface_info of axil_arready : signal is "xilinx.com:interface:aximm:1.0 AXIL ARREADY";
  attribute x_interface_info of axil_arvalid : signal is "xilinx.com:interface:aximm:1.0 AXIL ARVALID";
  attribute x_interface_info of axil_awready : signal is "xilinx.com:interface:aximm:1.0 AXIL AWREADY";
  attribute x_interface_info of axil_awvalid : signal is "xilinx.com:interface:aximm:1.0 AXIL AWVALID";
  attribute x_interface_info of axil_bready : signal is "xilinx.com:interface:aximm:1.0 AXIL BREADY";
  attribute x_interface_info of axil_bvalid : signal is "xilinx.com:interface:aximm:1.0 AXIL BVALID";
  attribute x_interface_info of axil_rready : signal is "xilinx.com:interface:aximm:1.0 AXIL RREADY";
  attribute x_interface_info of axil_rvalid : signal is "xilinx.com:interface:aximm:1.0 AXIL RVALID";
  attribute x_interface_info of axil_wready : signal is "xilinx.com:interface:aximm:1.0 AXIL WREADY";
  attribute x_interface_info of axil_wvalid : signal is "xilinx.com:interface:aximm:1.0 AXIL WVALID";
  attribute x_interface_info of axil_araddr : signal is "xilinx.com:interface:aximm:1.0 AXIL ARADDR";
  attribute x_interface_info of axil_arprot : signal is "xilinx.com:interface:aximm:1.0 AXIL ARPROT";
  attribute x_interface_info of axil_awaddr : signal is "xilinx.com:interface:aximm:1.0 AXIL AWADDR";
  attribute x_interface_parameter of axil_awaddr : signal is "XIL_INTERFACENAME AXIL, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 8, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 8, NUM_WRITE_OUTSTANDING 8, MAX_BURST_LENGTH 1, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0";
  attribute x_interface_info of axil_awprot : signal is "xilinx.com:interface:aximm:1.0 AXIL AWPROT";
  attribute x_interface_info of axil_bresp : signal is "xilinx.com:interface:aximm:1.0 AXIL BRESP";
  attribute x_interface_info of axil_rdata : signal is "xilinx.com:interface:aximm:1.0 AXIL RDATA";
  attribute x_interface_info of axil_rresp : signal is "xilinx.com:interface:aximm:1.0 AXIL RRESP";
  attribute x_interface_info of axil_wdata : signal is "xilinx.com:interface:aximm:1.0 AXIL WDATA";
  attribute x_interface_info of axil_wstrb : signal is "xilinx.com:interface:aximm:1.0 AXIL WSTRB";
  attribute x_interface_info of reg0_i : signal is "ictp:user:IREGS:1.0 IN_REGS reg0_i";
  attribute x_interface_info of reg0_o : signal is "ictp:user:OREGS:1.0 OUT_REGS reg0_o";
  attribute x_interface_info of reg1_i : signal is "ictp:user:IREGS:1.0 IN_REGS reg1_i";
begin
  axil_bresp(1) <= \<const0>\;
  axil_bresp(0) <= \<const0>\;
  axil_rdata(31) <= \<const0>\;
  axil_rdata(30) <= \<const0>\;
  axil_rdata(29) <= \<const0>\;
  axil_rdata(28) <= \<const0>\;
  axil_rdata(27) <= \<const0>\;
  axil_rdata(26) <= \<const0>\;
  axil_rdata(25) <= \<const0>\;
  axil_rdata(24) <= \<const0>\;
  axil_rdata(23) <= \<const0>\;
  axil_rdata(22) <= \<const0>\;
  axil_rdata(21) <= \<const0>\;
  axil_rdata(20) <= \<const0>\;
  axil_rdata(19) <= \<const0>\;
  axil_rdata(18) <= \<const0>\;
  axil_rdata(17) <= \<const0>\;
  axil_rdata(16) <= \<const0>\;
  axil_rdata(15) <= \<const0>\;
  axil_rdata(14) <= \<const0>\;
  axil_rdata(13) <= \<const0>\;
  axil_rdata(12) <= \<const0>\;
  axil_rdata(11) <= \<const0>\;
  axil_rdata(10 downto 0) <= \^axil_rdata\(10 downto 0);
  axil_rresp(1) <= \<const0>\;
  axil_rresp(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
U0: entity work.design_1_comblock_0_0_axi_comblock
     port map (
      axil_aclk => axil_aclk,
      axil_araddr(5 downto 0) => axil_araddr(7 downto 2),
      axil_aresetn => axil_aresetn,
      axil_arready => axil_arready,
      axil_arvalid => axil_arvalid,
      axil_awaddr(5 downto 0) => axil_awaddr(7 downto 2),
      axil_awready => axil_awready,
      axil_awvalid => axil_awvalid,
      axil_bready => axil_bready,
      axil_bvalid => axil_bvalid,
      axil_rdata(10 downto 0) => \^axil_rdata\(10 downto 0),
      axil_rready => axil_rready,
      axil_rvalid => axil_rvalid,
      axil_wdata(0) => axil_wdata(0),
      axil_wready => axil_wready,
      axil_wvalid => axil_wvalid,
      reg0_i(10 downto 0) => reg0_i(10 downto 0),
      reg0_o(0) => reg0_o(0),
      reg1_i(10 downto 0) => reg1_i(10 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_rst_ps7_0_100M_0_proc_sys_reset is
  port (
    slowest_sync_clk : in STD_LOGIC;
    ext_reset_in : in STD_LOGIC;
    aux_reset_in : in STD_LOGIC;
    mb_debug_sys_rst : in STD_LOGIC;
    dcm_locked : in STD_LOGIC;
    mb_reset : out STD_LOGIC;
    bus_struct_reset : out STD_LOGIC_VECTOR ( 0 to 0 );
    peripheral_reset : out STD_LOGIC_VECTOR ( 0 to 0 );
    interconnect_aresetn : out STD_LOGIC_VECTOR ( 0 to 0 );
    peripheral_aresetn : out STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute C_AUX_RESET_HIGH : string;
  attribute C_AUX_RESET_HIGH of design_1_rst_ps7_0_100M_0_proc_sys_reset : entity is "1'b0";
  attribute C_AUX_RST_WIDTH : integer;
  attribute C_AUX_RST_WIDTH of design_1_rst_ps7_0_100M_0_proc_sys_reset : entity is 4;
  attribute C_EXT_RESET_HIGH : string;
  attribute C_EXT_RESET_HIGH of design_1_rst_ps7_0_100M_0_proc_sys_reset : entity is "1'b0";
  attribute C_EXT_RST_WIDTH : integer;
  attribute C_EXT_RST_WIDTH of design_1_rst_ps7_0_100M_0_proc_sys_reset : entity is 4;
  attribute C_FAMILY : string;
  attribute C_FAMILY of design_1_rst_ps7_0_100M_0_proc_sys_reset : entity is "zynq";
  attribute C_NUM_BUS_RST : integer;
  attribute C_NUM_BUS_RST of design_1_rst_ps7_0_100M_0_proc_sys_reset : entity is 1;
  attribute C_NUM_INTERCONNECT_ARESETN : integer;
  attribute C_NUM_INTERCONNECT_ARESETN of design_1_rst_ps7_0_100M_0_proc_sys_reset : entity is 1;
  attribute C_NUM_PERP_ARESETN : integer;
  attribute C_NUM_PERP_ARESETN of design_1_rst_ps7_0_100M_0_proc_sys_reset : entity is 1;
  attribute C_NUM_PERP_RST : integer;
  attribute C_NUM_PERP_RST of design_1_rst_ps7_0_100M_0_proc_sys_reset : entity is 1;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_rst_ps7_0_100M_0_proc_sys_reset : entity is "proc_sys_reset";
end design_1_rst_ps7_0_100M_0_proc_sys_reset;

architecture STRUCTURE of design_1_rst_ps7_0_100M_0_proc_sys_reset is
  signal Bsr_out : STD_LOGIC;
  signal MB_out : STD_LOGIC;
  signal Pr_out : STD_LOGIC;
  signal SEQ_n_3 : STD_LOGIC;
  signal SEQ_n_4 : STD_LOGIC;
  signal lpf_int : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N\ : label is "PRIMITIVE";
  attribute box_type of \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N\ : label is "PRIMITIVE";
  attribute box_type of \BSR_OUT_DFF[0].FDRE_BSR\ : label is "PRIMITIVE";
  attribute box_type of FDRE_inst : label is "PRIMITIVE";
  attribute box_type of \PR_OUT_DFF[0].FDRE_PER\ : label is "PRIMITIVE";
begin
\ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => SEQ_n_3,
      Q => interconnect_aresetn(0),
      R => '0'
    );
\ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => SEQ_n_4,
      Q => peripheral_aresetn(0),
      R => '0'
    );
\BSR_OUT_DFF[0].FDRE_BSR\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => Bsr_out,
      Q => bus_struct_reset(0),
      R => '0'
    );
EXT_LPF: entity work.design_1_rst_ps7_0_100M_0_lpf
     port map (
      aux_reset_in => aux_reset_in,
      dcm_locked => dcm_locked,
      ext_reset_in => ext_reset_in,
      lpf_int => lpf_int,
      mb_debug_sys_rst => mb_debug_sys_rst,
      slowest_sync_clk => slowest_sync_clk
    );
FDRE_inst: unisim.vcomponents.FDRE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => MB_out,
      Q => mb_reset,
      R => '0'
    );
\PR_OUT_DFF[0].FDRE_PER\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => slowest_sync_clk,
      CE => '1',
      D => Pr_out,
      Q => peripheral_reset(0),
      R => '0'
    );
SEQ: entity work.design_1_rst_ps7_0_100M_0_sequence_psr
     port map (
      Bsr_out => Bsr_out,
      MB_out => MB_out,
      Pr_out => Pr_out,
      bsr_reg_0 => SEQ_n_3,
      lpf_int => lpf_int,
      pr_reg_0 => SEQ_n_4,
      slowest_sync_clk => slowest_sync_clk
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_top_nqueens_0_0_top_nqueens is
  port (
    flag : out STD_LOGIC;
    done : out STD_LOGIC;
    counter : out STD_LOGIC_VECTOR ( 9 downto 0 );
    clk : in STD_LOGIC;
    nRst : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_top_nqueens_0_0_top_nqueens : entity is "top_nqueens";
end design_1_top_nqueens_0_0_top_nqueens;

architecture STRUCTURE of design_1_top_nqueens_0_0_top_nqueens is
  signal a_in_1 : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \a_in_1_reg[0]_i_1_n_0\ : STD_LOGIC;
  signal \a_in_1_reg[1]_i_1_n_0\ : STD_LOGIC;
  signal \a_in_1_reg[2]_i_1_n_0\ : STD_LOGIC;
  signal \a_in_1_reg[3]_i_1_n_0\ : STD_LOGIC;
  signal \a_in_1_reg[4]_i_1_n_0\ : STD_LOGIC;
  signal \a_in_1_reg[4]_i_2_n_0\ : STD_LOGIC;
  signal a_in_2 : STD_LOGIC_VECTOR ( 9 downto 0 );
  signal a_in_3 : STD_LOGIC_VECTOR ( 14 downto 0 );
  signal a_in_4 : STD_LOGIC_VECTOR ( 19 downto 0 );
  signal a_in_5 : STD_LOGIC_VECTOR ( 24 downto 0 );
  signal a_in_6 : STD_LOGIC_VECTOR ( 29 downto 0 );
  signal a_in_7 : STD_LOGIC_VECTOR ( 34 downto 0 );
  signal a_in_8 : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal a_in_9 : STD_LOGIC_VECTOR ( 44 downto 43 );
  signal ack_in_1 : STD_LOGIC;
  signal \ack_in_1__0\ : STD_LOGIC;
  signal ack_in_2 : STD_LOGIC;
  signal ack_in_3 : STD_LOGIC;
  signal ack_in_4 : STD_LOGIC;
  signal ack_in_5 : STD_LOGIC;
  signal ack_in_6 : STD_LOGIC;
  signal ack_in_7 : STD_LOGIC;
  signal ack_in_8 : STD_LOGIC;
  signal ack_in_9 : STD_LOGIC;
  signal \^counter\ : STD_LOGIC_VECTOR ( 9 downto 0 );
  signal \counter_s_reg[10]_i_3_n_0\ : STD_LOGIC;
  signal done_s : STD_LOGIC;
  signal \^flag\ : STD_LOGIC;
  signal flag_s_reg_i_1_n_0 : STD_LOGIC;
  signal fsm_1_n_10 : STD_LOGIC;
  signal fsm_1_n_11 : STD_LOGIC;
  signal fsm_1_n_12 : STD_LOGIC;
  signal fsm_1_n_13 : STD_LOGIC;
  signal fsm_1_n_14 : STD_LOGIC;
  signal fsm_1_n_15 : STD_LOGIC;
  signal fsm_1_n_16 : STD_LOGIC;
  signal fsm_1_n_17 : STD_LOGIC;
  signal fsm_1_n_2 : STD_LOGIC;
  signal fsm_1_n_28 : STD_LOGIC;
  signal fsm_1_n_29 : STD_LOGIC;
  signal fsm_1_n_3 : STD_LOGIC;
  signal fsm_1_n_30 : STD_LOGIC;
  signal fsm_1_n_4 : STD_LOGIC;
  signal fsm_1_n_5 : STD_LOGIC;
  signal fsm_1_n_6 : STD_LOGIC;
  signal fsm_1_n_7 : STD_LOGIC;
  signal fsm_1_n_8 : STD_LOGIC;
  signal fsm_1_n_9 : STD_LOGIC;
  signal fsm_2_n_11 : STD_LOGIC;
  signal fsm_2_n_12 : STD_LOGIC;
  signal fsm_2_n_13 : STD_LOGIC;
  signal fsm_2_n_14 : STD_LOGIC;
  signal fsm_2_n_15 : STD_LOGIC;
  signal fsm_2_n_16 : STD_LOGIC;
  signal fsm_2_n_3 : STD_LOGIC;
  signal fsm_2_n_32 : STD_LOGIC;
  signal fsm_2_n_33 : STD_LOGIC;
  signal fsm_2_n_34 : STD_LOGIC;
  signal fsm_2_n_35 : STD_LOGIC;
  signal fsm_2_n_36 : STD_LOGIC;
  signal fsm_2_n_8 : STD_LOGIC;
  signal fsm_3_n_28 : STD_LOGIC;
  signal fsm_3_n_29 : STD_LOGIC;
  signal fsm_3_n_30 : STD_LOGIC;
  signal fsm_3_n_31 : STD_LOGIC;
  signal fsm_3_n_32 : STD_LOGIC;
  signal fsm_3_n_33 : STD_LOGIC;
  signal fsm_3_n_34 : STD_LOGIC;
  signal fsm_3_n_35 : STD_LOGIC;
  signal fsm_3_n_36 : STD_LOGIC;
  signal fsm_3_n_37 : STD_LOGIC;
  signal fsm_3_n_38 : STD_LOGIC;
  signal fsm_3_n_40 : STD_LOGIC;
  signal fsm_3_n_41 : STD_LOGIC;
  signal fsm_3_n_42 : STD_LOGIC;
  signal fsm_3_n_7 : STD_LOGIC;
  signal fsm_4_n_31 : STD_LOGIC;
  signal fsm_4_n_32 : STD_LOGIC;
  signal fsm_4_n_33 : STD_LOGIC;
  signal fsm_4_n_34 : STD_LOGIC;
  signal fsm_4_n_35 : STD_LOGIC;
  signal fsm_4_n_36 : STD_LOGIC;
  signal fsm_4_n_37 : STD_LOGIC;
  signal fsm_4_n_38 : STD_LOGIC;
  signal fsm_4_n_39 : STD_LOGIC;
  signal fsm_4_n_40 : STD_LOGIC;
  signal fsm_4_n_41 : STD_LOGIC;
  signal fsm_4_n_42 : STD_LOGIC;
  signal fsm_4_n_43 : STD_LOGIC;
  signal fsm_4_n_44 : STD_LOGIC;
  signal fsm_4_n_45 : STD_LOGIC;
  signal fsm_4_n_5 : STD_LOGIC;
  signal fsm_5_n_2 : STD_LOGIC;
  signal fsm_5_n_3 : STD_LOGIC;
  signal fsm_5_n_34 : STD_LOGIC;
  signal fsm_5_n_35 : STD_LOGIC;
  signal fsm_5_n_36 : STD_LOGIC;
  signal fsm_5_n_37 : STD_LOGIC;
  signal fsm_5_n_38 : STD_LOGIC;
  signal fsm_5_n_39 : STD_LOGIC;
  signal fsm_5_n_40 : STD_LOGIC;
  signal fsm_5_n_41 : STD_LOGIC;
  signal fsm_5_n_42 : STD_LOGIC;
  signal fsm_5_n_43 : STD_LOGIC;
  signal fsm_5_n_44 : STD_LOGIC;
  signal fsm_5_n_45 : STD_LOGIC;
  signal fsm_5_n_46 : STD_LOGIC;
  signal fsm_5_n_47 : STD_LOGIC;
  signal fsm_6_n_2 : STD_LOGIC;
  signal fsm_6_n_38 : STD_LOGIC;
  signal fsm_6_n_39 : STD_LOGIC;
  signal fsm_6_n_40 : STD_LOGIC;
  signal fsm_6_n_41 : STD_LOGIC;
  signal fsm_6_n_42 : STD_LOGIC;
  signal fsm_6_n_43 : STD_LOGIC;
  signal fsm_6_n_44 : STD_LOGIC;
  signal fsm_6_n_45 : STD_LOGIC;
  signal fsm_6_n_46 : STD_LOGIC;
  signal fsm_6_n_47 : STD_LOGIC;
  signal fsm_6_n_48 : STD_LOGIC;
  signal fsm_6_n_49 : STD_LOGIC;
  signal fsm_6_n_50 : STD_LOGIC;
  signal fsm_7_n_10 : STD_LOGIC;
  signal fsm_7_n_11 : STD_LOGIC;
  signal fsm_7_n_12 : STD_LOGIC;
  signal fsm_7_n_13 : STD_LOGIC;
  signal fsm_7_n_14 : STD_LOGIC;
  signal fsm_7_n_15 : STD_LOGIC;
  signal fsm_7_n_16 : STD_LOGIC;
  signal fsm_7_n_2 : STD_LOGIC;
  signal fsm_7_n_57 : STD_LOGIC;
  signal fsm_7_n_58 : STD_LOGIC;
  signal fsm_7_n_59 : STD_LOGIC;
  signal fsm_7_n_6 : STD_LOGIC;
  signal fsm_7_n_60 : STD_LOGIC;
  signal fsm_7_n_61 : STD_LOGIC;
  signal fsm_7_n_62 : STD_LOGIC;
  signal fsm_7_n_63 : STD_LOGIC;
  signal fsm_7_n_64 : STD_LOGIC;
  signal fsm_7_n_7 : STD_LOGIC;
  signal fsm_7_n_8 : STD_LOGIC;
  signal fsm_7_n_9 : STD_LOGIC;
  signal fsm_8_n_12 : STD_LOGIC;
  signal fsm_8_n_13 : STD_LOGIC;
  signal fsm_8_n_14 : STD_LOGIC;
  signal fsm_8_n_15 : STD_LOGIC;
  signal fsm_8_n_16 : STD_LOGIC;
  signal fsm_8_n_17 : STD_LOGIC;
  signal fsm_8_n_18 : STD_LOGIC;
  signal fsm_8_n_19 : STD_LOGIC;
  signal fsm_8_n_20 : STD_LOGIC;
  signal fsm_8_n_21 : STD_LOGIC;
  signal fsm_8_n_22 : STD_LOGIC;
  signal fsm_8_n_23 : STD_LOGIC;
  signal fsm_8_n_24 : STD_LOGIC;
  signal fsm_8_n_25 : STD_LOGIC;
  signal fsm_8_n_26 : STD_LOGIC;
  signal fsm_8_n_27 : STD_LOGIC;
  signal fsm_8_n_28 : STD_LOGIC;
  signal fsm_8_n_29 : STD_LOGIC;
  signal fsm_8_n_30 : STD_LOGIC;
  signal fsm_8_n_31 : STD_LOGIC;
  signal fsm_8_n_32 : STD_LOGIC;
  signal fsm_8_n_33 : STD_LOGIC;
  signal fsm_8_n_34 : STD_LOGIC;
  signal fsm_8_n_7 : STD_LOGIC;
  signal fsm_9_n_1 : STD_LOGIC;
  signal fsm_9_n_10 : STD_LOGIC;
  signal fsm_9_n_4 : STD_LOGIC;
  signal fsm_9_n_5 : STD_LOGIC;
  signal fsm_9_n_6 : STD_LOGIC;
  signal fsm_9_n_7 : STD_LOGIC;
  signal fsm_9_n_8 : STD_LOGIC;
  signal fsm_9_n_9 : STD_LOGIC;
  signal \logic/count1\ : STD_LOGIC;
  signal \logic/j_reg\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \logic/j_reg_1\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \logic/j_reg_2\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \logic/j_reg_3\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \logic/j_reg_4\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \logic/j_reg_6\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal next_out_1 : STD_LOGIC;
  signal next_out_2 : STD_LOGIC;
  signal next_out_3 : STD_LOGIC;
  signal next_out_4 : STD_LOGIC;
  signal next_out_5 : STD_LOGIC;
  signal next_out_6 : STD_LOGIC;
  signal next_out_7 : STD_LOGIC;
  signal next_out_8 : STD_LOGIC;
  signal next_out_9 : STD_LOGIC;
  signal \p_0_in__5\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal plusOp_9 : STD_LOGIC_VECTOR ( 10 downto 1 );
  signal u_i : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal u_i_0 : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal u_i_5 : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \a_in_1_reg[0]\ : label is "LD";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \a_in_1_reg[0]_i_1\ : label is "soft_lutpair150";
  attribute XILINX_LEGACY_PRIM of \a_in_1_reg[1]\ : label is "LD";
  attribute SOFT_HLUTNM of \a_in_1_reg[1]_i_1\ : label is "soft_lutpair150";
  attribute XILINX_LEGACY_PRIM of \a_in_1_reg[2]\ : label is "LD";
  attribute SOFT_HLUTNM of \a_in_1_reg[2]_i_1\ : label is "soft_lutpair147";
  attribute XILINX_LEGACY_PRIM of \a_in_1_reg[3]\ : label is "LD";
  attribute SOFT_HLUTNM of \a_in_1_reg[3]_i_1\ : label is "soft_lutpair147";
  attribute XILINX_LEGACY_PRIM of \a_in_1_reg[4]\ : label is "LD";
  attribute SOFT_HLUTNM of \a_in_1_reg[4]_i_1\ : label is "soft_lutpair146";
  attribute XILINX_LEGACY_PRIM of ack_in_1_reg : label is "LD";
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \counter_s_reg[10]\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM of \counter_s_reg[10]\ : label is "LD";
  attribute SOFT_HLUTNM of \counter_s_reg[10]_i_1\ : label is "soft_lutpair145";
  attribute OPT_MODIFIED of \counter_s_reg[1]\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM of \counter_s_reg[1]\ : label is "LD";
  attribute OPT_MODIFIED of \counter_s_reg[2]\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM of \counter_s_reg[2]\ : label is "LD";
  attribute SOFT_HLUTNM of \counter_s_reg[2]_i_1\ : label is "soft_lutpair148";
  attribute OPT_MODIFIED of \counter_s_reg[3]\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM of \counter_s_reg[3]\ : label is "LD";
  attribute SOFT_HLUTNM of \counter_s_reg[3]_i_1\ : label is "soft_lutpair148";
  attribute OPT_MODIFIED of \counter_s_reg[4]\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM of \counter_s_reg[4]\ : label is "LD";
  attribute SOFT_HLUTNM of \counter_s_reg[4]_i_1\ : label is "soft_lutpair144";
  attribute OPT_MODIFIED of \counter_s_reg[5]\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM of \counter_s_reg[5]\ : label is "LD";
  attribute SOFT_HLUTNM of \counter_s_reg[5]_i_1\ : label is "soft_lutpair144";
  attribute OPT_MODIFIED of \counter_s_reg[6]\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM of \counter_s_reg[6]\ : label is "LD";
  attribute OPT_MODIFIED of \counter_s_reg[7]\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM of \counter_s_reg[7]\ : label is "LD";
  attribute SOFT_HLUTNM of \counter_s_reg[7]_i_1\ : label is "soft_lutpair149";
  attribute OPT_MODIFIED of \counter_s_reg[8]\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM of \counter_s_reg[8]\ : label is "LD";
  attribute SOFT_HLUTNM of \counter_s_reg[8]_i_1\ : label is "soft_lutpair149";
  attribute OPT_MODIFIED of \counter_s_reg[9]\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM of \counter_s_reg[9]\ : label is "LD";
  attribute SOFT_HLUTNM of \counter_s_reg[9]_i_1\ : label is "soft_lutpair145";
  attribute XILINX_LEGACY_PRIM of done_s_reg : label is "LD";
  attribute XILINX_LEGACY_PRIM of flag_s_reg : label is "LD";
  attribute SOFT_HLUTNM of flag_s_reg_i_1 : label is "soft_lutpair146";
begin
  counter(9 downto 0) <= \^counter\(9 downto 0);
  flag <= \^flag\;
\a_in_1_reg[0]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \a_in_1_reg[0]_i_1_n_0\,
      G => \a_in_1_reg[4]_i_2_n_0\,
      GE => '1',
      Q => a_in_1(0)
    );
\a_in_1_reg[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => a_in_1(0),
      O => \a_in_1_reg[0]_i_1_n_0\
    );
\a_in_1_reg[1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \a_in_1_reg[1]_i_1_n_0\,
      G => \a_in_1_reg[4]_i_2_n_0\,
      GE => '1',
      Q => a_in_1(1)
    );
\a_in_1_reg[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => a_in_1(0),
      I1 => a_in_1(1),
      O => \a_in_1_reg[1]_i_1_n_0\
    );
\a_in_1_reg[2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \a_in_1_reg[2]_i_1_n_0\,
      G => \a_in_1_reg[4]_i_2_n_0\,
      GE => '1',
      Q => a_in_1(2)
    );
\a_in_1_reg[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => a_in_1(2),
      I1 => a_in_1(1),
      I2 => a_in_1(0),
      O => \a_in_1_reg[2]_i_1_n_0\
    );
\a_in_1_reg[3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \a_in_1_reg[3]_i_1_n_0\,
      G => \a_in_1_reg[4]_i_2_n_0\,
      GE => '1',
      Q => a_in_1(3)
    );
\a_in_1_reg[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => a_in_1(3),
      I1 => a_in_1(2),
      I2 => a_in_1(0),
      I3 => a_in_1(1),
      O => \a_in_1_reg[3]_i_1_n_0\
    );
\a_in_1_reg[4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => \a_in_1_reg[4]_i_1_n_0\,
      G => \a_in_1_reg[4]_i_2_n_0\,
      GE => '1',
      Q => a_in_1(4)
    );
\a_in_1_reg[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => a_in_1(4),
      I1 => a_in_1(1),
      I2 => a_in_1(0),
      I3 => a_in_1(2),
      I4 => a_in_1(3),
      O => \a_in_1_reg[4]_i_1_n_0\
    );
\a_in_1_reg[4]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => ack_in_1,
      I1 => \^flag\,
      O => \a_in_1_reg[4]_i_2_n_0\
    );
ack_in_1_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '1'
    )
        port map (
      CLR => '0',
      D => \ack_in_1__0\,
      G => fsm_1_n_3,
      GE => '1',
      Q => ack_in_1
    );
\counter_s_reg[10]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0',
      IS_G_INVERTED => '1'
    )
        port map (
      CLR => '0',
      D => plusOp_9(10),
      G => fsm_9_n_10,
      GE => '1',
      Q => \^counter\(9)
    );
\counter_s_reg[10]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFF8000"
    )
        port map (
      I0 => \^counter\(7),
      I1 => \counter_s_reg[10]_i_3_n_0\,
      I2 => \^counter\(6),
      I3 => \^counter\(8),
      I4 => \^counter\(9),
      O => plusOp_9(10)
    );
\counter_s_reg[10]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^counter\(5),
      I1 => \^counter\(3),
      I2 => \^counter\(1),
      I3 => \^counter\(0),
      I4 => \^counter\(2),
      I5 => \^counter\(4),
      O => \counter_s_reg[10]_i_3_n_0\
    );
\counter_s_reg[1]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0',
      IS_G_INVERTED => '1'
    )
        port map (
      CLR => '0',
      D => plusOp_9(1),
      G => fsm_9_n_10,
      GE => '1',
      Q => \^counter\(0)
    );
\counter_s_reg[1]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^counter\(0),
      O => plusOp_9(1)
    );
\counter_s_reg[2]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0',
      IS_G_INVERTED => '1'
    )
        port map (
      CLR => '0',
      D => plusOp_9(2),
      G => fsm_9_n_10,
      GE => '1',
      Q => \^counter\(1)
    );
\counter_s_reg[2]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^counter\(0),
      I1 => \^counter\(1),
      O => plusOp_9(2)
    );
\counter_s_reg[3]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0',
      IS_G_INVERTED => '1'
    )
        port map (
      CLR => '0',
      D => plusOp_9(3),
      G => fsm_9_n_10,
      GE => '1',
      Q => \^counter\(2)
    );
\counter_s_reg[3]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"78"
    )
        port map (
      I0 => \^counter\(0),
      I1 => \^counter\(1),
      I2 => \^counter\(2),
      O => plusOp_9(3)
    );
\counter_s_reg[4]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0',
      IS_G_INVERTED => '1'
    )
        port map (
      CLR => '0',
      D => plusOp_9(4),
      G => fsm_9_n_10,
      GE => '1',
      Q => \^counter\(3)
    );
\counter_s_reg[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F80"
    )
        port map (
      I0 => \^counter\(1),
      I1 => \^counter\(0),
      I2 => \^counter\(2),
      I3 => \^counter\(3),
      O => plusOp_9(4)
    );
\counter_s_reg[5]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0',
      IS_G_INVERTED => '1'
    )
        port map (
      CLR => '0',
      D => plusOp_9(5),
      G => fsm_9_n_10,
      GE => '1',
      Q => \^counter\(4)
    );
\counter_s_reg[5]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFF8000"
    )
        port map (
      I0 => \^counter\(2),
      I1 => \^counter\(0),
      I2 => \^counter\(1),
      I3 => \^counter\(3),
      I4 => \^counter\(4),
      O => plusOp_9(5)
    );
\counter_s_reg[6]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0',
      IS_G_INVERTED => '1'
    )
        port map (
      CLR => '0',
      D => plusOp_9(6),
      G => fsm_9_n_10,
      GE => '1',
      Q => \^counter\(5)
    );
\counter_s_reg[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7FFFFFFF80000000"
    )
        port map (
      I0 => \^counter\(3),
      I1 => \^counter\(1),
      I2 => \^counter\(0),
      I3 => \^counter\(2),
      I4 => \^counter\(4),
      I5 => \^counter\(5),
      O => plusOp_9(6)
    );
\counter_s_reg[7]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0',
      IS_G_INVERTED => '1'
    )
        port map (
      CLR => '0',
      D => plusOp_9(7),
      G => fsm_9_n_10,
      GE => '1',
      Q => \^counter\(6)
    );
\counter_s_reg[7]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \counter_s_reg[10]_i_3_n_0\,
      I1 => \^counter\(6),
      O => plusOp_9(7)
    );
\counter_s_reg[8]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0',
      IS_G_INVERTED => '1'
    )
        port map (
      CLR => '0',
      D => plusOp_9(8),
      G => fsm_9_n_10,
      GE => '1',
      Q => \^counter\(7)
    );
\counter_s_reg[8]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"78"
    )
        port map (
      I0 => \counter_s_reg[10]_i_3_n_0\,
      I1 => \^counter\(6),
      I2 => \^counter\(7),
      O => plusOp_9(8)
    );
\counter_s_reg[9]\: unisim.vcomponents.LDCE
    generic map(
      INIT => '0',
      IS_G_INVERTED => '1'
    )
        port map (
      CLR => '0',
      D => plusOp_9(9),
      G => fsm_9_n_10,
      GE => '1',
      Q => \^counter\(8)
    );
\counter_s_reg[9]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F80"
    )
        port map (
      I0 => \^counter\(6),
      I1 => \counter_s_reg[10]_i_3_n_0\,
      I2 => \^counter\(7),
      I3 => \^counter\(8),
      O => plusOp_9(9)
    );
done_s_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => next_out_1,
      G => done_s,
      GE => '1',
      Q => done
    );
flag_s_reg: unisim.vcomponents.LDCE
    generic map(
      INIT => '0'
    )
        port map (
      CLR => '0',
      D => '1',
      G => flag_s_reg_i_1_n_0,
      GE => '1',
      Q => \^flag\
    );
flag_s_reg_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000040"
    )
        port map (
      I0 => a_in_1(1),
      I1 => a_in_1(0),
      I2 => a_in_1(2),
      I3 => a_in_1(4),
      I4 => a_in_1(3),
      O => flag_s_reg_i_1_n_0
    );
fsm_1: entity work.\design_1_top_nqueens_0_0_fsm__parameterized7\
     port map (
      AR(0) => ack_in_2,
      CO(0) => \logic/count1\,
      \FSM_onehot_state_reg[4]_0\ => fsm_1_n_3,
      Q(4 downto 0) => a_in_1(4 downto 0),
      S(2) => fsm_1_n_4,
      S(1) => fsm_1_n_5,
      S(0) => fsm_1_n_6,
      SR(0) => fsm_1_n_30,
      a_in_2(9 downto 0) => a_in_2(9 downto 0),
      ack_in_1 => ack_in_1,
      \ack_in_1__0\ => \ack_in_1__0\,
      clk => clk,
      \count1_carry__1\ => fsm_2_n_8,
      \count1_carry_i_19__1\(1 downto 0) => \logic/j_reg\(1 downto 0),
      \count[4]_i_3__2\ => fsm_2_n_3,
      \count_reg_reg[0]\ => fsm_1_n_16,
      \count_reg_reg[0]_0\ => \^flag\,
      \count_reg_reg[1]\ => fsm_1_n_2,
      \count_reg_reg[2]\ => fsm_1_n_8,
      \count_reg_reg[2]_0\(3) => fsm_1_n_9,
      \count_reg_reg[2]_0\(2) => fsm_1_n_10,
      \count_reg_reg[2]_0\(1) => fsm_1_n_11,
      \count_reg_reg[2]_0\(0) => fsm_1_n_12,
      \count_reg_reg[2]_1\(2) => fsm_1_n_13,
      \count_reg_reg[2]_1\(1) => fsm_1_n_14,
      \count_reg_reg[2]_1\(0) => fsm_1_n_15,
      \count_reg_reg[3]\ => fsm_1_n_29,
      done_aux_reg(3 downto 0) => u_i(3 downto 0),
      done_aux_reg_0 => fsm_2_n_16,
      done_aux_reg_1 => fsm_2_n_35,
      done_s => done_s,
      \j_reg[0]\ => fsm_1_n_28,
      \j_reg[1]\ => fsm_1_n_7,
      \j_reg[1]_0\ => fsm_1_n_17,
      nRst => nRst,
      next_out_1 => next_out_1,
      next_out_2 => next_out_2
    );
fsm_2: entity work.\design_1_top_nqueens_0_0_fsm__parameterized6\
     port map (
      AR(0) => ack_in_3,
      CO(0) => \logic/count1\,
      D(0) => \p_0_in__5\(1),
      \FSM_onehot_state_reg[0]_0\(0) => fsm_1_n_30,
      Q(3 downto 0) => u_i(3 downto 0),
      S(2) => fsm_1_n_4,
      S(1) => fsm_1_n_5,
      S(0) => fsm_1_n_6,
      SR(0) => fsm_2_n_36,
      a_in_2(9 downto 0) => a_in_2(9 downto 0),
      a_in_3(14 downto 0) => a_in_3(14 downto 0),
      clk => clk,
      count1_carry => fsm_1_n_8,
      count1_carry_0 => fsm_1_n_2,
      \count1_carry__0\(2) => fsm_1_n_13,
      \count1_carry__0\(1) => fsm_1_n_14,
      \count1_carry__0\(0) => fsm_1_n_15,
      \count1_carry__1\(3) => fsm_1_n_9,
      \count1_carry__1\(2) => fsm_1_n_10,
      \count1_carry__1\(1) => fsm_1_n_11,
      \count1_carry__1\(0) => fsm_1_n_12,
      \count1_carry__1_i_3__3\(2 downto 0) => u_i_0(2 downto 0),
      \count1_carry_i_10__7\ => fsm_3_n_38,
      \count1_carry_i_13__4\ => fsm_3_n_40,
      \count1_carry_i_13__4_0\ => fsm_3_n_41,
      \count1_carry_i_4__6\ => fsm_1_n_16,
      \count1_carry_i_5__5\ => fsm_1_n_17,
      \count[4]_i_3__2\ => fsm_1_n_28,
      \count[4]_i_3__2_0\ => fsm_1_n_7,
      \count[4]_i_5__4\(1 downto 0) => \logic/j_reg_1\(1 downto 0),
      \count_reg_reg[0]\ => fsm_2_n_3,
      \count_reg_reg[0]_0\ => fsm_2_n_11,
      \count_reg_reg[0]_1\ => fsm_2_n_14,
      \count_reg_reg[0]_2\(0) => ack_in_2,
      \count_reg_reg[1]\ => fsm_2_n_34,
      \count_reg_reg[2]\ => fsm_2_n_35,
      done_aux_reg => fsm_1_n_29,
      \j_reg[0]\ => fsm_2_n_8,
      \j_reg[0]_0\ => fsm_2_n_12,
      \j_reg[0]_1\ => fsm_2_n_13,
      \j_reg[0]_2\ => fsm_2_n_15,
      \j_reg[0]_3\ => fsm_2_n_16,
      \j_reg[0]_4\ => fsm_2_n_32,
      \j_reg[1]\(1 downto 0) => \logic/j_reg\(1 downto 0),
      \j_reg[1]_0\ => fsm_2_n_33,
      nRst => nRst,
      next_out_2 => next_out_2,
      next_out_3 => next_out_3
    );
fsm_3: entity work.\design_1_top_nqueens_0_0_fsm__parameterized5\
     port map (
      AR(0) => ack_in_4,
      D(0) => \p_0_in__5\(1),
      \FSM_onehot_state_reg[0]_0\(0) => fsm_2_n_36,
      \FSM_onehot_state_reg[3]_0\ => fsm_3_n_30,
      \FSM_onehot_state_reg[3]_1\ => fsm_3_n_31,
      \FSM_onehot_state_reg[3]_2\ => fsm_3_n_34,
      \FSM_onehot_state_reg[3]_3\ => fsm_3_n_35,
      \FSM_onehot_state_reg[3]_4\ => fsm_3_n_37,
      Q(1 downto 0) => \logic/j_reg_1\(1 downto 0),
      SR(0) => fsm_3_n_42,
      a_in_3(14 downto 0) => a_in_3(14 downto 0),
      a_in_4(19 downto 0) => a_in_4(19 downto 0),
      clk => clk,
      \count1_carry__1\ => fsm_2_n_14,
      \count1_carry_i_15__1\ => fsm_4_n_44,
      \count1_carry_i_15__1_0\ => fsm_4_n_43,
      \count1_carry_i_28__0\ => fsm_4_n_42,
      \count1_carry_i_4__5\ => fsm_2_n_13,
      \count1_carry_i_4__5_0\ => fsm_2_n_12,
      \count[4]_i_5__3\(2 downto 0) => \logic/j_reg_2\(2 downto 0),
      \count[4]_i_5__4\ => fsm_2_n_34,
      \count_reg[0]\ => fsm_2_n_32,
      \count_reg[0]_0\ => fsm_2_n_33,
      \count_reg_reg[0]\(0) => ack_in_3,
      \count_reg_reg[2]\(2 downto 0) => u_i_0(2 downto 0),
      done_aux_reg => fsm_2_n_11,
      done_aux_reg_0 => fsm_2_n_15,
      \j_reg[0]\ => fsm_3_n_32,
      \j_reg[0]_0\ => fsm_3_n_33,
      \j_reg[0]_1\ => fsm_3_n_36,
      \j_reg[1]\ => fsm_3_n_28,
      \j_reg[1]_0\ => fsm_3_n_29,
      \j_reg[2]\ => fsm_3_n_7,
      \j_reg[2]_0\ => fsm_3_n_38,
      \j_reg[2]_1\ => fsm_3_n_40,
      \j_reg[2]_2\ => fsm_3_n_41,
      nRst => nRst,
      next_out_3 => next_out_3,
      next_out_4 => next_out_4
    );
fsm_4: entity work.\design_1_top_nqueens_0_0_fsm__parameterized4\
     port map (
      AR(0) => ack_in_5,
      \FSM_onehot_state_reg[0]_0\(0) => fsm_3_n_42,
      \FSM_onehot_state_reg[3]_0\ => fsm_4_n_5,
      \FSM_onehot_state_reg[3]_1\ => fsm_4_n_31,
      \FSM_onehot_state_reg[3]_10\ => fsm_4_n_41,
      \FSM_onehot_state_reg[3]_2\ => fsm_4_n_32,
      \FSM_onehot_state_reg[3]_3\ => fsm_4_n_33,
      \FSM_onehot_state_reg[3]_4\ => fsm_4_n_34,
      \FSM_onehot_state_reg[3]_5\ => fsm_4_n_35,
      \FSM_onehot_state_reg[3]_6\ => fsm_4_n_36,
      \FSM_onehot_state_reg[3]_7\ => fsm_4_n_38,
      \FSM_onehot_state_reg[3]_8\ => fsm_4_n_39,
      \FSM_onehot_state_reg[3]_9\ => fsm_4_n_40,
      Q(2 downto 0) => \logic/j_reg_2\(2 downto 0),
      SR(0) => fsm_4_n_45,
      a_in_4(19 downto 0) => a_in_4(19 downto 0),
      a_in_5(24 downto 0) => a_in_5(24 downto 0),
      clk => clk,
      \count1_carry__1_i_3__2\ => fsm_3_n_29,
      \count1_carry_i_13__6\ => fsm_3_n_28,
      \count1_carry_i_19__0\ => fsm_3_n_37,
      \count1_carry_i_19__0_0\ => fsm_3_n_34,
      \count1_carry_i_19__0_1\ => fsm_3_n_35,
      \count1_carry_i_19__0_2\ => fsm_3_n_33,
      \count1_carry_i_5__7\ => fsm_3_n_30,
      \count1_carry_i_5__7_0\ => fsm_3_n_36,
      \count1_carry_i_9__2\ => fsm_3_n_7,
      \count[4]_i_15__2\ => fsm_5_n_45,
      \count[4]_i_19__2\ => fsm_5_n_46,
      \count[4]_i_19__2_0\ => fsm_5_n_2,
      \count[4]_i_4__6\ => fsm_3_n_32,
      \count[4]_i_4__6_0\ => fsm_3_n_31,
      \count_reg_reg[0]\(0) => ack_in_4,
      \count_reg_reg[1]\ => fsm_4_n_37,
      \j_reg[0]\ => fsm_4_n_42,
      \j_reg[1]\ => fsm_4_n_44,
      \j_reg[2]\ => fsm_4_n_43,
      nRst => nRst,
      next_out_4 => next_out_4,
      next_out_5 => next_out_5
    );
fsm_5: entity work.\design_1_top_nqueens_0_0_fsm__parameterized3\
     port map (
      AR(0) => ack_in_6,
      \FSM_onehot_state_reg[0]_0\(0) => fsm_4_n_45,
      \FSM_onehot_state_reg[3]_0\ => fsm_5_n_3,
      \FSM_onehot_state_reg[3]_1\ => fsm_5_n_34,
      \FSM_onehot_state_reg[3]_2\ => fsm_5_n_35,
      \FSM_onehot_state_reg[3]_3\ => fsm_5_n_36,
      \FSM_onehot_state_reg[3]_4\ => fsm_5_n_37,
      \FSM_onehot_state_reg[3]_5\ => fsm_5_n_40,
      \FSM_onehot_state_reg[3]_6\ => fsm_5_n_41,
      SR(0) => fsm_5_n_47,
      a_in_5(24 downto 0) => a_in_5(24 downto 0),
      a_in_6(29 downto 0) => a_in_6(29 downto 0),
      clk => clk,
      \count1_carry_i_13__3\ => fsm_4_n_41,
      \count1_carry_i_13__3_0\ => fsm_4_n_40,
      \count[4]_i_10__1\ => fsm_4_n_37,
      \count[4]_i_10__1_0\ => fsm_4_n_5,
      \count[4]_i_12__2\ => fsm_4_n_32,
      \count[4]_i_12__2_0\ => fsm_4_n_33,
      \count[4]_i_19__2\ => fsm_4_n_38,
      \count[4]_i_21__2\ => fsm_4_n_39,
      \count[4]_i_3__1\ => fsm_4_n_34,
      \count[4]_i_3__1_0\ => fsm_4_n_31,
      \count[4]_i_6__0\ => fsm_4_n_35,
      \count[4]_i_7__2\ => fsm_4_n_36,
      \count[4]_i_8__2\ => fsm_6_n_48,
      \count[4]_i_8__2_0\ => fsm_6_n_49,
      \count_reg_reg[0]\ => fsm_5_n_44,
      \count_reg_reg[0]_0\(0) => ack_in_5,
      \count_reg_reg[1]\ => fsm_5_n_39,
      \count_reg_reg[2]\ => fsm_5_n_42,
      \count_reg_reg[3]\ => fsm_5_n_38,
      \count_reg_reg[4]\ => fsm_5_n_43,
      \j_reg[1]\ => fsm_5_n_45,
      \j_reg[2]\ => fsm_5_n_2,
      \j_reg[2]_0\ => fsm_5_n_46,
      nRst => nRst,
      next_out_5 => next_out_5,
      next_out_6 => next_out_6
    );
fsm_6: entity work.\design_1_top_nqueens_0_0_fsm__parameterized2\
     port map (
      AR(0) => ack_in_7,
      \FSM_onehot_state_reg[0]_0\(0) => fsm_5_n_47,
      \FSM_onehot_state_reg[3]_0\ => fsm_6_n_43,
      \FSM_onehot_state_reg[3]_1\ => fsm_6_n_44,
      \FSM_onehot_state_reg[3]_2\ => fsm_6_n_47,
      Q(2 downto 0) => \logic/j_reg_3\(2 downto 0),
      SR(0) => fsm_6_n_50,
      a_in_6(29 downto 0) => a_in_6(29 downto 0),
      a_in_7(34 downto 0) => a_in_7(34 downto 0),
      clk => clk,
      \count1_carry__1_i_3__6\ => fsm_7_n_6,
      \count1_carry_i_12__1\ => fsm_5_n_44,
      \count1_carry_i_12__1_0\ => fsm_5_n_39,
      count1_carry_i_19 => fsm_7_n_63,
      count1_carry_i_25 => fsm_7_n_7,
      count1_carry_i_41 => fsm_7_n_62,
      \count[4]_i_21__1\ => fsm_5_n_42,
      \count[4]_i_22__0\ => fsm_5_n_38,
      \count[4]_i_3__0\ => fsm_5_n_37,
      \count[4]_i_3__0_0\ => fsm_5_n_34,
      \count[4]_i_3__0_1\ => fsm_5_n_3,
      \count[4]_i_3__0_2\ => fsm_5_n_41,
      \count[4]_i_6__4\ => fsm_7_n_60,
      \count[4]_i_6__4_0\ => fsm_7_n_61,
      \count[4]_i_7__4\ => fsm_5_n_35,
      \count[4]_i_7__4_0\ => fsm_5_n_40,
      \count[4]_i_8__2\ => fsm_5_n_43,
      \count[4]_i_8__2_0\ => fsm_5_n_36,
      \count_reg_reg[0]\(0) => ack_in_6,
      \j_reg[0]\ => fsm_6_n_2,
      \j_reg[0]_0\ => fsm_6_n_39,
      \j_reg[1]\ => fsm_6_n_38,
      \j_reg[1]_0\ => fsm_6_n_40,
      \j_reg[2]\ => fsm_6_n_45,
      \j_reg[3]\ => fsm_6_n_41,
      \j_reg[3]_0\ => fsm_6_n_42,
      \j_reg[3]_1\ => fsm_6_n_46,
      \j_reg[3]_2\ => fsm_6_n_48,
      \j_reg[3]_3\ => fsm_6_n_49,
      nRst => nRst,
      next_out_6 => next_out_6,
      next_out_7 => next_out_7
    );
fsm_7: entity work.\design_1_top_nqueens_0_0_fsm__parameterized1\
     port map (
      AR(0) => ack_in_8,
      \FSM_onehot_state_reg[0]_0\(0) => fsm_6_n_50,
      \FSM_onehot_state_reg[3]_0\ => fsm_7_n_58,
      \FSM_onehot_state_reg[3]_1\ => fsm_7_n_59,
      Q(3 downto 0) => \logic/j_reg_4\(3 downto 0),
      SR(0) => fsm_7_n_64,
      a_in_7(34 downto 0) => a_in_7(34 downto 0),
      a_in_8(39 downto 0) => a_in_8(39 downto 0),
      clk => clk,
      \count1_carry_i_12__0\ => fsm_6_n_40,
      \count1_carry_i_16__1\ => fsm_6_n_43,
      \count1_carry_i_16__1_0\ => fsm_6_n_46,
      \count1_carry_i_16__1_1\ => fsm_6_n_41,
      \count1_carry_i_3__6\ => fsm_6_n_39,
      \count1_carry_i_8__1\ => fsm_6_n_45,
      \count[4]_i_14__0\ => fsm_8_n_32,
      \count[4]_i_17__0\ => fsm_8_n_33,
      \count[4]_i_17__0_0\ => fsm_8_n_12,
      \count[4]_i_19__0\ => fsm_8_n_30,
      \count[4]_i_4__5\ => fsm_6_n_38,
      \count[4]_i_5__0\ => fsm_6_n_42,
      \count[4]_i_5__0_0\ => fsm_6_n_44,
      \count[4]_i_5__0_1\ => fsm_6_n_47,
      \count[4]_i_6__3\ => fsm_8_n_31,
      \count[4]_i_7__0\ => fsm_8_n_7,
      \count[4]_i_7__0_0\ => fsm_8_n_29,
      \count_reg[0]\ => fsm_6_n_2,
      \count_reg_reg[0]\ => fsm_7_n_8,
      \count_reg_reg[0]_0\ => fsm_7_n_13,
      \count_reg_reg[0]_1\ => fsm_7_n_15,
      \count_reg_reg[0]_2\(0) => ack_in_7,
      \count_reg_reg[1]\ => fsm_7_n_14,
      \count_reg_reg[2]\ => fsm_7_n_12,
      done_aux_reg(2 downto 0) => u_i_5(2 downto 0),
      done_aux_reg_0 => fsm_8_n_28,
      done_aux_reg_1 => fsm_8_n_13,
      \j_reg[0]\ => fsm_7_n_6,
      \j_reg[0]_0\ => fsm_7_n_11,
      \j_reg[0]_1\ => fsm_7_n_16,
      \j_reg[0]_2\ => fsm_7_n_61,
      \j_reg[1]\ => fsm_7_n_57,
      \j_reg[1]_0\ => fsm_7_n_62,
      \j_reg[1]_1\ => fsm_7_n_63,
      \j_reg[2]\ => fsm_7_n_2,
      \j_reg[2]_0\(2 downto 0) => \logic/j_reg_3\(2 downto 0),
      \j_reg[3]\ => fsm_7_n_7,
      \j_reg[3]_0\ => fsm_7_n_9,
      \j_reg[3]_1\ => fsm_7_n_10,
      \j_reg[3]_2\ => fsm_7_n_60,
      nRst => nRst,
      next_out_7 => next_out_7,
      next_out_8 => next_out_8
    );
fsm_8: entity work.\design_1_top_nqueens_0_0_fsm__parameterized0\
     port map (
      AR(0) => ack_in_9,
      \FSM_onehot_state_reg[0]_0\(0) => fsm_7_n_64,
      \FSM_onehot_state_reg[3]_0\ => fsm_8_n_19,
      \FSM_onehot_state_reg[3]_1\ => fsm_8_n_21,
      \FSM_onehot_state_reg[3]_2\ => fsm_8_n_22,
      \FSM_onehot_state_reg[3]_3\ => fsm_8_n_23,
      \FSM_onehot_state_reg[3]_4\ => fsm_8_n_26,
      \FSM_onehot_state_reg[3]_5\ => fsm_8_n_27,
      Q(1 downto 0) => a_in_9(44 downto 43),
      SR(0) => fsm_8_n_34,
      a_in_8(39 downto 0) => a_in_8(39 downto 0),
      clk => clk,
      count1_carry => fsm_7_n_14,
      count1_carry_i_13 => fsm_9_n_4,
      count1_carry_i_13_0 => fsm_9_n_7,
      count1_carry_i_13_1 => fsm_9_n_6,
      count1_carry_i_14 => fsm_9_n_9,
      \count1_carry_i_4__0\ => fsm_7_n_8,
      \count1_carry_i_4__0_0\ => fsm_7_n_13,
      \count[4]_i_11\(1 downto 0) => \logic/j_reg_6\(1 downto 0),
      \count[4]_i_11__3\ => fsm_7_n_59,
      \count[4]_i_11__3_0\ => fsm_7_n_16,
      \count[4]_i_17\ => fsm_9_n_5,
      \count[4]_i_17_0\ => fsm_9_n_8,
      \count[4]_i_4\ => fsm_9_n_1,
      \count[4]_i_5__5\ => fsm_7_n_57,
      \count[4]_i_7__0\ => fsm_7_n_58,
      \count_reg[0]\ => fsm_7_n_2,
      \count_reg[0]_0\ => fsm_7_n_11,
      \count_reg[0]_1\ => fsm_7_n_15,
      \count_reg[0]_2\ => fsm_7_n_10,
      \count_reg_reg[0]\ => fsm_8_n_28,
      \count_reg_reg[0]_0\(0) => ack_in_8,
      \count_reg_reg[2]\(2 downto 0) => u_i_5(2 downto 0),
      \count_reg_reg[2]_0\ => fsm_8_n_25,
      \count_reg_reg[3]\ => fsm_8_n_24,
      \done_aux_i_2__0\ => fsm_7_n_9,
      done_aux_reg => fsm_7_n_12,
      \j_reg[0]\ => fsm_8_n_7,
      \j_reg[0]_0\ => fsm_8_n_14,
      \j_reg[0]_1\ => fsm_8_n_15,
      \j_reg[0]_2\ => fsm_8_n_16,
      \j_reg[1]\ => fsm_8_n_17,
      \j_reg[1]_0\ => fsm_8_n_18,
      \j_reg[1]_1\ => fsm_8_n_20,
      \j_reg[2]\ => fsm_8_n_29,
      \j_reg[2]_0\ => fsm_8_n_31,
      \j_reg[2]_1\ => fsm_8_n_32,
      \j_reg[2]_2\ => fsm_8_n_33,
      \j_reg[3]\(3 downto 0) => \logic/j_reg_4\(3 downto 0),
      \j_reg[3]_0\ => fsm_8_n_12,
      \j_reg[3]_1\ => fsm_8_n_13,
      \j_reg[3]_2\ => fsm_8_n_30,
      nRst => nRst,
      next_out_8 => next_out_8,
      next_out_9 => next_out_9
    );
fsm_9: entity work.design_1_top_nqueens_0_0_fsm
     port map (
      AR(0) => ack_in_9,
      E(0) => fsm_9_n_10,
      Q(1 downto 0) => a_in_9(44 downto 43),
      SR(0) => fsm_8_n_34,
      clk => clk,
      count1_carry_i_14 => fsm_8_n_22,
      count1_carry_i_14_0 => fsm_8_n_23,
      \count[4]_i_12\ => fsm_8_n_24,
      \count[4]_i_12_0\ => fsm_8_n_21,
      \count[4]_i_5\ => fsm_8_n_26,
      \count[4]_i_5_0\ => fsm_8_n_18,
      \count[4]_i_5_1\ => fsm_8_n_27,
      \count[4]_i_5_2\ => fsm_8_n_20,
      \count[4]_i_7\ => fsm_8_n_25,
      \count[4]_i_7_0\ => fsm_8_n_19,
      \count_reg[0]\ => fsm_8_n_14,
      \count_reg[0]_0\ => fsm_8_n_17,
      \count_reg[0]_1\ => fsm_8_n_16,
      done_aux_i_4 => fsm_8_n_15,
      \j_reg[1]\(1 downto 0) => \logic/j_reg_6\(1 downto 0),
      \j_reg[1]_0\ => fsm_9_n_4,
      \j_reg[1]_1\ => fsm_9_n_5,
      \j_reg[1]_2\ => fsm_9_n_6,
      \j_reg[1]_3\ => fsm_9_n_7,
      \j_reg[1]_4\ => fsm_9_n_8,
      \j_reg[1]_5\ => fsm_9_n_9,
      \j_reg[2]\ => fsm_9_n_1,
      next_out_9 => next_out_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_mmu_v1_0_8_top is
  port (
    aclk : in STD_LOGIC;
    aresetn : in STD_LOGIC;
    aclken : in STD_LOGIC;
    s_axi_awid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_awlen : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_awlock : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awuser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awvalid : in STD_LOGIC;
    s_axi_awready : out STD_LOGIC;
    s_axi_wid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    s_axi_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_wlast : in STD_LOGIC;
    s_axi_wuser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_wvalid : in STD_LOGIC;
    s_axi_wready : out STD_LOGIC;
    s_axi_bid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    s_axi_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_buser : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_bvalid : out STD_LOGIC;
    s_axi_bready : in STD_LOGIC;
    s_axi_arid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    s_axi_araddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_arlen : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_arlock : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_aruser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_arvalid : in STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    s_axi_rid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    s_axi_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_rlast : out STD_LOGIC;
    s_axi_ruser : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_rvalid : out STD_LOGIC;
    s_axi_rready : in STD_LOGIC;
    m_axi_awid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    m_axi_awaddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_awlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awuser : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    m_axi_awvalid : out STD_LOGIC;
    m_axi_awready : in STD_LOGIC;
    m_axi_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_wlast : out STD_LOGIC;
    m_axi_wuser : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    m_axi_wvalid : out STD_LOGIC;
    m_axi_wready : in STD_LOGIC;
    m_axi_bid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    m_axi_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_buser : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    m_axi_bvalid : in STD_LOGIC;
    m_axi_bready : out STD_LOGIC;
    m_axi_arid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    m_axi_araddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_arlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aruser : out STD_LOGIC_VECTOR ( 1023 downto 0 );
    m_axi_arvalid : out STD_LOGIC;
    m_axi_arready : in STD_LOGIC;
    m_axi_rid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    m_axi_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_rlast : in STD_LOGIC;
    m_axi_ruser : in STD_LOGIC_VECTOR ( 1023 downto 0 );
    m_axi_rvalid : in STD_LOGIC;
    m_axi_rready : out STD_LOGIC
  );
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 32;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is "1'b0";
  attribute C_FAMILY : string;
  attribute C_FAMILY of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is "zynq";
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 12;
  attribute C_IS_CASCADED : integer;
  attribute C_IS_CASCADED of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 0;
  attribute C_MSC_ROUTE_ARRAY : string;
  attribute C_MSC_ROUTE_ARRAY of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is "8'b11011011";
  attribute C_MSC_ROUTE_WIDTH : integer;
  attribute C_MSC_ROUTE_WIDTH of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 4;
  attribute C_NUM_MSC : integer;
  attribute C_NUM_MSC of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 2;
  attribute C_NUM_READ_OUTSTANDING : integer;
  attribute C_NUM_READ_OUTSTANDING of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 8;
  attribute C_NUM_SEG : integer;
  attribute C_NUM_SEG of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 1;
  attribute C_NUM_WRITE_OUTSTANDING : integer;
  attribute C_NUM_WRITE_OUTSTANDING of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 8;
  attribute C_RDATA_WIDTH : integer;
  attribute C_RDATA_WIDTH of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 32;
  attribute C_READ_ACCEPTANCE : integer;
  attribute C_READ_ACCEPTANCE of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 32;
  attribute C_SEG_BASE_ADDR_ARRAY : string;
  attribute C_SEG_BASE_ADDR_ARRAY of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is "64'b0000000000000000000000000000000001000011110001000000000000000000";
  attribute C_SEG_SECURE_READ_ARRAY : string;
  attribute C_SEG_SECURE_READ_ARRAY of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is "1'b0";
  attribute C_SEG_SECURE_WRITE_ARRAY : string;
  attribute C_SEG_SECURE_WRITE_ARRAY of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is "1'b0";
  attribute C_SEG_SEP_ROUTE_ARRAY : string;
  attribute C_SEG_SEP_ROUTE_ARRAY of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is "64'b0000000000000000000000000000000000000000000000000000000000000001";
  attribute C_SEG_SIZE_ARRAY : integer;
  attribute C_SEG_SIZE_ARRAY of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 16;
  attribute C_SEG_SUPPORTS_READ_ARRAY : string;
  attribute C_SEG_SUPPORTS_READ_ARRAY of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is "1'b1";
  attribute C_SEG_SUPPORTS_WRITE_ARRAY : string;
  attribute C_SEG_SUPPORTS_WRITE_ARRAY of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is "1'b1";
  attribute C_SINGLE_ISSUING : integer;
  attribute C_SINGLE_ISSUING of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 1;
  attribute C_SUPPORTS_NARROW : integer;
  attribute C_SUPPORTS_NARROW of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 0;
  attribute C_SUPPORTS_READ_DECERR : integer;
  attribute C_SUPPORTS_READ_DECERR of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 1;
  attribute C_SUPPORTS_WRAP : integer;
  attribute C_SUPPORTS_WRAP of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 0;
  attribute C_SUPPORTS_WRITE_DECERR : integer;
  attribute C_SUPPORTS_WRITE_DECERR of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 1;
  attribute C_S_ARUSER_WIDTH : integer;
  attribute C_S_ARUSER_WIDTH of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 0;
  attribute C_S_AWUSER_WIDTH : integer;
  attribute C_S_AWUSER_WIDTH of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 0;
  attribute C_S_BUSER_WIDTH : integer;
  attribute C_S_BUSER_WIDTH of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 0;
  attribute C_S_PROTOCOL : integer;
  attribute C_S_PROTOCOL of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 1;
  attribute C_S_RUSER_WIDTH : integer;
  attribute C_S_RUSER_WIDTH of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 0;
  attribute C_S_WUSER_WIDTH : integer;
  attribute C_S_WUSER_WIDTH of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 0;
  attribute C_WDATA_WIDTH : integer;
  attribute C_WDATA_WIDTH of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 32;
  attribute C_WRITE_ACCEPTANCE : integer;
  attribute C_WRITE_ACCEPTANCE of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 32;
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is "yes";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is "sc_mmu_v1_0_8_top";
  attribute P_AXI3 : integer;
  attribute P_AXI3 of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 1;
  attribute P_AXI4 : integer;
  attribute P_AXI4 of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 0;
  attribute P_AXILITE : integer;
  attribute P_AXILITE of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 2;
  attribute P_BYPASS : integer;
  attribute P_BYPASS of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 0;
  attribute P_DECERR : string;
  attribute P_DECERR of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is "2'b11";
  attribute P_FIXED : string;
  attribute P_FIXED of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is "2'b00";
  attribute P_FULLY_PIPELINED : integer;
  attribute P_FULLY_PIPELINED of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 2;
  attribute P_INCR : string;
  attribute P_INCR of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is "2'b01";
  attribute P_NUM_MSC_LOG : integer;
  attribute P_NUM_MSC_LOG of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 1;
  attribute P_NUM_SEG_LOG : integer;
  attribute P_NUM_SEG_LOG of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 1;
  attribute P_R_DWBYTES : integer;
  attribute P_R_DWBYTES of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 4;
  attribute P_R_DWSIZE : integer;
  attribute P_R_DWSIZE of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 2;
  attribute P_R_QUEUE_SIZE : integer;
  attribute P_R_QUEUE_SIZE of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 4;
  attribute P_WRAP : string;
  attribute P_WRAP of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is "2'b10";
  attribute P_W_DWBYTES : integer;
  attribute P_W_DWBYTES of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 4;
  attribute P_W_DWSIZE : integer;
  attribute P_W_DWSIZE of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 2;
  attribute P_W_QUEUE_SIZE : integer;
  attribute P_W_QUEUE_SIZE of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 4;
  attribute P_ZERO_LATENCY : integer;
  attribute P_ZERO_LATENCY of design_1_axi_smc_0_sc_mmu_v1_0_8_top : entity is 1;
end design_1_axi_smc_0_sc_mmu_v1_0_8_top;

architecture STRUCTURE of design_1_axi_smc_0_sc_mmu_v1_0_8_top is
  signal \<const0>\ : STD_LOGIC;
  signal ar_reg_stall_n_0 : STD_LOGIC;
  signal ar_reg_stall_n_12 : STD_LOGIC;
  signal ar_reg_stall_n_13 : STD_LOGIC;
  signal ar_reg_stall_n_14 : STD_LOGIC;
  signal ar_reg_stall_n_15 : STD_LOGIC;
  signal ar_reg_stall_n_16 : STD_LOGIC;
  signal ar_reg_stall_n_2 : STD_LOGIC;
  signal ar_reg_stall_n_3 : STD_LOGIC;
  signal ar_reg_stall_n_8 : STD_LOGIC;
  signal ar_reg_stall_n_9 : STD_LOGIC;
  signal areset : STD_LOGIC;
  signal areset_d : STD_LOGIC;
  signal areset_d_i_1_n_0 : STD_LOGIC;
  signal areset_i_1_n_0 : STD_LOGIC;
  signal aresetn_d : STD_LOGIC;
  signal aw_reg_stall_n_3 : STD_LOGIC;
  signal \gen_endpoint.b_cnt[0]_i_1_n_0\ : STD_LOGIC;
  signal \gen_endpoint.b_cnt[1]_i_1_n_0\ : STD_LOGIC;
  signal \gen_endpoint.b_cnt[2]_i_1_n_0\ : STD_LOGIC;
  signal \gen_endpoint.b_cnt[3]_i_1_n_0\ : STD_LOGIC;
  signal \gen_endpoint.b_cnt[3]_i_2_n_0\ : STD_LOGIC;
  signal \gen_endpoint.b_cnt[4]_i_1_n_0\ : STD_LOGIC;
  signal \gen_endpoint.b_cnt[4]_i_2_n_0\ : STD_LOGIC;
  signal \gen_endpoint.b_cnt[4]_i_3_n_0\ : STD_LOGIC;
  signal \gen_endpoint.b_cnt[4]_i_4_n_0\ : STD_LOGIC;
  signal \gen_endpoint.b_cnt_reg\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \gen_endpoint.decerr_slave_inst_n_2\ : STD_LOGIC;
  signal \gen_endpoint.decerr_slave_inst_n_3\ : STD_LOGIC;
  signal \gen_endpoint.decerr_slave_inst_n_37\ : STD_LOGIC;
  signal \gen_endpoint.decerr_slave_inst_n_4\ : STD_LOGIC;
  signal \gen_endpoint.decerr_slave_inst_n_6\ : STD_LOGIC;
  signal \gen_endpoint.decerr_slave_inst_n_7\ : STD_LOGIC;
  signal \gen_endpoint.err_arready\ : STD_LOGIC;
  signal \gen_endpoint.err_awready\ : STD_LOGIC;
  signal \gen_endpoint.r_cnt[0]_i_1_n_0\ : STD_LOGIC;
  signal \gen_endpoint.r_cnt[4]_i_4_n_0\ : STD_LOGIC;
  signal \gen_endpoint.r_cnt_reg\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \gen_endpoint.r_resume_i_1_n_0\ : STD_LOGIC;
  signal \gen_endpoint.r_state\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \gen_endpoint.r_state[0]_i_2_n_0\ : STD_LOGIC;
  signal \gen_endpoint.r_trigger_decerr\ : STD_LOGIC;
  signal \gen_endpoint.w_cnt1\ : STD_LOGIC;
  signal \gen_endpoint.w_cnt[0]_i_1_n_0\ : STD_LOGIC;
  signal \gen_endpoint.w_cnt[1]_i_1_n_0\ : STD_LOGIC;
  signal \gen_endpoint.w_cnt[2]_i_1_n_0\ : STD_LOGIC;
  signal \gen_endpoint.w_cnt[3]_i_1_n_0\ : STD_LOGIC;
  signal \gen_endpoint.w_cnt[4]_i_1_n_0\ : STD_LOGIC;
  signal \gen_endpoint.w_cnt[4]_i_2_n_0\ : STD_LOGIC;
  signal \gen_endpoint.w_cnt_reg\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \gen_endpoint.w_enable_i_1_n_0\ : STD_LOGIC;
  signal \gen_endpoint.w_enable_i_3_n_0\ : STD_LOGIC;
  signal \gen_endpoint.w_enable_i_4_n_0\ : STD_LOGIC;
  signal \gen_endpoint.w_enable_i_5_n_0\ : STD_LOGIC;
  signal \gen_endpoint.w_enable_reg_n_0\ : STD_LOGIC;
  signal \gen_endpoint.w_push_done_reg_n_0\ : STD_LOGIC;
  signal \gen_endpoint.w_resume_i_1_n_0\ : STD_LOGIC;
  signal \gen_endpoint.w_resume_i_2_n_0\ : STD_LOGIC;
  signal \gen_endpoint.w_state\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \gen_endpoint.w_trigger_decerr\ : STD_LOGIC;
  signal \gen_wroute_fifo.wroute_split_n_0\ : STD_LOGIC;
  signal \gen_wroute_fifo.wroute_split_n_1\ : STD_LOGIC;
  signal \gen_wroute_fifo.wroute_split_n_2\ : STD_LOGIC;
  signal \gen_wroute_fifo.wroute_split_n_3\ : STD_LOGIC;
  signal \gen_wroute_fifo.wroute_split_n_4\ : STD_LOGIC;
  signal \gen_wroute_fifo.wroute_split_n_6\ : STD_LOGIC;
  signal \^m_axi_araddr\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \^m_axi_arid\ : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal \^m_axi_arlen\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^m_axi_arsize\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^m_axi_awaddr\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \^m_axi_awid\ : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal \^m_axi_wuser\ : STD_LOGIC_VECTOR ( 2 to 2 );
  signal m_valid1 : STD_LOGIC;
  signal m_valid1_1 : STD_LOGIC;
  signal m_vector1 : STD_LOGIC;
  signal m_vector2 : STD_LOGIC;
  signal m_vector2_0 : STD_LOGIC;
  signal mr_axi_arready : STD_LOGIC;
  signal mr_axi_arvalid : STD_LOGIC;
  signal mr_axi_awready : STD_LOGIC;
  signal mr_axi_awvalid : STD_LOGIC;
  signal p_14_in : STD_LOGIC;
  signal r_resume : STD_LOGIC;
  signal sr_axi_arvalid : STD_LOGIC;
  signal w_resume : STD_LOGIC;
  signal wroute_vacancy : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gen_endpoint.b_cnt[0]_i_1\ : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of \gen_endpoint.b_cnt[1]_i_1\ : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of \gen_endpoint.b_cnt[2]_i_1\ : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of \gen_endpoint.b_cnt[4]_i_3\ : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of \gen_endpoint.r_cnt[0]_i_1\ : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of \gen_endpoint.r_resume_i_1\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \gen_endpoint.r_state[0]_i_2\ : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of \gen_endpoint.w_cnt[0]_i_1\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \gen_endpoint.w_cnt[1]_i_1\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \gen_endpoint.w_cnt[2]_i_1\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \gen_endpoint.w_cnt[3]_i_1\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \gen_endpoint.w_cnt[4]_i_3\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \gen_endpoint.w_enable_i_2\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \gen_endpoint.w_enable_i_4\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of \gen_endpoint.w_resume_i_1\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \gen_endpoint.w_resume_i_2\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of m_axi_wvalid_INST_0 : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \s_axi_bresp[0]_INST_0\ : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \s_axi_bresp[1]_INST_0\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \s_axi_rdata[0]_INST_0\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \s_axi_rdata[10]_INST_0\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \s_axi_rdata[11]_INST_0\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \s_axi_rdata[12]_INST_0\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \s_axi_rdata[13]_INST_0\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \s_axi_rdata[14]_INST_0\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \s_axi_rdata[15]_INST_0\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \s_axi_rdata[16]_INST_0\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \s_axi_rdata[17]_INST_0\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \s_axi_rdata[18]_INST_0\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \s_axi_rdata[19]_INST_0\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \s_axi_rdata[1]_INST_0\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \s_axi_rdata[20]_INST_0\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \s_axi_rdata[21]_INST_0\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \s_axi_rdata[22]_INST_0\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \s_axi_rdata[23]_INST_0\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \s_axi_rdata[24]_INST_0\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \s_axi_rdata[25]_INST_0\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \s_axi_rdata[26]_INST_0\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \s_axi_rdata[27]_INST_0\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \s_axi_rdata[29]_INST_0\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \s_axi_rdata[2]_INST_0\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \s_axi_rdata[30]_INST_0\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \s_axi_rdata[31]_INST_0\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \s_axi_rdata[3]_INST_0\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \s_axi_rdata[4]_INST_0\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \s_axi_rdata[5]_INST_0\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \s_axi_rdata[6]_INST_0\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \s_axi_rdata[7]_INST_0\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \s_axi_rdata[8]_INST_0\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \s_axi_rdata[9]_INST_0\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \s_axi_rresp[0]_INST_0\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \s_axi_rresp[1]_INST_0\ : label is "soft_lutpair42";
begin
  m_axi_araddr(31) <= \<const0>\;
  m_axi_araddr(30) <= \<const0>\;
  m_axi_araddr(29) <= \<const0>\;
  m_axi_araddr(28) <= \<const0>\;
  m_axi_araddr(27) <= \<const0>\;
  m_axi_araddr(26) <= \<const0>\;
  m_axi_araddr(25) <= \<const0>\;
  m_axi_araddr(24) <= \<const0>\;
  m_axi_araddr(23) <= \<const0>\;
  m_axi_araddr(22) <= \<const0>\;
  m_axi_araddr(21) <= \<const0>\;
  m_axi_araddr(20) <= \<const0>\;
  m_axi_araddr(19) <= \<const0>\;
  m_axi_araddr(18) <= \<const0>\;
  m_axi_araddr(17) <= \<const0>\;
  m_axi_araddr(16) <= \<const0>\;
  m_axi_araddr(15) <= \<const0>\;
  m_axi_araddr(14) <= \<const0>\;
  m_axi_araddr(13) <= \<const0>\;
  m_axi_araddr(12) <= \<const0>\;
  m_axi_araddr(11) <= \<const0>\;
  m_axi_araddr(10) <= \<const0>\;
  m_axi_araddr(9) <= \<const0>\;
  m_axi_araddr(8) <= \<const0>\;
  m_axi_araddr(7 downto 0) <= \^m_axi_araddr\(7 downto 0);
  m_axi_arburst(1) <= \<const0>\;
  m_axi_arburst(0) <= \<const0>\;
  m_axi_arcache(3) <= \<const0>\;
  m_axi_arcache(2) <= \<const0>\;
  m_axi_arcache(1) <= \<const0>\;
  m_axi_arcache(0) <= \<const0>\;
  m_axi_arid(11 downto 0) <= \^m_axi_arid\(11 downto 0);
  m_axi_arlen(7) <= \<const0>\;
  m_axi_arlen(6) <= \<const0>\;
  m_axi_arlen(5) <= \<const0>\;
  m_axi_arlen(4) <= \<const0>\;
  m_axi_arlen(3 downto 0) <= \^m_axi_arlen\(3 downto 0);
  m_axi_arlock(0) <= \<const0>\;
  m_axi_arqos(3) <= \<const0>\;
  m_axi_arqos(2) <= \<const0>\;
  m_axi_arqos(1) <= \<const0>\;
  m_axi_arqos(0) <= \<const0>\;
  m_axi_arsize(2) <= \<const0>\;
  m_axi_arsize(1 downto 0) <= \^m_axi_arsize\(1 downto 0);
  m_axi_aruser(1023) <= \<const0>\;
  m_axi_aruser(1022) <= \<const0>\;
  m_axi_aruser(1021) <= \<const0>\;
  m_axi_aruser(1020) <= \<const0>\;
  m_axi_aruser(1019) <= \<const0>\;
  m_axi_aruser(1018) <= \<const0>\;
  m_axi_aruser(1017) <= \<const0>\;
  m_axi_aruser(1016) <= \<const0>\;
  m_axi_aruser(1015) <= \<const0>\;
  m_axi_aruser(1014) <= \<const0>\;
  m_axi_aruser(1013) <= \<const0>\;
  m_axi_aruser(1012) <= \<const0>\;
  m_axi_aruser(1011) <= \<const0>\;
  m_axi_aruser(1010) <= \<const0>\;
  m_axi_aruser(1009) <= \<const0>\;
  m_axi_aruser(1008) <= \<const0>\;
  m_axi_aruser(1007) <= \<const0>\;
  m_axi_aruser(1006) <= \<const0>\;
  m_axi_aruser(1005) <= \<const0>\;
  m_axi_aruser(1004) <= \<const0>\;
  m_axi_aruser(1003) <= \<const0>\;
  m_axi_aruser(1002) <= \<const0>\;
  m_axi_aruser(1001) <= \<const0>\;
  m_axi_aruser(1000) <= \<const0>\;
  m_axi_aruser(999) <= \<const0>\;
  m_axi_aruser(998) <= \<const0>\;
  m_axi_aruser(997) <= \<const0>\;
  m_axi_aruser(996) <= \<const0>\;
  m_axi_aruser(995) <= \<const0>\;
  m_axi_aruser(994) <= \<const0>\;
  m_axi_aruser(993) <= \<const0>\;
  m_axi_aruser(992) <= \<const0>\;
  m_axi_aruser(991) <= \<const0>\;
  m_axi_aruser(990) <= \<const0>\;
  m_axi_aruser(989) <= \<const0>\;
  m_axi_aruser(988) <= \<const0>\;
  m_axi_aruser(987) <= \<const0>\;
  m_axi_aruser(986) <= \<const0>\;
  m_axi_aruser(985) <= \<const0>\;
  m_axi_aruser(984) <= \<const0>\;
  m_axi_aruser(983) <= \<const0>\;
  m_axi_aruser(982) <= \<const0>\;
  m_axi_aruser(981) <= \<const0>\;
  m_axi_aruser(980) <= \<const0>\;
  m_axi_aruser(979) <= \<const0>\;
  m_axi_aruser(978) <= \<const0>\;
  m_axi_aruser(977) <= \<const0>\;
  m_axi_aruser(976) <= \<const0>\;
  m_axi_aruser(975) <= \<const0>\;
  m_axi_aruser(974) <= \<const0>\;
  m_axi_aruser(973) <= \<const0>\;
  m_axi_aruser(972) <= \<const0>\;
  m_axi_aruser(971) <= \<const0>\;
  m_axi_aruser(970) <= \<const0>\;
  m_axi_aruser(969) <= \<const0>\;
  m_axi_aruser(968) <= \<const0>\;
  m_axi_aruser(967) <= \<const0>\;
  m_axi_aruser(966) <= \<const0>\;
  m_axi_aruser(965) <= \<const0>\;
  m_axi_aruser(964) <= \<const0>\;
  m_axi_aruser(963) <= \<const0>\;
  m_axi_aruser(962) <= \<const0>\;
  m_axi_aruser(961) <= \<const0>\;
  m_axi_aruser(960) <= \<const0>\;
  m_axi_aruser(959) <= \<const0>\;
  m_axi_aruser(958) <= \<const0>\;
  m_axi_aruser(957) <= \<const0>\;
  m_axi_aruser(956) <= \<const0>\;
  m_axi_aruser(955) <= \<const0>\;
  m_axi_aruser(954) <= \<const0>\;
  m_axi_aruser(953) <= \<const0>\;
  m_axi_aruser(952) <= \<const0>\;
  m_axi_aruser(951) <= \<const0>\;
  m_axi_aruser(950) <= \<const0>\;
  m_axi_aruser(949) <= \<const0>\;
  m_axi_aruser(948) <= \<const0>\;
  m_axi_aruser(947) <= \<const0>\;
  m_axi_aruser(946) <= \<const0>\;
  m_axi_aruser(945) <= \<const0>\;
  m_axi_aruser(944) <= \<const0>\;
  m_axi_aruser(943) <= \<const0>\;
  m_axi_aruser(942) <= \<const0>\;
  m_axi_aruser(941) <= \<const0>\;
  m_axi_aruser(940) <= \<const0>\;
  m_axi_aruser(939) <= \<const0>\;
  m_axi_aruser(938) <= \<const0>\;
  m_axi_aruser(937) <= \<const0>\;
  m_axi_aruser(936) <= \<const0>\;
  m_axi_aruser(935) <= \<const0>\;
  m_axi_aruser(934) <= \<const0>\;
  m_axi_aruser(933) <= \<const0>\;
  m_axi_aruser(932) <= \<const0>\;
  m_axi_aruser(931) <= \<const0>\;
  m_axi_aruser(930) <= \<const0>\;
  m_axi_aruser(929) <= \<const0>\;
  m_axi_aruser(928) <= \<const0>\;
  m_axi_aruser(927) <= \<const0>\;
  m_axi_aruser(926) <= \<const0>\;
  m_axi_aruser(925) <= \<const0>\;
  m_axi_aruser(924) <= \<const0>\;
  m_axi_aruser(923) <= \<const0>\;
  m_axi_aruser(922) <= \<const0>\;
  m_axi_aruser(921) <= \<const0>\;
  m_axi_aruser(920) <= \<const0>\;
  m_axi_aruser(919) <= \<const0>\;
  m_axi_aruser(918) <= \<const0>\;
  m_axi_aruser(917) <= \<const0>\;
  m_axi_aruser(916) <= \<const0>\;
  m_axi_aruser(915) <= \<const0>\;
  m_axi_aruser(914) <= \<const0>\;
  m_axi_aruser(913) <= \<const0>\;
  m_axi_aruser(912) <= \<const0>\;
  m_axi_aruser(911) <= \<const0>\;
  m_axi_aruser(910) <= \<const0>\;
  m_axi_aruser(909) <= \<const0>\;
  m_axi_aruser(908) <= \<const0>\;
  m_axi_aruser(907) <= \<const0>\;
  m_axi_aruser(906) <= \<const0>\;
  m_axi_aruser(905) <= \<const0>\;
  m_axi_aruser(904) <= \<const0>\;
  m_axi_aruser(903) <= \<const0>\;
  m_axi_aruser(902) <= \<const0>\;
  m_axi_aruser(901) <= \<const0>\;
  m_axi_aruser(900) <= \<const0>\;
  m_axi_aruser(899) <= \<const0>\;
  m_axi_aruser(898) <= \<const0>\;
  m_axi_aruser(897) <= \<const0>\;
  m_axi_aruser(896) <= \<const0>\;
  m_axi_aruser(895) <= \<const0>\;
  m_axi_aruser(894) <= \<const0>\;
  m_axi_aruser(893) <= \<const0>\;
  m_axi_aruser(892) <= \<const0>\;
  m_axi_aruser(891) <= \<const0>\;
  m_axi_aruser(890) <= \<const0>\;
  m_axi_aruser(889) <= \<const0>\;
  m_axi_aruser(888) <= \<const0>\;
  m_axi_aruser(887) <= \<const0>\;
  m_axi_aruser(886) <= \<const0>\;
  m_axi_aruser(885) <= \<const0>\;
  m_axi_aruser(884) <= \<const0>\;
  m_axi_aruser(883) <= \<const0>\;
  m_axi_aruser(882) <= \<const0>\;
  m_axi_aruser(881) <= \<const0>\;
  m_axi_aruser(880) <= \<const0>\;
  m_axi_aruser(879) <= \<const0>\;
  m_axi_aruser(878) <= \<const0>\;
  m_axi_aruser(877) <= \<const0>\;
  m_axi_aruser(876) <= \<const0>\;
  m_axi_aruser(875) <= \<const0>\;
  m_axi_aruser(874) <= \<const0>\;
  m_axi_aruser(873) <= \<const0>\;
  m_axi_aruser(872) <= \<const0>\;
  m_axi_aruser(871) <= \<const0>\;
  m_axi_aruser(870) <= \<const0>\;
  m_axi_aruser(869) <= \<const0>\;
  m_axi_aruser(868) <= \<const0>\;
  m_axi_aruser(867) <= \<const0>\;
  m_axi_aruser(866) <= \<const0>\;
  m_axi_aruser(865) <= \<const0>\;
  m_axi_aruser(864) <= \<const0>\;
  m_axi_aruser(863) <= \<const0>\;
  m_axi_aruser(862) <= \<const0>\;
  m_axi_aruser(861) <= \<const0>\;
  m_axi_aruser(860) <= \<const0>\;
  m_axi_aruser(859) <= \<const0>\;
  m_axi_aruser(858) <= \<const0>\;
  m_axi_aruser(857) <= \<const0>\;
  m_axi_aruser(856) <= \<const0>\;
  m_axi_aruser(855) <= \<const0>\;
  m_axi_aruser(854) <= \<const0>\;
  m_axi_aruser(853) <= \<const0>\;
  m_axi_aruser(852) <= \<const0>\;
  m_axi_aruser(851) <= \<const0>\;
  m_axi_aruser(850) <= \<const0>\;
  m_axi_aruser(849) <= \<const0>\;
  m_axi_aruser(848) <= \<const0>\;
  m_axi_aruser(847) <= \<const0>\;
  m_axi_aruser(846) <= \<const0>\;
  m_axi_aruser(845) <= \<const0>\;
  m_axi_aruser(844) <= \<const0>\;
  m_axi_aruser(843) <= \<const0>\;
  m_axi_aruser(842) <= \<const0>\;
  m_axi_aruser(841) <= \<const0>\;
  m_axi_aruser(840) <= \<const0>\;
  m_axi_aruser(839) <= \<const0>\;
  m_axi_aruser(838) <= \<const0>\;
  m_axi_aruser(837) <= \<const0>\;
  m_axi_aruser(836) <= \<const0>\;
  m_axi_aruser(835) <= \<const0>\;
  m_axi_aruser(834) <= \<const0>\;
  m_axi_aruser(833) <= \<const0>\;
  m_axi_aruser(832) <= \<const0>\;
  m_axi_aruser(831) <= \<const0>\;
  m_axi_aruser(830) <= \<const0>\;
  m_axi_aruser(829) <= \<const0>\;
  m_axi_aruser(828) <= \<const0>\;
  m_axi_aruser(827) <= \<const0>\;
  m_axi_aruser(826) <= \<const0>\;
  m_axi_aruser(825) <= \<const0>\;
  m_axi_aruser(824) <= \<const0>\;
  m_axi_aruser(823) <= \<const0>\;
  m_axi_aruser(822) <= \<const0>\;
  m_axi_aruser(821) <= \<const0>\;
  m_axi_aruser(820) <= \<const0>\;
  m_axi_aruser(819) <= \<const0>\;
  m_axi_aruser(818) <= \<const0>\;
  m_axi_aruser(817) <= \<const0>\;
  m_axi_aruser(816) <= \<const0>\;
  m_axi_aruser(815) <= \<const0>\;
  m_axi_aruser(814) <= \<const0>\;
  m_axi_aruser(813) <= \<const0>\;
  m_axi_aruser(812) <= \<const0>\;
  m_axi_aruser(811) <= \<const0>\;
  m_axi_aruser(810) <= \<const0>\;
  m_axi_aruser(809) <= \<const0>\;
  m_axi_aruser(808) <= \<const0>\;
  m_axi_aruser(807) <= \<const0>\;
  m_axi_aruser(806) <= \<const0>\;
  m_axi_aruser(805) <= \<const0>\;
  m_axi_aruser(804) <= \<const0>\;
  m_axi_aruser(803) <= \<const0>\;
  m_axi_aruser(802) <= \<const0>\;
  m_axi_aruser(801) <= \<const0>\;
  m_axi_aruser(800) <= \<const0>\;
  m_axi_aruser(799) <= \<const0>\;
  m_axi_aruser(798) <= \<const0>\;
  m_axi_aruser(797) <= \<const0>\;
  m_axi_aruser(796) <= \<const0>\;
  m_axi_aruser(795) <= \<const0>\;
  m_axi_aruser(794) <= \<const0>\;
  m_axi_aruser(793) <= \<const0>\;
  m_axi_aruser(792) <= \<const0>\;
  m_axi_aruser(791) <= \<const0>\;
  m_axi_aruser(790) <= \<const0>\;
  m_axi_aruser(789) <= \<const0>\;
  m_axi_aruser(788) <= \<const0>\;
  m_axi_aruser(787) <= \<const0>\;
  m_axi_aruser(786) <= \<const0>\;
  m_axi_aruser(785) <= \<const0>\;
  m_axi_aruser(784) <= \<const0>\;
  m_axi_aruser(783) <= \<const0>\;
  m_axi_aruser(782) <= \<const0>\;
  m_axi_aruser(781) <= \<const0>\;
  m_axi_aruser(780) <= \<const0>\;
  m_axi_aruser(779) <= \<const0>\;
  m_axi_aruser(778) <= \<const0>\;
  m_axi_aruser(777) <= \<const0>\;
  m_axi_aruser(776) <= \<const0>\;
  m_axi_aruser(775) <= \<const0>\;
  m_axi_aruser(774) <= \<const0>\;
  m_axi_aruser(773) <= \<const0>\;
  m_axi_aruser(772) <= \<const0>\;
  m_axi_aruser(771) <= \<const0>\;
  m_axi_aruser(770) <= \<const0>\;
  m_axi_aruser(769) <= \<const0>\;
  m_axi_aruser(768) <= \<const0>\;
  m_axi_aruser(767) <= \<const0>\;
  m_axi_aruser(766) <= \<const0>\;
  m_axi_aruser(765) <= \<const0>\;
  m_axi_aruser(764) <= \<const0>\;
  m_axi_aruser(763) <= \<const0>\;
  m_axi_aruser(762) <= \<const0>\;
  m_axi_aruser(761) <= \<const0>\;
  m_axi_aruser(760) <= \<const0>\;
  m_axi_aruser(759) <= \<const0>\;
  m_axi_aruser(758) <= \<const0>\;
  m_axi_aruser(757) <= \<const0>\;
  m_axi_aruser(756) <= \<const0>\;
  m_axi_aruser(755) <= \<const0>\;
  m_axi_aruser(754) <= \<const0>\;
  m_axi_aruser(753) <= \<const0>\;
  m_axi_aruser(752) <= \<const0>\;
  m_axi_aruser(751) <= \<const0>\;
  m_axi_aruser(750) <= \<const0>\;
  m_axi_aruser(749) <= \<const0>\;
  m_axi_aruser(748) <= \<const0>\;
  m_axi_aruser(747) <= \<const0>\;
  m_axi_aruser(746) <= \<const0>\;
  m_axi_aruser(745) <= \<const0>\;
  m_axi_aruser(744) <= \<const0>\;
  m_axi_aruser(743) <= \<const0>\;
  m_axi_aruser(742) <= \<const0>\;
  m_axi_aruser(741) <= \<const0>\;
  m_axi_aruser(740) <= \<const0>\;
  m_axi_aruser(739) <= \<const0>\;
  m_axi_aruser(738) <= \<const0>\;
  m_axi_aruser(737) <= \<const0>\;
  m_axi_aruser(736) <= \<const0>\;
  m_axi_aruser(735) <= \<const0>\;
  m_axi_aruser(734) <= \<const0>\;
  m_axi_aruser(733) <= \<const0>\;
  m_axi_aruser(732) <= \<const0>\;
  m_axi_aruser(731) <= \<const0>\;
  m_axi_aruser(730) <= \<const0>\;
  m_axi_aruser(729) <= \<const0>\;
  m_axi_aruser(728) <= \<const0>\;
  m_axi_aruser(727) <= \<const0>\;
  m_axi_aruser(726) <= \<const0>\;
  m_axi_aruser(725) <= \<const0>\;
  m_axi_aruser(724) <= \<const0>\;
  m_axi_aruser(723) <= \<const0>\;
  m_axi_aruser(722) <= \<const0>\;
  m_axi_aruser(721) <= \<const0>\;
  m_axi_aruser(720) <= \<const0>\;
  m_axi_aruser(719) <= \<const0>\;
  m_axi_aruser(718) <= \<const0>\;
  m_axi_aruser(717) <= \<const0>\;
  m_axi_aruser(716) <= \<const0>\;
  m_axi_aruser(715) <= \<const0>\;
  m_axi_aruser(714) <= \<const0>\;
  m_axi_aruser(713) <= \<const0>\;
  m_axi_aruser(712) <= \<const0>\;
  m_axi_aruser(711) <= \<const0>\;
  m_axi_aruser(710) <= \<const0>\;
  m_axi_aruser(709) <= \<const0>\;
  m_axi_aruser(708) <= \<const0>\;
  m_axi_aruser(707) <= \<const0>\;
  m_axi_aruser(706) <= \<const0>\;
  m_axi_aruser(705) <= \<const0>\;
  m_axi_aruser(704) <= \<const0>\;
  m_axi_aruser(703) <= \<const0>\;
  m_axi_aruser(702) <= \<const0>\;
  m_axi_aruser(701) <= \<const0>\;
  m_axi_aruser(700) <= \<const0>\;
  m_axi_aruser(699) <= \<const0>\;
  m_axi_aruser(698) <= \<const0>\;
  m_axi_aruser(697) <= \<const0>\;
  m_axi_aruser(696) <= \<const0>\;
  m_axi_aruser(695) <= \<const0>\;
  m_axi_aruser(694) <= \<const0>\;
  m_axi_aruser(693) <= \<const0>\;
  m_axi_aruser(692) <= \<const0>\;
  m_axi_aruser(691) <= \<const0>\;
  m_axi_aruser(690) <= \<const0>\;
  m_axi_aruser(689) <= \<const0>\;
  m_axi_aruser(688) <= \<const0>\;
  m_axi_aruser(687) <= \<const0>\;
  m_axi_aruser(686) <= \<const0>\;
  m_axi_aruser(685) <= \<const0>\;
  m_axi_aruser(684) <= \<const0>\;
  m_axi_aruser(683) <= \<const0>\;
  m_axi_aruser(682) <= \<const0>\;
  m_axi_aruser(681) <= \<const0>\;
  m_axi_aruser(680) <= \<const0>\;
  m_axi_aruser(679) <= \<const0>\;
  m_axi_aruser(678) <= \<const0>\;
  m_axi_aruser(677) <= \<const0>\;
  m_axi_aruser(676) <= \<const0>\;
  m_axi_aruser(675) <= \<const0>\;
  m_axi_aruser(674) <= \<const0>\;
  m_axi_aruser(673) <= \<const0>\;
  m_axi_aruser(672) <= \<const0>\;
  m_axi_aruser(671) <= \<const0>\;
  m_axi_aruser(670) <= \<const0>\;
  m_axi_aruser(669) <= \<const0>\;
  m_axi_aruser(668) <= \<const0>\;
  m_axi_aruser(667) <= \<const0>\;
  m_axi_aruser(666) <= \<const0>\;
  m_axi_aruser(665) <= \<const0>\;
  m_axi_aruser(664) <= \<const0>\;
  m_axi_aruser(663) <= \<const0>\;
  m_axi_aruser(662) <= \<const0>\;
  m_axi_aruser(661) <= \<const0>\;
  m_axi_aruser(660) <= \<const0>\;
  m_axi_aruser(659) <= \<const0>\;
  m_axi_aruser(658) <= \<const0>\;
  m_axi_aruser(657) <= \<const0>\;
  m_axi_aruser(656) <= \<const0>\;
  m_axi_aruser(655) <= \<const0>\;
  m_axi_aruser(654) <= \<const0>\;
  m_axi_aruser(653) <= \<const0>\;
  m_axi_aruser(652) <= \<const0>\;
  m_axi_aruser(651) <= \<const0>\;
  m_axi_aruser(650) <= \<const0>\;
  m_axi_aruser(649) <= \<const0>\;
  m_axi_aruser(648) <= \<const0>\;
  m_axi_aruser(647) <= \<const0>\;
  m_axi_aruser(646) <= \<const0>\;
  m_axi_aruser(645) <= \<const0>\;
  m_axi_aruser(644) <= \<const0>\;
  m_axi_aruser(643) <= \<const0>\;
  m_axi_aruser(642) <= \<const0>\;
  m_axi_aruser(641) <= \<const0>\;
  m_axi_aruser(640) <= \<const0>\;
  m_axi_aruser(639) <= \<const0>\;
  m_axi_aruser(638) <= \<const0>\;
  m_axi_aruser(637) <= \<const0>\;
  m_axi_aruser(636) <= \<const0>\;
  m_axi_aruser(635) <= \<const0>\;
  m_axi_aruser(634) <= \<const0>\;
  m_axi_aruser(633) <= \<const0>\;
  m_axi_aruser(632) <= \<const0>\;
  m_axi_aruser(631) <= \<const0>\;
  m_axi_aruser(630) <= \<const0>\;
  m_axi_aruser(629) <= \<const0>\;
  m_axi_aruser(628) <= \<const0>\;
  m_axi_aruser(627) <= \<const0>\;
  m_axi_aruser(626) <= \<const0>\;
  m_axi_aruser(625) <= \<const0>\;
  m_axi_aruser(624) <= \<const0>\;
  m_axi_aruser(623) <= \<const0>\;
  m_axi_aruser(622) <= \<const0>\;
  m_axi_aruser(621) <= \<const0>\;
  m_axi_aruser(620) <= \<const0>\;
  m_axi_aruser(619) <= \<const0>\;
  m_axi_aruser(618) <= \<const0>\;
  m_axi_aruser(617) <= \<const0>\;
  m_axi_aruser(616) <= \<const0>\;
  m_axi_aruser(615) <= \<const0>\;
  m_axi_aruser(614) <= \<const0>\;
  m_axi_aruser(613) <= \<const0>\;
  m_axi_aruser(612) <= \<const0>\;
  m_axi_aruser(611) <= \<const0>\;
  m_axi_aruser(610) <= \<const0>\;
  m_axi_aruser(609) <= \<const0>\;
  m_axi_aruser(608) <= \<const0>\;
  m_axi_aruser(607) <= \<const0>\;
  m_axi_aruser(606) <= \<const0>\;
  m_axi_aruser(605) <= \<const0>\;
  m_axi_aruser(604) <= \<const0>\;
  m_axi_aruser(603) <= \<const0>\;
  m_axi_aruser(602) <= \<const0>\;
  m_axi_aruser(601) <= \<const0>\;
  m_axi_aruser(600) <= \<const0>\;
  m_axi_aruser(599) <= \<const0>\;
  m_axi_aruser(598) <= \<const0>\;
  m_axi_aruser(597) <= \<const0>\;
  m_axi_aruser(596) <= \<const0>\;
  m_axi_aruser(595) <= \<const0>\;
  m_axi_aruser(594) <= \<const0>\;
  m_axi_aruser(593) <= \<const0>\;
  m_axi_aruser(592) <= \<const0>\;
  m_axi_aruser(591) <= \<const0>\;
  m_axi_aruser(590) <= \<const0>\;
  m_axi_aruser(589) <= \<const0>\;
  m_axi_aruser(588) <= \<const0>\;
  m_axi_aruser(587) <= \<const0>\;
  m_axi_aruser(586) <= \<const0>\;
  m_axi_aruser(585) <= \<const0>\;
  m_axi_aruser(584) <= \<const0>\;
  m_axi_aruser(583) <= \<const0>\;
  m_axi_aruser(582) <= \<const0>\;
  m_axi_aruser(581) <= \<const0>\;
  m_axi_aruser(580) <= \<const0>\;
  m_axi_aruser(579) <= \<const0>\;
  m_axi_aruser(578) <= \<const0>\;
  m_axi_aruser(577) <= \<const0>\;
  m_axi_aruser(576) <= \<const0>\;
  m_axi_aruser(575) <= \<const0>\;
  m_axi_aruser(574) <= \<const0>\;
  m_axi_aruser(573) <= \<const0>\;
  m_axi_aruser(572) <= \<const0>\;
  m_axi_aruser(571) <= \<const0>\;
  m_axi_aruser(570) <= \<const0>\;
  m_axi_aruser(569) <= \<const0>\;
  m_axi_aruser(568) <= \<const0>\;
  m_axi_aruser(567) <= \<const0>\;
  m_axi_aruser(566) <= \<const0>\;
  m_axi_aruser(565) <= \<const0>\;
  m_axi_aruser(564) <= \<const0>\;
  m_axi_aruser(563) <= \<const0>\;
  m_axi_aruser(562) <= \<const0>\;
  m_axi_aruser(561) <= \<const0>\;
  m_axi_aruser(560) <= \<const0>\;
  m_axi_aruser(559) <= \<const0>\;
  m_axi_aruser(558) <= \<const0>\;
  m_axi_aruser(557) <= \<const0>\;
  m_axi_aruser(556) <= \<const0>\;
  m_axi_aruser(555) <= \<const0>\;
  m_axi_aruser(554) <= \<const0>\;
  m_axi_aruser(553) <= \<const0>\;
  m_axi_aruser(552) <= \<const0>\;
  m_axi_aruser(551) <= \<const0>\;
  m_axi_aruser(550) <= \<const0>\;
  m_axi_aruser(549) <= \<const0>\;
  m_axi_aruser(548) <= \<const0>\;
  m_axi_aruser(547) <= \<const0>\;
  m_axi_aruser(546) <= \<const0>\;
  m_axi_aruser(545) <= \<const0>\;
  m_axi_aruser(544) <= \<const0>\;
  m_axi_aruser(543) <= \<const0>\;
  m_axi_aruser(542) <= \<const0>\;
  m_axi_aruser(541) <= \<const0>\;
  m_axi_aruser(540) <= \<const0>\;
  m_axi_aruser(539) <= \<const0>\;
  m_axi_aruser(538) <= \<const0>\;
  m_axi_aruser(537) <= \<const0>\;
  m_axi_aruser(536) <= \<const0>\;
  m_axi_aruser(535) <= \<const0>\;
  m_axi_aruser(534) <= \<const0>\;
  m_axi_aruser(533) <= \<const0>\;
  m_axi_aruser(532) <= \<const0>\;
  m_axi_aruser(531) <= \<const0>\;
  m_axi_aruser(530) <= \<const0>\;
  m_axi_aruser(529) <= \<const0>\;
  m_axi_aruser(528) <= \<const0>\;
  m_axi_aruser(527) <= \<const0>\;
  m_axi_aruser(526) <= \<const0>\;
  m_axi_aruser(525) <= \<const0>\;
  m_axi_aruser(524) <= \<const0>\;
  m_axi_aruser(523) <= \<const0>\;
  m_axi_aruser(522) <= \<const0>\;
  m_axi_aruser(521) <= \<const0>\;
  m_axi_aruser(520) <= \<const0>\;
  m_axi_aruser(519) <= \<const0>\;
  m_axi_aruser(518) <= \<const0>\;
  m_axi_aruser(517) <= \<const0>\;
  m_axi_aruser(516) <= \<const0>\;
  m_axi_aruser(515) <= \<const0>\;
  m_axi_aruser(514) <= \<const0>\;
  m_axi_aruser(513) <= \<const0>\;
  m_axi_aruser(512) <= \<const0>\;
  m_axi_aruser(511) <= \<const0>\;
  m_axi_aruser(510) <= \<const0>\;
  m_axi_aruser(509) <= \<const0>\;
  m_axi_aruser(508) <= \<const0>\;
  m_axi_aruser(507) <= \<const0>\;
  m_axi_aruser(506) <= \<const0>\;
  m_axi_aruser(505) <= \<const0>\;
  m_axi_aruser(504) <= \<const0>\;
  m_axi_aruser(503) <= \<const0>\;
  m_axi_aruser(502) <= \<const0>\;
  m_axi_aruser(501) <= \<const0>\;
  m_axi_aruser(500) <= \<const0>\;
  m_axi_aruser(499) <= \<const0>\;
  m_axi_aruser(498) <= \<const0>\;
  m_axi_aruser(497) <= \<const0>\;
  m_axi_aruser(496) <= \<const0>\;
  m_axi_aruser(495) <= \<const0>\;
  m_axi_aruser(494) <= \<const0>\;
  m_axi_aruser(493) <= \<const0>\;
  m_axi_aruser(492) <= \<const0>\;
  m_axi_aruser(491) <= \<const0>\;
  m_axi_aruser(490) <= \<const0>\;
  m_axi_aruser(489) <= \<const0>\;
  m_axi_aruser(488) <= \<const0>\;
  m_axi_aruser(487) <= \<const0>\;
  m_axi_aruser(486) <= \<const0>\;
  m_axi_aruser(485) <= \<const0>\;
  m_axi_aruser(484) <= \<const0>\;
  m_axi_aruser(483) <= \<const0>\;
  m_axi_aruser(482) <= \<const0>\;
  m_axi_aruser(481) <= \<const0>\;
  m_axi_aruser(480) <= \<const0>\;
  m_axi_aruser(479) <= \<const0>\;
  m_axi_aruser(478) <= \<const0>\;
  m_axi_aruser(477) <= \<const0>\;
  m_axi_aruser(476) <= \<const0>\;
  m_axi_aruser(475) <= \<const0>\;
  m_axi_aruser(474) <= \<const0>\;
  m_axi_aruser(473) <= \<const0>\;
  m_axi_aruser(472) <= \<const0>\;
  m_axi_aruser(471) <= \<const0>\;
  m_axi_aruser(470) <= \<const0>\;
  m_axi_aruser(469) <= \<const0>\;
  m_axi_aruser(468) <= \<const0>\;
  m_axi_aruser(467) <= \<const0>\;
  m_axi_aruser(466) <= \<const0>\;
  m_axi_aruser(465) <= \<const0>\;
  m_axi_aruser(464) <= \<const0>\;
  m_axi_aruser(463) <= \<const0>\;
  m_axi_aruser(462) <= \<const0>\;
  m_axi_aruser(461) <= \<const0>\;
  m_axi_aruser(460) <= \<const0>\;
  m_axi_aruser(459) <= \<const0>\;
  m_axi_aruser(458) <= \<const0>\;
  m_axi_aruser(457) <= \<const0>\;
  m_axi_aruser(456) <= \<const0>\;
  m_axi_aruser(455) <= \<const0>\;
  m_axi_aruser(454) <= \<const0>\;
  m_axi_aruser(453) <= \<const0>\;
  m_axi_aruser(452) <= \<const0>\;
  m_axi_aruser(451) <= \<const0>\;
  m_axi_aruser(450) <= \<const0>\;
  m_axi_aruser(449) <= \<const0>\;
  m_axi_aruser(448) <= \<const0>\;
  m_axi_aruser(447) <= \<const0>\;
  m_axi_aruser(446) <= \<const0>\;
  m_axi_aruser(445) <= \<const0>\;
  m_axi_aruser(444) <= \<const0>\;
  m_axi_aruser(443) <= \<const0>\;
  m_axi_aruser(442) <= \<const0>\;
  m_axi_aruser(441) <= \<const0>\;
  m_axi_aruser(440) <= \<const0>\;
  m_axi_aruser(439) <= \<const0>\;
  m_axi_aruser(438) <= \<const0>\;
  m_axi_aruser(437) <= \<const0>\;
  m_axi_aruser(436) <= \<const0>\;
  m_axi_aruser(435) <= \<const0>\;
  m_axi_aruser(434) <= \<const0>\;
  m_axi_aruser(433) <= \<const0>\;
  m_axi_aruser(432) <= \<const0>\;
  m_axi_aruser(431) <= \<const0>\;
  m_axi_aruser(430) <= \<const0>\;
  m_axi_aruser(429) <= \<const0>\;
  m_axi_aruser(428) <= \<const0>\;
  m_axi_aruser(427) <= \<const0>\;
  m_axi_aruser(426) <= \<const0>\;
  m_axi_aruser(425) <= \<const0>\;
  m_axi_aruser(424) <= \<const0>\;
  m_axi_aruser(423) <= \<const0>\;
  m_axi_aruser(422) <= \<const0>\;
  m_axi_aruser(421) <= \<const0>\;
  m_axi_aruser(420) <= \<const0>\;
  m_axi_aruser(419) <= \<const0>\;
  m_axi_aruser(418) <= \<const0>\;
  m_axi_aruser(417) <= \<const0>\;
  m_axi_aruser(416) <= \<const0>\;
  m_axi_aruser(415) <= \<const0>\;
  m_axi_aruser(414) <= \<const0>\;
  m_axi_aruser(413) <= \<const0>\;
  m_axi_aruser(412) <= \<const0>\;
  m_axi_aruser(411) <= \<const0>\;
  m_axi_aruser(410) <= \<const0>\;
  m_axi_aruser(409) <= \<const0>\;
  m_axi_aruser(408) <= \<const0>\;
  m_axi_aruser(407) <= \<const0>\;
  m_axi_aruser(406) <= \<const0>\;
  m_axi_aruser(405) <= \<const0>\;
  m_axi_aruser(404) <= \<const0>\;
  m_axi_aruser(403) <= \<const0>\;
  m_axi_aruser(402) <= \<const0>\;
  m_axi_aruser(401) <= \<const0>\;
  m_axi_aruser(400) <= \<const0>\;
  m_axi_aruser(399) <= \<const0>\;
  m_axi_aruser(398) <= \<const0>\;
  m_axi_aruser(397) <= \<const0>\;
  m_axi_aruser(396) <= \<const0>\;
  m_axi_aruser(395) <= \<const0>\;
  m_axi_aruser(394) <= \<const0>\;
  m_axi_aruser(393) <= \<const0>\;
  m_axi_aruser(392) <= \<const0>\;
  m_axi_aruser(391) <= \<const0>\;
  m_axi_aruser(390) <= \<const0>\;
  m_axi_aruser(389) <= \<const0>\;
  m_axi_aruser(388) <= \<const0>\;
  m_axi_aruser(387) <= \<const0>\;
  m_axi_aruser(386) <= \<const0>\;
  m_axi_aruser(385) <= \<const0>\;
  m_axi_aruser(384) <= \<const0>\;
  m_axi_aruser(383) <= \<const0>\;
  m_axi_aruser(382) <= \<const0>\;
  m_axi_aruser(381) <= \<const0>\;
  m_axi_aruser(380) <= \<const0>\;
  m_axi_aruser(379) <= \<const0>\;
  m_axi_aruser(378) <= \<const0>\;
  m_axi_aruser(377) <= \<const0>\;
  m_axi_aruser(376) <= \<const0>\;
  m_axi_aruser(375) <= \<const0>\;
  m_axi_aruser(374) <= \<const0>\;
  m_axi_aruser(373) <= \<const0>\;
  m_axi_aruser(372) <= \<const0>\;
  m_axi_aruser(371) <= \<const0>\;
  m_axi_aruser(370) <= \<const0>\;
  m_axi_aruser(369) <= \<const0>\;
  m_axi_aruser(368) <= \<const0>\;
  m_axi_aruser(367) <= \<const0>\;
  m_axi_aruser(366) <= \<const0>\;
  m_axi_aruser(365) <= \<const0>\;
  m_axi_aruser(364) <= \<const0>\;
  m_axi_aruser(363) <= \<const0>\;
  m_axi_aruser(362) <= \<const0>\;
  m_axi_aruser(361) <= \<const0>\;
  m_axi_aruser(360) <= \<const0>\;
  m_axi_aruser(359) <= \<const0>\;
  m_axi_aruser(358) <= \<const0>\;
  m_axi_aruser(357) <= \<const0>\;
  m_axi_aruser(356) <= \<const0>\;
  m_axi_aruser(355) <= \<const0>\;
  m_axi_aruser(354) <= \<const0>\;
  m_axi_aruser(353) <= \<const0>\;
  m_axi_aruser(352) <= \<const0>\;
  m_axi_aruser(351) <= \<const0>\;
  m_axi_aruser(350) <= \<const0>\;
  m_axi_aruser(349) <= \<const0>\;
  m_axi_aruser(348) <= \<const0>\;
  m_axi_aruser(347) <= \<const0>\;
  m_axi_aruser(346) <= \<const0>\;
  m_axi_aruser(345) <= \<const0>\;
  m_axi_aruser(344) <= \<const0>\;
  m_axi_aruser(343) <= \<const0>\;
  m_axi_aruser(342) <= \<const0>\;
  m_axi_aruser(341) <= \<const0>\;
  m_axi_aruser(340) <= \<const0>\;
  m_axi_aruser(339) <= \<const0>\;
  m_axi_aruser(338) <= \<const0>\;
  m_axi_aruser(337) <= \<const0>\;
  m_axi_aruser(336) <= \<const0>\;
  m_axi_aruser(335) <= \<const0>\;
  m_axi_aruser(334) <= \<const0>\;
  m_axi_aruser(333) <= \<const0>\;
  m_axi_aruser(332) <= \<const0>\;
  m_axi_aruser(331) <= \<const0>\;
  m_axi_aruser(330) <= \<const0>\;
  m_axi_aruser(329) <= \<const0>\;
  m_axi_aruser(328) <= \<const0>\;
  m_axi_aruser(327) <= \<const0>\;
  m_axi_aruser(326) <= \<const0>\;
  m_axi_aruser(325) <= \<const0>\;
  m_axi_aruser(324) <= \<const0>\;
  m_axi_aruser(323) <= \<const0>\;
  m_axi_aruser(322) <= \<const0>\;
  m_axi_aruser(321) <= \<const0>\;
  m_axi_aruser(320) <= \<const0>\;
  m_axi_aruser(319) <= \<const0>\;
  m_axi_aruser(318) <= \<const0>\;
  m_axi_aruser(317) <= \<const0>\;
  m_axi_aruser(316) <= \<const0>\;
  m_axi_aruser(315) <= \<const0>\;
  m_axi_aruser(314) <= \<const0>\;
  m_axi_aruser(313) <= \<const0>\;
  m_axi_aruser(312) <= \<const0>\;
  m_axi_aruser(311) <= \<const0>\;
  m_axi_aruser(310) <= \<const0>\;
  m_axi_aruser(309) <= \<const0>\;
  m_axi_aruser(308) <= \<const0>\;
  m_axi_aruser(307) <= \<const0>\;
  m_axi_aruser(306) <= \<const0>\;
  m_axi_aruser(305) <= \<const0>\;
  m_axi_aruser(304) <= \<const0>\;
  m_axi_aruser(303) <= \<const0>\;
  m_axi_aruser(302) <= \<const0>\;
  m_axi_aruser(301) <= \<const0>\;
  m_axi_aruser(300) <= \<const0>\;
  m_axi_aruser(299) <= \<const0>\;
  m_axi_aruser(298) <= \<const0>\;
  m_axi_aruser(297) <= \<const0>\;
  m_axi_aruser(296) <= \<const0>\;
  m_axi_aruser(295) <= \<const0>\;
  m_axi_aruser(294) <= \<const0>\;
  m_axi_aruser(293) <= \<const0>\;
  m_axi_aruser(292) <= \<const0>\;
  m_axi_aruser(291) <= \<const0>\;
  m_axi_aruser(290) <= \<const0>\;
  m_axi_aruser(289) <= \<const0>\;
  m_axi_aruser(288) <= \<const0>\;
  m_axi_aruser(287) <= \<const0>\;
  m_axi_aruser(286) <= \<const0>\;
  m_axi_aruser(285) <= \<const0>\;
  m_axi_aruser(284) <= \<const0>\;
  m_axi_aruser(283) <= \<const0>\;
  m_axi_aruser(282) <= \<const0>\;
  m_axi_aruser(281) <= \<const0>\;
  m_axi_aruser(280) <= \<const0>\;
  m_axi_aruser(279) <= \<const0>\;
  m_axi_aruser(278) <= \<const0>\;
  m_axi_aruser(277) <= \<const0>\;
  m_axi_aruser(276) <= \<const0>\;
  m_axi_aruser(275) <= \<const0>\;
  m_axi_aruser(274) <= \<const0>\;
  m_axi_aruser(273) <= \<const0>\;
  m_axi_aruser(272) <= \<const0>\;
  m_axi_aruser(271) <= \<const0>\;
  m_axi_aruser(270) <= \<const0>\;
  m_axi_aruser(269) <= \<const0>\;
  m_axi_aruser(268) <= \<const0>\;
  m_axi_aruser(267) <= \<const0>\;
  m_axi_aruser(266) <= \<const0>\;
  m_axi_aruser(265) <= \<const0>\;
  m_axi_aruser(264) <= \<const0>\;
  m_axi_aruser(263) <= \<const0>\;
  m_axi_aruser(262) <= \<const0>\;
  m_axi_aruser(261) <= \<const0>\;
  m_axi_aruser(260) <= \<const0>\;
  m_axi_aruser(259) <= \<const0>\;
  m_axi_aruser(258) <= \<const0>\;
  m_axi_aruser(257) <= \<const0>\;
  m_axi_aruser(256) <= \<const0>\;
  m_axi_aruser(255) <= \<const0>\;
  m_axi_aruser(254) <= \<const0>\;
  m_axi_aruser(253) <= \<const0>\;
  m_axi_aruser(252) <= \<const0>\;
  m_axi_aruser(251) <= \<const0>\;
  m_axi_aruser(250) <= \<const0>\;
  m_axi_aruser(249) <= \<const0>\;
  m_axi_aruser(248) <= \<const0>\;
  m_axi_aruser(247) <= \<const0>\;
  m_axi_aruser(246) <= \<const0>\;
  m_axi_aruser(245) <= \<const0>\;
  m_axi_aruser(244) <= \<const0>\;
  m_axi_aruser(243) <= \<const0>\;
  m_axi_aruser(242) <= \<const0>\;
  m_axi_aruser(241) <= \<const0>\;
  m_axi_aruser(240) <= \<const0>\;
  m_axi_aruser(239) <= \<const0>\;
  m_axi_aruser(238) <= \<const0>\;
  m_axi_aruser(237) <= \<const0>\;
  m_axi_aruser(236) <= \<const0>\;
  m_axi_aruser(235) <= \<const0>\;
  m_axi_aruser(234) <= \<const0>\;
  m_axi_aruser(233) <= \<const0>\;
  m_axi_aruser(232) <= \<const0>\;
  m_axi_aruser(231) <= \<const0>\;
  m_axi_aruser(230) <= \<const0>\;
  m_axi_aruser(229) <= \<const0>\;
  m_axi_aruser(228) <= \<const0>\;
  m_axi_aruser(227) <= \<const0>\;
  m_axi_aruser(226) <= \<const0>\;
  m_axi_aruser(225) <= \<const0>\;
  m_axi_aruser(224) <= \<const0>\;
  m_axi_aruser(223) <= \<const0>\;
  m_axi_aruser(222) <= \<const0>\;
  m_axi_aruser(221) <= \<const0>\;
  m_axi_aruser(220) <= \<const0>\;
  m_axi_aruser(219) <= \<const0>\;
  m_axi_aruser(218) <= \<const0>\;
  m_axi_aruser(217) <= \<const0>\;
  m_axi_aruser(216) <= \<const0>\;
  m_axi_aruser(215) <= \<const0>\;
  m_axi_aruser(214) <= \<const0>\;
  m_axi_aruser(213) <= \<const0>\;
  m_axi_aruser(212) <= \<const0>\;
  m_axi_aruser(211) <= \<const0>\;
  m_axi_aruser(210) <= \<const0>\;
  m_axi_aruser(209) <= \<const0>\;
  m_axi_aruser(208) <= \<const0>\;
  m_axi_aruser(207) <= \<const0>\;
  m_axi_aruser(206) <= \<const0>\;
  m_axi_aruser(205) <= \<const0>\;
  m_axi_aruser(204) <= \<const0>\;
  m_axi_aruser(203) <= \<const0>\;
  m_axi_aruser(202) <= \<const0>\;
  m_axi_aruser(201) <= \<const0>\;
  m_axi_aruser(200) <= \<const0>\;
  m_axi_aruser(199) <= \<const0>\;
  m_axi_aruser(198) <= \<const0>\;
  m_axi_aruser(197) <= \<const0>\;
  m_axi_aruser(196) <= \<const0>\;
  m_axi_aruser(195) <= \<const0>\;
  m_axi_aruser(194) <= \<const0>\;
  m_axi_aruser(193) <= \<const0>\;
  m_axi_aruser(192) <= \<const0>\;
  m_axi_aruser(191) <= \<const0>\;
  m_axi_aruser(190) <= \<const0>\;
  m_axi_aruser(189) <= \<const0>\;
  m_axi_aruser(188) <= \<const0>\;
  m_axi_aruser(187) <= \<const0>\;
  m_axi_aruser(186) <= \<const0>\;
  m_axi_aruser(185) <= \<const0>\;
  m_axi_aruser(184) <= \<const0>\;
  m_axi_aruser(183) <= \<const0>\;
  m_axi_aruser(182) <= \<const0>\;
  m_axi_aruser(181) <= \<const0>\;
  m_axi_aruser(180) <= \<const0>\;
  m_axi_aruser(179) <= \<const0>\;
  m_axi_aruser(178) <= \<const0>\;
  m_axi_aruser(177) <= \<const0>\;
  m_axi_aruser(176) <= \<const0>\;
  m_axi_aruser(175) <= \<const0>\;
  m_axi_aruser(174) <= \<const0>\;
  m_axi_aruser(173) <= \<const0>\;
  m_axi_aruser(172) <= \<const0>\;
  m_axi_aruser(171) <= \<const0>\;
  m_axi_aruser(170) <= \<const0>\;
  m_axi_aruser(169) <= \<const0>\;
  m_axi_aruser(168) <= \<const0>\;
  m_axi_aruser(167) <= \<const0>\;
  m_axi_aruser(166) <= \<const0>\;
  m_axi_aruser(165) <= \<const0>\;
  m_axi_aruser(164) <= \<const0>\;
  m_axi_aruser(163) <= \<const0>\;
  m_axi_aruser(162) <= \<const0>\;
  m_axi_aruser(161) <= \<const0>\;
  m_axi_aruser(160) <= \<const0>\;
  m_axi_aruser(159) <= \<const0>\;
  m_axi_aruser(158) <= \<const0>\;
  m_axi_aruser(157) <= \<const0>\;
  m_axi_aruser(156) <= \<const0>\;
  m_axi_aruser(155) <= \<const0>\;
  m_axi_aruser(154) <= \<const0>\;
  m_axi_aruser(153) <= \<const0>\;
  m_axi_aruser(152) <= \<const0>\;
  m_axi_aruser(151) <= \<const0>\;
  m_axi_aruser(150) <= \<const0>\;
  m_axi_aruser(149) <= \<const0>\;
  m_axi_aruser(148) <= \<const0>\;
  m_axi_aruser(147) <= \<const0>\;
  m_axi_aruser(146) <= \<const0>\;
  m_axi_aruser(145) <= \<const0>\;
  m_axi_aruser(144) <= \<const0>\;
  m_axi_aruser(143) <= \<const0>\;
  m_axi_aruser(142) <= \<const0>\;
  m_axi_aruser(141) <= \<const0>\;
  m_axi_aruser(140) <= \<const0>\;
  m_axi_aruser(139) <= \<const0>\;
  m_axi_aruser(138) <= \<const0>\;
  m_axi_aruser(137) <= \<const0>\;
  m_axi_aruser(136) <= \<const0>\;
  m_axi_aruser(135) <= \<const0>\;
  m_axi_aruser(134) <= \<const0>\;
  m_axi_aruser(133) <= \<const0>\;
  m_axi_aruser(132) <= \<const0>\;
  m_axi_aruser(131) <= \<const0>\;
  m_axi_aruser(130) <= \<const0>\;
  m_axi_aruser(129) <= \<const0>\;
  m_axi_aruser(128) <= \<const0>\;
  m_axi_aruser(127) <= \<const0>\;
  m_axi_aruser(126) <= \<const0>\;
  m_axi_aruser(125) <= \<const0>\;
  m_axi_aruser(124) <= \<const0>\;
  m_axi_aruser(123) <= \<const0>\;
  m_axi_aruser(122) <= \<const0>\;
  m_axi_aruser(121) <= \<const0>\;
  m_axi_aruser(120) <= \<const0>\;
  m_axi_aruser(119) <= \<const0>\;
  m_axi_aruser(118) <= \<const0>\;
  m_axi_aruser(117) <= \<const0>\;
  m_axi_aruser(116) <= \<const0>\;
  m_axi_aruser(115) <= \<const0>\;
  m_axi_aruser(114) <= \<const0>\;
  m_axi_aruser(113) <= \<const0>\;
  m_axi_aruser(112) <= \<const0>\;
  m_axi_aruser(111) <= \<const0>\;
  m_axi_aruser(110) <= \<const0>\;
  m_axi_aruser(109) <= \<const0>\;
  m_axi_aruser(108) <= \<const0>\;
  m_axi_aruser(107) <= \<const0>\;
  m_axi_aruser(106) <= \<const0>\;
  m_axi_aruser(105) <= \<const0>\;
  m_axi_aruser(104) <= \<const0>\;
  m_axi_aruser(103) <= \<const0>\;
  m_axi_aruser(102) <= \<const0>\;
  m_axi_aruser(101) <= \<const0>\;
  m_axi_aruser(100) <= \<const0>\;
  m_axi_aruser(99) <= \<const0>\;
  m_axi_aruser(98) <= \<const0>\;
  m_axi_aruser(97) <= \<const0>\;
  m_axi_aruser(96) <= \<const0>\;
  m_axi_aruser(95) <= \<const0>\;
  m_axi_aruser(94) <= \<const0>\;
  m_axi_aruser(93) <= \<const0>\;
  m_axi_aruser(92) <= \<const0>\;
  m_axi_aruser(91) <= \<const0>\;
  m_axi_aruser(90) <= \<const0>\;
  m_axi_aruser(89) <= \<const0>\;
  m_axi_aruser(88) <= \<const0>\;
  m_axi_aruser(87) <= \<const0>\;
  m_axi_aruser(86) <= \<const0>\;
  m_axi_aruser(85) <= \<const0>\;
  m_axi_aruser(84) <= \<const0>\;
  m_axi_aruser(83) <= \<const0>\;
  m_axi_aruser(82) <= \<const0>\;
  m_axi_aruser(81) <= \<const0>\;
  m_axi_aruser(80) <= \<const0>\;
  m_axi_aruser(79) <= \<const0>\;
  m_axi_aruser(78) <= \<const0>\;
  m_axi_aruser(77) <= \<const0>\;
  m_axi_aruser(76) <= \<const0>\;
  m_axi_aruser(75) <= \<const0>\;
  m_axi_aruser(74) <= \<const0>\;
  m_axi_aruser(73) <= \<const0>\;
  m_axi_aruser(72) <= \<const0>\;
  m_axi_aruser(71) <= \<const0>\;
  m_axi_aruser(70) <= \<const0>\;
  m_axi_aruser(69) <= \<const0>\;
  m_axi_aruser(68) <= \<const0>\;
  m_axi_aruser(67) <= \<const0>\;
  m_axi_aruser(66) <= \<const0>\;
  m_axi_aruser(65) <= \<const0>\;
  m_axi_aruser(64) <= \<const0>\;
  m_axi_aruser(63) <= \<const0>\;
  m_axi_aruser(62) <= \<const0>\;
  m_axi_aruser(61) <= \<const0>\;
  m_axi_aruser(60) <= \<const0>\;
  m_axi_aruser(59) <= \<const0>\;
  m_axi_aruser(58) <= \<const0>\;
  m_axi_aruser(57) <= \<const0>\;
  m_axi_aruser(56) <= \<const0>\;
  m_axi_aruser(55) <= \<const0>\;
  m_axi_aruser(54) <= \<const0>\;
  m_axi_aruser(53) <= \<const0>\;
  m_axi_aruser(52) <= \<const0>\;
  m_axi_aruser(51) <= \<const0>\;
  m_axi_aruser(50) <= \<const0>\;
  m_axi_aruser(49) <= \<const0>\;
  m_axi_aruser(48) <= \<const0>\;
  m_axi_aruser(47) <= \<const0>\;
  m_axi_aruser(46) <= \<const0>\;
  m_axi_aruser(45) <= \<const0>\;
  m_axi_aruser(44) <= \<const0>\;
  m_axi_aruser(43) <= \<const0>\;
  m_axi_aruser(42) <= \<const0>\;
  m_axi_aruser(41) <= \<const0>\;
  m_axi_aruser(40) <= \<const0>\;
  m_axi_aruser(39) <= \<const0>\;
  m_axi_aruser(38) <= \<const0>\;
  m_axi_aruser(37) <= \<const0>\;
  m_axi_aruser(36) <= \<const0>\;
  m_axi_aruser(35) <= \<const0>\;
  m_axi_aruser(34) <= \<const0>\;
  m_axi_aruser(33) <= \<const0>\;
  m_axi_aruser(32) <= \<const0>\;
  m_axi_aruser(31) <= \<const0>\;
  m_axi_aruser(30) <= \<const0>\;
  m_axi_aruser(29) <= \<const0>\;
  m_axi_aruser(28) <= \<const0>\;
  m_axi_aruser(27) <= \<const0>\;
  m_axi_aruser(26) <= \<const0>\;
  m_axi_aruser(25) <= \<const0>\;
  m_axi_aruser(24) <= \<const0>\;
  m_axi_aruser(23) <= \<const0>\;
  m_axi_aruser(22) <= \<const0>\;
  m_axi_aruser(21) <= \<const0>\;
  m_axi_aruser(20) <= \<const0>\;
  m_axi_aruser(19) <= \<const0>\;
  m_axi_aruser(18) <= \<const0>\;
  m_axi_aruser(17) <= \<const0>\;
  m_axi_aruser(16) <= \<const0>\;
  m_axi_aruser(15) <= \<const0>\;
  m_axi_aruser(14) <= \<const0>\;
  m_axi_aruser(13) <= \<const0>\;
  m_axi_aruser(12) <= \<const0>\;
  m_axi_aruser(11) <= \<const0>\;
  m_axi_aruser(10) <= \<const0>\;
  m_axi_aruser(9) <= \<const0>\;
  m_axi_aruser(8) <= \<const0>\;
  m_axi_aruser(7) <= \<const0>\;
  m_axi_aruser(6) <= \<const0>\;
  m_axi_aruser(5) <= \<const0>\;
  m_axi_aruser(4) <= \<const0>\;
  m_axi_aruser(3) <= \<const0>\;
  m_axi_aruser(2) <= \<const0>\;
  m_axi_aruser(1) <= \<const0>\;
  m_axi_aruser(0) <= \<const0>\;
  m_axi_awaddr(31) <= \<const0>\;
  m_axi_awaddr(30) <= \<const0>\;
  m_axi_awaddr(29) <= \<const0>\;
  m_axi_awaddr(28) <= \<const0>\;
  m_axi_awaddr(27) <= \<const0>\;
  m_axi_awaddr(26) <= \<const0>\;
  m_axi_awaddr(25) <= \<const0>\;
  m_axi_awaddr(24) <= \<const0>\;
  m_axi_awaddr(23) <= \<const0>\;
  m_axi_awaddr(22) <= \<const0>\;
  m_axi_awaddr(21) <= \<const0>\;
  m_axi_awaddr(20) <= \<const0>\;
  m_axi_awaddr(19) <= \<const0>\;
  m_axi_awaddr(18) <= \<const0>\;
  m_axi_awaddr(17) <= \<const0>\;
  m_axi_awaddr(16) <= \<const0>\;
  m_axi_awaddr(15) <= \<const0>\;
  m_axi_awaddr(14) <= \<const0>\;
  m_axi_awaddr(13) <= \<const0>\;
  m_axi_awaddr(12) <= \<const0>\;
  m_axi_awaddr(11) <= \<const0>\;
  m_axi_awaddr(10) <= \<const0>\;
  m_axi_awaddr(9) <= \<const0>\;
  m_axi_awaddr(8) <= \<const0>\;
  m_axi_awaddr(7 downto 0) <= \^m_axi_awaddr\(7 downto 0);
  m_axi_awburst(1) <= \<const0>\;
  m_axi_awburst(0) <= \<const0>\;
  m_axi_awcache(3) <= \<const0>\;
  m_axi_awcache(2) <= \<const0>\;
  m_axi_awcache(1) <= \<const0>\;
  m_axi_awcache(0) <= \<const0>\;
  m_axi_awid(11 downto 0) <= \^m_axi_awid\(11 downto 0);
  m_axi_awlen(7) <= \<const0>\;
  m_axi_awlen(6) <= \<const0>\;
  m_axi_awlen(5) <= \<const0>\;
  m_axi_awlen(4) <= \<const0>\;
  m_axi_awlen(3) <= \<const0>\;
  m_axi_awlen(2) <= \<const0>\;
  m_axi_awlen(1) <= \<const0>\;
  m_axi_awlen(0) <= \<const0>\;
  m_axi_awlock(0) <= \<const0>\;
  m_axi_awqos(3) <= \<const0>\;
  m_axi_awqos(2) <= \<const0>\;
  m_axi_awqos(1) <= \<const0>\;
  m_axi_awqos(0) <= \<const0>\;
  m_axi_awuser(1023) <= \<const0>\;
  m_axi_awuser(1022) <= \<const0>\;
  m_axi_awuser(1021) <= \<const0>\;
  m_axi_awuser(1020) <= \<const0>\;
  m_axi_awuser(1019) <= \<const0>\;
  m_axi_awuser(1018) <= \<const0>\;
  m_axi_awuser(1017) <= \<const0>\;
  m_axi_awuser(1016) <= \<const0>\;
  m_axi_awuser(1015) <= \<const0>\;
  m_axi_awuser(1014) <= \<const0>\;
  m_axi_awuser(1013) <= \<const0>\;
  m_axi_awuser(1012) <= \<const0>\;
  m_axi_awuser(1011) <= \<const0>\;
  m_axi_awuser(1010) <= \<const0>\;
  m_axi_awuser(1009) <= \<const0>\;
  m_axi_awuser(1008) <= \<const0>\;
  m_axi_awuser(1007) <= \<const0>\;
  m_axi_awuser(1006) <= \<const0>\;
  m_axi_awuser(1005) <= \<const0>\;
  m_axi_awuser(1004) <= \<const0>\;
  m_axi_awuser(1003) <= \<const0>\;
  m_axi_awuser(1002) <= \<const0>\;
  m_axi_awuser(1001) <= \<const0>\;
  m_axi_awuser(1000) <= \<const0>\;
  m_axi_awuser(999) <= \<const0>\;
  m_axi_awuser(998) <= \<const0>\;
  m_axi_awuser(997) <= \<const0>\;
  m_axi_awuser(996) <= \<const0>\;
  m_axi_awuser(995) <= \<const0>\;
  m_axi_awuser(994) <= \<const0>\;
  m_axi_awuser(993) <= \<const0>\;
  m_axi_awuser(992) <= \<const0>\;
  m_axi_awuser(991) <= \<const0>\;
  m_axi_awuser(990) <= \<const0>\;
  m_axi_awuser(989) <= \<const0>\;
  m_axi_awuser(988) <= \<const0>\;
  m_axi_awuser(987) <= \<const0>\;
  m_axi_awuser(986) <= \<const0>\;
  m_axi_awuser(985) <= \<const0>\;
  m_axi_awuser(984) <= \<const0>\;
  m_axi_awuser(983) <= \<const0>\;
  m_axi_awuser(982) <= \<const0>\;
  m_axi_awuser(981) <= \<const0>\;
  m_axi_awuser(980) <= \<const0>\;
  m_axi_awuser(979) <= \<const0>\;
  m_axi_awuser(978) <= \<const0>\;
  m_axi_awuser(977) <= \<const0>\;
  m_axi_awuser(976) <= \<const0>\;
  m_axi_awuser(975) <= \<const0>\;
  m_axi_awuser(974) <= \<const0>\;
  m_axi_awuser(973) <= \<const0>\;
  m_axi_awuser(972) <= \<const0>\;
  m_axi_awuser(971) <= \<const0>\;
  m_axi_awuser(970) <= \<const0>\;
  m_axi_awuser(969) <= \<const0>\;
  m_axi_awuser(968) <= \<const0>\;
  m_axi_awuser(967) <= \<const0>\;
  m_axi_awuser(966) <= \<const0>\;
  m_axi_awuser(965) <= \<const0>\;
  m_axi_awuser(964) <= \<const0>\;
  m_axi_awuser(963) <= \<const0>\;
  m_axi_awuser(962) <= \<const0>\;
  m_axi_awuser(961) <= \<const0>\;
  m_axi_awuser(960) <= \<const0>\;
  m_axi_awuser(959) <= \<const0>\;
  m_axi_awuser(958) <= \<const0>\;
  m_axi_awuser(957) <= \<const0>\;
  m_axi_awuser(956) <= \<const0>\;
  m_axi_awuser(955) <= \<const0>\;
  m_axi_awuser(954) <= \<const0>\;
  m_axi_awuser(953) <= \<const0>\;
  m_axi_awuser(952) <= \<const0>\;
  m_axi_awuser(951) <= \<const0>\;
  m_axi_awuser(950) <= \<const0>\;
  m_axi_awuser(949) <= \<const0>\;
  m_axi_awuser(948) <= \<const0>\;
  m_axi_awuser(947) <= \<const0>\;
  m_axi_awuser(946) <= \<const0>\;
  m_axi_awuser(945) <= \<const0>\;
  m_axi_awuser(944) <= \<const0>\;
  m_axi_awuser(943) <= \<const0>\;
  m_axi_awuser(942) <= \<const0>\;
  m_axi_awuser(941) <= \<const0>\;
  m_axi_awuser(940) <= \<const0>\;
  m_axi_awuser(939) <= \<const0>\;
  m_axi_awuser(938) <= \<const0>\;
  m_axi_awuser(937) <= \<const0>\;
  m_axi_awuser(936) <= \<const0>\;
  m_axi_awuser(935) <= \<const0>\;
  m_axi_awuser(934) <= \<const0>\;
  m_axi_awuser(933) <= \<const0>\;
  m_axi_awuser(932) <= \<const0>\;
  m_axi_awuser(931) <= \<const0>\;
  m_axi_awuser(930) <= \<const0>\;
  m_axi_awuser(929) <= \<const0>\;
  m_axi_awuser(928) <= \<const0>\;
  m_axi_awuser(927) <= \<const0>\;
  m_axi_awuser(926) <= \<const0>\;
  m_axi_awuser(925) <= \<const0>\;
  m_axi_awuser(924) <= \<const0>\;
  m_axi_awuser(923) <= \<const0>\;
  m_axi_awuser(922) <= \<const0>\;
  m_axi_awuser(921) <= \<const0>\;
  m_axi_awuser(920) <= \<const0>\;
  m_axi_awuser(919) <= \<const0>\;
  m_axi_awuser(918) <= \<const0>\;
  m_axi_awuser(917) <= \<const0>\;
  m_axi_awuser(916) <= \<const0>\;
  m_axi_awuser(915) <= \<const0>\;
  m_axi_awuser(914) <= \<const0>\;
  m_axi_awuser(913) <= \<const0>\;
  m_axi_awuser(912) <= \<const0>\;
  m_axi_awuser(911) <= \<const0>\;
  m_axi_awuser(910) <= \<const0>\;
  m_axi_awuser(909) <= \<const0>\;
  m_axi_awuser(908) <= \<const0>\;
  m_axi_awuser(907) <= \<const0>\;
  m_axi_awuser(906) <= \<const0>\;
  m_axi_awuser(905) <= \<const0>\;
  m_axi_awuser(904) <= \<const0>\;
  m_axi_awuser(903) <= \<const0>\;
  m_axi_awuser(902) <= \<const0>\;
  m_axi_awuser(901) <= \<const0>\;
  m_axi_awuser(900) <= \<const0>\;
  m_axi_awuser(899) <= \<const0>\;
  m_axi_awuser(898) <= \<const0>\;
  m_axi_awuser(897) <= \<const0>\;
  m_axi_awuser(896) <= \<const0>\;
  m_axi_awuser(895) <= \<const0>\;
  m_axi_awuser(894) <= \<const0>\;
  m_axi_awuser(893) <= \<const0>\;
  m_axi_awuser(892) <= \<const0>\;
  m_axi_awuser(891) <= \<const0>\;
  m_axi_awuser(890) <= \<const0>\;
  m_axi_awuser(889) <= \<const0>\;
  m_axi_awuser(888) <= \<const0>\;
  m_axi_awuser(887) <= \<const0>\;
  m_axi_awuser(886) <= \<const0>\;
  m_axi_awuser(885) <= \<const0>\;
  m_axi_awuser(884) <= \<const0>\;
  m_axi_awuser(883) <= \<const0>\;
  m_axi_awuser(882) <= \<const0>\;
  m_axi_awuser(881) <= \<const0>\;
  m_axi_awuser(880) <= \<const0>\;
  m_axi_awuser(879) <= \<const0>\;
  m_axi_awuser(878) <= \<const0>\;
  m_axi_awuser(877) <= \<const0>\;
  m_axi_awuser(876) <= \<const0>\;
  m_axi_awuser(875) <= \<const0>\;
  m_axi_awuser(874) <= \<const0>\;
  m_axi_awuser(873) <= \<const0>\;
  m_axi_awuser(872) <= \<const0>\;
  m_axi_awuser(871) <= \<const0>\;
  m_axi_awuser(870) <= \<const0>\;
  m_axi_awuser(869) <= \<const0>\;
  m_axi_awuser(868) <= \<const0>\;
  m_axi_awuser(867) <= \<const0>\;
  m_axi_awuser(866) <= \<const0>\;
  m_axi_awuser(865) <= \<const0>\;
  m_axi_awuser(864) <= \<const0>\;
  m_axi_awuser(863) <= \<const0>\;
  m_axi_awuser(862) <= \<const0>\;
  m_axi_awuser(861) <= \<const0>\;
  m_axi_awuser(860) <= \<const0>\;
  m_axi_awuser(859) <= \<const0>\;
  m_axi_awuser(858) <= \<const0>\;
  m_axi_awuser(857) <= \<const0>\;
  m_axi_awuser(856) <= \<const0>\;
  m_axi_awuser(855) <= \<const0>\;
  m_axi_awuser(854) <= \<const0>\;
  m_axi_awuser(853) <= \<const0>\;
  m_axi_awuser(852) <= \<const0>\;
  m_axi_awuser(851) <= \<const0>\;
  m_axi_awuser(850) <= \<const0>\;
  m_axi_awuser(849) <= \<const0>\;
  m_axi_awuser(848) <= \<const0>\;
  m_axi_awuser(847) <= \<const0>\;
  m_axi_awuser(846) <= \<const0>\;
  m_axi_awuser(845) <= \<const0>\;
  m_axi_awuser(844) <= \<const0>\;
  m_axi_awuser(843) <= \<const0>\;
  m_axi_awuser(842) <= \<const0>\;
  m_axi_awuser(841) <= \<const0>\;
  m_axi_awuser(840) <= \<const0>\;
  m_axi_awuser(839) <= \<const0>\;
  m_axi_awuser(838) <= \<const0>\;
  m_axi_awuser(837) <= \<const0>\;
  m_axi_awuser(836) <= \<const0>\;
  m_axi_awuser(835) <= \<const0>\;
  m_axi_awuser(834) <= \<const0>\;
  m_axi_awuser(833) <= \<const0>\;
  m_axi_awuser(832) <= \<const0>\;
  m_axi_awuser(831) <= \<const0>\;
  m_axi_awuser(830) <= \<const0>\;
  m_axi_awuser(829) <= \<const0>\;
  m_axi_awuser(828) <= \<const0>\;
  m_axi_awuser(827) <= \<const0>\;
  m_axi_awuser(826) <= \<const0>\;
  m_axi_awuser(825) <= \<const0>\;
  m_axi_awuser(824) <= \<const0>\;
  m_axi_awuser(823) <= \<const0>\;
  m_axi_awuser(822) <= \<const0>\;
  m_axi_awuser(821) <= \<const0>\;
  m_axi_awuser(820) <= \<const0>\;
  m_axi_awuser(819) <= \<const0>\;
  m_axi_awuser(818) <= \<const0>\;
  m_axi_awuser(817) <= \<const0>\;
  m_axi_awuser(816) <= \<const0>\;
  m_axi_awuser(815) <= \<const0>\;
  m_axi_awuser(814) <= \<const0>\;
  m_axi_awuser(813) <= \<const0>\;
  m_axi_awuser(812) <= \<const0>\;
  m_axi_awuser(811) <= \<const0>\;
  m_axi_awuser(810) <= \<const0>\;
  m_axi_awuser(809) <= \<const0>\;
  m_axi_awuser(808) <= \<const0>\;
  m_axi_awuser(807) <= \<const0>\;
  m_axi_awuser(806) <= \<const0>\;
  m_axi_awuser(805) <= \<const0>\;
  m_axi_awuser(804) <= \<const0>\;
  m_axi_awuser(803) <= \<const0>\;
  m_axi_awuser(802) <= \<const0>\;
  m_axi_awuser(801) <= \<const0>\;
  m_axi_awuser(800) <= \<const0>\;
  m_axi_awuser(799) <= \<const0>\;
  m_axi_awuser(798) <= \<const0>\;
  m_axi_awuser(797) <= \<const0>\;
  m_axi_awuser(796) <= \<const0>\;
  m_axi_awuser(795) <= \<const0>\;
  m_axi_awuser(794) <= \<const0>\;
  m_axi_awuser(793) <= \<const0>\;
  m_axi_awuser(792) <= \<const0>\;
  m_axi_awuser(791) <= \<const0>\;
  m_axi_awuser(790) <= \<const0>\;
  m_axi_awuser(789) <= \<const0>\;
  m_axi_awuser(788) <= \<const0>\;
  m_axi_awuser(787) <= \<const0>\;
  m_axi_awuser(786) <= \<const0>\;
  m_axi_awuser(785) <= \<const0>\;
  m_axi_awuser(784) <= \<const0>\;
  m_axi_awuser(783) <= \<const0>\;
  m_axi_awuser(782) <= \<const0>\;
  m_axi_awuser(781) <= \<const0>\;
  m_axi_awuser(780) <= \<const0>\;
  m_axi_awuser(779) <= \<const0>\;
  m_axi_awuser(778) <= \<const0>\;
  m_axi_awuser(777) <= \<const0>\;
  m_axi_awuser(776) <= \<const0>\;
  m_axi_awuser(775) <= \<const0>\;
  m_axi_awuser(774) <= \<const0>\;
  m_axi_awuser(773) <= \<const0>\;
  m_axi_awuser(772) <= \<const0>\;
  m_axi_awuser(771) <= \<const0>\;
  m_axi_awuser(770) <= \<const0>\;
  m_axi_awuser(769) <= \<const0>\;
  m_axi_awuser(768) <= \<const0>\;
  m_axi_awuser(767) <= \<const0>\;
  m_axi_awuser(766) <= \<const0>\;
  m_axi_awuser(765) <= \<const0>\;
  m_axi_awuser(764) <= \<const0>\;
  m_axi_awuser(763) <= \<const0>\;
  m_axi_awuser(762) <= \<const0>\;
  m_axi_awuser(761) <= \<const0>\;
  m_axi_awuser(760) <= \<const0>\;
  m_axi_awuser(759) <= \<const0>\;
  m_axi_awuser(758) <= \<const0>\;
  m_axi_awuser(757) <= \<const0>\;
  m_axi_awuser(756) <= \<const0>\;
  m_axi_awuser(755) <= \<const0>\;
  m_axi_awuser(754) <= \<const0>\;
  m_axi_awuser(753) <= \<const0>\;
  m_axi_awuser(752) <= \<const0>\;
  m_axi_awuser(751) <= \<const0>\;
  m_axi_awuser(750) <= \<const0>\;
  m_axi_awuser(749) <= \<const0>\;
  m_axi_awuser(748) <= \<const0>\;
  m_axi_awuser(747) <= \<const0>\;
  m_axi_awuser(746) <= \<const0>\;
  m_axi_awuser(745) <= \<const0>\;
  m_axi_awuser(744) <= \<const0>\;
  m_axi_awuser(743) <= \<const0>\;
  m_axi_awuser(742) <= \<const0>\;
  m_axi_awuser(741) <= \<const0>\;
  m_axi_awuser(740) <= \<const0>\;
  m_axi_awuser(739) <= \<const0>\;
  m_axi_awuser(738) <= \<const0>\;
  m_axi_awuser(737) <= \<const0>\;
  m_axi_awuser(736) <= \<const0>\;
  m_axi_awuser(735) <= \<const0>\;
  m_axi_awuser(734) <= \<const0>\;
  m_axi_awuser(733) <= \<const0>\;
  m_axi_awuser(732) <= \<const0>\;
  m_axi_awuser(731) <= \<const0>\;
  m_axi_awuser(730) <= \<const0>\;
  m_axi_awuser(729) <= \<const0>\;
  m_axi_awuser(728) <= \<const0>\;
  m_axi_awuser(727) <= \<const0>\;
  m_axi_awuser(726) <= \<const0>\;
  m_axi_awuser(725) <= \<const0>\;
  m_axi_awuser(724) <= \<const0>\;
  m_axi_awuser(723) <= \<const0>\;
  m_axi_awuser(722) <= \<const0>\;
  m_axi_awuser(721) <= \<const0>\;
  m_axi_awuser(720) <= \<const0>\;
  m_axi_awuser(719) <= \<const0>\;
  m_axi_awuser(718) <= \<const0>\;
  m_axi_awuser(717) <= \<const0>\;
  m_axi_awuser(716) <= \<const0>\;
  m_axi_awuser(715) <= \<const0>\;
  m_axi_awuser(714) <= \<const0>\;
  m_axi_awuser(713) <= \<const0>\;
  m_axi_awuser(712) <= \<const0>\;
  m_axi_awuser(711) <= \<const0>\;
  m_axi_awuser(710) <= \<const0>\;
  m_axi_awuser(709) <= \<const0>\;
  m_axi_awuser(708) <= \<const0>\;
  m_axi_awuser(707) <= \<const0>\;
  m_axi_awuser(706) <= \<const0>\;
  m_axi_awuser(705) <= \<const0>\;
  m_axi_awuser(704) <= \<const0>\;
  m_axi_awuser(703) <= \<const0>\;
  m_axi_awuser(702) <= \<const0>\;
  m_axi_awuser(701) <= \<const0>\;
  m_axi_awuser(700) <= \<const0>\;
  m_axi_awuser(699) <= \<const0>\;
  m_axi_awuser(698) <= \<const0>\;
  m_axi_awuser(697) <= \<const0>\;
  m_axi_awuser(696) <= \<const0>\;
  m_axi_awuser(695) <= \<const0>\;
  m_axi_awuser(694) <= \<const0>\;
  m_axi_awuser(693) <= \<const0>\;
  m_axi_awuser(692) <= \<const0>\;
  m_axi_awuser(691) <= \<const0>\;
  m_axi_awuser(690) <= \<const0>\;
  m_axi_awuser(689) <= \<const0>\;
  m_axi_awuser(688) <= \<const0>\;
  m_axi_awuser(687) <= \<const0>\;
  m_axi_awuser(686) <= \<const0>\;
  m_axi_awuser(685) <= \<const0>\;
  m_axi_awuser(684) <= \<const0>\;
  m_axi_awuser(683) <= \<const0>\;
  m_axi_awuser(682) <= \<const0>\;
  m_axi_awuser(681) <= \<const0>\;
  m_axi_awuser(680) <= \<const0>\;
  m_axi_awuser(679) <= \<const0>\;
  m_axi_awuser(678) <= \<const0>\;
  m_axi_awuser(677) <= \<const0>\;
  m_axi_awuser(676) <= \<const0>\;
  m_axi_awuser(675) <= \<const0>\;
  m_axi_awuser(674) <= \<const0>\;
  m_axi_awuser(673) <= \<const0>\;
  m_axi_awuser(672) <= \<const0>\;
  m_axi_awuser(671) <= \<const0>\;
  m_axi_awuser(670) <= \<const0>\;
  m_axi_awuser(669) <= \<const0>\;
  m_axi_awuser(668) <= \<const0>\;
  m_axi_awuser(667) <= \<const0>\;
  m_axi_awuser(666) <= \<const0>\;
  m_axi_awuser(665) <= \<const0>\;
  m_axi_awuser(664) <= \<const0>\;
  m_axi_awuser(663) <= \<const0>\;
  m_axi_awuser(662) <= \<const0>\;
  m_axi_awuser(661) <= \<const0>\;
  m_axi_awuser(660) <= \<const0>\;
  m_axi_awuser(659) <= \<const0>\;
  m_axi_awuser(658) <= \<const0>\;
  m_axi_awuser(657) <= \<const0>\;
  m_axi_awuser(656) <= \<const0>\;
  m_axi_awuser(655) <= \<const0>\;
  m_axi_awuser(654) <= \<const0>\;
  m_axi_awuser(653) <= \<const0>\;
  m_axi_awuser(652) <= \<const0>\;
  m_axi_awuser(651) <= \<const0>\;
  m_axi_awuser(650) <= \<const0>\;
  m_axi_awuser(649) <= \<const0>\;
  m_axi_awuser(648) <= \<const0>\;
  m_axi_awuser(647) <= \<const0>\;
  m_axi_awuser(646) <= \<const0>\;
  m_axi_awuser(645) <= \<const0>\;
  m_axi_awuser(644) <= \<const0>\;
  m_axi_awuser(643) <= \<const0>\;
  m_axi_awuser(642) <= \<const0>\;
  m_axi_awuser(641) <= \<const0>\;
  m_axi_awuser(640) <= \<const0>\;
  m_axi_awuser(639) <= \<const0>\;
  m_axi_awuser(638) <= \<const0>\;
  m_axi_awuser(637) <= \<const0>\;
  m_axi_awuser(636) <= \<const0>\;
  m_axi_awuser(635) <= \<const0>\;
  m_axi_awuser(634) <= \<const0>\;
  m_axi_awuser(633) <= \<const0>\;
  m_axi_awuser(632) <= \<const0>\;
  m_axi_awuser(631) <= \<const0>\;
  m_axi_awuser(630) <= \<const0>\;
  m_axi_awuser(629) <= \<const0>\;
  m_axi_awuser(628) <= \<const0>\;
  m_axi_awuser(627) <= \<const0>\;
  m_axi_awuser(626) <= \<const0>\;
  m_axi_awuser(625) <= \<const0>\;
  m_axi_awuser(624) <= \<const0>\;
  m_axi_awuser(623) <= \<const0>\;
  m_axi_awuser(622) <= \<const0>\;
  m_axi_awuser(621) <= \<const0>\;
  m_axi_awuser(620) <= \<const0>\;
  m_axi_awuser(619) <= \<const0>\;
  m_axi_awuser(618) <= \<const0>\;
  m_axi_awuser(617) <= \<const0>\;
  m_axi_awuser(616) <= \<const0>\;
  m_axi_awuser(615) <= \<const0>\;
  m_axi_awuser(614) <= \<const0>\;
  m_axi_awuser(613) <= \<const0>\;
  m_axi_awuser(612) <= \<const0>\;
  m_axi_awuser(611) <= \<const0>\;
  m_axi_awuser(610) <= \<const0>\;
  m_axi_awuser(609) <= \<const0>\;
  m_axi_awuser(608) <= \<const0>\;
  m_axi_awuser(607) <= \<const0>\;
  m_axi_awuser(606) <= \<const0>\;
  m_axi_awuser(605) <= \<const0>\;
  m_axi_awuser(604) <= \<const0>\;
  m_axi_awuser(603) <= \<const0>\;
  m_axi_awuser(602) <= \<const0>\;
  m_axi_awuser(601) <= \<const0>\;
  m_axi_awuser(600) <= \<const0>\;
  m_axi_awuser(599) <= \<const0>\;
  m_axi_awuser(598) <= \<const0>\;
  m_axi_awuser(597) <= \<const0>\;
  m_axi_awuser(596) <= \<const0>\;
  m_axi_awuser(595) <= \<const0>\;
  m_axi_awuser(594) <= \<const0>\;
  m_axi_awuser(593) <= \<const0>\;
  m_axi_awuser(592) <= \<const0>\;
  m_axi_awuser(591) <= \<const0>\;
  m_axi_awuser(590) <= \<const0>\;
  m_axi_awuser(589) <= \<const0>\;
  m_axi_awuser(588) <= \<const0>\;
  m_axi_awuser(587) <= \<const0>\;
  m_axi_awuser(586) <= \<const0>\;
  m_axi_awuser(585) <= \<const0>\;
  m_axi_awuser(584) <= \<const0>\;
  m_axi_awuser(583) <= \<const0>\;
  m_axi_awuser(582) <= \<const0>\;
  m_axi_awuser(581) <= \<const0>\;
  m_axi_awuser(580) <= \<const0>\;
  m_axi_awuser(579) <= \<const0>\;
  m_axi_awuser(578) <= \<const0>\;
  m_axi_awuser(577) <= \<const0>\;
  m_axi_awuser(576) <= \<const0>\;
  m_axi_awuser(575) <= \<const0>\;
  m_axi_awuser(574) <= \<const0>\;
  m_axi_awuser(573) <= \<const0>\;
  m_axi_awuser(572) <= \<const0>\;
  m_axi_awuser(571) <= \<const0>\;
  m_axi_awuser(570) <= \<const0>\;
  m_axi_awuser(569) <= \<const0>\;
  m_axi_awuser(568) <= \<const0>\;
  m_axi_awuser(567) <= \<const0>\;
  m_axi_awuser(566) <= \<const0>\;
  m_axi_awuser(565) <= \<const0>\;
  m_axi_awuser(564) <= \<const0>\;
  m_axi_awuser(563) <= \<const0>\;
  m_axi_awuser(562) <= \<const0>\;
  m_axi_awuser(561) <= \<const0>\;
  m_axi_awuser(560) <= \<const0>\;
  m_axi_awuser(559) <= \<const0>\;
  m_axi_awuser(558) <= \<const0>\;
  m_axi_awuser(557) <= \<const0>\;
  m_axi_awuser(556) <= \<const0>\;
  m_axi_awuser(555) <= \<const0>\;
  m_axi_awuser(554) <= \<const0>\;
  m_axi_awuser(553) <= \<const0>\;
  m_axi_awuser(552) <= \<const0>\;
  m_axi_awuser(551) <= \<const0>\;
  m_axi_awuser(550) <= \<const0>\;
  m_axi_awuser(549) <= \<const0>\;
  m_axi_awuser(548) <= \<const0>\;
  m_axi_awuser(547) <= \<const0>\;
  m_axi_awuser(546) <= \<const0>\;
  m_axi_awuser(545) <= \<const0>\;
  m_axi_awuser(544) <= \<const0>\;
  m_axi_awuser(543) <= \<const0>\;
  m_axi_awuser(542) <= \<const0>\;
  m_axi_awuser(541) <= \<const0>\;
  m_axi_awuser(540) <= \<const0>\;
  m_axi_awuser(539) <= \<const0>\;
  m_axi_awuser(538) <= \<const0>\;
  m_axi_awuser(537) <= \<const0>\;
  m_axi_awuser(536) <= \<const0>\;
  m_axi_awuser(535) <= \<const0>\;
  m_axi_awuser(534) <= \<const0>\;
  m_axi_awuser(533) <= \<const0>\;
  m_axi_awuser(532) <= \<const0>\;
  m_axi_awuser(531) <= \<const0>\;
  m_axi_awuser(530) <= \<const0>\;
  m_axi_awuser(529) <= \<const0>\;
  m_axi_awuser(528) <= \<const0>\;
  m_axi_awuser(527) <= \<const0>\;
  m_axi_awuser(526) <= \<const0>\;
  m_axi_awuser(525) <= \<const0>\;
  m_axi_awuser(524) <= \<const0>\;
  m_axi_awuser(523) <= \<const0>\;
  m_axi_awuser(522) <= \<const0>\;
  m_axi_awuser(521) <= \<const0>\;
  m_axi_awuser(520) <= \<const0>\;
  m_axi_awuser(519) <= \<const0>\;
  m_axi_awuser(518) <= \<const0>\;
  m_axi_awuser(517) <= \<const0>\;
  m_axi_awuser(516) <= \<const0>\;
  m_axi_awuser(515) <= \<const0>\;
  m_axi_awuser(514) <= \<const0>\;
  m_axi_awuser(513) <= \<const0>\;
  m_axi_awuser(512) <= \<const0>\;
  m_axi_awuser(511) <= \<const0>\;
  m_axi_awuser(510) <= \<const0>\;
  m_axi_awuser(509) <= \<const0>\;
  m_axi_awuser(508) <= \<const0>\;
  m_axi_awuser(507) <= \<const0>\;
  m_axi_awuser(506) <= \<const0>\;
  m_axi_awuser(505) <= \<const0>\;
  m_axi_awuser(504) <= \<const0>\;
  m_axi_awuser(503) <= \<const0>\;
  m_axi_awuser(502) <= \<const0>\;
  m_axi_awuser(501) <= \<const0>\;
  m_axi_awuser(500) <= \<const0>\;
  m_axi_awuser(499) <= \<const0>\;
  m_axi_awuser(498) <= \<const0>\;
  m_axi_awuser(497) <= \<const0>\;
  m_axi_awuser(496) <= \<const0>\;
  m_axi_awuser(495) <= \<const0>\;
  m_axi_awuser(494) <= \<const0>\;
  m_axi_awuser(493) <= \<const0>\;
  m_axi_awuser(492) <= \<const0>\;
  m_axi_awuser(491) <= \<const0>\;
  m_axi_awuser(490) <= \<const0>\;
  m_axi_awuser(489) <= \<const0>\;
  m_axi_awuser(488) <= \<const0>\;
  m_axi_awuser(487) <= \<const0>\;
  m_axi_awuser(486) <= \<const0>\;
  m_axi_awuser(485) <= \<const0>\;
  m_axi_awuser(484) <= \<const0>\;
  m_axi_awuser(483) <= \<const0>\;
  m_axi_awuser(482) <= \<const0>\;
  m_axi_awuser(481) <= \<const0>\;
  m_axi_awuser(480) <= \<const0>\;
  m_axi_awuser(479) <= \<const0>\;
  m_axi_awuser(478) <= \<const0>\;
  m_axi_awuser(477) <= \<const0>\;
  m_axi_awuser(476) <= \<const0>\;
  m_axi_awuser(475) <= \<const0>\;
  m_axi_awuser(474) <= \<const0>\;
  m_axi_awuser(473) <= \<const0>\;
  m_axi_awuser(472) <= \<const0>\;
  m_axi_awuser(471) <= \<const0>\;
  m_axi_awuser(470) <= \<const0>\;
  m_axi_awuser(469) <= \<const0>\;
  m_axi_awuser(468) <= \<const0>\;
  m_axi_awuser(467) <= \<const0>\;
  m_axi_awuser(466) <= \<const0>\;
  m_axi_awuser(465) <= \<const0>\;
  m_axi_awuser(464) <= \<const0>\;
  m_axi_awuser(463) <= \<const0>\;
  m_axi_awuser(462) <= \<const0>\;
  m_axi_awuser(461) <= \<const0>\;
  m_axi_awuser(460) <= \<const0>\;
  m_axi_awuser(459) <= \<const0>\;
  m_axi_awuser(458) <= \<const0>\;
  m_axi_awuser(457) <= \<const0>\;
  m_axi_awuser(456) <= \<const0>\;
  m_axi_awuser(455) <= \<const0>\;
  m_axi_awuser(454) <= \<const0>\;
  m_axi_awuser(453) <= \<const0>\;
  m_axi_awuser(452) <= \<const0>\;
  m_axi_awuser(451) <= \<const0>\;
  m_axi_awuser(450) <= \<const0>\;
  m_axi_awuser(449) <= \<const0>\;
  m_axi_awuser(448) <= \<const0>\;
  m_axi_awuser(447) <= \<const0>\;
  m_axi_awuser(446) <= \<const0>\;
  m_axi_awuser(445) <= \<const0>\;
  m_axi_awuser(444) <= \<const0>\;
  m_axi_awuser(443) <= \<const0>\;
  m_axi_awuser(442) <= \<const0>\;
  m_axi_awuser(441) <= \<const0>\;
  m_axi_awuser(440) <= \<const0>\;
  m_axi_awuser(439) <= \<const0>\;
  m_axi_awuser(438) <= \<const0>\;
  m_axi_awuser(437) <= \<const0>\;
  m_axi_awuser(436) <= \<const0>\;
  m_axi_awuser(435) <= \<const0>\;
  m_axi_awuser(434) <= \<const0>\;
  m_axi_awuser(433) <= \<const0>\;
  m_axi_awuser(432) <= \<const0>\;
  m_axi_awuser(431) <= \<const0>\;
  m_axi_awuser(430) <= \<const0>\;
  m_axi_awuser(429) <= \<const0>\;
  m_axi_awuser(428) <= \<const0>\;
  m_axi_awuser(427) <= \<const0>\;
  m_axi_awuser(426) <= \<const0>\;
  m_axi_awuser(425) <= \<const0>\;
  m_axi_awuser(424) <= \<const0>\;
  m_axi_awuser(423) <= \<const0>\;
  m_axi_awuser(422) <= \<const0>\;
  m_axi_awuser(421) <= \<const0>\;
  m_axi_awuser(420) <= \<const0>\;
  m_axi_awuser(419) <= \<const0>\;
  m_axi_awuser(418) <= \<const0>\;
  m_axi_awuser(417) <= \<const0>\;
  m_axi_awuser(416) <= \<const0>\;
  m_axi_awuser(415) <= \<const0>\;
  m_axi_awuser(414) <= \<const0>\;
  m_axi_awuser(413) <= \<const0>\;
  m_axi_awuser(412) <= \<const0>\;
  m_axi_awuser(411) <= \<const0>\;
  m_axi_awuser(410) <= \<const0>\;
  m_axi_awuser(409) <= \<const0>\;
  m_axi_awuser(408) <= \<const0>\;
  m_axi_awuser(407) <= \<const0>\;
  m_axi_awuser(406) <= \<const0>\;
  m_axi_awuser(405) <= \<const0>\;
  m_axi_awuser(404) <= \<const0>\;
  m_axi_awuser(403) <= \<const0>\;
  m_axi_awuser(402) <= \<const0>\;
  m_axi_awuser(401) <= \<const0>\;
  m_axi_awuser(400) <= \<const0>\;
  m_axi_awuser(399) <= \<const0>\;
  m_axi_awuser(398) <= \<const0>\;
  m_axi_awuser(397) <= \<const0>\;
  m_axi_awuser(396) <= \<const0>\;
  m_axi_awuser(395) <= \<const0>\;
  m_axi_awuser(394) <= \<const0>\;
  m_axi_awuser(393) <= \<const0>\;
  m_axi_awuser(392) <= \<const0>\;
  m_axi_awuser(391) <= \<const0>\;
  m_axi_awuser(390) <= \<const0>\;
  m_axi_awuser(389) <= \<const0>\;
  m_axi_awuser(388) <= \<const0>\;
  m_axi_awuser(387) <= \<const0>\;
  m_axi_awuser(386) <= \<const0>\;
  m_axi_awuser(385) <= \<const0>\;
  m_axi_awuser(384) <= \<const0>\;
  m_axi_awuser(383) <= \<const0>\;
  m_axi_awuser(382) <= \<const0>\;
  m_axi_awuser(381) <= \<const0>\;
  m_axi_awuser(380) <= \<const0>\;
  m_axi_awuser(379) <= \<const0>\;
  m_axi_awuser(378) <= \<const0>\;
  m_axi_awuser(377) <= \<const0>\;
  m_axi_awuser(376) <= \<const0>\;
  m_axi_awuser(375) <= \<const0>\;
  m_axi_awuser(374) <= \<const0>\;
  m_axi_awuser(373) <= \<const0>\;
  m_axi_awuser(372) <= \<const0>\;
  m_axi_awuser(371) <= \<const0>\;
  m_axi_awuser(370) <= \<const0>\;
  m_axi_awuser(369) <= \<const0>\;
  m_axi_awuser(368) <= \<const0>\;
  m_axi_awuser(367) <= \<const0>\;
  m_axi_awuser(366) <= \<const0>\;
  m_axi_awuser(365) <= \<const0>\;
  m_axi_awuser(364) <= \<const0>\;
  m_axi_awuser(363) <= \<const0>\;
  m_axi_awuser(362) <= \<const0>\;
  m_axi_awuser(361) <= \<const0>\;
  m_axi_awuser(360) <= \<const0>\;
  m_axi_awuser(359) <= \<const0>\;
  m_axi_awuser(358) <= \<const0>\;
  m_axi_awuser(357) <= \<const0>\;
  m_axi_awuser(356) <= \<const0>\;
  m_axi_awuser(355) <= \<const0>\;
  m_axi_awuser(354) <= \<const0>\;
  m_axi_awuser(353) <= \<const0>\;
  m_axi_awuser(352) <= \<const0>\;
  m_axi_awuser(351) <= \<const0>\;
  m_axi_awuser(350) <= \<const0>\;
  m_axi_awuser(349) <= \<const0>\;
  m_axi_awuser(348) <= \<const0>\;
  m_axi_awuser(347) <= \<const0>\;
  m_axi_awuser(346) <= \<const0>\;
  m_axi_awuser(345) <= \<const0>\;
  m_axi_awuser(344) <= \<const0>\;
  m_axi_awuser(343) <= \<const0>\;
  m_axi_awuser(342) <= \<const0>\;
  m_axi_awuser(341) <= \<const0>\;
  m_axi_awuser(340) <= \<const0>\;
  m_axi_awuser(339) <= \<const0>\;
  m_axi_awuser(338) <= \<const0>\;
  m_axi_awuser(337) <= \<const0>\;
  m_axi_awuser(336) <= \<const0>\;
  m_axi_awuser(335) <= \<const0>\;
  m_axi_awuser(334) <= \<const0>\;
  m_axi_awuser(333) <= \<const0>\;
  m_axi_awuser(332) <= \<const0>\;
  m_axi_awuser(331) <= \<const0>\;
  m_axi_awuser(330) <= \<const0>\;
  m_axi_awuser(329) <= \<const0>\;
  m_axi_awuser(328) <= \<const0>\;
  m_axi_awuser(327) <= \<const0>\;
  m_axi_awuser(326) <= \<const0>\;
  m_axi_awuser(325) <= \<const0>\;
  m_axi_awuser(324) <= \<const0>\;
  m_axi_awuser(323) <= \<const0>\;
  m_axi_awuser(322) <= \<const0>\;
  m_axi_awuser(321) <= \<const0>\;
  m_axi_awuser(320) <= \<const0>\;
  m_axi_awuser(319) <= \<const0>\;
  m_axi_awuser(318) <= \<const0>\;
  m_axi_awuser(317) <= \<const0>\;
  m_axi_awuser(316) <= \<const0>\;
  m_axi_awuser(315) <= \<const0>\;
  m_axi_awuser(314) <= \<const0>\;
  m_axi_awuser(313) <= \<const0>\;
  m_axi_awuser(312) <= \<const0>\;
  m_axi_awuser(311) <= \<const0>\;
  m_axi_awuser(310) <= \<const0>\;
  m_axi_awuser(309) <= \<const0>\;
  m_axi_awuser(308) <= \<const0>\;
  m_axi_awuser(307) <= \<const0>\;
  m_axi_awuser(306) <= \<const0>\;
  m_axi_awuser(305) <= \<const0>\;
  m_axi_awuser(304) <= \<const0>\;
  m_axi_awuser(303) <= \<const0>\;
  m_axi_awuser(302) <= \<const0>\;
  m_axi_awuser(301) <= \<const0>\;
  m_axi_awuser(300) <= \<const0>\;
  m_axi_awuser(299) <= \<const0>\;
  m_axi_awuser(298) <= \<const0>\;
  m_axi_awuser(297) <= \<const0>\;
  m_axi_awuser(296) <= \<const0>\;
  m_axi_awuser(295) <= \<const0>\;
  m_axi_awuser(294) <= \<const0>\;
  m_axi_awuser(293) <= \<const0>\;
  m_axi_awuser(292) <= \<const0>\;
  m_axi_awuser(291) <= \<const0>\;
  m_axi_awuser(290) <= \<const0>\;
  m_axi_awuser(289) <= \<const0>\;
  m_axi_awuser(288) <= \<const0>\;
  m_axi_awuser(287) <= \<const0>\;
  m_axi_awuser(286) <= \<const0>\;
  m_axi_awuser(285) <= \<const0>\;
  m_axi_awuser(284) <= \<const0>\;
  m_axi_awuser(283) <= \<const0>\;
  m_axi_awuser(282) <= \<const0>\;
  m_axi_awuser(281) <= \<const0>\;
  m_axi_awuser(280) <= \<const0>\;
  m_axi_awuser(279) <= \<const0>\;
  m_axi_awuser(278) <= \<const0>\;
  m_axi_awuser(277) <= \<const0>\;
  m_axi_awuser(276) <= \<const0>\;
  m_axi_awuser(275) <= \<const0>\;
  m_axi_awuser(274) <= \<const0>\;
  m_axi_awuser(273) <= \<const0>\;
  m_axi_awuser(272) <= \<const0>\;
  m_axi_awuser(271) <= \<const0>\;
  m_axi_awuser(270) <= \<const0>\;
  m_axi_awuser(269) <= \<const0>\;
  m_axi_awuser(268) <= \<const0>\;
  m_axi_awuser(267) <= \<const0>\;
  m_axi_awuser(266) <= \<const0>\;
  m_axi_awuser(265) <= \<const0>\;
  m_axi_awuser(264) <= \<const0>\;
  m_axi_awuser(263) <= \<const0>\;
  m_axi_awuser(262) <= \<const0>\;
  m_axi_awuser(261) <= \<const0>\;
  m_axi_awuser(260) <= \<const0>\;
  m_axi_awuser(259) <= \<const0>\;
  m_axi_awuser(258) <= \<const0>\;
  m_axi_awuser(257) <= \<const0>\;
  m_axi_awuser(256) <= \<const0>\;
  m_axi_awuser(255) <= \<const0>\;
  m_axi_awuser(254) <= \<const0>\;
  m_axi_awuser(253) <= \<const0>\;
  m_axi_awuser(252) <= \<const0>\;
  m_axi_awuser(251) <= \<const0>\;
  m_axi_awuser(250) <= \<const0>\;
  m_axi_awuser(249) <= \<const0>\;
  m_axi_awuser(248) <= \<const0>\;
  m_axi_awuser(247) <= \<const0>\;
  m_axi_awuser(246) <= \<const0>\;
  m_axi_awuser(245) <= \<const0>\;
  m_axi_awuser(244) <= \<const0>\;
  m_axi_awuser(243) <= \<const0>\;
  m_axi_awuser(242) <= \<const0>\;
  m_axi_awuser(241) <= \<const0>\;
  m_axi_awuser(240) <= \<const0>\;
  m_axi_awuser(239) <= \<const0>\;
  m_axi_awuser(238) <= \<const0>\;
  m_axi_awuser(237) <= \<const0>\;
  m_axi_awuser(236) <= \<const0>\;
  m_axi_awuser(235) <= \<const0>\;
  m_axi_awuser(234) <= \<const0>\;
  m_axi_awuser(233) <= \<const0>\;
  m_axi_awuser(232) <= \<const0>\;
  m_axi_awuser(231) <= \<const0>\;
  m_axi_awuser(230) <= \<const0>\;
  m_axi_awuser(229) <= \<const0>\;
  m_axi_awuser(228) <= \<const0>\;
  m_axi_awuser(227) <= \<const0>\;
  m_axi_awuser(226) <= \<const0>\;
  m_axi_awuser(225) <= \<const0>\;
  m_axi_awuser(224) <= \<const0>\;
  m_axi_awuser(223) <= \<const0>\;
  m_axi_awuser(222) <= \<const0>\;
  m_axi_awuser(221) <= \<const0>\;
  m_axi_awuser(220) <= \<const0>\;
  m_axi_awuser(219) <= \<const0>\;
  m_axi_awuser(218) <= \<const0>\;
  m_axi_awuser(217) <= \<const0>\;
  m_axi_awuser(216) <= \<const0>\;
  m_axi_awuser(215) <= \<const0>\;
  m_axi_awuser(214) <= \<const0>\;
  m_axi_awuser(213) <= \<const0>\;
  m_axi_awuser(212) <= \<const0>\;
  m_axi_awuser(211) <= \<const0>\;
  m_axi_awuser(210) <= \<const0>\;
  m_axi_awuser(209) <= \<const0>\;
  m_axi_awuser(208) <= \<const0>\;
  m_axi_awuser(207) <= \<const0>\;
  m_axi_awuser(206) <= \<const0>\;
  m_axi_awuser(205) <= \<const0>\;
  m_axi_awuser(204) <= \<const0>\;
  m_axi_awuser(203) <= \<const0>\;
  m_axi_awuser(202) <= \<const0>\;
  m_axi_awuser(201) <= \<const0>\;
  m_axi_awuser(200) <= \<const0>\;
  m_axi_awuser(199) <= \<const0>\;
  m_axi_awuser(198) <= \<const0>\;
  m_axi_awuser(197) <= \<const0>\;
  m_axi_awuser(196) <= \<const0>\;
  m_axi_awuser(195) <= \<const0>\;
  m_axi_awuser(194) <= \<const0>\;
  m_axi_awuser(193) <= \<const0>\;
  m_axi_awuser(192) <= \<const0>\;
  m_axi_awuser(191) <= \<const0>\;
  m_axi_awuser(190) <= \<const0>\;
  m_axi_awuser(189) <= \<const0>\;
  m_axi_awuser(188) <= \<const0>\;
  m_axi_awuser(187) <= \<const0>\;
  m_axi_awuser(186) <= \<const0>\;
  m_axi_awuser(185) <= \<const0>\;
  m_axi_awuser(184) <= \<const0>\;
  m_axi_awuser(183) <= \<const0>\;
  m_axi_awuser(182) <= \<const0>\;
  m_axi_awuser(181) <= \<const0>\;
  m_axi_awuser(180) <= \<const0>\;
  m_axi_awuser(179) <= \<const0>\;
  m_axi_awuser(178) <= \<const0>\;
  m_axi_awuser(177) <= \<const0>\;
  m_axi_awuser(176) <= \<const0>\;
  m_axi_awuser(175) <= \<const0>\;
  m_axi_awuser(174) <= \<const0>\;
  m_axi_awuser(173) <= \<const0>\;
  m_axi_awuser(172) <= \<const0>\;
  m_axi_awuser(171) <= \<const0>\;
  m_axi_awuser(170) <= \<const0>\;
  m_axi_awuser(169) <= \<const0>\;
  m_axi_awuser(168) <= \<const0>\;
  m_axi_awuser(167) <= \<const0>\;
  m_axi_awuser(166) <= \<const0>\;
  m_axi_awuser(165) <= \<const0>\;
  m_axi_awuser(164) <= \<const0>\;
  m_axi_awuser(163) <= \<const0>\;
  m_axi_awuser(162) <= \<const0>\;
  m_axi_awuser(161) <= \<const0>\;
  m_axi_awuser(160) <= \<const0>\;
  m_axi_awuser(159) <= \<const0>\;
  m_axi_awuser(158) <= \<const0>\;
  m_axi_awuser(157) <= \<const0>\;
  m_axi_awuser(156) <= \<const0>\;
  m_axi_awuser(155) <= \<const0>\;
  m_axi_awuser(154) <= \<const0>\;
  m_axi_awuser(153) <= \<const0>\;
  m_axi_awuser(152) <= \<const0>\;
  m_axi_awuser(151) <= \<const0>\;
  m_axi_awuser(150) <= \<const0>\;
  m_axi_awuser(149) <= \<const0>\;
  m_axi_awuser(148) <= \<const0>\;
  m_axi_awuser(147) <= \<const0>\;
  m_axi_awuser(146) <= \<const0>\;
  m_axi_awuser(145) <= \<const0>\;
  m_axi_awuser(144) <= \<const0>\;
  m_axi_awuser(143) <= \<const0>\;
  m_axi_awuser(142) <= \<const0>\;
  m_axi_awuser(141) <= \<const0>\;
  m_axi_awuser(140) <= \<const0>\;
  m_axi_awuser(139) <= \<const0>\;
  m_axi_awuser(138) <= \<const0>\;
  m_axi_awuser(137) <= \<const0>\;
  m_axi_awuser(136) <= \<const0>\;
  m_axi_awuser(135) <= \<const0>\;
  m_axi_awuser(134) <= \<const0>\;
  m_axi_awuser(133) <= \<const0>\;
  m_axi_awuser(132) <= \<const0>\;
  m_axi_awuser(131) <= \<const0>\;
  m_axi_awuser(130) <= \<const0>\;
  m_axi_awuser(129) <= \<const0>\;
  m_axi_awuser(128) <= \<const0>\;
  m_axi_awuser(127) <= \<const0>\;
  m_axi_awuser(126) <= \<const0>\;
  m_axi_awuser(125) <= \<const0>\;
  m_axi_awuser(124) <= \<const0>\;
  m_axi_awuser(123) <= \<const0>\;
  m_axi_awuser(122) <= \<const0>\;
  m_axi_awuser(121) <= \<const0>\;
  m_axi_awuser(120) <= \<const0>\;
  m_axi_awuser(119) <= \<const0>\;
  m_axi_awuser(118) <= \<const0>\;
  m_axi_awuser(117) <= \<const0>\;
  m_axi_awuser(116) <= \<const0>\;
  m_axi_awuser(115) <= \<const0>\;
  m_axi_awuser(114) <= \<const0>\;
  m_axi_awuser(113) <= \<const0>\;
  m_axi_awuser(112) <= \<const0>\;
  m_axi_awuser(111) <= \<const0>\;
  m_axi_awuser(110) <= \<const0>\;
  m_axi_awuser(109) <= \<const0>\;
  m_axi_awuser(108) <= \<const0>\;
  m_axi_awuser(107) <= \<const0>\;
  m_axi_awuser(106) <= \<const0>\;
  m_axi_awuser(105) <= \<const0>\;
  m_axi_awuser(104) <= \<const0>\;
  m_axi_awuser(103) <= \<const0>\;
  m_axi_awuser(102) <= \<const0>\;
  m_axi_awuser(101) <= \<const0>\;
  m_axi_awuser(100) <= \<const0>\;
  m_axi_awuser(99) <= \<const0>\;
  m_axi_awuser(98) <= \<const0>\;
  m_axi_awuser(97) <= \<const0>\;
  m_axi_awuser(96) <= \<const0>\;
  m_axi_awuser(95) <= \<const0>\;
  m_axi_awuser(94) <= \<const0>\;
  m_axi_awuser(93) <= \<const0>\;
  m_axi_awuser(92) <= \<const0>\;
  m_axi_awuser(91) <= \<const0>\;
  m_axi_awuser(90) <= \<const0>\;
  m_axi_awuser(89) <= \<const0>\;
  m_axi_awuser(88) <= \<const0>\;
  m_axi_awuser(87) <= \<const0>\;
  m_axi_awuser(86) <= \<const0>\;
  m_axi_awuser(85) <= \<const0>\;
  m_axi_awuser(84) <= \<const0>\;
  m_axi_awuser(83) <= \<const0>\;
  m_axi_awuser(82) <= \<const0>\;
  m_axi_awuser(81) <= \<const0>\;
  m_axi_awuser(80) <= \<const0>\;
  m_axi_awuser(79) <= \<const0>\;
  m_axi_awuser(78) <= \<const0>\;
  m_axi_awuser(77) <= \<const0>\;
  m_axi_awuser(76) <= \<const0>\;
  m_axi_awuser(75) <= \<const0>\;
  m_axi_awuser(74) <= \<const0>\;
  m_axi_awuser(73) <= \<const0>\;
  m_axi_awuser(72) <= \<const0>\;
  m_axi_awuser(71) <= \<const0>\;
  m_axi_awuser(70) <= \<const0>\;
  m_axi_awuser(69) <= \<const0>\;
  m_axi_awuser(68) <= \<const0>\;
  m_axi_awuser(67) <= \<const0>\;
  m_axi_awuser(66) <= \<const0>\;
  m_axi_awuser(65) <= \<const0>\;
  m_axi_awuser(64) <= \<const0>\;
  m_axi_awuser(63) <= \<const0>\;
  m_axi_awuser(62) <= \<const0>\;
  m_axi_awuser(61) <= \<const0>\;
  m_axi_awuser(60) <= \<const0>\;
  m_axi_awuser(59) <= \<const0>\;
  m_axi_awuser(58) <= \<const0>\;
  m_axi_awuser(57) <= \<const0>\;
  m_axi_awuser(56) <= \<const0>\;
  m_axi_awuser(55) <= \<const0>\;
  m_axi_awuser(54) <= \<const0>\;
  m_axi_awuser(53) <= \<const0>\;
  m_axi_awuser(52) <= \<const0>\;
  m_axi_awuser(51) <= \<const0>\;
  m_axi_awuser(50) <= \<const0>\;
  m_axi_awuser(49) <= \<const0>\;
  m_axi_awuser(48) <= \<const0>\;
  m_axi_awuser(47) <= \<const0>\;
  m_axi_awuser(46) <= \<const0>\;
  m_axi_awuser(45) <= \<const0>\;
  m_axi_awuser(44) <= \<const0>\;
  m_axi_awuser(43) <= \<const0>\;
  m_axi_awuser(42) <= \<const0>\;
  m_axi_awuser(41) <= \<const0>\;
  m_axi_awuser(40) <= \<const0>\;
  m_axi_awuser(39) <= \<const0>\;
  m_axi_awuser(38) <= \<const0>\;
  m_axi_awuser(37) <= \<const0>\;
  m_axi_awuser(36) <= \<const0>\;
  m_axi_awuser(35) <= \<const0>\;
  m_axi_awuser(34) <= \<const0>\;
  m_axi_awuser(33) <= \<const0>\;
  m_axi_awuser(32) <= \<const0>\;
  m_axi_awuser(31) <= \<const0>\;
  m_axi_awuser(30) <= \<const0>\;
  m_axi_awuser(29) <= \<const0>\;
  m_axi_awuser(28) <= \<const0>\;
  m_axi_awuser(27) <= \<const0>\;
  m_axi_awuser(26) <= \<const0>\;
  m_axi_awuser(25) <= \<const0>\;
  m_axi_awuser(24) <= \<const0>\;
  m_axi_awuser(23) <= \<const0>\;
  m_axi_awuser(22) <= \<const0>\;
  m_axi_awuser(21) <= \<const0>\;
  m_axi_awuser(20) <= \<const0>\;
  m_axi_awuser(19) <= \<const0>\;
  m_axi_awuser(18) <= \<const0>\;
  m_axi_awuser(17) <= \<const0>\;
  m_axi_awuser(16) <= \<const0>\;
  m_axi_awuser(15) <= \<const0>\;
  m_axi_awuser(14) <= \<const0>\;
  m_axi_awuser(13) <= \<const0>\;
  m_axi_awuser(12) <= \<const0>\;
  m_axi_awuser(11) <= \<const0>\;
  m_axi_awuser(10) <= \<const0>\;
  m_axi_awuser(9) <= \<const0>\;
  m_axi_awuser(8) <= \<const0>\;
  m_axi_awuser(7) <= \<const0>\;
  m_axi_awuser(6) <= \<const0>\;
  m_axi_awuser(5) <= \<const0>\;
  m_axi_awuser(4) <= \<const0>\;
  m_axi_awuser(3) <= \<const0>\;
  m_axi_awuser(2) <= \<const0>\;
  m_axi_awuser(1) <= \<const0>\;
  m_axi_awuser(0) <= \<const0>\;
  m_axi_bready <= \<const0>\;
  m_axi_rready <= \<const0>\;
  m_axi_wdata(31) <= \<const0>\;
  m_axi_wdata(30) <= \<const0>\;
  m_axi_wdata(29) <= \<const0>\;
  m_axi_wdata(28) <= \<const0>\;
  m_axi_wdata(27) <= \<const0>\;
  m_axi_wdata(26) <= \<const0>\;
  m_axi_wdata(25) <= \<const0>\;
  m_axi_wdata(24) <= \<const0>\;
  m_axi_wdata(23) <= \<const0>\;
  m_axi_wdata(22) <= \<const0>\;
  m_axi_wdata(21) <= \<const0>\;
  m_axi_wdata(20) <= \<const0>\;
  m_axi_wdata(19) <= \<const0>\;
  m_axi_wdata(18) <= \<const0>\;
  m_axi_wdata(17) <= \<const0>\;
  m_axi_wdata(16) <= \<const0>\;
  m_axi_wdata(15) <= \<const0>\;
  m_axi_wdata(14) <= \<const0>\;
  m_axi_wdata(13) <= \<const0>\;
  m_axi_wdata(12) <= \<const0>\;
  m_axi_wdata(11) <= \<const0>\;
  m_axi_wdata(10) <= \<const0>\;
  m_axi_wdata(9) <= \<const0>\;
  m_axi_wdata(8) <= \<const0>\;
  m_axi_wdata(7) <= \<const0>\;
  m_axi_wdata(6) <= \<const0>\;
  m_axi_wdata(5) <= \<const0>\;
  m_axi_wdata(4) <= \<const0>\;
  m_axi_wdata(3) <= \<const0>\;
  m_axi_wdata(2) <= \<const0>\;
  m_axi_wdata(1) <= \<const0>\;
  m_axi_wdata(0) <= \<const0>\;
  m_axi_wlast <= \<const0>\;
  m_axi_wstrb(3) <= \<const0>\;
  m_axi_wstrb(2) <= \<const0>\;
  m_axi_wstrb(1) <= \<const0>\;
  m_axi_wstrb(0) <= \<const0>\;
  m_axi_wuser(1023) <= \<const0>\;
  m_axi_wuser(1022) <= \<const0>\;
  m_axi_wuser(1021) <= \<const0>\;
  m_axi_wuser(1020) <= \<const0>\;
  m_axi_wuser(1019) <= \<const0>\;
  m_axi_wuser(1018) <= \<const0>\;
  m_axi_wuser(1017) <= \<const0>\;
  m_axi_wuser(1016) <= \<const0>\;
  m_axi_wuser(1015) <= \<const0>\;
  m_axi_wuser(1014) <= \<const0>\;
  m_axi_wuser(1013) <= \<const0>\;
  m_axi_wuser(1012) <= \<const0>\;
  m_axi_wuser(1011) <= \<const0>\;
  m_axi_wuser(1010) <= \<const0>\;
  m_axi_wuser(1009) <= \<const0>\;
  m_axi_wuser(1008) <= \<const0>\;
  m_axi_wuser(1007) <= \<const0>\;
  m_axi_wuser(1006) <= \<const0>\;
  m_axi_wuser(1005) <= \<const0>\;
  m_axi_wuser(1004) <= \<const0>\;
  m_axi_wuser(1003) <= \<const0>\;
  m_axi_wuser(1002) <= \<const0>\;
  m_axi_wuser(1001) <= \<const0>\;
  m_axi_wuser(1000) <= \<const0>\;
  m_axi_wuser(999) <= \<const0>\;
  m_axi_wuser(998) <= \<const0>\;
  m_axi_wuser(997) <= \<const0>\;
  m_axi_wuser(996) <= \<const0>\;
  m_axi_wuser(995) <= \<const0>\;
  m_axi_wuser(994) <= \<const0>\;
  m_axi_wuser(993) <= \<const0>\;
  m_axi_wuser(992) <= \<const0>\;
  m_axi_wuser(991) <= \<const0>\;
  m_axi_wuser(990) <= \<const0>\;
  m_axi_wuser(989) <= \<const0>\;
  m_axi_wuser(988) <= \<const0>\;
  m_axi_wuser(987) <= \<const0>\;
  m_axi_wuser(986) <= \<const0>\;
  m_axi_wuser(985) <= \<const0>\;
  m_axi_wuser(984) <= \<const0>\;
  m_axi_wuser(983) <= \<const0>\;
  m_axi_wuser(982) <= \<const0>\;
  m_axi_wuser(981) <= \<const0>\;
  m_axi_wuser(980) <= \<const0>\;
  m_axi_wuser(979) <= \<const0>\;
  m_axi_wuser(978) <= \<const0>\;
  m_axi_wuser(977) <= \<const0>\;
  m_axi_wuser(976) <= \<const0>\;
  m_axi_wuser(975) <= \<const0>\;
  m_axi_wuser(974) <= \<const0>\;
  m_axi_wuser(973) <= \<const0>\;
  m_axi_wuser(972) <= \<const0>\;
  m_axi_wuser(971) <= \<const0>\;
  m_axi_wuser(970) <= \<const0>\;
  m_axi_wuser(969) <= \<const0>\;
  m_axi_wuser(968) <= \<const0>\;
  m_axi_wuser(967) <= \<const0>\;
  m_axi_wuser(966) <= \<const0>\;
  m_axi_wuser(965) <= \<const0>\;
  m_axi_wuser(964) <= \<const0>\;
  m_axi_wuser(963) <= \<const0>\;
  m_axi_wuser(962) <= \<const0>\;
  m_axi_wuser(961) <= \<const0>\;
  m_axi_wuser(960) <= \<const0>\;
  m_axi_wuser(959) <= \<const0>\;
  m_axi_wuser(958) <= \<const0>\;
  m_axi_wuser(957) <= \<const0>\;
  m_axi_wuser(956) <= \<const0>\;
  m_axi_wuser(955) <= \<const0>\;
  m_axi_wuser(954) <= \<const0>\;
  m_axi_wuser(953) <= \<const0>\;
  m_axi_wuser(952) <= \<const0>\;
  m_axi_wuser(951) <= \<const0>\;
  m_axi_wuser(950) <= \<const0>\;
  m_axi_wuser(949) <= \<const0>\;
  m_axi_wuser(948) <= \<const0>\;
  m_axi_wuser(947) <= \<const0>\;
  m_axi_wuser(946) <= \<const0>\;
  m_axi_wuser(945) <= \<const0>\;
  m_axi_wuser(944) <= \<const0>\;
  m_axi_wuser(943) <= \<const0>\;
  m_axi_wuser(942) <= \<const0>\;
  m_axi_wuser(941) <= \<const0>\;
  m_axi_wuser(940) <= \<const0>\;
  m_axi_wuser(939) <= \<const0>\;
  m_axi_wuser(938) <= \<const0>\;
  m_axi_wuser(937) <= \<const0>\;
  m_axi_wuser(936) <= \<const0>\;
  m_axi_wuser(935) <= \<const0>\;
  m_axi_wuser(934) <= \<const0>\;
  m_axi_wuser(933) <= \<const0>\;
  m_axi_wuser(932) <= \<const0>\;
  m_axi_wuser(931) <= \<const0>\;
  m_axi_wuser(930) <= \<const0>\;
  m_axi_wuser(929) <= \<const0>\;
  m_axi_wuser(928) <= \<const0>\;
  m_axi_wuser(927) <= \<const0>\;
  m_axi_wuser(926) <= \<const0>\;
  m_axi_wuser(925) <= \<const0>\;
  m_axi_wuser(924) <= \<const0>\;
  m_axi_wuser(923) <= \<const0>\;
  m_axi_wuser(922) <= \<const0>\;
  m_axi_wuser(921) <= \<const0>\;
  m_axi_wuser(920) <= \<const0>\;
  m_axi_wuser(919) <= \<const0>\;
  m_axi_wuser(918) <= \<const0>\;
  m_axi_wuser(917) <= \<const0>\;
  m_axi_wuser(916) <= \<const0>\;
  m_axi_wuser(915) <= \<const0>\;
  m_axi_wuser(914) <= \<const0>\;
  m_axi_wuser(913) <= \<const0>\;
  m_axi_wuser(912) <= \<const0>\;
  m_axi_wuser(911) <= \<const0>\;
  m_axi_wuser(910) <= \<const0>\;
  m_axi_wuser(909) <= \<const0>\;
  m_axi_wuser(908) <= \<const0>\;
  m_axi_wuser(907) <= \<const0>\;
  m_axi_wuser(906) <= \<const0>\;
  m_axi_wuser(905) <= \<const0>\;
  m_axi_wuser(904) <= \<const0>\;
  m_axi_wuser(903) <= \<const0>\;
  m_axi_wuser(902) <= \<const0>\;
  m_axi_wuser(901) <= \<const0>\;
  m_axi_wuser(900) <= \<const0>\;
  m_axi_wuser(899) <= \<const0>\;
  m_axi_wuser(898) <= \<const0>\;
  m_axi_wuser(897) <= \<const0>\;
  m_axi_wuser(896) <= \<const0>\;
  m_axi_wuser(895) <= \<const0>\;
  m_axi_wuser(894) <= \<const0>\;
  m_axi_wuser(893) <= \<const0>\;
  m_axi_wuser(892) <= \<const0>\;
  m_axi_wuser(891) <= \<const0>\;
  m_axi_wuser(890) <= \<const0>\;
  m_axi_wuser(889) <= \<const0>\;
  m_axi_wuser(888) <= \<const0>\;
  m_axi_wuser(887) <= \<const0>\;
  m_axi_wuser(886) <= \<const0>\;
  m_axi_wuser(885) <= \<const0>\;
  m_axi_wuser(884) <= \<const0>\;
  m_axi_wuser(883) <= \<const0>\;
  m_axi_wuser(882) <= \<const0>\;
  m_axi_wuser(881) <= \<const0>\;
  m_axi_wuser(880) <= \<const0>\;
  m_axi_wuser(879) <= \<const0>\;
  m_axi_wuser(878) <= \<const0>\;
  m_axi_wuser(877) <= \<const0>\;
  m_axi_wuser(876) <= \<const0>\;
  m_axi_wuser(875) <= \<const0>\;
  m_axi_wuser(874) <= \<const0>\;
  m_axi_wuser(873) <= \<const0>\;
  m_axi_wuser(872) <= \<const0>\;
  m_axi_wuser(871) <= \<const0>\;
  m_axi_wuser(870) <= \<const0>\;
  m_axi_wuser(869) <= \<const0>\;
  m_axi_wuser(868) <= \<const0>\;
  m_axi_wuser(867) <= \<const0>\;
  m_axi_wuser(866) <= \<const0>\;
  m_axi_wuser(865) <= \<const0>\;
  m_axi_wuser(864) <= \<const0>\;
  m_axi_wuser(863) <= \<const0>\;
  m_axi_wuser(862) <= \<const0>\;
  m_axi_wuser(861) <= \<const0>\;
  m_axi_wuser(860) <= \<const0>\;
  m_axi_wuser(859) <= \<const0>\;
  m_axi_wuser(858) <= \<const0>\;
  m_axi_wuser(857) <= \<const0>\;
  m_axi_wuser(856) <= \<const0>\;
  m_axi_wuser(855) <= \<const0>\;
  m_axi_wuser(854) <= \<const0>\;
  m_axi_wuser(853) <= \<const0>\;
  m_axi_wuser(852) <= \<const0>\;
  m_axi_wuser(851) <= \<const0>\;
  m_axi_wuser(850) <= \<const0>\;
  m_axi_wuser(849) <= \<const0>\;
  m_axi_wuser(848) <= \<const0>\;
  m_axi_wuser(847) <= \<const0>\;
  m_axi_wuser(846) <= \<const0>\;
  m_axi_wuser(845) <= \<const0>\;
  m_axi_wuser(844) <= \<const0>\;
  m_axi_wuser(843) <= \<const0>\;
  m_axi_wuser(842) <= \<const0>\;
  m_axi_wuser(841) <= \<const0>\;
  m_axi_wuser(840) <= \<const0>\;
  m_axi_wuser(839) <= \<const0>\;
  m_axi_wuser(838) <= \<const0>\;
  m_axi_wuser(837) <= \<const0>\;
  m_axi_wuser(836) <= \<const0>\;
  m_axi_wuser(835) <= \<const0>\;
  m_axi_wuser(834) <= \<const0>\;
  m_axi_wuser(833) <= \<const0>\;
  m_axi_wuser(832) <= \<const0>\;
  m_axi_wuser(831) <= \<const0>\;
  m_axi_wuser(830) <= \<const0>\;
  m_axi_wuser(829) <= \<const0>\;
  m_axi_wuser(828) <= \<const0>\;
  m_axi_wuser(827) <= \<const0>\;
  m_axi_wuser(826) <= \<const0>\;
  m_axi_wuser(825) <= \<const0>\;
  m_axi_wuser(824) <= \<const0>\;
  m_axi_wuser(823) <= \<const0>\;
  m_axi_wuser(822) <= \<const0>\;
  m_axi_wuser(821) <= \<const0>\;
  m_axi_wuser(820) <= \<const0>\;
  m_axi_wuser(819) <= \<const0>\;
  m_axi_wuser(818) <= \<const0>\;
  m_axi_wuser(817) <= \<const0>\;
  m_axi_wuser(816) <= \<const0>\;
  m_axi_wuser(815) <= \<const0>\;
  m_axi_wuser(814) <= \<const0>\;
  m_axi_wuser(813) <= \<const0>\;
  m_axi_wuser(812) <= \<const0>\;
  m_axi_wuser(811) <= \<const0>\;
  m_axi_wuser(810) <= \<const0>\;
  m_axi_wuser(809) <= \<const0>\;
  m_axi_wuser(808) <= \<const0>\;
  m_axi_wuser(807) <= \<const0>\;
  m_axi_wuser(806) <= \<const0>\;
  m_axi_wuser(805) <= \<const0>\;
  m_axi_wuser(804) <= \<const0>\;
  m_axi_wuser(803) <= \<const0>\;
  m_axi_wuser(802) <= \<const0>\;
  m_axi_wuser(801) <= \<const0>\;
  m_axi_wuser(800) <= \<const0>\;
  m_axi_wuser(799) <= \<const0>\;
  m_axi_wuser(798) <= \<const0>\;
  m_axi_wuser(797) <= \<const0>\;
  m_axi_wuser(796) <= \<const0>\;
  m_axi_wuser(795) <= \<const0>\;
  m_axi_wuser(794) <= \<const0>\;
  m_axi_wuser(793) <= \<const0>\;
  m_axi_wuser(792) <= \<const0>\;
  m_axi_wuser(791) <= \<const0>\;
  m_axi_wuser(790) <= \<const0>\;
  m_axi_wuser(789) <= \<const0>\;
  m_axi_wuser(788) <= \<const0>\;
  m_axi_wuser(787) <= \<const0>\;
  m_axi_wuser(786) <= \<const0>\;
  m_axi_wuser(785) <= \<const0>\;
  m_axi_wuser(784) <= \<const0>\;
  m_axi_wuser(783) <= \<const0>\;
  m_axi_wuser(782) <= \<const0>\;
  m_axi_wuser(781) <= \<const0>\;
  m_axi_wuser(780) <= \<const0>\;
  m_axi_wuser(779) <= \<const0>\;
  m_axi_wuser(778) <= \<const0>\;
  m_axi_wuser(777) <= \<const0>\;
  m_axi_wuser(776) <= \<const0>\;
  m_axi_wuser(775) <= \<const0>\;
  m_axi_wuser(774) <= \<const0>\;
  m_axi_wuser(773) <= \<const0>\;
  m_axi_wuser(772) <= \<const0>\;
  m_axi_wuser(771) <= \<const0>\;
  m_axi_wuser(770) <= \<const0>\;
  m_axi_wuser(769) <= \<const0>\;
  m_axi_wuser(768) <= \<const0>\;
  m_axi_wuser(767) <= \<const0>\;
  m_axi_wuser(766) <= \<const0>\;
  m_axi_wuser(765) <= \<const0>\;
  m_axi_wuser(764) <= \<const0>\;
  m_axi_wuser(763) <= \<const0>\;
  m_axi_wuser(762) <= \<const0>\;
  m_axi_wuser(761) <= \<const0>\;
  m_axi_wuser(760) <= \<const0>\;
  m_axi_wuser(759) <= \<const0>\;
  m_axi_wuser(758) <= \<const0>\;
  m_axi_wuser(757) <= \<const0>\;
  m_axi_wuser(756) <= \<const0>\;
  m_axi_wuser(755) <= \<const0>\;
  m_axi_wuser(754) <= \<const0>\;
  m_axi_wuser(753) <= \<const0>\;
  m_axi_wuser(752) <= \<const0>\;
  m_axi_wuser(751) <= \<const0>\;
  m_axi_wuser(750) <= \<const0>\;
  m_axi_wuser(749) <= \<const0>\;
  m_axi_wuser(748) <= \<const0>\;
  m_axi_wuser(747) <= \<const0>\;
  m_axi_wuser(746) <= \<const0>\;
  m_axi_wuser(745) <= \<const0>\;
  m_axi_wuser(744) <= \<const0>\;
  m_axi_wuser(743) <= \<const0>\;
  m_axi_wuser(742) <= \<const0>\;
  m_axi_wuser(741) <= \<const0>\;
  m_axi_wuser(740) <= \<const0>\;
  m_axi_wuser(739) <= \<const0>\;
  m_axi_wuser(738) <= \<const0>\;
  m_axi_wuser(737) <= \<const0>\;
  m_axi_wuser(736) <= \<const0>\;
  m_axi_wuser(735) <= \<const0>\;
  m_axi_wuser(734) <= \<const0>\;
  m_axi_wuser(733) <= \<const0>\;
  m_axi_wuser(732) <= \<const0>\;
  m_axi_wuser(731) <= \<const0>\;
  m_axi_wuser(730) <= \<const0>\;
  m_axi_wuser(729) <= \<const0>\;
  m_axi_wuser(728) <= \<const0>\;
  m_axi_wuser(727) <= \<const0>\;
  m_axi_wuser(726) <= \<const0>\;
  m_axi_wuser(725) <= \<const0>\;
  m_axi_wuser(724) <= \<const0>\;
  m_axi_wuser(723) <= \<const0>\;
  m_axi_wuser(722) <= \<const0>\;
  m_axi_wuser(721) <= \<const0>\;
  m_axi_wuser(720) <= \<const0>\;
  m_axi_wuser(719) <= \<const0>\;
  m_axi_wuser(718) <= \<const0>\;
  m_axi_wuser(717) <= \<const0>\;
  m_axi_wuser(716) <= \<const0>\;
  m_axi_wuser(715) <= \<const0>\;
  m_axi_wuser(714) <= \<const0>\;
  m_axi_wuser(713) <= \<const0>\;
  m_axi_wuser(712) <= \<const0>\;
  m_axi_wuser(711) <= \<const0>\;
  m_axi_wuser(710) <= \<const0>\;
  m_axi_wuser(709) <= \<const0>\;
  m_axi_wuser(708) <= \<const0>\;
  m_axi_wuser(707) <= \<const0>\;
  m_axi_wuser(706) <= \<const0>\;
  m_axi_wuser(705) <= \<const0>\;
  m_axi_wuser(704) <= \<const0>\;
  m_axi_wuser(703) <= \<const0>\;
  m_axi_wuser(702) <= \<const0>\;
  m_axi_wuser(701) <= \<const0>\;
  m_axi_wuser(700) <= \<const0>\;
  m_axi_wuser(699) <= \<const0>\;
  m_axi_wuser(698) <= \<const0>\;
  m_axi_wuser(697) <= \<const0>\;
  m_axi_wuser(696) <= \<const0>\;
  m_axi_wuser(695) <= \<const0>\;
  m_axi_wuser(694) <= \<const0>\;
  m_axi_wuser(693) <= \<const0>\;
  m_axi_wuser(692) <= \<const0>\;
  m_axi_wuser(691) <= \<const0>\;
  m_axi_wuser(690) <= \<const0>\;
  m_axi_wuser(689) <= \<const0>\;
  m_axi_wuser(688) <= \<const0>\;
  m_axi_wuser(687) <= \<const0>\;
  m_axi_wuser(686) <= \<const0>\;
  m_axi_wuser(685) <= \<const0>\;
  m_axi_wuser(684) <= \<const0>\;
  m_axi_wuser(683) <= \<const0>\;
  m_axi_wuser(682) <= \<const0>\;
  m_axi_wuser(681) <= \<const0>\;
  m_axi_wuser(680) <= \<const0>\;
  m_axi_wuser(679) <= \<const0>\;
  m_axi_wuser(678) <= \<const0>\;
  m_axi_wuser(677) <= \<const0>\;
  m_axi_wuser(676) <= \<const0>\;
  m_axi_wuser(675) <= \<const0>\;
  m_axi_wuser(674) <= \<const0>\;
  m_axi_wuser(673) <= \<const0>\;
  m_axi_wuser(672) <= \<const0>\;
  m_axi_wuser(671) <= \<const0>\;
  m_axi_wuser(670) <= \<const0>\;
  m_axi_wuser(669) <= \<const0>\;
  m_axi_wuser(668) <= \<const0>\;
  m_axi_wuser(667) <= \<const0>\;
  m_axi_wuser(666) <= \<const0>\;
  m_axi_wuser(665) <= \<const0>\;
  m_axi_wuser(664) <= \<const0>\;
  m_axi_wuser(663) <= \<const0>\;
  m_axi_wuser(662) <= \<const0>\;
  m_axi_wuser(661) <= \<const0>\;
  m_axi_wuser(660) <= \<const0>\;
  m_axi_wuser(659) <= \<const0>\;
  m_axi_wuser(658) <= \<const0>\;
  m_axi_wuser(657) <= \<const0>\;
  m_axi_wuser(656) <= \<const0>\;
  m_axi_wuser(655) <= \<const0>\;
  m_axi_wuser(654) <= \<const0>\;
  m_axi_wuser(653) <= \<const0>\;
  m_axi_wuser(652) <= \<const0>\;
  m_axi_wuser(651) <= \<const0>\;
  m_axi_wuser(650) <= \<const0>\;
  m_axi_wuser(649) <= \<const0>\;
  m_axi_wuser(648) <= \<const0>\;
  m_axi_wuser(647) <= \<const0>\;
  m_axi_wuser(646) <= \<const0>\;
  m_axi_wuser(645) <= \<const0>\;
  m_axi_wuser(644) <= \<const0>\;
  m_axi_wuser(643) <= \<const0>\;
  m_axi_wuser(642) <= \<const0>\;
  m_axi_wuser(641) <= \<const0>\;
  m_axi_wuser(640) <= \<const0>\;
  m_axi_wuser(639) <= \<const0>\;
  m_axi_wuser(638) <= \<const0>\;
  m_axi_wuser(637) <= \<const0>\;
  m_axi_wuser(636) <= \<const0>\;
  m_axi_wuser(635) <= \<const0>\;
  m_axi_wuser(634) <= \<const0>\;
  m_axi_wuser(633) <= \<const0>\;
  m_axi_wuser(632) <= \<const0>\;
  m_axi_wuser(631) <= \<const0>\;
  m_axi_wuser(630) <= \<const0>\;
  m_axi_wuser(629) <= \<const0>\;
  m_axi_wuser(628) <= \<const0>\;
  m_axi_wuser(627) <= \<const0>\;
  m_axi_wuser(626) <= \<const0>\;
  m_axi_wuser(625) <= \<const0>\;
  m_axi_wuser(624) <= \<const0>\;
  m_axi_wuser(623) <= \<const0>\;
  m_axi_wuser(622) <= \<const0>\;
  m_axi_wuser(621) <= \<const0>\;
  m_axi_wuser(620) <= \<const0>\;
  m_axi_wuser(619) <= \<const0>\;
  m_axi_wuser(618) <= \<const0>\;
  m_axi_wuser(617) <= \<const0>\;
  m_axi_wuser(616) <= \<const0>\;
  m_axi_wuser(615) <= \<const0>\;
  m_axi_wuser(614) <= \<const0>\;
  m_axi_wuser(613) <= \<const0>\;
  m_axi_wuser(612) <= \<const0>\;
  m_axi_wuser(611) <= \<const0>\;
  m_axi_wuser(610) <= \<const0>\;
  m_axi_wuser(609) <= \<const0>\;
  m_axi_wuser(608) <= \<const0>\;
  m_axi_wuser(607) <= \<const0>\;
  m_axi_wuser(606) <= \<const0>\;
  m_axi_wuser(605) <= \<const0>\;
  m_axi_wuser(604) <= \<const0>\;
  m_axi_wuser(603) <= \<const0>\;
  m_axi_wuser(602) <= \<const0>\;
  m_axi_wuser(601) <= \<const0>\;
  m_axi_wuser(600) <= \<const0>\;
  m_axi_wuser(599) <= \<const0>\;
  m_axi_wuser(598) <= \<const0>\;
  m_axi_wuser(597) <= \<const0>\;
  m_axi_wuser(596) <= \<const0>\;
  m_axi_wuser(595) <= \<const0>\;
  m_axi_wuser(594) <= \<const0>\;
  m_axi_wuser(593) <= \<const0>\;
  m_axi_wuser(592) <= \<const0>\;
  m_axi_wuser(591) <= \<const0>\;
  m_axi_wuser(590) <= \<const0>\;
  m_axi_wuser(589) <= \<const0>\;
  m_axi_wuser(588) <= \<const0>\;
  m_axi_wuser(587) <= \<const0>\;
  m_axi_wuser(586) <= \<const0>\;
  m_axi_wuser(585) <= \<const0>\;
  m_axi_wuser(584) <= \<const0>\;
  m_axi_wuser(583) <= \<const0>\;
  m_axi_wuser(582) <= \<const0>\;
  m_axi_wuser(581) <= \<const0>\;
  m_axi_wuser(580) <= \<const0>\;
  m_axi_wuser(579) <= \<const0>\;
  m_axi_wuser(578) <= \<const0>\;
  m_axi_wuser(577) <= \<const0>\;
  m_axi_wuser(576) <= \<const0>\;
  m_axi_wuser(575) <= \<const0>\;
  m_axi_wuser(574) <= \<const0>\;
  m_axi_wuser(573) <= \<const0>\;
  m_axi_wuser(572) <= \<const0>\;
  m_axi_wuser(571) <= \<const0>\;
  m_axi_wuser(570) <= \<const0>\;
  m_axi_wuser(569) <= \<const0>\;
  m_axi_wuser(568) <= \<const0>\;
  m_axi_wuser(567) <= \<const0>\;
  m_axi_wuser(566) <= \<const0>\;
  m_axi_wuser(565) <= \<const0>\;
  m_axi_wuser(564) <= \<const0>\;
  m_axi_wuser(563) <= \<const0>\;
  m_axi_wuser(562) <= \<const0>\;
  m_axi_wuser(561) <= \<const0>\;
  m_axi_wuser(560) <= \<const0>\;
  m_axi_wuser(559) <= \<const0>\;
  m_axi_wuser(558) <= \<const0>\;
  m_axi_wuser(557) <= \<const0>\;
  m_axi_wuser(556) <= \<const0>\;
  m_axi_wuser(555) <= \<const0>\;
  m_axi_wuser(554) <= \<const0>\;
  m_axi_wuser(553) <= \<const0>\;
  m_axi_wuser(552) <= \<const0>\;
  m_axi_wuser(551) <= \<const0>\;
  m_axi_wuser(550) <= \<const0>\;
  m_axi_wuser(549) <= \<const0>\;
  m_axi_wuser(548) <= \<const0>\;
  m_axi_wuser(547) <= \<const0>\;
  m_axi_wuser(546) <= \<const0>\;
  m_axi_wuser(545) <= \<const0>\;
  m_axi_wuser(544) <= \<const0>\;
  m_axi_wuser(543) <= \<const0>\;
  m_axi_wuser(542) <= \<const0>\;
  m_axi_wuser(541) <= \<const0>\;
  m_axi_wuser(540) <= \<const0>\;
  m_axi_wuser(539) <= \<const0>\;
  m_axi_wuser(538) <= \<const0>\;
  m_axi_wuser(537) <= \<const0>\;
  m_axi_wuser(536) <= \<const0>\;
  m_axi_wuser(535) <= \<const0>\;
  m_axi_wuser(534) <= \<const0>\;
  m_axi_wuser(533) <= \<const0>\;
  m_axi_wuser(532) <= \<const0>\;
  m_axi_wuser(531) <= \<const0>\;
  m_axi_wuser(530) <= \<const0>\;
  m_axi_wuser(529) <= \<const0>\;
  m_axi_wuser(528) <= \<const0>\;
  m_axi_wuser(527) <= \<const0>\;
  m_axi_wuser(526) <= \<const0>\;
  m_axi_wuser(525) <= \<const0>\;
  m_axi_wuser(524) <= \<const0>\;
  m_axi_wuser(523) <= \<const0>\;
  m_axi_wuser(522) <= \<const0>\;
  m_axi_wuser(521) <= \<const0>\;
  m_axi_wuser(520) <= \<const0>\;
  m_axi_wuser(519) <= \<const0>\;
  m_axi_wuser(518) <= \<const0>\;
  m_axi_wuser(517) <= \<const0>\;
  m_axi_wuser(516) <= \<const0>\;
  m_axi_wuser(515) <= \<const0>\;
  m_axi_wuser(514) <= \<const0>\;
  m_axi_wuser(513) <= \<const0>\;
  m_axi_wuser(512) <= \<const0>\;
  m_axi_wuser(511) <= \<const0>\;
  m_axi_wuser(510) <= \<const0>\;
  m_axi_wuser(509) <= \<const0>\;
  m_axi_wuser(508) <= \<const0>\;
  m_axi_wuser(507) <= \<const0>\;
  m_axi_wuser(506) <= \<const0>\;
  m_axi_wuser(505) <= \<const0>\;
  m_axi_wuser(504) <= \<const0>\;
  m_axi_wuser(503) <= \<const0>\;
  m_axi_wuser(502) <= \<const0>\;
  m_axi_wuser(501) <= \<const0>\;
  m_axi_wuser(500) <= \<const0>\;
  m_axi_wuser(499) <= \<const0>\;
  m_axi_wuser(498) <= \<const0>\;
  m_axi_wuser(497) <= \<const0>\;
  m_axi_wuser(496) <= \<const0>\;
  m_axi_wuser(495) <= \<const0>\;
  m_axi_wuser(494) <= \<const0>\;
  m_axi_wuser(493) <= \<const0>\;
  m_axi_wuser(492) <= \<const0>\;
  m_axi_wuser(491) <= \<const0>\;
  m_axi_wuser(490) <= \<const0>\;
  m_axi_wuser(489) <= \<const0>\;
  m_axi_wuser(488) <= \<const0>\;
  m_axi_wuser(487) <= \<const0>\;
  m_axi_wuser(486) <= \<const0>\;
  m_axi_wuser(485) <= \<const0>\;
  m_axi_wuser(484) <= \<const0>\;
  m_axi_wuser(483) <= \<const0>\;
  m_axi_wuser(482) <= \<const0>\;
  m_axi_wuser(481) <= \<const0>\;
  m_axi_wuser(480) <= \<const0>\;
  m_axi_wuser(479) <= \<const0>\;
  m_axi_wuser(478) <= \<const0>\;
  m_axi_wuser(477) <= \<const0>\;
  m_axi_wuser(476) <= \<const0>\;
  m_axi_wuser(475) <= \<const0>\;
  m_axi_wuser(474) <= \<const0>\;
  m_axi_wuser(473) <= \<const0>\;
  m_axi_wuser(472) <= \<const0>\;
  m_axi_wuser(471) <= \<const0>\;
  m_axi_wuser(470) <= \<const0>\;
  m_axi_wuser(469) <= \<const0>\;
  m_axi_wuser(468) <= \<const0>\;
  m_axi_wuser(467) <= \<const0>\;
  m_axi_wuser(466) <= \<const0>\;
  m_axi_wuser(465) <= \<const0>\;
  m_axi_wuser(464) <= \<const0>\;
  m_axi_wuser(463) <= \<const0>\;
  m_axi_wuser(462) <= \<const0>\;
  m_axi_wuser(461) <= \<const0>\;
  m_axi_wuser(460) <= \<const0>\;
  m_axi_wuser(459) <= \<const0>\;
  m_axi_wuser(458) <= \<const0>\;
  m_axi_wuser(457) <= \<const0>\;
  m_axi_wuser(456) <= \<const0>\;
  m_axi_wuser(455) <= \<const0>\;
  m_axi_wuser(454) <= \<const0>\;
  m_axi_wuser(453) <= \<const0>\;
  m_axi_wuser(452) <= \<const0>\;
  m_axi_wuser(451) <= \<const0>\;
  m_axi_wuser(450) <= \<const0>\;
  m_axi_wuser(449) <= \<const0>\;
  m_axi_wuser(448) <= \<const0>\;
  m_axi_wuser(447) <= \<const0>\;
  m_axi_wuser(446) <= \<const0>\;
  m_axi_wuser(445) <= \<const0>\;
  m_axi_wuser(444) <= \<const0>\;
  m_axi_wuser(443) <= \<const0>\;
  m_axi_wuser(442) <= \<const0>\;
  m_axi_wuser(441) <= \<const0>\;
  m_axi_wuser(440) <= \<const0>\;
  m_axi_wuser(439) <= \<const0>\;
  m_axi_wuser(438) <= \<const0>\;
  m_axi_wuser(437) <= \<const0>\;
  m_axi_wuser(436) <= \<const0>\;
  m_axi_wuser(435) <= \<const0>\;
  m_axi_wuser(434) <= \<const0>\;
  m_axi_wuser(433) <= \<const0>\;
  m_axi_wuser(432) <= \<const0>\;
  m_axi_wuser(431) <= \<const0>\;
  m_axi_wuser(430) <= \<const0>\;
  m_axi_wuser(429) <= \<const0>\;
  m_axi_wuser(428) <= \<const0>\;
  m_axi_wuser(427) <= \<const0>\;
  m_axi_wuser(426) <= \<const0>\;
  m_axi_wuser(425) <= \<const0>\;
  m_axi_wuser(424) <= \<const0>\;
  m_axi_wuser(423) <= \<const0>\;
  m_axi_wuser(422) <= \<const0>\;
  m_axi_wuser(421) <= \<const0>\;
  m_axi_wuser(420) <= \<const0>\;
  m_axi_wuser(419) <= \<const0>\;
  m_axi_wuser(418) <= \<const0>\;
  m_axi_wuser(417) <= \<const0>\;
  m_axi_wuser(416) <= \<const0>\;
  m_axi_wuser(415) <= \<const0>\;
  m_axi_wuser(414) <= \<const0>\;
  m_axi_wuser(413) <= \<const0>\;
  m_axi_wuser(412) <= \<const0>\;
  m_axi_wuser(411) <= \<const0>\;
  m_axi_wuser(410) <= \<const0>\;
  m_axi_wuser(409) <= \<const0>\;
  m_axi_wuser(408) <= \<const0>\;
  m_axi_wuser(407) <= \<const0>\;
  m_axi_wuser(406) <= \<const0>\;
  m_axi_wuser(405) <= \<const0>\;
  m_axi_wuser(404) <= \<const0>\;
  m_axi_wuser(403) <= \<const0>\;
  m_axi_wuser(402) <= \<const0>\;
  m_axi_wuser(401) <= \<const0>\;
  m_axi_wuser(400) <= \<const0>\;
  m_axi_wuser(399) <= \<const0>\;
  m_axi_wuser(398) <= \<const0>\;
  m_axi_wuser(397) <= \<const0>\;
  m_axi_wuser(396) <= \<const0>\;
  m_axi_wuser(395) <= \<const0>\;
  m_axi_wuser(394) <= \<const0>\;
  m_axi_wuser(393) <= \<const0>\;
  m_axi_wuser(392) <= \<const0>\;
  m_axi_wuser(391) <= \<const0>\;
  m_axi_wuser(390) <= \<const0>\;
  m_axi_wuser(389) <= \<const0>\;
  m_axi_wuser(388) <= \<const0>\;
  m_axi_wuser(387) <= \<const0>\;
  m_axi_wuser(386) <= \<const0>\;
  m_axi_wuser(385) <= \<const0>\;
  m_axi_wuser(384) <= \<const0>\;
  m_axi_wuser(383) <= \<const0>\;
  m_axi_wuser(382) <= \<const0>\;
  m_axi_wuser(381) <= \<const0>\;
  m_axi_wuser(380) <= \<const0>\;
  m_axi_wuser(379) <= \<const0>\;
  m_axi_wuser(378) <= \<const0>\;
  m_axi_wuser(377) <= \<const0>\;
  m_axi_wuser(376) <= \<const0>\;
  m_axi_wuser(375) <= \<const0>\;
  m_axi_wuser(374) <= \<const0>\;
  m_axi_wuser(373) <= \<const0>\;
  m_axi_wuser(372) <= \<const0>\;
  m_axi_wuser(371) <= \<const0>\;
  m_axi_wuser(370) <= \<const0>\;
  m_axi_wuser(369) <= \<const0>\;
  m_axi_wuser(368) <= \<const0>\;
  m_axi_wuser(367) <= \<const0>\;
  m_axi_wuser(366) <= \<const0>\;
  m_axi_wuser(365) <= \<const0>\;
  m_axi_wuser(364) <= \<const0>\;
  m_axi_wuser(363) <= \<const0>\;
  m_axi_wuser(362) <= \<const0>\;
  m_axi_wuser(361) <= \<const0>\;
  m_axi_wuser(360) <= \<const0>\;
  m_axi_wuser(359) <= \<const0>\;
  m_axi_wuser(358) <= \<const0>\;
  m_axi_wuser(357) <= \<const0>\;
  m_axi_wuser(356) <= \<const0>\;
  m_axi_wuser(355) <= \<const0>\;
  m_axi_wuser(354) <= \<const0>\;
  m_axi_wuser(353) <= \<const0>\;
  m_axi_wuser(352) <= \<const0>\;
  m_axi_wuser(351) <= \<const0>\;
  m_axi_wuser(350) <= \<const0>\;
  m_axi_wuser(349) <= \<const0>\;
  m_axi_wuser(348) <= \<const0>\;
  m_axi_wuser(347) <= \<const0>\;
  m_axi_wuser(346) <= \<const0>\;
  m_axi_wuser(345) <= \<const0>\;
  m_axi_wuser(344) <= \<const0>\;
  m_axi_wuser(343) <= \<const0>\;
  m_axi_wuser(342) <= \<const0>\;
  m_axi_wuser(341) <= \<const0>\;
  m_axi_wuser(340) <= \<const0>\;
  m_axi_wuser(339) <= \<const0>\;
  m_axi_wuser(338) <= \<const0>\;
  m_axi_wuser(337) <= \<const0>\;
  m_axi_wuser(336) <= \<const0>\;
  m_axi_wuser(335) <= \<const0>\;
  m_axi_wuser(334) <= \<const0>\;
  m_axi_wuser(333) <= \<const0>\;
  m_axi_wuser(332) <= \<const0>\;
  m_axi_wuser(331) <= \<const0>\;
  m_axi_wuser(330) <= \<const0>\;
  m_axi_wuser(329) <= \<const0>\;
  m_axi_wuser(328) <= \<const0>\;
  m_axi_wuser(327) <= \<const0>\;
  m_axi_wuser(326) <= \<const0>\;
  m_axi_wuser(325) <= \<const0>\;
  m_axi_wuser(324) <= \<const0>\;
  m_axi_wuser(323) <= \<const0>\;
  m_axi_wuser(322) <= \<const0>\;
  m_axi_wuser(321) <= \<const0>\;
  m_axi_wuser(320) <= \<const0>\;
  m_axi_wuser(319) <= \<const0>\;
  m_axi_wuser(318) <= \<const0>\;
  m_axi_wuser(317) <= \<const0>\;
  m_axi_wuser(316) <= \<const0>\;
  m_axi_wuser(315) <= \<const0>\;
  m_axi_wuser(314) <= \<const0>\;
  m_axi_wuser(313) <= \<const0>\;
  m_axi_wuser(312) <= \<const0>\;
  m_axi_wuser(311) <= \<const0>\;
  m_axi_wuser(310) <= \<const0>\;
  m_axi_wuser(309) <= \<const0>\;
  m_axi_wuser(308) <= \<const0>\;
  m_axi_wuser(307) <= \<const0>\;
  m_axi_wuser(306) <= \<const0>\;
  m_axi_wuser(305) <= \<const0>\;
  m_axi_wuser(304) <= \<const0>\;
  m_axi_wuser(303) <= \<const0>\;
  m_axi_wuser(302) <= \<const0>\;
  m_axi_wuser(301) <= \<const0>\;
  m_axi_wuser(300) <= \<const0>\;
  m_axi_wuser(299) <= \<const0>\;
  m_axi_wuser(298) <= \<const0>\;
  m_axi_wuser(297) <= \<const0>\;
  m_axi_wuser(296) <= \<const0>\;
  m_axi_wuser(295) <= \<const0>\;
  m_axi_wuser(294) <= \<const0>\;
  m_axi_wuser(293) <= \<const0>\;
  m_axi_wuser(292) <= \<const0>\;
  m_axi_wuser(291) <= \<const0>\;
  m_axi_wuser(290) <= \<const0>\;
  m_axi_wuser(289) <= \<const0>\;
  m_axi_wuser(288) <= \<const0>\;
  m_axi_wuser(287) <= \<const0>\;
  m_axi_wuser(286) <= \<const0>\;
  m_axi_wuser(285) <= \<const0>\;
  m_axi_wuser(284) <= \<const0>\;
  m_axi_wuser(283) <= \<const0>\;
  m_axi_wuser(282) <= \<const0>\;
  m_axi_wuser(281) <= \<const0>\;
  m_axi_wuser(280) <= \<const0>\;
  m_axi_wuser(279) <= \<const0>\;
  m_axi_wuser(278) <= \<const0>\;
  m_axi_wuser(277) <= \<const0>\;
  m_axi_wuser(276) <= \<const0>\;
  m_axi_wuser(275) <= \<const0>\;
  m_axi_wuser(274) <= \<const0>\;
  m_axi_wuser(273) <= \<const0>\;
  m_axi_wuser(272) <= \<const0>\;
  m_axi_wuser(271) <= \<const0>\;
  m_axi_wuser(270) <= \<const0>\;
  m_axi_wuser(269) <= \<const0>\;
  m_axi_wuser(268) <= \<const0>\;
  m_axi_wuser(267) <= \<const0>\;
  m_axi_wuser(266) <= \<const0>\;
  m_axi_wuser(265) <= \<const0>\;
  m_axi_wuser(264) <= \<const0>\;
  m_axi_wuser(263) <= \<const0>\;
  m_axi_wuser(262) <= \<const0>\;
  m_axi_wuser(261) <= \<const0>\;
  m_axi_wuser(260) <= \<const0>\;
  m_axi_wuser(259) <= \<const0>\;
  m_axi_wuser(258) <= \<const0>\;
  m_axi_wuser(257) <= \<const0>\;
  m_axi_wuser(256) <= \<const0>\;
  m_axi_wuser(255) <= \<const0>\;
  m_axi_wuser(254) <= \<const0>\;
  m_axi_wuser(253) <= \<const0>\;
  m_axi_wuser(252) <= \<const0>\;
  m_axi_wuser(251) <= \<const0>\;
  m_axi_wuser(250) <= \<const0>\;
  m_axi_wuser(249) <= \<const0>\;
  m_axi_wuser(248) <= \<const0>\;
  m_axi_wuser(247) <= \<const0>\;
  m_axi_wuser(246) <= \<const0>\;
  m_axi_wuser(245) <= \<const0>\;
  m_axi_wuser(244) <= \<const0>\;
  m_axi_wuser(243) <= \<const0>\;
  m_axi_wuser(242) <= \<const0>\;
  m_axi_wuser(241) <= \<const0>\;
  m_axi_wuser(240) <= \<const0>\;
  m_axi_wuser(239) <= \<const0>\;
  m_axi_wuser(238) <= \<const0>\;
  m_axi_wuser(237) <= \<const0>\;
  m_axi_wuser(236) <= \<const0>\;
  m_axi_wuser(235) <= \<const0>\;
  m_axi_wuser(234) <= \<const0>\;
  m_axi_wuser(233) <= \<const0>\;
  m_axi_wuser(232) <= \<const0>\;
  m_axi_wuser(231) <= \<const0>\;
  m_axi_wuser(230) <= \<const0>\;
  m_axi_wuser(229) <= \<const0>\;
  m_axi_wuser(228) <= \<const0>\;
  m_axi_wuser(227) <= \<const0>\;
  m_axi_wuser(226) <= \<const0>\;
  m_axi_wuser(225) <= \<const0>\;
  m_axi_wuser(224) <= \<const0>\;
  m_axi_wuser(223) <= \<const0>\;
  m_axi_wuser(222) <= \<const0>\;
  m_axi_wuser(221) <= \<const0>\;
  m_axi_wuser(220) <= \<const0>\;
  m_axi_wuser(219) <= \<const0>\;
  m_axi_wuser(218) <= \<const0>\;
  m_axi_wuser(217) <= \<const0>\;
  m_axi_wuser(216) <= \<const0>\;
  m_axi_wuser(215) <= \<const0>\;
  m_axi_wuser(214) <= \<const0>\;
  m_axi_wuser(213) <= \<const0>\;
  m_axi_wuser(212) <= \<const0>\;
  m_axi_wuser(211) <= \<const0>\;
  m_axi_wuser(210) <= \<const0>\;
  m_axi_wuser(209) <= \<const0>\;
  m_axi_wuser(208) <= \<const0>\;
  m_axi_wuser(207) <= \<const0>\;
  m_axi_wuser(206) <= \<const0>\;
  m_axi_wuser(205) <= \<const0>\;
  m_axi_wuser(204) <= \<const0>\;
  m_axi_wuser(203) <= \<const0>\;
  m_axi_wuser(202) <= \<const0>\;
  m_axi_wuser(201) <= \<const0>\;
  m_axi_wuser(200) <= \<const0>\;
  m_axi_wuser(199) <= \<const0>\;
  m_axi_wuser(198) <= \<const0>\;
  m_axi_wuser(197) <= \<const0>\;
  m_axi_wuser(196) <= \<const0>\;
  m_axi_wuser(195) <= \<const0>\;
  m_axi_wuser(194) <= \<const0>\;
  m_axi_wuser(193) <= \<const0>\;
  m_axi_wuser(192) <= \<const0>\;
  m_axi_wuser(191) <= \<const0>\;
  m_axi_wuser(190) <= \<const0>\;
  m_axi_wuser(189) <= \<const0>\;
  m_axi_wuser(188) <= \<const0>\;
  m_axi_wuser(187) <= \<const0>\;
  m_axi_wuser(186) <= \<const0>\;
  m_axi_wuser(185) <= \<const0>\;
  m_axi_wuser(184) <= \<const0>\;
  m_axi_wuser(183) <= \<const0>\;
  m_axi_wuser(182) <= \<const0>\;
  m_axi_wuser(181) <= \<const0>\;
  m_axi_wuser(180) <= \<const0>\;
  m_axi_wuser(179) <= \<const0>\;
  m_axi_wuser(178) <= \<const0>\;
  m_axi_wuser(177) <= \<const0>\;
  m_axi_wuser(176) <= \<const0>\;
  m_axi_wuser(175) <= \<const0>\;
  m_axi_wuser(174) <= \<const0>\;
  m_axi_wuser(173) <= \<const0>\;
  m_axi_wuser(172) <= \<const0>\;
  m_axi_wuser(171) <= \<const0>\;
  m_axi_wuser(170) <= \<const0>\;
  m_axi_wuser(169) <= \<const0>\;
  m_axi_wuser(168) <= \<const0>\;
  m_axi_wuser(167) <= \<const0>\;
  m_axi_wuser(166) <= \<const0>\;
  m_axi_wuser(165) <= \<const0>\;
  m_axi_wuser(164) <= \<const0>\;
  m_axi_wuser(163) <= \<const0>\;
  m_axi_wuser(162) <= \<const0>\;
  m_axi_wuser(161) <= \<const0>\;
  m_axi_wuser(160) <= \<const0>\;
  m_axi_wuser(159) <= \<const0>\;
  m_axi_wuser(158) <= \<const0>\;
  m_axi_wuser(157) <= \<const0>\;
  m_axi_wuser(156) <= \<const0>\;
  m_axi_wuser(155) <= \<const0>\;
  m_axi_wuser(154) <= \<const0>\;
  m_axi_wuser(153) <= \<const0>\;
  m_axi_wuser(152) <= \<const0>\;
  m_axi_wuser(151) <= \<const0>\;
  m_axi_wuser(150) <= \<const0>\;
  m_axi_wuser(149) <= \<const0>\;
  m_axi_wuser(148) <= \<const0>\;
  m_axi_wuser(147) <= \<const0>\;
  m_axi_wuser(146) <= \<const0>\;
  m_axi_wuser(145) <= \<const0>\;
  m_axi_wuser(144) <= \<const0>\;
  m_axi_wuser(143) <= \<const0>\;
  m_axi_wuser(142) <= \<const0>\;
  m_axi_wuser(141) <= \<const0>\;
  m_axi_wuser(140) <= \<const0>\;
  m_axi_wuser(139) <= \<const0>\;
  m_axi_wuser(138) <= \<const0>\;
  m_axi_wuser(137) <= \<const0>\;
  m_axi_wuser(136) <= \<const0>\;
  m_axi_wuser(135) <= \<const0>\;
  m_axi_wuser(134) <= \<const0>\;
  m_axi_wuser(133) <= \<const0>\;
  m_axi_wuser(132) <= \<const0>\;
  m_axi_wuser(131) <= \<const0>\;
  m_axi_wuser(130) <= \<const0>\;
  m_axi_wuser(129) <= \<const0>\;
  m_axi_wuser(128) <= \<const0>\;
  m_axi_wuser(127) <= \<const0>\;
  m_axi_wuser(126) <= \<const0>\;
  m_axi_wuser(125) <= \<const0>\;
  m_axi_wuser(124) <= \<const0>\;
  m_axi_wuser(123) <= \<const0>\;
  m_axi_wuser(122) <= \<const0>\;
  m_axi_wuser(121) <= \<const0>\;
  m_axi_wuser(120) <= \<const0>\;
  m_axi_wuser(119) <= \<const0>\;
  m_axi_wuser(118) <= \<const0>\;
  m_axi_wuser(117) <= \<const0>\;
  m_axi_wuser(116) <= \<const0>\;
  m_axi_wuser(115) <= \<const0>\;
  m_axi_wuser(114) <= \<const0>\;
  m_axi_wuser(113) <= \<const0>\;
  m_axi_wuser(112) <= \<const0>\;
  m_axi_wuser(111) <= \<const0>\;
  m_axi_wuser(110) <= \<const0>\;
  m_axi_wuser(109) <= \<const0>\;
  m_axi_wuser(108) <= \<const0>\;
  m_axi_wuser(107) <= \<const0>\;
  m_axi_wuser(106) <= \<const0>\;
  m_axi_wuser(105) <= \<const0>\;
  m_axi_wuser(104) <= \<const0>\;
  m_axi_wuser(103) <= \<const0>\;
  m_axi_wuser(102) <= \<const0>\;
  m_axi_wuser(101) <= \<const0>\;
  m_axi_wuser(100) <= \<const0>\;
  m_axi_wuser(99) <= \<const0>\;
  m_axi_wuser(98) <= \<const0>\;
  m_axi_wuser(97) <= \<const0>\;
  m_axi_wuser(96) <= \<const0>\;
  m_axi_wuser(95) <= \<const0>\;
  m_axi_wuser(94) <= \<const0>\;
  m_axi_wuser(93) <= \<const0>\;
  m_axi_wuser(92) <= \<const0>\;
  m_axi_wuser(91) <= \<const0>\;
  m_axi_wuser(90) <= \<const0>\;
  m_axi_wuser(89) <= \<const0>\;
  m_axi_wuser(88) <= \<const0>\;
  m_axi_wuser(87) <= \<const0>\;
  m_axi_wuser(86) <= \<const0>\;
  m_axi_wuser(85) <= \<const0>\;
  m_axi_wuser(84) <= \<const0>\;
  m_axi_wuser(83) <= \<const0>\;
  m_axi_wuser(82) <= \<const0>\;
  m_axi_wuser(81) <= \<const0>\;
  m_axi_wuser(80) <= \<const0>\;
  m_axi_wuser(79) <= \<const0>\;
  m_axi_wuser(78) <= \<const0>\;
  m_axi_wuser(77) <= \<const0>\;
  m_axi_wuser(76) <= \<const0>\;
  m_axi_wuser(75) <= \<const0>\;
  m_axi_wuser(74) <= \<const0>\;
  m_axi_wuser(73) <= \<const0>\;
  m_axi_wuser(72) <= \<const0>\;
  m_axi_wuser(71) <= \<const0>\;
  m_axi_wuser(70) <= \<const0>\;
  m_axi_wuser(69) <= \<const0>\;
  m_axi_wuser(68) <= \<const0>\;
  m_axi_wuser(67) <= \<const0>\;
  m_axi_wuser(66) <= \<const0>\;
  m_axi_wuser(65) <= \<const0>\;
  m_axi_wuser(64) <= \<const0>\;
  m_axi_wuser(63) <= \<const0>\;
  m_axi_wuser(62) <= \<const0>\;
  m_axi_wuser(61) <= \<const0>\;
  m_axi_wuser(60) <= \<const0>\;
  m_axi_wuser(59) <= \<const0>\;
  m_axi_wuser(58) <= \<const0>\;
  m_axi_wuser(57) <= \<const0>\;
  m_axi_wuser(56) <= \<const0>\;
  m_axi_wuser(55) <= \<const0>\;
  m_axi_wuser(54) <= \<const0>\;
  m_axi_wuser(53) <= \<const0>\;
  m_axi_wuser(52) <= \<const0>\;
  m_axi_wuser(51) <= \<const0>\;
  m_axi_wuser(50) <= \<const0>\;
  m_axi_wuser(49) <= \<const0>\;
  m_axi_wuser(48) <= \<const0>\;
  m_axi_wuser(47) <= \<const0>\;
  m_axi_wuser(46) <= \<const0>\;
  m_axi_wuser(45) <= \<const0>\;
  m_axi_wuser(44) <= \<const0>\;
  m_axi_wuser(43) <= \<const0>\;
  m_axi_wuser(42) <= \<const0>\;
  m_axi_wuser(41) <= \<const0>\;
  m_axi_wuser(40) <= \<const0>\;
  m_axi_wuser(39) <= \<const0>\;
  m_axi_wuser(38) <= \<const0>\;
  m_axi_wuser(37) <= \<const0>\;
  m_axi_wuser(36) <= \<const0>\;
  m_axi_wuser(35) <= \<const0>\;
  m_axi_wuser(34) <= \<const0>\;
  m_axi_wuser(33) <= \<const0>\;
  m_axi_wuser(32) <= \<const0>\;
  m_axi_wuser(31) <= \<const0>\;
  m_axi_wuser(30) <= \<const0>\;
  m_axi_wuser(29) <= \<const0>\;
  m_axi_wuser(28) <= \<const0>\;
  m_axi_wuser(27) <= \<const0>\;
  m_axi_wuser(26) <= \<const0>\;
  m_axi_wuser(25) <= \<const0>\;
  m_axi_wuser(24) <= \<const0>\;
  m_axi_wuser(23) <= \<const0>\;
  m_axi_wuser(22) <= \<const0>\;
  m_axi_wuser(21) <= \<const0>\;
  m_axi_wuser(20) <= \<const0>\;
  m_axi_wuser(19) <= \<const0>\;
  m_axi_wuser(18) <= \<const0>\;
  m_axi_wuser(17) <= \<const0>\;
  m_axi_wuser(16) <= \<const0>\;
  m_axi_wuser(15) <= \<const0>\;
  m_axi_wuser(14) <= \<const0>\;
  m_axi_wuser(13) <= \<const0>\;
  m_axi_wuser(12) <= \<const0>\;
  m_axi_wuser(11) <= \<const0>\;
  m_axi_wuser(10) <= \<const0>\;
  m_axi_wuser(9) <= \<const0>\;
  m_axi_wuser(8) <= \<const0>\;
  m_axi_wuser(7) <= \<const0>\;
  m_axi_wuser(6) <= \<const0>\;
  m_axi_wuser(5) <= \<const0>\;
  m_axi_wuser(4) <= \<const0>\;
  m_axi_wuser(3) <= \<const0>\;
  m_axi_wuser(2) <= \^m_axi_wuser\(2);
  m_axi_wuser(1) <= \<const0>\;
  m_axi_wuser(0) <= \<const0>\;
  s_axi_buser(0) <= \<const0>\;
  s_axi_ruser(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
ar_reg_stall: entity work.\design_1_axi_smc_0_sc_util_v1_0_4_axi_reg_stall__parameterized0\
     port map (
      D(3) => ar_reg_stall_n_13,
      D(2) => ar_reg_stall_n_14,
      D(1) => ar_reg_stall_n_15,
      D(0) => ar_reg_stall_n_16,
      E(0) => ar_reg_stall_n_12,
      Q(1) => ar_reg_stall_n_8,
      Q(0) => ar_reg_stall_n_9,
      aclk => aclk,
      areset => areset,
      \gen_endpoint.err_arready\ => \gen_endpoint.err_arready\,
      \gen_endpoint.r_cnt_reg[0]\ => \gen_endpoint.r_cnt[4]_i_4_n_0\,
      \gen_endpoint.r_cnt_reg[4]\(4 downto 0) => \gen_endpoint.r_cnt_reg\(4 downto 0),
      \gen_endpoint.r_state\(1 downto 0) => \gen_endpoint.r_state\(1 downto 0),
      \gen_endpoint.r_state_reg[0]\ => ar_reg_stall_n_2,
      \gen_endpoint.r_state_reg[0]_0\ => \gen_endpoint.r_state[0]_i_2_n_0\,
      \gen_endpoint.r_state_reg[0]_1\ => \gen_endpoint.decerr_slave_inst_n_37\,
      \gen_endpoint.r_state_reg[1]\ => ar_reg_stall_n_0,
      \gen_endpoint.r_trigger_decerr\ => \gen_endpoint.r_trigger_decerr\,
      m_axi_araddr(7 downto 0) => \^m_axi_araddr\(7 downto 0),
      m_axi_arid(11 downto 0) => \^m_axi_arid\(11 downto 0),
      m_axi_arlen(3 downto 0) => \^m_axi_arlen\(3 downto 0),
      m_axi_arprot(2 downto 0) => m_axi_arprot(2 downto 0),
      m_axi_arready => m_axi_arready,
      m_axi_arsize(1 downto 0) => \^m_axi_arsize\(1 downto 0),
      m_axi_arvalid => m_axi_arvalid,
      m_valid1 => m_valid1,
      m_vector1 => m_vector1,
      m_vector2 => m_vector2,
      \m_vector_i_reg[1125]_0\ => ar_reg_stall_n_3,
      \m_vector_i_reg[1136]_0\(16 downto 14) => s_axi_arprot(2 downto 0),
      \m_vector_i_reg[1136]_0\(13 downto 2) => s_axi_arid(11 downto 0),
      \m_vector_i_reg[1136]_0\(1 downto 0) => s_axi_arsize(1 downto 0),
      mr_axi_arready => mr_axi_arready,
      mr_axi_arvalid => mr_axi_arvalid,
      r_resume => r_resume,
      s_axi_araddr(23 downto 8) => s_axi_araddr(31 downto 16),
      s_axi_araddr(7 downto 0) => s_axi_araddr(7 downto 0),
      s_axi_arburst(0) => s_axi_arburst(0),
      s_axi_arlen(3 downto 0) => s_axi_arlen(3 downto 0),
      s_axi_arready => s_axi_arready,
      s_axi_arsize(0) => s_axi_arsize(2),
      s_axi_arvalid => s_axi_arvalid,
      sr_axi_arvalid => sr_axi_arvalid,
      \state_reg[storage]_0\ => \gen_endpoint.decerr_slave_inst_n_4\
    );
areset_d_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => aresetn_d,
      O => areset_d_i_1_n_0
    );
areset_d_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => areset_d_i_1_n_0,
      Q => areset_d,
      R => '0'
    );
areset_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => aresetn,
      O => areset_i_1_n_0
    );
areset_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => areset_i_1_n_0,
      Q => areset,
      R => '0'
    );
aresetn_d_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => aresetn,
      Q => aresetn_d,
      R => '0'
    );
aw_reg_stall: entity work.\design_1_axi_smc_0_sc_util_v1_0_4_axi_reg_stall__parameterized0_15\
     port map (
      D(17 downto 15) => s_axi_awprot(2 downto 0),
      D(14 downto 3) => s_axi_awid(11 downto 0),
      D(2 downto 0) => s_axi_awsize(2 downto 0),
      aclk => aclk,
      areset => areset,
      \gen_endpoint.err_awready\ => \gen_endpoint.err_awready\,
      \gen_endpoint.w_state\(1 downto 0) => \gen_endpoint.w_state\(1 downto 0),
      \gen_endpoint.w_trigger_decerr\ => \gen_endpoint.w_trigger_decerr\,
      m_axi_awaddr(7 downto 0) => \^m_axi_awaddr\(7 downto 0),
      m_axi_awid(11 downto 0) => \^m_axi_awid\(11 downto 0),
      m_axi_awprot(2 downto 0) => m_axi_awprot(2 downto 0),
      m_axi_awready => m_axi_awready,
      m_axi_awsize(2 downto 0) => m_axi_awsize(2 downto 0),
      m_axi_awvalid => m_axi_awvalid,
      m_valid1 => m_valid1_1,
      m_vector2 => m_vector2_0,
      mr_axi_awready => mr_axi_awready,
      mr_axi_awvalid => mr_axi_awvalid,
      s_axi_awaddr(23 downto 8) => s_axi_awaddr(31 downto 16),
      s_axi_awaddr(7 downto 0) => s_axi_awaddr(7 downto 0),
      s_axi_awburst(0) => s_axi_awburst(0),
      s_axi_awlen(3 downto 0) => s_axi_awlen(3 downto 0),
      \state_reg[s_ready_i]_0\ => aw_reg_stall_n_3,
      \state_reg[s_stall_d]_0\ => \gen_wroute_fifo.wroute_split_n_6\,
      \state_reg[storage]_0\ => \gen_endpoint.decerr_slave_inst_n_7\,
      w_resume => w_resume
    );
\gen_endpoint.b_cnt[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \gen_endpoint.b_cnt_reg\(0),
      O => \gen_endpoint.b_cnt[0]_i_1_n_0\
    );
\gen_endpoint.b_cnt[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A659"
    )
        port map (
      I0 => \gen_endpoint.b_cnt_reg\(0),
      I1 => p_14_in,
      I2 => \gen_endpoint.b_cnt[3]_i_2_n_0\,
      I3 => \gen_endpoint.b_cnt_reg\(1),
      O => \gen_endpoint.b_cnt[1]_i_1_n_0\
    );
\gen_endpoint.b_cnt[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BF40F40B"
    )
        port map (
      I0 => \gen_endpoint.b_cnt[3]_i_2_n_0\,
      I1 => p_14_in,
      I2 => \gen_endpoint.b_cnt_reg\(0),
      I3 => \gen_endpoint.b_cnt_reg\(2),
      I4 => \gen_endpoint.b_cnt_reg\(1),
      O => \gen_endpoint.b_cnt[2]_i_1_n_0\
    );
\gen_endpoint.b_cnt[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF7F0080EEFE1101"
    )
        port map (
      I0 => \gen_endpoint.b_cnt_reg\(0),
      I1 => \gen_endpoint.b_cnt_reg\(1),
      I2 => p_14_in,
      I3 => \gen_endpoint.b_cnt[3]_i_2_n_0\,
      I4 => \gen_endpoint.b_cnt_reg\(3),
      I5 => \gen_endpoint.b_cnt_reg\(2),
      O => \gen_endpoint.b_cnt[3]_i_1_n_0\
    );
\gen_endpoint.b_cnt[3]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"08880000"
    )
        port map (
      I0 => \gen_endpoint.b_cnt[4]_i_3_n_0\,
      I1 => m_axi_bvalid,
      I2 => \gen_endpoint.w_state\(0),
      I3 => \gen_endpoint.w_state\(1),
      I4 => s_axi_bready,
      O => \gen_endpoint.b_cnt[3]_i_2_n_0\
    );
\gen_endpoint.b_cnt[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A666AAAAAAAAAAAA"
    )
        port map (
      I0 => p_14_in,
      I1 => s_axi_bready,
      I2 => \gen_endpoint.w_state\(1),
      I3 => \gen_endpoint.w_state\(0),
      I4 => m_axi_bvalid,
      I5 => \gen_endpoint.b_cnt[4]_i_3_n_0\,
      O => \gen_endpoint.b_cnt[4]_i_1_n_0\
    );
\gen_endpoint.b_cnt[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6AAAAAAAAAAAAAA9"
    )
        port map (
      I0 => \gen_endpoint.b_cnt_reg\(4),
      I1 => \gen_endpoint.b_cnt_reg\(3),
      I2 => \gen_endpoint.b_cnt_reg\(0),
      I3 => \gen_endpoint.b_cnt_reg\(1),
      I4 => \gen_endpoint.b_cnt[4]_i_4_n_0\,
      I5 => \gen_endpoint.b_cnt_reg\(2),
      O => \gen_endpoint.b_cnt[4]_i_2_n_0\
    );
\gen_endpoint.b_cnt[4]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \gen_endpoint.b_cnt_reg\(3),
      I1 => \gen_endpoint.b_cnt_reg\(2),
      I2 => \gen_endpoint.b_cnt_reg\(4),
      I3 => \gen_endpoint.b_cnt_reg\(0),
      I4 => \gen_endpoint.b_cnt_reg\(1),
      O => \gen_endpoint.b_cnt[4]_i_3_n_0\
    );
\gen_endpoint.b_cnt[4]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => \gen_endpoint.w_push_done_reg_n_0\,
      I1 => \gen_endpoint.w_enable_i_5_n_0\,
      I2 => \gen_endpoint.w_trigger_decerr\,
      I3 => \gen_endpoint.b_cnt[3]_i_2_n_0\,
      O => \gen_endpoint.b_cnt[4]_i_4_n_0\
    );
\gen_endpoint.b_cnt_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_endpoint.b_cnt[4]_i_1_n_0\,
      D => \gen_endpoint.b_cnt[0]_i_1_n_0\,
      Q => \gen_endpoint.b_cnt_reg\(0),
      R => areset_d
    );
\gen_endpoint.b_cnt_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_endpoint.b_cnt[4]_i_1_n_0\,
      D => \gen_endpoint.b_cnt[1]_i_1_n_0\,
      Q => \gen_endpoint.b_cnt_reg\(1),
      R => areset_d
    );
\gen_endpoint.b_cnt_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_endpoint.b_cnt[4]_i_1_n_0\,
      D => \gen_endpoint.b_cnt[2]_i_1_n_0\,
      Q => \gen_endpoint.b_cnt_reg\(2),
      R => areset_d
    );
\gen_endpoint.b_cnt_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_endpoint.b_cnt[4]_i_1_n_0\,
      D => \gen_endpoint.b_cnt[3]_i_1_n_0\,
      Q => \gen_endpoint.b_cnt_reg\(3),
      R => areset_d
    );
\gen_endpoint.b_cnt_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_endpoint.b_cnt[4]_i_1_n_0\,
      D => \gen_endpoint.b_cnt[4]_i_2_n_0\,
      Q => \gen_endpoint.b_cnt_reg\(4),
      R => areset_d
    );
\gen_endpoint.decerr_slave_inst\: entity work.design_1_axi_smc_0_sc_mmu_v1_0_8_decerr_slave
     port map (
      Q(1) => ar_reg_stall_n_8,
      Q(0) => ar_reg_stall_n_9,
      S00_AXI_wready => \gen_endpoint.w_enable_reg_n_0\,
      aclk => aclk,
      areset => areset,
      \gen_axi.gen_read.read_cs_reg[0]_0\ => \gen_endpoint.decerr_slave_inst_n_37\,
      \gen_axi.gen_read.s_axi_rid_i_reg[0]_0\(0) => \gen_endpoint.r_cnt_reg\(4),
      \gen_axi.gen_read.s_axi_rlast_i_reg_0\ => ar_reg_stall_n_3,
      \gen_axi.gen_write.s_axi_bid_i_reg[0]_0\ => \gen_wroute_fifo.wroute_split_n_6\,
      \gen_endpoint.err_arready\ => \gen_endpoint.err_arready\,
      \gen_endpoint.err_awready\ => \gen_endpoint.err_awready\,
      \gen_endpoint.r_state\(1 downto 0) => \gen_endpoint.r_state\(1 downto 0),
      \gen_endpoint.r_state_reg[1]\ => \gen_endpoint.decerr_slave_inst_n_4\,
      \gen_endpoint.r_trigger_decerr\ => \gen_endpoint.r_trigger_decerr\,
      \gen_endpoint.w_state\(1 downto 0) => \gen_endpoint.w_state\(1 downto 0),
      \gen_endpoint.w_state_reg[0]\ => \gen_endpoint.decerr_slave_inst_n_3\,
      \gen_endpoint.w_state_reg[0]_0\ => \gen_endpoint.w_resume_i_1_n_0\,
      \gen_endpoint.w_state_reg[0]_1\ => \gen_wroute_fifo.wroute_split_n_1\,
      \gen_endpoint.w_state_reg[1]\ => \gen_endpoint.decerr_slave_inst_n_2\,
      \gen_endpoint.w_state_reg[1]_0\ => \gen_endpoint.decerr_slave_inst_n_7\,
      \gen_endpoint.w_trigger_decerr\ => \gen_endpoint.w_trigger_decerr\,
      m_axi_arid(11 downto 0) => \^m_axi_arid\(11 downto 0),
      m_axi_arlen(1 downto 0) => \^m_axi_arlen\(3 downto 2),
      m_axi_arready => m_axi_arready,
      m_axi_awid(11 downto 0) => \^m_axi_awid\(11 downto 0),
      m_axi_awready => m_axi_awready,
      m_axi_bid(11 downto 0) => m_axi_bid(11 downto 0),
      m_axi_bvalid => m_axi_bvalid,
      m_axi_rid(11 downto 0) => m_axi_rid(11 downto 0),
      m_axi_rlast => m_axi_rlast,
      m_axi_rvalid => m_axi_rvalid,
      m_axi_wready => m_axi_wready,
      m_valid1 => m_valid1,
      m_valid1_0 => m_valid1_1,
      m_vector1 => m_vector1,
      m_vector2 => m_vector2,
      m_vector2_1 => m_vector2_0,
      mr_axi_arready => mr_axi_arready,
      mr_axi_arvalid => mr_axi_arvalid,
      mr_axi_awready => mr_axi_awready,
      mr_axi_awvalid => mr_axi_awvalid,
      s_axi_arlen(1 downto 0) => s_axi_arlen(1 downto 0),
      s_axi_arvalid => s_axi_arvalid,
      s_axi_bid(11 downto 0) => s_axi_bid(11 downto 0),
      s_axi_bready => s_axi_bready,
      s_axi_bvalid => s_axi_bvalid,
      s_axi_rid(11 downto 0) => s_axi_rid(11 downto 0),
      s_axi_rlast => s_axi_rlast,
      s_axi_rready => s_axi_rready,
      s_axi_rvalid => s_axi_rvalid,
      s_axi_wlast => s_axi_wlast,
      s_axi_wready => s_axi_wready,
      s_axi_wready_i_reg => \gen_endpoint.decerr_slave_inst_n_6\,
      s_axi_wvalid => s_axi_wvalid,
      sr_axi_arvalid => sr_axi_arvalid
    );
\gen_endpoint.r_cnt[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \gen_endpoint.r_cnt_reg\(0),
      O => \gen_endpoint.r_cnt[0]_i_1_n_0\
    );
\gen_endpoint.r_cnt[4]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000800"
    )
        port map (
      I0 => m_axi_rlast,
      I1 => m_axi_rvalid,
      I2 => \gen_endpoint.decerr_slave_inst_n_4\,
      I3 => s_axi_rready,
      I4 => \gen_endpoint.r_state[0]_i_2_n_0\,
      O => \gen_endpoint.r_cnt[4]_i_4_n_0\
    );
\gen_endpoint.r_cnt_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => ar_reg_stall_n_12,
      D => \gen_endpoint.r_cnt[0]_i_1_n_0\,
      Q => \gen_endpoint.r_cnt_reg\(0),
      R => areset
    );
\gen_endpoint.r_cnt_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => ar_reg_stall_n_12,
      D => ar_reg_stall_n_16,
      Q => \gen_endpoint.r_cnt_reg\(1),
      R => areset
    );
\gen_endpoint.r_cnt_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => ar_reg_stall_n_12,
      D => ar_reg_stall_n_15,
      Q => \gen_endpoint.r_cnt_reg\(2),
      R => areset
    );
\gen_endpoint.r_cnt_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => ar_reg_stall_n_12,
      D => ar_reg_stall_n_14,
      Q => \gen_endpoint.r_cnt_reg\(3),
      R => areset
    );
\gen_endpoint.r_cnt_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => ar_reg_stall_n_12,
      D => ar_reg_stall_n_13,
      Q => \gen_endpoint.r_cnt_reg\(4),
      R => areset
    );
\gen_endpoint.r_resume_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \gen_endpoint.r_state[0]_i_2_n_0\,
      I1 => \gen_endpoint.r_state\(1),
      I2 => \gen_endpoint.r_state\(0),
      O => \gen_endpoint.r_resume_i_1_n_0\
    );
\gen_endpoint.r_resume_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_endpoint.r_resume_i_1_n_0\,
      Q => r_resume,
      R => areset
    );
\gen_endpoint.r_state[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => \gen_endpoint.r_cnt_reg\(3),
      I1 => \gen_endpoint.r_cnt_reg\(2),
      I2 => \gen_endpoint.r_cnt_reg\(1),
      I3 => \gen_endpoint.r_cnt_reg\(0),
      I4 => \gen_endpoint.r_cnt_reg\(4),
      O => \gen_endpoint.r_state[0]_i_2_n_0\
    );
\gen_endpoint.r_state_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => ar_reg_stall_n_0,
      Q => \gen_endpoint.r_state\(0),
      R => areset
    );
\gen_endpoint.r_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => ar_reg_stall_n_2,
      Q => \gen_endpoint.r_state\(1),
      R => areset
    );
\gen_endpoint.w_cnt[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \gen_endpoint.w_cnt_reg\(0),
      O => \gen_endpoint.w_cnt[0]_i_1_n_0\
    );
\gen_endpoint.w_cnt[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"69"
    )
        port map (
      I0 => \gen_endpoint.w_cnt_reg\(0),
      I1 => \gen_endpoint.w_cnt1\,
      I2 => \gen_endpoint.w_cnt_reg\(1),
      O => \gen_endpoint.w_cnt[1]_i_1_n_0\
    );
\gen_endpoint.w_cnt[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"78E1"
    )
        port map (
      I0 => \gen_endpoint.w_cnt1\,
      I1 => \gen_endpoint.w_cnt_reg\(0),
      I2 => \gen_endpoint.w_cnt_reg\(2),
      I3 => \gen_endpoint.w_cnt_reg\(1),
      O => \gen_endpoint.w_cnt[2]_i_1_n_0\
    );
\gen_endpoint.w_cnt[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7F80FE01"
    )
        port map (
      I0 => \gen_endpoint.w_cnt_reg\(1),
      I1 => \gen_endpoint.w_cnt1\,
      I2 => \gen_endpoint.w_cnt_reg\(0),
      I3 => \gen_endpoint.w_cnt_reg\(3),
      I4 => \gen_endpoint.w_cnt_reg\(2),
      O => \gen_endpoint.w_cnt[3]_i_1_n_0\
    );
\gen_endpoint.w_cnt[4]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => p_14_in,
      I1 => \gen_endpoint.w_enable_i_3_n_0\,
      O => \gen_endpoint.w_cnt[4]_i_1_n_0\
    );
\gen_endpoint.w_cnt[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6AAAAAAAAAAAAAA9"
    )
        port map (
      I0 => \gen_endpoint.w_cnt_reg\(4),
      I1 => \gen_endpoint.w_cnt_reg\(3),
      I2 => \gen_endpoint.w_cnt_reg\(2),
      I3 => \gen_endpoint.w_cnt_reg\(1),
      I4 => \gen_endpoint.w_cnt1\,
      I5 => \gen_endpoint.w_cnt_reg\(0),
      O => \gen_endpoint.w_cnt[4]_i_2_n_0\
    );
\gen_endpoint.w_cnt[4]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => \gen_endpoint.w_push_done_reg_n_0\,
      I1 => \gen_endpoint.w_enable_i_5_n_0\,
      I2 => \gen_endpoint.w_trigger_decerr\,
      I3 => \gen_endpoint.w_enable_i_3_n_0\,
      O => \gen_endpoint.w_cnt1\
    );
\gen_endpoint.w_cnt_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_endpoint.w_cnt[4]_i_1_n_0\,
      D => \gen_endpoint.w_cnt[0]_i_1_n_0\,
      Q => \gen_endpoint.w_cnt_reg\(0),
      R => areset_d
    );
\gen_endpoint.w_cnt_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_endpoint.w_cnt[4]_i_1_n_0\,
      D => \gen_endpoint.w_cnt[1]_i_1_n_0\,
      Q => \gen_endpoint.w_cnt_reg\(1),
      R => areset_d
    );
\gen_endpoint.w_cnt_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_endpoint.w_cnt[4]_i_1_n_0\,
      D => \gen_endpoint.w_cnt[2]_i_1_n_0\,
      Q => \gen_endpoint.w_cnt_reg\(2),
      R => areset_d
    );
\gen_endpoint.w_cnt_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_endpoint.w_cnt[4]_i_1_n_0\,
      D => \gen_endpoint.w_cnt[3]_i_1_n_0\,
      Q => \gen_endpoint.w_cnt_reg\(3),
      R => areset_d
    );
\gen_endpoint.w_cnt_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => \gen_endpoint.w_cnt[4]_i_1_n_0\,
      D => \gen_endpoint.w_cnt[4]_i_2_n_0\,
      Q => \gen_endpoint.w_cnt_reg\(4),
      R => areset_d
    );
\gen_endpoint.w_enable_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000BE8EBEBE"
    )
        port map (
      I0 => \gen_endpoint.w_enable_reg_n_0\,
      I1 => p_14_in,
      I2 => \gen_endpoint.w_enable_i_3_n_0\,
      I3 => \gen_endpoint.w_enable_i_4_n_0\,
      I4 => \gen_endpoint.w_cnt_reg\(0),
      I5 => areset_d,
      O => \gen_endpoint.w_enable_i_1_n_0\
    );
\gen_endpoint.w_enable_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \gen_endpoint.w_trigger_decerr\,
      I1 => \gen_endpoint.w_enable_i_5_n_0\,
      I2 => \gen_endpoint.w_push_done_reg_n_0\,
      O => p_14_in
    );
\gen_endpoint.w_enable_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4000"
    )
        port map (
      I0 => \gen_endpoint.w_resume_i_2_n_0\,
      I1 => m_axi_wready,
      I2 => s_axi_wlast,
      I3 => s_axi_wvalid,
      O => \gen_endpoint.w_enable_i_3_n_0\
    );
\gen_endpoint.w_enable_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \gen_endpoint.w_cnt_reg\(3),
      I1 => \gen_endpoint.w_cnt_reg\(2),
      I2 => \gen_endpoint.w_cnt_reg\(1),
      I3 => \gen_endpoint.w_cnt_reg\(4),
      O => \gen_endpoint.w_enable_i_4_n_0\
    );
\gen_endpoint.w_enable_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFEFFFF"
    )
        port map (
      I0 => \gen_endpoint.w_cnt_reg\(4),
      I1 => \gen_endpoint.b_cnt_reg\(4),
      I2 => \gen_endpoint.w_state\(1),
      I3 => \gen_endpoint.w_state\(0),
      I4 => s_axi_awvalid,
      O => \gen_endpoint.w_enable_i_5_n_0\
    );
\gen_endpoint.w_enable_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_endpoint.w_enable_i_1_n_0\,
      Q => \gen_endpoint.w_enable_reg_n_0\,
      R => '0'
    );
\gen_endpoint.w_push_done_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_wroute_fifo.wroute_split_n_4\,
      Q => \gen_endpoint.w_push_done_reg_n_0\,
      R => '0'
    );
\gen_endpoint.w_resume_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0200"
    )
        port map (
      I0 => \gen_endpoint.w_resume_i_2_n_0\,
      I1 => \gen_endpoint.b_cnt[4]_i_3_n_0\,
      I2 => \gen_endpoint.w_state\(0),
      I3 => \gen_endpoint.w_state\(1),
      O => \gen_endpoint.w_resume_i_1_n_0\
    );
\gen_endpoint.w_resume_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => \gen_endpoint.w_cnt_reg\(0),
      I1 => \gen_endpoint.w_cnt_reg\(4),
      I2 => \gen_endpoint.w_cnt_reg\(1),
      I3 => \gen_endpoint.w_cnt_reg\(2),
      I4 => \gen_endpoint.w_cnt_reg\(3),
      O => \gen_endpoint.w_resume_i_2_n_0\
    );
\gen_endpoint.w_resume_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_endpoint.w_resume_i_1_n_0\,
      Q => w_resume,
      R => areset
    );
\gen_endpoint.w_state_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_endpoint.decerr_slave_inst_n_2\,
      Q => \gen_endpoint.w_state\(0),
      R => areset
    );
\gen_endpoint.w_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk,
      CE => '1',
      D => \gen_wroute_fifo.wroute_split_n_0\,
      Q => \gen_endpoint.w_state\(1),
      R => areset
    );
\gen_wroute_fifo.wroute_fifo\: entity work.design_1_axi_smc_0_sc_util_v1_0_4_axic_reg_srl_fifo
     port map (
      aclk => aclk,
      areset => areset,
      \gen_pipelined.state_reg[1]_0\ => \gen_wroute_fifo.wroute_split_n_3\,
      \gen_pipelined.state_reg[2]_0\ => \gen_endpoint.decerr_slave_inst_n_6\,
      \gen_pipelined.state_reg[2]_1\ => \gen_wroute_fifo.wroute_split_n_2\,
      m_axi_wuser(0) => \^m_axi_wuser\(2),
      s_axi_awvalid => s_axi_awvalid,
      wroute_vacancy => wroute_vacancy
    );
\gen_wroute_fifo.wroute_split\: entity work.design_1_axi_smc_0_sc_util_v1_0_4_axi_splitter
     port map (
      Q(0) => \gen_endpoint.b_cnt_reg\(4),
      S00_AXI_awready => aw_reg_stall_n_3,
      S00_AXI_awvalid => \gen_wroute_fifo.wroute_split_n_1\,
      S00_AXI_awvalid_0 => \gen_wroute_fifo.wroute_split_n_2\,
      SR(0) => areset_d,
      aclk => aclk,
      areset => areset,
      areset_d_reg => \gen_wroute_fifo.wroute_split_n_4\,
      \gen_axi.gen_write.s_axi_bid_i_reg[0]\(0) => \gen_endpoint.w_cnt_reg\(4),
      \gen_endpoint.w_push_done_reg\ => \gen_endpoint.w_push_done_reg_n_0\,
      \gen_endpoint.w_state\(1 downto 0) => \gen_endpoint.w_state\(1 downto 0),
      \gen_endpoint.w_state_reg[0]\ => \gen_wroute_fifo.wroute_split_n_0\,
      \gen_endpoint.w_state_reg[1]\ => \gen_endpoint.decerr_slave_inst_n_3\,
      \gen_endpoint.w_state_reg[1]_0\ => \gen_endpoint.w_resume_i_1_n_0\,
      \gen_endpoint.w_trigger_decerr\ => \gen_endpoint.w_trigger_decerr\,
      \m_ready_d_reg[0]_0\ => \gen_wroute_fifo.wroute_split_n_3\,
      \m_ready_d_reg[0]_1\ => s_axi_awready,
      \m_ready_d_reg[1]_0\ => \gen_wroute_fifo.wroute_split_n_6\,
      mr_axi_awvalid => mr_axi_awvalid,
      p_14_in => p_14_in,
      s_axi_awvalid => s_axi_awvalid,
      wroute_vacancy => wroute_vacancy
    );
m_axi_wvalid_INST_0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0888"
    )
        port map (
      I0 => \gen_endpoint.w_enable_reg_n_0\,
      I1 => s_axi_wvalid,
      I2 => \gen_endpoint.w_state\(0),
      I3 => \gen_endpoint.w_state\(1),
      O => m_axi_wvalid
    );
\s_axi_bresp[0]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_bresp(0),
      I1 => \gen_endpoint.w_state\(0),
      I2 => \gen_endpoint.w_state\(1),
      O => s_axi_bresp(0)
    );
\s_axi_bresp[1]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_bresp(1),
      I1 => \gen_endpoint.w_state\(0),
      I2 => \gen_endpoint.w_state\(1),
      O => s_axi_bresp(1)
    );
\s_axi_rdata[0]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(0),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(0)
    );
\s_axi_rdata[10]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(10),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(10)
    );
\s_axi_rdata[11]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(11),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(11)
    );
\s_axi_rdata[12]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(12),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(12)
    );
\s_axi_rdata[13]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => m_axi_rdata(13),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(13)
    );
\s_axi_rdata[14]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(14),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(14)
    );
\s_axi_rdata[15]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(15),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(15)
    );
\s_axi_rdata[16]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => m_axi_rdata(16),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(16)
    );
\s_axi_rdata[17]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => m_axi_rdata(17),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(17)
    );
\s_axi_rdata[18]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => m_axi_rdata(18),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(18)
    );
\s_axi_rdata[19]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => m_axi_rdata(19),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(19)
    );
\s_axi_rdata[1]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(1),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(1)
    );
\s_axi_rdata[20]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => m_axi_rdata(20),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(20)
    );
\s_axi_rdata[21]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => m_axi_rdata(21),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(21)
    );
\s_axi_rdata[22]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(22),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(22)
    );
\s_axi_rdata[23]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(23),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(23)
    );
\s_axi_rdata[24]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => m_axi_rdata(24),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(24)
    );
\s_axi_rdata[25]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(25),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(25)
    );
\s_axi_rdata[26]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(26),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(26)
    );
\s_axi_rdata[27]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(27),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(27)
    );
\s_axi_rdata[28]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(28),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(28)
    );
\s_axi_rdata[29]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => m_axi_rdata(29),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(29)
    );
\s_axi_rdata[2]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => m_axi_rdata(2),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(2)
    );
\s_axi_rdata[30]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(30),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(30)
    );
\s_axi_rdata[31]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(31),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(31)
    );
\s_axi_rdata[3]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => m_axi_rdata(3),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(3)
    );
\s_axi_rdata[4]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => m_axi_rdata(4),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(4)
    );
\s_axi_rdata[5]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(5),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(5)
    );
\s_axi_rdata[6]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(6),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(6)
    );
\s_axi_rdata[7]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(7),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(7)
    );
\s_axi_rdata[8]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => m_axi_rdata(8),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(8)
    );
\s_axi_rdata[9]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rdata(9),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rdata(9)
    );
\s_axi_rresp[0]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rresp(0),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rresp(0)
    );
\s_axi_rresp[1]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => m_axi_rresp(1),
      I1 => \gen_endpoint.r_state\(0),
      I2 => \gen_endpoint.r_state\(1),
      O => s_axi_rresp(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_node_v1_0_10_fifo is
  port (
    \gen_normal_area.fifo_node_payld_full_i\ : out STD_LOGIC;
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 10 downto 0 );
    s_sc_aclk : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    areset_r : in STD_LOGIC;
    arb_stall_late : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_areset_r : in STD_LOGIC;
    s_sc_payld : in STD_LOGIC_VECTOR ( 10 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_node_v1_0_10_fifo : entity is "sc_node_v1_0_10_fifo";
end design_1_axi_smc_0_sc_node_v1_0_10_fifo;

architecture STRUCTURE of design_1_axi_smc_0_sc_node_v1_0_10_fifo is
begin
\gen_reg_fifo.inst_reg_fifo\: entity work.design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo
     port map (
      E(0) => E(0),
      arb_stall_late => arb_stall_late,
      areset_r => areset_r,
      \gen_normal_area.fifo_node_payld_full_i\ => \gen_normal_area.fifo_node_payld_full_i\,
      m_sc_areset_r => m_sc_areset_r,
      m_sc_payld(10 downto 0) => m_sc_payld(10 downto 0),
      m_sc_recv(0) => m_sc_recv(0),
      m_sc_send(0) => m_sc_send(0),
      s_sc_aclk => s_sc_aclk,
      s_sc_payld(10 downto 0) => s_sc_payld(10 downto 0),
      s_sc_send(0) => s_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_sc_node_v1_0_10_fifo_11 is
  port (
    \gen_normal_area.fifo_node_payld_full_i\ : out STD_LOGIC;
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 10 downto 0 );
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall_late : in STD_LOGIC;
    areset_r : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_areset_r : in STD_LOGIC;
    s_sc_payld : in STD_LOGIC_VECTOR ( 11 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_sc_node_v1_0_10_fifo_11 : entity is "sc_node_v1_0_10_fifo";
end design_1_axi_smc_0_sc_node_v1_0_10_fifo_11;

architecture STRUCTURE of design_1_axi_smc_0_sc_node_v1_0_10_fifo_11 is
begin
\gen_reg_fifo.inst_reg_fifo\: entity work.design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo_12
     port map (
      E(0) => E(0),
      arb_stall_late => arb_stall_late,
      areset_r => areset_r,
      \gen_normal_area.fifo_node_payld_full_i\ => \gen_normal_area.fifo_node_payld_full_i\,
      m_sc_areset_r => m_sc_areset_r,
      m_sc_payld(10 downto 0) => m_sc_payld(10 downto 0),
      m_sc_recv(0) => m_sc_recv(0),
      m_sc_send(0) => m_sc_send(0),
      s_sc_aclk => s_sc_aclk,
      s_sc_payld(11 downto 0) => s_sc_payld(11 downto 0),
      s_sc_send(0) => s_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized0\ is
  port (
    \gen_normal_area.fifo_node_payld_full_i\ : out STD_LOGIC;
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_aclk : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_handshake : in STD_LOGIC_VECTOR ( 0 to 0 );
    areset_r : in STD_LOGIC;
    \gen_single_rank.empty_r_reg\ : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_areset_r : in STD_LOGIC;
    s_sc_payld : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized0\ : entity is "sc_node_v1_0_10_fifo";
end \design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized0\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized0\ is
begin
\gen_reg_fifo.inst_reg_fifo\: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized0\
     port map (
      areset_r => areset_r,
      \gen_normal_area.fifo_node_payld_full_i\ => \gen_normal_area.fifo_node_payld_full_i\,
      \gen_single_rank.empty_r_reg_0\ => \gen_single_rank.empty_r_reg\,
      m_sc_areset_r => m_sc_areset_r,
      m_sc_payld(1 downto 0) => m_sc_payld(1 downto 0),
      m_sc_recv(0) => m_sc_recv(0),
      m_sc_send(0) => m_sc_send(0),
      s_sc_aclk => s_sc_aclk,
      s_sc_handshake(0) => s_sc_handshake(0),
      s_sc_payld(1 downto 0) => s_sc_payld(1 downto 0),
      s_sc_send(0) => s_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized1\ is
  port (
    \gen_normal_area.fifo_node_payld_full_i\ : out STD_LOGIC;
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 33 downto 0 );
    s_sc_aclk : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    areset_r : in STD_LOGIC;
    \gen_single_rank.empty_r_reg\ : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_areset_r : in STD_LOGIC;
    s_sc_payld : in STD_LOGIC_VECTOR ( 33 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized1\ : entity is "sc_node_v1_0_10_fifo";
end \design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized1\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized1\ is
begin
\gen_reg_fifo.inst_reg_fifo\: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized1\
     port map (
      E(0) => E(0),
      areset_r => areset_r,
      \gen_normal_area.fifo_node_payld_full_i\ => \gen_normal_area.fifo_node_payld_full_i\,
      \gen_single_rank.empty_r_reg_0\ => \gen_single_rank.empty_r_reg\,
      m_sc_areset_r => m_sc_areset_r,
      m_sc_payld(33 downto 0) => m_sc_payld(33 downto 0),
      m_sc_recv(0) => m_sc_recv(0),
      m_sc_send(0) => m_sc_send(0),
      s_sc_aclk => s_sc_aclk,
      s_sc_payld(33 downto 0) => s_sc_payld(33 downto 0),
      s_sc_send(0) => s_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized2\ is
  port (
    \gen_normal_area.fifo_node_payld_full_i\ : out STD_LOGIC;
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 35 downto 0 );
    s_sc_aclk : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall_late : in STD_LOGIC;
    areset_r : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_areset_r : in STD_LOGIC;
    s_sc_payld : in STD_LOGIC_VECTOR ( 36 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized2\ : entity is "sc_node_v1_0_10_fifo";
end \design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized2\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized2\ is
begin
\gen_reg_fifo.inst_reg_fifo\: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_reg_fifo__parameterized2\
     port map (
      E(0) => E(0),
      arb_stall_late => arb_stall_late,
      areset_r => areset_r,
      \gen_normal_area.fifo_node_payld_full_i\ => \gen_normal_area.fifo_node_payld_full_i\,
      m_sc_areset_r => m_sc_areset_r,
      m_sc_payld(35 downto 0) => m_sc_payld(35 downto 0),
      m_sc_recv(0) => m_sc_recv(0),
      m_sc_send(0) => m_sc_send(0),
      s_sc_aclk => s_sc_aclk,
      s_sc_payld(36 downto 0) => s_sc_payld(36 downto 0),
      s_sc_send(0) => s_sc_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_psr_aclk_0 is
  port (
    interconnect_aresetn : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    aresetn : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_psr_aclk_0 : entity is "bd_afc3_psr_aclk_0";
end design_1_axi_smc_0_bd_afc3_psr_aclk_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_psr_aclk_0 is
begin
U0: entity work.design_1_axi_smc_0_proc_sys_reset
     port map (
      aclk => aclk,
      aresetn => aresetn,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_s00mmu_0 is
  port (
    S00_AXI_awready : out STD_LOGIC;
    S00_AXI_wready : out STD_LOGIC;
    S00_AXI_bid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_bvalid : out STD_LOGIC;
    S00_AXI_arready : out STD_LOGIC;
    S00_AXI_rid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    S00_AXI_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_rlast : out STD_LOGIC;
    S00_AXI_rvalid : out STD_LOGIC;
    m_axi_awid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    m_axi_awaddr : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    S_SC_AW_payld : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awvalid : out STD_LOGIC;
    S_SC_W_payld : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_wvalid : out STD_LOGIC;
    m_axi_arid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    m_axi_araddr : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_arlen : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arsize : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_arvalid : out STD_LOGIC;
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    S00_AXI_awid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_awaddr : in STD_LOGIC_VECTOR ( 23 downto 0 );
    S00_AXI_awlen : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_awburst : in STD_LOGIC_VECTOR ( 0 to 0 );
    S00_AXI_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_awvalid : in STD_LOGIC;
    S00_AXI_wlast : in STD_LOGIC;
    S00_AXI_wvalid : in STD_LOGIC;
    S00_AXI_bready : in STD_LOGIC;
    S00_AXI_arid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_araddr : in STD_LOGIC_VECTOR ( 23 downto 0 );
    S00_AXI_arlen : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_arburst : in STD_LOGIC_VECTOR ( 0 to 0 );
    S00_AXI_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_arvalid : in STD_LOGIC;
    S00_AXI_rready : in STD_LOGIC;
    s_axi_awready : in STD_LOGIC;
    s_axi_wready : in STD_LOGIC;
    s_axi_bid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    s_axi_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_bvalid : in STD_LOGIC;
    s_axi_arready : in STD_LOGIC;
    s_axi_rid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    s_axi_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_rlast : in STD_LOGIC;
    s_axi_rvalid : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_s00mmu_0 : entity is "bd_afc3_s00mmu_0";
end design_1_axi_smc_0_bd_afc3_s00mmu_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_s00mmu_0 is
  signal NLW_inst_m_axi_bready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axi_rready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axi_wlast_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axi_araddr_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 8 );
  signal NLW_inst_m_axi_arburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_axi_arcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_arlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 4 );
  signal NLW_inst_m_axi_arlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_arqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_arsize_UNCONNECTED : STD_LOGIC_VECTOR ( 2 to 2 );
  signal NLW_inst_m_axi_aruser_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  signal NLW_inst_m_axi_awaddr_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 8 );
  signal NLW_inst_m_axi_awburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_axi_awcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_awlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_inst_m_axi_awlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_axi_awqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_awuser_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  signal NLW_inst_m_axi_wdata_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_inst_m_axi_wstrb_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_inst_m_axi_wuser_UNCONNECTED : STD_LOGIC_VECTOR ( 1023 downto 0 );
  signal NLW_inst_s_axi_buser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_axi_ruser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "1'b0";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 12;
  attribute C_IS_CASCADED : integer;
  attribute C_IS_CASCADED of inst : label is 0;
  attribute C_MSC_ROUTE_ARRAY : string;
  attribute C_MSC_ROUTE_ARRAY of inst : label is "8'b11011011";
  attribute C_MSC_ROUTE_WIDTH : integer;
  attribute C_MSC_ROUTE_WIDTH of inst : label is 4;
  attribute C_NUM_MSC : integer;
  attribute C_NUM_MSC of inst : label is 2;
  attribute C_NUM_READ_OUTSTANDING : integer;
  attribute C_NUM_READ_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SEG : integer;
  attribute C_NUM_SEG of inst : label is 1;
  attribute C_NUM_WRITE_OUTSTANDING : integer;
  attribute C_NUM_WRITE_OUTSTANDING of inst : label is 8;
  attribute C_RDATA_WIDTH : integer;
  attribute C_RDATA_WIDTH of inst : label is 32;
  attribute C_READ_ACCEPTANCE : integer;
  attribute C_READ_ACCEPTANCE of inst : label is 32;
  attribute C_SEG_BASE_ADDR_ARRAY : string;
  attribute C_SEG_BASE_ADDR_ARRAY of inst : label is "64'b0000000000000000000000000000000001000011110001000000000000000000";
  attribute C_SEG_SECURE_READ_ARRAY : string;
  attribute C_SEG_SECURE_READ_ARRAY of inst : label is "1'b0";
  attribute C_SEG_SECURE_WRITE_ARRAY : string;
  attribute C_SEG_SECURE_WRITE_ARRAY of inst : label is "1'b0";
  attribute C_SEG_SEP_ROUTE_ARRAY : string;
  attribute C_SEG_SEP_ROUTE_ARRAY of inst : label is "64'b0000000000000000000000000000000000000000000000000000000000000001";
  attribute C_SEG_SIZE_ARRAY : integer;
  attribute C_SEG_SIZE_ARRAY of inst : label is 16;
  attribute C_SEG_SUPPORTS_READ_ARRAY : string;
  attribute C_SEG_SUPPORTS_READ_ARRAY of inst : label is "1'b1";
  attribute C_SEG_SUPPORTS_WRITE_ARRAY : string;
  attribute C_SEG_SUPPORTS_WRITE_ARRAY of inst : label is "1'b1";
  attribute C_SINGLE_ISSUING : integer;
  attribute C_SINGLE_ISSUING of inst : label is 1;
  attribute C_SUPPORTS_NARROW : integer;
  attribute C_SUPPORTS_NARROW of inst : label is 0;
  attribute C_SUPPORTS_READ_DECERR : integer;
  attribute C_SUPPORTS_READ_DECERR of inst : label is 1;
  attribute C_SUPPORTS_WRAP : integer;
  attribute C_SUPPORTS_WRAP of inst : label is 0;
  attribute C_SUPPORTS_WRITE_DECERR : integer;
  attribute C_SUPPORTS_WRITE_DECERR of inst : label is 1;
  attribute C_S_ARUSER_WIDTH : integer;
  attribute C_S_ARUSER_WIDTH of inst : label is 0;
  attribute C_S_AWUSER_WIDTH : integer;
  attribute C_S_AWUSER_WIDTH of inst : label is 0;
  attribute C_S_BUSER_WIDTH : integer;
  attribute C_S_BUSER_WIDTH of inst : label is 0;
  attribute C_S_PROTOCOL : integer;
  attribute C_S_PROTOCOL of inst : label is 1;
  attribute C_S_RUSER_WIDTH : integer;
  attribute C_S_RUSER_WIDTH of inst : label is 0;
  attribute C_S_WUSER_WIDTH : integer;
  attribute C_S_WUSER_WIDTH of inst : label is 0;
  attribute C_WDATA_WIDTH : integer;
  attribute C_WDATA_WIDTH of inst : label is 32;
  attribute C_WRITE_ACCEPTANCE : integer;
  attribute C_WRITE_ACCEPTANCE of inst : label is 32;
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of inst : label is "yes";
  attribute P_AXI3 : integer;
  attribute P_AXI3 of inst : label is 1;
  attribute P_AXI4 : integer;
  attribute P_AXI4 of inst : label is 0;
  attribute P_AXILITE : integer;
  attribute P_AXILITE of inst : label is 2;
  attribute P_BYPASS : integer;
  attribute P_BYPASS of inst : label is 0;
  attribute P_DECERR : string;
  attribute P_DECERR of inst : label is "2'b11";
  attribute P_FIXED : string;
  attribute P_FIXED of inst : label is "2'b00";
  attribute P_FULLY_PIPELINED : integer;
  attribute P_FULLY_PIPELINED of inst : label is 2;
  attribute P_INCR : string;
  attribute P_INCR of inst : label is "2'b01";
  attribute P_NUM_MSC_LOG : integer;
  attribute P_NUM_MSC_LOG of inst : label is 1;
  attribute P_NUM_SEG_LOG : integer;
  attribute P_NUM_SEG_LOG of inst : label is 1;
  attribute P_R_DWBYTES : integer;
  attribute P_R_DWBYTES of inst : label is 4;
  attribute P_R_DWSIZE : integer;
  attribute P_R_DWSIZE of inst : label is 2;
  attribute P_R_QUEUE_SIZE : integer;
  attribute P_R_QUEUE_SIZE of inst : label is 4;
  attribute P_WRAP : string;
  attribute P_WRAP of inst : label is "2'b10";
  attribute P_W_DWBYTES : integer;
  attribute P_W_DWBYTES of inst : label is 4;
  attribute P_W_DWSIZE : integer;
  attribute P_W_DWSIZE of inst : label is 2;
  attribute P_W_QUEUE_SIZE : integer;
  attribute P_W_QUEUE_SIZE of inst : label is 4;
  attribute P_ZERO_LATENCY : integer;
  attribute P_ZERO_LATENCY of inst : label is 1;
begin
inst: entity work.design_1_axi_smc_0_sc_mmu_v1_0_8_top
     port map (
      aclk => aclk,
      aclken => '1',
      aresetn => interconnect_aresetn(0),
      m_axi_araddr(31 downto 8) => NLW_inst_m_axi_araddr_UNCONNECTED(31 downto 8),
      m_axi_araddr(7 downto 0) => m_axi_araddr(7 downto 0),
      m_axi_arburst(1 downto 0) => NLW_inst_m_axi_arburst_UNCONNECTED(1 downto 0),
      m_axi_arcache(3 downto 0) => NLW_inst_m_axi_arcache_UNCONNECTED(3 downto 0),
      m_axi_arid(11 downto 0) => m_axi_arid(11 downto 0),
      m_axi_arlen(7 downto 4) => NLW_inst_m_axi_arlen_UNCONNECTED(7 downto 4),
      m_axi_arlen(3 downto 0) => m_axi_arlen(3 downto 0),
      m_axi_arlock(0) => NLW_inst_m_axi_arlock_UNCONNECTED(0),
      m_axi_arprot(2 downto 0) => m_axi_arprot(2 downto 0),
      m_axi_arqos(3 downto 0) => NLW_inst_m_axi_arqos_UNCONNECTED(3 downto 0),
      m_axi_arready => s_axi_arready,
      m_axi_arsize(2) => NLW_inst_m_axi_arsize_UNCONNECTED(2),
      m_axi_arsize(1 downto 0) => m_axi_arsize(1 downto 0),
      m_axi_aruser(1023 downto 0) => NLW_inst_m_axi_aruser_UNCONNECTED(1023 downto 0),
      m_axi_arvalid => m_axi_arvalid,
      m_axi_awaddr(31 downto 8) => NLW_inst_m_axi_awaddr_UNCONNECTED(31 downto 8),
      m_axi_awaddr(7 downto 0) => m_axi_awaddr(7 downto 0),
      m_axi_awburst(1 downto 0) => NLW_inst_m_axi_awburst_UNCONNECTED(1 downto 0),
      m_axi_awcache(3 downto 0) => NLW_inst_m_axi_awcache_UNCONNECTED(3 downto 0),
      m_axi_awid(11 downto 0) => m_axi_awid(11 downto 0),
      m_axi_awlen(7 downto 0) => NLW_inst_m_axi_awlen_UNCONNECTED(7 downto 0),
      m_axi_awlock(0) => NLW_inst_m_axi_awlock_UNCONNECTED(0),
      m_axi_awprot(2 downto 0) => S_SC_AW_payld(2 downto 0),
      m_axi_awqos(3 downto 0) => NLW_inst_m_axi_awqos_UNCONNECTED(3 downto 0),
      m_axi_awready => s_axi_awready,
      m_axi_awsize(2 downto 0) => m_axi_awsize(2 downto 0),
      m_axi_awuser(1023 downto 0) => NLW_inst_m_axi_awuser_UNCONNECTED(1023 downto 0),
      m_axi_awvalid => m_axi_awvalid,
      m_axi_bid(11 downto 0) => s_axi_bid(11 downto 0),
      m_axi_bready => NLW_inst_m_axi_bready_UNCONNECTED,
      m_axi_bresp(1 downto 0) => s_axi_bresp(1 downto 0),
      m_axi_buser(1023 downto
      m_axi_bvalid => s_axi_bvalid,
      m_axi_rdata(31 downto 0) => s_axi_rdata(31 downto 0),
      m_axi_rid(11 downto 0) => s_axi_rid(11 downto 0),
      m_axi_rlast => s_axi_rlast,
      m_axi_rready => NLW_inst_m_axi_rready_UNCONNECTED,
      m_axi_rresp(1 downto 0) => s_axi_rresp(1 downto 0),
      m_axi_ruser(1023 downto
      m_axi_rvalid => s_axi_rvalid,
      m_axi_wdata(31 downto 0) => NLW_inst_m_axi_wdata_UNCONNECTED(31 downto 0),
      m_axi_wlast => NLW_inst_m_axi_wlast_UNCONNECTED,
      m_axi_wready => s_axi_wready,
      m_axi_wstrb(3 downto 0) => NLW_inst_m_axi_wstrb_UNCONNECTED(3 downto 0),
      m_axi_wuser(1023 downto 3) => NLW_inst_m_axi_wuser_UNCONNECTED(1023 downto 3),
      m_axi_wuser(2) => S_SC_W_payld(0),
      m_axi_wuser(1 downto 0) => NLW_inst_m_axi_wuser_UNCONNECTED(1 downto 0),
      m_axi_wvalid => m_axi_wvalid,
      s_axi_araddr(31 downto 16) => S00_AXI_araddr(23 downto 8),
      s_axi_araddr(15 downto 8) => B"00000000",
      s_axi_araddr(7 downto 0) => S00_AXI_araddr(7 downto 0),
      s_axi_arburst(1) => '0',
      s_axi_arburst(0) => S00_AXI_arburst(0),
      s_axi_arcache(3 downto 0) => B"0000",
      s_axi_arid(11 downto 0) => S00_AXI_arid(11 downto 0),
      s_axi_arlen(3 downto 0) => S00_AXI_arlen(3 downto 0),
      s_axi_arlock(1 downto 0) => B"00",
      s_axi_arprot(2 downto 0) => S00_AXI_arprot(2 downto 0),
      s_axi_arqos(3 downto 0) => B"0000",
      s_axi_arready => S00_AXI_arready,
      s_axi_arsize(2 downto 0) => S00_AXI_arsize(2 downto 0),
      s_axi_aruser(0) => '0',
      s_axi_arvalid => S00_AXI_arvalid,
      s_axi_awaddr(31 downto 16) => S00_AXI_awaddr(23 downto 8),
      s_axi_awaddr(15 downto 8) => B"00000000",
      s_axi_awaddr(7 downto 0) => S00_AXI_awaddr(7 downto 0),
      s_axi_awburst(1) => '0',
      s_axi_awburst(0) => S00_AXI_awburst(0),
      s_axi_awcache(3 downto 0) => B"0000",
      s_axi_awid(11 downto 0) => S00_AXI_awid(11 downto 0),
      s_axi_awlen(3 downto 0) => S00_AXI_awlen(3 downto 0),
      s_axi_awlock(1 downto 0) => B"00",
      s_axi_awprot(2 downto 0) => S00_AXI_awprot(2 downto 0),
      s_axi_awqos(3 downto 0) => B"0000",
      s_axi_awready => S00_AXI_awready,
      s_axi_awsize(2 downto 0) => S00_AXI_awsize(2 downto 0),
      s_axi_awuser(0) => '0',
      s_axi_awvalid => S00_AXI_awvalid,
      s_axi_bid(11 downto 0) => S00_AXI_bid(11 downto 0),
      s_axi_bready => S00_AXI_bready,
      s_axi_bresp(1 downto 0) => S00_AXI_bresp(1 downto 0),
      s_axi_buser(0) => NLW_inst_s_axi_buser_UNCONNECTED(0),
      s_axi_bvalid => S00_AXI_bvalid,
      s_axi_rdata(31 downto 0) => S00_AXI_rdata(31 downto 0),
      s_axi_rid(11 downto 0) => S00_AXI_rid(11 downto 0),
      s_axi_rlast => S00_AXI_rlast,
      s_axi_rready => S00_AXI_rready,
      s_axi_rresp(1 downto 0) => S00_AXI_rresp(1 downto 0),
      s_axi_ruser(0) => NLW_inst_s_axi_ruser_UNCONNECTED(0),
      s_axi_rvalid => S00_AXI_rvalid,
      s_axi_wdata(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_wid(11 downto 0) => B"000000000000",
      s_axi_wlast => S00_AXI_wlast,
      s_axi_wready => S00_AXI_wready,
      s_axi_wstrb(3 downto 0) => B"0000",
      s_axi_wuser(0) => '0',
      s_axi_wvalid => S00_AXI_wvalid
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_m01_exit_pipeline_imp_1XMPFJB is
  port (
    M_SC_AW_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_W_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AR_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_awvalid : out STD_LOGIC;
    M01_AXI_wvalid : out STD_LOGIC;
    M01_AXI_arvalid : out STD_LOGIC;
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AW_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_W_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_bready : in STD_LOGIC;
    M_SC_AR_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_rready : in STD_LOGIC;
    M01_AXI_awready : in STD_LOGIC;
    M01_AXI_wready : in STD_LOGIC;
    M01_AXI_bvalid : in STD_LOGIC;
    M01_AXI_arready : in STD_LOGIC;
    M01_AXI_rvalid : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_m01_exit_pipeline_imp_1XMPFJB : entity is "m01_exit_pipeline_imp_1XMPFJB";
end design_1_axi_smc_0_m01_exit_pipeline_imp_1XMPFJB;

architecture STRUCTURE of design_1_axi_smc_0_m01_exit_pipeline_imp_1XMPFJB is
  attribute x_core_info : string;
  attribute x_core_info of m01_exit : label is "sc_exit_v1_0_9_top,Vivado 2019.2";
begin
m01_exit: entity work.design_1_axi_smc_0_bd_afc3_m01e_0
     port map (
      M01_AXI_arready => M01_AXI_arready,
      M01_AXI_arvalid => M01_AXI_arvalid,
      M01_AXI_awready => M01_AXI_awready,
      M01_AXI_awvalid => M01_AXI_awvalid,
      M01_AXI_bready => M01_AXI_bready,
      M01_AXI_bvalid => M01_AXI_bvalid,
      M01_AXI_rready => M01_AXI_rready,
      M01_AXI_rvalid => M01_AXI_rvalid,
      M01_AXI_wready => M01_AXI_wready,
      M01_AXI_wvalid => M01_AXI_wvalid,
      M_SC_AR_recv(0) => M_SC_AR_recv(0),
      M_SC_AR_send(0) => M_SC_AR_send(0),
      M_SC_AW_recv(0) => M_SC_AW_recv(0),
      M_SC_AW_send(0) => M_SC_AW_send(0),
      M_SC_W_recv(0) => M_SC_W_recv(0),
      M_SC_W_send(0) => M_SC_W_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_m01_nodes_imp_94N5OD is
  port (
    M_SC_AR_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AW_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_B_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_B_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_R_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_R_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_W_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_arvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_awvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_bvalid : in STD_LOGIC;
    M01_AXI_bready : in STD_LOGIC;
    M01_AXI_rvalid : in STD_LOGIC;
    M01_AXI_rready : in STD_LOGIC;
    M01_AXI_wvalid : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_m01_nodes_imp_94N5OD : entity is "m01_nodes_imp_94N5OD";
end design_1_axi_smc_0_m01_nodes_imp_94N5OD;

architecture STRUCTURE of design_1_axi_smc_0_m01_nodes_imp_94N5OD is
  attribute x_core_info : string;
  attribute x_core_info of m01_ar_node : label is "sc_node_v1_0_10_top,Vivado 2019.2";
  attribute x_core_info of m01_aw_node : label is "sc_node_v1_0_10_top,Vivado 2019.2";
  attribute x_core_info of m01_b_node : label is "sc_node_v1_0_10_top,Vivado 2019.2";
  attribute x_core_info of m01_r_node : label is "sc_node_v1_0_10_top,Vivado 2019.2";
  attribute x_core_info of m01_w_node : label is "sc_node_v1_0_10_top,Vivado 2019.2";
begin
m01_ar_node: entity work.design_1_axi_smc_0_bd_afc3_m01arn_0
     port map (
      M01_AXI_arvalid(0) => M01_AXI_arvalid(0),
      M_SC_AR_send(0) => M_SC_AR_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
m01_aw_node: entity work.design_1_axi_smc_0_bd_afc3_m01awn_0
     port map (
      M01_AXI_awvalid(0) => M01_AXI_awvalid(0),
      M_SC_AW_send(0) => M_SC_AW_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
m01_b_node: entity work.design_1_axi_smc_0_bd_afc3_m01bn_0
     port map (
      M01_AXI_bready => M01_AXI_bready,
      M01_AXI_bvalid => M01_AXI_bvalid,
      M_SC_B_req(0) => M_SC_B_req(0),
      M_SC_B_send(0) => M_SC_B_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
m01_r_node: entity work.design_1_axi_smc_0_bd_afc3_m01rn_0
     port map (
      M01_AXI_rready => M01_AXI_rready,
      M01_AXI_rvalid => M01_AXI_rvalid,
      M_SC_R_req(0) => M_SC_R_req(0),
      M_SC_R_send(0) => M_SC_R_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
m01_w_node: entity work.design_1_axi_smc_0_bd_afc3_m01wn_0
     port map (
      M01_AXI_wvalid(0) => M01_AXI_wvalid(0),
      M_SC_W_send(0) => M_SC_W_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_s00_nodes_imp_Y7M43I is
  port (
    M_SC_AR_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AW_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_B_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_R_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_W_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AR_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AW_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    \s_axi_bresp_i_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \FSM_sequential_r_state_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_W_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_s00_nodes_imp_Y7M43I : entity is "s00_nodes_imp_Y7M43I";
end design_1_axi_smc_0_s00_nodes_imp_Y7M43I;

architecture STRUCTURE of design_1_axi_smc_0_s00_nodes_imp_Y7M43I is
  attribute x_core_info : string;
  attribute x_core_info of s00_ar_node : label is "sc_node_v1_0_10_top,Vivado 2019.2";
  attribute x_core_info of s00_aw_node : label is "sc_node_v1_0_10_top,Vivado 2019.2";
  attribute x_core_info of s00_b_node : label is "sc_node_v1_0_10_top,Vivado 2019.2";
  attribute x_core_info of s00_r_node : label is "sc_node_v1_0_10_top,Vivado 2019.2";
  attribute x_core_info of s00_w_node : label is "sc_node_v1_0_10_top,Vivado 2019.2";
begin
s00_ar_node: entity work.design_1_axi_smc_0_bd_afc3_sarn_0
     port map (
      M_SC_AR_send(0) => M_SC_AR_send(0),
      S_SC_AR_send(0) => S_SC_AR_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
s00_aw_node: entity work.design_1_axi_smc_0_bd_afc3_sawn_0
     port map (
      M_SC_AW_send(0) => M_SC_AW_send(0),
      S_SC_AW_send(0) => S_SC_AW_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
s00_b_node: entity work.design_1_axi_smc_0_bd_afc3_sbn_0
     port map (
      M_SC_B_send(0) => M_SC_B_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0),
      \s_axi_bresp_i_reg[1]\(0) => \s_axi_bresp_i_reg[1]\(0)
    );
s00_r_node: entity work.design_1_axi_smc_0_bd_afc3_srn_0
     port map (
      \FSM_sequential_r_state_reg[0]\(0) => \FSM_sequential_r_state_reg[0]\(0),
      M_SC_R_send(0) => M_SC_R_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
s00_w_node: entity work.design_1_axi_smc_0_bd_afc3_swn_0
     port map (
      M_SC_W_send(0) => M_SC_W_send(0),
      S_SC_W_send(0) => S_SC_W_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_rst_ps7_0_100M_0 is
  port (
    slowest_sync_clk : in STD_LOGIC;
    ext_reset_in : in STD_LOGIC;
    aux_reset_in : in STD_LOGIC;
    mb_debug_sys_rst : in STD_LOGIC;
    dcm_locked : in STD_LOGIC;
    mb_reset : out STD_LOGIC;
    bus_struct_reset : out STD_LOGIC_VECTOR ( 0 to 0 );
    peripheral_reset : out STD_LOGIC_VECTOR ( 0 to 0 );
    interconnect_aresetn : out STD_LOGIC_VECTOR ( 0 to 0 );
    peripheral_aresetn : out STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of design_1_rst_ps7_0_100M_0 : entity is "design_1_rst_ps7_0_100M_0,proc_sys_reset,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of design_1_rst_ps7_0_100M_0 : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of design_1_rst_ps7_0_100M_0 : entity is "proc_sys_reset,Vivado 2019.2";
end design_1_rst_ps7_0_100M_0;

architecture STRUCTURE of design_1_rst_ps7_0_100M_0 is
  attribute C_AUX_RESET_HIGH : string;
  attribute C_AUX_RESET_HIGH of U0 : label is "1'b0";
  attribute C_AUX_RST_WIDTH : integer;
  attribute C_AUX_RST_WIDTH of U0 : label is 4;
  attribute C_EXT_RESET_HIGH : string;
  attribute C_EXT_RESET_HIGH of U0 : label is "1'b0";
  attribute C_EXT_RST_WIDTH : integer;
  attribute C_EXT_RST_WIDTH of U0 : label is 4;
  attribute C_FAMILY : string;
  attribute C_FAMILY of U0 : label is "zynq";
  attribute C_NUM_BUS_RST : integer;
  attribute C_NUM_BUS_RST of U0 : label is 1;
  attribute C_NUM_INTERCONNECT_ARESETN : integer;
  attribute C_NUM_INTERCONNECT_ARESETN of U0 : label is 1;
  attribute C_NUM_PERP_ARESETN : integer;
  attribute C_NUM_PERP_ARESETN of U0 : label is 1;
  attribute C_NUM_PERP_RST : integer;
  attribute C_NUM_PERP_RST of U0 : label is 1;
  attribute x_interface_info : string;
  attribute x_interface_info of aux_reset_in : signal is "xilinx.com:signal:reset:1.0 aux_reset RST";
  attribute x_interface_parameter : string;
  attribute x_interface_parameter of aux_reset_in : signal is "XIL_INTERFACENAME aux_reset, POLARITY ACTIVE_LOW, INSERT_VIP 0";
  attribute x_interface_info of ext_reset_in : signal is "xilinx.com:signal:reset:1.0 ext_reset RST";
  attribute x_interface_parameter of ext_reset_in : signal is "XIL_INTERFACENAME ext_reset, BOARD.ASSOCIATED_PARAM RESET_BOARD_INTERFACE, POLARITY ACTIVE_LOW, INSERT_VIP 0";
  attribute x_interface_info of mb_debug_sys_rst : signal is "xilinx.com:signal:reset:1.0 dbg_reset RST";
  attribute x_interface_parameter of mb_debug_sys_rst : signal is "XIL_INTERFACENAME dbg_reset, POLARITY ACTIVE_HIGH, INSERT_VIP 0";
  attribute x_interface_info of mb_reset : signal is "xilinx.com:signal:reset:1.0 mb_rst RST";
  attribute x_interface_parameter of mb_reset : signal is "XIL_INTERFACENAME mb_rst, POLARITY ACTIVE_HIGH, TYPE PROCESSOR, INSERT_VIP 0";
  attribute x_interface_info of slowest_sync_clk : signal is "xilinx.com:signal:clock:1.0 clock CLK";
  attribute x_interface_parameter of slowest_sync_clk : signal is "XIL_INTERFACENAME clock, ASSOCIATED_RESET mb_reset:bus_struct_reset:interconnect_aresetn:peripheral_aresetn:peripheral_reset, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, INSERT_VIP 0";
  attribute x_interface_info of bus_struct_reset : signal is "xilinx.com:signal:reset:1.0 bus_struct_reset RST";
  attribute x_interface_parameter of bus_struct_reset : signal is "XIL_INTERFACENAME bus_struct_reset, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT, INSERT_VIP 0";
  attribute x_interface_info of interconnect_aresetn : signal is "xilinx.com:signal:reset:1.0 interconnect_low_rst RST";
  attribute x_interface_parameter of interconnect_aresetn : signal is "XIL_INTERFACENAME interconnect_low_rst, POLARITY ACTIVE_LOW, TYPE INTERCONNECT, INSERT_VIP 0";
  attribute x_interface_info of peripheral_aresetn : signal is "xilinx.com:signal:reset:1.0 peripheral_low_rst RST";
  attribute x_interface_parameter of peripheral_aresetn : signal is "XIL_INTERFACENAME peripheral_low_rst, POLARITY ACTIVE_LOW, TYPE PERIPHERAL, INSERT_VIP 0";
  attribute x_interface_info of peripheral_reset : signal is "xilinx.com:signal:reset:1.0 peripheral_high_rst RST";
  attribute x_interface_parameter of peripheral_reset : signal is "XIL_INTERFACENAME peripheral_high_rst, POLARITY ACTIVE_HIGH, TYPE PERIPHERAL, INSERT_VIP 0";
begin
U0: entity work.design_1_rst_ps7_0_100M_0_proc_sys_reset
     port map (
      aux_reset_in => aux_reset_in,
      bus_struct_reset(0) => bus_struct_reset(0),
      dcm_locked => dcm_locked,
      ext_reset_in => ext_reset_in,
      interconnect_aresetn(0) => interconnect_aresetn(0),
      mb_debug_sys_rst => mb_debug_sys_rst,
      mb_reset => mb_reset,
      peripheral_aresetn(0) => peripheral_aresetn(0),
      peripheral_reset(0) => peripheral_reset(0),
      slowest_sync_clk => slowest_sync_clk
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_top_nqueens_0_0 is
  port (
    clk : in STD_LOGIC;
    nRst : in STD_LOGIC;
    flag : out STD_LOGIC;
    done : out STD_LOGIC;
    counter : out STD_LOGIC_VECTOR ( 10 downto 0 )
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of design_1_top_nqueens_0_0 : entity is "design_1_top_nqueens_0_0,top_nqueens,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of design_1_top_nqueens_0_0 : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of design_1_top_nqueens_0_0 : entity is "top_nqueens,Vivado 2019.2";
  attribute ip_definition_source : string;
  attribute ip_definition_source of design_1_top_nqueens_0_0 : entity is "module_ref";
end design_1_top_nqueens_0_0;

architecture STRUCTURE of design_1_top_nqueens_0_0 is
  signal \<const0>\ : STD_LOGIC;
  signal \^counter\ : STD_LOGIC_VECTOR ( 10 downto 1 );
  attribute x_interface_info : string;
  attribute x_interface_info of clk : signal is "xilinx.com:signal:clock:1.0 clk CLK";
  attribute x_interface_parameter : string;
  attribute x_interface_parameter of clk : signal is "XIL_INTERFACENAME clk, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, INSERT_VIP 0";
begin
  counter(10 downto 1) <= \^counter\(10 downto 1);
  counter(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
U0: entity work.design_1_top_nqueens_0_0_top_nqueens
     port map (
      clk => clk,
      counter(9 downto 0) => \^counter\(10 downto 1),
      done => done,
      flag => flag,
      nRst => nRst
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized10\ is
  port (
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall : out STD_LOGIC;
    m_sc_payld : out STD_LOGIC_VECTOR ( 10 downto 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    m_sc_areset_r_reg_0 : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall_late : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 10 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized10\ : entity is "sc_node_v1_0_10_mi_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized10\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized10\ is
  signal areset_r : STD_LOGIC;
  signal \gen_normal_area.fifo_node_payld_full_i\ : STD_LOGIC;
  signal m_sc_areset_r : STD_LOGIC;
begin
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\gen_normal_area.gen_fi_regulator.inst_fi_regulator\: entity work.design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_7
     port map (
      arb_stall => arb_stall,
      \gen_normal_area.fifo_node_payld_full_i\ => \gen_normal_area.fifo_node_payld_full_i\,
      s_sc_aclk => s_sc_aclk
    );
\gen_normal_area.inst_fifo_node_payld\: entity work.design_1_axi_smc_0_sc_node_v1_0_10_fifo
     port map (
      E(0) => E(0),
      arb_stall_late => arb_stall_late,
      areset_r => areset_r,
      \gen_normal_area.fifo_node_payld_full_i\ => \gen_normal_area.fifo_node_payld_full_i\,
      m_sc_areset_r => m_sc_areset_r,
      m_sc_payld(10 downto 0) => m_sc_payld(10 downto 0),
      m_sc_recv(0) => m_sc_recv(0),
      m_sc_send(0) => m_sc_send(0),
      s_sc_aclk => s_sc_aclk,
      s_sc_payld(10 downto 0) => s_sc_payld(10 downto 0),
      s_sc_send(0) => s_sc_send(0)
    );
m_sc_areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => m_sc_areset_r_reg_0,
      Q => m_sc_areset_r,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized11\ is
  port (
    allow_transfer_r_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    m_sc_areset_r_reg_0 : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_handshake : in STD_LOGIC_VECTOR ( 0 to 0 );
    \gen_single_rank.empty_r_reg\ : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized11\ : entity is "sc_node_v1_0_10_mi_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized11\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized11\ is
  signal areset_r : STD_LOGIC;
  signal \gen_normal_area.fifo_node_payld_full_i\ : STD_LOGIC;
  signal m_sc_areset_r : STD_LOGIC;
begin
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\gen_normal_area.gen_fi_regulator.inst_fi_regulator\: entity work.design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_4
     port map (
      allow_transfer_r_reg_0(0) => allow_transfer_r_reg(0),
      \gen_normal_area.fifo_node_payld_full_i\ => \gen_normal_area.fifo_node_payld_full_i\,
      s_sc_aclk => s_sc_aclk
    );
\gen_normal_area.inst_fifo_node_payld\: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized0\
     port map (
      areset_r => areset_r,
      \gen_normal_area.fifo_node_payld_full_i\ => \gen_normal_area.fifo_node_payld_full_i\,
      \gen_single_rank.empty_r_reg\ => \gen_single_rank.empty_r_reg\,
      m_sc_areset_r => m_sc_areset_r,
      m_sc_payld(1 downto 0) => m_sc_payld(1 downto 0),
      m_sc_recv(0) => m_sc_recv(0),
      m_sc_send(0) => m_sc_send(0),
      s_sc_aclk => s_sc_aclk,
      s_sc_handshake(0) => s_sc_handshake(0),
      s_sc_payld(1 downto 0) => s_sc_payld(1 downto 0),
      s_sc_send(0) => s_sc_send(0)
    );
m_sc_areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => m_sc_areset_r_reg_0,
      Q => m_sc_areset_r,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized12\ is
  port (
    allow_transfer_r_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 33 downto 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    m_sc_areset_r_reg_0 : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \gen_single_rank.empty_r_reg\ : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 33 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized12\ : entity is "sc_node_v1_0_10_mi_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized12\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized12\ is
  signal areset_r : STD_LOGIC;
  signal \gen_normal_area.fifo_node_payld_full_i\ : STD_LOGIC;
  signal m_sc_areset_r : STD_LOGIC;
begin
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\gen_normal_area.gen_fi_regulator.inst_fi_regulator\: entity work.design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_0
     port map (
      allow_transfer_r_reg_0(0) => allow_transfer_r_reg(0),
      \gen_normal_area.fifo_node_payld_full_i\ => \gen_normal_area.fifo_node_payld_full_i\,
      s_sc_aclk => s_sc_aclk
    );
\gen_normal_area.inst_fifo_node_payld\: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized1\
     port map (
      E(0) => E(0),
      areset_r => areset_r,
      \gen_normal_area.fifo_node_payld_full_i\ => \gen_normal_area.fifo_node_payld_full_i\,
      \gen_single_rank.empty_r_reg\ => \gen_single_rank.empty_r_reg\,
      m_sc_areset_r => m_sc_areset_r,
      m_sc_payld(33 downto 0) => m_sc_payld(33 downto 0),
      m_sc_recv(0) => m_sc_recv(0),
      m_sc_send(0) => m_sc_send(0),
      s_sc_aclk => s_sc_aclk,
      s_sc_payld(33 downto 0) => s_sc_payld(33 downto 0),
      s_sc_send(0) => s_sc_send(0)
    );
m_sc_areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => m_sc_areset_r_reg_0,
      Q => m_sc_areset_r,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized13\ is
  port (
    arb_stall : out STD_LOGIC;
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 35 downto 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    m_sc_areset_r_reg_0 : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall_late : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 36 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized13\ : entity is "sc_node_v1_0_10_mi_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized13\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized13\ is
  signal areset_r : STD_LOGIC;
  signal \gen_normal_area.fifo_node_payld_full_i\ : STD_LOGIC;
  signal m_sc_areset_r : STD_LOGIC;
begin
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\gen_normal_area.gen_fi_regulator.inst_fi_regulator\: entity work.design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator
     port map (
      arb_stall => arb_stall,
      \gen_normal_area.fifo_node_payld_full_i\ => \gen_normal_area.fifo_node_payld_full_i\,
      s_sc_aclk => s_sc_aclk
    );
\gen_normal_area.inst_fifo_node_payld\: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_fifo__parameterized2\
     port map (
      E(0) => E(0),
      arb_stall_late => arb_stall_late,
      areset_r => areset_r,
      \gen_normal_area.fifo_node_payld_full_i\ => \gen_normal_area.fifo_node_payld_full_i\,
      m_sc_areset_r => m_sc_areset_r,
      m_sc_payld(35 downto 0) => m_sc_payld(35 downto 0),
      m_sc_recv(0) => m_sc_recv(0),
      m_sc_send(0) => m_sc_send(0),
      s_sc_aclk => s_sc_aclk,
      s_sc_payld(36 downto 0) => s_sc_payld(36 downto 0),
      s_sc_send(0) => s_sc_send(0)
    );
m_sc_areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => m_sc_areset_r_reg_0,
      Q => m_sc_areset_r,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized9\ is
  port (
    arb_stall : out STD_LOGIC;
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 10 downto 0 );
    \out\ : in STD_LOGIC;
    s_sc_aclk : in STD_LOGIC;
    m_sc_areset_r_reg_0 : in STD_LOGIC;
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    arb_stall_late : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 11 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized9\ : entity is "sc_node_v1_0_10_mi_handler";
end \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized9\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized9\ is
  signal areset_r : STD_LOGIC;
  signal \gen_normal_area.fifo_node_payld_full_i\ : STD_LOGIC;
  signal m_sc_areset_r : STD_LOGIC;
begin
areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => \out\,
      Q => areset_r,
      R => '0'
    );
\gen_normal_area.gen_fi_regulator.inst_fi_regulator\: entity work.design_1_axi_smc_0_sc_node_v1_0_10_fi_regulator_10
     port map (
      arb_stall => arb_stall,
      \gen_normal_area.fifo_node_payld_full_i\ => \gen_normal_area.fifo_node_payld_full_i\,
      s_sc_aclk => s_sc_aclk
    );
\gen_normal_area.inst_fifo_node_payld\: entity work.design_1_axi_smc_0_sc_node_v1_0_10_fifo_11
     port map (
      E(0) => E(0),
      arb_stall_late => arb_stall_late,
      areset_r => areset_r,
      \gen_normal_area.fifo_node_payld_full_i\ => \gen_normal_area.fifo_node_payld_full_i\,
      m_sc_areset_r => m_sc_areset_r,
      m_sc_payld(10 downto 0) => m_sc_payld(10 downto 0),
      m_sc_recv(0) => m_sc_recv(0),
      m_sc_send(0) => m_sc_send(0),
      s_sc_aclk => s_sc_aclk,
      s_sc_payld(11 downto 0) => s_sc_payld(11 downto 0),
      s_sc_send(0) => s_sc_send(0)
    );
m_sc_areset_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => m_sc_areset_r_reg_0,
      Q => m_sc_areset_r,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_clk_map_imp_5Y9LOC is
  port (
    interconnect_aresetn : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk : in STD_LOGIC;
    aresetn : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_clk_map_imp_5Y9LOC : entity is "clk_map_imp_5Y9LOC";
end design_1_axi_smc_0_clk_map_imp_5Y9LOC;

architecture STRUCTURE of design_1_axi_smc_0_clk_map_imp_5Y9LOC is
begin
psr_aclk: entity work.design_1_axi_smc_0_bd_afc3_psr_aclk_0
     port map (
      aclk => aclk,
      aresetn => aresetn,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_s00_entry_pipeline_imp_USCCV8 is
  port (
    S00_AXI_awready : out STD_LOGIC;
    S00_AXI_wready : out STD_LOGIC;
    S00_AXI_bid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_bvalid : out STD_LOGIC;
    S00_AXI_arready : out STD_LOGIC;
    S00_AXI_rid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    S00_AXI_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_rlast : out STD_LOGIC;
    S00_AXI_rvalid : out STD_LOGIC;
    S_SC_AW_payld : out STD_LOGIC_VECTOR ( 10 downto 0 );
    S_SC_W_payld : out STD_LOGIC_VECTOR ( 36 downto 0 );
    m_axi_awvalid : out STD_LOGIC;
    m_axi_wvalid : out STD_LOGIC;
    m_axi_bready : out STD_LOGIC;
    S_SC_AR_payld : out STD_LOGIC_VECTOR ( 11 downto 0 );
    m_axi_arvalid : out STD_LOGIC;
    m_axi_rready : out STD_LOGIC;
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    S00_AXI_awid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_awaddr : in STD_LOGIC_VECTOR ( 23 downto 0 );
    S00_AXI_awlen : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_awburst : in STD_LOGIC_VECTOR ( 0 to 0 );
    S00_AXI_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_awvalid : in STD_LOGIC;
    S00_AXI_wlast : in STD_LOGIC;
    S00_AXI_wvalid : in STD_LOGIC;
    S00_AXI_bready : in STD_LOGIC;
    S00_AXI_arid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_araddr : in STD_LOGIC_VECTOR ( 23 downto 0 );
    S00_AXI_arlen : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_arburst : in STD_LOGIC_VECTOR ( 0 to 0 );
    S00_AXI_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_arvalid : in STD_LOGIC;
    S00_AXI_rready : in STD_LOGIC;
    S00_AXI_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S00_AXI_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_SC_AW_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_W_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_B_payld : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_SC_B_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AR_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_R_payld : in STD_LOGIC_VECTOR ( 33 downto 0 );
    M_SC_R_send : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_s00_entry_pipeline_imp_USCCV8 : entity is "s00_entry_pipeline_imp_USCCV8";
end design_1_axi_smc_0_s00_entry_pipeline_imp_USCCV8;

architecture STRUCTURE of design_1_axi_smc_0_s00_entry_pipeline_imp_USCCV8 is
  signal s00_mmu_M_AXI_ARADDR : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal s00_mmu_M_AXI_ARID : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal s00_mmu_M_AXI_ARLEN : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal s00_mmu_M_AXI_ARPROT : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal s00_mmu_M_AXI_ARREADY : STD_LOGIC;
  signal s00_mmu_M_AXI_ARSIZE : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal s00_mmu_M_AXI_ARVALID : STD_LOGIC;
  signal s00_mmu_M_AXI_AWADDR : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal s00_mmu_M_AXI_AWID : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal s00_mmu_M_AXI_AWREADY : STD_LOGIC;
  signal s00_mmu_M_AXI_AWSIZE : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal s00_mmu_M_AXI_AWVALID : STD_LOGIC;
  signal s00_mmu_M_AXI_BID : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal s00_mmu_M_AXI_RID : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal s00_mmu_M_AXI_WVALID : STD_LOGIC;
  signal s00_transaction_regulator_M_AXI_ARREADY : STD_LOGIC;
  signal s00_transaction_regulator_M_AXI_ARVALID : STD_LOGIC;
  signal s00_transaction_regulator_M_AXI_AWREADY : STD_LOGIC;
  signal s00_transaction_regulator_M_AXI_AWVALID : STD_LOGIC;
  signal s00_transaction_regulator_M_AXI_BRESP : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal s00_transaction_regulator_M_AXI_BVALID : STD_LOGIC;
  signal s00_transaction_regulator_M_AXI_RDATA : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal s00_transaction_regulator_M_AXI_RLAST : STD_LOGIC;
  signal s00_transaction_regulator_M_AXI_RRESP : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal s00_transaction_regulator_M_AXI_RVALID : STD_LOGIC;
  signal s00_transaction_regulator_M_AXI_WREADY : STD_LOGIC;
  attribute x_core_info : string;
  attribute x_core_info of s00_mmu : label is "sc_mmu_v1_0_8_top,Vivado 2019.2";
  attribute x_core_info of s00_si_converter : label is "sc_si_converter_v1_0_9_top,Vivado 2019.2";
  attribute x_core_info of s00_transaction_regulator : label is "sc_transaction_regulator_v1_0_8_top,Vivado 2019.2";
begin
s00_mmu: entity work.design_1_axi_smc_0_bd_afc3_s00mmu_0
     port map (
      S00_AXI_araddr(23 downto 0) => S00_AXI_araddr(23 downto 0),
      S00_AXI_arburst(0) => S00_AXI_arburst(0),
      S00_AXI_arid(11 downto 0) => S00_AXI_arid(11 downto 0),
      S00_AXI_arlen(3 downto 0) => S00_AXI_arlen(3 downto 0),
      S00_AXI_arprot(2 downto 0) => S00_AXI_arprot(2 downto 0),
      S00_AXI_arready => S00_AXI_arready,
      S00_AXI_arsize(2 downto 0) => S00_AXI_arsize(2 downto 0),
      S00_AXI_arvalid => S00_AXI_arvalid,
      S00_AXI_awaddr(23 downto 0) => S00_AXI_awaddr(23 downto 0),
      S00_AXI_awburst(0) => S00_AXI_awburst(0),
      S00_AXI_awid(11 downto 0) => S00_AXI_awid(11 downto 0),
      S00_AXI_awlen(3 downto 0) => S00_AXI_awlen(3 downto 0),
      S00_AXI_awprot(2 downto 0) => S00_AXI_awprot(2 downto 0),
      S00_AXI_awready => S00_AXI_awready,
      S00_AXI_awsize(2 downto 0) => S00_AXI_awsize(2 downto 0),
      S00_AXI_awvalid => S00_AXI_awvalid,
      S00_AXI_bid(11 downto 0) => S00_AXI_bid(11 downto 0),
      S00_AXI_bready => S00_AXI_bready,
      S00_AXI_bresp(1 downto 0) => S00_AXI_bresp(1 downto 0),
      S00_AXI_bvalid => S00_AXI_bvalid,
      S00_AXI_rdata(31 downto 0) => S00_AXI_rdata(31 downto 0),
      S00_AXI_rid(11 downto 0) => S00_AXI_rid(11 downto 0),
      S00_AXI_rlast => S00_AXI_rlast,
      S00_AXI_rready => S00_AXI_rready,
      S00_AXI_rresp(1 downto 0) => S00_AXI_rresp(1 downto 0),
      S00_AXI_rvalid => S00_AXI_rvalid,
      S00_AXI_wlast => S00_AXI_wlast,
      S00_AXI_wready => S00_AXI_wready,
      S00_AXI_wvalid => S00_AXI_wvalid,
      S_SC_AW_payld(2 downto 0) => S_SC_AW_payld(10 downto 8),
      S_SC_W_payld(0) => S_SC_W_payld(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0),
      m_axi_araddr(7 downto 0) => s00_mmu_M_AXI_ARADDR(7 downto 0),
      m_axi_arid(11 downto 0) => s00_mmu_M_AXI_ARID(11 downto 0),
      m_axi_arlen(3 downto 0) => s00_mmu_M_AXI_ARLEN(3 downto 0),
      m_axi_arprot(2 downto 0) => s00_mmu_M_AXI_ARPROT(2 downto 0),
      m_axi_arsize(1 downto 0) => s00_mmu_M_AXI_ARSIZE(1 downto 0),
      m_axi_arvalid => s00_mmu_M_AXI_ARVALID,
      m_axi_awaddr(7 downto 0) => s00_mmu_M_AXI_AWADDR(7 downto 0),
      m_axi_awid(11 downto 0) => s00_mmu_M_AXI_AWID(11 downto 0),
      m_axi_awsize(2 downto 0) => s00_mmu_M_AXI_AWSIZE(2 downto 0),
      m_axi_awvalid => s00_mmu_M_AXI_AWVALID,
      m_axi_wvalid => s00_mmu_M_AXI_WVALID,
      s_axi_arready => s00_mmu_M_AXI_ARREADY,
      s_axi_awready => s00_mmu_M_AXI_AWREADY,
      s_axi_bid(11 downto 0) => s00_mmu_M_AXI_BID(11 downto 0),
      s_axi_bresp(1 downto 0) => s00_transaction_regulator_M_AXI_BRESP(1 downto 0),
      s_axi_bvalid => s00_transaction_regulator_M_AXI_BVALID,
      s_axi_rdata(31 downto 0) => s00_transaction_regulator_M_AXI_RDATA(31 downto 0),
      s_axi_rid(11 downto 0) => s00_mmu_M_AXI_RID(11 downto 0),
      s_axi_rlast => s00_transaction_regulator_M_AXI_RLAST,
      s_axi_rresp(1 downto 0) => s00_transaction_regulator_M_AXI_RRESP(1 downto 0),
      s_axi_rvalid => s00_transaction_regulator_M_AXI_RVALID,
      s_axi_wready => s00_transaction_regulator_M_AXI_WREADY
    );
s00_si_converter: entity work.design_1_axi_smc_0_bd_afc3_s00sic_0
     port map (
      \FSM_sequential_r_state_reg[0]\ => s00_transaction_regulator_M_AXI_ARVALID,
      M_SC_B_payld(1 downto 0) => M_SC_B_payld(1 downto 0),
      M_SC_B_send(0) => M_SC_B_send(0),
      M_SC_R_payld(33 downto 0) => M_SC_R_payld(33 downto 0),
      M_SC_R_send(0) => M_SC_R_send(0),
      S00_AXI_bready => S00_AXI_bready,
      S00_AXI_rready => S00_AXI_rready,
      S00_AXI_wdata(31 downto 0) => S00_AXI_wdata(31 downto 0),
      S00_AXI_wlast => S00_AXI_wlast,
      S00_AXI_wstrb(3 downto 0) => S00_AXI_wstrb(3 downto 0),
      S_SC_AR_payld(11 downto 0) => S_SC_AR_payld(11 downto 0),
      S_SC_AR_recv(0) => S_SC_AR_recv(0),
      S_SC_AW_payld(7 downto 0) => S_SC_AW_payld(7 downto 0),
      S_SC_AW_recv(0) => S_SC_AW_recv(0),
      S_SC_W_payld(35 downto 0) => S_SC_W_payld(36 downto 1),
      S_SC_W_recv(0) => S_SC_W_recv(0),
      aclk => aclk,
      \aw_incr_reg[2]\ => s00_transaction_regulator_M_AXI_AWVALID,
      interconnect_aresetn(0) => interconnect_aresetn(0),
      m_axi_araddr(7 downto 0) => s00_mmu_M_AXI_ARADDR(7 downto 0),
      m_axi_arlen(3 downto 0) => s00_mmu_M_AXI_ARLEN(3 downto 0),
      m_axi_arprot(2 downto 0) => s00_mmu_M_AXI_ARPROT(2 downto 0),
      m_axi_arsize(1 downto 0) => s00_mmu_M_AXI_ARSIZE(1 downto 0),
      m_axi_arvalid => m_axi_arvalid,
      m_axi_awaddr(7 downto 0) => s00_mmu_M_AXI_AWADDR(7 downto 0),
      m_axi_awsize(2 downto 0) => s00_mmu_M_AXI_AWSIZE(2 downto 0),
      m_axi_awvalid => m_axi_awvalid,
      m_axi_bready => m_axi_bready,
      m_axi_rready => m_axi_rready,
      m_axi_wvalid => m_axi_wvalid,
      s_axi_arready => s00_transaction_regulator_M_AXI_ARREADY,
      s_axi_awready => s00_transaction_regulator_M_AXI_AWREADY,
      s_axi_bresp(1 downto 0) => s00_transaction_regulator_M_AXI_BRESP(1 downto 0),
      s_axi_bvalid => s00_transaction_regulator_M_AXI_BVALID,
      s_axi_rdata(31 downto 0) => s00_transaction_regulator_M_AXI_RDATA(31 downto 0),
      s_axi_rlast => s00_transaction_regulator_M_AXI_RLAST,
      s_axi_rresp(1 downto 0) => s00_transaction_regulator_M_AXI_RRESP(1 downto 0),
      s_axi_rvalid => s00_transaction_regulator_M_AXI_RVALID,
      s_axi_wready => s00_transaction_regulator_M_AXI_WREADY,
      s_axi_wready_i_reg => s00_mmu_M_AXI_WVALID
    );
s00_transaction_regulator: entity work.design_1_axi_smc_0_bd_afc3_s00tr_0
     port map (
      S00_AXI_bready => S00_AXI_bready,
      S00_AXI_rready => S00_AXI_rready,
      aclk => aclk,
      \gen_id_reg.s_rid_i_reg[0]\ => s00_mmu_M_AXI_AWVALID,
      \gen_id_reg.s_rid_i_reg[0]_0\ => s00_transaction_regulator_M_AXI_AWREADY,
      \gen_id_reg.s_single_aready_i_reg\ => s00_mmu_M_AXI_ARVALID,
      \gen_id_reg.s_single_aready_i_reg_0\ => s00_transaction_regulator_M_AXI_ARREADY,
      interconnect_aresetn(0) => interconnect_aresetn(0),
      m_axi_arid(11 downto 0) => s00_mmu_M_AXI_ARID(11 downto 0),
      m_axi_arvalid => s00_transaction_regulator_M_AXI_ARVALID,
      m_axi_awid(11 downto 0) => s00_mmu_M_AXI_AWID(11 downto 0),
      m_axi_awvalid => s00_transaction_regulator_M_AXI_AWVALID,
      s_axi_arready => s00_mmu_M_AXI_ARREADY,
      s_axi_awready => s00_mmu_M_AXI_AWREADY,
      s_axi_bid(11 downto 0) => s00_mmu_M_AXI_BID(11 downto 0),
      s_axi_bvalid => s00_transaction_regulator_M_AXI_BVALID,
      s_axi_rid(11 downto 0) => s00_mmu_M_AXI_RID(11 downto 0),
      s_axi_rlast => s00_transaction_regulator_M_AXI_RLAST,
      s_axi_rvalid => s00_transaction_regulator_M_AXI_RVALID
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ is
  port (
    s_sc_aclk : in STD_LOGIC;
    s_sc_aclken : in STD_LOGIC;
    s_sc_aresetn : in STD_LOGIC;
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 140 downto 0 );
    m_sc_aclk : in STD_LOGIC;
    m_sc_aclken : in STD_LOGIC;
    m_sc_aresetn : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 140 downto 0 );
    m_axis_arb_tvalid : out STD_LOGIC;
    m_axis_arb_tready : in STD_LOGIC;
    m_axis_arb_tdata : out STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axis_arb_tvalid : in STD_LOGIC;
    s_axis_arb_tready : out STD_LOGIC;
    s_axis_arb_tdata : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 3;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 4;
  attribute C_M_NUM_BYTES_ARRAY : string;
  attribute C_M_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is "64'b0000000000000000000000000000010000000000000000000000000000000100";
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 2;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 141;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is "sc_node_v1_0_10_top";
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ : entity is 16;
end \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\ is
  signal \<const0>\ : STD_LOGIC;
  signal arb_stall : STD_LOGIC;
  signal arb_stall_late : STD_LOGIC;
  signal inst_si_handler_n_2 : STD_LOGIC;
  signal \^m_sc_payld\ : STD_LOGIC_VECTOR ( 132 downto 97 );
  signal \^m_sc_send\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal mi_handler_m_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of mi_handler_m_sc_areset : signal is std.standard.true;
  signal mi_handler_m_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of mi_handler_m_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset : signal is std.standard.true;
  signal s_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset_pipe : signal is std.standard.true;
  attribute DONT_TOUCH of s_sc_areset_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_sc_areset_reg : label is "yes";
begin
  m_axis_arb_tdata(15) <= \<const0>\;
  m_axis_arb_tdata(14) <= \<const0>\;
  m_axis_arb_tdata(13) <= \<const0>\;
  m_axis_arb_tdata(12) <= \<const0>\;
  m_axis_arb_tdata(11) <= \<const0>\;
  m_axis_arb_tdata(10) <= \<const0>\;
  m_axis_arb_tdata(9) <= \<const0>\;
  m_axis_arb_tdata(8) <= \<const0>\;
  m_axis_arb_tdata(7) <= \<const0>\;
  m_axis_arb_tdata(6) <= \<const0>\;
  m_axis_arb_tdata(5) <= \<const0>\;
  m_axis_arb_tdata(4) <= \<const0>\;
  m_axis_arb_tdata(3) <= \<const0>\;
  m_axis_arb_tdata(2) <= \<const0>\;
  m_axis_arb_tdata(1) <= \<const0>\;
  m_axis_arb_tdata(0) <= \<const0>\;
  m_axis_arb_tvalid <= \<const0>\;
  m_sc_info(1) <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(140) <= \<const0>\;
  m_sc_payld(139) <= \<const0>\;
  m_sc_payld(138) <= \<const0>\;
  m_sc_payld(137) <= \<const0>\;
  m_sc_payld(136) <= \<const0>\;
  m_sc_payld(135) <= \<const0>\;
  m_sc_payld(134) <= \<const0>\;
  m_sc_payld(133) <= \<const0>\;
  m_sc_payld(132 downto 130) <= \^m_sc_payld\(132 downto 130);
  m_sc_payld(129) <= \<const0>\;
  m_sc_payld(128) <= \<const0>\;
  m_sc_payld(127) <= \<const0>\;
  m_sc_payld(126) <= \<const0>\;
  m_sc_payld(125) <= \<const0>\;
  m_sc_payld(124) <= \<const0>\;
  m_sc_payld(123) <= \<const0>\;
  m_sc_payld(122) <= \<const0>\;
  m_sc_payld(121) <= \<const0>\;
  m_sc_payld(120) <= \<const0>\;
  m_sc_payld(119) <= \<const0>\;
  m_sc_payld(118) <= \<const0>\;
  m_sc_payld(117) <= \<const0>\;
  m_sc_payld(116) <= \<const0>\;
  m_sc_payld(115) <= \<const0>\;
  m_sc_payld(114) <= \<const0>\;
  m_sc_payld(113) <= \<const0>\;
  m_sc_payld(112) <= \<const0>\;
  m_sc_payld(111) <= \<const0>\;
  m_sc_payld(110) <= \<const0>\;
  m_sc_payld(109) <= \<const0>\;
  m_sc_payld(108) <= \<const0>\;
  m_sc_payld(107) <= \<const0>\;
  m_sc_payld(106) <= \<const0>\;
  m_sc_payld(105) <= \<const0>\;
  m_sc_payld(104 downto 97) <= \^m_sc_payld\(104 downto 97);
  m_sc_payld(96) <= \<const0>\;
  m_sc_payld(95) <= \<const0>\;
  m_sc_payld(94) <= \<const0>\;
  m_sc_payld(93) <= \<const0>\;
  m_sc_payld(92) <= \<const0>\;
  m_sc_payld(91) <= \<const0>\;
  m_sc_payld(90) <= \<const0>\;
  m_sc_payld(89) <= \<const0>\;
  m_sc_payld(88) <= \<const0>\;
  m_sc_payld(87) <= \<const0>\;
  m_sc_payld(86) <= \<const0>\;
  m_sc_payld(85) <= \<const0>\;
  m_sc_payld(84) <= \<const0>\;
  m_sc_payld(83) <= \<const0>\;
  m_sc_payld(82) <= \<const0>\;
  m_sc_payld(81) <= \<const0>\;
  m_sc_payld(80) <= \<const0>\;
  m_sc_payld(79) <= \<const0>\;
  m_sc_payld(78) <= \<const0>\;
  m_sc_payld(77) <= \<const0>\;
  m_sc_payld(76) <= \<const0>\;
  m_sc_payld(75) <= \<const0>\;
  m_sc_payld(74) <= \<const0>\;
  m_sc_payld(73) <= \<const0>\;
  m_sc_payld(72) <= \<const0>\;
  m_sc_payld(71) <= \<const0>\;
  m_sc_payld(70) <= \<const0>\;
  m_sc_payld(69) <= \<const0>\;
  m_sc_payld(68) <= \<const0>\;
  m_sc_payld(67) <= \<const0>\;
  m_sc_payld(66) <= \<const0>\;
  m_sc_payld(65) <= \<const0>\;
  m_sc_payld(64) <= \<const0>\;
  m_sc_payld(63) <= \<const0>\;
  m_sc_payld(62) <= \<const0>\;
  m_sc_payld(61) <= \<const0>\;
  m_sc_payld(60) <= \<const0>\;
  m_sc_payld(59) <= \<const0>\;
  m_sc_payld(58) <= \<const0>\;
  m_sc_payld(57) <= \<const0>\;
  m_sc_payld(56) <= \<const0>\;
  m_sc_payld(55) <= \<const0>\;
  m_sc_payld(54) <= \<const0>\;
  m_sc_payld(53) <= \<const0>\;
  m_sc_payld(52) <= \<const0>\;
  m_sc_payld(51) <= \<const0>\;
  m_sc_payld(50) <= \<const0>\;
  m_sc_payld(49) <= \<const0>\;
  m_sc_payld(48) <= \<const0>\;
  m_sc_payld(47) <= \<const0>\;
  m_sc_payld(46) <= \<const0>\;
  m_sc_payld(45) <= \<const0>\;
  m_sc_payld(44) <= \<const0>\;
  m_sc_payld(43) <= \<const0>\;
  m_sc_payld(42) <= \<const0>\;
  m_sc_payld(41) <= \<const0>\;
  m_sc_payld(40) <= \<const0>\;
  m_sc_payld(39) <= \<const0>\;
  m_sc_payld(38) <= \<const0>\;
  m_sc_payld(37) <= \<const0>\;
  m_sc_payld(36) <= \<const0>\;
  m_sc_payld(35) <= \<const0>\;
  m_sc_payld(34) <= \<const0>\;
  m_sc_payld(33) <= \<const0>\;
  m_sc_payld(32) <= \<const0>\;
  m_sc_payld(31) <= \<const0>\;
  m_sc_payld(30) <= \<const0>\;
  m_sc_payld(29) <= \<const0>\;
  m_sc_payld(28) <= \<const0>\;
  m_sc_payld(27) <= \<const0>\;
  m_sc_payld(26) <= \<const0>\;
  m_sc_payld(25) <= \<const0>\;
  m_sc_payld(24) <= \<const0>\;
  m_sc_payld(23) <= \<const0>\;
  m_sc_payld(22) <= \<const0>\;
  m_sc_payld(21) <= \<const0>\;
  m_sc_payld(20) <= \<const0>\;
  m_sc_payld(19) <= \<const0>\;
  m_sc_payld(18) <= \<const0>\;
  m_sc_payld(17) <= \<const0>\;
  m_sc_payld(16) <= \<const0>\;
  m_sc_payld(15) <= \<const0>\;
  m_sc_payld(14) <= \<const0>\;
  m_sc_payld(13) <= \<const0>\;
  m_sc_payld(12) <= \<const0>\;
  m_sc_payld(11) <= \<const0>\;
  m_sc_payld(10) <= \<const0>\;
  m_sc_payld(9) <= \<const0>\;
  m_sc_payld(8) <= \<const0>\;
  m_sc_payld(7) <= \<const0>\;
  m_sc_payld(6) <= \<const0>\;
  m_sc_payld(5) <= \<const0>\;
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  m_sc_req(1) <= \<const0>\;
  m_sc_req(0) <= \<const0>\;
  m_sc_send(1) <= \^m_sc_send\(1);
  m_sc_send(0) <= \<const0>\;
  s_axis_arb_tready <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_mi_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized10\
     port map (
      E(0) => inst_si_handler_n_2,
      arb_stall => arb_stall,
      arb_stall_late => arb_stall_late,
      m_sc_areset_r_reg_0 => mi_handler_m_sc_areset_pipe,
      m_sc_payld(10 downto 8) => \^m_sc_payld\(132 downto 130),
      m_sc_payld(7 downto 0) => \^m_sc_payld\(104 downto 97),
      m_sc_recv(0) => m_sc_recv(1),
      m_sc_send(0) => \^m_sc_send\(1),
      \out\ => s_sc_areset_pipe,
      s_sc_aclk => s_sc_aclk,
      s_sc_payld(10 downto 8) => s_sc_payld(132 downto 130),
      s_sc_payld(7 downto 0) => s_sc_payld(104 downto 97),
      s_sc_send(0) => s_sc_send(0)
    );
inst_si_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized5\
     port map (
      E(0) => inst_si_handler_n_2,
      arb_stall => arb_stall,
      arb_stall_late => arb_stall_late,
      s_sc_aclk => s_sc_aclk,
      s_sc_recv(0) => s_sc_recv(0),
      s_sc_send(0) => s_sc_send(0)
    );
mi_handler_m_sc_areset_pipe_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mi_handler_m_sc_areset,
      O => mi_handler_m_sc_areset_pipe
    );
s_sc_areset_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_areset,
      O => mi_handler_m_sc_areset
    );
s_sc_areset_pipe_inferred_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_sc_aresetn,
      O => s_sc_areset_pipe
    );
s_sc_areset_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => '0',
      Q => s_sc_areset,
      S => s_sc_areset_pipe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ is
  port (
    s_sc_aclk : in STD_LOGIC;
    s_sc_aclken : in STD_LOGIC;
    s_sc_aresetn : in STD_LOGIC;
    s_sc_req : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 6 downto 0 );
    m_sc_aclk : in STD_LOGIC;
    m_sc_aclken : in STD_LOGIC;
    m_sc_aresetn : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 6 downto 0 );
    m_axis_arb_tvalid : out STD_LOGIC;
    m_axis_arb_tready : in STD_LOGIC;
    m_axis_arb_tdata : out STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axis_arb_tvalid : in STD_LOGIC;
    s_axis_arb_tready : out STD_LOGIC;
    s_axis_arb_tdata : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 4;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 2;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 7;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 3;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute C_S_NUM_BYTES_ARRAY : string;
  attribute C_S_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is "64'b0000000000000000000000000000010000000000000000000000000000000100";
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 3;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is "sc_node_v1_0_10_top";
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ : entity is 16;
end \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\ is
  signal \<const0>\ : STD_LOGIC;
  signal delay : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^m_sc_payld\ : STD_LOGIC_VECTOR ( 6 downto 5 );
  signal mi_handler_m_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of mi_handler_m_sc_areset : signal is std.standard.true;
  signal mi_handler_m_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of mi_handler_m_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset : signal is std.standard.true;
  signal s_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_handshake : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \^s_sc_recv\ : STD_LOGIC_VECTOR ( 1 to 1 );
  attribute DONT_TOUCH of s_sc_areset_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_sc_areset_reg : label is "yes";
begin
  m_axis_arb_tdata(15) <= \<const0>\;
  m_axis_arb_tdata(14) <= \<const0>\;
  m_axis_arb_tdata(13) <= \<const0>\;
  m_axis_arb_tdata(12) <= \<const0>\;
  m_axis_arb_tdata(11) <= \<const0>\;
  m_axis_arb_tdata(10) <= \<const0>\;
  m_axis_arb_tdata(9) <= \<const0>\;
  m_axis_arb_tdata(8) <= \<const0>\;
  m_axis_arb_tdata(7) <= \<const0>\;
  m_axis_arb_tdata(6) <= \<const0>\;
  m_axis_arb_tdata(5) <= \<const0>\;
  m_axis_arb_tdata(4) <= \<const0>\;
  m_axis_arb_tdata(3) <= \<const0>\;
  m_axis_arb_tdata(2) <= \<const0>\;
  m_axis_arb_tdata(1) <= \<const0>\;
  m_axis_arb_tdata(0) <= \<const0>\;
  m_axis_arb_tvalid <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(6 downto 5) <= \^m_sc_payld\(6 downto 5);
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  m_sc_req(0) <= \<const0>\;
  s_axis_arb_tready <= \<const0>\;
  s_sc_recv(1) <= \^s_sc_recv\(1);
  s_sc_recv(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_mi_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized11\
     port map (
      allow_transfer_r_reg(0) => delay(0),
      \gen_single_rank.empty_r_reg\ => \^s_sc_recv\(1),
      m_sc_areset_r_reg_0 => mi_handler_m_sc_areset_pipe,
      m_sc_payld(1 downto 0) => \^m_sc_payld\(6 downto 5),
      m_sc_recv(0) => m_sc_recv(0),
      m_sc_send(0) => m_sc_send(0),
      \out\ => s_sc_areset_pipe,
      s_sc_aclk => s_sc_aclk,
      s_sc_handshake(0) => s_sc_handshake(1),
      s_sc_payld(1 downto 0) => s_sc_payld(6 downto 5),
      s_sc_send(0) => s_sc_send(1)
    );
inst_si_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized6\
     port map (
      \grant_i_reg[1]\ => \^s_sc_recv\(1),
      \grant_i_reg[1]_0\(0) => delay(0),
      \out\ => mi_handler_m_sc_areset,
      s_sc_aclk => s_sc_aclk,
      s_sc_handshake(0) => s_sc_handshake(1),
      s_sc_req(0) => s_sc_req(1),
      s_sc_send(0) => s_sc_send(1)
    );
mi_handler_m_sc_areset_pipe_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mi_handler_m_sc_areset,
      O => mi_handler_m_sc_areset_pipe
    );
s_sc_areset_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_areset,
      O => mi_handler_m_sc_areset
    );
s_sc_areset_pipe_inferred_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_sc_aresetn,
      O => s_sc_areset_pipe
    );
s_sc_areset_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => '0',
      Q => s_sc_areset,
      S => s_sc_areset_pipe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ is
  port (
    s_sc_aclk : in STD_LOGIC;
    s_sc_aclken : in STD_LOGIC;
    s_sc_aresetn : in STD_LOGIC;
    s_sc_req : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 52 downto 0 );
    m_sc_aclk : in STD_LOGIC;
    m_sc_aclken : in STD_LOGIC;
    m_sc_aresetn : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 52 downto 0 );
    m_axis_arb_tvalid : out STD_LOGIC;
    m_axis_arb_tready : in STD_LOGIC;
    m_axis_arb_tdata : out STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axis_arb_tvalid : in STD_LOGIC;
    s_axis_arb_tready : out STD_LOGIC;
    s_axis_arb_tdata : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 0;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 0;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 0;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 2;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 53;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 3;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 0;
  attribute C_S_NUM_BYTES_ARRAY : string;
  attribute C_S_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is "64'b0000000000000000000000000000010000000000000000000000000000000100";
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 512;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 0;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 3;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is "sc_node_v1_0_10_top";
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ : entity is 16;
end \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\ is
  signal \<const0>\ : STD_LOGIC;
  signal delay : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^m_sc_payld\ : STD_LOGIC_VECTOR ( 52 downto 18 );
  signal mi_handler_m_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of mi_handler_m_sc_areset : signal is std.standard.true;
  signal mi_handler_m_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of mi_handler_m_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset : signal is std.standard.true;
  signal s_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_handshake : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \^s_sc_recv\ : STD_LOGIC_VECTOR ( 1 to 1 );
  attribute DONT_TOUCH of s_sc_areset_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_sc_areset_reg : label is "yes";
begin
  m_axis_arb_tdata(15) <= \<const0>\;
  m_axis_arb_tdata(14) <= \<const0>\;
  m_axis_arb_tdata(13) <= \<const0>\;
  m_axis_arb_tdata(12) <= \<const0>\;
  m_axis_arb_tdata(11) <= \<const0>\;
  m_axis_arb_tdata(10) <= \<const0>\;
  m_axis_arb_tdata(9) <= \<const0>\;
  m_axis_arb_tdata(8) <= \<const0>\;
  m_axis_arb_tdata(7) <= \<const0>\;
  m_axis_arb_tdata(6) <= \<const0>\;
  m_axis_arb_tdata(5) <= \<const0>\;
  m_axis_arb_tdata(4) <= \<const0>\;
  m_axis_arb_tdata(3) <= \<const0>\;
  m_axis_arb_tdata(2) <= \<const0>\;
  m_axis_arb_tdata(1) <= \<const0>\;
  m_axis_arb_tdata(0) <= \<const0>\;
  m_axis_arb_tvalid <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(52 downto 21) <= \^m_sc_payld\(52 downto 21);
  m_sc_payld(20) <= \<const0>\;
  m_sc_payld(19 downto 18) <= \^m_sc_payld\(19 downto 18);
  m_sc_payld(17) <= \<const0>\;
  m_sc_payld(16) <= \<const0>\;
  m_sc_payld(15) <= \<const0>\;
  m_sc_payld(14) <= \<const0>\;
  m_sc_payld(13) <= \<const0>\;
  m_sc_payld(12) <= \<const0>\;
  m_sc_payld(11) <= \<const0>\;
  m_sc_payld(10) <= \<const0>\;
  m_sc_payld(9) <= \<const0>\;
  m_sc_payld(8) <= \<const0>\;
  m_sc_payld(7) <= \<const0>\;
  m_sc_payld(6) <= \<const0>\;
  m_sc_payld(5) <= \<const0>\;
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  m_sc_req(0) <= \<const0>\;
  s_axis_arb_tready <= \<const0>\;
  s_sc_recv(1) <= \^s_sc_recv\(1);
  s_sc_recv(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_mi_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized12\
     port map (
      E(0) => s_sc_handshake(1),
      allow_transfer_r_reg(0) => delay(0),
      \gen_single_rank.empty_r_reg\ => \^s_sc_recv\(1),
      m_sc_areset_r_reg_0 => mi_handler_m_sc_areset_pipe,
      m_sc_payld(33 downto 2) => \^m_sc_payld\(52 downto 21),
      m_sc_payld(1 downto 0) => \^m_sc_payld\(19 downto 18),
      m_sc_recv(0) => m_sc_recv(0),
      m_sc_send(0) => m_sc_send(0),
      \out\ => s_sc_areset_pipe,
      s_sc_aclk => s_sc_aclk,
      s_sc_payld(33 downto 2) => s_sc_payld(52 downto 21),
      s_sc_payld(1 downto 0) => s_sc_payld(19 downto 18),
      s_sc_send(0) => s_sc_send(1)
    );
inst_si_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized7\
     port map (
      E(0) => s_sc_handshake(1),
      \grant_i_reg[1]\ => \^s_sc_recv\(1),
      \grant_i_reg[1]_0\(0) => delay(0),
      \out\ => mi_handler_m_sc_areset,
      s_sc_aclk => s_sc_aclk,
      s_sc_req(0) => s_sc_req(1),
      s_sc_send(0) => s_sc_send(1)
    );
mi_handler_m_sc_areset_pipe_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mi_handler_m_sc_areset,
      O => mi_handler_m_sc_areset_pipe
    );
s_sc_areset_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_areset,
      O => mi_handler_m_sc_areset
    );
s_sc_areset_pipe_inferred_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_sc_aresetn,
      O => s_sc_areset_pipe
    );
s_sc_areset_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => '0',
      Q => s_sc_areset,
      S => s_sc_areset_pipe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ is
  port (
    s_sc_aclk : in STD_LOGIC;
    s_sc_aclken : in STD_LOGIC;
    s_sc_aresetn : in STD_LOGIC;
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 54 downto 0 );
    m_sc_aclk : in STD_LOGIC;
    m_sc_aclken : in STD_LOGIC;
    m_sc_aresetn : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 54 downto 0 );
    m_axis_arb_tvalid : out STD_LOGIC;
    m_axis_arb_tready : in STD_LOGIC;
    m_axis_arb_tdata : out STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axis_arb_tvalid : in STD_LOGIC;
    s_axis_arb_tready : out STD_LOGIC;
    s_axis_arb_tdata : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 0;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 0;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 4;
  attribute C_M_NUM_BYTES_ARRAY : string;
  attribute C_M_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is "64'b0000000000000000000000000000010000000000000000000000000000000100";
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 2;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 55;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 512;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 2;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 0;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is "sc_node_v1_0_10_top";
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ : entity is 16;
end \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\ is
  signal \<const0>\ : STD_LOGIC;
  signal arb_stall : STD_LOGIC;
  signal arb_stall_late : STD_LOGIC;
  signal inst_si_handler_n_2 : STD_LOGIC;
  signal \^m_sc_payld\ : STD_LOGIC_VECTOR ( 54 downto 19 );
  signal \^m_sc_send\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal mi_handler_m_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of mi_handler_m_sc_areset : signal is std.standard.true;
  signal mi_handler_m_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of mi_handler_m_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset : signal is std.standard.true;
  signal s_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset_pipe : signal is std.standard.true;
  attribute DONT_TOUCH of s_sc_areset_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_sc_areset_reg : label is "yes";
begin
  m_axis_arb_tdata(15) <= \<const0>\;
  m_axis_arb_tdata(14) <= \<const0>\;
  m_axis_arb_tdata(13) <= \<const0>\;
  m_axis_arb_tdata(12) <= \<const0>\;
  m_axis_arb_tdata(11) <= \<const0>\;
  m_axis_arb_tdata(10) <= \<const0>\;
  m_axis_arb_tdata(9) <= \<const0>\;
  m_axis_arb_tdata(8) <= \<const0>\;
  m_axis_arb_tdata(7) <= \<const0>\;
  m_axis_arb_tdata(6) <= \<const0>\;
  m_axis_arb_tdata(5) <= \<const0>\;
  m_axis_arb_tdata(4) <= \<const0>\;
  m_axis_arb_tdata(3) <= \<const0>\;
  m_axis_arb_tdata(2) <= \<const0>\;
  m_axis_arb_tdata(1) <= \<const0>\;
  m_axis_arb_tdata(0) <= \<const0>\;
  m_axis_arb_tvalid <= \<const0>\;
  m_sc_info(1) <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(54 downto 19) <= \^m_sc_payld\(54 downto 19);
  m_sc_payld(18) <= \<const0>\;
  m_sc_payld(17) <= \<const0>\;
  m_sc_payld(16) <= \<const0>\;
  m_sc_payld(15) <= \<const0>\;
  m_sc_payld(14) <= \<const0>\;
  m_sc_payld(13) <= \<const0>\;
  m_sc_payld(12) <= \<const0>\;
  m_sc_payld(11) <= \<const0>\;
  m_sc_payld(10) <= \<const0>\;
  m_sc_payld(9) <= \<const0>\;
  m_sc_payld(8) <= \<const0>\;
  m_sc_payld(7) <= \<const0>\;
  m_sc_payld(6) <= \<const0>\;
  m_sc_payld(5) <= \<const0>\;
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  m_sc_req(1) <= \<const0>\;
  m_sc_req(0) <= \<const0>\;
  m_sc_send(1) <= \^m_sc_send\(1);
  m_sc_send(0) <= \<const0>\;
  s_axis_arb_tready <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_mi_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized13\
     port map (
      E(0) => inst_si_handler_n_2,
      arb_stall => arb_stall,
      arb_stall_late => arb_stall_late,
      m_sc_areset_r_reg_0 => mi_handler_m_sc_areset_pipe,
      m_sc_payld(35 downto 0) => \^m_sc_payld\(54 downto 19),
      m_sc_recv(0) => m_sc_recv(1),
      m_sc_send(0) => \^m_sc_send\(1),
      \out\ => s_sc_areset_pipe,
      s_sc_aclk => s_sc_aclk,
      s_sc_payld(36 downto 1) => s_sc_payld(54 downto 19),
      s_sc_payld(0) => s_sc_payld(1),
      s_sc_send(0) => s_sc_send(0)
    );
inst_si_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized8\
     port map (
      E(0) => inst_si_handler_n_2,
      arb_stall => arb_stall,
      arb_stall_late => arb_stall_late,
      s_sc_aclk => s_sc_aclk,
      s_sc_recv(0) => s_sc_recv(0),
      s_sc_send(0) => s_sc_send(0)
    );
mi_handler_m_sc_areset_pipe_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mi_handler_m_sc_areset,
      O => mi_handler_m_sc_areset_pipe
    );
s_sc_areset_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_areset,
      O => mi_handler_m_sc_areset
    );
s_sc_areset_pipe_inferred_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_sc_aresetn,
      O => s_sc_areset_pipe
    );
s_sc_areset_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => '0',
      Q => s_sc_areset,
      S => s_sc_areset_pipe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ is
  port (
    s_sc_aclk : in STD_LOGIC;
    s_sc_aclken : in STD_LOGIC;
    s_sc_aresetn : in STD_LOGIC;
    s_sc_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_info : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_sc_payld : in STD_LOGIC_VECTOR ( 140 downto 0 );
    m_sc_aclk : in STD_LOGIC;
    m_sc_aclken : in STD_LOGIC;
    m_sc_aresetn : in STD_LOGIC;
    m_sc_recv : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_send : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_req : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_info : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_sc_payld : out STD_LOGIC_VECTOR ( 140 downto 0 );
    m_axis_arb_tvalid : out STD_LOGIC;
    m_axis_arb_tready : in STD_LOGIC;
    m_axis_arb_tdata : out STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axis_arb_tvalid : in STD_LOGIC;
    s_axis_arb_tready : out STD_LOGIC;
    s_axis_arb_tdata : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 2;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 4;
  attribute C_M_NUM_BYTES_ARRAY : string;
  attribute C_M_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is "64'b0000000000000000000000000000010000000000000000000000000000000100";
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 2;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 141;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is "sc_node_v1_0_10_top";
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ : entity is 16;
end \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\;

architecture STRUCTURE of \design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\ is
  signal \<const0>\ : STD_LOGIC;
  signal arb_stall : STD_LOGIC;
  signal arb_stall_late : STD_LOGIC;
  signal inst_si_handler_n_2 : STD_LOGIC;
  signal \^m_sc_payld\ : STD_LOGIC_VECTOR ( 132 downto 97 );
  signal \^m_sc_send\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal mi_handler_m_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of mi_handler_m_sc_areset : signal is std.standard.true;
  signal mi_handler_m_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of mi_handler_m_sc_areset_pipe : signal is std.standard.true;
  signal s_sc_areset : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset : signal is std.standard.true;
  signal s_sc_areset_pipe : STD_LOGIC;
  attribute DONT_TOUCH of s_sc_areset_pipe : signal is std.standard.true;
  attribute DONT_TOUCH of s_sc_areset_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_sc_areset_reg : label is "yes";
begin
  m_axis_arb_tdata(15) <= \<const0>\;
  m_axis_arb_tdata(14) <= \<const0>\;
  m_axis_arb_tdata(13) <= \<const0>\;
  m_axis_arb_tdata(12) <= \<const0>\;
  m_axis_arb_tdata(11) <= \<const0>\;
  m_axis_arb_tdata(10) <= \<const0>\;
  m_axis_arb_tdata(9) <= \<const0>\;
  m_axis_arb_tdata(8) <= \<const0>\;
  m_axis_arb_tdata(7) <= \<const0>\;
  m_axis_arb_tdata(6) <= \<const0>\;
  m_axis_arb_tdata(5) <= \<const0>\;
  m_axis_arb_tdata(4) <= \<const0>\;
  m_axis_arb_tdata(3) <= \<const0>\;
  m_axis_arb_tdata(2) <= \<const0>\;
  m_axis_arb_tdata(1) <= \<const0>\;
  m_axis_arb_tdata(0) <= \<const0>\;
  m_axis_arb_tvalid <= \<const0>\;
  m_sc_info(1) <= \<const0>\;
  m_sc_info(0) <= \<const0>\;
  m_sc_payld(140) <= \<const0>\;
  m_sc_payld(139) <= \<const0>\;
  m_sc_payld(138) <= \<const0>\;
  m_sc_payld(137) <= \<const0>\;
  m_sc_payld(136) <= \<const0>\;
  m_sc_payld(135) <= \<const0>\;
  m_sc_payld(134) <= \<const0>\;
  m_sc_payld(133) <= \<const0>\;
  m_sc_payld(132 downto 130) <= \^m_sc_payld\(132 downto 130);
  m_sc_payld(129) <= \<const0>\;
  m_sc_payld(128) <= \<const0>\;
  m_sc_payld(127) <= \<const0>\;
  m_sc_payld(126) <= \<const0>\;
  m_sc_payld(125) <= \<const0>\;
  m_sc_payld(124) <= \<const0>\;
  m_sc_payld(123) <= \<const0>\;
  m_sc_payld(122) <= \<const0>\;
  m_sc_payld(121) <= \<const0>\;
  m_sc_payld(120) <= \<const0>\;
  m_sc_payld(119) <= \<const0>\;
  m_sc_payld(118) <= \<const0>\;
  m_sc_payld(117) <= \<const0>\;
  m_sc_payld(116) <= \<const0>\;
  m_sc_payld(115) <= \<const0>\;
  m_sc_payld(114) <= \<const0>\;
  m_sc_payld(113) <= \<const0>\;
  m_sc_payld(112) <= \<const0>\;
  m_sc_payld(111) <= \<const0>\;
  m_sc_payld(110) <= \<const0>\;
  m_sc_payld(109) <= \<const0>\;
  m_sc_payld(108) <= \<const0>\;
  m_sc_payld(107) <= \<const0>\;
  m_sc_payld(106) <= \<const0>\;
  m_sc_payld(105) <= \<const0>\;
  m_sc_payld(104 downto 97) <= \^m_sc_payld\(104 downto 97);
  m_sc_payld(96) <= \<const0>\;
  m_sc_payld(95) <= \<const0>\;
  m_sc_payld(94) <= \<const0>\;
  m_sc_payld(93) <= \<const0>\;
  m_sc_payld(92) <= \<const0>\;
  m_sc_payld(91) <= \<const0>\;
  m_sc_payld(90) <= \<const0>\;
  m_sc_payld(89) <= \<const0>\;
  m_sc_payld(88) <= \<const0>\;
  m_sc_payld(87) <= \<const0>\;
  m_sc_payld(86) <= \<const0>\;
  m_sc_payld(85) <= \<const0>\;
  m_sc_payld(84) <= \<const0>\;
  m_sc_payld(83) <= \<const0>\;
  m_sc_payld(82) <= \<const0>\;
  m_sc_payld(81) <= \<const0>\;
  m_sc_payld(80) <= \<const0>\;
  m_sc_payld(79) <= \<const0>\;
  m_sc_payld(78) <= \<const0>\;
  m_sc_payld(77) <= \<const0>\;
  m_sc_payld(76) <= \<const0>\;
  m_sc_payld(75) <= \<const0>\;
  m_sc_payld(74) <= \<const0>\;
  m_sc_payld(73) <= \<const0>\;
  m_sc_payld(72) <= \<const0>\;
  m_sc_payld(71) <= \<const0>\;
  m_sc_payld(70) <= \<const0>\;
  m_sc_payld(69) <= \<const0>\;
  m_sc_payld(68) <= \<const0>\;
  m_sc_payld(67) <= \<const0>\;
  m_sc_payld(66) <= \<const0>\;
  m_sc_payld(65) <= \<const0>\;
  m_sc_payld(64) <= \<const0>\;
  m_sc_payld(63) <= \<const0>\;
  m_sc_payld(62) <= \<const0>\;
  m_sc_payld(61) <= \<const0>\;
  m_sc_payld(60) <= \<const0>\;
  m_sc_payld(59) <= \<const0>\;
  m_sc_payld(58) <= \<const0>\;
  m_sc_payld(57) <= \<const0>\;
  m_sc_payld(56) <= \<const0>\;
  m_sc_payld(55) <= \<const0>\;
  m_sc_payld(54) <= \<const0>\;
  m_sc_payld(53) <= \<const0>\;
  m_sc_payld(52) <= \<const0>\;
  m_sc_payld(51) <= \<const0>\;
  m_sc_payld(50) <= \<const0>\;
  m_sc_payld(49) <= \<const0>\;
  m_sc_payld(48) <= \<const0>\;
  m_sc_payld(47) <= \<const0>\;
  m_sc_payld(46) <= \<const0>\;
  m_sc_payld(45) <= \<const0>\;
  m_sc_payld(44) <= \<const0>\;
  m_sc_payld(43) <= \<const0>\;
  m_sc_payld(42) <= \<const0>\;
  m_sc_payld(41) <= \<const0>\;
  m_sc_payld(40) <= \<const0>\;
  m_sc_payld(39) <= \<const0>\;
  m_sc_payld(38) <= \<const0>\;
  m_sc_payld(37) <= \<const0>\;
  m_sc_payld(36) <= \<const0>\;
  m_sc_payld(35) <= \<const0>\;
  m_sc_payld(34) <= \<const0>\;
  m_sc_payld(33) <= \<const0>\;
  m_sc_payld(32) <= \<const0>\;
  m_sc_payld(31) <= \<const0>\;
  m_sc_payld(30) <= \<const0>\;
  m_sc_payld(29) <= \<const0>\;
  m_sc_payld(28) <= \<const0>\;
  m_sc_payld(27) <= \<const0>\;
  m_sc_payld(26) <= \<const0>\;
  m_sc_payld(25) <= \<const0>\;
  m_sc_payld(24) <= \<const0>\;
  m_sc_payld(23) <= \<const0>\;
  m_sc_payld(22) <= \<const0>\;
  m_sc_payld(21) <= \<const0>\;
  m_sc_payld(20) <= \<const0>\;
  m_sc_payld(19) <= \<const0>\;
  m_sc_payld(18) <= \<const0>\;
  m_sc_payld(17) <= \<const0>\;
  m_sc_payld(16) <= \<const0>\;
  m_sc_payld(15) <= \<const0>\;
  m_sc_payld(14) <= \<const0>\;
  m_sc_payld(13) <= \<const0>\;
  m_sc_payld(12) <= \<const0>\;
  m_sc_payld(11) <= \<const0>\;
  m_sc_payld(10) <= \<const0>\;
  m_sc_payld(9) <= \<const0>\;
  m_sc_payld(8) <= \<const0>\;
  m_sc_payld(7) <= \<const0>\;
  m_sc_payld(6) <= \<const0>\;
  m_sc_payld(5) <= \<const0>\;
  m_sc_payld(4) <= \<const0>\;
  m_sc_payld(3) <= \<const0>\;
  m_sc_payld(2) <= \<const0>\;
  m_sc_payld(1) <= \<const0>\;
  m_sc_payld(0) <= \<const0>\;
  m_sc_req(1) <= \<const0>\;
  m_sc_req(0) <= \<const0>\;
  m_sc_send(1) <= \^m_sc_send\(1);
  m_sc_send(0) <= \<const0>\;
  s_axis_arb_tready <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst_mi_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_mi_handler__parameterized9\
     port map (
      E(0) => inst_si_handler_n_2,
      arb_stall => arb_stall,
      arb_stall_late => arb_stall_late,
      m_sc_areset_r_reg_0 => mi_handler_m_sc_areset_pipe,
      m_sc_payld(10 downto 8) => \^m_sc_payld\(132 downto 130),
      m_sc_payld(7 downto 0) => \^m_sc_payld\(104 downto 97),
      m_sc_recv(0) => m_sc_recv(1),
      m_sc_send(0) => \^m_sc_send\(1),
      \out\ => s_sc_areset_pipe,
      s_sc_aclk => s_sc_aclk,
      s_sc_payld(11 downto 9) => s_sc_payld(132 downto 130),
      s_sc_payld(8 downto 1) => s_sc_payld(104 downto 97),
      s_sc_payld(0) => s_sc_payld(1),
      s_sc_send(0) => s_sc_send(0)
    );
inst_si_handler: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_si_handler__parameterized4\
     port map (
      E(0) => inst_si_handler_n_2,
      arb_stall => arb_stall,
      arb_stall_late => arb_stall_late,
      s_sc_aclk => s_sc_aclk,
      s_sc_recv(0) => s_sc_recv(0),
      s_sc_send(0) => s_sc_send(0)
    );
mi_handler_m_sc_areset_pipe_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mi_handler_m_sc_areset,
      O => mi_handler_m_sc_areset_pipe
    );
s_sc_areset_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_sc_areset,
      O => mi_handler_m_sc_areset
    );
s_sc_areset_pipe_inferred_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_sc_aresetn,
      O => s_sc_areset_pipe
    );
s_sc_areset_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_sc_aclk,
      CE => '1',
      D => '0',
      Q => s_sc_areset,
      S => s_sc_areset_pipe
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_arni_0 is
  port (
    S_SC_AR_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AR_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AR_payld : out STD_LOGIC_VECTOR ( 10 downto 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AR_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AR_payld : in STD_LOGIC_VECTOR ( 11 downto 0 );
    M_SC_AR_recv : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_arni_0 : entity is "bd_afc3_arni_0";
end design_1_axi_smc_0_bd_afc3_arni_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_arni_0 is
  signal NLW_inst_m_axis_arb_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axis_arb_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axis_arb_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 140 downto 0 );
  signal NLW_inst_m_sc_req_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_sc_send_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of inst : label is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of inst : label is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of inst : label is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of inst : label is 2;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of inst : label is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of inst : label is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of inst : label is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of inst : label is 0;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of inst : label is 0;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of inst : label is 4;
  attribute C_M_NUM_BYTES_ARRAY : string;
  attribute C_M_NUM_BYTES_ARRAY of inst : label is "64'b0000000000000000000000000000010000000000000000000000000000000100";
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of inst : label is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of inst : label is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 2;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 141;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of inst : label is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of inst : label is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of inst : label is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of inst : label is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of inst : label is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of inst : label is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of inst : label is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of inst : label is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of inst : label is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of inst : label is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of inst : label is 0;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of inst : label is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of inst : label is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of inst : label is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of inst : label is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of inst : label is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of inst : label is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of inst : label is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of inst : label is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of inst : label is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of inst : label is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of inst : label is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of inst : label is 0;
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of inst : label is 16;
begin
inst: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized9\
     port map (
      m_axis_arb_tdata(15 downto 0) => NLW_inst_m_axis_arb_tdata_UNCONNECTED(15 downto 0),
      m_axis_arb_tready => '1',
      m_axis_arb_tvalid => NLW_inst_m_axis_arb_tvalid_UNCONNECTED,
      m_sc_aclk => '0',
      m_sc_aclken => '1',
      m_sc_aresetn => '0',
      m_sc_info(1 downto 0) => NLW_inst_m_sc_info_UNCONNECTED(1 downto 0),
      m_sc_payld(140 downto 133) => NLW_inst_m_sc_payld_UNCONNECTED(140 downto 133),
      m_sc_payld(132 downto 130) => M_SC_AR_payld(10 downto 8),
      m_sc_payld(129 downto 105) => NLW_inst_m_sc_payld_UNCONNECTED(129 downto 105),
      m_sc_payld(104 downto 97) => M_SC_AR_payld(7 downto 0),
      m_sc_payld(96 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(96 downto 0),
      m_sc_recv(1) => M_SC_AR_recv(0),
      m_sc_recv(0) => '0',
      m_sc_req(1 downto 0) => NLW_inst_m_sc_req_UNCONNECTED(1 downto 0),
      m_sc_send(1) => M_SC_AR_send(0),
      m_sc_send(0) => NLW_inst_m_sc_send_UNCONNECTED(0),
      s_axis_arb_tdata(15 downto 0) => B"0000000000000000",
      s_axis_arb_tready => NLW_inst_s_axis_arb_tready_UNCONNECTED,
      s_axis_arb_tvalid => '0',
      s_sc_aclk => aclk,
      s_sc_aclken => '1',
      s_sc_aresetn => interconnect_aresetn(0),
      s_sc_info(0) => '1',
      s_sc_payld(140 downto 133) => B"00000000",
      s_sc_payld(132 downto 130) => S_SC_AR_payld(11 downto 9),
      s_sc_payld(129 downto 105) => B"0000000000000000000000000",
      s_sc_payld(104 downto 97) => S_SC_AR_payld(8 downto 1),
      s_sc_payld(96 downto 2) => B"00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000",
      s_sc_payld(1) => S_SC_AR_payld(0),
      s_sc_payld(0) => '0',
      s_sc_recv(0) => S_SC_AR_recv(0),
      s_sc_req(0) => '0',
      s_sc_send(0) => S_SC_AR_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_awni_0 is
  port (
    S_SC_AW_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AW_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AW_payld : out STD_LOGIC_VECTOR ( 10 downto 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AW_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AW_payld : in STD_LOGIC_VECTOR ( 10 downto 0 );
    M_SC_AW_recv : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_awni_0 : entity is "bd_afc3_awni_0";
end design_1_axi_smc_0_bd_afc3_awni_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_awni_0 is
  signal NLW_inst_m_axis_arb_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axis_arb_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axis_arb_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 140 downto 0 );
  signal NLW_inst_m_sc_req_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_sc_send_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of inst : label is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of inst : label is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of inst : label is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of inst : label is 3;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of inst : label is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of inst : label is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of inst : label is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of inst : label is 0;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of inst : label is 0;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of inst : label is 4;
  attribute C_M_NUM_BYTES_ARRAY : string;
  attribute C_M_NUM_BYTES_ARRAY of inst : label is "64'b0000000000000000000000000000010000000000000000000000000000000100";
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of inst : label is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of inst : label is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 2;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 141;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of inst : label is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of inst : label is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of inst : label is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of inst : label is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of inst : label is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of inst : label is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of inst : label is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of inst : label is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of inst : label is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of inst : label is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of inst : label is 0;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of inst : label is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of inst : label is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of inst : label is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of inst : label is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of inst : label is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of inst : label is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of inst : label is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of inst : label is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of inst : label is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of inst : label is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of inst : label is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of inst : label is 0;
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of inst : label is 16;
begin
inst: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized10\
     port map (
      m_axis_arb_tdata(15 downto 0) => NLW_inst_m_axis_arb_tdata_UNCONNECTED(15 downto 0),
      m_axis_arb_tready => '1',
      m_axis_arb_tvalid => NLW_inst_m_axis_arb_tvalid_UNCONNECTED,
      m_sc_aclk => '0',
      m_sc_aclken => '1',
      m_sc_aresetn => '0',
      m_sc_info(1 downto 0) => NLW_inst_m_sc_info_UNCONNECTED(1 downto 0),
      m_sc_payld(140 downto 133) => NLW_inst_m_sc_payld_UNCONNECTED(140 downto 133),
      m_sc_payld(132 downto 130) => M_SC_AW_payld(10 downto 8),
      m_sc_payld(129 downto 105) => NLW_inst_m_sc_payld_UNCONNECTED(129 downto 105),
      m_sc_payld(104 downto 97) => M_SC_AW_payld(7 downto 0),
      m_sc_payld(96 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(96 downto 0),
      m_sc_recv(1) => M_SC_AW_recv(0),
      m_sc_recv(0) => '0',
      m_sc_req(1 downto 0) => NLW_inst_m_sc_req_UNCONNECTED(1 downto 0),
      m_sc_send(1) => M_SC_AW_send(0),
      m_sc_send(0) => NLW_inst_m_sc_send_UNCONNECTED(0),
      s_axis_arb_tdata(15 downto 0) => B"0000000000000000",
      s_axis_arb_tready => NLW_inst_s_axis_arb_tready_UNCONNECTED,
      s_axis_arb_tvalid => '0',
      s_sc_aclk => aclk,
      s_sc_aclken => '1',
      s_sc_aresetn => interconnect_aresetn(0),
      s_sc_info(0) => '1',
      s_sc_payld(140 downto 133) => B"00000000",
      s_sc_payld(132 downto 130) => S_SC_AW_payld(10 downto 8),
      s_sc_payld(129 downto 105) => B"0000000000000000000000000",
      s_sc_payld(104 downto 97) => S_SC_AW_payld(7 downto 0),
      s_sc_payld(96 downto 0) => B"0000000110000000000100000000000000000000000000000000000000000000000000000000000000000000000000010",
      s_sc_recv(0) => S_SC_AW_recv(0),
      s_sc_req(0) => '0',
      s_sc_send(0) => S_SC_AW_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_bni_0 is
  port (
    M01_AXI_bready : out STD_LOGIC;
    M_SC_B_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_B_payld : out STD_LOGIC_VECTOR ( 1 downto 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_B_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_B_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_B_payld : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_SC_B_recv : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_bni_0 : entity is "bd_afc3_bni_0";
end design_1_axi_smc_0_bd_afc3_bni_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_bni_0 is
  signal NLW_inst_m_axis_arb_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axis_arb_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axis_arb_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_inst_m_sc_req_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_sc_recv_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of inst : label is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of inst : label is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of inst : label is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of inst : label is 4;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of inst : label is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of inst : label is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of inst : label is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of inst : label is 0;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of inst : label is 0;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of inst : label is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of inst : label is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of inst : label is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 2;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 7;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of inst : label is 3;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of inst : label is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of inst : label is 0;
  attribute C_S_NUM_BYTES_ARRAY : string;
  attribute C_S_NUM_BYTES_ARRAY of inst : label is "64'b0000000000000000000000000000010000000000000000000000000000000100";
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of inst : label is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of inst : label is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of inst : label is 0;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of inst : label is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of inst : label is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of inst : label is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of inst : label is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of inst : label is 0;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of inst : label is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of inst : label is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of inst : label is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of inst : label is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of inst : label is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of inst : label is 3;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of inst : label is 0;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of inst : label is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of inst : label is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of inst : label is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of inst : label is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of inst : label is 0;
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of inst : label is 16;
begin
inst: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized11\
     port map (
      m_axis_arb_tdata(15 downto 0) => NLW_inst_m_axis_arb_tdata_UNCONNECTED(15 downto 0),
      m_axis_arb_tready => '1',
      m_axis_arb_tvalid => NLW_inst_m_axis_arb_tvalid_UNCONNECTED,
      m_sc_aclk => '0',
      m_sc_aclken => '1',
      m_sc_aresetn => '0',
      m_sc_info(0) => NLW_inst_m_sc_info_UNCONNECTED(0),
      m_sc_payld(6 downto 5) => M_SC_B_payld(1 downto 0),
      m_sc_payld(4 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(4 downto 0),
      m_sc_recv(0) => M_SC_B_recv(0),
      m_sc_req(0) => NLW_inst_m_sc_req_UNCONNECTED(0),
      m_sc_send(0) => M_SC_B_send(0),
      s_axis_arb_tdata(15 downto 0) => B"0000000000000000",
      s_axis_arb_tready => NLW_inst_s_axis_arb_tready_UNCONNECTED,
      s_axis_arb_tvalid => '0',
      s_sc_aclk => aclk,
      s_sc_aclken => '1',
      s_sc_aresetn => interconnect_aresetn(0),
      s_sc_info(1 downto 0) => B"00",
      s_sc_payld(6 downto 5) => S_SC_B_payld(1 downto 0),
      s_sc_payld(4 downto 0) => B"00000",
      s_sc_recv(1) => M01_AXI_bready,
      s_sc_recv(0) => NLW_inst_s_sc_recv_UNCONNECTED(0),
      s_sc_req(1) => S_SC_B_req(0),
      s_sc_req(0) => '0',
      s_sc_send(1) => S_SC_B_send(0),
      s_sc_send(0) => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_rni_0 is
  port (
    M01_AXI_rready : out STD_LOGIC;
    M_SC_R_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_R_payld : out STD_LOGIC_VECTOR ( 33 downto 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_R_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_R_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_R_payld : in STD_LOGIC_VECTOR ( 33 downto 0 );
    M_SC_R_recv : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_rni_0 : entity is "bd_afc3_rni_0";
end design_1_axi_smc_0_bd_afc3_rni_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_rni_0 is
  signal NLW_inst_m_axis_arb_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axis_arb_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axis_arb_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 20 downto 0 );
  signal NLW_inst_m_sc_req_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_inst_s_sc_recv_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of inst : label is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of inst : label is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of inst : label is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of inst : label is 0;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of inst : label is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of inst : label is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of inst : label is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of inst : label is 0;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of inst : label is 0;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of inst : label is 4;
  attribute C_M_NUM_BYTES_ARRAY : integer;
  attribute C_M_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of inst : label is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of inst : label is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 1;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 2;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 53;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of inst : label is 3;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of inst : label is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of inst : label is 0;
  attribute C_S_NUM_BYTES_ARRAY : string;
  attribute C_S_NUM_BYTES_ARRAY of inst : label is "64'b0000000000000000000000000000010000000000000000000000000000000100";
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of inst : label is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of inst : label is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of inst : label is 512;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of inst : label is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of inst : label is 1;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of inst : label is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of inst : label is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of inst : label is 0;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of inst : label is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of inst : label is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of inst : label is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of inst : label is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of inst : label is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of inst : label is 3;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of inst : label is 1;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of inst : label is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of inst : label is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of inst : label is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of inst : label is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of inst : label is 0;
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of inst : label is 16;
begin
inst: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized12\
     port map (
      m_axis_arb_tdata(15 downto 0) => NLW_inst_m_axis_arb_tdata_UNCONNECTED(15 downto 0),
      m_axis_arb_tready => '1',
      m_axis_arb_tvalid => NLW_inst_m_axis_arb_tvalid_UNCONNECTED,
      m_sc_aclk => '0',
      m_sc_aclken => '1',
      m_sc_aresetn => '0',
      m_sc_info(0) => NLW_inst_m_sc_info_UNCONNECTED(0),
      m_sc_payld(52 downto 21) => M_SC_R_payld(33 downto 2),
      m_sc_payld(20) => NLW_inst_m_sc_payld_UNCONNECTED(20),
      m_sc_payld(19 downto 18) => M_SC_R_payld(1 downto 0),
      m_sc_payld(17 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(17 downto 0),
      m_sc_recv(0) => M_SC_R_recv(0),
      m_sc_req(0) => NLW_inst_m_sc_req_UNCONNECTED(0),
      m_sc_send(0) => M_SC_R_send(0),
      s_axis_arb_tdata(15 downto 0) => B"0000000000000000",
      s_axis_arb_tready => NLW_inst_s_axis_arb_tready_UNCONNECTED,
      s_axis_arb_tvalid => '0',
      s_sc_aclk => aclk,
      s_sc_aclken => '1',
      s_sc_aresetn => interconnect_aresetn(0),
      s_sc_info(1 downto 0) => B"00",
      s_sc_payld(52 downto 21) => S_SC_R_payld(33 downto 2),
      s_sc_payld(20) => '0',
      s_sc_payld(19 downto 18) => S_SC_R_payld(1 downto 0),
      s_sc_payld(17 downto 0) => B"000000000000000000",
      s_sc_recv(1) => M01_AXI_rready,
      s_sc_recv(0) => NLW_inst_s_sc_recv_UNCONNECTED(0),
      s_sc_req(1) => S_SC_R_req(0),
      s_sc_req(0) => '0',
      s_sc_send(1) => S_SC_R_send(0),
      s_sc_send(0) => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3_wni_0 is
  port (
    S_SC_W_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_W_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_W_payld : out STD_LOGIC_VECTOR ( 35 downto 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_W_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_W_payld : in STD_LOGIC_VECTOR ( 36 downto 0 );
    M_SC_W_recv : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3_wni_0 : entity is "bd_afc3_wni_0";
end design_1_axi_smc_0_bd_afc3_wni_0;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3_wni_0 is
  signal NLW_inst_m_axis_arb_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axis_arb_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_m_axis_arb_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal NLW_inst_m_sc_info_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_sc_payld_UNCONNECTED : STD_LOGIC_VECTOR ( 18 downto 0 );
  signal NLW_inst_m_sc_req_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_m_sc_send_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute C_ACLKEN_CONVERSION : integer;
  attribute C_ACLKEN_CONVERSION of inst : label is 0;
  attribute C_ACLK_RELATIONSHIP : integer;
  attribute C_ACLK_RELATIONSHIP of inst : label is 1;
  attribute C_ADDR_WIDTH : integer;
  attribute C_ADDR_WIDTH of inst : label is 32;
  attribute C_ARBITER_MODE : integer;
  attribute C_ARBITER_MODE of inst : label is 1;
  attribute C_CHANNEL : integer;
  attribute C_CHANNEL of inst : label is 1;
  attribute C_DISABLE_IP : integer;
  attribute C_DISABLE_IP of inst : label is 0;
  attribute C_ENABLE_PIPELINING : string;
  attribute C_ENABLE_PIPELINING of inst : label is "8'b00000001";
  attribute C_FAMILY : string;
  attribute C_FAMILY of inst : label is "zynq";
  attribute C_FIFO_IP : integer;
  attribute C_FIFO_IP of inst : label is 0;
  attribute C_FIFO_OUTPUT_REG : integer;
  attribute C_FIFO_OUTPUT_REG of inst : label is 1;
  attribute C_FIFO_SIZE : integer;
  attribute C_FIFO_SIZE of inst : label is 0;
  attribute C_FIFO_TYPE : integer;
  attribute C_FIFO_TYPE of inst : label is 0;
  attribute C_ID_WIDTH : integer;
  attribute C_ID_WIDTH of inst : label is 1;
  attribute C_MAX_PAYLD_BYTES : integer;
  attribute C_MAX_PAYLD_BYTES of inst : label is 4;
  attribute C_M_NUM_BYTES_ARRAY : string;
  attribute C_M_NUM_BYTES_ARRAY of inst : label is "64'b0000000000000000000000000000010000000000000000000000000000000100";
  attribute C_M_PIPELINE : integer;
  attribute C_M_PIPELINE of inst : label is 0;
  attribute C_M_SEND_PIPELINE : integer;
  attribute C_M_SEND_PIPELINE of inst : label is 0;
  attribute C_NUM_MI : integer;
  attribute C_NUM_MI of inst : label is 2;
  attribute C_NUM_OUTSTANDING : integer;
  attribute C_NUM_OUTSTANDING of inst : label is 8;
  attribute C_NUM_SI : integer;
  attribute C_NUM_SI of inst : label is 1;
  attribute C_PAYLD_WIDTH : integer;
  attribute C_PAYLD_WIDTH of inst : label is 55;
  attribute C_SC_ROUTE_WIDTH : integer;
  attribute C_SC_ROUTE_WIDTH of inst : label is 4;
  attribute C_SYNCHRONIZATION_STAGES : integer;
  attribute C_SYNCHRONIZATION_STAGES of inst : label is 3;
  attribute C_S_LATENCY : integer;
  attribute C_S_LATENCY of inst : label is 0;
  attribute C_S_NUM_BYTES_ARRAY : integer;
  attribute C_S_NUM_BYTES_ARRAY of inst : label is 4;
  attribute C_S_PIPELINE : integer;
  attribute C_S_PIPELINE of inst : label is 0;
  attribute C_USER_BITS_PER_BYTE : integer;
  attribute C_USER_BITS_PER_BYTE of inst : label is 0;
  attribute C_USER_WIDTH : integer;
  attribute C_USER_WIDTH of inst : label is 512;
  attribute LP_ACLK_RELATIONSHIP : integer;
  attribute LP_ACLK_RELATIONSHIP of inst : label is 1;
  attribute LP_ARBITER_MODE : integer;
  attribute LP_ARBITER_MODE of inst : label is 2;
  attribute LP_DT_REG : string;
  attribute LP_DT_REG of inst : label is "true";
  attribute LP_FIFO_OUTPUT_REG : integer;
  attribute LP_FIFO_OUTPUT_REG of inst : label is 1;
  attribute LP_FIFO_TYPE : integer;
  attribute LP_FIFO_TYPE of inst : label is 0;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_LOG_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_MAX_UPSIZER_RATIO : integer;
  attribute LP_LOG_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_LOG_NUM_MI : integer;
  attribute LP_LOG_NUM_MI of inst : label is 1;
  attribute LP_LOG_NUM_SI : integer;
  attribute LP_LOG_NUM_SI of inst : label is 1;
  attribute LP_MAX_DOWNSIZER_RATIO : integer;
  attribute LP_MAX_DOWNSIZER_RATIO of inst : label is 1;
  attribute LP_MAX_NUM_BYTES : integer;
  attribute LP_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_MAX_UPSIZER_RATIO : integer;
  attribute LP_MAX_UPSIZER_RATIO of inst : label is 1;
  attribute LP_M_MAX_NUM_BYTES : integer;
  attribute LP_M_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_M_MIN_NUM_BYTES : integer;
  attribute LP_M_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_M_STATIC_DWIDTH : integer;
  attribute LP_M_STATIC_DWIDTH of inst : label is 1;
  attribute LP_NODE_ADDR_WIDTH : integer;
  attribute LP_NODE_ADDR_WIDTH of inst : label is 32;
  attribute LP_NODE_ID_WIDTH : integer;
  attribute LP_NODE_ID_WIDTH of inst : label is 1;
  attribute LP_NODE_ROUTE_WIDTH : integer;
  attribute LP_NODE_ROUTE_WIDTH of inst : label is 4;
  attribute LP_NODE_USER_WIDTH : integer;
  attribute LP_NODE_USER_WIDTH of inst : label is 1;
  attribute LP_SYNCHRONIZATION_STAGES : integer;
  attribute LP_SYNCHRONIZATION_STAGES of inst : label is 2;
  attribute LP_S_AXIS_REG_SLICE_CONFIG : integer;
  attribute LP_S_AXIS_REG_SLICE_CONFIG of inst : label is 0;
  attribute LP_S_MAX_NUM_BYTES : integer;
  attribute LP_S_MAX_NUM_BYTES of inst : label is 4;
  attribute LP_S_MIN_NUM_BYTES : integer;
  attribute LP_S_MIN_NUM_BYTES of inst : label is 4;
  attribute LP_S_PIPELINE : integer;
  attribute LP_S_PIPELINE of inst : label is 0;
  attribute LP_S_STATIC_DWIDTH : integer;
  attribute LP_S_STATIC_DWIDTH of inst : label is 1;
  attribute LP_ZERO_ROUTE_WIDTH : integer;
  attribute LP_ZERO_ROUTE_WIDTH of inst : label is 0;
  attribute P_NUM_OUTSTANDING : integer;
  attribute P_NUM_OUTSTANDING of inst : label is 16;
begin
inst: entity work.\design_1_axi_smc_0_sc_node_v1_0_10_top__parameterized13\
     port map (
      m_axis_arb_tdata(15 downto 0) => NLW_inst_m_axis_arb_tdata_UNCONNECTED(15 downto 0),
      m_axis_arb_tready => '1',
      m_axis_arb_tvalid => NLW_inst_m_axis_arb_tvalid_UNCONNECTED,
      m_sc_aclk => '0',
      m_sc_aclken => '1',
      m_sc_aresetn => '0',
      m_sc_info(1 downto 0) => NLW_inst_m_sc_info_UNCONNECTED(1 downto 0),
      m_sc_payld(54 downto 19) => M_SC_W_payld(35 downto 0),
      m_sc_payld(18 downto 0) => NLW_inst_m_sc_payld_UNCONNECTED(18 downto 0),
      m_sc_recv(1) => M_SC_W_recv(0),
      m_sc_recv(0) => '0',
      m_sc_req(1 downto 0) => NLW_inst_m_sc_req_UNCONNECTED(1 downto 0),
      m_sc_send(1) => M_SC_W_send(0),
      m_sc_send(0) => NLW_inst_m_sc_send_UNCONNECTED(0),
      s_axis_arb_tdata(15 downto 0) => B"0000000000000000",
      s_axis_arb_tready => NLW_inst_s_axis_arb_tready_UNCONNECTED,
      s_axis_arb_tvalid => '0',
      s_sc_aclk => aclk,
      s_sc_aclken => '1',
      s_sc_aresetn => interconnect_aresetn(0),
      s_sc_info(0) => '0',
      s_sc_payld(54 downto 19) => S_SC_W_payld(36 downto 1),
      s_sc_payld(18 downto 2) => B"00000000000000000",
      s_sc_payld(1) => S_SC_W_payld(0),
      s_sc_payld(0) => '0',
      s_sc_recv(0) => S_SC_W_recv(0),
      s_sc_req(0) => '0',
      s_sc_send(0) => S_SC_W_send(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_i_nodes_imp_1MZRIMQ is
  port (
    S_SC_AR_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AR_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AR_payld : out STD_LOGIC_VECTOR ( 10 downto 0 );
    S_SC_AW_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AW_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AW_payld : out STD_LOGIC_VECTOR ( 10 downto 0 );
    M01_AXI_bready : out STD_LOGIC;
    M_SC_B_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_B_payld : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M01_AXI_rready : out STD_LOGIC;
    M_SC_R_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_R_payld : out STD_LOGIC_VECTOR ( 33 downto 0 );
    S_SC_W_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_W_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_W_payld : out STD_LOGIC_VECTOR ( 35 downto 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AR_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AR_payld : in STD_LOGIC_VECTOR ( 11 downto 0 );
    M_SC_AR_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AW_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AW_payld : in STD_LOGIC_VECTOR ( 10 downto 0 );
    M_SC_AW_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_B_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_B_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_B_payld : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_SC_B_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_R_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_R_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_R_payld : in STD_LOGIC_VECTOR ( 33 downto 0 );
    M_SC_R_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_W_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_W_payld : in STD_LOGIC_VECTOR ( 36 downto 0 );
    M_SC_W_recv : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_i_nodes_imp_1MZRIMQ : entity is "i_nodes_imp_1MZRIMQ";
end design_1_axi_smc_0_i_nodes_imp_1MZRIMQ;

architecture STRUCTURE of design_1_axi_smc_0_i_nodes_imp_1MZRIMQ is
  attribute x_core_info : string;
  attribute x_core_info of i_ar_node : label is "sc_node_v1_0_10_top,Vivado 2019.2";
  attribute x_core_info of i_aw_node : label is "sc_node_v1_0_10_top,Vivado 2019.2";
  attribute x_core_info of i_b_node : label is "sc_node_v1_0_10_top,Vivado 2019.2";
  attribute x_core_info of i_r_node : label is "sc_node_v1_0_10_top,Vivado 2019.2";
  attribute x_core_info of i_w_node : label is "sc_node_v1_0_10_top,Vivado 2019.2";
begin
i_ar_node: entity work.design_1_axi_smc_0_bd_afc3_arni_0
     port map (
      M_SC_AR_payld(10 downto 0) => M_SC_AR_payld(10 downto 0),
      M_SC_AR_recv(0) => M_SC_AR_recv(0),
      M_SC_AR_send(0) => M_SC_AR_send(0),
      S_SC_AR_payld(11 downto 0) => S_SC_AR_payld(11 downto 0),
      S_SC_AR_recv(0) => S_SC_AR_recv(0),
      S_SC_AR_send(0) => S_SC_AR_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
i_aw_node: entity work.design_1_axi_smc_0_bd_afc3_awni_0
     port map (
      M_SC_AW_payld(10 downto 0) => M_SC_AW_payld(10 downto 0),
      M_SC_AW_recv(0) => M_SC_AW_recv(0),
      M_SC_AW_send(0) => M_SC_AW_send(0),
      S_SC_AW_payld(10 downto 0) => S_SC_AW_payld(10 downto 0),
      S_SC_AW_recv(0) => S_SC_AW_recv(0),
      S_SC_AW_send(0) => S_SC_AW_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
i_b_node: entity work.design_1_axi_smc_0_bd_afc3_bni_0
     port map (
      M01_AXI_bready => M01_AXI_bready,
      M_SC_B_payld(1 downto 0) => M_SC_B_payld(1 downto 0),
      M_SC_B_recv(0) => M_SC_B_recv(0),
      M_SC_B_send(0) => M_SC_B_send(0),
      S_SC_B_payld(1 downto 0) => S_SC_B_payld(1 downto 0),
      S_SC_B_req(0) => S_SC_B_req(0),
      S_SC_B_send(0) => S_SC_B_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
i_r_node: entity work.design_1_axi_smc_0_bd_afc3_rni_0
     port map (
      M01_AXI_rready => M01_AXI_rready,
      M_SC_R_payld(33 downto 0) => M_SC_R_payld(33 downto 0),
      M_SC_R_recv(0) => M_SC_R_recv(0),
      M_SC_R_send(0) => M_SC_R_send(0),
      S_SC_R_payld(33 downto 0) => S_SC_R_payld(33 downto 0),
      S_SC_R_req(0) => S_SC_R_req(0),
      S_SC_R_send(0) => S_SC_R_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
i_w_node: entity work.design_1_axi_smc_0_bd_afc3_wni_0
     port map (
      M_SC_W_payld(35 downto 0) => M_SC_W_payld(35 downto 0),
      M_SC_W_recv(0) => M_SC_W_recv(0),
      M_SC_W_send(0) => M_SC_W_send(0),
      S_SC_W_payld(36 downto 0) => S_SC_W_payld(36 downto 0),
      S_SC_W_recv(0) => S_SC_W_recv(0),
      S_SC_W_send(0) => S_SC_W_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_switchboards_imp_4N4PBE is
  port (
    M01_AXI_bready : out STD_LOGIC;
    S_SC_AR_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AR_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AR_payld : out STD_LOGIC_VECTOR ( 10 downto 0 );
    S_SC_AW_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AW_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_AW_payld : out STD_LOGIC_VECTOR ( 10 downto 0 );
    M_SC_B_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_B_payld : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M01_AXI_rready : out STD_LOGIC;
    M_SC_R_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_R_payld : out STD_LOGIC_VECTOR ( 33 downto 0 );
    S_SC_W_recv : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_W_send : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_W_payld : out STD_LOGIC_VECTOR ( 35 downto 0 );
    M01_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    aclk : in STD_LOGIC;
    interconnect_aresetn : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AR_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AR_payld : in STD_LOGIC_VECTOR ( 11 downto 0 );
    M_SC_AR_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AW_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_AW_payld : in STD_LOGIC_VECTOR ( 10 downto 0 );
    M_SC_AW_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_B_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_B_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_B_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_R_req : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_R_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_SC_R_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_W_send : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_SC_W_payld : in STD_LOGIC_VECTOR ( 36 downto 0 );
    M_SC_W_recv : in STD_LOGIC_VECTOR ( 0 to 0 );
    S01_SC_R_payld : in STD_LOGIC_VECTOR ( 33 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_switchboards_imp_4N4PBE : entity is "switchboards_imp_4N4PBE";
end design_1_axi_smc_0_switchboards_imp_4N4PBE;

architecture STRUCTURE of design_1_axi_smc_0_switchboards_imp_4N4PBE is
  signal \^m01_axi_bready\ : STD_LOGIC;
  signal \^m01_axi_rready\ : STD_LOGIC;
  signal b_la_out_swbd_M00_SC_PAYLD : STD_LOGIC_VECTOR ( 6 downto 5 );
  signal r_la_out_swbd_M00_SC_PAYLD : STD_LOGIC_VECTOR ( 52 downto 18 );
  attribute x_core_info : string;
  attribute x_core_info of b_la_out_swbd : label is "sc_switchboard_v1_0_6_top,Vivado 2019.2";
  attribute x_core_info of r_la_out_swbd : label is "sc_switchboard_v1_0_6_top,Vivado 2019.2";
begin
  M01_AXI_bready <= \^m01_axi_bready\;
  M01_AXI_rready <= \^m01_axi_rready\;
b_la_out_swbd: entity work.design_1_axi_smc_0_bd_afc3_boutsw_0
     port map (
      M01_AXI_bready => \^m01_axi_bready\,
      M01_AXI_bresp(1 downto 0) => M01_AXI_bresp(1 downto 0),
      S_SC_B_payld(1 downto 0) => b_la_out_swbd_M00_SC_PAYLD(6 downto 5)
    );
i_nodes: entity work.design_1_axi_smc_0_i_nodes_imp_1MZRIMQ
     port map (
      M01_AXI_bready => \^m01_axi_bready\,
      M01_AXI_rready => \^m01_axi_rready\,
      M_SC_AR_payld(10 downto 0) => M_SC_AR_payld(10 downto 0),
      M_SC_AR_recv(0) => M_SC_AR_recv(0),
      M_SC_AR_send(0) => M_SC_AR_send(0),
      M_SC_AW_payld(10 downto 0) => M_SC_AW_payld(10 downto 0),
      M_SC_AW_recv(0) => M_SC_AW_recv(0),
      M_SC_AW_send(0) => M_SC_AW_send(0),
      M_SC_B_payld(1 downto 0) => M_SC_B_payld(1 downto 0),
      M_SC_B_recv(0) => M_SC_B_recv(0),
      M_SC_B_send(0) => M_SC_B_send(0),
      M_SC_R_payld(33 downto 0) => M_SC_R_payld(33 downto 0),
      M_SC_R_recv(0) => M_SC_R_recv(0),
      M_SC_R_send(0) => M_SC_R_send(0),
      M_SC_W_payld(35 downto 0) => M_SC_W_payld(35 downto 0),
      M_SC_W_recv(0) => M_SC_W_recv(0),
      M_SC_W_send(0) => M_SC_W_send(0),
      S_SC_AR_payld(11 downto 0) => S_SC_AR_payld(11 downto 0),
      S_SC_AR_recv(0) => S_SC_AR_recv(0),
      S_SC_AR_send(0) => S_SC_AR_send(0),
      S_SC_AW_payld(10 downto 0) => S_SC_AW_payld(10 downto 0),
      S_SC_AW_recv(0) => S_SC_AW_recv(0),
      S_SC_AW_send(0) => S_SC_AW_send(0),
      S_SC_B_payld(1 downto 0) => b_la_out_swbd_M00_SC_PAYLD(6 downto 5),
      S_SC_B_req(0) => S_SC_B_req(0),
      S_SC_B_send(0) => S_SC_B_send(0),
      S_SC_R_payld(33 downto 2) => r_la_out_swbd_M00_SC_PAYLD(52 downto 21),
      S_SC_R_payld(1 downto 0) => r_la_out_swbd_M00_SC_PAYLD(19 downto 18),
      S_SC_R_req(0) => S_SC_R_req(0),
      S_SC_R_send(0) => S_SC_R_send(0),
      S_SC_W_payld(36 downto 0) => S_SC_W_payld(36 downto 0),
      S_SC_W_recv(0) => S_SC_W_recv(0),
      S_SC_W_send(0) => S_SC_W_send(0),
      aclk => aclk,
      interconnect_aresetn(0) => interconnect_aresetn(0)
    );
r_la_out_swbd: entity work.design_1_axi_smc_0_bd_afc3_routsw_0
     port map (
      M01_AXI_rready => \^m01_axi_rready\,
      S01_SC_R_payld(33 downto 0) => S01_SC_R_payld(33 downto 0),
      m_sc_payld(33 downto 2) => r_la_out_swbd_M00_SC_PAYLD(52 downto 21),
      m_sc_payld(1 downto 0) => r_la_out_swbd_M00_SC_PAYLD(19 downto 18)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0_bd_afc3 is
  port (
    M00_AXI_araddr : out STD_LOGIC;
    M00_AXI_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M00_AXI_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M00_AXI_arid : out STD_LOGIC;
    M00_AXI_arlen : out STD_LOGIC;
    M00_AXI_arlock : out STD_LOGIC;
    M00_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M00_AXI_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M00_AXI_arready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_arregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M00_AXI_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M00_AXI_aruser : out STD_LOGIC;
    M00_AXI_arvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_awaddr : out STD_LOGIC;
    M00_AXI_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M00_AXI_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M00_AXI_awid : out STD_LOGIC;
    M00_AXI_awlen : out STD_LOGIC;
    M00_AXI_awlock : out STD_LOGIC;
    M00_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M00_AXI_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M00_AXI_awready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_awregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M00_AXI_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M00_AXI_awuser : out STD_LOGIC;
    M00_AXI_awvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_bid : in STD_LOGIC;
    M00_AXI_bready : out STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M00_AXI_buser : in STD_LOGIC;
    M00_AXI_bvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_rdata : in STD_LOGIC;
    M00_AXI_rid : in STD_LOGIC;
    M00_AXI_rlast : in STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_rready : out STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M00_AXI_ruser : in STD_LOGIC;
    M00_AXI_rvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_wdata : out STD_LOGIC;
    M00_AXI_wid : out STD_LOGIC;
    M00_AXI_wlast : out STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_wready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_wstrb : out STD_LOGIC;
    M00_AXI_wuser : out STD_LOGIC;
    M00_AXI_wvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_araddr : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M01_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M01_AXI_arready : in STD_LOGIC;
    M01_AXI_arvalid : out STD_LOGIC;
    M01_AXI_awaddr : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M01_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M01_AXI_awready : in STD_LOGIC;
    M01_AXI_awvalid : out STD_LOGIC;
    M01_AXI_bready : out STD_LOGIC;
    M01_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M01_AXI_bvalid : in STD_LOGIC;
    M01_AXI_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M01_AXI_rready : out STD_LOGIC;
    M01_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M01_AXI_rvalid : in STD_LOGIC;
    M01_AXI_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M01_AXI_wready : in STD_LOGIC;
    M01_AXI_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M01_AXI_wvalid : out STD_LOGIC;
    S00_AXI_araddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S00_AXI_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_arid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_arlen : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_arlock : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_arready : out STD_LOGIC;
    S00_AXI_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_arvalid : in STD_LOGIC;
    S00_AXI_awaddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S00_AXI_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_awid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_awlen : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_awlock : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_awready : out STD_LOGIC;
    S00_AXI_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_awvalid : in STD_LOGIC;
    S00_AXI_bid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_bready : in STD_LOGIC;
    S00_AXI_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_bvalid : out STD_LOGIC;
    S00_AXI_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    S00_AXI_rid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_rlast : out STD_LOGIC;
    S00_AXI_rready : in STD_LOGIC;
    S00_AXI_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_rvalid : out STD_LOGIC;
    S00_AXI_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S00_AXI_wid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_wlast : in STD_LOGIC;
    S00_AXI_wready : out STD_LOGIC;
    S00_AXI_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_wvalid : in STD_LOGIC;
    aclk : in STD_LOGIC;
    aresetn : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_axi_smc_0_bd_afc3 : entity is "bd_afc3";
  attribute hw_handoff : string;
  attribute hw_handoff of design_1_axi_smc_0_bd_afc3 : entity is "design_1_axi_smc_0.hwdef";
end design_1_axi_smc_0_bd_afc3;

architecture STRUCTURE of design_1_axi_smc_0_bd_afc3 is
  signal \<const0>\ : STD_LOGIC;
  signal \^m01_axi_bready\ : STD_LOGIC;
  signal \^m01_axi_rready\ : STD_LOGIC;
  signal ar_la_in_swbd_M00_SC_RECV : STD_LOGIC;
  signal aw_la_in_swbd_M00_SC_RECV : STD_LOGIC;
  signal clk_map_S00_ARESETN : STD_LOGIC;
  signal i_nodes_M_SC_AR_SEND : STD_LOGIC_VECTOR ( 1 to 1 );
  signal i_nodes_M_SC_AW_SEND : STD_LOGIC_VECTOR ( 1 to 1 );
  signal i_nodes_M_SC_B_PAYLD : STD_LOGIC_VECTOR ( 6 downto 5 );
  signal i_nodes_M_SC_B_SEND : STD_LOGIC;
  signal i_nodes_M_SC_R_PAYLD : STD_LOGIC_VECTOR ( 52 downto 18 );
  signal i_nodes_M_SC_R_SEND : STD_LOGIC;
  signal i_nodes_M_SC_W_SEND : STD_LOGIC_VECTOR ( 1 to 1 );
  signal m01_nodes_M_SC_AR_SEND : STD_LOGIC;
  signal m01_nodes_M_SC_AW_SEND : STD_LOGIC;
  signal m01_nodes_M_SC_B_REQ : STD_LOGIC;
  signal m01_nodes_M_SC_B_SEND : STD_LOGIC;
  signal m01_nodes_M_SC_R_REQ : STD_LOGIC;
  signal m01_nodes_M_SC_R_SEND : STD_LOGIC;
  signal m01_nodes_M_SC_W_SEND : STD_LOGIC;
  signal m01_sc2axi_M_AXI_ARREADY : STD_LOGIC;
  signal m01_sc2axi_M_AXI_AWREADY : STD_LOGIC;
  signal m01_sc2axi_M_AXI_WREADY : STD_LOGIC;
  signal s00_entry_pipeline_m_axi_ARADDR : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal s00_entry_pipeline_m_axi_ARPROT : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal s00_entry_pipeline_m_axi_ARUSER : STD_LOGIC_VECTOR ( 2 to 2 );
  signal s00_entry_pipeline_m_axi_ARVALID : STD_LOGIC;
  signal s00_entry_pipeline_m_axi_AWADDR : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal s00_entry_pipeline_m_axi_AWVALID : STD_LOGIC;
  signal s00_entry_pipeline_m_axi_BREADY : STD_LOGIC;
  signal s00_entry_pipeline_m_axi_RREADY : STD_LOGIC;
  signal s00_entry_pipeline_m_axi_WDATA : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal s00_entry_pipeline_m_axi_WSTRB : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal s00_entry_pipeline_m_axi_WVALID : STD_LOGIC;
  signal s00_mmu_M_AXI_AWPROT : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal s00_mmu_M_AXI_WUSER : STD_LOGIC_VECTOR ( 2 to 2 );
  signal s00_nodes_M_SC_AR_SEND : STD_LOGIC;
  signal s00_nodes_M_SC_AW_SEND : STD_LOGIC;
  signal s00_nodes_M_SC_B_SEND : STD_LOGIC;
  signal s00_nodes_M_SC_R_SEND : STD_LOGIC;
  signal s00_nodes_M_SC_W_SEND : STD_LOGIC;
  signal w_la_in_swbd_M00_SC_RECV : STD_LOGIC;
  attribute x_interface_info : string;
  attribute x_interface_info of M00_AXI_araddr : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARADDR";
  attribute x_interface_parameter : string;
  attribute x_interface_parameter of M00_AXI_araddr : signal is "XIL_INTERFACENAME M00_AXI, ADDR_WIDTH 32, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, DATA_WIDTH 32, FREQ_HZ 100000000, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 1, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 1, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 1, NUM_WRITE_THREADS 1, PHASE 0.000, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0";
  attribute x_interface_info of M00_AXI_arid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARID";
  attribute x_interface_info of M00_AXI_arlen : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARLEN";
  attribute x_interface_info of M00_AXI_arlock : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARLOCK";
  attribute x_interface_info of M00_AXI_aruser : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARUSER";
  attribute x_interface_info of M00_AXI_awaddr : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWADDR";
  attribute x_interface_info of M00_AXI_awid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWID";
  attribute x_interface_info of M00_AXI_awlen : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWLEN";
  attribute x_interface_info of M00_AXI_awlock : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWLOCK";
  attribute x_interface_info of M00_AXI_awuser : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWUSER";
  attribute x_interface_info of M00_AXI_bid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI BID";
  attribute x_interface_info of M00_AXI_buser : signal is "xilinx.com:interface:aximm:1.0 M00_AXI BUSER";
  attribute x_interface_info of M00_AXI_rdata : signal is "xilinx.com:interface:aximm:1.0 M00_AXI RDATA";
  attribute x_interface_info of M00_AXI_rid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI RID";
  attribute x_interface_info of M00_AXI_ruser : signal is "xilinx.com:interface:aximm:1.0 M00_AXI RUSER";
  attribute x_interface_info of M00_AXI_wdata : signal is "xilinx.com:interface:aximm:1.0 M00_AXI WDATA";
  attribute x_interface_info of M00_AXI_wid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI WID";
  attribute x_interface_info of M00_AXI_wstrb : signal is "xilinx.com:interface:aximm:1.0 M00_AXI WSTRB";
  attribute x_interface_info of M00_AXI_wuser : signal is "xilinx.com:interface:aximm:1.0 M00_AXI WUSER";
  attribute x_interface_info of M01_AXI_arready : signal is "xilinx.com:interface:aximm:1.0 M01_AXI ARREADY";
  attribute x_interface_info of M01_AXI_arvalid : signal is "xilinx.com:interface:aximm:1.0 M01_AXI ARVALID";
  attribute x_interface_info of M01_AXI_awready : signal is "xilinx.com:interface:aximm:1.0 M01_AXI AWREADY";
  attribute x_interface_info of M01_AXI_awvalid : signal is "xilinx.com:interface:aximm:1.0 M01_AXI AWVALID";
  attribute x_interface_info of M01_AXI_bready : signal is "xilinx.com:interface:aximm:1.0 M01_AXI BREADY";
  attribute x_interface_info of M01_AXI_bvalid : signal is "xilinx.com:interface:aximm:1.0 M01_AXI BVALID";
  attribute x_interface_info of M01_AXI_rready : signal is "xilinx.com:interface:aximm:1.0 M01_AXI RREADY";
  attribute x_interface_info of M01_AXI_rvalid : signal is "xilinx.com:interface:aximm:1.0 M01_AXI RVALID";
  attribute x_interface_info of M01_AXI_wready : signal is "xilinx.com:interface:aximm:1.0 M01_AXI WREADY";
  attribute x_interface_info of M01_AXI_wvalid : signal is "xilinx.com:interface:aximm:1.0 M01_AXI WVALID";
  attribute x_interface_info of S00_AXI_arready : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARREADY";
  attribute x_interface_info of S00_AXI_arvalid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARVALID";
  attribute x_interface_info of S00_AXI_awready : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWREADY";
  attribute x_interface_info of S00_AXI_awvalid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWVALID";
  attribute x_interface_info of S00_AXI_bready : signal is "xilinx.com:interface:aximm:1.0 S00_AXI BREADY";
  attribute x_interface_info of S00_AXI_bvalid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI BVALID";
  attribute x_interface_info of S00_AXI_rlast : signal is "xilinx.com:interface:aximm:1.0 S00_AXI RLAST";
  attribute x_interface_info of S00_AXI_rready : signal is "xilinx.com:interface:aximm:1.0 S00_AXI RREADY";
  attribute x_interface_parameter of S00_AXI_rready : signal is "XIL_INTERFACENAME S_AXI, DATA_WIDTH 32, PROTOCOL AXI3, FREQ_HZ 100000000, ID_WIDTH 12, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 8, NUM_WRITE_OUTSTANDING 8, MAX_BURST_LENGTH 16, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 4, NUM_WRITE_THREADS 4, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0";
  attribute x_interface_info of S00_AXI_rvalid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI RVALID";
  attribute x_interface_info of S00_AXI_wlast : signal is "xilinx.com:interface:aximm:1.0 S00_AXI WLAST";
  attribute x_interface_info of S00_AXI_wready : signal is "xilinx.com:interface:aximm:1.0 S00_AXI WREADY";
  attribute x_interface_info of S00_AXI_wvalid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI WVALID";
  attribute x_interface_info of aclk : signal is "xilinx.com:signal:clock:1.0 clock CLK";
  attribute x_interface_parameter of aclk : signal is "XIL_INTERFACENAME clock, ASSOCIATED_RESET mb_reset:bus_struct_reset:interconnect_aresetn:peripheral_aresetn:peripheral_reset, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, INSERT_VIP 0";
  attribute x_interface_info of aresetn : signal is "xilinx.com:signal:reset:1.0 aux_reset RST";
  attribute x_interface_parameter of aresetn : signal is "XIL_INTERFACENAME aux_reset, POLARITY ACTIVE_LOW, INSERT_VIP 0";
  attribute x_interface_info of M00_AXI_arburst : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARBURST";
  attribute x_interface_info of M00_AXI_arcache : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARCACHE";
  attribute x_interface_info of M00_AXI_arprot : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARPROT";
  attribute x_interface_info of M00_AXI_arqos : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARQOS";
  attribute x_interface_info of M00_AXI_arready : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARREADY";
  attribute x_interface_info of M00_AXI_arregion : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARREGION";
  attribute x_interface_info of M00_AXI_arsize : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARSIZE";
  attribute x_interface_info of M00_AXI_arvalid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARVALID";
  attribute x_interface_info of M00_AXI_awburst : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWBURST";
  attribute x_interface_info of M00_AXI_awcache : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWCACHE";
  attribute x_interface_info of M00_AXI_awprot : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWPROT";
  attribute x_interface_info of M00_AXI_awqos : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWQOS";
  attribute x_interface_info of M00_AXI_awready : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWREADY";
  attribute x_interface_info of M00_AXI_awregion : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWREGION";
  attribute x_interface_info of M00_AXI_awsize : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWSIZE";
  attribute x_interface_info of M00_AXI_awvalid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWVALID";
  attribute x_interface_info of M00_AXI_bready : signal is "xilinx.com:interface:aximm:1.0 M00_AXI BREADY";
  attribute x_interface_info of M00_AXI_bresp : signal is "xilinx.com:interface:aximm:1.0 M00_AXI BRESP";
  attribute x_interface_info of M00_AXI_bvalid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI BVALID";
  attribute x_interface_info of M00_AXI_rlast : signal is "xilinx.com:interface:aximm:1.0 M00_AXI RLAST";
  attribute x_interface_info of M00_AXI_rready : signal is "xilinx.com:interface:aximm:1.0 M00_AXI RREADY";
  attribute x_interface_info of M00_AXI_rresp : signal is "xilinx.com:interface:aximm:1.0 M00_AXI RRESP";
  attribute x_interface_info of M00_AXI_rvalid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI RVALID";
  attribute x_interface_info of M00_AXI_wlast : signal is "xilinx.com:interface:aximm:1.0 M00_AXI WLAST";
  attribute x_interface_info of M00_AXI_wready : signal is "xilinx.com:interface:aximm:1.0 M00_AXI WREADY";
  attribute x_interface_info of M00_AXI_wvalid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI WVALID";
  attribute x_interface_info of M01_AXI_araddr : signal is "xilinx.com:interface:aximm:1.0 M01_AXI ARADDR";
  attribute x_interface_parameter of M01_AXI_araddr : signal is "XIL_INTERFACENAME M01_AXI, ADDR_WIDTH 8, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, DATA_WIDTH 32, FREQ_HZ 100000000, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.000, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0";
  attribute x_interface_info of M01_AXI_arprot : signal is "xilinx.com:interface:aximm:1.0 M01_AXI ARPROT";
  attribute x_interface_info of M01_AXI_awaddr : signal is "xilinx.com:interface:aximm:1.0 M01_AXI AWADDR";
  attribute x_interface_info of M01_AXI_awprot : signal is "xilinx.com:interface:aximm:1.0 M01_AXI AWPROT";
  attribute x_interface_info of M01_AXI_bresp : signal is "xilinx.com:interface:aximm:1.0 M01_AXI BRESP";
  attribute x_interface_info of M01_AXI_rdata : signal is "xilinx.com:interface:aximm:1.0 M01_AXI RDATA";
  attribute x_interface_info of M01_AXI_rresp : signal is "xilinx.com:interface:aximm:1.0 M01_AXI RRESP";
  attribute x_interface_info of M01_AXI_wdata : signal is "xilinx.com:interface:aximm:1.0 M01_AXI WDATA";
  attribute x_interface_info of M01_AXI_wstrb : signal is "xilinx.com:interface:aximm:1.0 M01_AXI WSTRB";
  attribute x_interface_info of S00_AXI_araddr : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARADDR";
  attribute x_interface_parameter of S00_AXI_araddr : signal is "XIL_INTERFACENAME S00_AXI, ADDR_WIDTH 32, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, DATA_WIDTH 32, FREQ_HZ 100000000, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 12, INSERT_VIP 0, MAX_BURST_LENGTH 16, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 4, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 4, PHASE 0.000, PROTOCOL AXI3, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0";
  attribute x_interface_info of S00_AXI_arburst : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARBURST";
  attribute x_interface_info of S00_AXI_arcache : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARCACHE";
  attribute x_interface_info of S00_AXI_arid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARID";
  attribute x_interface_info of S00_AXI_arlen : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARLEN";
  attribute x_interface_info of S00_AXI_arlock : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARLOCK";
  attribute x_interface_info of S00_AXI_arprot : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARPROT";
  attribute x_interface_info of S00_AXI_arqos : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARQOS";
  attribute x_interface_info of S00_AXI_arsize : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARSIZE";
  attribute x_interface_info of S00_AXI_awaddr : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWADDR";
  attribute x_interface_info of S00_AXI_awburst : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWBURST";
  attribute x_interface_info of S00_AXI_awcache : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWCACHE";
  attribute x_interface_info of S00_AXI_awid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWID";
  attribute x_interface_info of S00_AXI_awlen : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWLEN";
  attribute x_interface_info of S00_AXI_awlock : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWLOCK";
  attribute x_interface_info of S00_AXI_awprot : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWPROT";
  attribute x_interface_info of S00_AXI_awqos : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWQOS";
  attribute x_interface_info of S00_AXI_awsize : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWSIZE";
  attribute x_interface_info of S00_AXI_bid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI BID";
  attribute x_interface_info of S00_AXI_bresp : signal is "xilinx.com:interface:aximm:1.0 S00_AXI BRESP";
  attribute x_interface_info of S00_AXI_rdata : signal is "xilinx.com:interface:aximm:1.0 S00_AXI RDATA";
  attribute x_interface_info of S00_AXI_rid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI RID";
  attribute x_interface_info of S00_AXI_rresp : signal is "xilinx.com:interface:aximm:1.0 S00_AXI RRESP";
  attribute x_interface_info of S00_AXI_wdata : signal is "xilinx.com:interface:aximm:1.0 S00_AXI WDATA";
  attribute x_interface_info of S00_AXI_wid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI WID";
  attribute x_interface_info of S00_AXI_wstrb : signal is "xilinx.com:interface:aximm:1.0 S00_AXI WSTRB";
begin
  M00_AXI_araddr <= \<const0>\;
  M00_AXI_arburst(1) <= \<const0>\;
  M00_AXI_arburst(0) <= \<const0>\;
  M00_AXI_arcache(3) <= \<const0>\;
  M00_AXI_arcache(2) <= \<const0>\;
  M00_AXI_arcache(1) <= \<const0>\;
  M00_AXI_arcache(0) <= \<const0>\;
  M00_AXI_arid <= \<const0>\;
  M00_AXI_arlen <= \<const0>\;
  M00_AXI_arlock <= \<const0>\;
  M00_AXI_arprot(2) <= \<const0>\;
  M00_AXI_arprot(1) <= \<const0>\;
  M00_AXI_arprot(0) <= \<const0>\;
  M00_AXI_arqos(3) <= \<const0>\;
  M00_AXI_arqos(2) <= \<const0>\;
  M00_AXI_arqos(1) <= \<const0>\;
  M00_AXI_arqos(0) <= \<const0>\;
  M00_AXI_arregion(3) <= \<const0>\;
  M00_AXI_arregion(2) <= \<const0>\;
  M00_AXI_arregion(1) <= \<const0>\;
  M00_AXI_arregion(0) <= \<const0>\;
  M00_AXI_arsize(2) <= \<const0>\;
  M00_AXI_arsize(1) <= \<const0>\;
  M00_AXI_arsize(0) <= \<const0>\;
  M00_AXI_aruser <= \<const0>\;
  M00_AXI_arvalid(0) <= \<const0>\;
  M00_AXI_awaddr <= \<const0>\;
  M00_AXI_awburst(1) <= \<const0>\;
  M00_AXI_awburst(0) <= \<const0>\;
  M00_AXI_awcache(3) <= \<const0>\;
  M00_AXI_awcache(2) <= \<const0>\;
  M00_AXI_awcache(1) <= \<const0>\;
  M00_AXI_awcache(0) <= \<const0>\;
  M00_AXI_awid <= \<const0>\;
  M00_AXI_awlen <= \<const0>\;
  M00_AXI_awlock <= \<const0>\;
  M00_AXI_awprot(2) <= \<const0>\;
  M00_AXI_awprot(1) <= \<const0>\;
  M00_AXI_awprot(0) <= \<const0>\;
  M00_AXI_awqos(3) <= \<const0>\;
  M00_AXI_awqos(2) <= \<const0>\;
  M00_AXI_awqos(1) <= \<const0>\;
  M00_AXI_awqos(0) <= \<const0>\;
  M00_AXI_awregion(3) <= \<const0>\;
  M00_AXI_awregion(2) <= \<const0>\;
  M00_AXI_awregion(1) <= \<const0>\;
  M00_AXI_awregion(0) <= \<const0>\;
  M00_AXI_awsize(2) <= \<const0>\;
  M00_AXI_awsize(1) <= \<const0>\;
  M00_AXI_awsize(0) <= \<const0>\;
  M00_AXI_awuser <= \<const0>\;
  M00_AXI_awvalid(0) <= \<const0>\;
  M00_AXI_bready(0) <= \<const0>\;
  M00_AXI_rready(0) <= \<const0>\;
  M00_AXI_wdata <= \<const0>\;
  M00_AXI_wid <= \<const0>\;
  M00_AXI_wlast(0) <= \<const0>\;
  M00_AXI_wstrb <= \<const0>\;
  M00_AXI_wuser <= \<const0>\;
  M00_AXI_wvalid(0) <= \<const0>\;
  M01_AXI_bready <= \^m01_axi_bready\;
  M01_AXI_rready <= \^m01_axi_rready\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
clk_map: entity work.design_1_axi_smc_0_clk_map_imp_5Y9LOC
     port map (
      aclk => aclk,
      aresetn => aresetn,
      interconnect_aresetn(0) => clk_map_S00_ARESETN
    );
m01_exit_pipeline: entity work.design_1_axi_smc_0_m01_exit_pipeline_imp_1XMPFJB
     port map (
      M01_AXI_arready => M01_AXI_arready,
      M01_AXI_arvalid => M01_AXI_arvalid,
      M01_AXI_awready => M01_AXI_awready,
      M01_AXI_awvalid => M01_AXI_awvalid,
      M01_AXI_bready => \^m01_axi_bready\,
      M01_AXI_bvalid => M01_AXI_bvalid,
      M01_AXI_rready => \^m01_axi_rready\,
      M01_AXI_rvalid => M01_AXI_rvalid,
      M01_AXI_wready => M01_AXI_wready,
      M01_AXI_wvalid => M01_AXI_wvalid,
      M_SC_AR_recv(0) => m01_sc2axi_M_AXI_ARREADY,
      M_SC_AR_send(0) => m01_nodes_M_SC_AR_SEND,
      M_SC_AW_recv(0) => m01_sc2axi_M_AXI_AWREADY,
      M_SC_AW_send(0) => m01_nodes_M_SC_AW_SEND,
      M_SC_W_recv(0) => m01_sc2axi_M_AXI_WREADY,
      M_SC_W_send(0) => m01_nodes_M_SC_W_SEND,
      aclk => aclk,
      interconnect_aresetn(0) => clk_map_S00_ARESETN
    );
m01_nodes: entity work.design_1_axi_smc_0_m01_nodes_imp_94N5OD
     port map (
      M01_AXI_arvalid(0) => i_nodes_M_SC_AR_SEND(1),
      M01_AXI_awvalid(0) => i_nodes_M_SC_AW_SEND(1),
      M01_AXI_bready => \^m01_axi_bready\,
      M01_AXI_bvalid => M01_AXI_bvalid,
      M01_AXI_rready => \^m01_axi_rready\,
      M01_AXI_rvalid => M01_AXI_rvalid,
      M01_AXI_wvalid(0) => i_nodes_M_SC_W_SEND(1),
      M_SC_AR_send(0) => m01_nodes_M_SC_AR_SEND,
      M_SC_AW_send(0) => m01_nodes_M_SC_AW_SEND,
      M_SC_B_req(0) => m01_nodes_M_SC_B_REQ,
      M_SC_B_send(0) => m01_nodes_M_SC_B_SEND,
      M_SC_R_req(0) => m01_nodes_M_SC_R_REQ,
      M_SC_R_send(0) => m01_nodes_M_SC_R_SEND,
      M_SC_W_send(0) => m01_nodes_M_SC_W_SEND,
      aclk => aclk,
      interconnect_aresetn(0) => clk_map_S00_ARESETN
    );
s00_entry_pipeline: entity work.design_1_axi_smc_0_s00_entry_pipeline_imp_USCCV8
     port map (
      M_SC_B_payld(1 downto 0) => i_nodes_M_SC_B_PAYLD(6 downto 5),
      M_SC_B_send(0) => s00_nodes_M_SC_B_SEND,
      M_SC_R_payld(33 downto 2) => i_nodes_M_SC_R_PAYLD(52 downto 21),
      M_SC_R_payld(1 downto 0) => i_nodes_M_SC_R_PAYLD(19 downto 18),
      M_SC_R_send(0) => s00_nodes_M_SC_R_SEND,
      S00_AXI_araddr(23 downto 8) => S00_AXI_araddr(31 downto 16),
      S00_AXI_araddr(7 downto 0) => S00_AXI_araddr(7 downto 0),
      S00_AXI_arburst(0) => S00_AXI_arburst(0),
      S00_AXI_arid(11 downto 0) => S00_AXI_arid(11 downto 0),
      S00_AXI_arlen(3 downto 0) => S00_AXI_arlen(3 downto 0),
      S00_AXI_arprot(2 downto 0) => S00_AXI_arprot(2 downto 0),
      S00_AXI_arready => S00_AXI_arready,
      S00_AXI_arsize(2 downto 0) => S00_AXI_arsize(2 downto 0),
      S00_AXI_arvalid => S00_AXI_arvalid,
      S00_AXI_awaddr(23 downto 8) => S00_AXI_awaddr(31 downto 16),
      S00_AXI_awaddr(7 downto 0) => S00_AXI_awaddr(7 downto 0),
      S00_AXI_awburst(0) => S00_AXI_awburst(0),
      S00_AXI_awid(11 downto 0) => S00_AXI_awid(11 downto 0),
      S00_AXI_awlen(3 downto 0) => S00_AXI_awlen(3 downto 0),
      S00_AXI_awprot(2 downto 0) => S00_AXI_awprot(2 downto 0),
      S00_AXI_awready => S00_AXI_awready,
      S00_AXI_awsize(2 downto 0) => S00_AXI_awsize(2 downto 0),
      S00_AXI_awvalid => S00_AXI_awvalid,
      S00_AXI_bid(11 downto 0) => S00_AXI_bid(11 downto 0),
      S00_AXI_bready => S00_AXI_bready,
      S00_AXI_bresp(1 downto 0) => S00_AXI_bresp(1 downto 0),
      S00_AXI_bvalid => S00_AXI_bvalid,
      S00_AXI_rdata(31 downto 0) => S00_AXI_rdata(31 downto 0),
      S00_AXI_rid(11 downto 0) => S00_AXI_rid(11 downto 0),
      S00_AXI_rlast => S00_AXI_rlast,
      S00_AXI_rready => S00_AXI_rready,
      S00_AXI_rresp(1 downto 0) => S00_AXI_rresp(1 downto 0),
      S00_AXI_rvalid => S00_AXI_rvalid,
      S00_AXI_wdata(31 downto 0) => S00_AXI_wdata(31 downto 0),
      S00_AXI_wlast => S00_AXI_wlast,
      S00_AXI_wready => S00_AXI_wready,
      S00_AXI_wstrb(3 downto 0) => S00_AXI_wstrb(3 downto 0),
      S00_AXI_wvalid => S00_AXI_wvalid,
      S_SC_AR_payld(11 downto 9) => s00_entry_pipeline_m_axi_ARPROT(2 downto 0),
      S_SC_AR_payld(8 downto 1) => s00_entry_pipeline_m_axi_ARADDR(7 downto 0),
      S_SC_AR_payld(0) => s00_entry_pipeline_m_axi_ARUSER(2),
      S_SC_AR_recv(0) => ar_la_in_swbd_M00_SC_RECV,
      S_SC_AW_payld(10 downto 8) => s00_mmu_M_AXI_AWPROT(2 downto 0),
      S_SC_AW_payld(7 downto 0) => s00_entry_pipeline_m_axi_AWADDR(7 downto 0),
      S_SC_AW_recv(0) => aw_la_in_swbd_M00_SC_RECV,
      S_SC_W_payld(36 downto 29) => s00_entry_pipeline_m_axi_WDATA(31 downto 24),
      S_SC_W_payld(28) => s00_entry_pipeline_m_axi_WSTRB(3),
      S_SC_W_payld(27 downto 20) => s00_entry_pipeline_m_axi_WDATA(23 downto 16),
      S_SC_W_payld(19) => s00_entry_pipeline_m_axi_WSTRB(2),
      S_SC_W_payld(18 downto 11) => s00_entry_pipeline_m_axi_WDATA(15 downto 8),
      S_SC_W_payld(10) => s00_entry_pipeline_m_axi_WSTRB(1),
      S_SC_W_payld(9 downto 2) => s00_entry_pipeline_m_axi_WDATA(7 downto 0),
      S_SC_W_payld(1) => s00_entry_pipeline_m_axi_WSTRB(0),
      S_SC_W_payld(0) => s00_mmu_M_AXI_WUSER(2),
      S_SC_W_recv(0) => w_la_in_swbd_M00_SC_RECV,
      aclk => aclk,
      interconnect_aresetn(0) => clk_map_S00_ARESETN,
      m_axi_arvalid => s00_entry_pipeline_m_axi_ARVALID,
      m_axi_awvalid => s00_entry_pipeline_m_axi_AWVALID,
      m_axi_bready => s00_entry_pipeline_m_axi_BREADY,
      m_axi_rready => s00_entry_pipeline_m_axi_RREADY,
      m_axi_wvalid => s00_entry_pipeline_m_axi_WVALID
    );
s00_nodes: entity work.design_1_axi_smc_0_s00_nodes_imp_Y7M43I
     port map (
      \FSM_sequential_r_state_reg[0]\(0) => i_nodes_M_SC_R_SEND,
      M_SC_AR_send(0) => s00_nodes_M_SC_AR_SEND,
      M_SC_AW_send(0) => s00_nodes_M_SC_AW_SEND,
      M_SC_B_send(0) => s00_nodes_M_SC_B_SEND,
      M_SC_R_send(0) => s00_nodes_M_SC_R_SEND,
      M_SC_W_send(0) => s00_nodes_M_SC_W_SEND,
      S_SC_AR_send(0) => s00_entry_pipeline_m_axi_ARVALID,
      S_SC_AW_send(0) => s00_entry_pipeline_m_axi_AWVALID,
      S_SC_W_send(0) => s00_entry_pipeline_m_axi_WVALID,
      aclk => aclk,
      interconnect_aresetn(0) => clk_map_S00_ARESETN,
      \s_axi_bresp_i_reg[1]\(0) => i_nodes_M_SC_B_SEND
    );
switchboards: entity work.design_1_axi_smc_0_switchboards_imp_4N4PBE
     port map (
      M01_AXI_bready => \^m01_axi_bready\,
      M01_AXI_bresp(1 downto 0) => M01_AXI_bresp(1 downto 0),
      M01_AXI_rready => \^m01_axi_rready\,
      M_SC_AR_payld(10 downto 8) => M01_AXI_arprot(2 downto 0),
      M_SC_AR_payld(7 downto 0) => M01_AXI_araddr(7 downto 0),
      M_SC_AR_recv(0) => m01_sc2axi_M_AXI_ARREADY,
      M_SC_AR_send(0) => i_nodes_M_SC_AR_SEND(1),
      M_SC_AW_payld(10 downto 8) => M01_AXI_awprot(2 downto 0),
      M_SC_AW_payld(7 downto 0) => M01_AXI_awaddr(7 downto 0),
      M_SC_AW_recv(0) => m01_sc2axi_M_AXI_AWREADY,
      M_SC_AW_send(0) => i_nodes_M_SC_AW_SEND(1),
      M_SC_B_payld(1 downto 0) => i_nodes_M_SC_B_PAYLD(6 downto 5),
      M_SC_B_recv(0) => s00_entry_pipeline_m_axi_BREADY,
      M_SC_B_send(0) => i_nodes_M_SC_B_SEND,
      M_SC_R_payld(33 downto 2) => i_nodes_M_SC_R_PAYLD(52 downto 21),
      M_SC_R_payld(1 downto 0) => i_nodes_M_SC_R_PAYLD(19 downto 18),
      M_SC_R_recv(0) => s00_entry_pipeline_m_axi_RREADY,
      M_SC_R_send(0) => i_nodes_M_SC_R_SEND,
      M_SC_W_payld(35 downto 28) => M01_AXI_wdata(31 downto 24),
      M_SC_W_payld(27) => M01_AXI_wstrb(3),
      M_SC_W_payld(26 downto 19) => M01_AXI_wdata(23 downto 16),
      M_SC_W_payld(18) => M01_AXI_wstrb(2),
      M_SC_W_payld(17 downto 10) => M01_AXI_wdata(15 downto 8),
      M_SC_W_payld(9) => M01_AXI_wstrb(1),
      M_SC_W_payld(8 downto 1) => M01_AXI_wdata(7 downto 0),
      M_SC_W_payld(0) => M01_AXI_wstrb(0),
      M_SC_W_recv(0) => m01_sc2axi_M_AXI_WREADY,
      M_SC_W_send(0) => i_nodes_M_SC_W_SEND(1),
      S01_SC_R_payld(33 downto 2) => M01_AXI_rdata(31 downto 0),
      S01_SC_R_payld(1 downto 0) => M01_AXI_rresp(1 downto 0),
      S_SC_AR_payld(11 downto 9) => s00_entry_pipeline_m_axi_ARPROT(2 downto 0),
      S_SC_AR_payld(8 downto 1) => s00_entry_pipeline_m_axi_ARADDR(7 downto 0),
      S_SC_AR_payld(0) => s00_entry_pipeline_m_axi_ARUSER(2),
      S_SC_AR_recv(0) => ar_la_in_swbd_M00_SC_RECV,
      S_SC_AR_send(0) => s00_nodes_M_SC_AR_SEND,
      S_SC_AW_payld(10 downto 8) => s00_mmu_M_AXI_AWPROT(2 downto 0),
      S_SC_AW_payld(7 downto 0) => s00_entry_pipeline_m_axi_AWADDR(7 downto 0),
      S_SC_AW_recv(0) => aw_la_in_swbd_M00_SC_RECV,
      S_SC_AW_send(0) => s00_nodes_M_SC_AW_SEND,
      S_SC_B_req(0) => m01_nodes_M_SC_B_REQ,
      S_SC_B_send(0) => m01_nodes_M_SC_B_SEND,
      S_SC_R_req(0) => m01_nodes_M_SC_R_REQ,
      S_SC_R_send(0) => m01_nodes_M_SC_R_SEND,
      S_SC_W_payld(36 downto 29) => s00_entry_pipeline_m_axi_WDATA(31 downto 24),
      S_SC_W_payld(28) => s00_entry_pipeline_m_axi_WSTRB(3),
      S_SC_W_payld(27 downto 20) => s00_entry_pipeline_m_axi_WDATA(23 downto 16),
      S_SC_W_payld(19) => s00_entry_pipeline_m_axi_WSTRB(2),
      S_SC_W_payld(18 downto 11) => s00_entry_pipeline_m_axi_WDATA(15 downto 8),
      S_SC_W_payld(10) => s00_entry_pipeline_m_axi_WSTRB(1),
      S_SC_W_payld(9 downto 2) => s00_entry_pipeline_m_axi_WDATA(7 downto 0),
      S_SC_W_payld(1) => s00_entry_pipeline_m_axi_WSTRB(0),
      S_SC_W_payld(0) => s00_mmu_M_AXI_WUSER(2),
      S_SC_W_recv(0) => w_la_in_swbd_M00_SC_RECV,
      S_SC_W_send(0) => s00_nodes_M_SC_W_SEND,
      aclk => aclk,
      interconnect_aresetn(0) => clk_map_S00_ARESETN
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_axi_smc_0 is
  port (
    aclk : in STD_LOGIC;
    aresetn : in STD_LOGIC;
    S00_AXI_awid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_awaddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S00_AXI_awlen : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_awlock : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_awvalid : in STD_LOGIC;
    S00_AXI_awready : out STD_LOGIC;
    S00_AXI_wid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S00_AXI_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_wlast : in STD_LOGIC;
    S00_AXI_wvalid : in STD_LOGIC;
    S00_AXI_wready : out STD_LOGIC;
    S00_AXI_bid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_bvalid : out STD_LOGIC;
    S00_AXI_bready : in STD_LOGIC;
    S00_AXI_arid : in STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_araddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S00_AXI_arlen : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_arlock : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S00_AXI_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S00_AXI_arvalid : in STD_LOGIC;
    S00_AXI_arready : out STD_LOGIC;
    S00_AXI_rid : out STD_LOGIC_VECTOR ( 11 downto 0 );
    S00_AXI_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    S00_AXI_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S00_AXI_rlast : out STD_LOGIC;
    S00_AXI_rvalid : out STD_LOGIC;
    S00_AXI_rready : in STD_LOGIC;
    M00_AXI_awid : out STD_LOGIC;
    M00_AXI_awaddr : out STD_LOGIC;
    M00_AXI_awlen : out STD_LOGIC;
    M00_AXI_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M00_AXI_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M00_AXI_awlock : out STD_LOGIC;
    M00_AXI_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M00_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M00_AXI_awregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M00_AXI_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M00_AXI_awuser : out STD_LOGIC;
    M00_AXI_awvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_awready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_wid : out STD_LOGIC;
    M00_AXI_wdata : out STD_LOGIC;
    M00_AXI_wstrb : out STD_LOGIC;
    M00_AXI_wlast : out STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_wuser : out STD_LOGIC;
    M00_AXI_wvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_wready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_bid : in STD_LOGIC;
    M00_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M00_AXI_buser : in STD_LOGIC;
    M00_AXI_bvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_bready : out STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_arid : out STD_LOGIC;
    M00_AXI_araddr : out STD_LOGIC;
    M00_AXI_arlen : out STD_LOGIC;
    M00_AXI_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M00_AXI_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M00_AXI_arlock : out STD_LOGIC;
    M00_AXI_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M00_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M00_AXI_arregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M00_AXI_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M00_AXI_aruser : out STD_LOGIC;
    M00_AXI_arvalid : out STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_arready : in STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_rid : in STD_LOGIC;
    M00_AXI_rdata : in STD_LOGIC;
    M00_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M00_AXI_rlast : in STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_ruser : in STD_LOGIC;
    M00_AXI_rvalid : in STD_LOGIC_VECTOR ( 0 to 0 );
    M00_AXI_rready : out STD_LOGIC_VECTOR ( 0 to 0 );
    M01_AXI_awaddr : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M01_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M01_AXI_awvalid : out STD_LOGIC;
    M01_AXI_awready : in STD_LOGIC;
    M01_AXI_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M01_AXI_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M01_AXI_wvalid : out STD_LOGIC;
    M01_AXI_wready : in STD_LOGIC;
    M01_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M01_AXI_bvalid : in STD_LOGIC;
    M01_AXI_bready : out STD_LOGIC;
    M01_AXI_araddr : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M01_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M01_AXI_arvalid : out STD_LOGIC;
    M01_AXI_arready : in STD_LOGIC;
    M01_AXI_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M01_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M01_AXI_rvalid : in STD_LOGIC;
    M01_AXI_rready : out STD_LOGIC
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of design_1_axi_smc_0 : entity is "design_1_axi_smc_0,bd_afc3,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of design_1_axi_smc_0 : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of design_1_axi_smc_0 : entity is "bd_afc3,Vivado 2019.2";
end design_1_axi_smc_0;

architecture STRUCTURE of design_1_axi_smc_0 is
  attribute hw_handoff : string;
  attribute hw_handoff of inst : label is "design_1_axi_smc_0.hwdef";
  attribute x_interface_info : string;
  attribute x_interface_info of M00_AXI_araddr : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARADDR";
  attribute x_interface_info of M00_AXI_arid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARID";
  attribute x_interface_info of M00_AXI_arlen : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARLEN";
  attribute x_interface_info of M00_AXI_arlock : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARLOCK";
  attribute x_interface_info of M00_AXI_aruser : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARUSER";
  attribute x_interface_info of M00_AXI_awaddr : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWADDR";
  attribute x_interface_info of M00_AXI_awid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWID";
  attribute x_interface_info of M00_AXI_awlen : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWLEN";
  attribute x_interface_info of M00_AXI_awlock : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWLOCK";
  attribute x_interface_info of M00_AXI_awuser : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWUSER";
  attribute x_interface_info of M00_AXI_bid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI BID";
  attribute x_interface_info of M00_AXI_buser : signal is "xilinx.com:interface:aximm:1.0 M00_AXI BUSER";
  attribute x_interface_info of M00_AXI_rdata : signal is "xilinx.com:interface:aximm:1.0 M00_AXI RDATA";
  attribute x_interface_info of M00_AXI_rid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI RID";
  attribute x_interface_info of M00_AXI_ruser : signal is "xilinx.com:interface:aximm:1.0 M00_AXI RUSER";
  attribute x_interface_info of M00_AXI_wdata : signal is "xilinx.com:interface:aximm:1.0 M00_AXI WDATA";
  attribute x_interface_info of M00_AXI_wid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI WID";
  attribute x_interface_info of M00_AXI_wstrb : signal is "xilinx.com:interface:aximm:1.0 M00_AXI WSTRB";
  attribute x_interface_info of M00_AXI_wuser : signal is "xilinx.com:interface:aximm:1.0 M00_AXI WUSER";
  attribute x_interface_info of M01_AXI_arready : signal is "xilinx.com:interface:aximm:1.0 M01_AXI ARREADY";
  attribute x_interface_info of M01_AXI_arvalid : signal is "xilinx.com:interface:aximm:1.0 M01_AXI ARVALID";
  attribute x_interface_info of M01_AXI_awready : signal is "xilinx.com:interface:aximm:1.0 M01_AXI AWREADY";
  attribute x_interface_info of M01_AXI_awvalid : signal is "xilinx.com:interface:aximm:1.0 M01_AXI AWVALID";
  attribute x_interface_info of M01_AXI_bready : signal is "xilinx.com:interface:aximm:1.0 M01_AXI BREADY";
  attribute x_interface_info of M01_AXI_bvalid : signal is "xilinx.com:interface:aximm:1.0 M01_AXI BVALID";
  attribute x_interface_info of M01_AXI_rready : signal is "xilinx.com:interface:aximm:1.0 M01_AXI RREADY";
  attribute x_interface_parameter : string;
  attribute x_interface_parameter of M01_AXI_rready : signal is "XIL_INTERFACENAME M01_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 8, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 8, NUM_WRITE_OUTSTANDING 8, MAX_BURST_LENGTH 1, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0";
  attribute x_interface_info of M01_AXI_rvalid : signal is "xilinx.com:interface:aximm:1.0 M01_AXI RVALID";
  attribute x_interface_info of M01_AXI_wready : signal is "xilinx.com:interface:aximm:1.0 M01_AXI WREADY";
  attribute x_interface_info of M01_AXI_wvalid : signal is "xilinx.com:interface:aximm:1.0 M01_AXI WVALID";
  attribute x_interface_info of S00_AXI_arready : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARREADY";
  attribute x_interface_info of S00_AXI_arvalid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARVALID";
  attribute x_interface_info of S00_AXI_awready : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWREADY";
  attribute x_interface_info of S00_AXI_awvalid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWVALID";
  attribute x_interface_info of S00_AXI_bready : signal is "xilinx.com:interface:aximm:1.0 S00_AXI BREADY";
  attribute x_interface_info of S00_AXI_bvalid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI BVALID";
  attribute x_interface_info of S00_AXI_rlast : signal is "xilinx.com:interface:aximm:1.0 S00_AXI RLAST";
  attribute x_interface_info of S00_AXI_rready : signal is "xilinx.com:interface:aximm:1.0 S00_AXI RREADY";
  attribute x_interface_parameter of S00_AXI_rready : signal is "XIL_INTERFACENAME S00_AXI, DATA_WIDTH 32, PROTOCOL AXI3, FREQ_HZ 100000000, ID_WIDTH 12, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 8, NUM_WRITE_OUTSTANDING 8, MAX_BURST_LENGTH 16, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 4, NUM_WRITE_THREADS 4, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0";
  attribute x_interface_info of S00_AXI_rvalid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI RVALID";
  attribute x_interface_info of S00_AXI_wlast : signal is "xilinx.com:interface:aximm:1.0 S00_AXI WLAST";
  attribute x_interface_info of S00_AXI_wready : signal is "xilinx.com:interface:aximm:1.0 S00_AXI WREADY";
  attribute x_interface_info of S00_AXI_wvalid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI WVALID";
  attribute x_interface_info of aclk : signal is "xilinx.com:signal:clock:1.0 CLK.aclk CLK";
  attribute x_interface_parameter of aclk : signal is "XIL_INTERFACENAME CLK.aclk, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, ASSOCIATED_BUSIF M00_AXI:M01_AXI:S00_AXI, INSERT_VIP 0, ASSOCIATED_CLKEN s_sc_aclken";
  attribute x_interface_info of aresetn : signal is "xilinx.com:signal:reset:1.0 RST.aresetn RST";
  attribute x_interface_parameter of aresetn : signal is "XIL_INTERFACENAME RST.aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0";
  attribute x_interface_info of M00_AXI_arburst : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARBURST";
  attribute x_interface_info of M00_AXI_arcache : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARCACHE";
  attribute x_interface_info of M00_AXI_arprot : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARPROT";
  attribute x_interface_info of M00_AXI_arqos : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARQOS";
  attribute x_interface_info of M00_AXI_arready : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARREADY";
  attribute x_interface_info of M00_AXI_arregion : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARREGION";
  attribute x_interface_info of M00_AXI_arsize : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARSIZE";
  attribute x_interface_info of M00_AXI_arvalid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI ARVALID";
  attribute x_interface_info of M00_AXI_awburst : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWBURST";
  attribute x_interface_info of M00_AXI_awcache : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWCACHE";
  attribute x_interface_info of M00_AXI_awprot : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWPROT";
  attribute x_interface_info of M00_AXI_awqos : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWQOS";
  attribute x_interface_info of M00_AXI_awready : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWREADY";
  attribute x_interface_info of M00_AXI_awregion : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWREGION";
  attribute x_interface_info of M00_AXI_awsize : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWSIZE";
  attribute x_interface_info of M00_AXI_awvalid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI AWVALID";
  attribute x_interface_info of M00_AXI_bready : signal is "xilinx.com:interface:aximm:1.0 M00_AXI BREADY";
  attribute x_interface_info of M00_AXI_bresp : signal is "xilinx.com:interface:aximm:1.0 M00_AXI BRESP";
  attribute x_interface_info of M00_AXI_bvalid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI BVALID";
  attribute x_interface_info of M00_AXI_rlast : signal is "xilinx.com:interface:aximm:1.0 M00_AXI RLAST";
  attribute x_interface_info of M00_AXI_rready : signal is "xilinx.com:interface:aximm:1.0 M00_AXI RREADY";
  attribute x_interface_parameter of M00_AXI_rready : signal is "XIL_INTERFACENAME M00_AXI, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 1, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 256, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0";
  attribute x_interface_info of M00_AXI_rresp : signal is "xilinx.com:interface:aximm:1.0 M00_AXI RRESP";
  attribute x_interface_info of M00_AXI_rvalid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI RVALID";
  attribute x_interface_info of M00_AXI_wlast : signal is "xilinx.com:interface:aximm:1.0 M00_AXI WLAST";
  attribute x_interface_info of M00_AXI_wready : signal is "xilinx.com:interface:aximm:1.0 M00_AXI WREADY";
  attribute x_interface_info of M00_AXI_wvalid : signal is "xilinx.com:interface:aximm:1.0 M00_AXI WVALID";
  attribute x_interface_info of M01_AXI_araddr : signal is "xilinx.com:interface:aximm:1.0 M01_AXI ARADDR";
  attribute x_interface_info of M01_AXI_arprot : signal is "xilinx.com:interface:aximm:1.0 M01_AXI ARPROT";
  attribute x_interface_info of M01_AXI_awaddr : signal is "xilinx.com:interface:aximm:1.0 M01_AXI AWADDR";
  attribute x_interface_info of M01_AXI_awprot : signal is "xilinx.com:interface:aximm:1.0 M01_AXI AWPROT";
  attribute x_interface_info of M01_AXI_bresp : signal is "xilinx.com:interface:aximm:1.0 M01_AXI BRESP";
  attribute x_interface_info of M01_AXI_rdata : signal is "xilinx.com:interface:aximm:1.0 M01_AXI RDATA";
  attribute x_interface_info of M01_AXI_rresp : signal is "xilinx.com:interface:aximm:1.0 M01_AXI RRESP";
  attribute x_interface_info of M01_AXI_wdata : signal is "xilinx.com:interface:aximm:1.0 M01_AXI WDATA";
  attribute x_interface_info of M01_AXI_wstrb : signal is "xilinx.com:interface:aximm:1.0 M01_AXI WSTRB";
  attribute x_interface_info of S00_AXI_araddr : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARADDR";
  attribute x_interface_info of S00_AXI_arburst : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARBURST";
  attribute x_interface_info of S00_AXI_arcache : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARCACHE";
  attribute x_interface_info of S00_AXI_arid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARID";
  attribute x_interface_info of S00_AXI_arlen : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARLEN";
  attribute x_interface_info of S00_AXI_arlock : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARLOCK";
  attribute x_interface_info of S00_AXI_arprot : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARPROT";
  attribute x_interface_info of S00_AXI_arqos : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARQOS";
  attribute x_interface_info of S00_AXI_arsize : signal is "xilinx.com:interface:aximm:1.0 S00_AXI ARSIZE";
  attribute x_interface_info of S00_AXI_awaddr : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWADDR";
  attribute x_interface_info of S00_AXI_awburst : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWBURST";
  attribute x_interface_info of S00_AXI_awcache : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWCACHE";
  attribute x_interface_info of S00_AXI_awid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWID";
  attribute x_interface_info of S00_AXI_awlen : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWLEN";
  attribute x_interface_info of S00_AXI_awlock : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWLOCK";
  attribute x_interface_info of S00_AXI_awprot : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWPROT";
  attribute x_interface_info of S00_AXI_awqos : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWQOS";
  attribute x_interface_info of S00_AXI_awsize : signal is "xilinx.com:interface:aximm:1.0 S00_AXI AWSIZE";
  attribute x_interface_info of S00_AXI_bid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI BID";
  attribute x_interface_info of S00_AXI_bresp : signal is "xilinx.com:interface:aximm:1.0 S00_AXI BRESP";
  attribute x_interface_info of S00_AXI_rdata : signal is "xilinx.com:interface:aximm:1.0 S00_AXI RDATA";
  attribute x_interface_info of S00_AXI_rid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI RID";
  attribute x_interface_info of S00_AXI_rresp : signal is "xilinx.com:interface:aximm:1.0 S00_AXI RRESP";
  attribute x_interface_info of S00_AXI_wdata : signal is "xilinx.com:interface:aximm:1.0 S00_AXI WDATA";
  attribute x_interface_info of S00_AXI_wid : signal is "xilinx.com:interface:aximm:1.0 S00_AXI WID";
  attribute x_interface_info of S00_AXI_wstrb : signal is "xilinx.com:interface:aximm:1.0 S00_AXI WSTRB";
begin
inst: entity work.design_1_axi_smc_0_bd_afc3
     port map (
      M00_AXI_araddr => M00_AXI_araddr,
      M00_AXI_arburst(1 downto 0) => M00_AXI_arburst(1 downto 0),
      M00_AXI_arcache(3 downto 0) => M00_AXI_arcache(3 downto 0),
      M00_AXI_arid => M00_AXI_arid,
      M00_AXI_arlen => M00_AXI_arlen,
      M00_AXI_arlock => M00_AXI_arlock,
      M00_AXI_arprot(2 downto 0) => M00_AXI_arprot(2 downto 0),
      M00_AXI_arqos(3 downto 0) => M00_AXI_arqos(3 downto 0),
      M00_AXI_arready(0) => M00_AXI_arready(0),
      M00_AXI_arregion(3 downto 0) => M00_AXI_arregion(3 downto 0),
      M00_AXI_arsize(2 downto 0) => M00_AXI_arsize(2 downto 0),
      M00_AXI_aruser => M00_AXI_aruser,
      M00_AXI_arvalid(0) => M00_AXI_arvalid(0),
      M00_AXI_awaddr => M00_AXI_awaddr,
      M00_AXI_awburst(1 downto 0) => M00_AXI_awburst(1 downto 0),
      M00_AXI_awcache(3 downto 0) => M00_AXI_awcache(3 downto 0),
      M00_AXI_awid => M00_AXI_awid,
      M00_AXI_awlen => M00_AXI_awlen,
      M00_AXI_awlock => M00_AXI_awlock,
      M00_AXI_awprot(2 downto 0) => M00_AXI_awprot(2 downto 0),
      M00_AXI_awqos(3 downto 0) => M00_AXI_awqos(3 downto 0),
      M00_AXI_awready(0) => M00_AXI_awready(0),
      M00_AXI_awregion(3 downto 0) => M00_AXI_awregion(3 downto 0),
      M00_AXI_awsize(2 downto 0) => M00_AXI_awsize(2 downto 0),
      M00_AXI_awuser => M00_AXI_awuser,
      M00_AXI_awvalid(0) => M00_AXI_awvalid(0),
      M00_AXI_bid => M00_AXI_bid,
      M00_AXI_bready(0) => M00_AXI_bready(0),
      M00_AXI_bresp(1 downto 0) => M00_AXI_bresp(1 downto 0),
      M00_AXI_buser => M00_AXI_buser,
      M00_AXI_bvalid(0) => M00_AXI_bvalid(0),
      M00_AXI_rdata => M00_AXI_rdata,
      M00_AXI_rid => M00_AXI_rid,
      M00_AXI_rlast(0) => M00_AXI_rlast(0),
      M00_AXI_rready(0) => M00_AXI_rready(0),
      M00_AXI_rresp(1 downto 0) => M00_AXI_rresp(1 downto 0),
      M00_AXI_ruser => M00_AXI_ruser,
      M00_AXI_rvalid(0) => M00_AXI_rvalid(0),
      M00_AXI_wdata => M00_AXI_wdata,
      M00_AXI_wid => M00_AXI_wid,
      M00_AXI_wlast(0) => M00_AXI_wlast(0),
      M00_AXI_wready(0) => M00_AXI_wready(0),
      M00_AXI_wstrb => M00_AXI_wstrb,
      M00_AXI_wuser => M00_AXI_wuser,
      M00_AXI_wvalid(0) => M00_AXI_wvalid(0),
      M01_AXI_araddr(7 downto 0) => M01_AXI_araddr(7 downto 0),
      M01_AXI_arprot(2 downto 0) => M01_AXI_arprot(2 downto 0),
      M01_AXI_arready => M01_AXI_arready,
      M01_AXI_arvalid => M01_AXI_arvalid,
      M01_AXI_awaddr(7 downto 0) => M01_AXI_awaddr(7 downto 0),
      M01_AXI_awprot(2 downto 0) => M01_AXI_awprot(2 downto 0),
      M01_AXI_awready => M01_AXI_awready,
      M01_AXI_awvalid => M01_AXI_awvalid,
      M01_AXI_bready => M01_AXI_bready,
      M01_AXI_bresp(1 downto 0) => M01_AXI_bresp(1 downto 0),
      M01_AXI_bvalid => M01_AXI_bvalid,
      M01_AXI_rdata(31 downto 0) => M01_AXI_rdata(31 downto 0),
      M01_AXI_rready => M01_AXI_rready,
      M01_AXI_rresp(1 downto 0) => M01_AXI_rresp(1 downto 0),
      M01_AXI_rvalid => M01_AXI_rvalid,
      M01_AXI_wdata(31 downto 0) => M01_AXI_wdata(31 downto 0),
      M01_AXI_wready => M01_AXI_wready,
      M01_AXI_wstrb(3 downto 0) => M01_AXI_wstrb(3 downto 0),
      M01_AXI_wvalid => M01_AXI_wvalid,
      S00_AXI_araddr(31 downto 0) => S00_AXI_araddr(31 downto 0),
      S00_AXI_arburst(1 downto 0) => S00_AXI_arburst(1 downto 0),
      S00_AXI_arcache(3 downto 0) => S00_AXI_arcache(3 downto 0),
      S00_AXI_arid(11 downto 0) => S00_AXI_arid(11 downto 0),
      S00_AXI_arlen(3 downto 0) => S00_AXI_arlen(3 downto 0),
      S00_AXI_arlock(1 downto 0) => S00_AXI_arlock(1 downto 0),
      S00_AXI_arprot(2 downto 0) => S00_AXI_arprot(2 downto 0),
      S00_AXI_arqos(3 downto 0) => S00_AXI_arqos(3 downto 0),
      S00_AXI_arready => S00_AXI_arready,
      S00_AXI_arsize(2 downto 0) => S00_AXI_arsize(2 downto 0),
      S00_AXI_arvalid => S00_AXI_arvalid,
      S00_AXI_awaddr(31 downto 0) => S00_AXI_awaddr(31 downto 0),
      S00_AXI_awburst(1 downto 0) => S00_AXI_awburst(1 downto 0),
      S00_AXI_awcache(3 downto 0) => S00_AXI_awcache(3 downto 0),
      S00_AXI_awid(11 downto 0) => S00_AXI_awid(11 downto 0),
      S00_AXI_awlen(3 downto 0) => S00_AXI_awlen(3 downto 0),
      S00_AXI_awlock(1 downto 0) => S00_AXI_awlock(1 downto 0),
      S00_AXI_awprot(2 downto 0) => S00_AXI_awprot(2 downto 0),
      S00_AXI_awqos(3 downto 0) => S00_AXI_awqos(3 downto 0),
      S00_AXI_awready => S00_AXI_awready,
      S00_AXI_awsize(2 downto 0) => S00_AXI_awsize(2 downto 0),
      S00_AXI_awvalid => S00_AXI_awvalid,
      S00_AXI_bid(11 downto 0) => S00_AXI_bid(11 downto 0),
      S00_AXI_bready => S00_AXI_bready,
      S00_AXI_bresp(1 downto 0) => S00_AXI_bresp(1 downto 0),
      S00_AXI_bvalid => S00_AXI_bvalid,
      S00_AXI_rdata(31 downto 0) => S00_AXI_rdata(31 downto 0),
      S00_AXI_rid(11 downto 0) => S00_AXI_rid(11 downto 0),
      S00_AXI_rlast => S00_AXI_rlast,
      S00_AXI_rready => S00_AXI_rready,
      S00_AXI_rresp(1 downto 0) => S00_AXI_rresp(1 downto 0),
      S00_AXI_rvalid => S00_AXI_rvalid,
      S00_AXI_wdata(31 downto 0) => S00_AXI_wdata(31 downto 0),
      S00_AXI_wid(11 downto 0) => S00_AXI_wid(11 downto 0),
      S00_AXI_wlast => S00_AXI_wlast,
      S00_AXI_wready => S00_AXI_wready,
      S00_AXI_wstrb(3 downto 0) => S00_AXI_wstrb(3 downto 0),
      S00_AXI_wvalid => S00_AXI_wvalid,
      aclk => aclk,
      aresetn => aresetn
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1 is
  port (
    DDR_addr : inout STD_LOGIC_VECTOR ( 14 downto 0 );
    DDR_ba : inout STD_LOGIC_VECTOR ( 2 downto 0 );
    DDR_cas_n : inout STD_LOGIC;
    DDR_ck_n : inout STD_LOGIC;
    DDR_ck_p : inout STD_LOGIC;
    DDR_cke : inout STD_LOGIC;
    DDR_cs_n : inout STD_LOGIC;
    DDR_dm : inout STD_LOGIC_VECTOR ( 3 downto 0 );
    DDR_dq : inout STD_LOGIC_VECTOR ( 31 downto 0 );
    DDR_dqs_n : inout STD_LOGIC_VECTOR ( 3 downto 0 );
    DDR_dqs_p : inout STD_LOGIC_VECTOR ( 3 downto 0 );
    DDR_odt : inout STD_LOGIC;
    DDR_ras_n : inout STD_LOGIC;
    DDR_reset_n : inout STD_LOGIC;
    DDR_we_n : inout STD_LOGIC;
    FIXED_IO_ddr_vrn : inout STD_LOGIC;
    FIXED_IO_ddr_vrp : inout STD_LOGIC;
    FIXED_IO_mio : inout STD_LOGIC_VECTOR ( 53 downto 0 );
    FIXED_IO_ps_clk : inout STD_LOGIC;
    FIXED_IO_ps_porb : inout STD_LOGIC;
    FIXED_IO_ps_srstb : inout STD_LOGIC
  );
  attribute hw_handoff : string;
  attribute hw_handoff of design_1 : entity is "design_1.hwdef";
end design_1;

architecture STRUCTURE of design_1 is
  signal axi_smc_M01_AXI_ARADDR : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal axi_smc_M01_AXI_ARPROT : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal axi_smc_M01_AXI_ARREADY : STD_LOGIC;
  signal axi_smc_M01_AXI_ARVALID : STD_LOGIC;
  signal axi_smc_M01_AXI_AWADDR : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal axi_smc_M01_AXI_AWPROT : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal axi_smc_M01_AXI_AWREADY : STD_LOGIC;
  signal axi_smc_M01_AXI_AWVALID : STD_LOGIC;
  signal axi_smc_M01_AXI_BREADY : STD_LOGIC;
  signal axi_smc_M01_AXI_BRESP : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal axi_smc_M01_AXI_BVALID : STD_LOGIC;
  signal axi_smc_M01_AXI_RDATA : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal axi_smc_M01_AXI_RREADY : STD_LOGIC;
  signal axi_smc_M01_AXI_RRESP : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal axi_smc_M01_AXI_RVALID : STD_LOGIC;
  signal axi_smc_M01_AXI_WDATA : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal axi_smc_M01_AXI_WREADY : STD_LOGIC;
  signal axi_smc_M01_AXI_WSTRB : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal axi_smc_M01_AXI_WVALID : STD_LOGIC;
  signal comblock_0_reg0_o : STD_LOGIC;
  signal processing_system7_0_FCLK_CLK0 : STD_LOGIC;
  signal processing_system7_0_FCLK_RESET0_N : STD_LOGIC;
  signal processing_system7_0_M_AXI_GP0_ARADDR : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal processing_system7_0_M_AXI_GP0_ARBURST : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal processing_system7_0_M_AXI_GP0_ARCACHE : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal processing_system7_0_M_AXI_GP0_ARID : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal processing_system7_0_M_AXI_GP0_ARLEN : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal processing_system7_0_M_AXI_GP0_ARLOCK : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal processing_system7_0_M_AXI_GP0_ARPROT : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal processing_system7_0_M_AXI_GP0_ARQOS : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal processing_system7_0_M_AXI_GP0_ARREADY : STD_LOGIC;
  signal processing_system7_0_M_AXI_GP0_ARSIZE : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal processing_system7_0_M_AXI_GP0_ARVALID : STD_LOGIC;
  signal processing_system7_0_M_AXI_GP0_AWADDR : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal processing_system7_0_M_AXI_GP0_AWBURST : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal processing_system7_0_M_AXI_GP0_AWCACHE : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal processing_system7_0_M_AXI_GP0_AWID : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal processing_system7_0_M_AXI_GP0_AWLEN : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal processing_system7_0_M_AXI_GP0_AWLOCK : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal processing_system7_0_M_AXI_GP0_AWPROT : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal processing_system7_0_M_AXI_GP0_AWQOS : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal processing_system7_0_M_AXI_GP0_AWREADY : STD_LOGIC;
  signal processing_system7_0_M_AXI_GP0_AWSIZE : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal processing_system7_0_M_AXI_GP0_AWVALID : STD_LOGIC;
  signal processing_system7_0_M_AXI_GP0_BID : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal processing_system7_0_M_AXI_GP0_BREADY : STD_LOGIC;
  signal processing_system7_0_M_AXI_GP0_BRESP : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal processing_system7_0_M_AXI_GP0_BVALID : STD_LOGIC;
  signal processing_system7_0_M_AXI_GP0_RDATA : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal processing_system7_0_M_AXI_GP0_RID : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal processing_system7_0_M_AXI_GP0_RLAST : STD_LOGIC;
  signal processing_system7_0_M_AXI_GP0_RREADY : STD_LOGIC;
  signal processing_system7_0_M_AXI_GP0_RRESP : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal processing_system7_0_M_AXI_GP0_RVALID : STD_LOGIC;
  signal processing_system7_0_M_AXI_GP0_WDATA : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal processing_system7_0_M_AXI_GP0_WID : STD_LOGIC_VECTOR ( 11 downto 0 );
  signal processing_system7_0_M_AXI_GP0_WLAST : STD_LOGIC;
  signal processing_system7_0_M_AXI_GP0_WREADY : STD_LOGIC;
  signal processing_system7_0_M_AXI_GP0_WSTRB : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal processing_system7_0_M_AXI_GP0_WVALID : STD_LOGIC;
  signal rst_ps7_0_100M_peripheral_aresetn : STD_LOGIC;
  signal top_nqueens_0_counter : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal top_nqueens_0_done : STD_LOGIC;
  signal NLW_axi_smc_M00_AXI_araddr_UNCONNECTED : STD_LOGIC;
  signal NLW_axi_smc_M00_AXI_arid_UNCONNECTED : STD_LOGIC;
  signal NLW_axi_smc_M00_AXI_arlen_UNCONNECTED : STD_LOGIC;
  signal NLW_axi_smc_M00_AXI_arlock_UNCONNECTED : STD_LOGIC;
  signal NLW_axi_smc_M00_AXI_aruser_UNCONNECTED : STD_LOGIC;
  signal NLW_axi_smc_M00_AXI_awaddr_UNCONNECTED : STD_LOGIC;
  signal NLW_axi_smc_M00_AXI_awid_UNCONNECTED : STD_LOGIC;
  signal NLW_axi_smc_M00_AXI_awlen_UNCONNECTED : STD_LOGIC;
  signal NLW_axi_smc_M00_AXI_awlock_UNCONNECTED : STD_LOGIC;
  signal NLW_axi_smc_M00_AXI_awuser_UNCONNECTED : STD_LOGIC;
  signal NLW_axi_smc_M00_AXI_wdata_UNCONNECTED : STD_LOGIC;
  signal NLW_axi_smc_M00_AXI_wid_UNCONNECTED : STD_LOGIC;
  signal NLW_axi_smc_M00_AXI_wstrb_UNCONNECTED : STD_LOGIC;
  signal NLW_axi_smc_M00_AXI_wuser_UNCONNECTED : STD_LOGIC;
  signal NLW_axi_smc_M00_AXI_arburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_axi_smc_M00_AXI_arcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_axi_smc_M00_AXI_arprot_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_axi_smc_M00_AXI_arqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_axi_smc_M00_AXI_arregion_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_axi_smc_M00_AXI_arsize_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_axi_smc_M00_AXI_arvalid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_axi_smc_M00_AXI_awburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_axi_smc_M00_AXI_awcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_axi_smc_M00_AXI_awprot_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_axi_smc_M00_AXI_awqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_axi_smc_M00_AXI_awregion_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_axi_smc_M00_AXI_awsize_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_axi_smc_M00_AXI_awvalid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_axi_smc_M00_AXI_bready_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_axi_smc_M00_AXI_rready_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_axi_smc_M00_AXI_wlast_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_axi_smc_M00_AXI_wvalid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_processing_system7_0_TTC0_WAVE0_OUT_UNCONNECTED : STD_LOGIC;
  signal NLW_processing_system7_0_TTC0_WAVE1_OUT_UNCONNECTED : STD_LOGIC;
  signal NLW_processing_system7_0_TTC0_WAVE2_OUT_UNCONNECTED : STD_LOGIC;
  signal NLW_processing_system7_0_USB0_VBUS_PWRSELECT_UNCONNECTED : STD_LOGIC;
  signal NLW_processing_system7_0_USB0_PORT_INDCTL_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_rst_ps7_0_100M_mb_reset_UNCONNECTED : STD_LOGIC;
  signal NLW_rst_ps7_0_100M_bus_struct_reset_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_rst_ps7_0_100M_interconnect_aresetn_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_rst_ps7_0_100M_peripheral_reset_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_top_nqueens_0_flag_UNCONNECTED : STD_LOGIC;
  attribute IMPORTED_FROM : string;
  attribute IMPORTED_FROM of axi_smc : label is "c:/Users/mlabadm/Desktop/Github/FPGA/nqueens/nqueens_fpga/nqueens_fpga.srcs/sources_1/bd/design_1/ip/design_1_axi_smc_0/design_1_axi_smc_0.dcp";
  attribute IMPORTED_TYPE : string;
  attribute IMPORTED_TYPE of axi_smc : label is "CHECKPOINT";
  attribute IS_IMPORTED : boolean;
  attribute IS_IMPORTED of axi_smc : label is std.standard.true;
  attribute syn_black_box : string;
  attribute syn_black_box of axi_smc : label is "TRUE";
  attribute x_core_info : string;
  attribute x_core_info of axi_smc : label is "bd_afc3,Vivado 2019.2";
  attribute IMPORTED_FROM of comblock_0 : label is "c:/Users/mlabadm/Desktop/Github/FPGA/nqueens/nqueens_fpga/nqueens_fpga.srcs/sources_1/bd/design_1/ip/design_1_comblock_0_0/design_1_comblock_0_0.dcp";
  attribute IMPORTED_TYPE of comblock_0 : label is "CHECKPOINT";
  attribute IS_IMPORTED of comblock_0 : label is std.standard.true;
  attribute syn_black_box of comblock_0 : label is "TRUE";
  attribute x_core_info of comblock_0 : label is "axi_comblock,Vivado 2019.2";
  attribute IMPORTED_FROM of processing_system7_0 : label is "c:/Users/mlabadm/Desktop/Github/FPGA/nqueens/nqueens_fpga/nqueens_fpga.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.dcp";
  attribute IMPORTED_TYPE of processing_system7_0 : label is "CHECKPOINT";
  attribute IS_IMPORTED of processing_system7_0 : label is std.standard.true;
  attribute syn_black_box of processing_system7_0 : label is "TRUE";
  attribute x_core_info of processing_system7_0 : label is "processing_system7_v5_5_processing_system7,Vivado 2019.2";
  attribute IMPORTED_FROM of rst_ps7_0_100M : label is "c:/Users/mlabadm/Desktop/Github/FPGA/nqueens/nqueens_fpga/nqueens_fpga.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0.dcp";
  attribute IMPORTED_TYPE of rst_ps7_0_100M : label is "CHECKPOINT";
  attribute IS_IMPORTED of rst_ps7_0_100M : label is std.standard.true;
  attribute syn_black_box of rst_ps7_0_100M : label is "TRUE";
  attribute x_core_info of rst_ps7_0_100M : label is "proc_sys_reset,Vivado 2019.2";
  attribute IMPORTED_FROM of top_nqueens_0 : label is "c:/Users/mlabadm/Desktop/Github/FPGA/nqueens/nqueens_fpga/nqueens_fpga.srcs/sources_1/bd/design_1/ip/design_1_top_nqueens_0_0/design_1_top_nqueens_0_0.dcp";
  attribute IMPORTED_TYPE of top_nqueens_0 : label is "CHECKPOINT";
  attribute IS_IMPORTED of top_nqueens_0 : label is std.standard.true;
  attribute syn_black_box of top_nqueens_0 : label is "TRUE";
  attribute x_core_info of top_nqueens_0 : label is "top_nqueens,Vivado 2019.2";
  attribute x_interface_info : string;
  attribute x_interface_info of DDR_cas_n : signal is "xilinx.com:interface:ddrx:1.0 DDR CAS_N";
  attribute x_interface_info of DDR_ck_n : signal is "xilinx.com:interface:ddrx:1.0 DDR CK_N";
  attribute x_interface_info of DDR_ck_p : signal is "xilinx.com:interface:ddrx:1.0 DDR CK_P";
  attribute x_interface_info of DDR_cke : signal is "xilinx.com:interface:ddrx:1.0 DDR CKE";
  attribute x_interface_info of DDR_cs_n : signal is "xilinx.com:interface:ddrx:1.0 DDR CS_N";
  attribute x_interface_info of DDR_odt : signal is "xilinx.com:interface:ddrx:1.0 DDR ODT";
  attribute x_interface_info of DDR_ras_n : signal is "xilinx.com:interface:ddrx:1.0 DDR RAS_N";
  attribute x_interface_info of DDR_reset_n : signal is "xilinx.com:interface:ddrx:1.0 DDR RESET_N";
  attribute x_interface_info of DDR_we_n : signal is "xilinx.com:interface:ddrx:1.0 DDR WE_N";
  attribute x_interface_info of FIXED_IO_ddr_vrn : signal is "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO DDR_VRN";
  attribute x_interface_parameter : string;
  attribute x_interface_parameter of FIXED_IO_ddr_vrn : signal is "XIL_INTERFACENAME FIXED_IO, CAN_DEBUG false";
  attribute x_interface_info of FIXED_IO_ddr_vrp : signal is "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO DDR_VRP";
  attribute x_interface_info of FIXED_IO_ps_clk : signal is "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO PS_CLK";
  attribute x_interface_info of FIXED_IO_ps_porb : signal is "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO PS_PORB";
  attribute x_interface_info of FIXED_IO_ps_srstb : signal is "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO PS_SRSTB";
  attribute x_interface_info of DDR_addr : signal is "xilinx.com:interface:ddrx:1.0 DDR ADDR";
  attribute x_interface_parameter of DDR_addr : signal is "XIL_INTERFACENAME DDR, AXI_ARBITRATION_SCHEME TDM, BURST_LENGTH 8, CAN_DEBUG false, CAS_LATENCY 11, CAS_WRITE_LATENCY 11, CS_ENABLED true, DATA_MASK_ENABLED true, DATA_WIDTH 8, MEMORY_TYPE COMPONENTS, MEM_ADDR_MAP ROW_COLUMN_BANK, SLOT Single, TIMEPERIOD_PS 1250";
  attribute x_interface_info of DDR_ba : signal is "xilinx.com:interface:ddrx:1.0 DDR BA";
  attribute x_interface_info of DDR_dm : signal is "xilinx.com:interface:ddrx:1.0 DDR DM";
  attribute x_interface_info of DDR_dq : signal is "xilinx.com:interface:ddrx:1.0 DDR DQ";
  attribute x_interface_info of DDR_dqs_n : signal is "xilinx.com:interface:ddrx:1.0 DDR DQS_N";
  attribute x_interface_info of DDR_dqs_p : signal is "xilinx.com:interface:ddrx:1.0 DDR DQS_P";
  attribute x_interface_info of FIXED_IO_mio : signal is "xilinx.com:display_processing_system7:fixedio:1.0 FIXED_IO MIO";
begin
axi_smc: entity work.design_1_axi_smc_0
     port map (
      M00_AXI_araddr => NLW_axi_smc_M00_AXI_araddr_UNCONNECTED,
      M00_AXI_arburst(1 downto 0) => NLW_axi_smc_M00_AXI_arburst_UNCONNECTED(1 downto 0),
      M00_AXI_arcache(3 downto 0) => NLW_axi_smc_M00_AXI_arcache_UNCONNECTED(3 downto 0),
      M00_AXI_arid => NLW_axi_smc_M00_AXI_arid_UNCONNECTED,
      M00_AXI_arlen => NLW_axi_smc_M00_AXI_arlen_UNCONNECTED,
      M00_AXI_arlock => NLW_axi_smc_M00_AXI_arlock_UNCONNECTED,
      M00_AXI_arprot(2 downto 0) => NLW_axi_smc_M00_AXI_arprot_UNCONNECTED(2 downto 0),
      M00_AXI_arqos(3 downto 0) => NLW_axi_smc_M00_AXI_arqos_UNCONNECTED(3 downto 0),
      M00_AXI_arready(0) => '0',
      M00_AXI_arregion(3 downto 0) => NLW_axi_smc_M00_AXI_arregion_UNCONNECTED(3 downto 0),
      M00_AXI_arsize(2 downto 0) => NLW_axi_smc_M00_AXI_arsize_UNCONNECTED(2 downto 0),
      M00_AXI_aruser => NLW_axi_smc_M00_AXI_aruser_UNCONNECTED,
      M00_AXI_arvalid(0) => NLW_axi_smc_M00_AXI_arvalid_UNCONNECTED(0),
      M00_AXI_awaddr => NLW_axi_smc_M00_AXI_awaddr_UNCONNECTED,
      M00_AXI_awburst(1 downto 0) => NLW_axi_smc_M00_AXI_awburst_UNCONNECTED(1 downto 0),
      M00_AXI_awcache(3 downto 0) => NLW_axi_smc_M00_AXI_awcache_UNCONNECTED(3 downto 0),
      M00_AXI_awid => NLW_axi_smc_M00_AXI_awid_UNCONNECTED,
      M00_AXI_awlen => NLW_axi_smc_M00_AXI_awlen_UNCONNECTED,
      M00_AXI_awlock => NLW_axi_smc_M00_AXI_awlock_UNCONNECTED,
      M00_AXI_awprot(2 downto 0) => NLW_axi_smc_M00_AXI_awprot_UNCONNECTED(2 downto 0),
      M00_AXI_awqos(3 downto 0) => NLW_axi_smc_M00_AXI_awqos_UNCONNECTED(3 downto 0),
      M00_AXI_awready(0) => '0',
      M00_AXI_awregion(3 downto 0) => NLW_axi_smc_M00_AXI_awregion_UNCONNECTED(3 downto 0),
      M00_AXI_awsize(2 downto 0) => NLW_axi_smc_M00_AXI_awsize_UNCONNECTED(2 downto 0),
      M00_AXI_awuser => NLW_axi_smc_M00_AXI_awuser_UNCONNECTED,
      M00_AXI_awvalid(0) => NLW_axi_smc_M00_AXI_awvalid_UNCONNECTED(0),
      M00_AXI_bid => '0',
      M00_AXI_bready(0) => NLW_axi_smc_M00_AXI_bready_UNCONNECTED(0),
      M00_AXI_bresp(1 downto 0) => B"00",
      M00_AXI_buser => '0',
      M00_AXI_bvalid(0) => '0',
      M00_AXI_rdata => '0',
      M00_AXI_rid => '0',
      M00_AXI_rlast(0) => '0',
      M00_AXI_rready(0) => NLW_axi_smc_M00_AXI_rready_UNCONNECTED(0),
      M00_AXI_rresp(1 downto 0) => B"00",
      M00_AXI_ruser => '0',
      M00_AXI_rvalid(0) => '0',
      M00_AXI_wdata => NLW_axi_smc_M00_AXI_wdata_UNCONNECTED,
      M00_AXI_wid => NLW_axi_smc_M00_AXI_wid_UNCONNECTED,
      M00_AXI_wlast(0) => NLW_axi_smc_M00_AXI_wlast_UNCONNECTED(0),
      M00_AXI_wready(0) => '0',
      M00_AXI_wstrb => NLW_axi_smc_M00_AXI_wstrb_UNCONNECTED,
      M00_AXI_wuser => NLW_axi_smc_M00_AXI_wuser_UNCONNECTED,
      M00_AXI_wvalid(0) => NLW_axi_smc_M00_AXI_wvalid_UNCONNECTED(0),
      M01_AXI_araddr(7 downto 0) => axi_smc_M01_AXI_ARADDR(7 downto 0),
      M01_AXI_arprot(2 downto 0) => axi_smc_M01_AXI_ARPROT(2 downto 0),
      M01_AXI_arready => axi_smc_M01_AXI_ARREADY,
      M01_AXI_arvalid => axi_smc_M01_AXI_ARVALID,
      M01_AXI_awaddr(7 downto 0) => axi_smc_M01_AXI_AWADDR(7 downto 0),
      M01_AXI_awprot(2 downto 0) => axi_smc_M01_AXI_AWPROT(2 downto 0),
      M01_AXI_awready => axi_smc_M01_AXI_AWREADY,
      M01_AXI_awvalid => axi_smc_M01_AXI_AWVALID,
      M01_AXI_bready => axi_smc_M01_AXI_BREADY,
      M01_AXI_bresp(1 downto 0) => axi_smc_M01_AXI_BRESP(1 downto 0),
      M01_AXI_bvalid => axi_smc_M01_AXI_BVALID,
      M01_AXI_rdata(31 downto 0) => axi_smc_M01_AXI_RDATA(31 downto 0),
      M01_AXI_rready => axi_smc_M01_AXI_RREADY,
      M01_AXI_rresp(1 downto 0) => axi_smc_M01_AXI_RRESP(1 downto 0),
      M01_AXI_rvalid => axi_smc_M01_AXI_RVALID,
      M01_AXI_wdata(31 downto 0) => axi_smc_M01_AXI_WDATA(31 downto 0),
      M01_AXI_wready => axi_smc_M01_AXI_WREADY,
      M01_AXI_wstrb(3 downto 0) => axi_smc_M01_AXI_WSTRB(3 downto 0),
      M01_AXI_wvalid => axi_smc_M01_AXI_WVALID,
      S00_AXI_araddr(31 downto 0) => processing_system7_0_M_AXI_GP0_ARADDR(31 downto 0),
      S00_AXI_arburst(1 downto 0) => processing_system7_0_M_AXI_GP0_ARBURST(1 downto 0),
      S00_AXI_arcache(3 downto 0) => processing_system7_0_M_AXI_GP0_ARCACHE(3 downto 0),
      S00_AXI_arid(11 downto 0) => processing_system7_0_M_AXI_GP0_ARID(11 downto 0),
      S00_AXI_arlen(3 downto 0) => processing_system7_0_M_AXI_GP0_ARLEN(3 downto 0),
      S00_AXI_arlock(1 downto 0) => processing_system7_0_M_AXI_GP0_ARLOCK(1 downto 0),
      S00_AXI_arprot(2 downto 0) => processing_system7_0_M_AXI_GP0_ARPROT(2 downto 0),
      S00_AXI_arqos(3 downto 0) => processing_system7_0_M_AXI_GP0_ARQOS(3 downto 0),
      S00_AXI_arready => processing_system7_0_M_AXI_GP0_ARREADY,
      S00_AXI_arsize(2 downto 0) => processing_system7_0_M_AXI_GP0_ARSIZE(2 downto 0),
      S00_AXI_arvalid => processing_system7_0_M_AXI_GP0_ARVALID,
      S00_AXI_awaddr(31 downto 0) => processing_system7_0_M_AXI_GP0_AWADDR(31 downto 0),
      S00_AXI_awburst(1 downto 0) => processing_system7_0_M_AXI_GP0_AWBURST(1 downto 0),
      S00_AXI_awcache(3 downto 0) => processing_system7_0_M_AXI_GP0_AWCACHE(3 downto 0),
      S00_AXI_awid(11 downto 0) => processing_system7_0_M_AXI_GP0_AWID(11 downto 0),
      S00_AXI_awlen(3 downto 0) => processing_system7_0_M_AXI_GP0_AWLEN(3 downto 0),
      S00_AXI_awlock(1 downto 0) => processing_system7_0_M_AXI_GP0_AWLOCK(1 downto 0),
      S00_AXI_awprot(2 downto 0) => processing_system7_0_M_AXI_GP0_AWPROT(2 downto 0),
      S00_AXI_awqos(3 downto 0) => processing_system7_0_M_AXI_GP0_AWQOS(3 downto 0),
      S00_AXI_awready => processing_system7_0_M_AXI_GP0_AWREADY,
      S00_AXI_awsize(2 downto 0) => processing_system7_0_M_AXI_GP0_AWSIZE(2 downto 0),
      S00_AXI_awvalid => processing_system7_0_M_AXI_GP0_AWVALID,
      S00_AXI_bid(11 downto 0) => processing_system7_0_M_AXI_GP0_BID(11 downto 0),
      S00_AXI_bready => processing_system7_0_M_AXI_GP0_BREADY,
      S00_AXI_bresp(1 downto 0) => processing_system7_0_M_AXI_GP0_BRESP(1 downto 0),
      S00_AXI_bvalid => processing_system7_0_M_AXI_GP0_BVALID,
      S00_AXI_rdata(31 downto 0) => processing_system7_0_M_AXI_GP0_RDATA(31 downto 0),
      S00_AXI_rid(11 downto 0) => processing_system7_0_M_AXI_GP0_RID(11 downto 0),
      S00_AXI_rlast => processing_system7_0_M_AXI_GP0_RLAST,
      S00_AXI_rready => processing_system7_0_M_AXI_GP0_RREADY,
      S00_AXI_rresp(1 downto 0) => processing_system7_0_M_AXI_GP0_RRESP(1 downto 0),
      S00_AXI_rvalid => processing_system7_0_M_AXI_GP0_RVALID,
      S00_AXI_wdata(31 downto 0) => processing_system7_0_M_AXI_GP0_WDATA(31 downto 0),
      S00_AXI_wid(11 downto 0) => processing_system7_0_M_AXI_GP0_WID(11 downto 0),
      S00_AXI_wlast => processing_system7_0_M_AXI_GP0_WLAST,
      S00_AXI_wready => processing_system7_0_M_AXI_GP0_WREADY,
      S00_AXI_wstrb(3 downto 0) => processing_system7_0_M_AXI_GP0_WSTRB(3 downto 0),
      S00_AXI_wvalid => processing_system7_0_M_AXI_GP0_WVALID,
      aclk => processing_system7_0_FCLK_CLK0,
      aresetn => rst_ps7_0_100M_peripheral_aresetn
    );
comblock_0: entity work.design_1_comblock_0_0
     port map (
      axil_aclk => processing_system7_0_FCLK_CLK0,
      axil_araddr(7 downto 0) => axi_smc_M01_AXI_ARADDR(7 downto 0),
      axil_aresetn => rst_ps7_0_100M_peripheral_aresetn,
      axil_arprot(2 downto 0) => axi_smc_M01_AXI_ARPROT(2 downto 0),
      axil_arready => axi_smc_M01_AXI_ARREADY,
      axil_arvalid => axi_smc_M01_AXI_ARVALID,
      axil_awaddr(7 downto 0) => axi_smc_M01_AXI_AWADDR(7 downto 0),
      axil_awprot(2 downto 0) => axi_smc_M01_AXI_AWPROT(2 downto 0),
      axil_awready => axi_smc_M01_AXI_AWREADY,
      axil_awvalid => axi_smc_M01_AXI_AWVALID,
      axil_bready => axi_smc_M01_AXI_BREADY,
      axil_bresp(1 downto 0) => axi_smc_M01_AXI_BRESP(1 downto 0),
      axil_bvalid => axi_smc_M01_AXI_BVALID,
      axil_rdata(31 downto 0) => axi_smc_M01_AXI_RDATA(31 downto 0),
      axil_rready => axi_smc_M01_AXI_RREADY,
      axil_rresp(1 downto 0) => axi_smc_M01_AXI_RRESP(1 downto 0),
      axil_rvalid => axi_smc_M01_AXI_RVALID,
      axil_wdata(31 downto 0) => axi_smc_M01_AXI_WDATA(31 downto 0),
      axil_wready => axi_smc_M01_AXI_WREADY,
      axil_wstrb(3 downto 0) => axi_smc_M01_AXI_WSTRB(3 downto 0),
      axil_wvalid => axi_smc_M01_AXI_WVALID,
      reg0_i(10) => top_nqueens_0_done,
      reg0_i(9) => top_nqueens_0_done,
      reg0_i(8) => top_nqueens_0_done,
      reg0_i(7) => top_nqueens_0_done,
      reg0_i(6) => top_nqueens_0_done,
      reg0_i(5) => top_nqueens_0_done,
      reg0_i(4) => top_nqueens_0_done,
      reg0_i(3) => top_nqueens_0_done,
      reg0_i(2) => top_nqueens_0_done,
      reg0_i(1) => top_nqueens_0_done,
      reg0_i(0) => top_nqueens_0_done,
      reg0_o(0) => comblock_0_reg0_o,
      reg1_i(10 downto 0) => top_nqueens_0_counter(10 downto 0)
    );
processing_system7_0: entity work.design_1_processing_system7_0_0
     port map (
      DDR_Addr(14 downto 0) => DDR_addr(14 downto 0),
      DDR_BankAddr(2 downto 0) => DDR_ba(2 downto 0),
      DDR_CAS_n => DDR_cas_n,
      DDR_CKE => DDR_cke,
      DDR_CS_n => DDR_cs_n,
      DDR_Clk => DDR_ck_p,
      DDR_Clk_n => DDR_ck_n,
      DDR_DM(3 downto 0) => DDR_dm(3 downto 0),
      DDR_DQ(31 downto 0) => DDR_dq(31 downto 0),
      DDR_DQS(3 downto 0) => DDR_dqs_p(3 downto 0),
      DDR_DQS_n(3 downto 0) => DDR_dqs_n(3 downto 0),
      DDR_DRSTB => DDR_reset_n,
      DDR_ODT => DDR_odt,
      DDR_RAS_n => DDR_ras_n,
      DDR_VRN => FIXED_IO_ddr_vrn,
      DDR_VRP => FIXED_IO_ddr_vrp,
      DDR_WEB => DDR_we_n,
      FCLK_CLK0 => processing_system7_0_FCLK_CLK0,
      FCLK_RESET0_N => processing_system7_0_FCLK_RESET0_N,
      MIO(53 downto 0) => FIXED_IO_mio(53 downto 0),
      M_AXI_GP0_ACLK => processing_system7_0_FCLK_CLK0,
      M_AXI_GP0_ARADDR(31 downto 0) => processing_system7_0_M_AXI_GP0_ARADDR(31 downto 0),
      M_AXI_GP0_ARBURST(1 downto 0) => processing_system7_0_M_AXI_GP0_ARBURST(1 downto 0),
      M_AXI_GP0_ARCACHE(3 downto 0) => processing_system7_0_M_AXI_GP0_ARCACHE(3 downto 0),
      M_AXI_GP0_ARID(11 downto 0) => processing_system7_0_M_AXI_GP0_ARID(11 downto 0),
      M_AXI_GP0_ARLEN(3 downto 0) => processing_system7_0_M_AXI_GP0_ARLEN(3 downto 0),
      M_AXI_GP0_ARLOCK(1 downto 0) => processing_system7_0_M_AXI_GP0_ARLOCK(1 downto 0),
      M_AXI_GP0_ARPROT(2 downto 0) => processing_system7_0_M_AXI_GP0_ARPROT(2 downto 0),
      M_AXI_GP0_ARQOS(3 downto 0) => processing_system7_0_M_AXI_GP0_ARQOS(3 downto 0),
      M_AXI_GP0_ARREADY => processing_system7_0_M_AXI_GP0_ARREADY,
      M_AXI_GP0_ARSIZE(2 downto 0) => processing_system7_0_M_AXI_GP0_ARSIZE(2 downto 0),
      M_AXI_GP0_ARVALID => processing_system7_0_M_AXI_GP0_ARVALID,
      M_AXI_GP0_AWADDR(31 downto 0) => processing_system7_0_M_AXI_GP0_AWADDR(31 downto 0),
      M_AXI_GP0_AWBURST(1 downto 0) => processing_system7_0_M_AXI_GP0_AWBURST(1 downto 0),
      M_AXI_GP0_AWCACHE(3 downto 0) => processing_system7_0_M_AXI_GP0_AWCACHE(3 downto 0),
      M_AXI_GP0_AWID(11 downto 0) => processing_system7_0_M_AXI_GP0_AWID(11 downto 0),
      M_AXI_GP0_AWLEN(3 downto 0) => processing_system7_0_M_AXI_GP0_AWLEN(3 downto 0),
      M_AXI_GP0_AWLOCK(1 downto 0) => processing_system7_0_M_AXI_GP0_AWLOCK(1 downto 0),
      M_AXI_GP0_AWPROT(2 downto 0) => processing_system7_0_M_AXI_GP0_AWPROT(2 downto 0),
      M_AXI_GP0_AWQOS(3 downto 0) => processing_system7_0_M_AXI_GP0_AWQOS(3 downto 0),
      M_AXI_GP0_AWREADY => processing_system7_0_M_AXI_GP0_AWREADY,
      M_AXI_GP0_AWSIZE(2 downto 0) => processing_system7_0_M_AXI_GP0_AWSIZE(2 downto 0),
      M_AXI_GP0_AWVALID => processing_system7_0_M_AXI_GP0_AWVALID,
      M_AXI_GP0_BID(11 downto 0) => processing_system7_0_M_AXI_GP0_BID(11 downto 0),
      M_AXI_GP0_BREADY => processing_system7_0_M_AXI_GP0_BREADY,
      M_AXI_GP0_BRESP(1 downto 0) => processing_system7_0_M_AXI_GP0_BRESP(1 downto 0),
      M_AXI_GP0_BVALID => processing_system7_0_M_AXI_GP0_BVALID,
      M_AXI_GP0_RDATA(31 downto 0) => processing_system7_0_M_AXI_GP0_RDATA(31 downto 0),
      M_AXI_GP0_RID(11 downto 0) => processing_system7_0_M_AXI_GP0_RID(11 downto 0),
      M_AXI_GP0_RLAST => processing_system7_0_M_AXI_GP0_RLAST,
      M_AXI_GP0_RREADY => processing_system7_0_M_AXI_GP0_RREADY,
      M_AXI_GP0_RRESP(1 downto 0) => processing_system7_0_M_AXI_GP0_RRESP(1 downto 0),
      M_AXI_GP0_RVALID => processing_system7_0_M_AXI_GP0_RVALID,
      M_AXI_GP0_WDATA(31 downto 0) => processing_system7_0_M_AXI_GP0_WDATA(31 downto 0),
      M_AXI_GP0_WID(11 downto 0) => processing_system7_0_M_AXI_GP0_WID(11 downto 0),
      M_AXI_GP0_WLAST => processing_system7_0_M_AXI_GP0_WLAST,
      M_AXI_GP0_WREADY => processing_system7_0_M_AXI_GP0_WREADY,
      M_AXI_GP0_WSTRB(3 downto 0) => processing_system7_0_M_AXI_GP0_WSTRB(3 downto 0),
      M_AXI_GP0_WVALID => processing_system7_0_M_AXI_GP0_WVALID,
      PS_CLK => FIXED_IO_ps_clk,
      PS_PORB => FIXED_IO_ps_porb,
      PS_SRSTB => FIXED_IO_ps_srstb,
      TTC0_WAVE0_OUT => NLW_processing_system7_0_TTC0_WAVE0_OUT_UNCONNECTED,
      TTC0_WAVE1_OUT => NLW_processing_system7_0_TTC0_WAVE1_OUT_UNCONNECTED,
      TTC0_WAVE2_OUT => NLW_processing_system7_0_TTC0_WAVE2_OUT_UNCONNECTED,
      USB0_PORT_INDCTL(1 downto 0) => NLW_processing_system7_0_USB0_PORT_INDCTL_UNCONNECTED(1 downto 0),
      USB0_VBUS_PWRFAULT => '0',
      USB0_VBUS_PWRSELECT => NLW_processing_system7_0_USB0_VBUS_PWRSELECT_UNCONNECTED
    );
rst_ps7_0_100M: entity work.design_1_rst_ps7_0_100M_0
     port map (
      aux_reset_in => '1',
      bus_struct_reset(0) => NLW_rst_ps7_0_100M_bus_struct_reset_UNCONNECTED(0),
      dcm_locked => '1',
      ext_reset_in => processing_system7_0_FCLK_RESET0_N,
      interconnect_aresetn(0) => NLW_rst_ps7_0_100M_interconnect_aresetn_UNCONNECTED(0),
      mb_debug_sys_rst => '0',
      mb_reset => NLW_rst_ps7_0_100M_mb_reset_UNCONNECTED,
      peripheral_aresetn(0) => rst_ps7_0_100M_peripheral_aresetn,
      peripheral_reset(0) => NLW_rst_ps7_0_100M_peripheral_reset_UNCONNECTED(0),
      slowest_sync_clk => processing_system7_0_FCLK_CLK0
    );
top_nqueens_0: entity work.design_1_top_nqueens_0_0
     port map (
      clk => processing_system7_0_FCLK_CLK0,
      counter(10 downto 0) => top_nqueens_0_counter(10 downto 0),
      done => top_nqueens_0_done,
      flag => NLW_top_nqueens_0_flag_UNCONNECTED,
      nRst => comblock_0_reg0_o
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_wrapper is
  port (
    DDR_addr : inout STD_LOGIC_VECTOR ( 14 downto 0 );
    DDR_ba : inout STD_LOGIC_VECTOR ( 2 downto 0 );
    DDR_cas_n : inout STD_LOGIC;
    DDR_ck_n : inout STD_LOGIC;
    DDR_ck_p : inout STD_LOGIC;
    DDR_cke : inout STD_LOGIC;
    DDR_cs_n : inout STD_LOGIC;
    DDR_dm : inout STD_LOGIC_VECTOR ( 3 downto 0 );
    DDR_dq : inout STD_LOGIC_VECTOR ( 31 downto 0 );
    DDR_dqs_n : inout STD_LOGIC_VECTOR ( 3 downto 0 );
    DDR_dqs_p : inout STD_LOGIC_VECTOR ( 3 downto 0 );
    DDR_odt : inout STD_LOGIC;
    DDR_ras_n : inout STD_LOGIC;
    DDR_reset_n : inout STD_LOGIC;
    DDR_we_n : inout STD_LOGIC;
    FIXED_IO_ddr_vrn : inout STD_LOGIC;
    FIXED_IO_ddr_vrp : inout STD_LOGIC;
    FIXED_IO_mio : inout STD_LOGIC_VECTOR ( 53 downto 0 );
    FIXED_IO_ps_clk : inout STD_LOGIC;
    FIXED_IO_ps_porb : inout STD_LOGIC;
    FIXED_IO_ps_srstb : inout STD_LOGIC
  );
  attribute NotValidForBitStream : boolean;
  attribute NotValidForBitStream of design_1_wrapper : entity is true;
end design_1_wrapper;

architecture STRUCTURE of design_1_wrapper is
  attribute hw_handoff : string;
  attribute hw_handoff of design_1_i : label is "design_1.hwdef";
begin
design_1_i: entity work.design_1
     port map (
      DDR_addr(14 downto 0) => DDR_addr(14 downto 0),
      DDR_ba(2 downto 0) => DDR_ba(2 downto 0),
      DDR_cas_n => DDR_cas_n,
      DDR_ck_n => DDR_ck_n,
      DDR_ck_p => DDR_ck_p,
      DDR_cke => DDR_cke,
      DDR_cs_n => DDR_cs_n,
      DDR_dm(3 downto 0) => DDR_dm(3 downto 0),
      DDR_dq(31 downto 0) => DDR_dq(31 downto 0),
      DDR_dqs_n(3 downto 0) => DDR_dqs_n(3 downto 0),
      DDR_dqs_p(3 downto 0) => DDR_dqs_p(3 downto 0),
      DDR_odt => DDR_odt,
      DDR_ras_n => DDR_ras_n,
      DDR_reset_n => DDR_reset_n,
      DDR_we_n => DDR_we_n,
      FIXED_IO_ddr_vrn => FIXED_IO_ddr_vrn,
      FIXED_IO_ddr_vrp => FIXED_IO_ddr_vrp,
      FIXED_IO_mio(53 downto 0) => FIXED_IO_mio(53 downto 0),
      FIXED_IO_ps_clk => FIXED_IO_ps_clk,
      FIXED_IO_ps_porb => FIXED_IO_ps_porb,
      FIXED_IO_ps_srstb => FIXED_IO_ps_srstb
    );
end STRUCTURE;
