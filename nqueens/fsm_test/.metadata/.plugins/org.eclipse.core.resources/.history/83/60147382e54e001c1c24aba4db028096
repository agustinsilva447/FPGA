#include <stdio.h>
#include "comblock.h"
#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h"


int main()
{
    init_platform();
    u32 i, k = 0;
    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG3, 1);
    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG3, 0);

    xil_printf("Counter: %U. \n", k);
    for (i = 1; i <= 8; ++i)
    {
        cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG1, 1);
        cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG2, 9-i);
        cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG1, 0);
    	xil_printf("a_in = %U \n", 9-i);
        while (!(cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG1)&0x1)){
        	if (!(cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG0)&0x1)){
        		k = k + 1;
        		xil_printf("Counter: %U. \n", k);
        		cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG0, 1);
        	}
        };
    }
    xil_printf("Finished \n");

    cleanup_platform();
    return 0;
}
