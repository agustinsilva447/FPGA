#include <stdio.h>
#include "comblock.h"
#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h"


int main()
{
    u32 n;
    n = 1;

    init_platform();
    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR , CB_OREG0, n);
    xil_printf("\nLoopback: %U\n", cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG0));

    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG2, 0);
    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG3, 0);
    xil_printf("0 + 0 => (Sum: %U, Carry: %U) \n", cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG3)&0x01, cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG4)&0x01);

    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG2, 0);
    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG3, 1);
    xil_printf("0 + 1 => (Sum: %U, Carry: %U) \n", cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG3)&0x01, cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG4)&0x01);

    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG2, 1);
    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG3, 0);
    xil_printf("1 + 0 => (Sum: %U, Carry: %U) \n", cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG3)&0x01, cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG4)&0x01);

    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG2, 1);
    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG3, 1);
    xil_printf("1 + 1 => (Sum: %U, Carry: %U) \n", cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG3)&0x01, cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG4)&0x01);

    xil_printf("\n---------------------> NQUEENS\n");

    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG1, 1);
    xil_printf("Done: %U. Counter: %U. \n", cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG1)&0x1, cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG2));

    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG6, 0);
    cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG6, 1);



    /*
	cbWrite(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_OREG1, 0);
    while(!(cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG1)&0x1)){
    	xil_printf("a_i: %U. Counter: %U. \n", cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG5), cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG2));
    };
    xil_printf("Done: %U. Counter: %U. \n", cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG1)&0x1, cbRead(XPAR_COMBLOCK_0_AXIL_BASEADDR, CB_IREG2));
     */

    cleanup_platform();
    return 0;
}
