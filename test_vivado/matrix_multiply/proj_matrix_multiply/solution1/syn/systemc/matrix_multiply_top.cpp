// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrix_multiply_top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrix_multiply_top::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrix_multiply_top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> matrix_multiply_top::ap_ST_fsm_state1 = "1";
const sc_lv<11> matrix_multiply_top::ap_ST_fsm_state2 = "10";
const sc_lv<11> matrix_multiply_top::ap_ST_fsm_state3 = "100";
const sc_lv<11> matrix_multiply_top::ap_ST_fsm_state4 = "1000";
const sc_lv<11> matrix_multiply_top::ap_ST_fsm_state5 = "10000";
const sc_lv<11> matrix_multiply_top::ap_ST_fsm_state6 = "100000";
const sc_lv<11> matrix_multiply_top::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> matrix_multiply_top::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> matrix_multiply_top::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> matrix_multiply_top::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> matrix_multiply_top::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> matrix_multiply_top::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> matrix_multiply_top::ap_const_lv32_1 = "1";
const sc_lv<1> matrix_multiply_top::ap_const_lv1_0 = "0";
const sc_lv<32> matrix_multiply_top::ap_const_lv32_2 = "10";
const sc_lv<32> matrix_multiply_top::ap_const_lv32_4 = "100";
const sc_lv<32> matrix_multiply_top::ap_const_lv32_5 = "101";
const sc_lv<32> matrix_multiply_top::ap_const_lv32_8 = "1000";
const sc_lv<32> matrix_multiply_top::ap_const_lv32_9 = "1001";
const sc_lv<2> matrix_multiply_top::ap_const_lv2_0 = "00";
const sc_lv<1> matrix_multiply_top::ap_const_lv1_1 = "1";
const sc_lv<32> matrix_multiply_top::ap_const_lv32_3 = "11";
const sc_lv<32> matrix_multiply_top::ap_const_lv32_6 = "110";
const sc_lv<32> matrix_multiply_top::ap_const_lv32_7 = "111";
const sc_lv<32> matrix_multiply_top::ap_const_lv32_A = "1010";
const sc_lv<2> matrix_multiply_top::ap_const_lv2_3 = "11";
const sc_lv<2> matrix_multiply_top::ap_const_lv2_1 = "1";
const bool matrix_multiply_top::ap_const_boolean_1 = true;

matrix_multiply_top::matrix_multiply_top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    a_i_U = new matrix_multiply_teOg("a_i_U");
    a_i_U->clk(ap_clk);
    a_i_U->reset(ap_rst);
    a_i_U->address0(a_i_address0);
    a_i_U->ce0(a_i_ce0);
    a_i_U->we0(a_i_we0);
    a_i_U->d0(A_q0);
    a_i_U->q0(a_i_q0);
    b_i_U = new matrix_multiply_teOg("b_i_U");
    b_i_U->clk(ap_clk);
    b_i_U->reset(ap_rst);
    b_i_U->address0(b_i_address0);
    b_i_U->ce0(b_i_ce0);
    b_i_U->we0(b_i_we0);
    b_i_U->d0(B_q0);
    b_i_U->q0(b_i_q0);
    C_assign_U = new matrix_multiply_teOg("C_assign_U");
    C_assign_U->clk(ap_clk);
    C_assign_U->reset(ap_rst);
    C_assign_U->address0(C_assign_address0);
    C_assign_U->ce0(C_assign_ce0);
    C_assign_U->we0(C_assign_we0);
    C_assign_U->d0(grp_matrix_multiply_alt2_fu_204_C_d0);
    C_assign_U->q0(C_assign_q0);
    grp_matrix_multiply_alt2_fu_204 = new matrix_multiply_alt2("grp_matrix_multiply_alt2_fu_204");
    grp_matrix_multiply_alt2_fu_204->ap_clk(ap_clk);
    grp_matrix_multiply_alt2_fu_204->ap_rst(ap_rst);
    grp_matrix_multiply_alt2_fu_204->ap_start(grp_matrix_multiply_alt2_fu_204_ap_start);
    grp_matrix_multiply_alt2_fu_204->ap_done(grp_matrix_multiply_alt2_fu_204_ap_done);
    grp_matrix_multiply_alt2_fu_204->ap_idle(grp_matrix_multiply_alt2_fu_204_ap_idle);
    grp_matrix_multiply_alt2_fu_204->ap_ready(grp_matrix_multiply_alt2_fu_204_ap_ready);
    grp_matrix_multiply_alt2_fu_204->A_address0(grp_matrix_multiply_alt2_fu_204_A_address0);
    grp_matrix_multiply_alt2_fu_204->A_ce0(grp_matrix_multiply_alt2_fu_204_A_ce0);
    grp_matrix_multiply_alt2_fu_204->A_q0(a_i_q0);
    grp_matrix_multiply_alt2_fu_204->B_address0(grp_matrix_multiply_alt2_fu_204_B_address0);
    grp_matrix_multiply_alt2_fu_204->B_ce0(grp_matrix_multiply_alt2_fu_204_B_ce0);
    grp_matrix_multiply_alt2_fu_204->B_q0(b_i_q0);
    grp_matrix_multiply_alt2_fu_204->C_address0(grp_matrix_multiply_alt2_fu_204_C_address0);
    grp_matrix_multiply_alt2_fu_204->C_ce0(grp_matrix_multiply_alt2_fu_204_C_ce0);
    grp_matrix_multiply_alt2_fu_204->C_we0(grp_matrix_multiply_alt2_fu_204_C_we0);
    grp_matrix_multiply_alt2_fu_204->C_d0(grp_matrix_multiply_alt2_fu_204_C_d0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln48_fu_266_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sext_ln53_fu_326_p1 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_address0);
    sensitive << ( sext_ln63_reg_474 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_C_assign_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( sext_ln63_fu_386_p1 );
    sensitive << ( grp_matrix_multiply_alt2_fu_204_C_address0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_C_assign_ce0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_matrix_multiply_alt2_fu_204_C_ce0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_C_assign_we0);
    sensitive << ( grp_matrix_multiply_alt2_fu_204_C_we0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_C_ce0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_C_d0);
    sensitive << ( C_assign_q0 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_C_we0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_a_i_address0);
    sensitive << ( sext_ln48_reg_412 );
    sensitive << ( grp_matrix_multiply_alt2_fu_204_A_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_a_i_ce0);
    sensitive << ( grp_matrix_multiply_alt2_fu_204_A_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_a_i_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_add_ln48_fu_261_p2);
    sensitive << ( sub_ln48_reg_399 );
    sensitive << ( zext_ln48_2_fu_257_p1 );

    SC_METHOD(thread_add_ln53_fu_321_p2);
    sensitive << ( sub_ln53_reg_430 );
    sensitive << ( zext_ln53_2_fu_317_p1 );

    SC_METHOD(thread_add_ln63_fu_381_p2);
    sensitive << ( sub_ln63_reg_461 );
    sensitive << ( zext_ln63_2_fu_377_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln61_fu_331_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln61_fu_331_p2 );

    SC_METHOD(thread_b_i_address0);
    sensitive << ( sext_ln53_reg_443 );
    sensitive << ( grp_matrix_multiply_alt2_fu_204_B_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_b_i_ce0);
    sensitive << ( grp_matrix_multiply_alt2_fu_204_B_ce0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_b_i_we0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_c_1_fu_311_p2);
    sensitive << ( c2_0_reg_171 );

    SC_METHOD(thread_c_2_fu_371_p2);
    sensitive << ( c4_0_reg_193 );

    SC_METHOD(thread_c_fu_251_p2);
    sensitive << ( c_0_reg_149 );

    SC_METHOD(thread_grp_matrix_multiply_alt2_fu_204_ap_start);
    sensitive << ( grp_matrix_multiply_alt2_fu_204_ap_start_reg );

    SC_METHOD(thread_icmp_ln46_fu_211_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( r_0_reg_138 );

    SC_METHOD(thread_icmp_ln47_fu_245_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( c_0_reg_149 );

    SC_METHOD(thread_icmp_ln51_fu_271_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( r1_0_reg_160 );

    SC_METHOD(thread_icmp_ln52_fu_305_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( c2_0_reg_171 );

    SC_METHOD(thread_icmp_ln61_fu_331_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( r3_0_reg_182 );

    SC_METHOD(thread_icmp_ln62_fu_365_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( c4_0_reg_193 );

    SC_METHOD(thread_r_1_fu_277_p2);
    sensitive << ( r1_0_reg_160 );

    SC_METHOD(thread_r_2_fu_337_p2);
    sensitive << ( r3_0_reg_182 );

    SC_METHOD(thread_r_fu_217_p2);
    sensitive << ( r_0_reg_138 );

    SC_METHOD(thread_sext_ln48_fu_266_p1);
    sensitive << ( add_ln48_fu_261_p2 );

    SC_METHOD(thread_sext_ln53_fu_326_p1);
    sensitive << ( add_ln53_fu_321_p2 );

    SC_METHOD(thread_sext_ln63_fu_386_p1);
    sensitive << ( add_ln63_fu_381_p2 );

    SC_METHOD(thread_sub_ln48_fu_239_p2);
    sensitive << ( zext_ln48_1_fu_235_p1 );
    sensitive << ( zext_ln48_fu_223_p1 );

    SC_METHOD(thread_sub_ln53_fu_299_p2);
    sensitive << ( zext_ln53_1_fu_295_p1 );
    sensitive << ( zext_ln53_fu_283_p1 );

    SC_METHOD(thread_sub_ln63_fu_359_p2);
    sensitive << ( zext_ln63_1_fu_355_p1 );
    sensitive << ( zext_ln63_fu_343_p1 );

    SC_METHOD(thread_tmp_3_fu_227_p3);
    sensitive << ( r_0_reg_138 );

    SC_METHOD(thread_tmp_4_fu_287_p3);
    sensitive << ( r1_0_reg_160 );

    SC_METHOD(thread_tmp_5_fu_347_p3);
    sensitive << ( r3_0_reg_182 );

    SC_METHOD(thread_zext_ln48_1_fu_235_p1);
    sensitive << ( tmp_3_fu_227_p3 );

    SC_METHOD(thread_zext_ln48_2_fu_257_p1);
    sensitive << ( c_0_reg_149 );

    SC_METHOD(thread_zext_ln48_fu_223_p1);
    sensitive << ( r_0_reg_138 );

    SC_METHOD(thread_zext_ln53_1_fu_295_p1);
    sensitive << ( tmp_4_fu_287_p3 );

    SC_METHOD(thread_zext_ln53_2_fu_317_p1);
    sensitive << ( c2_0_reg_171 );

    SC_METHOD(thread_zext_ln53_fu_283_p1);
    sensitive << ( r1_0_reg_160 );

    SC_METHOD(thread_zext_ln63_1_fu_355_p1);
    sensitive << ( tmp_5_fu_347_p3 );

    SC_METHOD(thread_zext_ln63_2_fu_377_p1);
    sensitive << ( c4_0_reg_193 );

    SC_METHOD(thread_zext_ln63_fu_343_p1);
    sensitive << ( r3_0_reg_182 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln46_fu_211_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln47_fu_245_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln51_fu_271_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln52_fu_305_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln61_fu_331_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln62_fu_365_p2 );
    sensitive << ( grp_matrix_multiply_alt2_fu_204_ap_done );
    sensitive << ( ap_CS_fsm_state8 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000001";
    grp_matrix_multiply_alt2_fu_204_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrix_multiply_top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, B_address0, "(port)B_address0");
    sc_trace(mVcdFile, B_ce0, "(port)B_ce0");
    sc_trace(mVcdFile, B_q0, "(port)B_q0");
    sc_trace(mVcdFile, C_address0, "(port)C_address0");
    sc_trace(mVcdFile, C_ce0, "(port)C_ce0");
    sc_trace(mVcdFile, C_we0, "(port)C_we0");
    sc_trace(mVcdFile, C_d0, "(port)C_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, r_fu_217_p2, "r_fu_217_p2");
    sc_trace(mVcdFile, r_reg_394, "r_reg_394");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sub_ln48_fu_239_p2, "sub_ln48_fu_239_p2");
    sc_trace(mVcdFile, sub_ln48_reg_399, "sub_ln48_reg_399");
    sc_trace(mVcdFile, icmp_ln46_fu_211_p2, "icmp_ln46_fu_211_p2");
    sc_trace(mVcdFile, c_fu_251_p2, "c_fu_251_p2");
    sc_trace(mVcdFile, c_reg_407, "c_reg_407");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sext_ln48_fu_266_p1, "sext_ln48_fu_266_p1");
    sc_trace(mVcdFile, sext_ln48_reg_412, "sext_ln48_reg_412");
    sc_trace(mVcdFile, icmp_ln47_fu_245_p2, "icmp_ln47_fu_245_p2");
    sc_trace(mVcdFile, r_1_fu_277_p2, "r_1_fu_277_p2");
    sc_trace(mVcdFile, r_1_reg_425, "r_1_reg_425");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, sub_ln53_fu_299_p2, "sub_ln53_fu_299_p2");
    sc_trace(mVcdFile, sub_ln53_reg_430, "sub_ln53_reg_430");
    sc_trace(mVcdFile, icmp_ln51_fu_271_p2, "icmp_ln51_fu_271_p2");
    sc_trace(mVcdFile, c_1_fu_311_p2, "c_1_fu_311_p2");
    sc_trace(mVcdFile, c_1_reg_438, "c_1_reg_438");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, sext_ln53_fu_326_p1, "sext_ln53_fu_326_p1");
    sc_trace(mVcdFile, sext_ln53_reg_443, "sext_ln53_reg_443");
    sc_trace(mVcdFile, icmp_ln52_fu_305_p2, "icmp_ln52_fu_305_p2");
    sc_trace(mVcdFile, r_2_fu_337_p2, "r_2_fu_337_p2");
    sc_trace(mVcdFile, r_2_reg_456, "r_2_reg_456");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, sub_ln63_fu_359_p2, "sub_ln63_fu_359_p2");
    sc_trace(mVcdFile, sub_ln63_reg_461, "sub_ln63_reg_461");
    sc_trace(mVcdFile, icmp_ln61_fu_331_p2, "icmp_ln61_fu_331_p2");
    sc_trace(mVcdFile, c_2_fu_371_p2, "c_2_fu_371_p2");
    sc_trace(mVcdFile, c_2_reg_469, "c_2_reg_469");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, sext_ln63_fu_386_p1, "sext_ln63_fu_386_p1");
    sc_trace(mVcdFile, sext_ln63_reg_474, "sext_ln63_reg_474");
    sc_trace(mVcdFile, icmp_ln62_fu_365_p2, "icmp_ln62_fu_365_p2");
    sc_trace(mVcdFile, a_i_address0, "a_i_address0");
    sc_trace(mVcdFile, a_i_ce0, "a_i_ce0");
    sc_trace(mVcdFile, a_i_we0, "a_i_we0");
    sc_trace(mVcdFile, a_i_q0, "a_i_q0");
    sc_trace(mVcdFile, b_i_address0, "b_i_address0");
    sc_trace(mVcdFile, b_i_ce0, "b_i_ce0");
    sc_trace(mVcdFile, b_i_we0, "b_i_we0");
    sc_trace(mVcdFile, b_i_q0, "b_i_q0");
    sc_trace(mVcdFile, C_assign_address0, "C_assign_address0");
    sc_trace(mVcdFile, C_assign_ce0, "C_assign_ce0");
    sc_trace(mVcdFile, C_assign_we0, "C_assign_we0");
    sc_trace(mVcdFile, C_assign_q0, "C_assign_q0");
    sc_trace(mVcdFile, grp_matrix_multiply_alt2_fu_204_ap_start, "grp_matrix_multiply_alt2_fu_204_ap_start");
    sc_trace(mVcdFile, grp_matrix_multiply_alt2_fu_204_ap_done, "grp_matrix_multiply_alt2_fu_204_ap_done");
    sc_trace(mVcdFile, grp_matrix_multiply_alt2_fu_204_ap_idle, "grp_matrix_multiply_alt2_fu_204_ap_idle");
    sc_trace(mVcdFile, grp_matrix_multiply_alt2_fu_204_ap_ready, "grp_matrix_multiply_alt2_fu_204_ap_ready");
    sc_trace(mVcdFile, grp_matrix_multiply_alt2_fu_204_A_address0, "grp_matrix_multiply_alt2_fu_204_A_address0");
    sc_trace(mVcdFile, grp_matrix_multiply_alt2_fu_204_A_ce0, "grp_matrix_multiply_alt2_fu_204_A_ce0");
    sc_trace(mVcdFile, grp_matrix_multiply_alt2_fu_204_B_address0, "grp_matrix_multiply_alt2_fu_204_B_address0");
    sc_trace(mVcdFile, grp_matrix_multiply_alt2_fu_204_B_ce0, "grp_matrix_multiply_alt2_fu_204_B_ce0");
    sc_trace(mVcdFile, grp_matrix_multiply_alt2_fu_204_C_address0, "grp_matrix_multiply_alt2_fu_204_C_address0");
    sc_trace(mVcdFile, grp_matrix_multiply_alt2_fu_204_C_ce0, "grp_matrix_multiply_alt2_fu_204_C_ce0");
    sc_trace(mVcdFile, grp_matrix_multiply_alt2_fu_204_C_we0, "grp_matrix_multiply_alt2_fu_204_C_we0");
    sc_trace(mVcdFile, grp_matrix_multiply_alt2_fu_204_C_d0, "grp_matrix_multiply_alt2_fu_204_C_d0");
    sc_trace(mVcdFile, r_0_reg_138, "r_0_reg_138");
    sc_trace(mVcdFile, c_0_reg_149, "c_0_reg_149");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, r1_0_reg_160, "r1_0_reg_160");
    sc_trace(mVcdFile, c2_0_reg_171, "c2_0_reg_171");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, r3_0_reg_182, "r3_0_reg_182");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, c4_0_reg_193, "c4_0_reg_193");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_matrix_multiply_alt2_fu_204_ap_start_reg, "grp_matrix_multiply_alt2_fu_204_ap_start_reg");
    sc_trace(mVcdFile, tmp_3_fu_227_p3, "tmp_3_fu_227_p3");
    sc_trace(mVcdFile, zext_ln48_1_fu_235_p1, "zext_ln48_1_fu_235_p1");
    sc_trace(mVcdFile, zext_ln48_fu_223_p1, "zext_ln48_fu_223_p1");
    sc_trace(mVcdFile, zext_ln48_2_fu_257_p1, "zext_ln48_2_fu_257_p1");
    sc_trace(mVcdFile, add_ln48_fu_261_p2, "add_ln48_fu_261_p2");
    sc_trace(mVcdFile, tmp_4_fu_287_p3, "tmp_4_fu_287_p3");
    sc_trace(mVcdFile, zext_ln53_1_fu_295_p1, "zext_ln53_1_fu_295_p1");
    sc_trace(mVcdFile, zext_ln53_fu_283_p1, "zext_ln53_fu_283_p1");
    sc_trace(mVcdFile, zext_ln53_2_fu_317_p1, "zext_ln53_2_fu_317_p1");
    sc_trace(mVcdFile, add_ln53_fu_321_p2, "add_ln53_fu_321_p2");
    sc_trace(mVcdFile, tmp_5_fu_347_p3, "tmp_5_fu_347_p3");
    sc_trace(mVcdFile, zext_ln63_1_fu_355_p1, "zext_ln63_1_fu_355_p1");
    sc_trace(mVcdFile, zext_ln63_fu_343_p1, "zext_ln63_fu_343_p1");
    sc_trace(mVcdFile, zext_ln63_2_fu_377_p1, "zext_ln63_2_fu_377_p1");
    sc_trace(mVcdFile, add_ln63_fu_381_p2, "add_ln63_fu_381_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("matrix_multiply_top.hdltvin.dat");
    mHdltvoutHandle.open("matrix_multiply_top.hdltvout.dat");
}

matrix_multiply_top::~matrix_multiply_top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete a_i_U;
    delete b_i_U;
    delete C_assign_U;
    delete grp_matrix_multiply_alt2_fu_204;
}

void matrix_multiply_top::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        c2_0_reg_171 = c_1_reg_438.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln51_fu_271_p2.read()))) {
        c2_0_reg_171 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        c4_0_reg_193 = c_2_reg_469.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln61_fu_331_p2.read()))) {
        c4_0_reg_193 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_0_reg_149 = c_reg_407.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln46_fu_211_p2.read(), ap_const_lv1_0))) {
        c_0_reg_149 = ap_const_lv2_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_matrix_multiply_alt2_fu_204_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
             esl_seteq<1,1,1>(icmp_ln51_fu_271_p2.read(), ap_const_lv1_1))) {
            grp_matrix_multiply_alt2_fu_204_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_matrix_multiply_alt2_fu_204_ap_ready.read())) {
            grp_matrix_multiply_alt2_fu_204_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln46_fu_211_p2.read(), ap_const_lv1_1))) {
        r1_0_reg_160 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(icmp_ln52_fu_305_p2.read(), ap_const_lv1_1))) {
        r1_0_reg_160 = r_1_reg_425.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(icmp_ln62_fu_365_p2.read(), ap_const_lv1_1))) {
        r3_0_reg_182 = r_2_reg_456.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(grp_matrix_multiply_alt2_fu_204_ap_done.read(), ap_const_logic_1))) {
        r3_0_reg_182 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln47_fu_245_p2.read(), ap_const_lv1_1))) {
        r_0_reg_138 = r_reg_394.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_reg_138 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        c_1_reg_438 = c_1_fu_311_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        c_2_reg_469 = c_2_fu_371_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_reg_407 = c_fu_251_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_1_reg_425 = r_1_fu_277_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_2_reg_456 = r_2_fu_337_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_reg_394 = r_fu_217_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln47_fu_245_p2.read()))) {
        sext_ln48_reg_412 = sext_ln48_fu_266_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_fu_305_p2.read()))) {
        sext_ln53_reg_443 = sext_ln53_fu_326_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln62_fu_365_p2.read()))) {
        sext_ln63_reg_474 = sext_ln63_fu_386_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln46_fu_211_p2.read(), ap_const_lv1_0))) {
        sub_ln48_reg_399 = sub_ln48_fu_239_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln51_fu_271_p2.read()))) {
        sub_ln53_reg_430 = sub_ln53_fu_299_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln61_fu_331_p2.read()))) {
        sub_ln63_reg_461 = sub_ln63_fu_359_p2.read();
    }
}

void matrix_multiply_top::thread_A_address0() {
    A_address0 =  (sc_lv<4>) (sext_ln48_fu_266_p1.read());
}

void matrix_multiply_top::thread_A_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void matrix_multiply_top::thread_B_address0() {
    B_address0 =  (sc_lv<4>) (sext_ln53_fu_326_p1.read());
}

void matrix_multiply_top::thread_B_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void matrix_multiply_top::thread_C_address0() {
    C_address0 =  (sc_lv<4>) (sext_ln63_reg_474.read());
}

void matrix_multiply_top::thread_C_assign_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        C_assign_address0 =  (sc_lv<4>) (sext_ln63_fu_386_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        C_assign_address0 = grp_matrix_multiply_alt2_fu_204_C_address0.read();
    } else {
        C_assign_address0 = "XXXX";
    }
}

void matrix_multiply_top::thread_C_assign_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        C_assign_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        C_assign_ce0 = grp_matrix_multiply_alt2_fu_204_C_ce0.read();
    } else {
        C_assign_ce0 = ap_const_logic_0;
    }
}

void matrix_multiply_top::thread_C_assign_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        C_assign_we0 = grp_matrix_multiply_alt2_fu_204_C_we0.read();
    } else {
        C_assign_we0 = ap_const_logic_0;
    }
}

void matrix_multiply_top::thread_C_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        C_ce0 = ap_const_logic_1;
    } else {
        C_ce0 = ap_const_logic_0;
    }
}

void matrix_multiply_top::thread_C_d0() {
    C_d0 = C_assign_q0.read();
}

void matrix_multiply_top::thread_C_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        C_we0 = ap_const_logic_1;
    } else {
        C_we0 = ap_const_logic_0;
    }
}

void matrix_multiply_top::thread_a_i_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_i_address0 =  (sc_lv<4>) (sext_ln48_reg_412.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        a_i_address0 = grp_matrix_multiply_alt2_fu_204_A_address0.read();
    } else {
        a_i_address0 = "XXXX";
    }
}

void matrix_multiply_top::thread_a_i_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_i_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        a_i_ce0 = grp_matrix_multiply_alt2_fu_204_A_ce0.read();
    } else {
        a_i_ce0 = ap_const_logic_0;
    }
}

void matrix_multiply_top::thread_a_i_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_i_we0 = ap_const_logic_1;
    } else {
        a_i_we0 = ap_const_logic_0;
    }
}

void matrix_multiply_top::thread_add_ln48_fu_261_p2() {
    add_ln48_fu_261_p2 = (!sub_ln48_reg_399.read().is_01() || !zext_ln48_2_fu_257_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(sub_ln48_reg_399.read()) + sc_biguint<5>(zext_ln48_2_fu_257_p1.read()));
}

void matrix_multiply_top::thread_add_ln53_fu_321_p2() {
    add_ln53_fu_321_p2 = (!sub_ln53_reg_430.read().is_01() || !zext_ln53_2_fu_317_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(sub_ln53_reg_430.read()) + sc_biguint<5>(zext_ln53_2_fu_317_p1.read()));
}

void matrix_multiply_top::thread_add_ln63_fu_381_p2() {
    add_ln63_fu_381_p2 = (!sub_ln63_reg_461.read().is_01() || !zext_ln63_2_fu_377_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(sub_ln63_reg_461.read()) + sc_biguint<5>(zext_ln63_2_fu_377_p1.read()));
}

void matrix_multiply_top::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void matrix_multiply_top::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void matrix_multiply_top::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void matrix_multiply_top::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void matrix_multiply_top::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void matrix_multiply_top::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void matrix_multiply_top::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void matrix_multiply_top::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void matrix_multiply_top::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void matrix_multiply_top::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void matrix_multiply_top::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void matrix_multiply_top::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln61_fu_331_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrix_multiply_top::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrix_multiply_top::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln61_fu_331_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrix_multiply_top::thread_b_i_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        b_i_address0 =  (sc_lv<4>) (sext_ln53_reg_443.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        b_i_address0 = grp_matrix_multiply_alt2_fu_204_B_address0.read();
    } else {
        b_i_address0 = "XXXX";
    }
}

void matrix_multiply_top::thread_b_i_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        b_i_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        b_i_ce0 = grp_matrix_multiply_alt2_fu_204_B_ce0.read();
    } else {
        b_i_ce0 = ap_const_logic_0;
    }
}

void matrix_multiply_top::thread_b_i_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        b_i_we0 = ap_const_logic_1;
    } else {
        b_i_we0 = ap_const_logic_0;
    }
}

void matrix_multiply_top::thread_c_1_fu_311_p2() {
    c_1_fu_311_p2 = (!c2_0_reg_171.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(c2_0_reg_171.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrix_multiply_top::thread_c_2_fu_371_p2() {
    c_2_fu_371_p2 = (!c4_0_reg_193.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(c4_0_reg_193.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrix_multiply_top::thread_c_fu_251_p2() {
    c_fu_251_p2 = (!c_0_reg_149.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(c_0_reg_149.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrix_multiply_top::thread_grp_matrix_multiply_alt2_fu_204_ap_start() {
    grp_matrix_multiply_alt2_fu_204_ap_start = grp_matrix_multiply_alt2_fu_204_ap_start_reg.read();
}

void matrix_multiply_top::thread_icmp_ln46_fu_211_p2() {
    icmp_ln46_fu_211_p2 = (!r_0_reg_138.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(r_0_reg_138.read() == ap_const_lv2_3);
}

void matrix_multiply_top::thread_icmp_ln47_fu_245_p2() {
    icmp_ln47_fu_245_p2 = (!c_0_reg_149.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(c_0_reg_149.read() == ap_const_lv2_3);
}

void matrix_multiply_top::thread_icmp_ln51_fu_271_p2() {
    icmp_ln51_fu_271_p2 = (!r1_0_reg_160.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(r1_0_reg_160.read() == ap_const_lv2_3);
}

void matrix_multiply_top::thread_icmp_ln52_fu_305_p2() {
    icmp_ln52_fu_305_p2 = (!c2_0_reg_171.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(c2_0_reg_171.read() == ap_const_lv2_3);
}

void matrix_multiply_top::thread_icmp_ln61_fu_331_p2() {
    icmp_ln61_fu_331_p2 = (!r3_0_reg_182.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(r3_0_reg_182.read() == ap_const_lv2_3);
}

void matrix_multiply_top::thread_icmp_ln62_fu_365_p2() {
    icmp_ln62_fu_365_p2 = (!c4_0_reg_193.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(c4_0_reg_193.read() == ap_const_lv2_3);
}

void matrix_multiply_top::thread_r_1_fu_277_p2() {
    r_1_fu_277_p2 = (!r1_0_reg_160.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(r1_0_reg_160.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrix_multiply_top::thread_r_2_fu_337_p2() {
    r_2_fu_337_p2 = (!r3_0_reg_182.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(r3_0_reg_182.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrix_multiply_top::thread_r_fu_217_p2() {
    r_fu_217_p2 = (!r_0_reg_138.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(r_0_reg_138.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrix_multiply_top::thread_sext_ln48_fu_266_p1() {
    sext_ln48_fu_266_p1 = esl_sext<64,5>(add_ln48_fu_261_p2.read());
}

void matrix_multiply_top::thread_sext_ln53_fu_326_p1() {
    sext_ln53_fu_326_p1 = esl_sext<64,5>(add_ln53_fu_321_p2.read());
}

void matrix_multiply_top::thread_sext_ln63_fu_386_p1() {
    sext_ln63_fu_386_p1 = esl_sext<64,5>(add_ln63_fu_381_p2.read());
}

void matrix_multiply_top::thread_sub_ln48_fu_239_p2() {
    sub_ln48_fu_239_p2 = (!zext_ln48_1_fu_235_p1.read().is_01() || !zext_ln48_fu_223_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln48_1_fu_235_p1.read()) - sc_biguint<5>(zext_ln48_fu_223_p1.read()));
}

void matrix_multiply_top::thread_sub_ln53_fu_299_p2() {
    sub_ln53_fu_299_p2 = (!zext_ln53_1_fu_295_p1.read().is_01() || !zext_ln53_fu_283_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln53_1_fu_295_p1.read()) - sc_biguint<5>(zext_ln53_fu_283_p1.read()));
}

void matrix_multiply_top::thread_sub_ln63_fu_359_p2() {
    sub_ln63_fu_359_p2 = (!zext_ln63_1_fu_355_p1.read().is_01() || !zext_ln63_fu_343_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln63_1_fu_355_p1.read()) - sc_biguint<5>(zext_ln63_fu_343_p1.read()));
}

void matrix_multiply_top::thread_tmp_3_fu_227_p3() {
    tmp_3_fu_227_p3 = esl_concat<2,2>(r_0_reg_138.read(), ap_const_lv2_0);
}

void matrix_multiply_top::thread_tmp_4_fu_287_p3() {
    tmp_4_fu_287_p3 = esl_concat<2,2>(r1_0_reg_160.read(), ap_const_lv2_0);
}

void matrix_multiply_top::thread_tmp_5_fu_347_p3() {
    tmp_5_fu_347_p3 = esl_concat<2,2>(r3_0_reg_182.read(), ap_const_lv2_0);
}

void matrix_multiply_top::thread_zext_ln48_1_fu_235_p1() {
    zext_ln48_1_fu_235_p1 = esl_zext<5,4>(tmp_3_fu_227_p3.read());
}

void matrix_multiply_top::thread_zext_ln48_2_fu_257_p1() {
    zext_ln48_2_fu_257_p1 = esl_zext<5,2>(c_0_reg_149.read());
}

void matrix_multiply_top::thread_zext_ln48_fu_223_p1() {
    zext_ln48_fu_223_p1 = esl_zext<5,2>(r_0_reg_138.read());
}

void matrix_multiply_top::thread_zext_ln53_1_fu_295_p1() {
    zext_ln53_1_fu_295_p1 = esl_zext<5,4>(tmp_4_fu_287_p3.read());
}

void matrix_multiply_top::thread_zext_ln53_2_fu_317_p1() {
    zext_ln53_2_fu_317_p1 = esl_zext<5,2>(c2_0_reg_171.read());
}

void matrix_multiply_top::thread_zext_ln53_fu_283_p1() {
    zext_ln53_fu_283_p1 = esl_zext<5,2>(r1_0_reg_160.read());
}

void matrix_multiply_top::thread_zext_ln63_1_fu_355_p1() {
    zext_ln63_1_fu_355_p1 = esl_zext<5,4>(tmp_5_fu_347_p3.read());
}

void matrix_multiply_top::thread_zext_ln63_2_fu_377_p1() {
    zext_ln63_2_fu_377_p1 = esl_zext<5,2>(c4_0_reg_193.read());
}

void matrix_multiply_top::thread_zext_ln63_fu_343_p1() {
    zext_ln63_fu_343_p1 = esl_zext<5,2>(r3_0_reg_182.read());
}

void matrix_multiply_top::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln46_fu_211_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln47_fu_245_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln51_fu_271_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln52_fu_305_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_matrix_multiply_alt2_fu_204_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(icmp_ln61_fu_331_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(icmp_ln62_fu_365_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void matrix_multiply_top::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_address0\" :  \"" << B_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_ce0\" :  \"" << B_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_q0\" :  \"" << B_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_address0\" :  \"" << C_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_ce0\" :  \"" << C_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_we0\" :  \"" << C_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_d0\" :  \"" << C_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

