

================================================================
== Vivado HLS Report for 'matrix_multiply_top'
================================================================
* Date:           Wed Jul 14 11:34:18 2021

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        proj_matrix_multiply
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160t-fbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 4.00 ns | 4.808 ns |   0.50 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      119|      119| 0.572 us | 0.572 us |  119|  119|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |               |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |- a_row_loop   |       24|       24|         8|          -|          -|     3|    no    |
        | + a_col_loop  |        6|        6|         2|          -|          -|     3|    no    |
        |- b_row_loop   |       24|       24|         8|          -|          -|     3|    no    |
        | + b_col_loop  |        6|        6|         2|          -|          -|     3|    no    |
        |- c_row_loop   |       24|       24|         8|          -|          -|     3|    no    |
        | + c_col_loop  |        6|        6|         2|          -|          -|     3|    no    |
        +---------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 5 
3 --> 4 2 
4 --> 3 
5 --> 8 6 
6 --> 7 5 
7 --> 6 
8 --> 9 
9 --> 10 
10 --> 11 9 
11 --> 10 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.06>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([9 x float]* %A) nounwind, !map !14"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([9 x float]* %B) nounwind, !map !20"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([9 x float]* %C) nounwind, !map !24"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([20 x i8]* @matrix_multiply_top_s) nounwind"   --->   Operation 15 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%a_i = alloca [9 x float], align 4" [matrix_multiply.cpp:41]   --->   Operation 16 'alloca' 'a_i' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%b_i = alloca [9 x float], align 4" [matrix_multiply.cpp:42]   --->   Operation 17 'alloca' 'b_i' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%C_assign = alloca [9 x float], align 4"   --->   Operation 18 'alloca' 'C_assign' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_1 : Operation 19 [1/1] (1.06ns)   --->   "br label %1" [matrix_multiply.cpp:46]   --->   Operation 19 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 1.32>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%r_0 = phi i2 [ 0, %0 ], [ %r, %a_row_loop_end ]"   --->   Operation 20 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.64ns)   --->   "%icmp_ln46 = icmp eq i2 %r_0, -1" [matrix_multiply.cpp:46]   --->   Operation 21 'icmp' 'icmp_ln46' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind"   --->   Operation 22 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (1.00ns)   --->   "%r = add i2 %r_0, 1" [matrix_multiply.cpp:46]   --->   Operation 23 'add' 'r' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "br i1 %icmp_ln46, label %.preheader.preheader, label %a_row_loop_begin" [matrix_multiply.cpp:46]   --->   Operation 24 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str) nounwind" [matrix_multiply.cpp:46]   --->   Operation 25 'specloopname' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str) nounwind" [matrix_multiply.cpp:46]   --->   Operation 26 'specregionbegin' 'tmp' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln48 = zext i2 %r_0 to i5" [matrix_multiply.cpp:48]   --->   Operation 27 'zext' 'zext_ln48' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_3 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %r_0, i2 0)" [matrix_multiply.cpp:48]   --->   Operation 28 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln48_1 = zext i4 %tmp_3 to i5" [matrix_multiply.cpp:48]   --->   Operation 29 'zext' 'zext_ln48_1' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (1.32ns)   --->   "%sub_ln48 = sub i5 %zext_ln48_1, %zext_ln48" [matrix_multiply.cpp:48]   --->   Operation 30 'sub' 'sub_ln48' <Predicate = (!icmp_ln46)> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (1.06ns)   --->   "br label %2" [matrix_multiply.cpp:47]   --->   Operation 31 'br' <Predicate = (!icmp_ln46)> <Delay = 1.06>
ST_2 : Operation 32 [1/1] (1.06ns)   --->   "br label %.preheader" [matrix_multiply.cpp:51]   --->   Operation 32 'br' <Predicate = (icmp_ln46)> <Delay = 1.06>

State 3 <SV = 2> <Delay = 2.76>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%c_0 = phi i2 [ 0, %a_row_loop_begin ], [ %c, %3 ]"   --->   Operation 33 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.64ns)   --->   "%icmp_ln47 = icmp eq i2 %c_0, -1" [matrix_multiply.cpp:47]   --->   Operation 34 'icmp' 'icmp_ln47' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind"   --->   Operation 35 'speclooptripcount' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (1.00ns)   --->   "%c = add i2 %c_0, 1" [matrix_multiply.cpp:47]   --->   Operation 36 'add' 'c' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "br i1 %icmp_ln47, label %a_row_loop_end, label %3" [matrix_multiply.cpp:47]   --->   Operation 37 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln48_2 = zext i2 %c_0 to i5" [matrix_multiply.cpp:48]   --->   Operation 38 'zext' 'zext_ln48_2' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (1.33ns)   --->   "%add_ln48 = add i5 %sub_ln48, %zext_ln48_2" [matrix_multiply.cpp:48]   --->   Operation 39 'add' 'add_ln48' <Predicate = (!icmp_ln47)> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%sext_ln48 = sext i5 %add_ln48 to i64" [matrix_multiply.cpp:48]   --->   Operation 40 'sext' 'sext_ln48' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [9 x float]* %A, i64 0, i64 %sext_ln48" [matrix_multiply.cpp:48]   --->   Operation 41 'getelementptr' 'A_addr' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 42 [2/2] (1.42ns)   --->   "%A_load = load float* %A_addr, align 4" [matrix_multiply.cpp:48]   --->   Operation 42 'load' 'A_load' <Predicate = (!icmp_ln47)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str, i32 %tmp) nounwind" [matrix_multiply.cpp:50]   --->   Operation 43 'specregionend' 'empty_4' <Predicate = (icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "br label %1" [matrix_multiply.cpp:46]   --->   Operation 44 'br' <Predicate = (icmp_ln47)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 2.85>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str1) nounwind" [matrix_multiply.cpp:47]   --->   Operation 45 'specloopname' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%a_i_addr = getelementptr [9 x float]* %a_i, i64 0, i64 %sext_ln48" [matrix_multiply.cpp:48]   --->   Operation 46 'getelementptr' 'a_i_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/2] (1.42ns)   --->   "%A_load = load float* %A_addr, align 4" [matrix_multiply.cpp:48]   --->   Operation 47 'load' 'A_load' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 48 [1/1] (1.42ns)   --->   "store float %A_load, float* %a_i_addr, align 4" [matrix_multiply.cpp:48]   --->   Operation 48 'store' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "br label %2" [matrix_multiply.cpp:47]   --->   Operation 49 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 2> <Delay = 1.32>
ST_5 : Operation 50 [1/1] (0.00ns)   --->   "%r1_0 = phi i2 [ %r_1, %b_row_loop_end ], [ 0, %.preheader.preheader ]"   --->   Operation 50 'phi' 'r1_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 51 [1/1] (0.64ns)   --->   "%icmp_ln51 = icmp eq i2 %r1_0, -1" [matrix_multiply.cpp:51]   --->   Operation 51 'icmp' 'icmp_ln51' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind"   --->   Operation 52 'speclooptripcount' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (1.00ns)   --->   "%r_1 = add i2 %r1_0, 1" [matrix_multiply.cpp:51]   --->   Operation 53 'add' 'r_1' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "br i1 %icmp_ln51, label %6, label %b_row_loop_begin" [matrix_multiply.cpp:51]   --->   Operation 54 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str2) nounwind" [matrix_multiply.cpp:51]   --->   Operation 55 'specloopname' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str2) nounwind" [matrix_multiply.cpp:51]   --->   Operation 56 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i2 %r1_0 to i5" [matrix_multiply.cpp:53]   --->   Operation 57 'zext' 'zext_ln53' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_4 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %r1_0, i2 0)" [matrix_multiply.cpp:53]   --->   Operation 58 'bitconcatenate' 'tmp_4' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln53_1 = zext i4 %tmp_4 to i5" [matrix_multiply.cpp:53]   --->   Operation 59 'zext' 'zext_ln53_1' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (1.32ns)   --->   "%sub_ln53 = sub i5 %zext_ln53_1, %zext_ln53" [matrix_multiply.cpp:53]   --->   Operation 60 'sub' 'sub_ln53' <Predicate = (!icmp_ln51)> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 61 [1/1] (1.06ns)   --->   "br label %4" [matrix_multiply.cpp:52]   --->   Operation 61 'br' <Predicate = (!icmp_ln51)> <Delay = 1.06>
ST_5 : Operation 62 [2/2] (0.00ns)   --->   "call fastcc void @matrix_multiply_alt2([9 x float]* %a_i, [9 x float]* %b_i, [9 x float]* %C_assign) nounwind" [C:/Xilinx/Vivado/2019.2/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:511->C:/Xilinx/Vivado/2019.2/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:58]   --->   Operation 62 'call' <Predicate = (icmp_ln51)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 3> <Delay = 2.76>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%c2_0 = phi i2 [ 0, %b_row_loop_begin ], [ %c_1, %5 ]"   --->   Operation 63 'phi' 'c2_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 64 [1/1] (0.64ns)   --->   "%icmp_ln52 = icmp eq i2 %c2_0, -1" [matrix_multiply.cpp:52]   --->   Operation 64 'icmp' 'icmp_ln52' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind"   --->   Operation 65 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (1.00ns)   --->   "%c_1 = add i2 %c2_0, 1" [matrix_multiply.cpp:52]   --->   Operation 66 'add' 'c_1' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "br i1 %icmp_ln52, label %b_row_loop_end, label %5" [matrix_multiply.cpp:52]   --->   Operation 67 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln53_2 = zext i2 %c2_0 to i5" [matrix_multiply.cpp:53]   --->   Operation 68 'zext' 'zext_ln53_2' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_6 : Operation 69 [1/1] (1.33ns)   --->   "%add_ln53 = add i5 %sub_ln53, %zext_ln53_2" [matrix_multiply.cpp:53]   --->   Operation 69 'add' 'add_ln53' <Predicate = (!icmp_ln52)> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%sext_ln53 = sext i5 %add_ln53 to i64" [matrix_multiply.cpp:53]   --->   Operation 70 'sext' 'sext_ln53' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_6 : Operation 71 [1/1] (0.00ns)   --->   "%B_addr = getelementptr [9 x float]* %B, i64 0, i64 %sext_ln53" [matrix_multiply.cpp:53]   --->   Operation 71 'getelementptr' 'B_addr' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_6 : Operation 72 [2/2] (1.42ns)   --->   "%B_load = load float* %B_addr, align 4" [matrix_multiply.cpp:53]   --->   Operation 72 'load' 'B_load' <Predicate = (!icmp_ln52)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_6 : Operation 73 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str2, i32 %tmp_1) nounwind" [matrix_multiply.cpp:55]   --->   Operation 73 'specregionend' 'empty_7' <Predicate = (icmp_ln52)> <Delay = 0.00>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "br label %.preheader" [matrix_multiply.cpp:51]   --->   Operation 74 'br' <Predicate = (icmp_ln52)> <Delay = 0.00>

State 7 <SV = 4> <Delay = 2.85>
ST_7 : Operation 75 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str3) nounwind" [matrix_multiply.cpp:52]   --->   Operation 75 'specloopname' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 76 [1/1] (0.00ns)   --->   "%b_i_addr = getelementptr [9 x float]* %b_i, i64 0, i64 %sext_ln53" [matrix_multiply.cpp:53]   --->   Operation 76 'getelementptr' 'b_i_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 77 [1/2] (1.42ns)   --->   "%B_load = load float* %B_addr, align 4" [matrix_multiply.cpp:53]   --->   Operation 77 'load' 'B_load' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_7 : Operation 78 [1/1] (1.42ns)   --->   "store float %B_load, float* %b_i_addr, align 4" [matrix_multiply.cpp:53]   --->   Operation 78 'store' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_7 : Operation 79 [1/1] (0.00ns)   --->   "br label %4" [matrix_multiply.cpp:52]   --->   Operation 79 'br' <Predicate = true> <Delay = 0.00>

State 8 <SV = 3> <Delay = 1.06>
ST_8 : Operation 80 [1/2] (0.00ns)   --->   "call fastcc void @matrix_multiply_alt2([9 x float]* %a_i, [9 x float]* %b_i, [9 x float]* %C_assign) nounwind" [C:/Xilinx/Vivado/2019.2/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:511->C:/Xilinx/Vivado/2019.2/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:58]   --->   Operation 80 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 81 [1/1] (1.06ns)   --->   "br label %7" [matrix_multiply.cpp:61]   --->   Operation 81 'br' <Predicate = true> <Delay = 1.06>

State 9 <SV = 4> <Delay = 1.32>
ST_9 : Operation 82 [1/1] (0.00ns)   --->   "%r3_0 = phi i2 [ 0, %6 ], [ %r_2, %c_row_loop_end ]"   --->   Operation 82 'phi' 'r3_0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 83 [1/1] (0.64ns)   --->   "%icmp_ln61 = icmp eq i2 %r3_0, -1" [matrix_multiply.cpp:61]   --->   Operation 83 'icmp' 'icmp_ln61' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 84 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind"   --->   Operation 84 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 85 [1/1] (1.00ns)   --->   "%r_2 = add i2 %r3_0, 1" [matrix_multiply.cpp:61]   --->   Operation 85 'add' 'r_2' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 86 [1/1] (0.00ns)   --->   "br i1 %icmp_ln61, label %10, label %c_row_loop_begin" [matrix_multiply.cpp:61]   --->   Operation 86 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 87 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str4) nounwind" [matrix_multiply.cpp:61]   --->   Operation 87 'specloopname' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_9 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str4) nounwind" [matrix_multiply.cpp:61]   --->   Operation 88 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_9 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln63 = zext i2 %r3_0 to i5" [matrix_multiply.cpp:63]   --->   Operation 89 'zext' 'zext_ln63' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_9 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_5 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %r3_0, i2 0)" [matrix_multiply.cpp:63]   --->   Operation 90 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_9 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln63_1 = zext i4 %tmp_5 to i5" [matrix_multiply.cpp:63]   --->   Operation 91 'zext' 'zext_ln63_1' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_9 : Operation 92 [1/1] (1.32ns)   --->   "%sub_ln63 = sub i5 %zext_ln63_1, %zext_ln63" [matrix_multiply.cpp:63]   --->   Operation 92 'sub' 'sub_ln63' <Predicate = (!icmp_ln61)> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 93 [1/1] (1.06ns)   --->   "br label %8" [matrix_multiply.cpp:62]   --->   Operation 93 'br' <Predicate = (!icmp_ln61)> <Delay = 1.06>
ST_9 : Operation 94 [1/1] (0.00ns)   --->   "ret void" [matrix_multiply.cpp:67]   --->   Operation 94 'ret' <Predicate = (icmp_ln61)> <Delay = 0.00>

State 10 <SV = 5> <Delay = 2.76>
ST_10 : Operation 95 [1/1] (0.00ns)   --->   "%c4_0 = phi i2 [ 0, %c_row_loop_begin ], [ %c_2, %9 ]"   --->   Operation 95 'phi' 'c4_0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 96 [1/1] (0.64ns)   --->   "%icmp_ln62 = icmp eq i2 %c4_0, -1" [matrix_multiply.cpp:62]   --->   Operation 96 'icmp' 'icmp_ln62' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 97 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind"   --->   Operation 97 'speclooptripcount' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 98 [1/1] (1.00ns)   --->   "%c_2 = add i2 %c4_0, 1" [matrix_multiply.cpp:62]   --->   Operation 98 'add' 'c_2' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 99 [1/1] (0.00ns)   --->   "br i1 %icmp_ln62, label %c_row_loop_end, label %9" [matrix_multiply.cpp:62]   --->   Operation 99 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln63_2 = zext i2 %c4_0 to i5" [matrix_multiply.cpp:63]   --->   Operation 100 'zext' 'zext_ln63_2' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_10 : Operation 101 [1/1] (1.33ns)   --->   "%add_ln63 = add i5 %sub_ln63, %zext_ln63_2" [matrix_multiply.cpp:63]   --->   Operation 101 'add' 'add_ln63' <Predicate = (!icmp_ln62)> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 102 [1/1] (0.00ns)   --->   "%sext_ln63 = sext i5 %add_ln63 to i64" [matrix_multiply.cpp:63]   --->   Operation 102 'sext' 'sext_ln63' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_10 : Operation 103 [1/1] (0.00ns)   --->   "%C_assign_addr = getelementptr [9 x float]* %C_assign, i64 0, i64 %sext_ln63" [matrix_multiply.cpp:63]   --->   Operation 103 'getelementptr' 'C_assign_addr' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_10 : Operation 104 [2/2] (1.42ns)   --->   "%C_assign_load = load float* %C_assign_addr, align 4" [matrix_multiply.cpp:63]   --->   Operation 104 'load' 'C_assign_load' <Predicate = (!icmp_ln62)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_10 : Operation 105 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str4, i32 %tmp_2) nounwind" [matrix_multiply.cpp:65]   --->   Operation 105 'specregionend' 'empty_10' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_10 : Operation 106 [1/1] (0.00ns)   --->   "br label %7" [matrix_multiply.cpp:61]   --->   Operation 106 'br' <Predicate = (icmp_ln62)> <Delay = 0.00>

State 11 <SV = 6> <Delay = 2.85>
ST_11 : Operation 107 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str5) nounwind" [matrix_multiply.cpp:62]   --->   Operation 107 'specloopname' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 108 [1/1] (0.00ns)   --->   "%C_addr = getelementptr [9 x float]* %C, i64 0, i64 %sext_ln63" [matrix_multiply.cpp:63]   --->   Operation 108 'getelementptr' 'C_addr' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 109 [1/2] (1.42ns)   --->   "%C_assign_load = load float* %C_assign_addr, align 4" [matrix_multiply.cpp:63]   --->   Operation 109 'load' 'C_assign_load' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_11 : Operation 110 [1/1] (1.42ns)   --->   "store float %C_assign_load, float* %C_addr, align 4" [matrix_multiply.cpp:63]   --->   Operation 110 'store' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_11 : Operation 111 [1/1] (0.00ns)   --->   "br label %8" [matrix_multiply.cpp:62]   --->   Operation 111 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 0.5ns.

 <State 1>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('r') with incoming values : ('r', matrix_multiply.cpp:46) [13]  (1.06 ns)

 <State 2>: 1.32ns
The critical path consists of the following:
	'phi' operation ('r') with incoming values : ('r', matrix_multiply.cpp:46) [13]  (0 ns)
	'sub' operation ('sub_ln48', matrix_multiply.cpp:48) [24]  (1.32 ns)

 <State 3>: 2.76ns
The critical path consists of the following:
	'phi' operation ('c') with incoming values : ('c', matrix_multiply.cpp:47) [27]  (0 ns)
	'add' operation ('add_ln48', matrix_multiply.cpp:48) [35]  (1.34 ns)
	'getelementptr' operation ('A_addr', matrix_multiply.cpp:48) [37]  (0 ns)
	'load' operation ('A_load', matrix_multiply.cpp:48) on array 'A' [39]  (1.43 ns)

 <State 4>: 2.85ns
The critical path consists of the following:
	'load' operation ('A_load', matrix_multiply.cpp:48) on array 'A' [39]  (1.43 ns)
	'store' operation ('store_ln48', matrix_multiply.cpp:48) of variable 'A_load', matrix_multiply.cpp:48 on array 'a_i', matrix_multiply.cpp:41 [40]  (1.43 ns)

 <State 5>: 1.32ns
The critical path consists of the following:
	'phi' operation ('r') with incoming values : ('r', matrix_multiply.cpp:51) [48]  (0 ns)
	'sub' operation ('sub_ln53', matrix_multiply.cpp:53) [59]  (1.32 ns)

 <State 6>: 2.76ns
The critical path consists of the following:
	'phi' operation ('c') with incoming values : ('c', matrix_multiply.cpp:52) [62]  (0 ns)
	'add' operation ('add_ln53', matrix_multiply.cpp:53) [70]  (1.34 ns)
	'getelementptr' operation ('B_addr', matrix_multiply.cpp:53) [72]  (0 ns)
	'load' operation ('B_load', matrix_multiply.cpp:53) on array 'B' [74]  (1.43 ns)

 <State 7>: 2.85ns
The critical path consists of the following:
	'load' operation ('B_load', matrix_multiply.cpp:53) on array 'B' [74]  (1.43 ns)
	'store' operation ('store_ln53', matrix_multiply.cpp:53) of variable 'B_load', matrix_multiply.cpp:53 on array 'b_i', matrix_multiply.cpp:42 [75]  (1.43 ns)

 <State 8>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('r') with incoming values : ('r', matrix_multiply.cpp:61) [84]  (1.06 ns)

 <State 9>: 1.32ns
The critical path consists of the following:
	'phi' operation ('r') with incoming values : ('r', matrix_multiply.cpp:61) [84]  (0 ns)
	'sub' operation ('sub_ln63', matrix_multiply.cpp:63) [95]  (1.32 ns)

 <State 10>: 2.76ns
The critical path consists of the following:
	'phi' operation ('c') with incoming values : ('c', matrix_multiply.cpp:62) [98]  (0 ns)
	'add' operation ('add_ln63', matrix_multiply.cpp:63) [106]  (1.34 ns)
	'getelementptr' operation ('C_assign_addr', matrix_multiply.cpp:63) [109]  (0 ns)
	'load' operation ('C_assign_load', matrix_multiply.cpp:63) on array 'C_assign' [110]  (1.43 ns)

 <State 11>: 2.85ns
The critical path consists of the following:
	'load' operation ('C_assign_load', matrix_multiply.cpp:63) on array 'C_assign' [110]  (1.43 ns)
	'store' operation ('store_ln63', matrix_multiply.cpp:63) of variable 'C_assign_load', matrix_multiply.cpp:63 on array 'C' [111]  (1.43 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
