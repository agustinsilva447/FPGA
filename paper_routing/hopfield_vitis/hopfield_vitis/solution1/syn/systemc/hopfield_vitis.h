// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _hopfield_vitis_HH_
#define _hopfield_vitis_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "hopfield_vitis_fabkb.h"
#include "hopfield_vitis_fmcud.h"
#include "hopfield_vitis_fddEe.h"
#include "hopfield_vitis_feeOg.h"
#include "hopfield_vitis_CRTL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CRTL_BUS_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CRTL_BUS_DATA_WIDTH = 32>
struct hopfield_vitis : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_lv<32> > V_Addr_A;
    sc_out< sc_logic > V_EN_A;
    sc_out< sc_lv<4> > V_WEN_A;
    sc_out< sc_lv<32> > V_Din_A;
    sc_in< sc_lv<32> > V_Dout_A;
    sc_out< sc_logic > V_Clk_A;
    sc_out< sc_logic > V_Rst_A;
    sc_out< sc_lv<32> > U_1_Addr_A;
    sc_out< sc_logic > U_1_EN_A;
    sc_out< sc_lv<4> > U_1_WEN_A;
    sc_out< sc_lv<32> > U_1_Din_A;
    sc_in< sc_lv<32> > U_1_Dout_A;
    sc_out< sc_logic > U_1_Clk_A;
    sc_out< sc_logic > U_1_Rst_A;
    sc_in< sc_logic > s_axi_CRTL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CRTL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH/8> > s_axi_CRTL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CRTL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CRTL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CRTL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    hopfield_vitis(sc_module_name name);
    SC_HAS_PROCESS(hopfield_vitis);

    ~hopfield_vitis();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    hopfield_vitis_CRTL_BUS_s_axi<C_S_AXI_CRTL_BUS_ADDR_WIDTH,C_S_AXI_CRTL_BUS_DATA_WIDTH>* hopfield_vitis_CRTL_BUS_s_axi_U;
    hopfield_vitis_fabkb<1,5,32,32,32>* hopfield_vitis_fabkb_U1;
    hopfield_vitis_fmcud<1,4,32,32,32>* hopfield_vitis_fmcud_U2;
    hopfield_vitis_fddEe<1,16,32,32,32>* hopfield_vitis_fddEe_U3;
    hopfield_vitis_feeOg<1,9,32,32,32>* hopfield_vitis_feeOg_U4;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<39> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > l;
    sc_signal< sc_lv<4> > x_fu_149_p2;
    sc_signal< sc_lv<4> > x_reg_227;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > shl_ln_fu_159_p3;
    sc_signal< sc_lv<6> > shl_ln_reg_232;
    sc_signal< sc_lv<1> > icmp_ln17_fu_143_p2;
    sc_signal< sc_lv<6> > V_addr_reg_237;
    sc_signal< sc_lv<4> > i_fu_188_p2;
    sc_signal< sc_lv<4> > i_reg_245;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln21_fu_194_p2;
    sc_signal< sc_lv<1> > icmp_ln21_reg_250;
    sc_signal< sc_lv<1> > icmp_ln19_fu_182_p2;
    sc_signal< sc_lv<64> > zext_ln25_fu_205_p1;
    sc_signal< sc_lv<64> > zext_ln25_reg_254;
    sc_signal< sc_lv<32> > U_1_load_reg_264;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > grp_fu_124_p2;
    sc_signal< sc_lv<32> > x_assign_reg_279;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > grp_fu_134_p2;
    sc_signal< sc_lv<32> > tmp_i_i_reg_284;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<32> > grp_fu_119_p2;
    sc_signal< sc_lv<32> > tmp_4_reg_289;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<32> > grp_fu_129_p2;
    sc_signal< sc_lv<32> > tmp_5_reg_294;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< sc_lv<4> > x_0_reg_96;
    sc_signal< sc_lv<4> > i_0_reg_108;
    sc_signal< sc_logic > ap_CS_fsm_state39;
    sc_signal< sc_lv<64> > zext_ln23_fu_173_p1;
    sc_signal< sc_lv<32> > U_1_Addr_A_orig;
    sc_signal< sc_lv<32> > V_Addr_A_orig;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<32> > grp_fu_124_p0;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<3> > trunc_ln23_fu_155_p1;
    sc_signal< sc_lv<6> > zext_ln17_fu_139_p1;
    sc_signal< sc_lv<6> > add_ln23_fu_167_p2;
    sc_signal< sc_lv<6> > zext_ln19_fu_178_p1;
    sc_signal< sc_lv<6> > add_ln25_fu_200_p2;
    sc_signal< sc_lv<32> > bitcast_ln25_fu_210_p1;
    sc_signal< sc_lv<32> > xor_ln25_fu_213_p2;
    sc_signal< sc_lv<39> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<39> ap_ST_fsm_state1;
    static const sc_lv<39> ap_ST_fsm_state2;
    static const sc_lv<39> ap_ST_fsm_state3;
    static const sc_lv<39> ap_ST_fsm_state4;
    static const sc_lv<39> ap_ST_fsm_state5;
    static const sc_lv<39> ap_ST_fsm_state6;
    static const sc_lv<39> ap_ST_fsm_state7;
    static const sc_lv<39> ap_ST_fsm_state8;
    static const sc_lv<39> ap_ST_fsm_state9;
    static const sc_lv<39> ap_ST_fsm_state10;
    static const sc_lv<39> ap_ST_fsm_state11;
    static const sc_lv<39> ap_ST_fsm_state12;
    static const sc_lv<39> ap_ST_fsm_state13;
    static const sc_lv<39> ap_ST_fsm_state14;
    static const sc_lv<39> ap_ST_fsm_state15;
    static const sc_lv<39> ap_ST_fsm_state16;
    static const sc_lv<39> ap_ST_fsm_state17;
    static const sc_lv<39> ap_ST_fsm_state18;
    static const sc_lv<39> ap_ST_fsm_state19;
    static const sc_lv<39> ap_ST_fsm_state20;
    static const sc_lv<39> ap_ST_fsm_state21;
    static const sc_lv<39> ap_ST_fsm_state22;
    static const sc_lv<39> ap_ST_fsm_state23;
    static const sc_lv<39> ap_ST_fsm_state24;
    static const sc_lv<39> ap_ST_fsm_state25;
    static const sc_lv<39> ap_ST_fsm_state26;
    static const sc_lv<39> ap_ST_fsm_state27;
    static const sc_lv<39> ap_ST_fsm_state28;
    static const sc_lv<39> ap_ST_fsm_state29;
    static const sc_lv<39> ap_ST_fsm_state30;
    static const sc_lv<39> ap_ST_fsm_state31;
    static const sc_lv<39> ap_ST_fsm_state32;
    static const sc_lv<39> ap_ST_fsm_state33;
    static const sc_lv<39> ap_ST_fsm_state34;
    static const sc_lv<39> ap_ST_fsm_state35;
    static const sc_lv<39> ap_ST_fsm_state36;
    static const sc_lv<39> ap_ST_fsm_state37;
    static const sc_lv<39> ap_ST_fsm_state38;
    static const sc_lv<39> ap_ST_fsm_state39;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_80000000;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_U_1_Addr_A();
    void thread_U_1_Addr_A_orig();
    void thread_U_1_Clk_A();
    void thread_U_1_Din_A();
    void thread_U_1_EN_A();
    void thread_U_1_Rst_A();
    void thread_U_1_WEN_A();
    void thread_V_Addr_A();
    void thread_V_Addr_A_orig();
    void thread_V_Clk_A();
    void thread_V_Din_A();
    void thread_V_EN_A();
    void thread_V_Rst_A();
    void thread_V_WEN_A();
    void thread_add_ln23_fu_167_p2();
    void thread_add_ln25_fu_200_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_bitcast_ln25_fu_210_p1();
    void thread_grp_fu_124_p0();
    void thread_i_fu_188_p2();
    void thread_icmp_ln17_fu_143_p2();
    void thread_icmp_ln19_fu_182_p2();
    void thread_icmp_ln21_fu_194_p2();
    void thread_shl_ln_fu_159_p3();
    void thread_trunc_ln23_fu_155_p1();
    void thread_x_fu_149_p2();
    void thread_xor_ln25_fu_213_p2();
    void thread_zext_ln17_fu_139_p1();
    void thread_zext_ln19_fu_178_p1();
    void thread_zext_ln23_fu_173_p1();
    void thread_zext_ln25_fu_205_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
